%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[202.75363159 346.80508423]
[206.03594971 332.15783691]
[210.63662720 317.86978149]
[216.51753235 304.05926514]
[223.62994385 290.84075928]
[231.91493225 278.32379150]
[241.30381775 266.61209106]
[230.50166321 256.20474243]
[219.69950867 245.79736328]
[208.89735413 235.38998413]
[198.09519958 224.98260498]
[187.21586609 214.65594482]
[176.25994873 204.41055298]
[165.30404663 194.16516113]
[150.72334290 191.12338257]
[145.92855835 176.04621887]
[134.97265625 165.80082703]
[139.75273132 180.01881409]
[139.72309875 195.01878357]
[134.88688660 209.21775818]
[125.75447845 221.11729431]
[113.28962708 229.46160889]
[98.80779266 233.37010193]
[83.83725739 232.43029785]
[69.95791626 226.74137878]
[58.63447952 216.90370178]
[51.06193924 203.95547485]
[48.03944397 189.26313782]
[49.88596344 174.37722778]
[56.40663147 160.86868286]
[66.91330719 150.16308594]
[80.29718781 143.39022827]
[95.14585114 141.26486206]
[109.89228058 144.01129150]
[122.98040009 151.33979797]
[114.93922424 138.67726135]
[106.89805603 126.01473999]
[98.85688019 113.35221863]
[100.47008514 128.26521301]
[98.99024963 143.19204712]
[94.48028564 157.49798584]
[87.13197327 170.57478333]
[77.25775909 181.86636353]
[65.27750397 190.89262390]
[51.70060349 197.26976013]
[37.10436630 200.72660828]
[22.10942650 201.11619568]
[7.35337687 198.42193604]
[-6.53634739 192.75840759]
[-18.96914864 184.36642456]
[-29.41637611 173.60279846]
[-37.43381119 160.92523193]
[-42.68054581 146.87277222]
[-44.93348694 132.04292297]
[-44.09683990 117.06627655]
[-40.20617676 102.57963562]
[-33.42693329 89.19898987]
[-24.04736519 77.49327087]
[-12.46629620 67.96023560]
[0.82384086 61.00521851]
[15.25794220 56.92395401]
[30.22226334 55.88998413]
[45.08051300 57.94726944]
[59.20091248 63.00833130]
[71.98305511 70.85797119]
[82.88343048 81.16242981]
[91.43864441 93.48368835]
[89.21352386 78.64964294]
[86.87803650 63.83257675]
[84.43231201 49.03330612]
[81.98657990 34.23403549]
[78.99180603 19.53603172]
[75.45213318 4.95965719]
[71.91246796 -9.61671829]
[68.37279510 -24.19309425]
[64.83312225 -38.76947021]
[61.29344559 -53.34584427]
[46.64594650 -57.75015640]
[36.23833847 -68.82167053]
[32.79275513 -83.51841736]
[37.13705444 -97.87052917]
[48.00867844 -108.05254364]
[44.46900558 -122.62892151]
[40.92933273 -137.20529175]
[25.86608315 -136.99024963]
[11.13275528 -140.13298035]
[-2.53163195 -146.47587585]
[-14.44167900 -155.70075989]
[-23.99998283 -167.34492493]
[-30.72710228 -180.82429504]
[-34.28561020 -195.46276855]
[-34.49701309 -210.52607727]
[-31.35070229 -225.25863647]
[-25.00449944 -238.92147827]
[-15.77672863 -250.82929993]
[-4.13024855 -260.38476562]
[9.35075760 -267.10864258]
[23.99008751 -270.66360474]
[39.05344009 -270.87133789]
[53.78524399 -267.72146606]
[67.44655609 -261.37194824]
[79.35212708 -252.14129639]
[88.90479279 -240.49250793]
[95.62537384 -227.00987244]
[99.17678833 -212.36967468]
[99.38088989 -197.30627441]
[96.22743988 -182.57524109]
[89.87461853 -168.91546631]
[80.64108276 -157.01213074]
[68.98996735 -147.46228027]
[55.50570679 -140.74496460]
[59.04537964 -126.16859436]
[62.58505249 -111.59221649]
[76.91564178 -107.53021240]
[87.35838318 -96.76892853]
[91.03686523 -82.12874603]
[86.86607361 -67.51705933]
[75.86981964 -56.88551712]
[79.40949249 -42.30914307]
[82.94916534 -27.73276520]
[86.48883820 -13.15639114]
[90.02851105 1.41998470]
[93.56818390 15.99635983]
[103.48261261 4.74006891]
[118.47137451 5.32070351]
[127.48530579 17.31024170]
[123.87967682 31.87044144]
[110.31242371 38.26806641]
[96.78585052 31.78830910]
[99.23158264 46.58758163]
[101.67730713 61.38685226]
[105.86934662 67.47360992]
[104.04756927 76.42453003]
[106.27268982 91.25857544]
[111.51940155 105.31104279]
[119.56057739 117.97357178]
[127.60175323 130.63609314]
[135.64292908 143.29861450]
[145.21804810 154.84492493]
[156.17395020 165.09031677]
[171.53829956 168.86491394]
[175.54943848 183.20924377]
[186.50534058 193.45463562]
[197.46125793 203.70002747]
[205.86669922 207.27581787]
[208.50257874 214.18045044]
[219.30473328 224.58782959]
[230.10688782 234.99519348]
[240.90904236 245.40257263]
[251.71119690 255.80995178]
[263.06539917 245.99171448]
[275.26535034 237.24667358]
[288.21002197 229.64726257]
[301.79211426 223.25648499]
[315.89907837 218.12727356]
[330.41403198 214.30215454]
[345.21667480 211.81280518]
[360.18435669 210.67985535]
[375.19305420 210.91270447]
[390.11840820 212.50941467]
[404.83670044 215.45675659]
[419.22601318 219.73030090]
[433.16705322 225.29464722]
[446.54437256 232.10368347]
[459.24707031 240.10098267]
[471.16989136 249.22027588]
[482.21405029 259.38598633]
[492.28802490 270.51388550]
[501.30831909 282.51177979]
[509.20022583 295.28024292]
[515.89831543 308.71343994]
[521.34710693 322.70007324]
[525.50140381 337.12426758]
[528.32684326 351.86645508]
[529.79992676 366.80447388]
[529.90856934 381.81460571]
[528.65179443 396.77239990]
[526.04003906 411.55392456]
[522.09490967 426.03671265]
[516.84912109 440.10076904]
[510.34616089 453.62948608]
[502.63986206 466.51083374]
[493.79415894 478.63800049]
[483.88229370 489.91055298]
[472.98641968 500.23504639]
[461.19683838 509.52593994]
[448.61120605 517.70623779]
[435.33383179 524.70812988]
[421.47476196 530.47369385]
[407.14883423 534.95501709]
[392.47473145 538.11511230]
[377.57403564 539.92761230]
[362.57028198 540.37768555]
[347.58776855 539.46148682]
[332.75064087 537.18664551]
[318.18185425 533.57196045]
[304.00213623 528.64746094]
[290.32897949 522.45391846]
[277.27569580 515.04266357]
[264.95043945 506.47509766]
[253.45533752 496.82220459]
[242.88566589 486.16400146]
[233.32899475 474.58880615]
[224.86451721 462.19253540]
[217.56237793 449.07788086]
[211.48307800 435.35354614]
[206.67700195 421.13323975]
[203.18397522 406.53482056]
[201.03294373 391.67922974]
[200.24171448 376.68960571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 144]
[13 143]
[14 142]
[16 140]
[17 139]
[35 138]
[36 137]
[37 136]
[38 135]
[67 134]
[68 133]
[69 131]
[70 130]
[71 129]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
