%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[63.21693802 356.57830811]
[61.42762375 371.48568726]
[58.06385803 386.11843872]
[53.16376114 400.31072998]
[46.78285217 413.90176392]
[38.99343109 426.73754883]
[29.88376045 438.67260742]
[19.55705833 449.57174683]
[8.13033485 459.31146240]
[-4.26693821 467.78140259]
[-17.49428749 474.88555908]
[-31.40184021 480.54348755]
[-45.83201218 484.69107056]
[-60.62129593 487.28128052]
[-75.60211945 488.28475952]
[-90.60473633 487.69018555]
[-105.45915985 485.50427246]
[-119.99707794 481.75180054]
[-134.05375671 476.47528076]
[-147.46994019 469.73446655]
[-160.09358215 461.60580444]
[-171.78167725 452.18133545]
[-182.40177917 441.56787109]
[-191.83355713 429.88568115]
[-199.97013855 417.26712036]
[-206.71932983 403.85516357]
[-212.00465393 389.80178833]
[-215.76623535 375.26620483]
[-217.96144104 360.41314697]
[-218.56539917 345.41091919]
[-217.57127380 330.42947388]
[-214.99031067 315.63854980]
[-210.85177612 301.20581055]
[-205.20256042 287.29470825]
[-198.10665894 274.06292725]
[-189.64448547 261.66033936]
[-179.91192627 250.22753906]
[-169.01924133 239.89401245]
[-157.08987427 230.77687073]
[-144.25898743 222.97943115]
[-130.67195129 216.59001160]
[-116.48272705 211.68104553]
[-101.85208893 208.30812073]
[-86.94581604 206.50947571]
[-71.93280029 206.30548096]
[-56.98316574 207.69847107]
[-42.26628876 210.67262268]
[-27.94892693 215.19427490]
[-14.19330883 221.21217346]
[-1.15529561 228.65812683]
[7.62530756 216.49667358]
[16.40591049 204.33522034]
[25.18651390 192.17376709]
[33.96711731 180.01231384]
[42.74771881 167.85084534]
[51.52832413 155.68939209]
[48.14101791 139.21623230]
[57.90821838 125.11245728]
[75.18747711 122.38359070]
[83.78603363 110.09275055]
[81.36747742 95.80651093]
[89.67341614 83.93395233]
[103.92312622 81.30868530]
[112.52169037 69.01784515]
[98.32784271 73.86911011]
[83.59122467 71.07055664]
[72.16394043 61.35370255]
[67.03305817 47.25852585]
[69.53977966 32.46946335]
[79.02885437 20.85234451]
[93.01985931 15.44385338]
[107.85557556 17.65775871]
[119.65798950 26.91534996]
[125.34197998 40.79671478]
[123.42208862 55.67247772]
[133.74876404 44.79314041]
[144.07542419 33.91380692]
[154.40209961 23.03447342]
[164.72875977 12.15513897]
[154.48330688 1.19311523]
[144.91174316 -10.36201096]
[136.04837036 -22.46887589]
[127.92491150 -35.08413696]
[120.57043457 -48.16263962]
[114.01127625 -61.65755844]
[108.27090454 -75.52059174]
[103.36988068 -89.70211029]
[99.32574463 -104.15135193]
[96.15297699 -118.81658173]
[93.86293030 -133.64530945]
[92.46379852 -148.58445740]
[91.96060181 -163.58053589]
[92.35514069 -178.57986450]
[93.64598846 -193.52874756]
[95.82854462 -208.37367249]
[98.89497375 -223.06150818]
[102.83432007 -237.53967285]
[107.63246918 -251.75633240]
[113.27224731 -265.66058350]
[119.73346710 -279.20266724]
[126.99299622 -292.33410645]
[135.02484131 -305.00790405]
[143.80026245 -317.17868042]
[153.28784180 -328.80282593]
[163.45362854 -339.83880615]
[174.26119995 -350.24707031]
[185.67189026 -359.99035645]
[197.64485168 -369.03378296]
[210.13722229 -377.34500122]
[223.10426331 -384.89425659]
[236.49958801 -391.65447998]
[250.27522278 -397.60153198]
[264.38186646 -402.71408081]
[278.76901245 -406.97387695]
[293.38516235 -410.36560059]
[308.17797852 -412.87716675]
[323.09451294 -414.49954224]
[338.08139038 -415.22692871]
[353.08496094 -415.05676270]
[368.05145264 -413.98962402]
[382.92736816 -412.02932739]
[397.65942383 -409.18289185]
[412.19488525 -405.46051025]
[426.48168945 -400.87548828]
[440.46875000 -395.44427490]
[454.10595703 -389.18630981]
[467.34448242 -382.12396240]
[480.13696289 -374.28256226]
[492.43762207 -365.69012451]
[504.20236206 -356.37744141]
[515.38916016 -346.37783813]
[525.95782471 -335.72714233]
[535.87066650 -324.46343994]
[545.09216309 -312.62704468]
[553.58929443 -300.26037598]
[561.33160400 -287.40768433]
[568.29144287 -274.11495972]
[574.44378662 -260.42980957]
[579.76678467 -246.40119934]
[584.24121094 -232.07936096]
[587.85113525 -217.51557922]
[590.58367920 -202.76197815]
[592.42895508 -187.87135315]
[593.38037109 -172.89703369]
[593.43463135 -157.89260864]
[592.59143066 -142.91180420]
[590.85382080 -128.00823975]
[588.22796631 -113.23527527]
[584.72338867 -98.64578247]
[580.35253906 -84.29198456]
[575.13116455 -70.22528076]
[569.07781982 -56.49601746]
[562.21423340 -43.15333939]
[554.56500244 -30.24501801]
[546.15753174 -17.81725693]
[537.02178955 -5.91454554]
[527.19061279 5.42050743]
[516.69915771 16.14732552]
[505.58496094 26.22750664]
[493.88781738 35.62496948]
[481.64959717 44.30607224]
[468.91412354 52.23973846]
[455.72695923 59.39756775]
[442.13534546 65.75393677]
[428.18792725 71.28609467]
[413.93460083 75.97422791]
[399.42642212 79.80155945]
[384.71533203 82.75439453]
[369.85397339 84.82215118]
[354.89556885 85.99743652]
[339.89364624 86.27604675]
[324.90188599 85.65696716]
[309.97399902 84.14243317]
[295.16342163 81.73785400]
[280.52316284 78.45184326]
[266.10559082 74.29615784]
[251.96237183 69.28568268]
[238.14411926 63.43835068]
[224.70028687 56.77509308]
[211.67901611 49.31975937]
[199.12690735 41.09904480]
[187.08891296 32.14237213]
[175.60809326 22.48180771]
[165.28143311 33.36114120]
[154.95475769 44.24047470]
[144.62809753 55.11981201]
[134.30142212 65.99914551]
[124.81252289 77.61640930]
[116.21396637 89.90724945]
[118.63252258 104.19348907]
[110.32658386 116.06604767]
[96.07687378 118.69131470]
[87.47830963 130.98216248]
[91.33388519 143.88754272]
[87.11432648 156.47348022]
[76.57252502 164.21638489]
[63.68978119 164.47000122]
[54.90917587 176.63145447]
[46.12857437 188.79290771]
[37.34796906 200.95436096]
[28.56736755 213.11581421]
[19.78676414 225.27728271]
[11.00615978 237.43873596]
[22.17660332 247.47134399]
[32.21734238 258.63449097]
[41.01461029 270.80166626]
[48.46872711 283.83502197]
[54.49522781 297.58685303]
[59.02582932 311.90139771]
[62.00920105 326.61639404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 203]
[51 202]
[52 201]
[53 200]
[54 199]
[55 198]
[56 197]
[59 193]
[60 192]
[63 189]
[64 188]
[75 187]
[76 186]
[77 185]
[78 184]
[79 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
