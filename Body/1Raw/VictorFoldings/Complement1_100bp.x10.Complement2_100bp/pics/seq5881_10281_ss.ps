%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[61.34035873 696.74816895]
[48.08029556 703.81103516]
[33.98197937 709.00250244]
[19.30805969 712.22583008]
[4.33189869 713.42095947]
[-10.66750717 712.56567383]
[-25.41072845 709.67578125]
[-39.62310410 704.80529785]
[-53.03987122 698.04479980]
[-65.41108704 689.52032471]
[-76.50627136 679.39062500]
[-86.11873627 667.84442139]
[-94.06940460 655.09686279]
[-100.21015930 641.38537598]
[-104.42660522 626.96539307]
[-106.64019012 612.10559082]
[-106.80967712 597.08276367]
[-104.93191528 582.17681885]
[-101.04187012 567.66540527]
[-95.21202850 553.81884766]
[-87.55097961 540.89514160]
[-78.20146179 529.13507080]
[-67.33763885 518.75762939]
[-55.16189957 509.95617676]
[-41.90106964 502.89471436]
[-27.80219650 497.70477295]
[-13.12792683 494.48306274]
[1.84836388 493.28955078]
[16.84767723 494.14648438]
[19.73295021 479.42660522]
[22.61822319 464.70669556]
[25.39383316 449.96572876]
[28.05962944 435.20452881]
[30.72542381 420.44329834]
[19.26703453 410.92642212]
[14.07618141 396.85833740]
[16.64089203 381.98257446]
[26.37105751 370.31121826]
[40.73044205 365.04287720]
[43.39623642 350.28164673]
[46.06203079 335.52044678]
[48.72782516 320.75921631]
[51.39362335 305.99801636]
[38.08909225 301.02285767]
[25.85566521 293.79739380]
[15.07048988 284.54287720]
[6.06631851 273.54321289]
[-0.87875801 261.13616943]
[-5.54989862 247.70292664]
[-7.80215788 233.65657043]
[-7.56498194 219.42919922]
[-4.84442139 205.45869446]
[0.27702078 192.17527771]
[7.64288712 179.98822021]
[17.02754593 169.27326965]
[28.14310646 160.36100769]
[40.64824295 153.52671814]
[54.15867996 148.98182678]
[68.25900269 146.86741638]
[82.51543427 147.24977112]
[85.61954498 132.57447815]
[88.72365570 117.89916992]
[91.82776642 103.22386932]
[90.38773346 100.53763580]
[89.89328766 97.26807404]
[90.56236267 93.76439667]
[92.48083496 90.45143127]
[95.57821655 87.77950287]
[99.55030823 73.31497955]
[103.52240753 58.85045624]
[107.17049408 44.30083847]
[110.49275208 29.67337608]
[113.81501007 15.04591656]
[112.26943970 10.06010818]
[112.74348450 5.44182014]
[114.75894928 1.89880526]
[117.62603760 -0.15354060]
[121.59813690 -14.61806488]
[117.79141998 -29.97447968]
[128.62277222 -40.19852066]
[132.59486389 -54.66304398]
[136.56697083 -69.12757111]
[140.53906250 -83.59209442]
[144.51115417 -98.05661774]
[148.48324585 -112.52114105]
[142.79356384 -124.09655762]
[146.39970398 -136.06231689]
[156.84628296 -142.16113281]
[161.03329468 -156.56492615]
[165.22030640 -170.96870422]
[169.40731812 -185.37248230]
[155.63751221 -191.37422180]
[142.74827576 -199.08757019]
[130.95124817 -208.38587952]
[120.44015503 -219.11645508]
[111.38759613 -231.10308838]
[103.94222260 -244.14895630]
[98.22629547 -258.03982544]
[94.33367920 -272.54763794]
[92.32829285 -287.43408203]
[92.24305725 -302.45477295]
[94.07938385 -317.36303711]
[97.80710602 -331.91406250]
[103.36502838 -345.86892700]
[110.66186523 -358.99844360]
[119.57781219 -371.08703613]
[129.96644592 -381.93621826]
[141.65719604 -391.36779785]
[154.45806885 -399.22692871]
[168.15888977 -405.38452148]
[182.53463745 -409.73953247]
[197.34928894 -412.22036743]
[212.35955811 -412.78634644]
[227.31895447 -411.42813110]
[241.98184204 -408.16806030]
[256.10742188 -403.05966187]
[269.46377563 -396.18679810]
[281.83157349 -387.66235352]
[293.00769043 -377.62628174]
[302.80865479 -366.24340820]
[311.07348633 -353.70065308]
[317.66647339 -340.20394897]
[322.47937012 -325.97494507]
[325.43310547 -311.24731445]
[326.47924805 -296.26284790]
[325.60055542 -281.26763916]
[322.81146240 -266.50793457]
[318.15780640 -252.22605896]
[311.71600342 -238.65655518]
[303.59176636 -226.02226257]
[293.91857910 -214.53062439]
[282.85525513 -204.37036133]
[270.58343506 -195.70829773]
[257.30468750 -188.68669128]
[243.23703003 -183.42082214]
[228.61148071 -179.99719238]
[213.66818237 -178.47198486]
[198.65252686 -178.87025452]
[183.81109619 -181.18547058]
[179.62408447 -166.78169250]
[175.43707275 -152.37791443]
[171.25006104 -137.97412109]
[176.34584045 -121.18127441]
[162.94776917 -108.54904175]
[158.97567749 -94.08451843]
[155.00358582 -79.61999512]
[151.03149414 -65.15547180]
[147.05938721 -50.69094849]
[143.08729553 -36.22642517]
[147.17811584 -21.90460968]
[136.06265259 -10.64596844]
[132.09056091 3.81855559]
[128.44247437 18.36817551]
[125.12021637 32.99563599]
[121.79795837 47.62309647]
[123.35756683 50.78536606]
[123.46298218 54.86016083]
[121.70200348 59.15576935]
[117.98693085 62.82255554]
[114.01483154 77.28707886]
[110.04273987 91.75160217]
[106.50306702 106.32798004]
[103.39895630 121.00328064]
[100.29484558 135.67858887]
[97.19073486 150.35388184]
[111.77742767 156.51817322]
[124.88851166 165.39097595]
[136.02745056 176.63415527]
[144.77276611 189.81982422]
[150.79405212 204.44665527]
[153.86444092 219.95890808]
[153.86912537 235.76760864]
[150.80967712 251.27285767]
[144.80389404 265.88659668]
[136.08129883 279.05490112]
[124.97437286 290.27908325]
[111.90580750 299.13439941]
[97.37252808 305.28628540]
[81.92670441 308.50286865]
[66.15483856 308.66378784]
[63.48904419 323.42501831]
[60.82324982 338.18624878]
[58.15745163 352.94744873]
[55.49165726 367.70867920]
[67.10121155 377.66687012]
[72.13431549 392.00439453]
[69.33374786 406.83755493]
[59.55004501 418.20132446]
[45.48664093 423.10910034]
[42.82084656 437.87033081]
[40.15505219 452.63153076]
[41.70951462 461.63272095]
[37.33811188 467.59197998]
[34.45284271 482.31185913]
[31.56756783 497.03176880]
[45.78047180 501.90075684]
[59.19797134 508.65979004]
[71.57010651 517.18292236]
[82.66638947 527.31140137]
[92.28009796 538.85656738]
[100.23214722 551.60327148]
[106.37438965 565.31408691]
[110.59239960 579.73358154]
[112.80759430 594.59313965]
[112.97870636 609.61596680]
[111.10255432 624.52215576]
[107.21408081 639.03399658]
[101.38573456 652.88116455]
[93.72608948 665.80566406]
[84.37784576 677.56677246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 195]
[30 194]
[31 193]
[32 191]
[33 190]
[34 189]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[60 165]
[61 164]
[62 163]
[63 162]
[68 161]
[69 160]
[70 159]
[71 155]
[72 154]
[73 153]
[77 152]
[78 151]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[88 142]
[89 141]
[90 140]
[91 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
