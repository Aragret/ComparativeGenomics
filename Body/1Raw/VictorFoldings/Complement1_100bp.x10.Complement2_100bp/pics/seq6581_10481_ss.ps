%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[105.94366455 269.81936646]
[104.17440033 284.72463989]
[101.09471893 299.41522217]
[96.72871399 313.77615356]
[91.11057281 327.69497681]
[84.28424835 341.06280518]
[76.30317688 353.77502441]
[67.22982788 365.73211670]
[57.13520050 376.84048462]
[46.09831238 387.01321411]
[34.20553207 396.17071533]
[21.54994774 404.24127197]
[8.23060513 411.16171265]
[-5.64825249 416.87792969]
[-19.97800064 421.34512329]
[-34.64649200 424.52838135]
[-49.53891754 426.40274048]
[-64.53871918 426.95358276]
[-79.52851868 426.17654419]
[-94.39097595 424.07775879]
[-109.00978088 420.67364502]
[-123.27052307 415.99078369]
[-137.06158447 410.06591797]
[-150.27502441 402.94534302]
[-162.80743408 394.68481445]
[-174.56072998 385.34899902]
[-185.44293213 375.01092529]
[-195.36885071 363.75155640]
[-204.26081848 351.65896606]
[-212.04924011 338.82781982]
[-218.67315674 325.35855103]
[-224.08071899 311.35656738]
[-228.22961426 296.93142700]
[-231.08735657 282.19607544]
[-232.63160706 267.26580811]
[-232.85025024 252.25747681]
[-231.74159241 237.28855896]
[-229.31431580 222.47619629]
[-225.58740234 207.93634033]
[-220.59002686 193.78276062]
[-214.36129761 180.12623596]
[-206.94996643 167.07365417]
[-198.41403198 154.72717285]
[-188.82031250 143.18342590]
[-178.24389648 132.53274536]
[-166.76754761 122.85849762]
[-154.48109436 114.23640442]
[-141.48068237 106.73394012]
[-127.86807251 100.40982056]
[-113.74980164 95.31353760]
[-99.23636627 91.48499298]
[-84.44135284 88.95413208]
[-69.48055267 87.74078369]
[-54.47106934 87.85442352]
[-39.53036118 89.29417419]
[-24.77536583 92.04875946]
[-10.32156467 96.09663391]
[3.71792030 101.40610504]
[17.23320961 107.93561554]
[30.11852646 115.63407898]
[42.27302170 124.44122314]
[53.60157013 134.28813171]
[64.40372467 123.88076019]
[75.20588684 113.47338867]
[86.00804138 103.06600952]
[90.06169128 89.68470001]
[103.58458710 86.13182831]
[114.38674164 75.72445679]
[125.18890381 65.31708527]
[135.99105835 54.90970993]
[146.79321289 44.50233841]
[157.59536743 34.09496307]
[147.75561523 22.76890564]
[138.51197815 10.95132351]
[129.88893127 -1.32644022]
[121.90937805 -14.03182888]
[114.59445953 -27.13114929]
[107.96357727 -40.58966446]
[102.03431702 -54.37168884]
[96.82239532 -68.44066620]
[92.34164429 -82.75929260]
[88.60394287 -97.28960419]
[85.61919403 -111.99305725]
[83.39532471 -126.83066559]
[81.93822479 -141.76309204]
[81.25176239 -156.75071716]
[81.33775330 -171.75381470]
[82.19597626 -186.73258972]
[83.82415009 -201.64732361]
[86.21795654 -216.45846558]
[89.37105560 -231.12673950]
[93.27507019 -245.61323547]
[97.91966248 -259.87957764]
[103.29251099 -273.88787842]
[109.37936401 -287.60101318]
[116.16409302 -300.98263550]
[123.62868500 -313.99725342]
[131.75335693 -326.61035156]
[140.51657104 -338.78845215]
[149.89508057 -350.49929810]
[159.86401367 -361.71182251]
[170.39692688 -372.39630127]
[181.46591187 -382.52435303]
[193.04159546 -392.06918335]
[205.09329224 -401.00546265]
[217.58903503 -409.30947876]
[230.49569702 -416.95922852]
[243.77903748 -423.93438721]
[257.40383911 -430.21652222]
[271.33398438 -435.78890991]
[285.53250122 -440.63681030]
[299.96176147 -444.74734497]
[314.58349609 -448.10964966]
[329.35894775 -450.71478271]
[344.24890137 -452.55584717]
[359.21386719 -453.62792969]
[374.21420288 -453.92822266]
[389.21011353 -453.45590210]
[404.16183472 -452.21224976]
[419.02969360 -450.20056152]
[433.77429199 -447.42614746]
[448.35650635 -443.89639282]
[462.73767090 -439.62060547]
[476.87966919 -434.61019897]
[490.74496460 -428.87838745]
[504.29681396 -422.44042969]
[517.49932861 -415.31338501]
[530.31738281 -407.51611328]
[542.71704102 -399.06933594]
[554.66546631 -389.99545288]
[566.13092041 -380.31848145]
[577.08300781 -370.06411743]
[587.49273682 -359.25955200]
[597.33239746 -347.93344116]
[606.57598877 -336.11581421]
[615.19897461 -323.83798218]
[623.17840576 -311.13256836]
[630.49328613 -298.03320312]
[637.12408447 -284.57464600]
[643.05328369 -270.79260254]
[648.26507568 -256.72357178]
[652.74578857 -242.40492249]
[656.48339844 -227.87460327]
[659.46807861 -213.17112732]
[661.69183350 -198.33351135]
[663.14886475 -183.40107727]
[663.83520508 -168.41343689]
[663.74914551 -153.41035461]
[662.89086914 -138.43157959]
[661.26257324 -123.51685333]
[658.86871338 -108.70572662]
[655.71551514 -94.03746796]
[651.81140137 -79.55098724]
[647.16674805 -65.28468323]
[641.79382324 -51.27640533]
[635.70684814 -37.56329346]
[628.92205811 -24.18170929]
[621.45739746 -11.16714287]
[613.33264160 1.44589508]
[604.56939697 13.62395668]
[595.19079590 25.33474731]
[585.22180176 36.54721069]
[574.68884277 47.23161697]
[563.61981201 57.35963058]
[552.04406738 66.90439606]
[539.99230957 75.84059906]
[527.49652100 84.14453888]
[514.58978271 91.79420471]
[501.30642700 98.76930237]
[487.68157959 105.05133820]
[473.75143433 110.62365723]
[459.55285645 115.47147369]
[445.12356567 119.58193970]
[430.50183105 122.94415283]
[415.72637939 125.54920197]
[400.83639526 127.39016724]
[385.87139893 128.46217346]
[370.87106323 128.76237488]
[355.87518311 128.28999329]
[340.92346191 127.04624939]
[326.05560303 125.03446198]
[311.31103516 122.25996399]
[296.72885132 118.73011017]
[282.34771729 114.45426941]
[268.20574951 109.44376373]
[254.34046936 103.71189117]
[240.78863525 97.27385712]
[227.58621216 90.14672089]
[214.76817322 82.34938812]
[202.36854553 73.90253448]
[190.42018127 64.82856750]
[178.95477295 55.15154266]
[168.00274658 44.89712143]
[157.20059204 55.30449295]
[146.39842224 65.71186829]
[135.59626770 76.11923981]
[124.79411316 86.52661133]
[113.99195862 96.93399048]
[109.93830872 110.31529999]
[96.41541290 113.86817169]
[85.61325836 124.27554321]
[74.81109619 134.68292236]
[64.00894165 145.09028625]
[73.42745209 156.77743530]
[81.77617645 169.25126648]
[88.98979187 182.41413879]
[95.01182556 196.16305542]
[99.79515076 210.39041138]
[103.30233002 224.98483276]
[105.50592041 239.83212280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 203]
[63 202]
[64 201]
[65 200]
[67 198]
[68 197]
[69 196]
[70 195]
[71 194]
[72 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
