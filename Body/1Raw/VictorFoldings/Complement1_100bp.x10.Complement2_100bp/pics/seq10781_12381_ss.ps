%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[71.42610931 415.07510376]
[58.33172607 407.71160889]
[46.33567810 398.66848755]
[35.65203857 388.10708618]
[26.47147560 376.21588135]
[18.95782280 363.20709229]
[13.24517250 349.31289673]
[9.43547344 334.78121948]
[7.59671307 319.87139893]
[7.76170731 304.84954834]
[9.92751122 289.98373413]
[14.05547333 275.53921509]
[20.07192612 261.77383423]
[27.86949730 248.93322754]
[37.30903244 237.24655151]
[48.22206879 226.92234802]
[60.41385269 218.14488220]
[73.66680908 211.07080078]
[87.74442291 205.82635498]
[102.39545441 202.50511169]
[101.05722046 187.56492615]
[99.71898651 172.62474060]
[98.38075256 157.68455505]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[79.50325012 71.06271362]
[65.34096527 76.00535583]
[50.94539261 71.79021454]
[41.68571854 59.98943710]
[41.01557922 45.00441360]
[49.18491364 32.42419052]
[63.14676666 26.94088554]
[77.69371033 30.59963036]
[87.40054321 42.03688431]
[87.62387085 27.03854561]
[87.84719849 12.04020882]
[88.07052612 -2.95812869]
[88.29385376 -17.95646667]
[88.51718140 -32.95480347]
[88.74050903 -47.95314026]
[88.96383667 -62.95147705]
[73.99391174 -63.95311737]
[59.09615707 -65.73040009]
[44.31072617 -68.27854156]
[29.67748642 -71.59067535]
[15.23588276 -75.65785980]
[1.02484787 -80.46913910]
[-12.91730785 -86.01154327]
[-26.55299759 -92.27012634]
[-39.84546280 -99.22801971]
[-52.75886917 -106.86647034]
[-65.25839996 -115.16487885]
[-77.31037140 -124.10087585]
[-88.88227844 -133.65037537]
[-99.94293213 -143.78762817]
[-110.46250916 -154.48530579]
[-120.41266632 -165.71456909]
[-129.76655579 -177.44514465]
[-138.49897766 -189.64541626]
[-146.58639526 -202.28250122]
[-154.00698853 -215.32231140]
[-160.74076843 -228.72970581]
[-166.76957703 -242.46853638]
[-172.07716370 -256.50177002]
[-176.64920044 -270.79156494]
[-180.47338867 -285.29940796]
[-183.53941345 -299.98617554]
[-185.83898926 -314.81228638]
[-187.36593628 -329.73779297]
[-188.11614990 -344.72241211]
[-188.08757019 -359.72579956]
[-187.28030396 -374.70745850]
[-185.69651794 -389.62701416]
[-183.34048462 -404.44427490]
[-180.21855164 -419.11926270]
[-176.33914185 -433.61245728]
[-171.71270752 -447.88473511]
[-166.35171509 -461.89764404]
[-160.27062988 -475.61340332]
[-153.48583984 -488.99505615]
[-146.01562500 -502.00653076]
[-137.88014221 -514.61267090]
[-129.10131836 -526.77960205]
[-119.70281219 -538.47448730]
[-109.70996857 -549.66577148]
[-99.14971924 -560.32330322]
[-88.05053711 -570.41839600]
[-76.44233704 -579.92370605]
[-64.35643005 -588.81378174]
[-51.82537842 -597.06451416]
[-38.88297272 -604.65368652]
[-25.56410408 -611.56091309]
[-11.90467644 -617.76751709]
[2.05848646 -623.25677490]
[16.28774261 -628.01391602]
[30.74473190 -632.02606201]
[45.39048004 -635.28247070]
[60.18550873 -637.77423096]
[75.08992767 -639.49481201]
[90.06356049 -640.43939209]
[105.06603241 -640.60552979]
[120.05691528 -639.99279785]
[134.99578857 -638.60278320]
[149.84236145 -636.43927002]
[164.55664062 -633.50805664]
[179.09893799 -629.81707764]
[193.43006897 -625.37622070]
[207.51138306 -620.19757080]
[221.30491638 -614.29498291]
[234.77349854 -607.68444824]
[247.88079834 -600.38372803]
[260.59152222 -592.41253662]
[272.87133789 -583.79235840]
[284.68722534 -574.54644775]
[296.00726318 -564.69970703]
[306.80093384 -554.27862549]
[317.03918457 -543.31140137]
[326.69439697 -531.82757568]
[335.74053955 -519.85803223]
[344.15322876 -507.43515015]
[351.90975952 -494.59231567]
[358.98925781 -481.36422729]
[365.37261963 -467.78649902]
[371.04266357 -453.89575195]
[375.98403931 -439.72943115]
[380.18350220 -425.32574463]
[383.62966919 -410.72348022]
[386.31329346 -395.96203613]
[388.22711182 -381.08120728]
[389.36599731 -366.12109375]
[389.72683716 -351.12203979]
[389.30868530 -336.12448120]
[388.11267090 -321.16882324]
[386.14199829 -306.29541016]
[383.40200806 -291.54434204]
[379.90008545 -276.95535278]
[375.64562988 -262.56781006]
[370.65014648 -248.42045593]
[364.92709351 -234.55148315]
[358.49191284 -220.99824524]
[351.36193848 -207.79728699]
[343.55639648 -194.98419189]
[335.09631348 -182.59350586]
[326.00451660 -170.65864563]
[316.30548096 -159.21176147]
[306.02542114 -148.28372192]
[295.19198608 -137.90399170]
[283.83441162 -128.10055542]
[271.98330688 -118.89983368]
[259.67062378 -110.32662964]
[246.92956543 -102.40406036]
[233.79446411 -95.15348053]
[220.30072021 -88.59443665]
[206.48474121 -82.74461365]
[192.38374329 -77.61977386]
[178.03576660 -73.23374176]
[163.47946167 -69.59833527]
[148.75410461 -66.72336578]
[133.89935303 -64.61656952]
[118.95528412 -63.28363419]
[103.96217346 -62.72814941]
[103.73884583 -47.72981262]
[103.51551819 -32.73147583]
[103.29219055 -17.73313904]
[103.06886292 -2.73480105]
[102.84553528 12.26353645]
[102.62220764 27.26187325]
[102.39888000 42.26021194]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[115.85515594 149.40373230]
[113.32093811 156.34632874]
[114.65917206 171.28651428]
[115.99740601 186.22669983]
[117.33563995 201.16688538]
[132.34368896 201.83146667]
[147.12925720 204.49057007]
[161.42843628 209.09672546]
[174.98606873 215.56774902]
[187.56019592 223.78813171]
[198.92642212 233.61119080]
[208.88189697 244.86160278]
[217.24894714 257.33862305]
[223.87826538 270.81954956]
[228.65155029 285.06381226]
[231.48359680 299.81723022]
[232.32386780 314.81646729]
[231.15737915 329.79388428]
[228.00494385 344.48217773]
[222.92282104 358.61920166]
[216.00170898 371.95266724]
[207.36511230 384.24462891]
[197.16716003 395.27575684]
[185.58985901 404.84912109]
[172.83982849 412.79394531]
[159.14457703 418.96838379]
[144.74855042 423.26226807]
[129.90863037 425.59896851]
[114.88965607 425.93679810]
[99.95967865 424.26974487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 185]
[21 184]
[22 183]
[23 182]
[24 180]
[25 179]
[26 178]
[28 176]
[29 175]
[30 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
