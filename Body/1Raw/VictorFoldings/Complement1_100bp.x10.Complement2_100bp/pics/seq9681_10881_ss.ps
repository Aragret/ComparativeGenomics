%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[29.68270683 269.84323120]
[16.07292938 263.54660034]
[3.02166867 256.16162109]
[-9.38422108 247.73739624]
[-21.06218338 238.33003235]
[-31.93450165 228.00209045]
[-41.92882538 216.82232666]
[-50.97864151 204.86514282]
[-59.02372742 192.21009827]
[-66.01054382 178.94142151]
[-71.89259338 165.14739990]
[-76.63073730 150.91983032]
[-80.19344330 136.35340881]
[-82.55699921 121.54506683]
[-83.70568085 106.59333801]
[-83.63183594 91.59773254]
[-82.33596039 76.65805054]
[-79.82667542 61.87369919]
[-76.12068176 47.34306717]
[-71.24264526 33.16286087]
[-65.22502899 19.42743874]
[-58.10787201 6.22821140]
[-49.93854141 -6.34698534]
[-40.77140427 -18.21446609]
[-30.66745949 -29.29525375]
[-19.69395256 -39.51560974]
[-7.92390823 -48.80752182]
[4.56434727 -57.10914612]
[17.68770599 -64.36524963]
[31.35883713 -70.52752686]
[45.48675919 -75.55499268]
[59.97745514 -79.41416931]
[57.31166077 -94.17538452]
[54.64586258 -108.93659973]
[51.98006821 -123.69782257]
[49.31427383 -138.45903015]
[34.43703079 -136.52029419]
[19.48258209 -135.31385803]
[4.48694801 -134.84268188]
[-10.51374245 -135.10786438]
[-25.48335266 -136.10876465]
[-40.38581848 -137.84300232]
[-55.18523788 -140.30638123]
[-69.84596252 -143.49295044]
[-84.33266449 -147.39506531]
[-98.61045074 -152.00331116]
[-112.64492035 -157.30657959]
[-126.40226746 -163.29209900]
[-139.84934998 -169.94544983]
[-152.95376587 -177.25059509]
[-165.68394470 -185.18995667]
[-178.00923157 -193.74440002]
[-189.89991760 -202.89331055]
[-201.32737732 -212.61465454]
[-212.26405334 -222.88499451]
[-222.68362427 -233.67961121]
[-232.56097412 -244.97248840]
[-241.87229919 -256.73641968]
[-250.59518433 -268.94308472]
[-258.70861816 -281.56301880]
[-266.19302368 -294.56588745]
[-273.03042603 -307.92034912]
[-279.20428467 -321.59420776]
[-284.69979858 -335.55450439]
[-289.50366211 -349.76766968]
[-293.60433960 -364.19943237]
[-296.99194336 -378.81500244]
[-299.65832520 -393.57919312]
[-301.59704590 -408.45645142]
[-302.80340576 -423.41088867]
[-303.27456665 -438.40652466]
[-303.00933838 -453.40722656]
[-302.00839233 -468.37683105]
[-300.27413940 -483.27929688]
[-297.81072998 -498.07870483]
[-294.62411499 -512.73944092]
[-290.72195435 -527.22613525]
[-286.11367798 -541.50390625]
[-280.81039429 -555.53833008]
[-274.82482910 -569.29565430]
[-268.17144775 -582.74273682]
[-260.86624146 -595.84716797]
[-252.92686462 -608.57733154]
[-244.37239075 -620.90258789]
[-235.22344971 -632.79321289]
[-225.50209045 -644.22064209]
[-215.23170471 -655.15734863]
[-204.43707275 -665.57684326]
[-193.14416504 -675.45416260]
[-181.38021851 -684.76550293]
[-169.17353821 -693.48834229]
[-156.55355835 -701.60174561]
[-143.55067444 -709.08612061]
[-130.19621277 -715.92346191]
[-116.52234650 -722.09729004]
[-102.56201172 -727.59277344]
[-88.34884644 -732.39660645]
[-73.91708374 -736.49725342]
[-59.30149460 -739.88482666]
[-44.53728867 -742.55114746]
[-29.66003990 -744.48986816]
[-14.70558262 -745.69616699]
[0.29005337 -746.16729736]
[15.29074287 -745.90203857]
[30.26034737 -744.90106201]
[45.16280365 -743.16674805]
[59.96221161 -740.70330811]
[74.62291718 -737.51666260]
[89.10960388 -733.61444092]
[103.38736725 -729.00616455]
[117.42181396 -723.70281982]
[131.17912292 -717.71722412]
[144.62617493 -711.06384277]
[157.73056030 -703.75860596]
[170.46069336 -695.81915283]
[182.78593445 -687.26464844]
[194.67658997 -678.11572266]
[206.10398865 -668.39428711]
[217.04061890 -658.12390137]
[227.46012878 -647.32922363]
[237.33741760 -636.03631592]
[246.64869690 -624.27233887]
[255.37152100 -612.06561279]
[263.48489380 -599.44561768]
[270.96923828 -586.44274902]
[277.80654907 -573.08825684]
[283.98037720 -559.41436768]
[289.47579956 -545.45404053]
[294.27960205 -531.24084473]
[298.38021851 -516.80908203]
[301.76773071 -502.19348145]
[304.43405151 -487.42926025]
[306.37268066 -472.55200195]
[307.57897949 -457.59756470]
[308.05007935 -442.60189819]
[307.78475952 -427.60122681]
[306.78375244 -412.63162231]
[305.04940796 -397.72915649]
[302.58590698 -382.92977905]
[299.39923096 -368.26907349]
[295.49700928 -353.78240967]
[290.88867188 -339.50463867]
[285.58529663 -325.47021484]
[279.59967041 -311.71292114]
[272.94622803 -298.26586914]
[265.64096069 -285.16152954]
[257.70150757 -272.43139648]
[249.14697266 -260.10617065]
[239.99798584 -248.21554565]
[230.27656555 -236.78817749]
[220.00613403 -225.85156250]
[209.21144104 -215.43208313]
[197.91848755 -205.55482483]
[186.15447998 -196.24357605]
[173.94776917 -187.52078247]
[161.32775879 -179.40744019]
[148.32482910 -171.92311096]
[134.97033691 -165.08583069]
[121.29643250 -158.91206360]
[107.33607483 -153.41667175]
[93.12287903 -148.61289978]
[78.69109344 -144.51232910]
[64.07549286 -141.12483215]
[66.74128723 -126.36361694]
[69.40708160 -111.60240173]
[72.07287598 -96.84117889]
[74.73867035 -82.07996368]
[89.66387939 -83.53313446]
[104.65787506 -83.76493835]
[119.62086487 -82.77381897]
[134.45329285 -80.56638336]
[149.05642700 -77.15731812]
[163.33311462 -72.56930542]
[177.18832397 -66.83287811]
[190.52987671 -59.98621750]
[203.26896667 -52.07488251]
[215.32081604 -43.15151978]
[226.60522461 -33.27551651]
[237.04711914 -22.51259232]
[246.57698059 -10.93437386]
[255.13140869 1.38208997]
[262.65347290 14.35483456]
[269.09310913 27.89752960]
[274.40747070 41.92005157]
[278.56118774 56.32908249]
[281.52661133 71.02873230]
[283.28402710 85.92118835]
[283.82171631 100.90732574]
[283.13610840 115.88742828]
[281.23178101 130.76181030]
[278.12139893 145.43147278]
[273.82565308 159.79879761]
[268.37310791 173.76817322]
[261.80010986 187.24664307]
[254.15034485 200.14450073]
[245.47474670 212.37591553]
[235.83105469 223.85949707]
[225.28343201 234.51881409]
[213.90206909 244.28294373]
[201.76271057 253.08689880]
[188.94615173 260.87210083]
[175.53767395 267.58673096]
[161.62649536 273.18609619]
[147.30522156 277.63293457]
[132.66914368 280.89770508]
[117.81565094 282.95861816]
[102.84359741 283.80197144]
[87.85262299 283.42214966]
[72.94248962 281.82171631]
[58.21241760 279.01129150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
