%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[208.83335876 393.72308350]
[218.93351746 382.60897827]
[209.10293579 371.27935791]
[199.27235413 359.94976807]
[189.44177246 348.62017822]
[179.61119080 337.29058838]
[183.39402771 351.80575562]
[183.64248657 366.80371094]
[180.34252930 381.43621826]
[173.68078613 394.87573242]
[164.03399658 406.36224365]
[151.94773865 415.24606323]
[138.10554504 421.02481079]
[123.29027557 423.37164307]
[108.33979034 422.15386963]
[94.09961700 417.44033813]
[81.37510681 409.49761963]
[70.88588715 398.77490234]
[63.22517776 385.87866211]
[58.82623291 371.53817749]
[57.93782806 356.56451416]
[60.61021042 341.80447388]
[66.69224548 328.09283447]
[75.83995819 316.20507812]
[87.53600311 306.81344604]
[101.11891937 300.44912720]
[115.82051849 297.47207642]
[130.80935669 298.05059814]
[145.23774719 302.15200806]
[158.28968811 309.54437256]
[169.22772217 319.81039429]
[163.98100281 305.75793457]
[158.73428345 291.70547485]
[147.03396606 282.48852539]
[149.45547485 266.85372925]
[138.29609680 264.48004150]
[129.57806396 256.93606567]
[125.54291534 246.00849915]
[127.30162811 234.37202454]
[134.53167725 224.93469238]
[129.70567322 210.73223877]
[124.87967682 196.52978516]
[120.05368042 182.32733154]
[115.22768402 168.12486267]
[110.40167999 153.92240906]
[105.57568359 139.71995544]
[100.74968719 125.51750183]
[95.92369080 111.31504822]
[90.88677216 97.18601990]
[85.64005280 83.13354492]
[80.39334106 69.08107758]
[76.94783783 66.43862915]
[74.74407196 63.16633224]
[73.82755280 59.73188782]
[74.08724976 56.56974411]
[75.27996063 54.03289795]
[70.87896729 39.69305038]
[66.47796631 25.35320473]
[55.03221893 14.43050289]
[58.69482040 -0.00676200]
[53.18528366 -7.29255819]
[54.33676147 -14.59296131]
[50.14974976 -28.99674416]
[45.96273804 -43.40052414]
[41.77572632 -57.80430603]
[37.58871460 -72.20809174]
[22.81763840 -69.52120972]
[7.84858084 -68.36737823]
[-7.15977716 -68.75881195]
[-22.04833794 -70.69136810]
[-36.65927505 -74.14456177]
[-50.83770370 -79.08178711]
[-64.43332672 -85.45069885]
[-77.30201721 -93.18379211]
[-89.30737305 -102.19909668]
[-100.32211304 -112.40103149]
[-110.22948456 -123.68145752]
[-118.92446136 -135.92079163]
[-126.31488037 -148.98930359]
[-132.32238770 -162.74842834]
[-136.88330078 -177.05235291]
[-139.94927979 -191.74942017]
[-141.48780823 -206.68383789]
[-141.48260498 -221.69731140]
[-139.93370056 -236.63066101]
[-136.85751343 -251.32559204]
[-132.28666687 -265.62634277]
[-126.26960754 -279.38128662]
[-118.87011719 -292.44467163]
[-110.16664886 -304.67797852]
[-100.25144196 -315.95150757]
[-89.22962189 -326.14578247]
[-77.21800995 -335.15277100]
[-64.34395599 -342.87692261]
[-50.74391174 -349.23638916]
[-36.56205750 -354.16375732]
[-21.94872665 -357.60681152]
[-7.05882692 -359.52902222]
[7.94979906 -359.91003418]
[22.91805267 -358.74581909]
[37.68725967 -356.04867554]
[52.10086060 -351.84722900]
[66.00606537 -346.18600464]
[79.25546265 -339.12503052]
[91.70861053 -330.73913574]
[103.23348999 -321.11724854]
[113.70793915 -310.36132812]
[123.02091980 -298.58538818]
[131.07371521 -285.91430664]
[137.78094482 -272.48236084]
[143.07151794 -258.43194580]
[146.88935852 -243.91203308]
[149.19398499 -229.07650757]
[149.96096802 -214.08265686]
[149.18218994 -199.08940125]
[146.86589050 -184.25569153]
[143.03663635 -169.73878479]
[137.73500061 -155.69255066]
[131.01719666 -142.26588440]
[122.95444489 -129.60113525]
[113.63220215 -117.83253479]
[103.14929199 -107.08485413]
[91.61684418 -97.47202301]
[79.15710449 -89.09593201]
[65.90215302 -82.04537964]
[51.99249649 -76.39510345]
[56.17950821 -61.99131775]
[60.36651993 -47.58753586]
[64.55352783 -33.18375397]
[68.74053955 -18.77997208]
[73.03466797 -4.40776014]
[84.16562653 5.48925924]
[80.81781769 20.95220566]
[85.21881104 35.29205322]
[89.61981201 49.63190079]
[94.44580841 63.83435440]
[99.69252777 77.88682556]
[104.93924713 91.93930054]
[109.09450531 95.14051056]
[111.16040039 100.44196320]
[110.12614441 106.48905182]
[114.95214081 120.69150543]
[119.77813721 134.89396667]
[124.60414124 149.09642029]
[129.43013000 163.29887390]
[134.25613403 177.50132751]
[139.08213806 191.70378113]
[143.90812683 205.90623474]
[148.73413086 220.10868835]
[166.03512573 227.82814026]
[172.09565735 245.44015503]
[163.50794983 261.60699463]
[175.58354187 271.82907104]
[172.78675842 286.45874023]
[178.03346252 300.51119995]
[183.28018188 314.56369019]
[190.94078064 327.46002197]
[200.77136230 338.78961182]
[210.60194397 350.11920166]
[220.43252563 361.44879150]
[230.26310730 372.77838135]
[242.69009399 364.34591675]
[256.02719116 357.44244385]
[270.08718872 352.16488647]
[284.67272949 348.58734131]
[299.57901001 346.76000977]
[314.59677124 346.70855713]
[329.51522827 348.43371582]
[344.12493896 351.91125488]
[358.22076416 357.09234619]
[371.60485840 363.90429688]
[384.08932495 372.25140381]
[395.49890137 382.01657104]
[405.67340088 393.06265259]
[414.46997070 405.23458862]
[421.76519775 418.36151123]
[427.45660400 432.25915527]
[431.46429443 446.73239136]
[433.73202515 461.57806396]
[434.22796631 476.58773804]
[432.94512939 491.55072021]
[429.90155029 506.25692749]
[425.13992310 520.49993896]
[418.72714233 534.07983398]
[410.75317383 546.80584717]
[401.33001709 558.49945068]
[390.58993530 568.99645996]
[378.68368530 578.14947510]
[365.77844238 585.83001709]
[352.05535889 591.93029785]
[337.70706177 596.36462402]
[322.93502808 599.07073975]
[307.94659424 600.01074219]
[292.95220947 599.17138672]
[278.16235352 596.56439209]
[263.78463745 592.22644043]
[250.02091980 586.21838379]
[237.06442261 578.62463379]
[225.09703064 569.55169678]
[214.28674316 559.12701416]
[204.78533936 547.49688721]
[196.72616577 534.82464600]
[190.22239685 521.28814697]
[185.36531067 507.07739258]
[182.22311401 492.39193726]
[180.83990479 477.43789673]
[181.23510742 462.42523193]
[183.40318298 447.56466675]
[187.31367493 433.06488037]
[192.91168213 419.12936401]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[5 158]
[6 157]
[31 156]
[32 155]
[33 154]
[35 152]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[49 138]
[50 137]
[51 136]
[56 135]
[57 134]
[58 133]
[60 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
