%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[43.21398926 680.65899658]
[29.27649498 686.26788330]
[14.70505142 689.92669678]
[-0.22888742 691.56719971]
[-15.24710941 691.15881348]
[-30.06983566 688.70922852]
[-44.42092514 684.26403809]
[-58.03303146 677.90600586]
[-70.65256500 669.75360107]
[-82.04442596 659.95880127]
[-91.99640656 648.70391846]
[-100.32308960 636.19873047]
[-106.86936951 622.67614746]
[-111.51328278 608.38812256]
[-114.16831207 593.60076904]
[-114.78501129 578.58966064]
[-113.35188293 563.63439941]
[-109.89562988 549.01361084]
[-104.48062897 534.99963379]
[-97.20777130 521.85357666]
[-88.21253204 509.82028198]
[-77.66250610 499.12399292]
[-65.75421143 489.96395874]
[-52.70951080 482.51080322]
[-38.77141190 476.90338135]
[-24.19957161 473.24618530]
[-9.26545429 471.60729980]
[5.75272322 472.01727295]
[8.19845104 457.21801758]
[10.64417839 442.41873169]
[13.08990574 427.61947632]
[15.53563309 412.82019043]
[8.48044491 396.75186157]
[20.28248215 382.61703491]
[22.50760078 367.78298950]
[24.73271751 352.94894409]
[26.95783424 338.11489868]
[29.18295097 323.28085327]
[31.40806961 308.44680786]
[33.63318634 293.61276245]
[22.19250107 303.31384277]
[7.24373007 304.55249023]
[-5.63760710 296.86669922]
[-11.64708900 283.12310791]
[-8.54332829 268.44775391]
[2.51604986 258.31411743]
[17.40616989 256.50186157]
[30.57338715 263.68685913]
[37.10681534 277.19049072]
[41.07891083 262.72595215]
[39.81887054 255.44351196]
[45.21932220 248.07649231]
[49.40633011 233.67271423]
[53.59334183 219.26893616]
[49.71619797 204.88780212]
[60.99805832 193.79589844]
[65.18506622 179.39212036]
[69.37207794 164.98834229]
[68.14173126 162.46952820]
[67.83498383 159.31159973]
[68.70026398 155.86389160]
[70.85507202 152.55914307]
[74.26084137 149.86569214]
[79.29776001 135.73666382]
[84.33467102 121.60763550]
[89.37158966 107.47860718]
[93.98559570 93.20587158]
[98.17260742 78.80209351]
[94.59494781 63.39070129]
[105.57732391 53.32905579]
[94.81101227 63.77350998]
[81.02734375 69.69047546]
[66.03979492 70.30146790]
[51.82023239 65.52610779]
[40.23948669 55.99267578]
[32.82120514 42.95545959]
[30.54138756 28.12972260]
[33.69998550 13.46605110]
[41.88142776 0.89370167]
[54.00931168 -7.93321657]
[68.48799896 -11.85337067]
[83.41256714 -10.35099792]
[96.81944275 -3.62375975]
[106.94471741 7.44325876]
[112.45623016 21.39400101]
[112.62844849 36.39535522]
[119.90167236 23.27665901]
[127.17490387 10.15796566]
[134.44813538 -2.96072865]
[141.72135925 -16.07942200]
[148.69981384 -29.35726929]
[155.38000488 -42.78764343]
[161.96003723 -56.26737976]
[168.43952942 -69.79572296]
[166.59869385 -88.11764526]
[181.45314026 -97.46176147]
[187.73049927 -111.08507538]
[194.00785828 -124.70838928]
[200.28521729 -138.33171082]
[187.69721985 -146.53903198]
[176.43843079 -156.49179077]
[166.74880981 -167.97782898]
[158.83493042 -180.75234985]
[152.86543274 -194.54302979]
[148.96759033 -209.05595398]
[147.22447205 -223.98175049]
[147.67324829 -239.00228882]
[150.30432129 -253.79739380]
[155.06164551 -268.05172729]
[161.84379578 -281.46142578]
[170.50621033 -293.74069214]
[180.86425781 -304.62777710]
[192.69715881 -313.89062500]
[205.75268555 -321.33181763]
[219.75256348 -326.79269409]
[234.39837646 -330.15689087]
[249.37796021 -331.35272217]
[264.37200928 -330.35464478]
[279.06094360 -327.18399048]
[293.13165283 -321.90829468]
[306.28424072 -314.64001465]
[318.23831177 -305.53408813]
[328.73910522 -294.78463745]
[337.56280518 -282.62072754]
[344.52130127 -269.30166626]
[349.46627808 -255.11135864]
[352.29232788 -240.35224915]
[352.93923950 -225.33894348]
[351.39321899 -210.39144897]
[347.68722534 -195.82836914]
[341.90020752 -181.96012878]
[334.15554810 -169.08230591]
[324.61834717 -157.46940613]
[313.49185181 -147.36895752]
[301.01321411 -138.99626160]
[287.44848633 -132.52976990]
[273.08673096 -128.10733032]
[258.23410034 -125.82318115]
[243.20718384 -125.72603607]
[228.32626343 -127.81795502]
[213.90853882 -132.05435181]
[207.63117981 -118.43103027]
[201.35382080 -104.80771637]
[195.07646179 -91.18440247]
[198.96981812 -79.73152924]
[193.85154724 -68.33034515]
[181.96788025 -63.31623077]
[175.48838806 -49.78788376]
[175.43412781 -42.39742661]
[168.81037903 -36.10744858]
[162.13018799 -22.67707443]
[162.89952087 -19.23607635]
[162.04040527 -15.25148678]
[159.31549072 -11.49274540]
[154.84005737 -8.80619335]
[147.56683350 4.31250095]
[140.29359436 17.43119431]
[133.02037048 30.54988861]
[125.74713898 43.66858292]
[119.98110962 57.51606750]
[123.85825348 71.89720154]
[112.57639313 82.98910522]
[108.38938141 97.39288330]
[109.62563324 100.17877960]
[109.87552643 103.47605896]
[108.94771576 106.92027283]
[106.78815460 110.08137512]
[103.50061798 112.51552582]
[98.46370697 126.64455414]
[93.42678833 140.77359009]
[88.38986969 154.90261841]
[83.77586365 169.17533875]
[79.58885193 183.57913208]
[75.40184021 197.98291016]
[78.97949982 213.39430237]
[67.99712372 223.45594788]
[63.81011581 237.85972595]
[59.62310410 252.26350403]
[55.54343414 266.69805908]
[51.57133865 281.16259766]
[48.46722794 295.83789062]
[46.24211121 310.67193604]
[44.01699448 325.50598145]
[41.79187775 340.34002686]
[39.56676102 355.17407227]
[37.34164429 370.00811768]
[35.11652756 384.84216309]
[42.14142609 395.65942383]
[39.98273087 407.96893311]
[30.33490372 415.26593018]
[27.88917732 430.06518555]
[25.44344902 444.86447144]
[22.99772072 459.66372681]
[20.55199432 474.46301270]
[34.90356445 478.90667725]
[48.51635742 485.26321411]
[61.13677216 493.41421509]
[72.52970123 503.20782471]
[82.48289490 514.46160889]
[90.81092834 526.96594238]
[97.35867310 540.48779297]
[102.00413513 554.77532959]
[104.66076660 569.56231689]
[105.27909088 584.57336426]
[103.84757996 599.52880859]
[100.39290619 614.14996338]
[94.97942352 628.16455078]
[87.70798492 641.31140137]
[78.71405792 653.34564209]
[68.16518402 664.04309082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[49 180]
[50 179]
[52 178]
[53 177]
[54 176]
[56 174]
[57 173]
[58 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 163]
[68 162]
[70 160]
[86 159]
[87 158]
[88 157]
[89 156]
[90 155]
[91 151]
[92 150]
[93 148]
[94 147]
[96 144]
[97 143]
[98 142]
[99 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
