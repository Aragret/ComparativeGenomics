%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[25.40901756 281.97854614]
[28.31523705 296.71005249]
[29.58320045 311.67184448]
[29.19751740 326.68231201]
[27.16287041 341.55926514]
[23.50395775 356.12207031]
[18.26519394 370.19400024]
[11.51017475 383.60415649]
[3.32089901 396.18981934]
[-6.20322371 407.79818726]
[-16.94657898 418.28836060]
[-28.77874947 427.53298950]
[-41.55611038 435.41983032]
[-55.12354660 441.85314941]
[-69.31636810 446.75488281]
[-83.96228790 450.06552124]
[-98.88351440 451.74484253]
[-113.89892578 451.77249146]
[-128.82623291 450.14813232]
[-143.48425293 446.89144897]
[-157.69502258 442.04202271]
[-171.28607178 435.65872192]
[-184.09239197 427.81896973]
[-195.95852661 418.61801147]
[-206.74043274 408.16748047]
[-216.30725098 396.59426880]
[-224.54281616 384.03884888]
[-231.34718323 370.65362549]
[-236.63772583 356.60110474]
[-240.35025024 342.05187988]
[-242.43968201 327.18252563]
[-242.88063049 312.17355347]
[-241.66778564 297.20718384]
[-238.81584167 282.46508789]
[-234.35942078 268.12622070]
[-228.35263062 254.36460876]
[-220.86837769 241.34735107]
[-211.99752808 229.23243713]
[-201.84774780 218.16693115]
[-190.54225159 208.28518677]
[-178.21829224 199.70712280]
[-165.02545166 192.53689575]
[-151.12388611 186.86152649]
[-136.68235779 182.74992371]
[-121.87615204 180.25199890]
[-106.88502502 179.39805603]
[-91.89093781 180.19848633]
[-77.07592010 182.64355469]
[-62.61980057 186.70358276]
[-48.69807053 192.32928467]
[-35.47972107 199.45237732]
[-23.12521553 207.98638916]
[-13.29463577 196.65679932]
[-3.46405458 185.32720947]
[6.36652613 173.99761963]
[-8.37478542 176.77136230]
[-22.31522560 171.23384094]
[-31.13519669 159.10090637]
[-32.10173416 144.13208008]
[-24.91534615 130.96562195]
[-11.80281258 123.68128204]
[3.17280364 124.53621674]
[15.37114620 133.26550293]
[21.01242638 147.16427612]
[18.34851646 161.92608643]
[29.60461235 152.01144409]
[40.86070633 142.09678650]
[52.11680222 132.18212891]
[63.37289810 122.26748657]
[74.62899780 112.35282898]
[85.88509369 102.43817902]
[90.53220367 89.25122070]
[104.20025635 86.30572510]
[115.45635223 76.39107513]
[126.71244812 66.47641754]
[137.96855164 56.56176758]
[123.23653412 59.38448715]
[108.53038788 56.42994690]
[96.03168488 48.13643265]
[87.59452820 35.73423767]
[84.47052002 21.06315994]
[87.12309265 6.29956007]
[95.15874481 -6.36646700]
[107.38544464 -15.05599117]
[121.98942566 -18.47997475]
[136.80427551 -16.13048744]
[149.63230896 -8.35606480]
[158.57055664 3.69000602]
[162.29307556 18.22076035]
[160.24766541 33.08065033]
[152.73899841 46.06385422]
[165.80317688 38.69316483]
[178.86737061 31.32247543]
[191.93154907 23.95178604]
[204.99572754 16.58109665]
[209.38148499 -0.35361511]
[224.36305237 -8.71229458]
[240.43182373 -3.74907088]
[253.38481140 -11.31344986]
[246.80624390 -24.80175972]
[241.25404358 -38.74397278]
[236.75927734 -53.06211853]
[233.34707642 -67.67612457]
[231.03654480 -82.50425720]
[229.84057617 -97.46360016]
[229.76588440 -112.47048950]
[230.81286621 -127.44099426]
[232.97566223 -142.29139709]
[236.24220276 -156.93864441]
[240.59420776 -171.30082703]
[246.00732422 -185.29762268]
[252.45130920 -198.85075378]
[259.89010620 -211.88442993]
[268.28210449 -224.32575989]
[277.58038330 -236.10514832]
[287.73294067 -247.15673828]
[298.68301392 -257.41873169]
[310.36932373 -266.83370972]
[322.72656250 -275.34906006]
[335.68560791 -282.91711426]
[349.17398071 -289.49557495]
[363.11624146 -295.04763794]
[377.43441772 -299.54226685]
[392.04846191 -302.95434570]
[406.87661743 -305.26473999]
[421.83596802 -306.46057129]
[436.84286499 -306.53515625]
[451.81335449 -305.48803711]
[466.66372681 -303.32510376]
[481.31094360 -300.05844116]
[495.67309570 -295.70629883]
[509.66986084 -290.29306030]
[523.22290039 -283.84896851]
[536.25653076 -276.41006470]
[548.69775391 -268.01794434]
[560.47711182 -258.71957397]
[571.52862549 -248.56690979]
[581.79046631 -237.61676025]
[591.20538330 -225.93034363]
[599.72058105 -213.57302856]
[607.28851318 -200.61392212]
[613.86688232 -187.12550354]
[619.41882324 -173.18318176]
[623.91333008 -158.86495972]
[627.32525635 -144.25090027]
[629.63555908 -129.42271423]
[630.83123779 -114.46335602]
[630.90570068 -99.45646667]
[629.85845947 -84.48598480]
[627.69537354 -69.63562012]
[624.42858887 -54.98842621]
[620.07635498 -40.62631607]
[614.66296387 -26.62961769]
[608.21875000 -13.07659817]
[600.77972412 -0.04305636]
[592.38751221 12.39811897]
[583.08898926 24.17735100]
[572.93627930 35.22876358]
[561.98602295 45.49055481]
[550.29949951 54.90533447]
[537.94213867 63.42044830]
[524.98297119 70.98828125]
[511.49447632 77.56650543]
[497.55212402 83.11833191]
[483.23385620 87.61271667]
[468.61975098 91.02452087]
[453.79156494 93.33467102]
[438.83218384 94.53023529]
[423.82528687 94.60454559]
[408.85482788 93.55716705]
[394.00448608 91.39396667]
[379.35729980 88.12704468]
[364.99523926 83.77466583]
[350.99859619 78.36116791]
[337.44561768 71.91683197]
[324.41213989 64.47769928]
[311.97103882 56.08537292]
[300.19189453 46.78677750]
[289.14056396 36.63392258]
[278.87887573 25.68358803]
[269.46420288 13.99701118]
[260.94918823 1.63954878]
[247.99620056 9.20392799]
[246.49893188 22.00188446]
[237.77363586 31.74617767]
[224.83886719 34.72983932]
[212.36642456 29.64528275]
[199.30223083 37.01597214]
[186.23805237 44.38666153]
[173.17387390 51.75735092]
[160.10968018 59.12804031]
[147.88319397 67.81786346]
[136.62710571 77.73251343]
[125.37100220 87.64717102]
[114.11490631 97.56182098]
[109.46779633 110.74877930]
[95.79974365 113.69427490]
[84.54364777 123.60892487]
[73.28755188 133.52357483]
[62.03145599 143.43823242]
[50.77536011 153.35287476]
[39.51926422 163.26753235]
[28.26316643 173.18218994]
[17.69611931 183.82818604]
[7.86553860 195.15779114]
[-1.96504223 206.48738098]
[-11.79562283 217.81697083]
[-1.60516191 228.84501648]
[7.31025076 240.92716980]
[14.84239006 253.91679382]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 207]
[53 206]
[54 205]
[55 204]
[65 203]
[66 202]
[67 201]
[68 200]
[69 199]
[70 198]
[71 197]
[73 195]
[74 194]
[75 193]
[76 192]
[91 191]
[92 190]
[93 189]
[94 188]
[95 187]
[98 183]
[99 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
