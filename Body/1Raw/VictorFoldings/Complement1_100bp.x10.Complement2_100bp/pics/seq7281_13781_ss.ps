%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[110.08705139 752.11138916]
[95.64815521 748.02539062]
[81.52175903 742.96362305]
[67.77372742 736.94958496]
[54.46816254 730.01141357]
[41.66709137 722.18139648]
[29.43020821 713.49603271]
[17.81456375 703.99584961]
[6.87431622 693.72509766]
[-3.33952475 682.73175049]
[-12.77933693 671.06695557]
[-21.40110779 658.78521729]
[-29.16463852 645.94366455]
[-36.03372955 632.60229492]
[-41.97635651 618.82330322]
[-46.96481323 604.67083740]
[-50.97583771 590.21093750]
[-53.99072647 575.51104736]
[-55.99542618 560.63964844]
[-56.98059082 545.66613770]
[-56.94162750 530.66027832]
[-55.87871170 515.69207764]
[-53.79680634 500.83132935]
[-50.70561600 486.14727783]
[-46.61954880 471.70840454]
[-41.55766296 457.58206177]
[-35.54355621 443.83404541]
[-28.60527039 430.52853394]
[-20.77515411 417.72750854]
[-12.08971596 405.49069214]
[-2.58945203 393.87512207]
[7.68134356 382.93493652]
[18.67478371 372.72116089]
[30.33960915 363.28143311]
[42.62143326 354.65975952]
[55.46299362 346.89630127]
[68.80441284 340.02731323]
[82.58349609 334.08477783]
[96.73598480 329.09640503]
[111.19590759 325.08547974]
[125.89582825 322.07067871]
[123.89181519 307.20516968]
[121.88780212 292.33963013]
[119.88378906 277.47409058]
[117.87977600 262.60858154]
[115.76515198 247.75837708]
[113.54003143 232.92433167]
[111.31491852 218.09028625]
[95.87962341 214.50170898]
[82.97189331 205.24215698]
[74.58545685 191.70544434]
[72.02964020 175.94880676]
[75.72498322 160.38024902]
[85.13442993 147.39051819]
[98.84111023 138.98603821]
[96.39537811 124.18676758]
[93.94965363 109.38749695]
[91.39382172 94.60684204]
[88.72802734 79.84562683]
[86.06222534 65.08441162]
[83.39643097 50.32319260]
[80.73063660 35.56197357]
[78.06484222 20.80075645]
[75.39904785 6.03953934]
[72.07678986 -8.58792114]
[68.10469055 -23.05244446]
[64.13259125 -37.51696777]
[60.16049957 -51.98149109]
[56.18840027 -66.44601440]
[52.21630478 -80.91053772]
[48.24420929 -95.37506104]
[43.81643295 -100.28488159]
[42.70040894 -105.85726929]
[44.37605667 -110.32954407]
[40.83638382 -124.90592194]
[37.29671097 -139.48229980]
[33.75704193 -154.05867004]
[30.21736717 -168.63505554]
[26.67769623 -183.21142578]
[23.13802338 -197.78779602]
[19.59835052 -212.36418152]
[4.57626152 -211.55702209]
[-10.33833027 -213.52415466]
[-24.63743782 -218.19857788]
[-37.83404160 -225.42106628]
[-49.47866821 -234.94561768]
[-59.17470551 -246.44786072]
[-66.59191132 -259.53601074]
[-71.47766113 -273.76431274]
[-73.66553497 -288.64810181]
[-73.08103180 -303.68051147]
[-69.74405670 -318.34948730]
[-63.76825714 -332.15545654]
[-55.35717010 -344.62814331]
[-44.79727554 -355.34277344]
[-32.44823837 -363.93441772]
[-18.73066521 -370.11038208]
[-4.11176825 -373.66040039]
[10.91053772 -374.46350098]
[25.82459831 -372.49234009]
[40.12244797 -367.81405640]
[53.31710052 -360.58801270]
[64.95915985 -351.06033325]
[74.65209961 -339.55548096]
[82.06577301 -326.46533203]
[86.94768524 -312.23571777]
[89.13155365 -297.35131836]
[88.54299927 -282.31909180]
[85.20206451 -267.65100098]
[79.22254181 -253.84664917]
[70.80809784 -241.37620544]
[60.24531555 -230.66442871]
[47.89396286 -222.07614136]
[34.17472458 -215.90385437]
[37.71439743 -201.32746887]
[41.25407028 -186.75109863]
[44.79374313 -172.17472839]
[48.33341599 -157.59834290]
[51.87308884 -143.02197266]
[55.41276169 -128.44560242]
[58.95243454 -113.86921692]
[62.70873260 -99.34716034]
[66.68083191 -84.88263702]
[70.65292358 -70.41811371]
[74.62502289 -55.95359039]
[78.59712219 -41.48906326]
[82.56921387 -27.02454185]
[86.54131317 -12.56001663]
[94.88255310 -25.02691841]
[109.56869507 -28.07933807]
[122.18684387 -19.96870995]
[125.50875092 -5.34116936]
[117.63148499 7.42396259]
[103.06748962 11.01423931]
[90.16026306 3.37374377]
[92.82605743 18.13496017]
[95.49185181 32.89617920]
[98.15765381 47.65739441]
[100.82344818 62.41861343]
[103.48924255 77.17983246]
[106.15503693 91.94104767]
[110.57276917 98.68316650]
[108.74892426 106.94177246]
[111.19464874 121.74104309]
[113.64038086 136.54031372]
[127.59994507 139.36546326]
[139.73127747 146.77033997]
[148.58775330 157.84806824]
[153.12144470 171.25523376]
[152.80711365 185.37484741]
[147.70286560 198.51129150]
[138.44084167 209.09399414]
[126.14895630 215.86517334]
[128.37406921 230.69921875]
[130.59919739 245.53326416]
[134.96699524 253.55574036]
[132.74530029 260.60455322]
[134.74931335 275.47009277]
[136.75332642 290.33560181]
[138.75733948 305.20114136]
[140.76135254 320.06668091]
[155.73484802 319.08120728]
[170.74069214 319.11987305]
[185.70890808 320.18249512]
[200.56971741 322.26409912]
[215.25382996 325.35498047]
[229.69277954 329.44076538]
[243.81924438 334.50234985]
[257.56735229 340.51620483]
[270.87301636 347.45422363]
[283.67419434 355.28405762]
[295.91119385 363.96926880]
[307.52697754 373.46929932]
[318.46734619 383.73986816]
[328.68133545 394.73309326]
[338.12130737 406.39773560]
[346.74325562 418.67938232]
[354.50695801 431.52078247]
[361.37622070 444.86209106]
[367.31903076 458.64105225]
[372.30767822 472.79342651]
[376.31887817 487.25326538]
[379.33398438 501.95312500]
[381.33886719 516.82446289]
[382.32424927 531.79797363]
[382.28549194 546.80383301]
[381.22277832 561.77203369]
[379.14105225 576.63281250]
[376.05004883 591.31689453]
[371.96420288 605.75585938]
[366.90249634 619.88226318]
[360.88858032 633.63037109]
[353.95046997 646.93597412]
[346.12051392 659.73706055]
[337.43524170 671.97399902]
[327.93515015 683.58972168]
[317.66448975 694.53002930]
[306.67117310 704.74395752]
[295.00650024 714.18383789]
[282.72476196 722.80572510]
[269.88333130 730.56933594]
[256.54199219 737.43847656]
[242.76298523 743.38122559]
[228.61056519 748.36975098]
[214.15069580 752.38092041]
[199.45082092 755.39587402]
[184.57945251 757.40069580]
[169.60594177 758.38592529]
[154.60009766 758.34710693]
[139.63189697 757.28424072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 155]
[47 154]
[48 153]
[55 145]
[56 144]
[57 143]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 128]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
