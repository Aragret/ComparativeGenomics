%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[117.75389099 374.84097290]
[111.36729431 361.26312256]
[105.83718872 347.31451416]
[101.18495941 333.04904175]
[97.42861176 318.52194214]
[94.58267975 303.78942871]
[92.65817261 288.90847778]
[91.66252899 273.93667603]
[91.59960938 258.93191528]
[92.46965790 243.95227051]
[94.26930237 229.05570984]
[96.99157715 214.29983521]
[100.62596130 199.74174500]
[105.15839386 185.43777466]
[110.57132721 171.44325256]
[116.84382629 157.81233215]
[123.95162964 144.59773254]
[131.86723328 131.85058594]
[119.64074707 123.16075134]
[107.41426086 114.47093201]
[90.67930603 113.32305145]
[83.86428070 97.99556732]
[71.50977325 89.48874664]
[55.75549316 88.03506470]
[49.66087341 74.44445038]
[37.30636215 65.93762207]
[24.95185280 57.43079758]
[12.59734440 48.92396927]
[0.24283557 40.41714478]
[-12.11167336 31.91031647]
[-21.49173737 43.62407684]
[-31.69259071 54.63045120]
[-42.66105270 64.87206268]
[-54.33993912 74.29551697]
[-66.66835785 82.85166931]
[-79.58203125 90.49593353]
[-93.01364136 97.18843842]
[-106.89315796 102.89429474]
[-121.14821625 107.58375549]
[-135.70449829 111.23238373]
[-150.48611450 113.82113647]
[-165.41598511 115.33653259]
[-180.41630554 115.77066803]
[-195.40882874 115.12127686]
[-210.31542969 113.39174652]
[-225.05836487 110.59108734]
[-239.56077576 106.73390961]
[-253.74705505 101.84032440]
[-267.54324341 95.93583679]
[-280.87741089 89.05123138]
[-293.68002319 81.22240448]
[-305.88436890 72.49018097]
[-317.42678833 62.90007019]
[-328.24713135 52.50207901]
[-338.28894043 41.35042191]
[-347.49990845 29.50323296]
[-355.83200073 17.02228165]
[-363.24176025 3.97263980]
[-369.69058228 -9.57765961]
[-375.14480591 -23.55797005]
[-379.57601929 -37.89540482]
[-382.96115112 -52.51521301]
[-385.28250122 -67.34117126]
[-386.52798462 -82.29598999]
[-386.69110107 -97.30169678]
[-385.77102661 -112.28005219]
[-383.77252197 -127.15296936]
[-380.70602417 -141.84291077]
[-376.58752441 -156.27328491]
[-371.43850708 -170.36886597]
[-365.28579712 -184.05615234]
[-358.16146851 -197.26379395]
[-350.10269165 -209.92292786]
[-341.15142822 -221.96755981]
[-331.35440063 -233.33488464]
[-320.76269531 -243.96563721]
[-309.43145752 -253.80439758]
[-297.41983032 -262.79986572]
[-284.79043579 -270.90518188]
[-271.60906982 -278.07803345]
[-257.94451904 -284.28103638]
[-243.86796570 -289.48184204]
[-229.45283508 -293.65338135]
[-214.77426147 -296.77389526]
[-199.90879822 -298.82705688]
[-184.93392944 -299.80221558]
[-169.92771912 -299.69427490]
[-154.96842957 -298.50381470]
[-140.13403320 -296.23699951]
[-125.50186920 -292.90570068]
[-111.14823914 -288.52722168]
[-97.14796448 -283.12445068]
[-83.57403564 -276.72549438]
[-70.49723053 -269.36380005]
[-57.98572540 -261.07766724]
[-46.10474014 -251.91032410]
[-34.91622925 -241.90957642]
[-24.47851562 -231.12756348]
[-14.84602356 -219.62048340]
[-6.06896877 -207.44833374]
[1.80688620 -194.67459106]
[8.74048042 -181.36582947]
[14.69566631 -167.59146118]
[19.64139366 -153.42326355]
[23.55187988 -138.93513489]
[26.40673637 -124.20260620]
[28.19107819 -109.30247498]
[28.89560318 -94.31243134]
[28.51663780 -79.31062317]
[27.05615997 -64.37527466]
[24.52178192 -49.58423996]
[20.92671585 -35.01464081]
[16.28970718 -20.74243164]
[10.63493061 -6.84202719]
[3.99186826 6.61410427]
[-3.60484648 19.55580711]
[8.74966240 28.06263351]
[21.10417175 36.56946182]
[33.45867920 45.07629013]
[45.81319046 53.58311462]
[58.16769791 62.08994293]
[73.03830719 62.93515396]
[80.01660156 77.13423157]
[92.37110901 85.64105988]
[103.93092346 84.22257996]
[113.47394562 90.89880371]
[116.10408783 102.24444580]
[128.33056641 110.93426514]
[140.55705261 119.62409210]
[149.99314880 107.95761108]
[160.13627625 96.90033722]
[170.94721985 86.49504852]
[182.38414001 76.78200531]
[194.40280151 67.79878235]
[206.95671082 59.58013153]
[219.99726868 52.15785599]
[233.47404480 45.56066895]
[247.33491516 39.81409073]
[261.52621460 34.94035339]
[275.99307251 30.95832062]
[290.67950439 27.88339043]
[305.52868652 25.72746086]
[320.48318481 24.49887466]
[335.48513794 24.20238304]
[350.47653198 24.83913422]
[365.39929199 26.40666580]
[380.19577026 28.89891052]
[394.80865479 32.30622864]
[409.18145752 36.61543655]
[423.25854492 41.80986023]
[436.98547363 47.86941147]
[450.30911255 54.77063751]
[463.17794800 62.48684311]
[475.54214478 70.98817444]
[487.35391235 80.24174500]
[498.56756592 90.21175385]
[509.13964844 100.85961914]
[519.02935791 112.14415741]
[528.19830322 124.02170563]
[536.61114502 136.44630432]
[544.23529053 149.36990356]
[551.04119873 162.74249268]
[557.00256348 176.51232910]
[562.09631348 190.62615967]
[566.30279541 205.02935791]
[569.60571289 219.66621399]
[571.99218750 234.48008728]
[573.45312500 249.41368103]
[573.98284912 264.40921021]
[573.57922363 279.40866089]
[572.24389648 294.35400391]
[569.98199463 309.18743896]
[566.80224609 323.85153198]
[562.71704102 338.28958130]
[557.74206543 352.44573975]
[551.89666748 366.26519775]
[545.20343018 379.69451904]
[537.68823242 392.68176270]
[529.38012695 405.17666626]
[520.31134033 417.13085938]
[510.51684570 428.49813843]
[500.03463745 439.23449707]
[488.90521240 449.29843140]
[477.17166138 458.65097046]
[464.87933350 467.25595093]
[452.07583618 475.08004761]
[438.81066895 482.09304810]
[425.13519287 488.26779175]
[411.10226440 493.58035278]
[396.76620483 498.01025391]
[382.18246460 501.54028320]
[367.40747070 504.15682983]
[352.49838257 505.84976196]
[337.51290894 506.61251831]
[322.50900269 506.44213867]
[307.54470825 505.33932495]
[292.67791748 503.30831909]
[277.96615601 500.35696411]
[263.46630859 496.49667358]
[249.23454285 491.74240112]
[235.32586670 486.11254883]
[221.79409790 479.62890625]
[208.69160461 472.31649780]
[196.06906128 464.20370483]
[183.97529602 455.32180786]
[172.45712280 445.70526123]
[161.55909729 435.39123535]
[151.32336426 424.41961670]
[141.78953552 412.83288574]
[132.99449158 400.67581177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 129]
[19 128]
[20 127]
[22 124]
[23 123]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
