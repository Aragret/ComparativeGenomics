%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[208.22569275 226.97145081]
[210.47358704 212.13417053]
[213.78625488 197.49778748]
[218.14640808 183.13858032]
[223.53134155 169.13142395]
[209.95513916 162.75282288]
[196.37893677 156.37422180]
[182.80271912 149.99560547]
[169.22651672 143.61700439]
[155.65031433 137.23840332]
[142.07409668 130.85980225]
[139.39445496 131.68296814]
[136.22727966 131.49429321]
[132.95632935 130.10275269]
[130.02738953 127.45967865]
[127.89706421 123.67607117]
[114.72459412 116.50070953]
[101.55211639 109.32534027]
[96.31563568 109.63069153]
[91.28083038 106.98040009]
[88.09891510 101.73517609]
[75.14591980 94.17079163]
[62.19292068 86.60641479]
[46.37415695 86.32851410]
[39.28559113 73.22884369]
[26.33259201 65.66445923]
[17.87979126 78.06344604]
[8.58266544 89.84259033]
[-1.51348686 100.94450378]
[-12.35947895 111.31509399]
[-23.90246964 120.90383911]
[-36.08622360 129.66403198]
[-48.85137939 137.55297852]
[-62.13574600 144.53225708]
[-75.87461090 150.56785583]
[-90.00102234 155.63037109]
[-104.44617462 159.69514465]
[-119.13967896 162.74237061]
[-134.00996399 164.75718689]
[-148.98455811 165.72981262]
[-163.99053955 165.65547180]
[-178.95477295 164.53456116]
[-193.80435181 162.37251282]
[-208.46694946 159.17987061]
[-222.87112427 154.97219849]
[-236.94670105 149.76997375]
[-250.62509155 143.59857178]
[-263.83966064 136.48803711]
[-276.52603149 128.47300720]
[-288.62240601 119.59254456]
[-300.06985474 109.88991547]
[-310.81256104 99.41238403]
[-320.79824829 88.21099854]
[-329.97821045 76.34033203]
[-338.30776978 63.85821152]
[-345.74630737 50.82545471]
[-352.25762939 37.30556107]
[-357.80996704 23.36438942]
[-362.37628174 9.06986523]
[-365.93435669 -5.50836945]
[-368.46679688 -20.29929161]
[-369.96133423 -35.23083878]
[-370.41064453 -50.23026657]
[-369.81253052 -65.22450256]
[-368.16995239 -80.14048767]
[-365.49087524 -94.90555573]
[-361.78836060 -109.44776917]
[-357.08044434 -123.69628906]
[-351.39007568 -137.58168030]
[-344.74493408 -151.03631592]
[-337.17745972 -163.99462891]
[-328.72448730 -176.39349365]
[-319.42718506 -188.17251587]
[-309.33087158 -199.27427673]
[-298.48474121 -209.64471436]
[-286.94158936 -219.23329163]
[-274.75772095 -227.99330139]
[-261.99246216 -235.88208008]
[-248.70799255 -242.86116028]
[-234.96903992 -248.89656067]
[-220.84255981 -253.95887756]
[-206.39733887 -258.02343750]
[-191.70379639 -261.07046509]
[-176.83348083 -263.08508301]
[-161.85887146 -264.05746460]
[-146.85290527 -263.98291016]
[-131.88868713 -262.86178589]
[-117.03912354 -260.69952393]
[-102.37657166 -257.50668335]
[-87.97245789 -253.29879761]
[-73.89696503 -248.09637451]
[-60.21865845 -241.92477417]
[-47.00418854 -234.81404114]
[-34.31792831 -226.79884338]
[-22.22168350 -217.91821289]
[-10.77439213 -208.21540833]
[-0.03182156 -197.73773193]
[9.95369053 -186.53619385]
[19.13349533 -174.66539001]
[27.46286964 -162.18316650]
[34.90123367 -149.15029907]
[41.41234589 -135.63031006]
[46.96448898 -121.68905640]
[51.53060913 -107.39447021]
[55.08845901 -92.81618500]
[57.62071228 -78.02522278]
[59.11502457 -63.09365845]
[59.56411743 -48.09422302]
[58.96580505 -33.09999847]
[57.32300186 -18.18403625]
[54.64370728 -3.41900587]
[50.94098282 11.12315845]
[46.23286057 25.37160873]
[40.54228210 39.25692749]
[33.89697266 52.71146393]
[46.84997177 60.27584076]
[61.74225235 60.01268768]
[69.75730133 73.65341949]
[82.71029663 81.21779633]
[95.66329956 88.78217316]
[108.72748566 96.15286255]
[121.89995575 103.32823181]
[135.07243347 110.50360107]
[148.45271301 117.28359222]
[162.02891541 123.66219330]
[175.60511780 130.04080200]
[189.18133545 136.41940308]
[202.75753784 142.79800415]
[216.33374023 149.17662048]
[229.90994263 155.55522156]
[237.25457764 142.46881104]
[245.52435303 129.94648743]
[254.67616272 118.05353546]
[264.66226196 106.85196686]
[275.43063354 96.40017700]
[286.92514038 86.75265503]
[299.08578491 77.95970154]
[311.84924316 70.06716919]
[325.14892578 63.11619186]
[338.91552734 57.14301300]
[353.07723999 52.17877960]
[367.56024170 48.24936676]
[382.28903198 45.37526321]
[397.18682861 43.57145691]
[412.17593384 42.84734726]
[427.17822266 43.20671082]
[442.11544800 44.64767838]
[456.90979004 47.16272736]
[471.48406982 50.73875427]
[485.76232910 55.35711288]
[499.67010498 60.99372482]
[513.13488770 67.61920166]
[526.08654785 75.19899750]
[538.45745850 83.69360352]
[550.18316650 93.05873108]
[561.20251465 103.24554443]
[571.45812988 114.20094299]
[580.89642334 125.86780548]
[589.46832275 138.18530273]
[597.12902832 151.08923340]
[603.83862305 164.51229858]
[609.56219482 178.38452148]
[614.26983643 192.63359070]
[617.93701172 207.18521118]
[620.54461670 221.96351624]
[622.07904053 236.89144897]
[622.53228760 251.89118958]
[621.90197754 266.88455200]
[620.19146729 281.79333496]
[617.40960693 296.53982544]
[613.57092285 311.04711914]
[608.69543457 325.23962402]
[602.80853271 339.04333496]
[595.94091797 352.38626099]
[588.12841797 365.19888306]
[579.41174316 377.41433716]
[569.83636475 388.96896362]
[559.45220947 399.80255127]
[548.31335449 409.85858154]
[536.47790527 419.08465576]
[524.00756836 427.43264771]
[510.96740723 434.85903931]
[497.42532349 441.32510376]
[483.45199585 446.79714966]
[469.12020874 451.24664307]
[454.50473022 454.65039062]
[439.68173218 456.99063110]
[424.72851562 458.25518799]
[409.72305298 458.43743896]
[394.74353027 457.53643799]
[379.86807251 455.55691528]
[365.17422485 452.50915527]
[350.73861694 448.40905762]
[336.63647461 443.27801514]
[322.94137573 437.14276123]
[309.72463989 430.03527832]
[297.05526733 421.99261475]
[284.99923706 413.05673218]
[273.61941528 403.27423096]
[262.97518921 392.69604492]
[253.12197876 381.37738037]
[244.11119080 369.37722778]
[235.98980713 356.75817871]
[228.80015564 343.58596802]
[222.57974243 329.92932129]
[217.36096191 315.85940552]
[213.17106628 301.44961548]
[210.03186035 286.77502441]
[207.95973206 271.91220093]
[206.96548462 256.93856812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 130]
[6 129]
[7 128]
[8 127]
[9 126]
[10 125]
[11 124]
[16 123]
[17 122]
[18 121]
[21 120]
[22 119]
[23 118]
[25 116]
[26 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
