%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[78.04531860 502.29406738]
[75.41893768 517.14508057]
[69.18103027 530.87603760]
[59.72369766 542.62377930]
[47.64144897 551.64984131]
[33.69377899 557.38690186]
[18.75744820 559.47418213]
[3.77136922 557.78057861]
[-10.32242012 552.41253662]
[-22.63797188 543.70745850]
[-32.40112305 532.21264648]
[-38.99814987 518.65057373]
[-42.01435852 503.87377930]
[-41.26015091 488.81115723]
[-36.78293228 474.40960693]
[-28.86414909 461.57434082]
[-18.00158119 451.11224365]
[-4.87805653 443.68096924]
[9.68146706 439.74765015]
[24.76176643 439.55950928]
[28.30143929 424.98312378]
[26.82512856 417.74142456]
[32.00384140 410.21688843]
[30.63551521 402.95401001]
[35.92568207 395.50738525]
[39.89778137 381.04287720]
[43.86987686 366.57833862]
[47.84197235 352.11383057]
[51.81406784 337.64929199]
[54.58967972 322.90832520]
[56.15020370 307.98974609]
[57.71072388 293.07113647]
[59.27124786 278.15252686]
[56.84067535 271.17297363]
[60.96767807 263.02401733]
[62.75014114 248.13029480]
[64.53260803 233.23657227]
[66.31507111 218.34284973]
[54.57768631 227.68275452]
[39.58000946 227.41860962]
[28.17878723 217.67120361]
[25.58649826 202.89689636]
[32.98830414 189.85031128]
[47.00019836 184.49618530]
[61.21613312 189.28233337]
[69.13716125 202.02239990]
[64.41091156 187.89753723]
[75.01256561 176.15379333]
[78.33482361 161.52633667]
[81.65708923 146.89888000]
[84.97934723 132.27142334]
[88.30160522 117.64395905]
[80.31895447 107.79860687]
[79.39141846 95.15766907]
[85.85149384 84.25257111]
[97.38341522 78.99250031]
[100.92308807 64.41612244]
[104.46276093 49.83974838]
[108.00243378 35.26337051]
[95.23834229 43.14232635]
[80.37831879 41.09786987]
[70.21617126 30.06470108]
[69.39789581 15.08703709]
[78.29759979 3.01246333]
[92.84645081 -0.63868767]
[106.39291382 5.80284119]
[112.74390411 19.39391518]
[117.78081512 5.26488590]
[122.81773376 -8.86414337]
[127.85465240 -22.99317360]
[132.89157104 -37.12220383]
[121.26413727 -46.81901550]
[113.67011261 -59.88434601]
[111.00936127 -74.73159027]
[113.58401489 -89.56537628]
[121.06431580 -102.59866333]
[132.53070068 -112.26802826]
[146.58679199 -117.42118835]
[161.52949524 -117.45431519]
[166.56640625 -131.58334351]
[171.60333252 -145.71237183]
[176.64024353 -159.84140015]
[181.67715454 -173.97042847]
[186.71408081 -188.09945679]
[191.75099182 -202.22850037]
[189.09696960 -217.82550049]
[200.65875244 -227.21562195]
[198.00474548 -242.81263733]
[209.56652832 -252.20275879]
[206.91250610 -267.79977417]
[218.47428894 -277.18991089]
[222.98191833 -291.49658203]
[226.95402527 -305.96112061]
[230.92611694 -320.42562866]
[233.92088318 -335.12362671]
[235.92489624 -349.98916626]
[237.92890930 -364.85470581]
[239.93293762 -379.72021484]
[225.95375061 -385.38003540]
[213.82177734 -394.33917236]
[204.29963684 -406.03445435]
[197.98591614 -419.73071289]
[195.27746582 -434.56698608]
[196.34455872 -449.61065674]
[201.12013245 -463.91607666]
[209.30395508 -476.58398438]
[220.38162231 -486.81805420]
[233.65675354 -493.97497559]
[248.29489136 -497.60485840]
[263.37585449 -497.47952271]
[277.95162964 -493.60684204]
[291.10595703 -486.23028564]
[302.01199341 -475.81350708]
[309.98416138 -463.01132202]
[314.52130127 -448.62854004]
[315.33822632 -433.56918335]
[312.38357544 -418.77996826]
[305.84307861 -405.19055176]
[296.12786865 -393.65515137]
[283.84866333 -384.89886475]
[269.77734375 -379.47219849]
[254.79846191 -377.71621704]
[252.79444885 -362.85067749]
[250.79043579 -347.98516846]
[248.78642273 -333.11962891]
[259.58987427 -343.52563477]
[274.28320312 -346.54330444]
[288.31350708 -341.23754883]
[297.33331299 -329.25244141]
[298.54779053 -314.30169678]
[291.58056641 -301.01794434]
[278.59054565 -293.51730347]
[263.60281372 -294.12396240]
[251.26150513 -302.64990234]
[245.39064026 -316.45355225]
[241.41854858 -301.98901367]
[237.44644165 -287.52450562]
[251.57537842 -292.56167603]
[264.40270996 -284.78610229]
[266.47259521 -269.92959595]
[256.25921631 -258.94384766]
[241.29145813 -259.92712402]
[232.60331726 -272.15298462]
[235.61761475 -257.56658936]
[223.69555664 -247.16584778]
[226.70983887 -232.57943726]
[214.78779602 -222.17871094]
[217.80207825 -207.59230042]
[205.88002014 -197.19157410]
[200.84310913 -183.06254578]
[195.80618286 -168.93351746]
[190.76927185 -154.80448914]
[185.73236084 -140.67546082]
[180.69543457 -126.54643250]
[175.65852356 -112.41739655]
[187.21044922 -102.93909454]
[194.83682251 -90.05625153]
[197.60058594 -75.31392670]
[195.14918518 -60.48786545]
[187.75946045 -47.37062454]
[176.30648804 -37.55484390]
[162.16000366 -32.23988342]
[147.02059937 -32.08528519]
[141.98367310 -17.95625687]
[136.94676208 -3.82722735]
[131.90985107 10.30180168]
[126.87293243 24.43083191]
[122.57880402 38.80304337]
[119.03913879 53.37942123]
[115.49946594 67.95579529]
[111.95979309 82.53217316]
[120.86601257 96.42630768]
[117.09102631 112.49233246]
[102.92906189 120.96621704]
[99.60680389 135.59367371]
[96.28454590 150.22113037]
[92.96228790 164.84860229]
[89.64002991 179.47605896]
[94.12864685 194.64717102]
[83.76462555 205.34466553]
[81.20879364 220.12532043]
[79.42632294 235.01904297]
[77.64385986 249.91275024]
[75.86139679 264.80645752]
[74.18984985 279.71304321]
[72.62933350 294.63165283]
[71.06880951 309.55026245]
[69.50828552 324.46887207]
[79.20909119 313.02795410]
[93.08072662 307.32025146]
[108.02423096 308.62091064]
[120.70118713 316.63931274]
[128.27954102 329.58413696]
[129.06623840 344.56347656]
[122.88556671 358.23095703]
[111.11828613 367.53314209]
[96.39323425 370.39196777]
[82.00003052 366.16873169]
[71.15415192 355.80694580]
[66.27859497 341.62139893]
[62.30649567 356.08590698]
[58.33440018 370.55044556]
[54.36230469 385.01495361]
[50.39020538 399.47949219]
[46.52590179 413.97317505]
[42.87781525 428.52279663]
[39.33814240 443.09918213]
[52.65264511 450.18258667]
[63.78672409 460.35525513]
[72.04047394 472.97772217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 207]
[21 206]
[23 205]
[25 204]
[26 203]
[27 202]
[28 201]
[29 200]
[30 188]
[31 187]
[32 186]
[33 185]
[35 184]
[36 183]
[37 182]
[38 181]
[46 180]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[56 171]
[57 170]
[58 169]
[59 168]
[67 167]
[68 166]
[69 165]
[70 164]
[71 163]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[87 147]
[89 145]
[91 143]
[92 137]
[93 136]
[94 135]
[95 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
