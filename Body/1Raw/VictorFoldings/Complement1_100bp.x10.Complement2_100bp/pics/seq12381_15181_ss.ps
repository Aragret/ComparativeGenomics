%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[121.66781616 815.44055176]
[107.01723480 812.20544434]
[92.55780792 808.20159912]
[78.32984161 803.44030762]
[64.37297821 797.93469238]
[50.72612381 791.70019531]
[37.42731857 784.75421143]
[24.51362419 777.11602783]
[12.02103615 768.80694580]
[-0.01562855 759.85015869]
[-11.56282043 750.27062988]
[-22.58835411 740.09503174]
[-33.06150055 729.35168457]
[-42.95307159 718.07061768]
[-52.23549271 706.28326416]
[-60.88289261 694.02246094]
[-68.87117004 681.32232666]
[-76.17807007 668.21832275]
[-82.78321075 654.74700928]
[-88.66819000 640.94580078]
[-93.81660461 626.85327148]
[-98.21410370 612.50866699]
[-101.84843445 597.95202637]
[-104.70946503 583.22381592]
[-106.78922272 568.36511230]
[-108.08190155 553.41741943]
[-108.58391571 538.42230225]
[-108.29385376 523.42156982]
[-107.21252441 508.45709229]
[-105.34294128 493.57052612]
[-102.69032288 478.80337524]
[-99.26205444 464.19677734]
[-95.06769562 449.79147339]
[-90.11894226 435.62759399]
[-84.42957306 421.74465942]
[-78.01545715 408.18130493]
[-70.89446259 394.97537231]
[-63.08644485 382.16363525]
[-54.61316681 369.78182983]
[-45.49823761 357.86447144]
[-35.76707077 346.44476318]
[-25.44678307 335.55453491]
[-14.56614208 325.22415161]
[-3.15547180 315.48239136]
[8.75342178 306.35638428]
[21.12734795 297.87161255]
[33.93181610 290.05169678]
[47.13114166 282.91845703]
[60.68853378 276.49176025]
[74.56620026 270.78948975]
[88.72547150 265.82760620]
[103.12686920 261.61987305]
[117.73027039 258.17803955]
[115.06447601 243.41682434]
[112.39868164 228.65560913]
[109.73288727 213.89437866]
[106.38983154 210.48365784]
[105.15387726 204.93664551]
[107.21433258 198.65443420]
[104.98921204 183.82038879]
[102.76409149 168.98634338]
[100.53897858 154.15229797]
[98.31385803 139.31826782]
[86.34750366 136.91040039]
[75.69451904 130.95176697]
[67.37971497 122.01557922]
[62.20298386 110.96148682]
[60.66232300 98.85290527]
[62.90594101 86.85466766]
[68.71800995 76.12101746]
[77.53940582 67.68451691]
[88.52150726 62.35676956]
[86.96098328 47.43816376]
[77.82997131 34.51782608]
[84.20120239 21.05466652]
[82.64067841 6.13606119]
[73.50966644 -6.78427744]
[79.88089752 -20.24743652]
[78.32038116 -35.16604233]
[63.30408859 -35.60710907]
[48.48058319 -38.04578018]
[34.11440277 -42.43853760]
[20.46192932 -48.70698166]
[7.76680613 -56.73924637]
[-3.74440694 -66.39198303]
[-13.86627865 -77.49294281]
[-22.41817284 -89.84399414]
[-29.24746895 -103.22473145]
[-34.23229218 -117.39635468]
[-37.28368378 -132.10595703]
[-38.34718323 -147.09103394]
[-37.40381622 -162.08415222]
[-34.47041702 -176.81773376]
[-29.59933281 -191.02885437]
[-22.87749672 -204.46389771]
[-14.42486572 -216.88310242]
[-4.39228868 -228.06481934]
[7.04119205 -237.80950928]
[19.67153168 -245.94326782]
[33.27333069 -252.32092285]
[47.60384369 -256.82867432]
[62.40732574 -259.38607788]
[77.41959381 -259.94747925]
[92.37274170 -258.50286865]
[106.99990845 -255.07801819]
[121.04004669 -249.73406982]
[134.24259949 -242.56637573]
[146.37196350 -233.70285034]
[157.21165466 -223.30166626]
[166.56825256 -211.54847717]
[174.27474976 -198.65299988]
[180.19363403 -184.84538269]
[184.21926880 -170.37203979]
[186.27980042 -155.49125671]
[186.33848572 -140.46861267]
[184.39425659 -125.57218170]
[180.48179626 -111.06783295]
[174.67095947 -97.21440125]
[167.06542969 -84.25911713]
[157.80094910 -72.43318939]
[147.04283142 -61.94765472]
[134.98307800 -52.98965073]
[121.83691406 -45.71903610]
[107.83894348 -40.26556396]
[93.23898315 -36.72656250]
[94.79950714 -21.80795860]
[103.81890106 -9.95469856]
[97.55928802 4.57553816]
[99.11980438 19.49414253]
[108.13920593 31.34740257]
[101.87958527 45.87763977]
[103.44010925 60.79624557]
[120.22552490 66.24060059]
[132.94444275 78.47252655]
[139.03965759 95.03270721]
[137.28565979 112.59159851]
[128.03511047 127.61885834]
[113.14790344 137.09313965]
[115.37302399 151.92718506]
[117.59813690 166.76123047]
[119.82325745 181.59527588]
[122.04837036 196.42932129]
[124.49410248 211.22859192]
[127.15989685 225.98980713]
[129.82569885 240.75102234]
[132.49148560 255.51223755]
[147.37629700 253.62866211]
[162.33976746 252.53324890]
[177.34019470 252.22908020]
[192.33576965 252.71697998]
[207.28469849 253.99560547]
[222.14532471 256.06137085]
[236.87620544 258.90853882]
[251.43630981 262.52917480]
[265.78503418 266.91317749]
[279.88238525 272.04833984]
[293.68908691 277.92034912]
[307.16665649 284.51278687]
[320.27752686 291.80737305]
[332.98513794 299.78369141]
[345.25408936 308.41955566]
[357.05020142 317.69088745]
[368.34054565 327.57183838]
[379.09371948 338.03488159]
[389.27969360 349.05081177]
[398.87008667 360.58898926]
[407.83819580 372.61721802]
[416.15902710 385.10198975]
[423.80935669 398.00851440]
[430.76788330 411.30078125]
[437.01519775 424.94174194]
[442.53390503 438.89343262]
[447.30862427 453.11691284]
[451.32601929 467.57257080]
[454.57492065 482.22009277]
[457.04626465 497.01867676]
[458.73315430 511.92703247]
[459.63092041 526.90368652]
[459.73703003 541.90679932]
[459.05117798 556.89465332]
[457.57531738 571.82537842]
[455.31350708 586.65740967]
[452.27209473 601.34942627]
[448.45953369 615.86047363]
[443.88647461 630.15008545]
[438.56564331 644.17840576]
[432.51187134 657.90637207]
[425.74206543 671.29571533]
[418.27502441 684.30914307]
[410.13162231 696.91033936]
[401.33453369 709.06420898]
[391.90826416 720.73687744]
[381.87911987 731.89581299]
[371.27502441 742.50988770]
[360.12554932 752.54949951]
[348.46176147 761.98675537]
[336.31616211 770.79528809]
[323.72262573 778.95056152]
[310.71624756 786.42980957]
[297.33325195 793.21221924]
[283.61099243 799.27893066]
[269.58767700 804.61291504]
[255.30238342 809.19946289]
[240.79495239 813.02563477]
[226.10580444 816.08087158]
[211.27589417 818.35662842]
[196.34654236 819.84655762]
[181.35935974 820.54650879]
[166.35614014 820.45446777]
[151.37866211 819.57086182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 146]
[54 145]
[55 144]
[56 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[72 132]
[73 131]
[75 129]
[76 128]
[78 126]
[79 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
