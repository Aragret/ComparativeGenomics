%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[53.13750458 497.25619507]
[54.08020020 482.22537231]
[58.23247147 467.74874878]
[65.40010834 454.50341797]
[75.24787140 443.10888672]
[87.31516266 434.09805298]
[101.03756714 427.89245605]
[97.93345642 413.21716309]
[94.82934570 398.54183960]
[91.72524261 383.86654663]
[81.52163696 373.01593018]
[86.23563385 357.91333008]
[83.13152313 343.23803711]
[80.02741241 328.56271362]
[75.24684143 342.78054810]
[65.44729614 354.13699341]
[52.08249283 360.94741821]
[37.13501358 362.20153809]
[22.82222748 357.71331787]
[11.26735306 348.14855957]
[4.18448639 334.92608643]
[2.62432957 320.00744629]
[6.81832218 305.60571289]
[16.14431000 293.85726929]
[29.21883774 286.50494385]
[44.10237885 284.63940430]
[58.58704758 288.53741455]
[70.52412415 297.62069702]
[78.14218903 310.54000854]
[78.14218903 295.54000854]
[78.14218903 280.54000854]
[78.14218903 265.54000854]
[78.14218903 250.54000854]
[66.79740143 260.35305786]
[51.82723236 259.40750122]
[41.80727768 248.24505615]
[42.47742081 233.26004028]
[53.45377350 223.03654480]
[68.44858551 223.43107605]
[78.87178802 234.21673584]
[80.21002197 219.27655029]
[72.69691467 209.79605103]
[73.68955231 197.33819580]
[83.19947815 188.62475586]
[76.82824707 175.16159058]
[85.95925903 162.24125671]
[87.51978302 147.32264709]
[89.08030701 132.40403748]
[82.70906830 118.94088745]
[91.84008789 106.02054596]
[89.47990417 98.31327057]
[93.53651428 90.89202881]
[95.31897736 75.99831390]
[97.10144806 61.10459518]
[98.88391113 46.21087646]
[87.73713684 56.24827576]
[72.83187103 57.93144608]
[59.72740936 50.63260269]
[53.31139374 37.07403564]
[55.97683716 22.31275558]
[66.72959900 11.85435390]
[81.55915833 9.59955597]
[94.93446350 16.38934708]
[101.86705017 29.69245338]
[93.90734863 16.30286980]
[97.70472717 1.57077622]
[110.51869965 -5.93506432]
[114.05837250 -20.51144028]
[117.59804535 -35.08781433]
[113.33580017 -50.32408142]
[123.85794067 -60.86608124]
[127.39761353 -75.44245911]
[123.13536835 -90.67872620]
[133.65751648 -101.22071838]
[137.19718933 -115.79709625]
[140.73686218 -130.37347412]
[144.27653503 -144.94984436]
[147.81620789 -159.52622986]
[151.35588074 -174.10260010]
[149.88470459 -179.11087036]
[150.42745972 -183.72158813]
[152.49543762 -187.23419189]
[155.39277649 -189.24363708]
[159.57978821 -203.64741516]
[163.76679993 -218.05119324]
[167.95381165 -232.45497131]
[164.37614441 -247.86636353]
[175.35852051 -257.92800903]
[178.57179260 -272.57980347]
[180.79690552 -287.41384888]
[183.02203369 -302.24789429]
[185.24714661 -317.08193970]
[187.47225952 -331.91598511]
[173.21197510 -336.69253540]
[159.99787903 -343.87295532]
[148.23150635 -353.23904419]
[138.27044678 -364.50616455]
[130.41738892 -377.33197021]
[124.91098785 -391.32662964]
[121.91857910 -406.06491089]
[121.53108978 -421.09887695]
[123.76030731 -435.97174072]
[128.53848267 -450.23147583]
[135.72039795 -463.44476318]
[145.08782959 -475.21008301]
[156.35609436 -485.16986084]
[169.18275452 -493.02145386]
[183.17805481 -498.52627563]
[197.91665649 -501.51702881]
[212.95069885 -501.90280151]
[227.82330322 -499.67190552]
[242.08248901 -494.89212036]
[255.29496765 -487.70867920]
[267.05920410 -478.33993530]
[277.01773071 -467.07052612]
[284.86785889 -454.24298096]
[290.37109375 -440.24707031]
[293.36016846 -425.50811768]
[293.74423218 -410.47402954]
[291.51165771 -395.60168457]
[286.73025513 -381.34301758]
[279.54531860 -368.13137817]
[270.17523193 -356.36819458]
[258.90472412 -346.41094971]
[246.07626343 -338.56225586]
[232.07972717 -333.06063843]
[217.34043884 -330.07324219]
[202.30630493 -329.69085693]
[200.08119202 -314.85681152]
[197.85607910 -300.02276611]
[195.63095093 -285.18872070]
[193.40583801 -270.35467529]
[204.36303711 -280.59869385]
[219.09965515 -283.39724731]
[233.04940796 -277.88320923]
[241.88978577 -265.76513672]
[242.88151550 -250.79795837]
[235.71730042 -237.61941528]
[222.61705017 -230.31301880]
[207.64001465 -231.14274597]
[195.42700195 -239.85148621]
[189.76229858 -253.74099731]
[193.63945007 -239.35986328]
[182.35758972 -228.26795959]
[178.17057800 -213.86418152]
[173.98356628 -199.46040344]
[169.79655457 -185.05662537]
[165.93225098 -170.56292725]
[162.39257812 -155.98655701]
[158.85290527 -141.41017151]
[155.31323242 -126.83380127]
[151.77355957 -112.25742340]
[148.23388672 -97.68105316]
[152.74931335 -83.48738098]
[141.97398376 -71.90278625]
[138.43432617 -57.32640839]
[142.94975281 -43.13274002]
[132.17442322 -31.54814339]
[128.63475037 -16.97176743]
[125.09507751 -2.39539218]
[133.03955078 10.15135384]
[129.65747070 24.98429489]
[116.44342041 33.23212433]
[113.77762604 47.99334335]
[111.99516296 62.88706207]
[110.21269226 77.78077698]
[108.43022919 92.67449188]
[106.75868988 107.58106995]
[113.01830292 122.11130524]
[103.99890900 133.96456909]
[102.43838501 148.88316345]
[100.87786102 163.80177307]
[107.13748169 178.33201599]
[98.11808777 190.18527222]
[106.00443268 206.82519531]
[95.15020752 220.61479187]
[93.81197357 235.55496216]
[93.14218903 250.54000854]
[93.14218903 265.54000854]
[93.14218903 280.54000854]
[93.14218903 295.54000854]
[93.14218903 310.54000854]
[94.70271301 325.45861816]
[97.80682373 340.13391113]
[100.91093445 354.80920410]
[111.33656311 366.70950317]
[106.40054321 380.76242065]
[109.50465393 395.43774414]
[112.60876465 410.11303711]
[115.71287537 424.78833008]
[130.77276611 424.90594482]
[145.45516968 428.25866699]
[159.07339478 434.68969727]
[170.99046326 443.89825439]
[180.64900208 455.45364380]
[187.59727478 468.81536865]
[191.51028442 483.35848999]
[192.20501709 498.40280151]
[189.64897156 513.24462891]
[183.96171570 527.18988037]
[175.40922546 539.58618164]
[164.39154053 549.85388184]
[151.42398071 557.51257324]
[137.11303711 562.20422363]
[122.12808228 563.70922852]
[107.16998291 561.95733643]
[92.93834686 557.03039551]
[80.09883118 549.15887451]
[69.25194550 538.71093750]
[60.90502548 526.17529297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[10 187]
[12 185]
[13 184]
[14 183]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[40 177]
[41 176]
[44 174]
[46 172]
[47 171]
[48 170]
[50 168]
[52 167]
[53 166]
[54 165]
[55 164]
[64 163]
[67 160]
[68 159]
[69 158]
[71 156]
[72 155]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[83 147]
[84 146]
[85 145]
[86 144]
[88 142]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
