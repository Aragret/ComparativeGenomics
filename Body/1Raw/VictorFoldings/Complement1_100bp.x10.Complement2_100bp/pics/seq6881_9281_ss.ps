%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[128.00848389 899.36145020]
[113.56958771 895.27551270]
[99.44319916 890.21368408]
[85.69516754 884.19970703]
[72.38959503 877.26147461]
[59.58852768 869.43145752]
[47.35164261 860.74609375]
[35.73600006 851.24591064]
[24.79575157 840.97521973]
[14.58191109 829.98181152]
[5.14209843 818.31707764]
[-3.47967243 806.03527832]
[-11.24320316 793.19378662]
[-18.11229515 779.85241699]
[-24.05492210 766.07336426]
[-29.04337692 751.92089844]
[-33.05440140 737.46099854]
[-36.06929016 722.76110840]
[-38.07399368 707.88977051]
[-39.05915451 692.91619873]
[-39.02019119 677.91040039]
[-37.95727539 662.94219971]
[-35.87537003 648.08142090]
[-32.78417969 633.39739990]
[-28.69811440 618.95849609]
[-23.63622856 604.83215332]
[-17.62212181 591.08416748]
[-10.68383503 577.77862549]
[-2.85371900 564.97760010]
[5.83171940 552.74078369]
[15.33198357 541.12518311]
[25.60277939 530.18505859]
[36.59621811 519.97125244]
[48.26104355 510.53152466]
[60.54286957 501.90985107]
[73.38442993 494.14639282]
[86.72585297 487.27740479]
[100.50492859 481.33486938]
[114.65742493 476.34649658]
[129.11734009 472.33557129]
[143.81726074 469.32077026]
[141.81324768 454.45526123]
[139.80923462 439.58972168]
[137.80522156 424.72421265]
[128.43690491 413.14474487]
[134.26113892 398.43457031]
[132.25712585 383.56903076]
[130.25309753 368.70352173]
[128.13847351 353.85330200]
[125.91336060 339.01925659]
[123.68824768 324.18521118]
[109.21646118 323.27569580]
[95.24631500 319.36791992]
[82.39223480 312.63110352]
[71.22013092 303.35897827]
[62.22243118 291.95693970]
[55.79642487 278.92440796]
[52.22669983 264.83276367]
[51.67253113 250.30049133]
[54.16079712 235.96595764]
[59.58467865 222.45933533]
[67.70822906 210.37496948]
[78.17665863 200.24517822]
[90.53181458 192.51681519]
[104.23223877 187.53153992]
[102.22821808 172.66601562]
[100.22420502 157.80049133]
[98.22019196 142.93496704]
[83.65183258 139.74061584]
[71.05279541 131.75906372]
[61.94076538 119.95177460]
[57.41339874 105.74107361]
[58.01606369 90.83879852]
[63.67615891 77.04009247]
[73.71186829 66.00716400]
[86.91427612 59.06905365]
[84.91026306 44.20352554]
[82.90625000 29.33799553]
[80.90223694 14.47246838]
[71.39058685 1.82972181]
[77.35814667 -11.81716347]
[75.35413361 -26.68269157]
[71.62200165 -32.14004898]
[71.26046753 -37.81158447]
[73.51859283 -42.01990128]
[71.95806885 -56.93850327]
[70.28652954 -71.84507751]
[68.50405884 -86.73879242]
[66.72159576 -101.63251495]
[64.93912506 -116.52622986]
[50.00246429 -118.66128540]
[36.12772751 -124.59038544]
[24.26092720 -133.90925598]
[15.21115494 -145.98252869]
[9.59544182 -159.98704529]
[7.79667711 -174.96792603]
[9.93750191 -189.90376282]
[15.87195301 -203.77619934]
[25.19540787 -215.63940430]
[37.27217865 -224.68452454]
[51.27885056 -230.29483032]
[66.26042938 -232.08779907]
[81.19544220 -229.94120789]
[95.06558990 -224.00140381]
[106.92519379 -214.67337036]
[115.96563721 -202.59310913]
[121.57053375 -188.58427429]
[123.35773468 -173.60200500]
[121.20537567 -158.66781616]
[115.26021576 -144.79995728]
[105.92759705 -132.94396973]
[93.84384918 -123.90818024]
[79.83284760 -118.30869293]
[81.61531067 -103.41497803]
[83.39777374 -88.52126312]
[85.18024445 -73.62754059]
[89.09630585 -67.35967255]
[86.87667084 -58.49902725]
[88.43719482 -43.58042145]
[90.21965790 -28.68670464]
[92.22367096 -13.82117653]
[101.59198761 -2.24171257]
[95.76776123 12.46845436]
[97.77178192 27.33398247]
[99.77579498 42.19951248]
[101.77980804 57.06504059]
[116.34816742 60.25939178]
[128.94720459 68.24094391]
[138.05923462 80.04822540]
[142.58660889 94.25892639]
[141.98393250 109.16120148]
[136.32383728 122.95990753]
[126.28813171 133.99282837]
[113.08572388 140.93095398]
[115.08973694 155.79647827]
[117.09375000 170.66200256]
[119.09776306 185.52752686]
[134.57528687 186.89199829]
[149.35711670 191.65606689]
[162.70658875 199.57908630]
[173.95916748 210.26300049]
[182.55543518 223.17245483]
[188.06904602 237.66157532]
[190.22775269 253.00621033]
[188.92687988 268.44027710]
[184.23445129 283.19384766]
[176.38755798 296.53164673]
[165.78041077 307.78970337]
[152.94458008 316.40835571]
[138.52229309 321.96011353]
[140.74740601 336.79415894]
[142.97251892 351.62820435]
[147.34031677 359.65066528]
[145.11863708 366.69949341]
[147.12265015 381.56503296]
[149.12666321 396.43054199]
[158.63832092 409.07330322]
[152.67074585 422.72018433]
[154.67475891 437.58572388]
[156.67877197 452.45123291]
[158.68278503 467.31677246]
[173.65629578 466.33129883]
[188.66212463 466.36996460]
[203.63035583 467.43258667]
[218.49116516 469.51419067]
[233.17526245 472.60507202]
[247.61421204 476.69085693]
[261.74069214 481.75247192]
[275.48880005 487.76629639]
[288.79446411 494.70431519]
[301.59561157 502.53417969]
[313.83264160 511.21936035]
[325.44839478 520.71942139]
[336.38879395 530.98999023]
[346.60278320 541.98321533]
[356.04275513 553.64782715]
[364.66467285 565.92950439]
[372.42837524 578.77087402]
[379.29763794 592.11218262]
[385.24044800 605.89111328]
[390.22909546 620.04351807]
[394.24032593 634.50335693]
[397.25540161 649.20324707]
[399.26031494 664.07458496]
[400.24566650 679.04809570]
[400.20690918 694.05389404]
[399.14419556 709.02215576]
[397.06250000 723.88293457]
[393.97149658 738.56701660]
[389.88562012 753.00592041]
[384.82394409 767.13238525]
[378.80999756 780.88043213]
[371.87188721 794.18603516]
[364.04196167 806.98718262]
[355.35668945 819.22412109]
[345.85656738 830.83984375]
[335.58593750 841.78015137]
[324.59262085 851.99407959]
[312.92791748 861.43395996]
[300.64620972 870.05578613]
[287.80474854 877.81939697]
[274.46343994 884.68859863]
[260.68441772 890.63134766]
[246.53199768 895.61987305]
[232.07214355 899.63098145]
[217.37225342 902.64599609]
[202.50088501 904.65075684]
[187.52737427 905.63604736]
[172.52154541 905.59716797]
[157.55332947 904.53436279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 161]
[42 160]
[43 159]
[44 158]
[46 156]
[47 155]
[48 154]
[49 152]
[50 151]
[51 150]
[65 137]
[66 136]
[67 135]
[68 134]
[76 126]
[77 125]
[78 124]
[79 123]
[81 121]
[82 120]
[85 119]
[86 118]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
