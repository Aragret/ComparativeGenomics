%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[82.34372711 751.15252686]
[67.76670074 754.74438477]
[52.90108871 756.84307861]
[37.89942169 757.42700195]
[22.91564560 756.49029541]
[8.10352135 754.04241943]
[-6.38495636 750.10858154]
[-20.40111160 744.72912598]
[-33.80111694 737.95928955]
[-46.44746399 729.86853027]
[-58.21038055 720.53979492]
[-68.96916199 710.06890869]
[-78.61340332 698.56329346]
[-87.04414368 686.14099121]
[-94.17485809 672.92944336]
[-99.93238831 659.06433105]
[-104.25764465 644.68786621]
[-107.10624695 629.94757080]
[-108.44895935 614.99468994]
[-108.27200317 599.98272705]
[-106.57719421 585.06561279]
[-103.38193512 570.39660645]
[-98.71899414 556.12603760]
[-92.63623810 542.40051270]
[-85.19608307 529.36071777]
[-76.47486877 517.14062500]
[-66.56209564 505.86550903]
[-55.55948639 495.65112305]
[-43.57994080 486.60229492]
[-30.74639320 478.81185913]
[-17.19053459 472.35974121]
[-3.05146933 467.31216431]
[11.52571011 463.72094727]
[26.39142036 461.62292480]
[41.39311218 461.03964233]
[56.37684631 461.97705078]
[58.82257462 447.17779541]
[61.26829910 432.37850952]
[63.71402740 417.57925415]
[65.93914795 402.74520874]
[67.94316101 387.87966919]
[69.94717407 373.01412964]
[71.95118713 358.14862061]
[73.40060425 343.21881104]
[74.29341888 328.24539185]
[75.18623352 313.27200317]
[68.22019196 300.10675049]
[76.76517487 286.79156494]
[77.65799713 271.81817627]
[78.55081177 256.84475708]
[79.44362640 241.87136841]
[80.33644104 226.89794922]
[78.28209686 224.03228760]
[77.51370239 220.02922058]
[78.55072021 215.50396729]
[81.61821747 211.28051758]
[83.17874146 196.36190796]
[84.73926544 181.44331360]
[71.43355560 172.27430725]
[64.52764893 157.56158447]
[65.99214935 141.28054810]
[75.52165985 127.88338470]
[90.59239197 121.08155060]
[91.93062592 106.14136505]
[89.45596313 98.47008514]
[93.40162659 90.98927307]
[94.96215057 76.07066345]
[96.52267456 61.15206146]
[98.08319092 46.23345566]
[88.40599060 34.02732849]
[90.20110321 18.91997337]
[101.89741516 9.76946259]
[103.45793915 -5.14914227]
[97.19832611 -19.67937851]
[106.21772003 -31.53263855]
[103.99808502 -40.39328384]
[107.91414642 -46.66115570]
[109.69661713 -61.55487442]
[111.47908020 -76.44859314]
[113.26154327 -91.34230804]
[115.04401398 -106.23602295]
[116.82647705 -121.12974548]
[105.76431274 -134.68141174]
[107.88400269 -151.70556641]
[121.38922119 -161.72793579]
[115.12960815 -176.25817871]
[124.14900208 -188.11143494]
[125.70952606 -203.03004456]
[111.15025330 -206.75100708]
[97.28795624 -212.55224609]
[84.41809082 -220.31011963]
[72.81499481 -229.85925293]
[62.72597885 -240.99610901]
[54.36609650 -253.48332214]
[47.91353989 -267.05468750]
[43.50584030 -281.42098999]
[41.23694992 -296.27593994]
[41.15523529 -311.30294800]
[43.26243210 -326.18173218]
[47.51362610 -340.59509277]
[53.81820679 -354.23583984]
[62.04178619 -366.81323242]
[72.00908661 -378.05914307]
[83.50764465 -387.73391724]
[96.29236603 -395.63128662]
[110.09075928 -401.58294678]
[124.60869598 -405.46203613]
[139.53672791 -407.18588257]
[154.55667114 -406.71768188]
[169.34837341 -404.06750488]
[183.59654236 -399.29177856]
[196.99746704 -392.49230957]
[209.26553345 -383.81402588]
[220.13923645 -373.44189453]
[229.38677979 -361.59704590]
[236.81108093 -348.53192139]
[242.25387573 -334.52499390]
[245.59916687 -319.87484741]
[246.77561951 -304.89373779]
[245.75817871 -289.90097046]
[242.56852722 -275.21615601]
[237.27465820 -261.15228271]
[229.98941040 -248.00910950]
[220.86805725 -236.06680298]
[210.10502625 -225.57989502]
[197.92973328 -216.77194214]
[184.60169983 -209.83065796]
[170.40499878 -204.90402222]
[155.64225769 -202.09703064]
[140.62812805 -201.46951294]
[139.06761169 -186.55090332]
[145.43884277 -173.08775330]
[136.30783081 -160.16741943]
[145.74241638 -151.39141846]
[148.43997192 -138.59277344]
[143.19641113 -126.39788055]
[131.72019958 -119.34727478]
[129.93772888 -104.45355988]
[128.15525818 -89.55984497]
[126.37279510 -74.66612244]
[124.59033203 -59.77240753]
[122.80786896 -44.87868881]
[121.13632202 -29.97211647]
[127.50756073 -16.50895882]
[118.37654877 -3.58861923]
[116.81602478 11.32998562]
[126.36553955 22.70286369]
[124.99546814 37.85467911]
[113.00180054 47.79397964]
[111.44127655 62.71258545]
[109.88075256 77.63118744]
[108.32022858 92.54979706]
[106.87081146 107.47959900]
[105.53257751 122.41978455]
[117.37638855 129.86203003]
[124.82266235 141.62507629]
[126.46641541 155.38284302]
[122.04346466 168.44372559]
[112.47097015 178.27714539]
[99.65786743 183.00382996]
[98.09734344 197.92243958]
[96.53681946 212.84103394]
[95.30984497 227.79077148]
[94.41703033 242.76417542]
[93.52421570 257.73757935]
[92.63140106 272.71099854]
[91.73858643 287.68438721]
[98.64076233 301.92062378]
[90.15964508 314.16479492]
[89.26682281 329.13821411]
[88.37400818 344.11163330]
[101.15470123 336.25961304]
[115.31343842 341.21240234]
[120.41294098 355.31896973]
[112.69403076 368.18048096]
[97.84681702 370.31588745]
[86.81671143 360.15261841]
[84.81269836 375.01815796]
[82.80868530 389.88366699]
[80.80467224 404.74920654]
[82.95842743 411.00003052]
[81.80519867 416.56484985]
[78.51329803 420.02496338]
[76.06757355 434.82424927]
[73.62184143 449.62350464]
[71.17611694 464.42279053]
[85.66476440 468.35598755]
[99.68115997 473.73480225]
[113.08145905 480.50405884]
[125.72816467 488.59429932]
[137.49148560 497.92248535]
[148.25073242 508.39291382]
[157.89547729 519.89813232]
[166.32676697 532.32006836]
[173.45806885 545.53125000]
[179.21620178 559.39611816]
[183.54209900 573.77239990]
[186.39134216 588.51257324]
[187.73471069 603.46539307]
[187.55842590 618.47735596]
[185.86427307 633.39453125]
[182.66964722 648.06372070]
[178.00733948 662.33447266]
[171.92518616 676.06030273]
[164.48561096 689.10034180]
[155.76493835 701.32086182]
[145.85266113 712.59643555]
[134.85049438 722.81127930]
[122.87134552 731.86065674]
[110.03814697 739.65167236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 186]
[37 185]
[38 184]
[39 183]
[40 180]
[41 179]
[42 178]
[43 177]
[44 171]
[45 170]
[46 169]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[56 162]
[57 161]
[58 160]
[63 154]
[64 153]
[66 152]
[67 151]
[68 150]
[69 149]
[72 146]
[73 145]
[75 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[85 133]
[87 131]
[88 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
