%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[85.42584991 696.44561768]
[70.55745697 698.49102783]
[55.57182312 699.31774902]
[40.56866455 698.92022705]
[25.64782906 697.30108643]
[10.90861702 694.47119141]
[-3.55088401 690.44927979]
[-17.63444710 685.26220703]
[-31.24834824 678.94439697]
[-44.30198669 671.53796387]
[-56.70849228 663.09216309]
[-68.38529968 653.66320801]
[-79.25469971 643.31390381]
[-89.24436188 632.11303711]
[-98.28780365 620.13519287]
[-106.32483673 607.46002197]
[-113.30197906 594.17199707]
[-119.17279816 580.35943604]
[-123.89822388 566.11431885]
[-127.44680786 551.53143311]
[-129.79493713 536.70788574]
[-130.92698669 521.74218750]
[-130.83540344 506.73403931]
[-129.52082825 491.78329468]
[-126.99198914 476.98947144]
[-123.26572418 462.45095825]
[-118.36682129 448.26458740]
[-112.32789612 434.52471924]
[-105.18912506 421.32278442]
[-96.99802399 408.74667358]
[-87.80909729 396.88006592]
[-77.68350220 385.80191040]
[-66.68862152 375.58596802]
[-54.89762497 366.30023193]
[-42.38898468 358.00643921]
[-29.24593925 350.75985718]
[-15.55595970 344.60864258]
[-1.41014886 339.59381104]
[13.09735298 335.74865723]
[27.86999893 333.09878540]
[42.80947876 331.66186523]
[57.81637192 331.44744873]
[72.79080963 332.45693970]
[75.01592255 317.62292480]
[77.24104309 302.78887939]
[79.46615601 287.95483398]
[81.58078003 273.10461426]
[83.58479309 258.23910522]
[85.58880615 243.37356567]
[87.59282684 228.50804138]
[88.81980133 213.55830383]
[81.46486664 200.60630798]
[89.60961914 187.04261780]
[90.05622864 172.04927063]
[90.50283051 157.05592346]
[90.94944000 142.06257629]
[91.39604187 127.06922150]
[88.45308685 120.28978729]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[93.72218323 42.51866531]
[91.71817017 27.65313530]
[89.71414948 12.78760719]
[87.71013641 -2.07792115]
[85.70612335 -16.94344902]
[83.70211029 -31.80897713]
[81.69809723 -46.67450714]
[77.45022583 -54.76112366]
[79.77661896 -61.77608871]
[65.48654938 -63.95194626]
[52.25952148 -69.75154114]
[40.99657440 -78.77291870]
[32.46318054 -90.39489746]
[27.23722076 -103.81983185]
[25.66982841 -118.12833405]
[27.86182785 -132.34226990]
[33.65726471 -145.49160767]
[42.65447617 -156.68060303]
[54.23394012 -165.14883423]
[67.60091400 -170.32290649]
[66.04039001 -185.24151611]
[64.47986603 -200.16012573]
[62.91934586 -215.07872009]
[61.35882187 -229.99732971]
[59.79830170 -244.91593933]
[58.23777771 -259.83453369]
[55.56378555 -263.25561523]
[54.24967957 -266.97552490]
[54.22241974 -270.53002930]
[55.26570892 -273.52639771]
[57.05569458 -275.68374634]
[56.38591003 -290.66876221]
[55.71612549 -305.65380859]
[41.32323837 -310.47140503]
[29.64509201 -320.16601562]
[22.26105499 -333.42651367]
[20.16975784 -348.45950317]
[23.65403366 -363.23190308]
[32.24266052 -375.74591064]
[44.77409744 -384.30905151]
[59.55357361 -387.76327515]
[74.58228302 -385.64138794]
[87.82771301 -378.23037720]
[97.49853516 -366.53253174]
[102.28684235 -352.12988281]
[101.54506683 -336.97024536]
[95.37351990 -323.10388184]
[84.60684967 -312.40606689]
[70.70116425 -306.32360840]
[71.37094879 -291.33856201]
[72.04073334 -276.35351562]
[73.15637970 -261.39505005]
[74.71690369 -246.47645569]
[76.27742767 -231.55786133]
[77.83795166 -216.63925171]
[79.39847565 -201.72064209]
[80.95899963 -186.80204773]
[82.51952362 -171.88343811]
[97.88447571 -169.20703125]
[111.88775635 -162.30729675]
[123.39323425 -151.73489380]
[131.46488953 -138.33883667]
[135.44293213 -123.19830322]
[134.99772644 -107.53569794]
[130.15710449 -92.61795807]
[121.30477142 -79.65406036]
[109.14990234 -69.69705963]
[94.67033386 -63.55855560]
[96.56362915 -48.67852020]
[98.56764221 -33.81299210]
[100.57165527 -18.94746208]
[102.57566833 -4.08193493]
[104.57968140 10.78359318]
[106.58369446 25.64912224]
[108.58770752 40.51464844]
[114.95969391 26.93533325]
[126.53765106 17.39851570]
[141.08605957 13.74560547]
[155.79585266 16.68192482]
[167.82679749 25.64051437]
[174.85591125 38.89161301]
[175.52597046 53.87664032]
[169.70761108 67.70221710]
[158.52426147 77.69885254]
[144.13525391 81.93634033]
[129.31887817 79.59649658]
[116.93593597 71.13111115]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.38939667 127.51583099]
[105.94278717 142.50918579]
[105.49618530 157.50253296]
[105.04957581 172.49588013]
[104.60296631 187.48922729]
[111.92595673 201.51365662]
[103.81314850 214.00491333]
[114.67047119 203.65510559]
[129.63189697 202.58015442]
[141.85728455 211.27153015]
[145.75733948 225.75564575]
[139.54899597 239.41056824]
[126.07065582 245.99342346]
[111.48440552 242.49465942]
[102.45835114 230.51205444]
[100.45433807 245.37757874]
[98.45032501 260.24310303]
[96.44631195 275.10864258]
[98.40114594 284.03143311]
[94.30020142 290.17993164]
[92.07508850 305.01397705]
[89.84996796 319.84802246]
[87.62484741 334.68206787]
[102.23644257 338.11050415]
[116.51997375 342.71850586]
[130.38037109 348.47543335]
[143.72540283 355.34295654]
[156.46626282 363.27536011]
[168.51815796 372.21990967]
[179.80087280 382.11703491]
[190.23933411 392.90087891]
[199.76408386 404.49966431]
[208.31170654 416.83624268]
[215.82534790 429.82846069]
[222.25498962 443.38989258]
[227.55784607 457.43026733]
[231.69862366 471.85620117]
[234.64978027 486.57159424]
[236.39166260 501.47860718]
[236.91267395 516.47796631]
[236.20935059 531.46990967]
[234.28637695 546.35461426]
[231.15655518 561.03308105]
[226.84071350 575.40759277]
[221.36756897 589.38250732]
[214.77354431 602.86474609]
[207.10250854 615.76470947]
[198.40554810 627.99639893]
[188.74049377 639.47857666]
[178.17170715 650.13470459]
[166.76950073 659.89392090]
[154.60977173 668.69128418]
[141.77342224 676.46826172]
[128.34588623 683.17303467]
[114.41653442 688.76104736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 178]
[44 177]
[45 176]
[46 175]
[47 173]
[48 172]
[49 171]
[50 170]
[51 162]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[59 155]
[61 153]
[62 152]
[63 151]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[72 131]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
