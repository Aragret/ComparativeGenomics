%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[62.62175369 961.98193359]
[47.62890244 961.43768311]
[32.67760849 960.19647217]
[17.80025291 958.26098633]
[3.02905750 955.63543701]
[-11.60398769 952.32550049]
[-26.06718826 948.33831787]
[-40.32922363 943.68255615]
[-54.35920334 938.36828613]
[-68.12673950 932.40698242]
[-81.60202026 925.81164551]
[-94.75585175 918.59649658]
[-107.55976105 910.77716064]
[-119.98600006 902.37060547]
[-132.00765991 893.39501953]
[-143.59872437 883.86981201]
[-154.73405457 873.81567383]
[-165.38957214 863.25427246]
[-175.54216003 852.20861816]
[-185.16986084 840.70257568]
[-194.25181580 828.76104736]
[-202.76835632 816.40991211]
[-210.70101929 803.67596436]
[-218.03265381 790.58666992]
[-224.74734497 777.17047119]
[-230.83058167 763.45635986]
[-236.26918030 749.47412109]
[-241.05136108 735.25396729]
[-245.16676331 720.82672119]
[-248.60647583 706.22363281]
[-251.36305237 691.47631836]
[-253.43051147 676.61676025]
[-254.80439758 661.67706299]
[-255.48171997 646.68963623]
[-255.46099854 631.68695068]
[-254.74229431 616.70141602]
[-253.32717896 601.76556396]
[-251.21868896 586.91174316]
[-248.42140198 572.17211914]
[-244.94137573 557.57855225]
[-240.78614807 543.16278076]
[-235.96472168 528.95587158]
[-230.48753357 514.98870850]
[-224.36645508 501.29144287]
[-217.61473083 487.89382935]
[-210.24699402 474.82485962]
[-202.27919006 462.11282349]
[-193.72857666 449.78524780]
[-184.61369324 437.86886597]
[-174.95425415 426.38943481]
[-164.77119446 415.37185669]
[-154.08656311 404.83996582]
[-142.92350769 394.81661987]
[-131.30619812 385.32345581]
[-119.25978851 376.38110352]
[-106.81037903 368.00888062]
[-93.98493195 360.22491455]
[-80.81122589 353.04611206]
[-67.31778717 346.48800659]
[-53.53384399 340.56475830]
[-39.48924255 335.28924561]
[-25.21440697 330.67288208]
[-10.74024963 326.72564697]
[3.90187907 323.45611572]
[18.68026924 320.87136841]
[33.56291199 318.97695923]
[48.51757812 317.77703857]
[63.51187515 317.27416992]
[78.51332855 317.46948242]
[79.40614319 302.49606323]
[80.29896545 287.52267456]
[77.55915833 280.65859985]
[81.31817627 272.33349609]
[82.43382263 257.37503052]
[83.54946899 242.41658020]
[69.97666168 233.64781189]
[62.63576508 219.14723206]
[63.61487579 202.82980347]
[72.74127960 189.15484619]
[87.60280609 181.90731812]
[88.49562836 166.93391418]
[89.38844299 151.96051025]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.40186310 92.04403687]
[81.34276581 81.07434845]
[81.32993317 65.86071777]
[91.85601044 55.38515854]
[91.63268280 40.38682175]
[80.57357788 29.41713524]
[80.56075287 14.20350742]
[91.08682251 3.72794724]
[90.86349487 -11.27039051]
[90.64016724 -26.26872826]
[82.69826508 -39.95217514]
[90.24521637 -52.79323196]
[90.02188873 -67.79157257]
[76.00236511 -73.73908234]
[65.61871338 -84.87908173]
[60.66996384 -99.28150940]
[62.01351547 -114.45104218]
[69.41659546 -127.75947571]
[81.59656525 -136.90103149]
[96.44317627 -140.29190063]
[111.38416290 -137.34457397]
[123.83091736 -128.56971741]
[131.62695312 -115.48759460]
[133.42155457 -100.36479187]
[128.90382385 -85.82141113]
[118.85645294 -74.37718201]
[105.02022552 -68.01490021]
[105.24355316 -53.01655960]
[113.16948700 -40.40589523]
[105.63850403 -26.49205589]
[105.86183167 -11.49371815]
[106.08515930 3.50461960]
[116.91846466 13.66213512]
[117.35860443 28.86940002]
[106.63101959 40.16349411]
[106.85434723 55.16183090]
[117.68765259 65.31935120]
[118.12779236 80.52661133]
[107.40019989 91.82070923]
[119.56148529 83.03986359]
[134.04937744 86.92584991]
[140.18395996 100.61405945]
[133.44302368 114.01405334]
[118.79575348 117.24785614]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[104.36184692 152.85333252]
[103.46903229 167.82673645]
[102.57621765 182.80014038]
[114.63636017 189.88644409]
[122.42955780 201.42257690]
[124.48220062 215.12530518]
[120.45008850 228.31208801]
[111.17461395 238.42614746]
[98.50792694 243.53224182]
[97.39227295 258.49069214]
[96.27662659 273.44912720]
[95.27236938 288.41549683]
[94.37955475 303.38888550]
[93.48673248 318.36230469]
[108.40510559 319.95101929]
[123.23340607 322.23208618]
[137.93951416 325.20059204]
[152.49160767 328.85009766]
[166.85812378 333.17266846]
[181.00798035 338.15899658]
[194.91053772 343.79821777]
[208.53565979 350.07818604]
[221.85385132 356.98526001]
[234.83625793 364.50448608]
[247.45478821 372.61956787]
[259.68209839 381.31295776]
[271.49169922 390.56579590]
[282.85800171 400.35806274]
[293.75640869 410.66857910]
[304.16333008 421.47494507]
[314.05621338 432.75381470]
[323.41363525 444.48074341]
[332.21530151 456.63031006]
[340.44216919 469.17623901]
[348.07644653 482.09133911]
[355.10156250 495.34765625]
[361.50234985 508.91644287]
[367.26486206 522.76831055]
[372.37670898 536.87335205]
[376.82675171 551.20086670]
[380.60540771 565.71997070]
[383.70443726 580.39910889]
[386.11718750 595.20654297]
[387.83837891 610.11022949]
[388.86431885 625.07781982]
[389.19277954 640.07696533]
[388.82302856 655.07513428]
[387.75588989 670.03985596]
[385.99368286 684.93872070]
[383.54019165 699.73950195]
[380.40072632 714.41009521]
[376.58215332 728.91870117]
[372.09265137 743.23394775]
[366.94201660 757.32482910]
[361.14138794 771.16076660]
[354.70327759 784.71191406]
[347.64169312 797.94879150]
[339.97189331 810.84283447]
[331.71051025 823.36608887]
[322.87542725 835.49139404]
[313.48577881 847.19250488]
[303.56188965 858.44409180]
[293.12524414 869.22180176]
[282.19848633 879.50225830]
[270.80526733 889.26318359]
[258.97024536 898.48352051]
[246.71905518 907.14318848]
[234.07824707 915.22351074]
[221.07518005 922.70697021]
[207.73802185 929.57733154]
[194.09565735 935.81976318]
[180.17764282 941.42071533]
[166.01411438 946.36804199]
[151.63574219 950.65106201]
[137.07366943 954.26049805]
[122.35943604 957.18847656]
[107.52491760 959.42877197]
[92.60222626 960.97637939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 146]
[70 145]
[71 144]
[73 143]
[74 142]
[75 141]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[86 124]
[89 121]
[90 120]
[93 117]
[94 116]
[95 115]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
