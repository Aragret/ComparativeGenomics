%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[93.95732880 497.06616211]
[80.04174805 502.74569702]
[65.42224884 506.23434448]
[50.44153214 507.45031738]
[35.45077515 506.36517334]
[20.80137444 503.00427246]
[6.83673811 497.44647217]
[-6.11578512 489.82199097]
[-17.75256920 480.30960083]
[-27.80082893 469.13226318]
[-36.02502441 456.55200195]
[-42.23236084 442.86370850]
[-46.27733612 428.38824463]
[-48.06512833 413.46496582]
[-47.55382538 398.44369507]
[-44.75541687 383.67651367]
[-39.73550415 369.50961304]
[-32.61175156 356.27508545]
[-23.55116081 344.28317261]
[-12.76611900 333.81497192]
[-0.50944412 325.11587524]
[12.93154907 318.38980103]
[27.24178505 313.79440308]
[42.08581161 311.43743896]
[57.11566162 311.37411499]
[59.34077835 296.54006958]
[61.56589890 281.70605469]
[48.13565445 288.38650513]
[34.47523880 282.19027710]
[30.65460014 267.68502808]
[39.49017334 255.56344604]
[54.46870041 254.76113892]
[64.54808807 265.86795044]
[67.87035370 251.24047852]
[63.14410019 237.11561584]
[73.74575806 225.37187195]
[77.06801605 210.74440002]
[80.39027405 196.11694336]
[83.71253204 181.48948669]
[86.04801941 166.67242432]
[87.38625336 151.73223877]
[88.72448730 136.79205322]
[86.19026947 129.84945679]
[90.19548798 121.63995361]
[91.75601196 106.72134399]
[92.20261383 91.72799683]
[91.53282928 76.74295807]
[90.86304474 61.75791931]
[87.35356903 53.32456970]
[90.29652405 46.54512787]
[89.84992218 31.55177879]
[79.81115723 16.11465263]
[88.72577667 0.99855047]
[88.05599213 -13.98648834]
[79.71019745 -27.42740822]
[86.87147522 -40.48747253]
[86.20169067 -55.47251129]
[85.53190613 -70.45755005]
[82.30154419 -76.22611237]
[82.44743347 -81.90728760]
[85.07200623 -85.89736176]
[84.84867859 -100.89569855]
[84.62535095 -115.89403534]
[84.40202332 -130.89236450]
[76.46011353 -144.57582092]
[84.00706482 -157.41687012]
[83.78373718 -172.41520691]
[83.56040955 -187.41354370]
[68.58710480 -188.44628906]
[53.75272369 -190.72833252]
[39.16133118 -194.24371338]
[24.91527557 -198.96774292]
[11.11448288 -204.86727905]
[-2.14424205 -211.90097046]
[-14.76789761 -220.01945496]
[-26.66793633 -229.16580200]
[-37.76088715 -239.27584839]
[-47.96894073 -250.27867126]
[-57.22048950 -262.09710693]
[-65.45064545 -274.64825439]
[-72.60167694 -287.84405518]
[-78.62342072 -301.59197998]
[-83.47364044 -315.79556274]
[-87.11831665 -330.35519409]
[-89.53187561 -345.16873169]
[-90.69740295 -360.13229370]
[-90.60670471 -375.14089966]
[-89.26043701 -390.08929443]
[-86.66802979 -404.87258911]
[-82.84766388 -419.38711548]
[-77.82614899 -433.53103638]
[-71.63870239 -447.20516968]
[-64.32872009 -460.31359863]
[-55.94748688 -472.76437378]
[-46.55378723 -484.47012329]
[-36.21350861 -495.34878540]
[-24.99918938 -505.32403564]
[-12.98948574 -514.32592773]
[-0.26863945 -522.29125977]
[13.07411957 -529.16418457]
[26.94519997 -534.89654541]
[41.24730682 -539.44805908]
[55.88011551 -542.78680420]
[70.74098969 -544.88940430]
[85.72568512 -545.74114990]
[100.72909546 -545.33593750]
[115.64598846 -543.67675781]
[130.37171936 -540.77508545]
[144.80299377 -536.65142822]
[158.83859253 -531.33465576]
[172.38008118 -524.86199951]
[185.33244324 -517.27893066]
[197.60484314 -508.63864136]
[209.11119080 -499.00170898]
[219.77078247 -488.43576050]
[229.50883484 -477.01486206]
[238.25706482 -464.81915283]
[245.95408630 -451.93420410]
[252.54592896 -438.45034790]
[257.98632812 -424.46218872]
[262.23715210 -410.06784058]
[265.26855469 -395.36828613]
[267.05929565 -380.46661377]
[267.59683228 -365.46734619]
[266.87734985 -350.47573853]
[264.90591431 -335.59689331]
[261.69635010 -320.93521118]
[257.27114868 -306.59350586]
[251.66140747 -292.67239380]
[244.90644836 -279.26953125]
[237.05363464 -266.47891235]
[228.15806580 -254.39025879]
[218.28211975 -243.08837891]
[207.49510193 -232.65252686]
[195.87266541 -223.15592957]
[183.49632263 -214.66519165]
[170.45289612 -207.23986816]
[156.83387756 -200.93202209]
[142.73478699 -195.78593445]
[128.25453186 -191.83767700]
[113.49467468 -189.11495972]
[98.55874634 -187.63687134]
[98.78207397 -172.63853455]
[99.00540161 -157.64019775]
[106.93133545 -145.02954102]
[99.40036011 -131.11569214]
[99.62368774 -116.11736298]
[99.84701538 -101.11902618]
[100.07034302 -86.12068939]
[100.51694489 -71.12733459]
[101.18672943 -56.14229584]
[101.85651398 -41.15725708]
[110.15440369 -28.78816986]
[103.04103088 -14.65627384]
[103.71081543 0.32876536]
[112.42317200 8.72051048]
[113.10382080 21.19931221]
[104.84326935 31.10517311]
[105.28987122 46.09852219]
[105.84808350 61.08813477]
[106.51786804 76.07317352]
[107.18765259 91.05821228]
[115.48737335 78.56362152]
[128.87818909 71.80447388]
[143.85977173 72.54758453]
[156.51597595 80.59870911]
[163.53848267 93.85330200]
[163.09165955 108.84664154]
[155.29226685 121.65951538]
[142.17907715 128.94265747]
[127.17983246 128.79228210]
[114.21530151 121.24768066]
[106.67461395 108.28186798]
[105.11408997 123.20046997]
[103.66467285 138.13027954]
[102.32643890 153.07046509]
[100.98820496 168.01065063]
[111.31624603 157.13261414]
[125.86016846 153.46186829]
[140.11337280 158.13583374]
[149.65936279 169.70623779]
[151.54020691 184.58786011]
[145.17309570 198.16944885]
[132.53094482 206.24263000]
[117.53108215 206.30583191]
[104.82136536 198.33946228]
[98.33999634 184.81175232]
[95.01773071 199.43920898]
[91.69547272 214.06666565]
[88.37321472 228.69412231]
[92.86183167 243.86524963]
[82.49781036 254.56272888]
[79.17555237 269.19018555]
[76.39994049 283.93115234]
[74.17482758 298.76519775]
[71.94970703 313.59924316]
[86.29951477 318.06951904]
[99.79872131 324.67800903]
[112.13087463 333.26977539]
[123.00689697 343.64340210]
[132.17184448 355.55575562]
[139.41085815 368.72760010]
[144.55426025 382.85012817]
[147.48149109 397.59231567]
[148.12391663 412.60855103]
[146.46647644 427.54687500]
[142.54803467 442.05706787]
[136.46043396 455.79904175]
[128.34638977 468.45062256]
[118.39608765 479.71527100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 196]
[26 195]
[27 194]
[33 193]
[34 192]
[36 190]
[37 189]
[38 188]
[39 187]
[40 177]
[41 176]
[42 175]
[44 174]
[45 173]
[46 162]
[47 161]
[48 160]
[50 159]
[51 158]
[53 155]
[54 154]
[56 152]
[57 151]
[58 150]
[61 149]
[62 148]
[63 147]
[64 146]
[66 144]
[67 143]
[68 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
