%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[26.97663689 898.17669678]
[11.97485638 898.25585938]
[-3.01821041 897.73852539]
[-17.97885704 896.62554932]
[-32.88342667 894.91870117]
[-47.70835495 892.62060547]
[-62.43019867 889.73492432]
[-77.02568054 886.26629639]
[-91.47171783 882.22009277]
[-105.74547577 877.60278320]
[-119.82437897 872.42163086]
[-133.68615723 866.68487549]
[-147.30891418 860.40155029]
[-160.67109680 853.58160400]
[-173.75157166 846.23577881]
[-186.52966309 838.37573242]
[-198.98516846 830.01391602]
[-211.09838867 821.16351318]
[-222.85017395 811.83856201]
[-234.22192383 802.05371094]
[-245.19567871 791.82452393]
[-255.75408936 781.16717529]
[-265.88046265 770.09844971]
[-275.55874634 758.63586426]
[-284.77368164 746.79760742]
[-293.51068115 734.60235596]
[-301.75592041 722.06939697]
[-309.49639893 709.21850586]
[-316.71981812 696.07006836]
[-323.41482544 682.64483643]
[-329.57077026 668.96405029]
[-335.17797852 655.04931641]
[-340.22750854 640.92266846]
[-344.71145630 626.60650635]
[-348.62268066 612.12335205]
[-351.95501709 597.49609375]
[-354.70318604 582.74798584]
[-356.86285400 567.90228271]
[-358.43060303 552.98242188]
[-359.40393066 538.01202393]
[-359.78134155 523.01477051]
[-359.56222534 508.01440430]
[-358.74688721 493.03457642]
[-357.33666992 478.09902954]
[-355.33377075 463.23135376]
[-352.74136353 448.45504761]
[-349.56356812 433.79348755]
[-345.80535889 419.26986694]
[-341.47274780 404.90713501]
[-336.57254028 390.72799683]
[-331.11248779 376.75491333]
[-325.10122681 363.00991821]
[-318.54827881 349.51480103]
[-311.46395874 336.29086304]
[-303.85952759 323.35903931]
[-295.74697876 310.73974609]
[-287.13916016 298.45297241]
[-278.04965210 286.51812744]
[-268.49285889 274.95410156]
[-258.48385620 263.77914429]
[-248.03848267 253.01094055]
[-237.17327881 242.66651917]
[-225.90539551 232.76225281]
[-214.25267029 223.31378174]
[-202.23350525 214.33605957]
[-189.86692810 205.84327698]
[-177.17248535 197.84886169]
[-164.17024231 190.36544800]
[-150.88076782 183.40487671]
[-137.32507324 176.97814941]
[-123.52459717 171.09542847]
[-109.50115204 165.76602173]
[-95.27690887 160.99835205]
[-80.87436676 156.79995728]
[-66.31629944 153.17747498]
[-51.62572861 150.13664246]
[-36.82587433 147.68225098]
[-21.94014359 145.81820679]
[-6.99207258 144.54742432]
[7.99470091 143.87194824]
[22.99648094 143.79281616]
[37.98954773 144.31016541]
[52.95019150 145.42317200]
[67.85475922 147.13009644]
[82.67967987 149.42822266]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[89.66086578 75.24909210]
[99.86446381 64.39848328]
[102.96857452 49.72318268]
[88.92926788 44.35250473]
[75.90302277 36.85160446]
[64.21063232 27.40520477]
[54.14002609 16.24592972]
[45.93920898 3.64858651]
[39.81012726 -10.07660389]
[35.90371704 -24.59164619]
[34.31617737 -39.53909302]
[35.08660507 -54.55085373]
[38.19602203 -69.25724792]
[43.56785965 -83.29611969]
[51.06983566 -96.32173920]
[60.51720047 -108.01335144]
[71.67730713 -118.08303833]
[84.27532196 -126.28281403]
[98.00102234 -132.41076660]
[112.51638794 -136.31597900]
[127.46396637 -137.90228271]
[142.47566223 -137.13061523]
[157.18179321 -134.01998901]
[171.22023010 -128.64698792]
[184.24522400 -121.14393616]
[195.93606567 -111.69561005]
[206.00482178 -100.53467560]
[214.20356750 -87.93597412]
[220.33038330 -74.20977783]
[224.23439026 -59.69408798]
[225.81947327 -44.74637985]
[225.04656982 -29.73474693]
[221.93472290 -15.02886581]
[216.56056213 -0.99088424]
[209.05644226 12.03350163]
[199.60714722 23.72355461]
[188.44537354 33.79139709]
[175.84600830 41.98909760]
[162.11929321 48.11478043]
[147.60328674 52.01759720]
[132.65544128 53.60143661]
[117.64388275 52.82729340]
[114.53977203 67.50259399]
[119.47579193 81.55552673]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[97.39956665 152.31349182]
[111.99505615 155.78211975]
[126.44110870 159.82826233]
[140.71487427 164.44554138]
[154.79379272 169.62664795]
[168.65559387 175.36337280]
[182.27836609 181.64666748]
[195.64056396 188.46659851]
[208.72105408 195.81236267]
[221.49917603 203.67234802]
[233.95469666 212.03414917]
[246.06794739 220.88450623]
[257.81973267 230.20947266]
[269.19152832 239.99426270]
[280.16531372 250.22341919]
[290.72375488 260.88076782]
[300.85012817 271.94946289]
[310.52847290 283.41198730]
[319.74343872 295.25024414]
[328.48046875 307.44549561]
[336.72573853 319.97845459]
[344.46624756 332.82928467]
[351.68969727 345.97772217]
[358.38473511 359.40292358]
[364.54074097 373.08370972]
[370.14794922 386.99838257]
[375.19754028 401.12500000]
[379.68151855 415.44122314]
[383.59277344 429.92437744]
[386.92517090 444.55157471]
[389.67337036 459.29968262]
[391.83306885 474.14538574]
[393.40084839 489.06524658]
[394.37423706 504.03561401]
[394.75167847 519.03283691]
[394.53259277 534.03326416]
[393.71731567 549.01306152]
[392.30712891 563.94860840]
[390.30426025 578.81634521]
[387.71191406 593.59265137]
[384.53411865 608.25421143]
[380.77597046 622.77783203]
[376.44338989 637.14056396]
[371.54321289 651.31970215]
[366.08319092 665.29284668]
[360.07199097 679.03784180]
[353.51907349 692.53295898]
[346.43481445 705.75689697]
[338.83041382 718.68878174]
[330.71789551 731.30804443]
[322.11007690 743.59484863]
[313.02062988 755.52972412]
[303.46383667 767.09381104]
[293.45486450 778.26879883]
[283.00952148 789.03698730]
[272.14434814 799.38146973]
[260.87649536 809.28576660]
[249.22378540 818.73425293]
[237.20466614 827.71203613]
[224.83810425 836.20483398]
[212.14367676 844.19927979]
[199.14146423 851.68273926]
[185.85200500 858.64331055]
[172.29632568 865.07012939]
[158.49586487 870.95288086]
[144.47242737 876.28228760]
[130.24819946 881.04998779]
[115.84567261 885.24841309]
[101.28761292 888.87097168]
[86.59704590 891.91180420]
[71.79720306 894.36627197]
[56.91147614 896.23034668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 139]
[86 138]
[87 137]
[88 136]
[90 135]
[92 133]
[93 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
