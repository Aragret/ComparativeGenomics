%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[193.78436279 843.17584229]
[179.16470337 839.80950928]
[164.69885254 835.83398438]
[150.41215515 831.25610352]
[136.32969666 826.08404541]
[122.47617340 820.32678223]
[108.87589264 813.99444580]
[95.55271149 807.09808350]
[82.53000641 799.64990234]
[69.83061981 791.66296387]
[57.47683716 783.15118408]
[45.49032593 774.12957764]
[33.89211273 764.61389160]
[22.70255280 754.62091064]
[11.94126797 744.16809082]
[1.62714219 733.27386475]
[-8.22173214 721.95721436]
[-17.58807564 710.23809814]
[-26.45545578 698.13702393]
[-34.80831909 685.67523193]
[-42.63200760 672.87463379]
[-49.91279984 659.75756836]
[-56.63792038 646.34716797]
[-62.79557419 632.66693115]
[-68.37495422 618.74078369]
[-73.36627197 604.59326172]
[-77.76077271 590.24914551]
[-81.55075073 575.73352051]
[-84.72955322 561.07196045]
[-87.29161072 546.29016113]
[-89.23241425 531.41400146]
[-90.54856873 516.46966553]
[-91.23776245 501.48327637]
[-91.29878998 486.48120117]
[-90.73153687 471.48971558]
[-89.53700256 456.53515625]
[-87.71728516 441.64370728]
[-85.27557373 426.84155273]
[-82.21615601 412.15460205]
[-78.54439545 397.60867310]
[-74.26673126 383.22924805]
[-69.39067078 369.04156494]
[-63.92477036 355.07049561]
[-57.87861633 341.34060669]
[-51.26281738 327.87594604]
[-44.08897781 314.70010376]
[-36.36968613 301.83624268]
[-28.11848259 289.30694580]
[-19.34984207 277.13412476]
[-10.07914829 265.33920288]
[-0.32266551 253.94282532]
[9.90248966 242.96501160]
[20.57838058 232.42501831]
[31.68627548 222.34132385]
[43.20668793 212.73161316]
[55.11940765 203.61277771]
[67.40354156 195.00077820]
[80.03752899 186.91075134]
[92.99920654 179.35687256]
[106.26583862 172.35240173]
[119.81415558 165.90962219]
[113.94519806 152.10545349]
[108.07623291 138.30126953]
[102.20727539 124.49709320]
[96.33831024 110.69291687]
[91.66823578 124.94740295]
[79.57940674 133.82772827]
[64.58065796 134.02175903]
[52.26615906 125.45712280]
[47.22890854 111.32820892]
[51.34767532 96.90476227]
[63.08626175 87.56637573]
[78.06646729 86.79602051]
[90.70178986 94.88193512]
[86.51477814 80.47815704]
[82.32776642 66.07437134]
[78.14075470 51.67059326]
[73.95374298 37.26681137]
[69.76673126 22.86302757]
[54.80612183 24.41860008]
[39.80818939 23.27764130]
[25.25505829 19.47682762]
[11.61455345 13.13834000]
[-0.67483985 4.46593571]
[-11.21806812 -6.26160431]
[-19.67621040 -18.69943428]
[-25.77737236 -32.44772720]
[-29.32542801 -47.06453705]
[-30.20632172 -62.07998657]
[-28.39173508 -77.01139832]
[-23.94000053 -91.37878418]
[-16.99422264 -104.72029877]
[-7.77767897 -116.60706329]
[3.41335583 -126.65696716]
[16.21913719 -134.54693604]
[30.22801018 -140.02336121]
[44.98965073 -142.91018677]
[60.02952957 -143.11462402]
[74.86418152 -140.63008118]
[89.01673126 -135.53643799]
[102.03222656 -127.99744415]
[113.49228668 -118.25542450]
[123.02850342 -106.62356567]
[130.33433533 -93.47576904]
[135.17494202 -79.23468781]
[137.39468384 -64.35810852]
[136.92224121 -49.32426071]
[133.77278137 -34.61641693]
[128.04754639 -20.70737267]
[119.93059540 -8.04424667]
[109.68283844 2.96589565]
[97.63369751 11.96912193]
[84.17051697 18.67601776]
[88.35752869 33.07979965]
[92.54454041 47.48358154]
[96.73155212 61.88736343]
[100.91856384 76.29114532]
[105.10557556 90.69492340]
[110.14248657 104.82395935]
[116.01145172 118.62813568]
[121.88040924 132.43231201]
[127.74937439 146.23648071]
[133.61833191 160.04066467]
[147.65821838 154.75408936]
[161.90716553 150.06008911]
[176.34017944 145.96687317]
[190.93194580 142.48165894]
[205.65684509 139.61053467]
[220.48905945 137.35853577]
[235.40257263 135.72962952]
[250.37121582 134.72666931]
[265.36874390 134.35140991]
[280.36880493 134.60450745]
[295.34512329 135.48551941]
[310.27142334 136.99290466]
[325.12149048 139.12402344]
[339.86929321 141.87512207]
[354.48895264 145.24137878]
[368.95480347 149.21690369]
[383.24151611 153.79470825]
[397.32400513 158.96675110]
[411.17755127 164.72398376]
[424.77783203 171.05627441]
[438.10104370 177.95254517]
[451.12377930 185.40069580]
[463.82318115 193.38763428]
[476.17700195 201.89936829]
[488.16354370 210.92095947]
[499.76177979 220.43656921]
[510.95135498 230.42953491]
[521.71270752 240.88229370]
[532.02685547 251.77653503]
[541.87573242 263.09310913]
[551.24212646 274.81222534]
[560.10955811 286.91326904]
[568.46246338 299.37500000]
[576.28619385 312.17559814]
[583.56701660 325.29260254]
[590.29217529 338.70300293]
[596.44989014 352.38323975]
[602.02929688 366.30932617]
[607.02062988 380.45687866]
[611.41522217 394.80099487]
[615.20520020 409.31658936]
[618.38409424 423.97811890]
[620.94616699 438.75994873]
[622.88702393 453.63607788]
[624.20324707 468.58044434]
[624.89245605 483.56680298]
[624.95355225 498.56887817]
[624.38635254 513.56036377]
[623.19183350 528.51495361]
[621.37219238 543.40637207]
[618.93048096 558.20855713]
[615.87115479 572.89550781]
[612.19940186 587.44146729]
[607.92181396 601.82092285]
[603.04577637 616.00860596]
[597.57989502 629.97967529]
[591.53381348 643.70959473]
[584.91802979 657.17425537]
[577.74426270 670.35009766]
[570.02502441 683.21398926]
[561.77380371 695.74334717]
[553.00524902 707.91619873]
[543.73455811 719.71112061]
[533.97814941 731.10754395]
[523.75299072 742.08538818]
[513.07714844 752.62542725]
[501.96926880 762.70916748]
[490.44888306 772.31884766]
[478.53619385 781.43774414]
[466.25210571 790.04980469]
[453.61813354 798.13983154]
[440.65649414 805.69378662]
[427.38986206 812.69830322]
[413.84158325 819.14111328]
[400.03536987 825.01092529]
[385.99545288 830.29748535]
[371.74649048 834.99145508]
[357.31347656 839.08459473]
[342.72171021 842.56976318]
[327.99679565 845.44085693]
[313.16455078 847.69281006]
[298.25103760 849.32165527]
[283.28240967 850.32458496]
[268.28488159 850.69976807]
[253.28480530 850.44665527]
[238.30850220 849.56555176]
[223.38221741 848.05816650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
