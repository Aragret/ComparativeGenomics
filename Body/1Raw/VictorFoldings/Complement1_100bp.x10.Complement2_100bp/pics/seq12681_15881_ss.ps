%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[155.32859802 632.03515625]
[147.14981079 619.44854736]
[140.14947510 606.17034912]
[134.38560486 592.31060791]
[129.90597534 577.98413086]
[126.74768829 563.30963135]
[124.93692017 548.40875244]
[124.48867798 533.40496826]
[125.40668488 518.42254639]
[127.68331909 503.58569336]
[131.29971313 489.01733398]
[136.22592163 474.83819580]
[142.42111206 461.16580200]
[149.83393860 448.11340332]
[158.40296936 435.78915405]
[168.05723572 424.29522705]
[178.71669006 413.72680664]
[190.29304504 404.17153931]
[202.69033813 395.70855713]
[215.80586243 388.40798950]
[209.73202515 374.69271851]
[203.65820312 360.97744751]
[197.58436584 347.26217651]
[191.51052856 333.54690552]
[185.43669128 319.83163452]
[179.85398865 314.98858643]
[179.37622070 305.86666870]
[173.50726318 292.06250000]
[161.40705872 283.37719727]
[163.12802124 267.64984131]
[151.02783203 258.96453857]
[152.74879456 243.23721313]
[146.87983704 229.43304443]
[141.01086426 215.62886047]
[135.14190674 201.82469177]
[123.04170990 193.13938904]
[124.76267242 177.41204834]
[112.66247559 168.72674561]
[114.38343811 152.99942017]
[108.51447296 139.19523621]
[102.64551544 125.39106750]
[96.77655792 111.58689117]
[90.70272064 97.87162018]
[84.42536163 84.24830627]
[71.62294006 74.95269012]
[73.32386780 60.15552139]
[67.04650879 46.53220367]
[60.76914978 32.90888977]
[54.49179077 19.28557396]
[48.21442795 5.66225672]
[41.93706894 -7.96105909]
[26.71591759 -9.46565628]
[14.37303638 -18.32850647]
[8.16485405 -32.08804321]
[9.66738129 -47.00777435]
[18.37746048 -59.09082413]
[12.10009956 -72.71414185]
[5.82273912 -86.33745575]
[-0.61079448 -92.82186127]
[-0.44498006 -100.21065521]
[-6.51881409 -113.92591858]
[-12.59264755 -127.64118958]
[-13.23504543 -112.65495300]
[-17.39791107 -98.24417114]
[-24.84581184 -85.22384644]
[-35.15753555 -74.33034515]
[-47.74990463 -66.17974854]
[-61.91075516 -61.23300552]
[-76.83922577 -59.76988220]
[-91.69104004 -61.87312317]
[-105.62625885 -67.42378235]
[-117.85676575 -76.10794067]
[-127.69087982 -87.43447113]
[-134.57241821 -100.76279449]
[-138.11221313 -115.33914185]
[-138.11007690 -130.33914185]
[-134.56610107 -144.91447449]
[-127.68074799 -158.24082947]
[-117.84339142 -169.56454468]
[-105.61039734 -178.24520874]
[-91.67359924 -183.79187012]
[-76.82118225 -185.89086914]
[-61.89313126 -184.42347717]
[-47.73369217 -179.47267151]
[-35.14365768 -171.31846619]
[-24.83505249 -160.42202759]
[-17.39045906 -147.39857483]
[-18.28327560 -162.37199402]
[-19.17609215 -177.34539795]
[-29.67001915 -192.47677612]
[-21.20941925 -207.85160828]
[-22.32506752 -222.81005859]
[-23.44071579 -237.76850891]
[-38.17998505 -241.12193298]
[-51.27515793 -248.67228699]
[-61.56182480 -259.74819946]
[-68.12530518 -273.36480713]
[-70.38197327 -288.31134033]
[-68.13116455 -303.25875854]
[-61.57303238 -316.87796021]
[-51.29071045 -327.95788574]
[-38.19849777 -335.51339722]
[-23.46054649 -338.87258911]
[-8.38734436 -337.73678589]
[5.68080807 -332.20700073]
[17.49298096 -322.77493286]
[25.99884605 -310.27926636]
[30.44206429 -295.83111572]
[30.42755127 -280.71517944]
[25.95659256 -266.27560425]
[17.42674828 -253.79627991]
[5.59648323 -244.38691711]
[-8.48226261 -238.88415527]
[-7.36661386 -223.92570496]
[-6.25096560 -208.96725464]
[2.70738316 -200.83862305]
[3.75926971 -188.38562012]
[-4.20268536 -178.23820496]
[-3.30986953 -163.26480103]
[-2.41705370 -148.29139709]
[1.12261868 -133.71502686]
[7.19645262 -119.99975586]
[13.27028656 -106.28448486]
[19.44605446 -92.61481476]
[25.72341537 -78.99150085]
[32.00077820 -65.36818695]
[46.84508896 -64.13854218]
[59.16277313 -55.58689880]
[65.58863068 -41.92766190]
[64.30629730 -26.78657722]
[55.56038284 -14.23841953]
[61.83774567 -0.61510372]
[68.11510468 13.00821209]
[74.39246368 26.63152885]
[80.66983032 40.25484467]
[86.94718933 53.87816238]
[99.30061340 62.19934845]
[98.04867554 77.97094727]
[104.32603455 91.59426117]
[108.70788574 94.47755432]
[111.16236115 99.61066437]
[110.58073425 105.71792603]
[116.44969177 119.52210236]
[122.31865692 133.32627869]
[128.18760681 147.13046265]
[140.70759583 156.80313110]
[138.56684875 171.54309082]
[151.08683777 181.21577454]
[148.94609070 195.95573425]
[154.81504822 209.75990295]
[160.68400574 223.56408691]
[166.55296326 237.36825562]
[179.07295227 247.04093933]
[176.93220520 261.78088379]
[189.45217896 271.45358276]
[187.31143188 286.19354248]
[193.18040466 299.99771118]
[199.15196228 313.75781250]
[205.22579956 327.47308350]
[211.29963684 341.18835449]
[217.37345886 354.90362549]
[223.44729614 368.61886597]
[229.52113342 382.33413696]
[243.74169922 377.52886963]
[258.34033203 374.03665161]
[273.19601440 371.88644409]
[288.18569946 371.09606934]
[303.18515015 371.67208862]
[318.07006836 373.60968018]
[332.71713257 376.89282227]
[347.00494385 381.49429321]
[360.81512451 387.37597656]
[374.03323364 394.48913574]
[386.54971313 402.77481079]
[398.26089478 412.16436768]
[409.06970215 422.57998657]
[418.88656616 433.93533325]
[427.63015747 446.13635254]
[435.22799683 459.08193970]
[441.61715698 472.66479492]
[446.74468994 486.77236938]
[450.56805420 501.28778076]
[453.05563354 516.09069824]
[454.18679810 531.05853271]
[453.95214844 546.06719971]
[452.35363770 560.99237061]
[449.40454102 575.71032715]
[445.12927246 590.09912109]
[439.56323242 604.03948975]
[432.75259399 617.41601562]
[424.75378418 630.11773682]
[415.63305664 642.03948975]
[405.46603394 653.08239746]
[394.33691406 663.15502930]
[382.33792114 672.17388916]
[369.56854248 680.06427002]
[356.13452148 686.76074219]
[342.14724731 692.20782471]
[327.72256470 696.36041260]
[312.98004150 699.18408203]
[298.04180908 700.65545654]
[283.03170776 700.76226807]
[268.07403564 699.50366211]
[253.29281616 696.89013672]
[238.81050110 692.94329834]
[224.74710083 687.69580078]
[211.21914673 681.19122314]
[198.33874512 673.48339844]
[186.21261597 664.63623047]
[174.94126892 654.72302246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[27 157]
[28 156]
[30 154]
[32 152]
[33 151]
[34 150]
[35 149]
[37 147]
[39 145]
[40 144]
[41 143]
[42 142]
[43 139]
[44 138]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[56 126]
[57 125]
[58 124]
[60 123]
[61 122]
[62 121]
[87 120]
[88 119]
[89 118]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
