%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[111.41960907 610.72406006]
[98.90003204 602.45141602]
[86.97418213 593.34362793]
[75.69767761 583.44329834]
[65.12308502 572.79644775]
[55.29971313 561.45281982]
[46.27336121 549.46527100]
[38.08612061 536.88964844]
[30.77615547 523.78466797]
[24.37755394 510.21136475]
[18.92014885 496.23303223]
[14.42938423 481.91488647]
[10.92619896 467.32363892]
[8.42692661 452.52734375]
[6.94321966 437.59497070]
[6.48199606 422.59616089]
[7.04540682 407.60086060]
[8.63082409 392.67895508]
[11.23085690 377.90002441]
[14.83338261 363.33300781]
[19.42160225 349.04577637]
[24.97412682 335.10494995]
[31.46506500 321.57556152]
[38.86415100 308.52066040]
[47.13689423 296.00115967]
[56.24471283 284.07534790]
[66.14514923 272.79891968]
[76.79203796 262.22439575]
[88.13574219 252.40110779]
[100.12336731 243.37483215]
[112.69902802 235.18768311]
[125.80408478 227.87780762]
[139.37742615 221.47929382]
[127.54119873 212.43756104]
[129.72966003 196.76844788]
[124.27429962 182.79565430]
[112.43805695 173.75392151]
[114.62651825 158.08480835]
[109.17115784 144.11201477]
[103.71580505 130.13922119]
[98.26044464 116.16641998]
[87.89512634 110.85591888]
[83.74028015 99.97573090]
[87.92758179 89.10799408]
[82.68086243 75.05551910]
[77.43414307 61.00305176]
[72.08296204 46.99002838]
[66.62760162 33.01723099]
[61.17224503 19.04443169]
[53.70450592 6.03547955]
[44.38962173 -5.72177172]
[35.07474136 -17.47902298]
[25.75985718 -29.23627472]
[13.09616089 -21.17185783]
[-0.32961825 -14.45229721]
[-14.37515926 -9.14882469]
[-28.89157104 -5.31765938]
[-43.72497177 -2.99941421]
[-58.71811676 -2.21866417]
[-73.71207428 -2.98368502]
[-88.54789734 -5.28636742]
[-103.06832123 -9.10230160]
[-117.11942291 -14.39103603]
[-130.55224609 -21.09650803]
[-143.22439575 -29.14763641]
[-155.00154114 -38.45907211]
[-165.75883484 -48.93210983]
[-175.38224792 -60.45573044]
[-183.76977539 -72.90777588]
[-190.83248901 -86.15625000]
[-196.49554443 -100.06071472]
[-200.69886780 -114.47376251]
[-203.39793396 -129.24261475]
[-204.56413269 -144.21072388]
[-204.18508911 -159.21939087]
[-202.26481628 -174.10954285]
[-198.82369995 -188.72332764]
[-193.89817810 -202.90582275]
[-187.54048157 -216.50669861]
[-179.81800842 -229.38177490]
[-170.81263733 -241.39456177]
[-160.61979675 -252.41772461]
[-149.34754944 -262.33441162]
[-137.11538696 -271.03948975]
[-124.05299377 -278.44067383]
[-110.29882050 -284.45953369]
[-95.99867249 -289.03225708]
[-81.30413818 -292.11038208]
[-66.37099457 -293.66122437]
[-51.35753250 -293.66842651]
[-36.42290878 -292.13183594]
[-21.72543907 -289.06777954]
[-7.42092180 -284.50875854]
[6.33900452 -278.50305176]
[19.40847778 -271.11434937]
[31.64895630 -262.42098999]
[42.93067932 -252.51507568]
[53.13405991 -241.50167847]
[62.15093231 -229.49751282]
[69.88571930 -216.62983704]
[76.25641632 -203.03504944]
[81.19549561 -188.85726929]
[84.65060425 -174.24678040]
[86.58511353 -159.35847473]
[86.97851562 -144.35015869]
[85.82664490 -129.38095093]
[83.14170837 -114.60952759]
[78.95216370 -100.19246674]
[73.30242157 -86.28259277]
[66.25238037 -73.02736664]
[57.87677383 -60.56730270]
[48.26438522 -49.03448105]
[37.51710892 -38.55115509]
[46.83199310 -26.79390526]
[56.14687347 -15.03665447]
[65.46175385 -3.27940297]
[62.52370834 -17.98885155]
[63.79140854 -32.93518829]
[69.16487885 -46.93967819]
[78.22035217 -58.89787292]
[90.24366760 -67.86669922]
[104.28662109 -73.13883972]
[119.24172974 -74.29850769]
[133.92956543 -71.25424957]
[147.19178772 -64.24613953]
[157.98246765 -53.82688141]
[165.45063782 -40.81817245]
[169.00729370 -26.24593544]
[168.37197876 -11.25939560]
[163.59475708 2.95954370]
[155.05241394 15.28951836]
[143.41860962 24.75813484]
[129.61085510 30.61865807]
[114.71807098 32.40890503]
[99.91476440 29.98768616]
[86.36840057 23.54594994]
[75.14504242 13.58907509]
[80.60040283 27.56187248]
[86.05575562 41.53467178]
[91.41664886 46.62216949]
[91.48661804 55.75633240]
[96.73333740 69.80880737]
[101.98005676 83.86127472]
[115.18987274 94.19940948]
[112.23324585 110.71105957]
[117.68859863 124.68386078]
[123.14395905 138.65666199]
[128.59931946 152.62945557]
[140.82575989 162.67060852]
[138.24710083 177.34028625]
[143.70245361 191.31309509]
[155.92889404 201.35424805]
[153.35023499 216.02392578]
[167.66830444 211.53288269]
[182.25947571 208.02940369]
[197.05572510 205.52983093]
[211.98805237 204.04582214]
[226.98684692 203.58430481]
[241.98216248 204.14741516]
[256.90411377 205.73252869]
[271.68307495 208.33226013]
[286.25018311 211.93449402]
[300.53750610 216.52243042]
[314.47842407 222.07467651]
[328.00796509 228.56533813]
[341.06298828 235.96415710]
[353.58270264 244.23664856]
[365.50866699 253.34422302]
[376.78530884 263.24444580]
[387.36001587 273.89111328]
[397.18356323 285.23461914]
[406.21005249 297.22207642]
[414.39746094 309.79757690]
[421.70761108 322.90246582]
[428.10638428 336.47567749]
[433.56399536 350.45394897]
[438.05496216 364.77203369]
[441.55831909 379.36325073]
[444.05780029 394.15951538]
[445.54171753 409.09182739]
[446.00314331 424.09063721]
[445.43991089 439.08593750]
[443.85470581 454.00787354]
[441.25488281 468.78683472]
[437.65252686 483.35391235]
[433.06451416 497.64120483]
[427.51217651 511.58209229]
[421.02142334 525.11157227]
[413.62249756 538.16656494]
[405.34994507 550.68621826]
[396.24227905 562.61212158]
[386.34197998 573.88867188]
[375.69525146 584.46337891]
[364.35165405 594.28680420]
[352.36416626 603.31323242]
[339.78860474 611.50054932]
[326.68365479 618.81060791]
[313.11038208 625.20928955]
[299.13211060 630.66680908]
[284.81396484 635.15765381]
[270.22274780 638.66094971]
[255.42646790 641.16033936]
[240.49412537 642.64410400]
[225.49533081 643.10546875]
[210.50001526 642.54211426]
[195.57809448 640.95678711]
[180.79916382 638.35687256]
[166.23210144 634.75445557]
[151.94483948 630.16632080]
[138.00398254 624.61389160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 153]
[35 151]
[36 150]
[38 148]
[39 147]
[40 146]
[41 145]
[44 143]
[45 142]
[46 141]
[47 139]
[48 138]
[49 137]
[50 116]
[51 115]
[52 114]
[53 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
