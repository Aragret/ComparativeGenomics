%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[145.48371887 533.68640137]
[136.18096924 521.91278076]
[127.65983582 509.56170654]
[119.95605469 496.68496704]
[113.10194397 483.33654785]
[107.12625885 469.57244873]
[102.05404663 455.45043945]
[97.90659332 441.02969360]
[94.70129395 426.37075806]
[92.45159149 411.53506470]
[91.16692352 396.58483887]
[90.85267639 381.58285522]
[91.51016235 366.59194946]
[93.13663483 351.67507935]
[95.72527313 336.89474487]
[99.26520538 322.31298828]
[103.74160004 307.99096680]
[109.13566589 293.98870850]
[115.42478943 280.36499023]
[122.58258820 267.17691040]
[130.57904053 254.47985840]
[139.38059998 242.32701111]
[148.95034790 230.76939392]
[159.24816895 219.85545349]
[170.23083496 209.63099670]
[160.74194336 198.01373291]
[146.69833374 193.05122375]
[143.96086121 177.46864319]
[134.47196960 165.85137939]
[124.98306274 154.23411560]
[125.79104614 169.21234131]
[119.08995056 182.63229370]
[106.63142395 190.98603821]
[91.67209625 192.08993530]
[78.12230682 185.65541077]
[69.52392578 173.36444092]
[68.12455750 158.42985535]
[74.28999329 144.75552368]
[86.40859985 135.91587830]
[101.31260681 134.22158813]
[115.10543823 140.11497498]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.65883636 80.44194794]
[74.08896637 76.87991333]
[71.53718567 71.80197144]
[71.96872711 67.04563141]
[64.69549561 53.92693710]
[51.23715591 45.60926437]
[51.83281708 30.72657394]
[44.55958557 17.60788155]
[37.28635788 4.48918676]
[30.01312637 -8.62950706]
[16.26959801 -2.59295034]
[2.02770662 2.14974904]
[-12.59103489 5.55812693]
[-27.46190262 7.60310268]
[-42.45802307 8.26723003]
[-57.45144653 7.54484272]
[-72.31425476 5.44210339]
[-86.91964722 1.97695231]
[-101.14300537 -2.82104611]
[-114.86297607 -8.91095638]
[-127.96250916 -16.24081993]
[-140.32983398 -24.74810028]
[-151.85945129 -34.36021423]
[-162.45297241 -44.99515533]
[-172.02001953 -56.56218338]
[-180.47897339 -68.96261597]
[-187.75767517 -82.09064484]
[-193.79400635 -95.83427429]
[-198.53646851 -110.07624817]
[-201.94459534 -124.69504547]
[-203.98931885 -139.56594849]
[-204.65319824 -154.56207275]
[-203.93055725 -169.55549622]
[-201.82757568 -184.41825867]
[-198.36218262 -199.02359009]
[-193.56394958 -213.24687195]
[-187.47381592 -226.96673584]
[-180.14372253 -240.06614685]
[-171.63624573 -252.43333435]
[-162.02394104 -263.96279907]
[-151.38882446 -274.55612183]
[-139.82162476 -284.12298584]
[-127.42105865 -292.58175659]
[-114.29290771 -299.86022949]
[-100.54917145 -305.89633179]
[-86.30712128 -310.63854980]
[-71.68827057 -314.04644775]
[-56.81733322 -316.09091187]
[-41.82119370 -316.75454712]
[-26.82779121 -316.03164673]
[-11.96505070 -313.92843628]
[2.64022231 -310.46279907]
[16.86341858 -305.66430664]
[30.58318710 -299.57394409]
[43.68247604 -292.24365234]
[56.04952240 -283.73596191]
[67.57881165 -274.12344360]
[78.17198181 -263.48815918]
[87.73864746 -251.92082214]
[96.19718933 -239.52009583]
[103.47544861 -226.39183044]
[109.51131439 -212.64799500]
[114.25330353 -198.40586853]
[117.66094971 -183.78695679]
[119.70518494 -168.91598511]
[120.36856079 -153.91983032]
[119.64542389 -138.92643738]
[117.54194641 -124.06373596]
[114.07606506 -109.45852661]
[109.27735138 -95.23540497]
[103.18675995 -81.51573944]
[95.85623932 -68.41657257]
[87.34834290 -56.04967117]
[77.73564911 -44.52053833]
[67.10018158 -33.92755127]
[55.53267288 -24.36107445]
[43.13182068 -15.90273666]
[50.40505219 -2.78404284]
[57.67827988 10.33465099]
[64.95150757 23.45334435]
[77.88961792 30.83267975]
[77.81418610 46.65370560]
[85.08741760 59.77239990]
[92.55516052 72.78135681]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[128.00177002 132.45437622]
[136.60032654 144.74520874]
[146.08923340 156.36247253]
[155.57812500 167.97973633]
[170.30043030 173.77319336]
[172.35920715 188.52482605]
[181.84809875 200.14208984]
[194.05943298 191.42185974]
[206.80961609 183.51036072]
[220.04516602 176.44076538]
[233.71057129 170.24273682]
[247.74851990 164.94227600]
[262.10012817 160.56159973]
[276.70520020 157.11911011]
[291.50247192 154.62921143]
[306.42987061 153.10235596]
[321.42483521 152.54496765]
[336.42440796 152.95936584]
[351.36569214 154.34381104]
[366.18603516 156.69252014]
[380.82324219 159.99560547]
[395.21597290 164.23924255]
[409.30383301 169.40562439]
[423.02770996 175.47308350]
[436.33004761 182.41615295]
[449.15509033 190.20573425]
[461.44900513 198.80912781]
[473.16024780 208.19027710]
[484.23968506 218.30982971]
[494.64083862 229.12532043]
[504.32009888 240.59138489]
[513.23681641 252.65995789]
[521.35369873 265.28039551]
[528.63659668 278.39978027]
[535.05505371 291.96307373]
[540.58203125 305.91336060]
[545.19445801 320.19219971]
[548.87292480 334.73962402]
[551.60205078 349.49465942]
[553.37030029 364.39538574]
[554.17034912 379.37933350]
[553.99884033 394.38366699]
[552.85638428 409.34539795]
[550.74792480 424.20181274]
[547.68218994 438.89059448]
[543.67211914 453.35012817]
[538.73443604 467.51977539]
[532.88995361 481.34005737]
[526.16308594 494.75308228]
[518.58215332 507.70251465]
[510.17889404 520.13409424]
[500.98852539 531.99566650]
[491.04968262 543.23742676]
[480.40396118 553.81231689]
[469.09606934 563.67590332]
[457.17343140 572.78686523]
[444.68603516 581.10693359]
[431.68624878 588.60125732]
[418.22863770 595.23840332]
[404.36962891 600.99047852]
[390.16735840 605.83343506]
[375.68136597 609.74688721]
[360.97244263 612.71447754]
[346.10229492 614.72375488]
[331.13323975 615.76623535]
[316.12811279 615.83758545]
[301.14984131 614.93756104]
[286.26123047 613.06982422]
[271.52474976 610.24224854]
[257.00219727 606.46673584]
[242.75450134 601.75909424]
[228.84141541 596.13909912]
[215.32127380 589.63024902]
[202.25080872 582.25994873]
[189.68484497 574.05895996]
[177.67607117 565.06182861]
[166.27487183 555.30627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 140]
[26 139]
[28 137]
[29 136]
[30 135]
[41 134]
[42 133]
[43 132]
[45 130]
[46 129]
[49 128]
[50 127]
[52 125]
[53 124]
[54 123]
[55 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
