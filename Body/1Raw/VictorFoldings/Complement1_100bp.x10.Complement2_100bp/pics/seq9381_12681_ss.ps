%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[118.69032288 261.88391113]
[131.66351318 254.14613342]
[127.90721130 239.62408447]
[124.15090942 225.10202026]
[120.39460754 210.57995605]
[116.63831329 196.05790710]
[111.91996002 190.36940002]
[112.93590546 181.29165649]
[109.39623260 166.71527100]
[105.85655975 152.13890076]
[102.31688690 137.56253052]
[98.56058502 123.04046631]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[83.15405273 64.82233429]
[78.43391418 50.58434677]
[72.77112579 36.69431686]
[67.10834503 22.80429077]
[61.44555664 8.91426468]
[46.51870346 5.10700035]
[36.80935669 -6.62253284]
[35.87953568 -21.64249992]
[43.87665176 -34.17980957]
[38.21386337 -48.06983566]
[32.55107880 -61.95986557]
[26.88829231 -75.84989166]
[21.22550583 -89.73992157]
[15.56271839 -103.62994385]
[1.40476131 -98.66545105]
[-12.98305607 -94.41284180]
[-27.56496429 -90.88269806]
[-42.30471039 -88.08378601]
[-57.16564560 -86.02307892]
[-72.11082458 -84.70568085]
[-87.10309601 -84.13488770]
[-102.10518646 -84.31210327]
[-117.07978821 -85.23688507]
[-131.98966980 -86.90695190]
[-146.79779053 -89.31813812]
[-161.46730042 -92.46444702]
[-175.96174622 -96.33806610]
[-190.24510193 -100.92935944]
[-204.28182983 -106.22690582]
[-218.03706360 -112.21755219]
[-231.47657776 -118.88638306]
[-244.56697083 -126.21683502]
[-257.27569580 -134.19067383]
[-269.57116699 -142.78808594]
[-281.42279053 -151.98768616]
[-292.80114746 -161.76661682]
[-303.67788696 -172.10054016]
[-314.02603149 -182.96379089]
[-323.81982422 -194.32934570]
[-333.03488159 -206.16896057]
[-341.64834595 -218.45318604]
[-349.63879395 -231.15148926]
[-356.98632812 -244.23229980]
[-363.67272949 -257.66308594]
[-369.68133545 -271.41046143]
[-374.99722290 -285.44027710]
[-379.60717773 -299.71762085]
[-383.49972534 -314.20700073]
[-386.66519165 -328.87237549]
[-389.09570312 -343.67733765]
[-390.78524780 -358.58502197]
[-391.72961426 -373.55841064]
[-391.92642212 -388.56024170]
[-391.37521362 -403.55325317]
[-390.07733154 -418.50015259]
[-388.03604126 -433.36376953]
[-385.25637817 -448.10714722]
[-381.74530029 -462.69366455]
[-377.51147461 -477.08700562]
[-372.56549072 -491.25143433]
[-366.91961670 -505.15173340]
[-360.58786011 -518.75329590]
[-353.58599854 -532.02239990]
[-345.93145752 -544.92590332]
[-337.64321899 -557.43188477]
[-328.74191284 -569.50915527]
[-319.24966431 -581.12774658]
[-309.19009399 -592.25872803]
[-298.58816528 -602.87445068]
[-287.47027588 -612.94848633]
[-275.86407471 -622.45587158]
[-263.79837036 -631.37286377]
[-251.30320740 -639.67736816]
[-238.40962219 -647.34869385]
[-225.14968872 -654.36779785]
[-211.55635071 -660.71728516]
[-197.66343689 -666.38122559]
[-183.50544739 -671.34564209]
[-169.11759949 -675.59820557]
[-154.53567505 -679.12823486]
[-139.79591370 -681.92706299]
[-124.93497467 -683.98773193]
[-109.98978424 -685.30505371]
[-94.99751282 -685.87573242]
[-79.99542999 -685.69848633]
[-65.02082825 -684.77362061]
[-50.11094666 -683.10345459]
[-35.30284882 -680.69219971]
[-20.63334846 -677.54577637]
[-6.13891935 -673.67211914]
[8.14440441 -669.08074951]
[22.18111038 -663.78314209]
[35.93630219 -657.79241943]
[49.37578583 -651.12347412]
[62.46614075 -643.79296875]
[75.17482758 -635.81909180]
[87.47025299 -627.22161865]
[99.32183838 -618.02191162]
[110.70013428 -608.24298096]
[121.57683563 -597.90899658]
[131.92491150 -587.04565430]
[141.71862793 -575.68005371]
[150.93363953 -563.84039307]
[159.54704285 -551.55615234]
[167.53741455 -538.85778809]
[174.88490295 -525.77691650]
[181.57121277 -512.34613037]
[187.57974243 -498.59869385]
[192.89555359 -484.56887817]
[197.50543213 -470.29150391]
[201.39790344 -455.80212402]
[204.56330872 -441.13668823]
[206.99374390 -426.33172607]
[208.68321228 -411.42404175]
[209.62748718 -396.45065308]
[209.82421875 -381.44879150]
[209.27293396 -366.45581055]
[207.97499084 -351.50891113]
[205.93360901 -336.64532471]
[203.15388489 -321.90194702]
[199.64271545 -307.31546021]
[195.40882874 -292.92211914]
[190.46275330 -278.75772095]
[184.81680298 -264.85745239]
[178.48498535 -251.25590515]
[171.48306274 -237.98687744]
[163.82843018 -225.08337402]
[155.54013062 -212.57745361]
[146.63876343 -200.50021362]
[137.14646912 -188.88168335]
[127.08682251 -177.75074768]
[116.48485565 -167.13508606]
[105.36692047 -157.06109619]
[93.76065826 -147.55380249]
[81.69492340 -138.63685608]
[69.19970703 -130.33241272]
[56.30608749 -122.66114044]
[43.04610825 -115.64209747]
[29.45274544 -109.29273224]
[35.11553192 -95.40270233]
[40.77832031 -81.51268005]
[46.44110489 -67.62265015]
[52.10389328 -53.73262405]
[57.76667786 -39.84259796]
[72.24995422 -36.47025681]
[82.08663177 -25.08150101]
[83.34574890 -9.90691757]
[75.33557892 3.25147796]
[80.99836731 17.14150429]
[86.66115570 31.03153229]
[92.32394409 44.92155838]
[96.51276398 30.51830482]
[107.75341034 20.58613396]
[122.56282806 18.20263863]
[136.35217285 24.10637283]
[144.84864807 36.46799469]
[145.41955566 51.45712662]
[137.88796997 64.42922211]
[124.58763885 71.36473083]
[109.63982391 70.11461639]
[97.67610931 61.06603241]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.02510834 119.06836700]
[117.45288849 123.97818756]
[118.56890869 129.55058289]
[116.89326477 134.02285767]
[120.43293762 148.59922791]
[123.97261047 163.17559814]
[127.51228333 177.75198364]
[131.16036987 192.30160522]
[134.91667175 206.82365417]
[138.67297363 221.34571838]
[142.42927551 235.86778259]
[146.18557739 250.38983154]
[161.28356934 250.86666870]
[175.63520813 255.57908630]
[188.07708740 264.14508057]
[197.60058594 275.87026978]
[203.43368530 289.80407715]
[205.10353088 304.81701660]
[202.47473145 319.69204712]
[195.76040649 333.22329712]
[185.50485229 344.31384277]
[172.53944397 352.06463623]
[157.91522217 355.84735107]
[142.81771851 355.35534668]
[128.47082520 350.62850952]
[116.03755188 342.05001831]
[106.52583313 330.31530762]
[100.70673370 316.37561035]
[99.05197906 301.36102295]
[101.69572449 286.48864746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 181]
[13 180]
[15 179]
[16 178]
[17 177]
[18 167]
[19 166]
[20 165]
[21 164]
[25 160]
[26 159]
[27 158]
[28 157]
[29 156]
[30 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
