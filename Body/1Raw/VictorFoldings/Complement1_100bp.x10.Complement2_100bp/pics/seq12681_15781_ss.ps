%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[147.33578491 810.31390381]
[133.07402039 805.65356445]
[119.09328461 800.20782471]
[105.43680573 793.99353027]
[92.14679718 787.02984619]
[79.26432800 779.33837891]
[66.82922363 770.94281006]
[54.87992096 761.86920166]
[43.45335007 752.14550781]
[32.58483124 741.80175781]
[22.30796432 730.87005615]
[12.65450668 719.38403320]
[3.65430093 707.37933350]
[-4.66483402 694.89300537]
[-12.27718449 681.96362305]
[-19.15922165 668.63116455]
[-25.28967094 654.93682861]
[-30.64958763 640.92297363]
[-35.22240067 626.63287354]
[-38.99397659 612.11077881]
[-41.95265961 597.40148926]
[-44.08930206 582.55047607]
[-45.39730072 567.60369873]
[-45.87261200 552.60736084]
[-45.51376724 537.60772705]
[-44.32187653 522.65124512]
[-42.30062103 507.78414917]
[-39.45625305 493.05230713]
[-35.79756165 478.50134277]
[-31.33585358 464.17617798]
[-26.08492470 450.12112427]
[-20.06100082 436.37960815]
[-13.28270340 422.99411011]
[-5.77098465 410.00601196]
[2.45093822 397.45541382]
[11.35765076 385.38116455]
[20.92162323 373.82058716]
[31.11329269 362.80935669]
[41.90116119 352.38156128]
[53.25187683 342.56942749]
[65.13036346 333.40325928]
[77.49989319 324.91140747]
[90.32224274 317.12011719]
[103.55777740 310.05346680]
[117.16558838 303.73330688]
[131.10360718 298.17916870]
[145.32876587 293.40820312]
[141.35665894 278.94366455]
[137.38456726 264.47915649]
[133.41247559 250.01463318]
[128.60993958 244.39701843]
[129.49063110 235.30514526]
[125.73432922 220.78308105]
[121.65466309 206.34852600]
[117.25366211 192.00868225]
[112.85266876 177.66883850]
[108.45166779 163.32899475]
[104.05066681 148.98913574]
[94.82380676 160.81559753]
[79.82705688 161.12812805]
[70.11547852 149.69636536]
[72.84807587 134.94737244]
[86.01048279 127.75355530]
[99.89875031 133.41670227]
[96.57649231 118.78924561]
[84.37232208 110.97870636]
[81.16312408 96.84904480]
[88.79605103 84.53301239]
[85.47379303 69.90554810]
[82.15152740 55.27809143]
[78.82926941 40.65063095]
[75.50701141 26.02317047]
[70.37192535 40.11681747]
[59.69097137 50.64854050]
[45.52647018 55.58482742]
[30.61336899 53.97256088]
[17.83115196 46.12304306]
[9.64786530 33.55189514]
[7.64357376 18.68640327]
[12.20527458 4.39686537]
[22.45217514 -6.55763340]
[36.40575790 -12.06195068]
[51.37180710 -11.05329037]
[64.46060944 -3.72640729]
[73.14541626 8.50516796]
[72.47563171 -6.47987080]
[71.80584717 -21.46491051]
[62.83141327 -30.72894287]
[62.58204269 -43.22380447]
[70.64611816 -52.24030304]
[70.19951630 -67.23365021]
[56.78051376 -74.57379150]
[48.88933945 -87.55940247]
[48.55969620 -102.65104675]
[55.77999496 -115.79347229]
[68.52335358 -123.50530243]
[68.07675171 -138.49865723]
[67.63014221 -153.49200439]
[53.66659164 -159.65495300]
[43.76639938 -171.27169800]
[39.89526367 -186.03575134]
[42.82179642 -201.01567078]
[51.96493530 -213.23719788]
[65.50930023 -220.27374268]
[80.76565552 -220.72817993]
[94.70482635 -214.51029968]
[104.55919647 -202.85464478]
[108.37216187 -188.07546997]
[105.38665771 -173.10717773]
[96.19546509 -160.92175293]
[82.62349701 -153.93861389]
[83.07009888 -138.94525146]
[83.51670837 -123.95190430]
[96.69648743 -117.01224518]
[104.68624115 -104.32288361]
[105.25544739 -89.23838043]
[98.15118408 -75.80609131]
[85.19286346 -67.68025970]
[85.63947296 -52.68690872]
[95.65367889 -38.27571106]
[86.79088593 -22.13469505]
[87.46067047 -7.14965582]
[88.13045502 7.83538294]
[90.13446808 22.70091057]
[93.45673370 37.32837296]
[96.77899170 51.95582962]
[100.10124969 66.58329010]
[103.42350769 81.21075439]
[115.62767792 89.02129364]
[118.83687592 103.15095520]
[111.20394897 115.46698761]
[114.52620697 130.09445190]
[118.39051819 144.58813477]
[122.79151154 158.92799377]
[127.19251251 173.26783752]
[131.59350586 187.60768127]
[135.99450684 201.94752502]
[139.81710815 205.50207520]
[141.70520020 209.74334717]
[141.72114563 213.81947327]
[140.25639343 217.02677917]
[144.01269531 231.54884338]
[147.87699890 246.04252625]
[151.84909058 260.50704956]
[155.82118225 274.97158813]
[159.79328918 289.43609619]
[174.45999146 286.27307129]
[189.27981567 283.93005371]
[204.20693970 282.41424561]
[219.19525146 281.73037720]
[234.19839478 281.88052368]
[249.17001343 282.86422729]
[264.06381226 284.67846680]
[278.83377075 287.31762695]
[293.43423462 290.77352905]
[307.82006836 295.03552246]
[321.94683838 300.09042358]
[335.77081299 305.92260742]
[349.24929810 312.51403809]
[362.34066772 319.84436035]
[375.00439453 327.89086914]
[387.20138550 336.62875366]
[398.89392090 346.03097534]
[410.04583740 356.06848145]
[420.62268066 366.71023560]
[430.59179688 377.92337036]
[439.92230225 389.67318726]
[448.58541870 401.92340088]
[456.55432129 414.63610840]
[463.80441284 427.77206421]
[470.31326294 441.29064941]
[476.06079102 455.15005493]
[481.02917480 469.30743408]
[485.20306396 483.71908569]
[488.56961060 498.34042358]
[491.11837769 513.12622070]
[492.84146118 528.03088379]
[493.73358154 543.00823975]
[493.79193115 558.01202393]
[493.01638794 572.99584961]
[491.40930176 587.91345215]
[488.97564697 602.71862793]
[485.72296143 617.36572266]
[481.66128540 631.80938721]
[476.80319214 646.00500488]
[471.16369629 659.90875244]
[464.76022339 673.47753906]
[457.61254883 686.66949463]
[449.74276733 699.44384766]
[441.17523193 711.76104736]
[431.93640137 723.58312988]
[422.05484009 734.87347412]
[411.56109619 745.59716797]
[400.48760986 755.72113037]
[388.86856079 765.21405029]
[376.73992920 774.04656982]
[364.13919067 782.19134521]
[351.10525513 789.62329102]
[337.67846680 796.31939697]
[323.90026855 802.25897217]
[309.81326294 807.42358398]
[295.46102905 811.79736328]
[280.88787842 815.36676025]
[266.13888550 818.12078857]
[251.25965881 820.05084229]
[236.29614258 821.15100098]
[221.29463196 821.41784668]
[206.30145264 820.85058594]
[191.36297607 819.45098877]
[176.52537537 817.22326660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 146]
[48 145]
[49 144]
[50 143]
[52 142]
[53 141]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[64 132]
[65 131]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[85 123]
[86 122]
[87 121]
[90 119]
[91 118]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
