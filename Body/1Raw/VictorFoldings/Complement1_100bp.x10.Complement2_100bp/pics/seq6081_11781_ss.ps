%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[89.46675873 563.06079102]
[75.19190216 567.69293213]
[60.60101318 571.20495605]
[45.78184128 573.57568359]
[30.82351875 574.79095459]
[15.81600189 574.84338379]
[0.84955001 573.73272705]
[-13.98582554 571.46557617]
[-28.60090065 568.05560303]
[-42.90777969 563.52331543]
[-56.82041550 557.89599609]
[-70.25514221 551.20745850]
[-83.13114929 543.49792480]
[-95.37100220 534.81378174]
[-106.90109253 525.20727539]
[-117.65207672 514.73614502]
[-127.55928802 503.46334839]
[-136.56314087 491.45672607]
[-144.60951233 478.78848267]
[-151.64996338 465.53479004]
[-157.64219666 451.77539062]
[-162.55014038 437.59298706]
[-166.34429932 423.07290649]
[-169.00183105 408.30245972]
[-170.50677490 393.37051392]
[-170.85008240 378.36682129]
[-170.02966309 363.38165283]
[-168.05047607 348.50512695]
[-164.92442322 333.82672119]
[-160.67028809 319.43466187]
[-155.31365967 305.41558838]
[-148.88676453 291.85375977]
[-141.42825317 278.83074951]
[-132.98297119 266.42486572]
[-123.60172272 254.71075439]
[-113.34091949 243.75885010]
[-102.26228333 233.63500977]
[-90.43243408 224.40013123]
[-77.92251587 216.10975647]
[-64.80777740 208.81373596]
[-51.16707993 202.55595398]
[-37.08247375 197.37405396]
[-22.63865662 193.29919434]
[-7.92250299 190.35588074]
[6.97748470 188.56179810]
[21.97169495 187.92778015]
[36.96994781 188.45759583]
[51.88204193 190.14808655]
[66.61829376 192.98905945]
[70.59039307 178.52453613]
[74.56248474 164.06001282]
[78.53458405 149.59548950]
[82.50667572 135.13096619]
[86.47877502 120.66644287]
[90.45087433 106.20191956]
[78.35400391 115.07129669]
[63.38924026 116.09886169]
[50.19358063 108.96622467]
[42.85583878 95.88350677]
[43.64969635 80.90452576]
[52.32917023 68.67068481]
[66.20482635 62.97277832]
[80.97714233 65.57636261]
[92.06875610 75.67467499]
[96.04280853 90.13892365]
[101.91177368 76.33474731]
[107.78073120 62.53056717]
[113.64969635 48.72639084]
[119.51865387 34.92221451]
[106.10161591 28.20435333]
[93.12818909 20.66535187]
[80.64854431 12.33437729]
[68.71098328 3.24366164]
[57.36168289 -6.57162523]
[46.64455032 -17.07350922]
[36.60104752 -28.22136116]
[27.27003479 -39.97204971]
[18.68761063 -52.28011703]
[10.88697815 -65.09794617]
[3.89831805 -78.37593842]
[-2.25133228 -92.06272888]
[-7.53818083 -106.10536957]
[-11.94177437 -120.44953156]
[-15.44507504 -135.03971863]
[-18.03452873 -149.81947327]
[-19.70011902 -164.73162842]
[-20.43540192 -179.71847534]
[-20.23753166 -194.72206116]
[-19.10727310 -209.68431091]
[-17.04900169 -224.54734802]
[-14.07067776 -239.25367737]
[-10.18382549 -253.74639893]
[-5.40348148 -267.96945190]
[0.25185904 -281.86776733]
[6.76031685 -295.38763428]
[14.09671211 -308.47671509]
[22.23266029 -321.08435059]
[31.13668633 -333.16180420]
[40.77434158 -344.66232300]
[51.10834122 -355.54144287]
[62.09870148 -365.75704956]
[73.70290375 -375.26962280]
[85.87605286 -384.04235840]
[98.57105255 -392.04132080]
[111.73879242 -399.23556519]
[125.32832336 -405.59725952]
[139.28707886 -411.10177612]
[153.56103516 -415.72784424]
[168.09498596 -419.45755005]
[182.83270264 -422.27648926]
[197.71716309 -424.17370605]
[212.69078064 -425.14190674]
[227.69561768 -425.17730713]
[242.67362976 -424.27978516]
[257.56689453 -422.45285034]
[272.31774902 -419.70352173]
[286.86914062 -416.04244995]
[301.16476440 -411.48379517]
[315.14935303 -406.04522705]
[328.76873779 -399.74774170]
[341.97030640 -392.61572266]
[354.70291138 -384.67678833]
[366.91732788 -375.96157837]
[378.56631470 -366.50390625]
[389.60476685 -356.34027100]
[399.98999023 -345.51007080]
[409.68182373 -334.05514526]
[418.64276123 -322.01986694]
[426.83810425 -309.45077515]
[434.23620605 -296.39645386]
[440.80841064 -282.90747070]
[446.52929688 -269.03598022]
[451.37670898 -254.83567810]
[455.33190918 -240.36146545]
[458.37963867 -225.66935730]
[460.50802612 -210.81619263]
[461.70889282 -195.85943604]
[461.97756958 -180.85696411]
[461.31304932 -165.86680603]
[459.71786499 -150.94694519]
[457.19818115 -136.15513611]
[453.76379395 -121.54858398]
[449.42794800 -107.18379974]
[444.20742798 -93.11636353]
[438.12246704 -79.40069580]
[431.19653320 -66.08985901]
[423.45651245 -53.23535919]
[414.93225098 -40.88692474]
[405.65682983 -29.09232140]
[395.66604614 -17.89719009]
[384.99859619 -7.34483910]
[373.69573975 2.52390623]
[361.80123901 11.67086506]
[349.36105347 20.06064987]
[336.42333984 27.66080093]
[323.03817749 34.44191360]
[309.25729370 40.37775803]
[295.13406372 45.44536209]
[280.72308350 49.62512589]
[266.08013916 52.90087509]
[251.26185608 55.25993729]
[236.32557678 56.69318771]
[221.32910156 57.19507980]
[206.33041382 56.76367188]
[191.38757324 55.40063477]
[176.55836487 53.11123657]
[161.90019226 49.90433884]
[147.46972656 45.79235077]
[133.32283020 40.79117584]
[127.45387268 54.59535217]
[121.58490753 68.39952850]
[115.71595001 82.20370483]
[109.84699249 96.00788116]
[104.91539764 110.17401886]
[100.94329834 124.63854218]
[96.97120667 139.10307312]
[92.99910736 153.56759644]
[89.02700806 168.03211975]
[85.05491638 182.49664307]
[81.08281708 196.96116638]
[95.20329285 202.04450989]
[108.88739014 208.20681763]
[122.05279541 215.41099548]
[134.62034607 223.61375427]
[146.51443481 232.76573181]
[157.66355896 242.81190491]
[168.00064087 253.69183350]
[177.46351624 265.34011841]
[185.99528503 277.68664551]
[193.54463196 290.65722656]
[200.06614685 304.17382812]
[205.52061462 318.15512085]
[209.87521362 332.51708984]
[213.10379028 347.17330933]
[215.18688965 362.03564453]
[216.11199951 377.01470947]
[215.87355042 392.02041626]
[214.47299194 406.96252441]
[211.91874695 421.75119019]
[208.22615051 436.29742432]
[203.41743469 450.51376343]
[197.52151489 464.31472778]
[190.57383728 477.61727905]
[182.61621094 490.34146118]
[173.69647217 502.41070557]
[163.86828613 513.75244141]
[153.19075012 524.29846191]
[141.72807312 533.98529053]
[129.54919434 542.75476074]
[116.72737885 550.55407715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 174]
[65 173]
[66 172]
[67 171]
[68 170]
[69 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
