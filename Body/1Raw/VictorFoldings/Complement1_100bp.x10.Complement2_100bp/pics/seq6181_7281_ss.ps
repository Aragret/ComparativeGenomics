%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCU\
) } def
/len { sequence length } bind def

/coor [
[91.06991577 552.46173096]
[76.07514954 553.39489746]
[61.09299088 552.27746582]
[46.40254593 549.13031006]
[32.27748871 544.01208496]
[18.98095894 537.01806641]
[6.76066685 528.27856445]
[-4.15573311 517.95648193]
[-13.56487465 506.24401855]
[-21.29147148 493.35940552]
[-27.19158173 479.54266357]
[-31.15529060 465.05117798]
[-33.10875320 450.15493774]
[-33.01558304 435.13146973]
[-30.87751389 420.26058960]
[-26.73437500 405.81939697]
[-20.66335106 392.07690430]
[-12.77754116 379.28909302]
[-3.22385526 367.69424438]
[7.81972885 357.50833130]
[20.14747620 348.92108154]
[33.52972794 342.09255981]
[47.71717834 337.14987183]
[62.44552994 334.18518066]
[77.44039917 333.25366211]
[78.55604553 318.29522705]
[79.67169189 303.33676147]
[80.78734589 288.37829590]
[81.90299225 273.41986084]
[79.26568604 266.51577759]
[83.14823151 258.24752808]
[84.48647308 243.30734253]
[85.82470703 228.36715698]
[79.25373077 215.00035095]
[88.19136810 201.94549561]
[89.52960205 187.00531006]
[90.86783600 172.06513977]
[91.64915466 157.08549500]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[91.67887878 57.73811722]
[89.01307678 42.97690201]
[86.34728241 28.21568489]
[83.68148804 13.45446682]
[81.01569366 -1.30675042]
[76.08409882 -15.47288513]
[69.00699615 -28.69841385]
[61.92988968 -41.92393875]
[54.85278320 -55.14946747]
[47.77567673 -68.37499237]
[34.44266891 -76.89212036]
[35.25984192 -91.76428986]
[28.18273735 -104.98982239]
[21.10563278 -118.21534729]
[14.02852726 -131.44087219]
[6.95142174 -144.66639709]
[-6.38158846 -153.18353271]
[-5.56441259 -168.05569458]
[-19.52554321 -162.52536011]
[-34.02609253 -158.62255859]
[-48.87701035 -156.39816284]
[-63.88469315 -155.88117981]
[-78.85347748 -157.07835388]
[-93.58821869 -159.97407532]
[-107.89682007 -164.53057861]
[-121.59273529 -170.68846130]
[-134.49742126 -178.36746216]
[-146.44261169 -187.46746826]
[-157.27261353 -197.86982727]
[-166.84620667 -209.43891907]
[-175.03858948 -222.02394104]
[-181.74296570 -235.46080017]
[-186.87190247 -249.57432556]
[-190.35856628 -264.18051147]
[-192.15750122 -279.08895874]
[-192.24522400 -294.10528564]
[-190.62060547 -309.03372192]
[-187.30484009 -323.67965698]
[-182.34114075 -337.85214233]
[-175.79421997 -351.36642456]
[-167.74945068 -364.04629517]
[-158.31167603 -375.72647095]
[-147.60395813 -386.25463867]
[-135.76589966 -395.49359131]
[-122.95182037 -403.32284546]
[-109.32878876 -409.64035034]
[-95.07440186 -414.36370850]
[-80.37450409 -417.43139648]
[-65.42072296 -418.80337524]
[-50.40802765 -418.46176147]
[-35.53213120 -416.41104126]
[-20.98697281 -412.67794800]
[-6.96217918 -407.31109619]
[6.35940790 -400.38052368]
[18.80411339 -391.97653198]
[30.20969772 -382.20867920]
[40.42746353 -371.20437622]
[49.32419968 -359.10702515]
[56.78392410 -346.07437134]
[62.70937729 -332.27630615]
[67.02331543 -317.89270020]
[69.66949463 -303.11111450]
[70.61341095 -288.12420654]
[69.84276581 -273.12741089]
[67.36760712 -258.31622314]
[63.22019958 -243.88374329]
[57.45461273 -230.01811218]
[50.14601517 -216.90010071]
[41.38968658 -204.70072937]
[31.29978943 -193.57905579]
[20.00786018 -183.68006897]
[7.66111469 -175.13279724]
[20.48792267 -167.56166077]
[20.17694855 -151.74351501]
[27.25405502 -138.51797485]
[34.33116150 -125.29244995]
[41.40826416 -112.06692505]
[48.48537064 -98.84140015]
[61.31217957 -91.27024841]
[61.00120544 -75.45210266]
[68.07830811 -62.22657394]
[75.15541840 -49.00104523]
[82.23252106 -35.77552032]
[89.30963135 -22.54999161]
[88.96233368 -37.54597092]
[92.62023163 -52.09312820]
[100.01924133 -65.14129639]
[110.62522888 -75.74851227]
[123.67253876 -83.14903259]
[138.21926880 -86.80860901]
[153.21528625 -86.46305084]
[167.57801819 -82.13730621]
[180.27059937 -74.14365387]
[190.37673950 -63.05916214]
[197.16687012 -49.68403244]
[200.15080261 -34.98382568]
[199.11314392 -20.01976013]
[194.12876892 -5.87210655]
[185.55754089 6.43780375]
[174.01818848 16.02130890]
[160.34378052 22.18656540]
[145.52146912 24.48850060]
[130.62127686 22.76093292]
[116.71887970 17.12858009]
[104.81790161 7.99804449]
[95.77690887 -3.97254586]
[98.44270325 10.78867149]
[101.10850525 25.54988861]
[103.77429962 40.31110764]
[106.44009399 55.07232285]
[111.89608765 41.09977341]
[122.50609589 30.49658012]
[136.48214722 25.04956818]
[151.46903992 25.67665482]
[164.94120789 32.27216339]
[174.62835693 43.72463989]
[178.89802551 58.10413361]
[177.03071594 72.98744965]
[169.34109497 85.86649323]
[157.12500000 94.57090759]
[142.44104004 97.63385773]
[127.76374817 94.53918457]
[115.56649780 85.80838013]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[106.64749146 157.30882263]
[119.06481934 148.89396667]
[133.43060303 153.20957947]
[139.15489197 167.07437134]
[132.01799011 180.26771545]
[117.28092957 183.06398010]
[105.80802155 173.40336609]
[104.46978760 188.34355164]
[103.13155365 203.28373718]
[109.60680389 217.71916199]
[100.76488495 229.70539856]
[99.42665100 244.64558411]
[98.08841705 259.58575439]
[96.86144257 274.53549194]
[95.74579620 289.49395752]
[94.63014984 304.45242310]
[93.51449585 319.41085815]
[92.39884949 334.36932373]
[107.08963776 337.51486206]
[121.21524811 342.63159180]
[134.51252747 349.62417603]
[146.73376465 358.36230469]
[157.65129089 368.68322754]
[167.06169128 380.39468384]
[174.78968811 393.27847290]
[180.69129944 407.09457397]
[184.65657043 421.58560181]
[186.61164856 436.48162842]
[186.52011108 451.50512695]
[184.38363647 466.37622070]
[180.24206543 480.81787109]
[174.17253113 494.56103516]
[166.28810120 507.34967041]
[156.73567200 518.94555664]
[145.69319153 529.13269043]
[133.36637878 537.72125244]
[119.98486328 544.55126953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[31 186]
[32 185]
[33 184]
[35 182]
[36 181]
[37 180]
[38 174]
[39 173]
[40 172]
[41 171]
[43 169]
[44 168]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[62 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
