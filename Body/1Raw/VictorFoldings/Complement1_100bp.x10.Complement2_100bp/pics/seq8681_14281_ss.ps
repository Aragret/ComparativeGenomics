%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[126.09243774 637.29913330]
[112.64335632 630.64831543]
[99.57407379 623.27917480]
[86.92292023 615.21319580]
[74.72700500 606.47418213]
[63.02209091 597.08770752]
[51.84252167 587.08129883]
[41.22108459 576.48431396]
[31.18893623 565.32788086]
[21.77550125 553.64459229]
[13.00838947 541.46887207]
[4.91332006 528.83636475]
[-2.48596478 515.78405762]
[-9.16776180 502.35037231]
[-15.11247063 488.57461548]
[-20.30265617 474.49722290]
[-24.72309303 460.15948486]
[-28.36081505 445.60345459]
[-31.20515442 430.87185669]
[-33.24776459 416.00784302]
[-34.48265839 401.05505371]
[-34.90621185 386.05734253]
[-34.51718140 371.05868530]
[-33.31670761 356.10308838]
[-31.30831528 341.23440552]
[-28.49789238 326.49627686]
[-24.89368248 311.93191528]
[-20.50625992 297.58404541]
[-15.34849072 283.49475098]
[-9.43550587 269.70535278]
[-2.78464770 256.25628662]
[4.58457470 243.18704224]
[12.65054607 230.53590393]
[21.38960838 218.34002686]
[30.77612686 206.63514709]
[40.78256989 195.45559692]
[51.37958908 184.83419800]
[62.53609467 174.80209351]
[74.21936798 165.38868713]
[86.39514160 156.62162781]
[99.02770233 148.52659607]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[67.80944824 52.12246323]
[53.90570831 57.77077866]
[39.61461258 62.35138702]
[25.01801872 65.83805847]
[10.19953537 68.21080780]
[-4.75595617 69.45605469]
[-19.76279259 69.56666565]
[-34.73501587 68.54199982]
[-49.58686447 66.38793945]
[-64.23326874 63.11680984]
[-78.59033203 58.74735641]
[-92.57581329 53.30459976]
[-106.10961151 46.81972504]
[-119.11421204 39.32986832]
[-131.51510620 30.87793732]
[-143.24127197 21.51234436]
[-154.22554016 11.28673172]
[-164.40499878 0.25967392]
[-173.72134399 -11.50566673]
[-182.12120056 -23.94189835]
[-189.55645752 -36.97778702]
[-195.98451233 -50.53866196]
[-201.36857605 -64.54685211]
[-205.67778015 -78.92211151]
[-208.88746643 -93.58209991]
[-210.97923279 -108.44284821]
[-211.94110107 -123.41924286]
[-211.76754761 -138.42547607]
[-210.45959473 -153.37562561]
[-208.02471924 -168.18402100]
[-204.47688293 -182.76586914]
[-199.83638000 -197.03762817]
[-194.12980652 -210.91755676]
[-187.38984680 -224.32614136]
[-179.65512085 -237.18659973]
[-170.96990967 -249.42524719]
[-161.38398743 -260.97198486]
[-150.95222473 -271.76068115]
[-139.73442078 -281.72955322]
[-127.79479980 -290.82147217]
[-115.20175934 -298.98434448]
[-102.02743530 -306.17144775]
[-88.34728241 -312.34161377]
[-74.23966980 -317.45947266]
[-59.78539658 -321.49575806]
[-45.06726456 -324.42730713]
[-30.16957283 -326.23730469]
[-15.17765713 -326.91546631]
[-0.17739195 -326.45782471]
[14.74530315 -324.86706543]
[29.50494957 -322.15225220]
[44.01700592 -318.32894897]
[58.19834900 -313.41906738]
[71.96774292 -307.45071411]
[85.24632263 -300.45809937]
[97.95803070 -292.48126221]
[110.03004456 -283.56588745]
[121.39322662 -273.76306152]
[131.98248291 -263.12893677]
[141.73716736 -251.72438049]
[150.60137939 -239.61476135]
[158.52438354 -226.86943054]
[165.46076965 -213.56138611]
[171.37080383 -199.76686096]
[176.22065735 -185.56488037]
[179.98252869 -171.03677368]
[182.63487244 -156.26577759]
[184.16252136 -141.33648682]
[184.55668640 -126.33441925]
[183.81513977 -111.34551239]
[181.94210815 -96.45560455]
[178.94833374 -81.75000763]
[174.85096741 -67.31294250]
[169.67346191 -53.22710037]
[163.44548035 -39.57317352]
[156.20271301 -26.42936707]
[147.98663330 -13.87096882]
[138.84429932 -1.96991467]
[128.82807922 9.20562840]
[117.99534607 19.59164619]
[106.40815735 29.12864876]
[94.13288116 37.76200485]
[81.23982239 45.44226837]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[139.28605652 128.50231934]
[153.36338806 123.31198883]
[167.70108032 118.89141083]
[182.25708008 115.25354004]
[196.98866272 112.40904999]
[211.85266113 110.36629486]
[226.80543518 109.13124847]
[241.80314636 108.70755005]
[256.80181885 109.09642792]
[271.75741577 110.29675293]
[286.62609863 112.30499268]
[301.36425781 115.11527252]
[315.92864990 118.71932983]
[330.27658081 123.10661316]
[344.36593628 128.26423645]
[358.15539551 134.17709351]
[371.60449219 140.82780457]
[384.67382812 148.19689941]
[397.32504272 156.26274109]
[409.52102661 165.00167847]
[421.22598267 174.38809204]
[432.40563965 184.39442444]
[443.02713013 194.99133301]
[453.05935669 206.14773560]
[462.47286987 217.83091736]
[471.24008179 230.00660706]
[479.33523560 242.63908386]
[486.73458862 255.69128418]
[493.41647339 269.12493896]
[499.36126709 282.90066528]
[504.55154419 296.97802734]
[508.97210693 311.31573486]
[512.60992432 325.87173462]
[515.45434570 340.60333252]
[517.49707031 355.46731567]
[518.73205566 370.42010498]
[519.15570068 385.41781616]
[518.76678467 400.41647339]
[517.56640625 415.37207031]
[515.55810547 430.24075317]
[512.74780273 444.97891235]
[509.14367676 459.54330444]
[504.75634766 473.89120483]
[499.59866333 487.98052979]
[493.68579102 501.76998901]
[487.03500366 515.21905518]
[479.66586304 528.28839111]
[471.59997559 540.93957520]
[462.86099243 553.13549805]
[453.47457886 564.84045410]
[443.46820068 576.02008057]
[432.87124634 586.64154053]
[421.71481323 596.67370605]
[410.03158569 606.08721924]
[397.85589600 614.85437012]
[385.22338867 622.94946289]
[372.17114258 630.34875488]
[358.73745728 637.03063965]
[344.96173096 642.97540283]
[330.88433838 648.16558838]
[316.54663086 652.58612061]
[301.99060059 656.22387695]
[287.25900269 659.06823730]
[272.39498901 661.11090088]
[257.44223022 662.34588623]
[242.44450378 662.76947021]
[227.44584656 662.38049316]
[212.49024963 661.18005371]
[197.62156677 659.17169189]
[182.88343811 656.36132812]
[168.31906128 652.75720215]
[153.97117615 648.36981201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 138]
[43 137]
[44 136]
[46 134]
[47 133]
[48 132]
[49 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
