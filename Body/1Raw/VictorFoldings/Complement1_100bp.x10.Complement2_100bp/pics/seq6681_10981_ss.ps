%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[120.51832581 652.61267090]
[105.78765869 649.71002197]
[91.44110107 645.28350830]
[77.63584137 639.38159180]
[64.52313995 632.06896973]
[52.24666977 623.42572021]
[40.94092941 613.54656982]
[30.72979355 602.53973389]
[21.72514534 590.52581787]
[14.02564049 577.63647461]
[7.71564007 564.01287842]
[2.86428046 549.80438232]
[-0.47528446 535.16656494]
[-2.26646471 520.25988770]
[-2.48963499 505.24761963]
[-1.14235008 490.29428101]
[1.76062822 475.56369019]
[6.18749332 461.21722412]
[12.08974266 447.41210938]
[19.40270615 434.29959106]
[28.04626083 422.02331543]
[37.92570496 410.71783447]
[48.93278885 400.50695801]
[60.94691467 391.50259399]
[73.83644867 383.80340576]
[87.46017456 377.49374390]
[101.66880798 372.64273071]
[116.30668640 369.30352783]
[131.21342468 367.51269531]
[130.99009705 352.51437378]
[130.76676941 337.51602173]
[122.84082794 324.90536499]
[130.37181091 310.99151611]
[122.44587708 298.38085938]
[129.97685242 284.46701050]
[129.75352478 269.46868896]
[129.53019714 254.47035217]
[129.30686951 239.47201538]
[129.08354187 224.47366333]
[126.85842896 209.63963318]
[122.67141724 195.23583984]
[118.48440552 180.83206177]
[114.29739380 166.42828369]
[109.78976440 152.12159729]
[104.96376801 137.91914368]
[100.13777161 123.71668243]
[95.31176758 109.51422882]
[89.75254822 95.58242798]
[83.47518158 81.95911407]
[80.50657654 96.66242218]
[70.65836334 107.97669983]
[56.50485611 112.94441223]
[41.74573898 110.26701355]
[30.23901176 100.64437103]
[24.99250603 86.59181976]
[27.37764549 71.78266144]
[36.77096176 60.08797836]
[50.71706009 54.56472778]
[65.57047272 56.65667725]
[77.44799805 65.81629181]
[73.26098633 51.41250992]
[69.07397461 37.00872803]
[64.88697052 22.60494614]
[60.69995499 8.20116329]
[56.51294327 -6.20261860]
[52.32593155 -20.60640144]
[48.13892365 -35.01018143]
[43.84479904 -49.38239670]
[39.44380188 -63.72224426]
[25.76226044 -71.16893768]
[21.50329971 -85.77427673]
[28.68689919 -98.77163696]
[19.46003342 -86.94519043]
[4.46328974 -86.63264465]
[-5.24829102 -98.06440735]
[-2.51569319 -112.81340790]
[10.64671421 -120.00722504]
[24.53498077 -114.34407043]
[21.21272087 -128.97152710]
[17.00859261 -134.07415771]
[16.14250565 -139.69082642]
[18.01618004 -144.08381653]
[15.13090611 -158.80371094]
[12.24563408 -173.52360535]
[9.36036110 -188.24349976]
[6.47508860 -202.96337891]
[3.58981609 -217.68327332]
[-11.46704197 -218.54458618]
[-25.83641052 -223.12411499]
[-38.61502075 -231.13397217]
[-48.99959946 -242.07067871]
[-56.33736038 -255.24671936]
[-60.16704941 -269.83383179]
[-60.24792480 -284.91510010]
[-56.57490540 -299.54244995]
[-49.37887955 -312.79644775]
[-39.11219406 -323.84390259]
[-26.42022324 -331.99035645]
[-12.10079670 -336.72372437]
[2.94595742 -337.74645996]
[17.77418709 -334.99429321]
[31.45177460 -328.64019775]
[43.11893845 -319.08364868]
[52.04227066 -306.92529297]
[57.66084290 -292.92950439]
[59.62146378 -277.97601318]
[57.80089188 -263.00482178]
[52.31356812 -248.95704651]
[43.50442886 -236.71572876]
[31.92722321 -227.05036926]
[18.30970764 -220.56854248]
[21.19498062 -205.84866333]
[24.08025360 -191.12876892]
[26.96552467 -176.40887451]
[29.85079765 -161.68898010]
[32.73606873 -146.96908569]
[35.84017944 -132.29379272]
[39.16244125 -117.66632843]
[43.02674484 -103.17263794]
[56.26475906 -96.44280243]
[60.93227005 -81.96285248]
[53.78364563 -68.12323761]
[58.18464661 -53.78339386]
[63.15229797 -48.31126022]
[62.54270554 -39.19719315]
[66.72971344 -24.79341125]
[70.91672516 -10.38962936]
[75.10373688 4.01415253]
[79.29074860 18.41793442]
[83.47776031 32.82171631]
[87.66477203 47.22549820]
[91.85178375 61.62928009]
[97.09850311 75.68175507]
[103.37586212 89.30506897]
[108.48780060 75.20301056]
[121.40493011 67.57752991]
[136.22169495 69.91490173]
[146.16409302 81.14649963]
[146.68656921 96.13739777]
[137.55027771 108.03395844]
[122.93218994 111.39722443]
[109.51422882 104.68823242]
[114.34022522 118.89068604]
[119.16622162 133.09313965]
[123.99221802 147.29559326]
[127.91896057 150.73475647]
[129.93249512 154.91793823]
[130.06979370 158.99177551]
[128.70117188 162.24127197]
[132.88818359 176.64505005]
[137.07519531 191.04882812]
[141.26220703 205.45262146]
[144.28594971 190.76054382]
[151.64710999 177.69097900]
[162.64402771 167.48962402]
[176.22859192 161.12882996]
[191.10597229 159.21482849]
[205.85816956 161.93008423]
[219.07910156 169.01577759]
[229.50862122 179.79655457]
[236.15266418 193.24484253]
[238.37796021 208.07885742]
[235.97239685 222.88471985]
[229.16526794 236.25120544]
[218.60539246 246.90432739]
[205.29925537 253.82867432]
[190.51512146 256.36428833]
[175.66210938 254.26947021]
[162.15592957 247.74389648]
[151.28388977 237.40954590]
[144.08187866 224.25033569]
[144.30520630 239.24868774]
[144.52853394 254.24702454]
[144.75186157 269.24536133]
[144.97518921 284.24368286]
[152.91709900 297.92712402]
[145.37014771 310.76818848]
[153.31205750 324.45162964]
[145.76510620 337.29269409]
[145.98843384 352.29104614]
[146.21176147 367.28936768]
[161.16519165 368.63555908]
[175.89601135 371.53747559]
[190.24278259 375.96328735]
[204.04832458 381.86453247]
[217.16137695 389.17654419]
[229.43826294 397.81921387]
[240.74449158 407.69781494]
[250.95616150 418.70416260]
[259.96139526 430.71765137]
[267.66152954 443.60659790]
[273.97219849 457.22985840]
[278.82424927 471.43817139]
[282.16452026 486.07577515]
[283.95642090 500.98239136]
[284.18032837 515.99462891]
[282.83377075 530.94805908]
[279.93148804 545.67877197]
[275.50534058 560.02545166]
[269.60375977 573.83087158]
[262.29141235 586.94372559]
[253.64846802 599.22039795]
[243.76956177 610.52636719]
[232.76298523 620.73779297]
[220.74929810 629.74273682]
[207.86012268 637.44256592]
[194.23670959 643.75286865]
[180.02830505 648.60461426]
[165.39059448 651.94451904]
[150.48394775 653.73602295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 181]
[30 180]
[31 179]
[33 177]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 152]
[41 151]
[42 150]
[43 149]
[44 145]
[45 144]
[46 143]
[47 142]
[48 134]
[49 133]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[68 123]
[69 122]
[72 119]
[78 118]
[79 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
