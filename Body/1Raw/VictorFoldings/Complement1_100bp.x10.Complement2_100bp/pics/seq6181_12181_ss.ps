%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[69.64158630 807.92535400]
[54.63822556 808.07562256]
[39.65075302 807.36914062]
[24.72805786 805.80822754]
[9.91881180 803.39788818]
[-4.72867823 800.14605713]
[-19.16663551 796.06329346]
[-33.34796524 791.16296387]
[-47.22641373 785.46099854]
[-60.75671005 778.97607422]
[-73.89472198 771.72924805]
[-86.59758759 763.74426270]
[-98.82388306 755.04705811]
[-110.53372955 745.66607666]
[-121.68892670 735.63189697]
[-132.25308228 724.97723389]
[-142.19175720 713.73681641]
[-151.47250366 701.94738770]
[-160.06507874 689.64733887]
[-167.94145203 676.87683105]
[-175.07591248 663.67749023]
[-181.44519043 650.09234619]
[-187.02853394 636.16577148]
[-191.80772400 621.94311523]
[-195.76715088 607.47088623]
[-198.89392090 592.79620361]
[-201.17782593 577.96691895]
[-202.61141968 563.03143311]
[-203.19001770 548.03851318]
[-202.91174316 533.03692627]
[-201.77751160 518.07574463]
[-199.79100037 503.20373535]
[-196.95870972 488.46939087]
[-193.28985596 473.92074585]
[-188.79643250 459.60528564]
[-183.49307251 445.56967163]
[-177.39709473 431.85974121]
[-170.52836609 418.52017212]
[-162.90930176 405.59448242]
[-154.56474304 393.12484741]
[-145.52192688 381.15194702]
[-135.81031799 369.71478271]
[-125.46163177 358.85073853]
[-114.50959015 348.59518433]
[-102.98994446 338.98159790]
[-90.94024658 330.04132080]
[-78.39981842 321.80355835]
[-65.40955353 314.29513550]
[-52.01182175 307.54055786]
[-38.25033569 301.56185913]
[-24.16997147 296.37854004]
[-9.81666088 292.00750732]
[4.76277781 288.46301270]
[19.52079010 285.75662231]
[34.40923691 283.89718628]
[49.37955856 282.89071655]
[64.38291931 282.74053955]
[79.37038422 283.44714355]
[80.93090820 268.52853394]
[82.49143219 253.60993958]
[76.12020111 240.14678955]
[85.25121307 227.22644043]
[86.81173706 212.30784607]
[88.37226105 197.38923645]
[89.71049500 182.44905090]
[90.82614136 167.49060059]
[91.94178772 152.53215027]
[92.50000000 137.54254150]
[92.50000000 122.54253387]
[92.50000000 107.54253387]
[91.38435364 92.58408356]
[89.15923309 77.75003815]
[86.93412018 62.91599655]
[77.04459381 54.63588715]
[75.49668121 42.23476791]
[82.57897186 32.42825317]
[80.57495880 17.56272507]
[76.32708740 9.47610474]
[78.65347290 2.46114159]
[76.87100983 -12.43257618]
[75.08853912 -27.32629395]
[73.30607605 -42.22000885]
[71.52361298 -57.11372757]
[60.14765167 -71.59368134]
[67.67812347 -87.44483185]
[65.67411041 -102.31035614]
[63.67009735 -117.17588806]
[48.66067123 -118.41326904]
[34.26828766 -122.84873199]
[21.16610527 -130.27482605]
[9.96694279 -140.34423828]
[1.19460011 -152.58596802]
[-4.74062252 -166.42747498]
[-7.56112432 -181.22134399]
[-7.13498545 -196.27566528]
[-3.48213673 -210.88630676]
[3.22657108 -224.36990356]
[12.67735958 -236.09579468]
[24.42819786 -245.51554871]
[37.92948151 -252.18859863]
[52.54972458 -255.80281067]
[67.60511780 -256.18914795]
[82.39148712 -253.32955933]
[96.21725464 -247.35775757]
[108.43575287 -238.55308533]
[118.47551727 -227.32734680]
[125.86695099 -214.20558167]
[130.26435852 -199.80152893]
[131.46205139 -184.78887939]
[129.40403748 -169.86981201]
[124.18653870 -155.74211121]
[116.05361176 -143.06655884]
[105.38563538 -132.43601990]
[92.68157959 -124.34770203]
[78.53562927 -119.17990112]
[80.53964233 -104.31436920]
[82.54365540 -89.44884491]
[91.96994781 -81.86783600]
[93.76118469 -69.49952698]
[86.41732788 -58.89619446]
[88.19979095 -44.00247574]
[89.98226166 -29.10875893]
[91.76472473 -14.21504211]
[93.54718781 0.67867559]
[95.44048309 15.55871105]
[97.44449615 30.42423820]
[108.90363312 43.71540833]
[101.76815796 60.69087601]
[103.99327850 75.52491760]
[106.21839142 90.35896301]
[113.17320251 77.06871796]
[125.78816986 68.95313263]
[140.76576233 68.13360596]
[154.19088745 74.82435608]
[162.55422974 87.27643585]
[163.66966248 102.23490906]
[157.24557495 115.78965759]
[144.96124268 124.39750671]
[130.02774048 125.80838776]
[116.34866333 119.65349579]
[107.50000000 107.54253387]
[107.50000000 122.54253387]
[107.50000000 137.54254150]
[119.79066467 128.94372559]
[134.21910095 133.04498291]
[140.14920044 146.82301331]
[133.20950317 160.12115479]
[118.51571655 163.13652039]
[106.90024567 153.64779663]
[105.78459167 168.60624695]
[104.66894531 183.56469727]
[107.19093323 189.67625427]
[106.37097931 195.29983521]
[103.29086304 198.94975281]
[101.73033905 213.86836243]
[100.16981506 228.78697205]
[106.42943573 243.31719971]
[97.41003418 255.17047119]
[95.84951782 270.08908081]
[94.28899384 285.00769043]
[109.09825897 287.41787720]
[123.74577332 290.66961670]
[138.18376160 294.75225830]
[152.36512756 299.65246582]
[166.24362183 305.35430908]
[179.77397156 311.83914185]
[192.91203308 319.08584595]
[205.61495972 327.07077026]
[217.84133911 335.76785278]
[229.55125427 345.14874268]
[240.70652771 355.18286133]
[251.27076721 365.83743286]
[261.20953369 377.07775879]
[270.49035645 388.86712646]
[279.08303833 401.16711426]
[286.95950317 413.93756104]
[294.09405518 427.13687134]
[300.46347046 440.72192383]
[306.04690552 454.64846802]
[310.82620239 468.87106323]
[314.78573608 483.34329224]
[317.91262817 498.01797485]
[320.19665527 512.84722900]
[321.63037109 527.78265381]
[322.20907593 542.77563477]
[321.93093872 557.77716064]
[320.79681396 572.73834229]
[318.81042480 587.61041260]
[315.97824097 602.34478760]
[312.30950928 616.89343262]
[307.81619263 631.20892334]
[302.51293945 645.24456787]
[296.41708374 658.95458984]
[289.54846191 672.29418945]
[281.92947388 685.21990967]
[273.58502197 697.68963623]
[264.54229736 709.66259766]
[254.83078003 721.09985352]
[244.48217773 731.96398926]
[233.53022766 742.21960449]
[222.01065063 751.83331299]
[209.96102905 760.77368164]
[197.42065430 769.01153564]
[184.43045044 776.52008057]
[171.03277588 783.27471924]
[157.27133179 789.25354004]
[143.19100952 794.43695068]
[128.83773804 798.80810547]
[114.25832367 802.35272217]
[99.50033569 805.05920410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 160]
[59 159]
[60 158]
[62 156]
[63 155]
[64 154]
[65 151]
[66 150]
[67 149]
[68 143]
[69 142]
[70 141]
[71 130]
[72 129]
[73 128]
[76 126]
[77 125]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[85 117]
[86 116]
[87 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
