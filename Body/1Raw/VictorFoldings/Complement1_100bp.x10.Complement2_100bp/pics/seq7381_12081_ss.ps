%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[104.68390656 765.58471680]
[90.59160614 760.42761230]
[76.89818573 754.28930664]
[63.67187119 747.20031738]
[50.97855377 739.19604492]
[38.88146973 730.31628418]
[27.44089127 720.60534668]
[16.71381187 710.11163330]
[6.75367641 698.88732910]
[-2.38989568 686.98846436]
[-10.67135048 674.47418213]
[-18.04943085 661.40692139]
[-24.48737717 647.85180664]
[-29.95311737 633.87628174]
[-34.41942215 619.55004883]
[-37.86403656 604.94445801]
[-40.26980209 590.13226318]
[-41.62473297 575.18725586]
[-41.92207718 560.18389893]
[-41.16035843 545.19696045]
[-39.34336472 530.30108643]
[-36.48015594 515.57049561]
[-32.58498764 501.07852173]
[-27.67727470 486.89743042]
[-21.78145981 473.09783936]
[-14.92692089 459.74853516]
[-7.14780521 446.91598511]
[1.51713181 434.66415405]
[11.02472115 423.05401611]
[21.32759666 412.14349365]
[32.37442780 401.98690796]
[44.11017990 392.63485718]
[56.47638702 384.13391113]
[69.41143799 376.52645874]
[82.85089874 369.85037231]
[96.72779846 364.13894653]
[110.97301483 359.42062378]
[125.51557922 355.71887207]
[122.84977722 340.95764160]
[120.18398285 326.19644165]
[115.90179443 320.17276001]
[117.59010315 311.19570923]
[115.14437103 296.39645386]
[112.69864655 281.59716797]
[110.25291443 266.79791260]
[107.80718994 251.99862671]
[105.36146545 237.19935608]
[94.63729095 247.68707275]
[79.73323059 245.99324036]
[71.63600922 233.36648560]
[76.31459045 219.11477661]
[90.32009888 213.74395752]
[103.32725525 221.21183777]
[101.98902130 206.27165222]
[100.65078735 191.33146667]
[99.31255341 176.39128113]
[84.42414093 174.78965759]
[70.13417816 170.31452942]
[56.99168777 163.13783264]
[45.50163269 153.53529358]
[36.10546875 141.87586975]
[29.16421127 128.60752869]
[24.94454765 114.24005890]
[23.60860443 99.32546234]
[25.20771217 84.43677521]
[29.68042755 70.14605713]
[36.85490799 57.00235748]
[46.45549393 45.51067734]
[58.11332703 36.11254501]
[71.38050079 29.16904449]
[85.74726105 24.94695473]
[84.40902710 10.00676918]
[83.07079315 -4.93341541]
[81.73255920 -19.87360001]
[80.17203522 -34.79220581]
[78.38957214 -49.68592072]
[76.60710144 -64.57964325]
[74.82463837 -79.47335815]
[73.04217529 -94.36707306]
[60.90185165 -104.12670135]
[59.30634308 -119.25644684]
[68.68547821 -130.77023315]
[66.90300751 -145.66395569]
[65.12054443 -160.55767822]
[58.19464493 -147.25233459]
[45.93168640 -138.61405945]
[31.07124710 -136.57264709]
[16.93318748 -141.58416748]
[6.67598534 -152.52902222]
[2.59112620 -166.96209717]
[5.59117746 -181.65902710]
[15.00592041 -193.33647156]
[28.73207855 -199.38565063]
[43.70318985 -198.45516968]
[56.57467270 -190.75289917]
[64.47101593 -177.99952698]
[65.14080048 -192.98457336]
[65.81058502 -207.96960449]
[51.71512604 -213.50105286]
[40.18106842 -223.31146240]
[32.45954514 -236.33670044]
[29.38812065 -251.16387939]
[31.29996681 -266.18466187]
[37.98769760 -279.76968384]
[48.72587967 -290.44534302]
[62.34971237 -297.05368042]
[77.38138580 -298.87780762]
[92.19037628 -295.71987915]
[105.17031860 -287.92245483]
[114.91324615 -276.33132935]
[120.36231232 -262.20382690]
[120.92644501 -247.07238770]
[116.54445648 -232.57836914]
[107.69166565 -220.29394531]
[95.32836151 -211.55166626]
[80.79562378 -207.29981995]
[80.12583923 -192.31478882]
[79.45605469 -177.32974243]
[80.01425934 -162.34013367]
[81.79673004 -147.44642639]
[83.57919312 -132.55270386]
[95.41044617 -123.57734680]
[97.43029022 -108.49839020]
[87.93589020 -96.14954376]
[89.71835327 -81.25582123]
[91.50082397 -66.36210632]
[93.28328705 -51.46838760]
[95.06575012 -36.57467270]
[98.19986725 -32.97101212]
[99.10346222 -27.36026001]
[96.67274475 -21.21183395]
[98.01097870 -6.27164984]
[99.34921265 8.66853523]
[100.68744659 23.60872078]
[115.57585907 25.21034241]
[129.86582947 29.68547249]
[143.00831604 36.86217117]
[154.49836731 46.46470261]
[163.89453125 58.12412262]
[170.83578491 71.39246368]
[175.05545044 85.75994110]
[176.39138794 100.67453766]
[174.79228210 115.56322479]
[170.31956482 129.85394287]
[163.14509583 142.99765015]
[153.54450989 154.48931885]
[141.88667297 163.88745117]
[128.61950684 170.83094788]
[114.25273895 175.05303955]
[115.59097290 189.99322510]
[116.92920685 204.93341064]
[118.26744080 219.87359619]
[120.16073608 234.75363159]
[122.60646057 249.55290222]
[125.05218506 264.35217285]
[127.49791718 279.15145874]
[129.94364929 293.95071411]
[132.38937378 308.75000000]
[134.94520569 323.53063965]
[137.61099243 338.29187012]
[140.27679443 353.05307007]
[155.19552612 351.43426514]
[170.19126892 350.87185669]
[185.18934631 351.36862183]
[200.11500549 352.92211914]
[214.89392090 355.52456665]
[229.45243835 359.16305542]
[243.71803284 363.81939697]
[257.61962891 369.47042847]
[271.08798218 376.08801270]
[284.05599976 383.63916016]
[296.45904541 392.08624268]
[308.23535156 401.38717651]
[319.32623291 411.49566650]
[329.67645264 422.36129761]
[339.23443604 433.92996216]
[347.95257568 446.14401245]
[355.78741455 458.94259644]
[362.69992065 472.26199341]
[368.65567017 486.03579712]
[373.62500000 500.19543457]
[377.58312988 514.67028809]
[380.51037598 529.38830566]
[382.39212036 544.27618408]
[383.21899414 559.25964355]
[382.98687744 574.26416016]
[381.69692993 589.21490479]
[379.35559082 604.03741455]
[375.97451782 618.65789795]
[371.57055664 633.00341797]
[366.16561890 647.00250244]
[359.78668213 660.58551025]
[352.46548462 673.68475342]
[344.23852539 686.23486328]
[335.14675903 698.17340088]
[325.23553467 709.44091797]
[314.55416870 719.98120117]
[303.15594482 729.74176025]
[291.09756470 738.67401123]
[278.43917847 746.73339844]
[265.24380493 753.87982178]
[251.57720947 760.07763672]
[237.50746155 765.29595947]
[223.10466003 769.50885010]
[208.44056702 772.69525146]
[193.58824158 774.83935547]
[178.62165833 775.93041992]
[163.61540222 775.96307373]
[148.64421082 774.93707275]
[133.78269958 772.85760498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 161]
[39 160]
[40 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[53 152]
[54 151]
[55 150]
[56 149]
[71 134]
[72 133]
[73 132]
[74 131]
[75 128]
[76 127]
[77 126]
[78 125]
[79 124]
[82 121]
[83 120]
[84 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
