%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[157.24700928 529.38677979]
[169.17404175 519.46081543]
[168.05839539 504.50234985]
[166.94274902 489.54388428]
[165.82708740 474.58544922]
[164.71144104 459.62698364]
[156.04896545 447.51043701]
[162.73841858 433.17303467]
[161.28900146 418.24322510]
[152.09413147 406.52554321]
[158.13671875 391.90371704]
[156.35426331 377.01000977]
[154.57179260 362.11630249]
[152.78932190 347.22256470]
[151.00686646 332.32885742]
[149.22439575 317.43515015]
[147.44192505 302.54141235]
[144.88609314 287.76077271]
[141.56384277 273.13330078]
[138.24157715 258.50585938]
[134.48527527 243.98379517]
[130.29826355 229.58001709]
[126.11125183 215.17622375]
[121.92424011 200.77244568]
[117.73722839 186.36866760]
[113.55021667 171.96488953]
[109.36320496 157.56109619]
[105.17619324 143.15731812]
[91.87221527 131.71305847]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[77.80382538 79.61137390]
[81.46642303 65.17411041]
[77.06542206 50.83426285]
[72.66442871 36.49441910]
[70.25852203 51.30021286]
[64.96043396 65.33339691]
[56.98117447 78.03503418]
[46.63856888 88.89921570]
[34.34455109 97.49323273]
[20.58878708 103.47478485]
[5.91916561 106.60562897]
[-9.08002853 106.76107025]
[-23.81138420 103.93491364]
[-37.68815613 98.23972321]
[-50.15763855 89.90233612]
[-60.72317505 79.25482941]
[-68.96395111 66.72128296]
[-74.55172729 52.80091476]
[-77.26395416 38.04815674]
[-76.99259949 23.05061150]
[-73.74848175 8.40562439]
[-67.66079712 -5.30350208]
[-58.97203064 -17.53073692]
[-48.02824020 -27.78907585]
[-35.26532364 -35.66993332]
[-21.19161415 -40.85941315]
[-6.36766577 -43.15082550]
[8.61608887 -42.45290375]
[23.16285324 -38.79344177]
[36.69323349 -32.31819916]
[48.66832352 -23.28508186]
[58.61116028 -12.05387306]
[66.12571716 0.92809123]
[70.91177368 15.13967228]
[72.91578674 0.27414390]
[74.91979980 -14.59138393]
[76.92381287 -29.45691299]
[78.92782593 -44.32244110]
[71.54040527 -61.18979263]
[82.80038452 -74.65010071]
[84.58284760 -89.54381561]
[86.36531830 -104.43753052]
[88.14778137 -119.33125305]
[89.93024445 -134.22496033]
[73.85797882 -143.69889832]
[63.57791901 -159.20675659]
[61.12462616 -177.59861755]
[66.94829559 -195.16204834]
[79.83296204 -208.37156677]
[97.15003204 -214.59619141]
[98.04285431 -229.56959534]
[98.93566895 -244.54299927]
[99.82848358 -259.51638794]
[100.72129822 -274.48980713]
[101.61411285 -289.46322632]
[102.17232513 -304.45281982]
[102.39565277 -319.45117188]
[102.61898041 -334.44949341]
[99.61768341 -343.07678223]
[102.95894623 -349.66903687]
[103.40554810 -364.66238403]
[103.85215759 -379.65573120]
[104.29875946 -394.64907837]
[104.74536896 -409.64242554]
[104.96869659 -424.64077759]
[104.96869659 -439.64077759]
[90.91150665 -445.42556763]
[80.14163971 -456.15301514]
[74.30140686 -470.18728638]
[74.28141022 -485.38821411]
[80.08469391 -499.43777466]
[90.82630920 -510.19351196]
[104.86822510 -516.01525879]
[120.06916046 -516.01525879]
[134.11108398 -510.19351196]
[144.85269165 -499.43777466]
[150.65599060 -485.38821411]
[150.63598633 -470.18728638]
[144.79576111 -456.15301514]
[134.02587891 -445.42556763]
[119.96869659 -439.64077759]
[119.96869659 -424.64077759]
[122.65238190 -420.69021606]
[122.88284302 -415.01184082]
[119.73871613 -409.19583130]
[119.29211426 -394.20248413]
[118.84550476 -379.20913696]
[118.39890289 -364.21578979]
[117.95229340 -349.22244263]
[117.61731720 -334.22616577]
[117.39398956 -319.22784424]
[117.17066193 -304.22949219]
[119.35091400 -301.45843506]
[120.29729462 -297.49365234]
[119.46337128 -292.92660522]
[116.58751678 -288.57040405]
[115.69470215 -273.59698486]
[114.80188751 -258.62359619]
[113.90907288 -243.65017700]
[113.01625824 -228.67677307]
[112.12344360 -213.70336914]
[122.87733459 -209.41096497]
[132.01591492 -202.26928711]
[138.80256653 -192.84030151]
[142.68641663 -181.87089539]
[143.34709167 -170.23371887]
[140.72105408 -158.85769653]
[135.00755310 -148.65397644]
[126.65359497 -140.44287109]
[116.31892395 -134.88798523]
[104.82396698 -132.44250488]
[103.04149628 -117.54878235]
[101.25903320 -102.65506744]
[99.47657013 -87.76135254]
[97.69409943 -72.86763000]
[104.92160797 -63.16764832]
[103.55849457 -50.74485779]
[93.79335022 -42.31842804]
[91.78933716 -27.45289803]
[89.78532410 -12.58737087]
[87.78131104 2.27815747]
[85.77729797 17.14368629]
[87.00427246 32.09341812]
[91.40527344 46.43326569]
[95.80626678 60.77311325]
[106.93723297 70.67013550]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[121.75881195 116.18740082]
[125.12920380 128.22169495]
[119.57997894 138.97030640]
[123.76699066 153.37408447]
[127.95400238 167.77787781]
[132.14100647 182.18165588]
[136.32801819 196.58543396]
[140.51502991 210.98921204]
[144.70204163 225.39300537]
[148.88905334 239.79678345]
[152.12847900 242.68817139]
[154.08276367 246.11531067]
[154.74128723 249.60841370]
[154.24713135 252.74247742]
[152.86903381 255.18359375]
[156.19129944 269.81106567]
[159.51354980 284.43850708]
[167.43313599 271.69958496]
[181.64866638 266.91226196]
[195.66101074 272.26522827]
[203.06390381 285.31118774]
[200.47285461 300.08569336]
[189.07243347 309.83407593]
[174.07478333 310.09945679]
[162.33564758 300.75897217]
[164.11810303 315.65267944]
[165.90057373 330.54638672]
[167.68304443 345.44012451]
[169.46551514 360.33383179]
[171.24797058 375.22753906]
[173.03044128 390.12127686]
[182.35281372 402.90423584]
[176.18272400 416.46075439]
[179.31275940 420.63806152]
[180.41703796 425.14736938]
[179.70832825 429.16143799]
[177.69688416 432.05737305]
[186.43916321 445.24383545]
[179.66990662 458.51135254]
[180.78555298 473.46978760]
[181.90119934 488.42825317]
[183.01684570 503.38668823]
[184.13249207 518.34515381]
[197.40000916 526.39208984]
[203.37272644 540.71362305]
[199.75402832 555.80279541]
[187.93537903 565.85760498]
[172.46128845 567.01171875]
[159.28184509 558.82135010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[8 198]
[9 194]
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 178]
[19 177]
[20 176]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[30 161]
[32 159]
[34 157]
[35 156]
[36 155]
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[87 128]
[88 124]
[89 123]
[90 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
