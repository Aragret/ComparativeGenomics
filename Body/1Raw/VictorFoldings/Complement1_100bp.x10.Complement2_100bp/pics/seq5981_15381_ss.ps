%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[168.07064819 366.47174072]
[163.45663452 352.19900513]
[158.84262085 337.92626953]
[154.22862244 323.65353394]
[141.20765686 320.70452881]
[131.26441956 311.63388062]
[127.06821442 298.73190308]
[129.81677246 285.33547974]
[138.89695740 274.96527100]
[134.49595642 260.62542725]
[130.09497070 246.28558350]
[118.96400452 236.38856506]
[122.31181335 220.92561340]
[111.18085480 211.02859497]
[114.52866364 195.56565857]
[110.12767029 181.22579956]
[107.71719360 179.79479980]
[105.72832489 177.32275391]
[104.56040955 173.96546936]
[104.54909515 170.02029419]
[105.91904449 165.89994812]
[102.37937164 151.32357788]
[98.83969879 136.74720764]
[90.13096619 148.96023560]
[75.36045074 151.57403564]
[62.98938370 143.09130859]
[60.10446167 128.37135315]
[68.35830688 115.84641266]
[83.02274323 112.69135284]
[95.69675446 120.71276093]
[93.47164154 105.87871552]
[91.18298340 103.86586761]
[89.57613373 100.97578430]
[88.97742462 97.45939636]
[89.61589813 93.68466187]
[91.58303070 90.09811401]
[90.24479675 75.15792847]
[88.90656281 60.21774292]
[87.56832886 45.27755737]
[86.23009491 30.33737373]
[84.89186096 15.39718914]
[81.88758850 11.12853336]
[80.91806030 6.58834553]
[81.74597168 2.59715366]
[83.84275055 -0.23760454]
[83.17296600 -15.22264290]
[82.50318146 -30.20768166]
[81.83338928 -45.19272232]
[79.71876526 -60.04291916]
[76.17910004 -74.61929321]
[72.63942719 -89.19567108]
[69.09975433 -103.77204132]
[58.32442474 -115.35664368]
[62.83985519 -129.55030823]
[59.30018234 -144.12667847]
[55.76050949 -158.70306396]
[44.05639648 -159.76525879]
[33.13485718 -164.05270386]
[23.86435699 -171.21292114]
[16.97882652 -180.66540527]
[13.01956558 -191.64875793]
[12.29269886 -203.28199768]
[14.84553337 -214.63520813]
[20.46363831 -224.80383301]
[28.68881226 -232.98086548]
[38.85643768 -238.52075195]
[36.19064331 -253.28196716]
[33.52484512 -268.04318237]
[30.85905075 -282.80441284]
[27.48592567 -286.78799438]
[26.11520576 -291.22360229]
[26.58374023 -295.27273560]
[28.41925430 -298.28326416]
[26.41523933 -313.14877319]
[24.41122627 -328.01431274]
[22.40721321 -342.87982178]
[16.03523064 -329.30050659]
[4.45727301 -319.76370239]
[-10.09113789 -316.11077881]
[-24.80093193 -319.04711914]
[-36.83187866 -328.00570679]
[-43.86098862 -341.25680542]
[-44.53105545 -356.24182129]
[-38.71269226 -370.06741333]
[-27.52934265 -380.06402588]
[-13.14033031 -384.30151367]
[1.67605007 -381.96166992]
[14.05898762 -373.49630737]
[21.61791611 -360.53866577]
[22.28770256 -375.52371216]
[22.95748711 -390.50875854]
[23.62727165 -405.49377441]
[24.29705811 -420.47882080]
[24.96684265 -435.46386719]
[10.47106171 -439.58322144]
[-2.68369985 -446.93502808]
[-13.78802299 -457.12280273]
[-22.24306679 -469.59713745]
[-27.59285927 -483.68530273]
[-29.54889488 -498.62753296]
[-28.00568581 -513.61804199]
[-23.04645538 -527.84838867]
[-14.93865013 -540.55114746]
[-4.11951160 -551.04125977]
[8.82749653 -558.75305176]
[23.20415878 -563.27062988]
[38.23515701 -564.35034180]
[53.10989380 -561.93395996]
[67.02619171 -556.15179443]
[79.23355865 -547.31567383]
[89.07366943 -535.90209961]
[96.01586151 -522.52667236]
[99.68574524 -507.91061401]
[99.88541412 -492.84222412]
[96.60409546 -478.13406372]
[90.01875305 -464.57937622]
[80.48451996 -452.90908813]
[68.51557159 -443.75262451]
[54.75736618 -437.60375977]
[39.95188141 -434.79406738]
[39.28209686 -419.80905151]
[38.61231232 -404.82400513]
[37.94252396 -389.83895874]
[37.27273941 -374.85391235]
[36.60295486 -359.86889648]
[37.27273941 -344.88385010]
[39.27675247 -330.01831055]
[41.28076935 -315.15280151]
[43.28478241 -300.28726196]
[45.62026978 -285.47018433]
[48.28606415 -270.70898438]
[50.95185852 -255.94776917]
[53.61765671 -241.18653870]
[71.55171204 -237.06384277]
[85.91477966 -225.47901917]
[93.78427124 -208.73205566]
[93.53388214 -190.17898560]
[85.16947174 -173.55941772]
[70.33688354 -162.24273682]
[73.87655640 -147.66635132]
[77.41622925 -133.08998108]
[87.93837738 -122.54798126]
[83.67612457 -107.31171417]
[87.21579742 -92.73534393]
[90.75547028 -78.15896606]
[94.29514313 -63.58259201]
[98.90980530 -77.85511780]
[108.86988831 -89.07102966]
[122.49694824 -95.34024811]
[137.49459839 -95.60631561]
[151.33544922 -89.82437134]
[161.68708801 -78.96879578]
[166.80506897 -64.86892700]
[165.82693481 -49.90085602]
[158.91752625 -36.58695221]
[147.24118042 -27.17085075]
[132.76557922 -23.23932648]
[117.93010712 -25.45491219]
[105.23480988 -33.44424057]
[96.81842804 -45.86250687]
[97.48822021 -30.87746811]
[98.15800476 -15.89242840]
[98.82778931 -0.90738970]
[99.83204651 14.05895424]
[101.17028046 28.99913979]
[102.50851440 43.93932343]
[103.84674835 58.87950897]
[105.18498230 73.81969452]
[106.52321625 88.75988007]
[108.30568695 103.65359497]
[110.53079987 118.48764038]
[113.41607666 133.20753479]
[116.95574951 147.78390503]
[120.49542236 162.36029053]
[124.46751404 176.82481384]
[128.86851501 191.16465759]
[140.31425476 202.08735657]
[136.65165710 216.52462769]
[148.09741211 227.44732666]
[144.43481445 241.88458252]
[148.83581543 256.22442627]
[153.23680115 270.56427002]
[169.30877686 275.83569336]
[178.97586060 289.51226807]
[178.59001160 306.08975220]
[168.50134277 319.03952026]
[173.11535645 333.31225586]
[177.72937012 347.58499146]
[182.34338379 361.85772705]
[197.41180420 361.07980347]
[212.16790771 364.22937012]
[225.60560608 371.09161377]
[236.80870056 381.19869995]
[245.01333618 393.86151123]
[249.66011047 408.21664429]
[250.43218994 423.28536987]
[247.27694702 438.04025269]
[240.40950012 451.47531128]
[230.29808044 462.67449951]
[217.63212585 470.87423706]
[203.27519226 475.51547241]
[188.20617676 476.28173828]
[173.45249939 473.12078857]
[160.02011108 466.24813843]
[148.82482910 456.13241577]
[140.62997437 443.46328735]
[135.99429321 429.10458374]
[135.23384094 414.03524780]
[138.40048218 399.28280640]
[145.27830505 385.85305786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[9 182]
[10 181]
[11 180]
[13 178]
[15 176]
[16 175]
[21 174]
[22 173]
[23 172]
[30 171]
[31 170]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[41 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 146]
[50 145]
[51 144]
[52 143]
[54 141]
[55 140]
[56 139]
[66 133]
[67 132]
[68 131]
[69 130]
[73 129]
[74 128]
[75 127]
[76 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
