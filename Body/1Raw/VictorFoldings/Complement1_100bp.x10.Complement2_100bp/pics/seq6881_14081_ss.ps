%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[171.87797546 471.20791626]
[167.69096375 456.80413818]
[163.50395203 442.40036011]
[152.52157593 432.33871460]
[156.09922791 416.92733765]
[145.11685181 406.86569214]
[148.69451904 391.45428467]
[144.50750732 377.05050659]
[140.32049561 362.64672852]
[136.13348389 348.24295044]
[120.35089874 344.77560425]
[108.40168762 333.75869751]
[103.61141968 318.12954712]
[107.37807465 302.12619019]
[118.76577759 290.13818359]
[114.36477661 275.79833984]
[109.96378326 261.45849609]
[105.56278229 247.11865234]
[102.63585663 245.15257263]
[100.51579285 241.67114258]
[99.90446472 237.06901550]
[101.30090332 232.03939819]
[97.54460144 217.51733398]
[93.78829956 202.99528503]
[90.03199768 188.47322083]
[86.83076477 203.12763977]
[79.84336090 216.40078735]
[69.57422638 227.33444214]
[56.76470184 235.13931274]
[42.33950806 239.25195312]
[27.34001541 239.37545776]
[12.84905148 235.50093079]
[-0.08726773 227.90806580]
[-10.53505993 217.14498901]
[-17.74008942 203.98872375]
[-21.18221855 189.38899231]
[-20.61295700 174.39981079]
[-16.07340050 160.10321045]
[-7.89126444 147.53131104]
[3.34277678 137.59169006]
[16.81772804 131.00186157]
[31.56081963 128.23759460]
[46.50773621 129.49841309]
[60.57944870 134.69329834]
[72.76010132 143.44725037]
[82.17037201 155.12829590]
[88.13123322 168.89430237]
[89.02405548 153.92088318]
[89.91687012 138.94747925]
[90.80968475 123.97407532]
[91.70249939 109.00067139]
[83.92080688 121.82429504]
[72.59839630 131.66314697]
[58.81444550 137.57945251]
[43.88274765 139.00930786]
[29.22650528 135.81642151]
[16.24265289 128.30511475]
[6.16872978 117.19133759]
[-0.03508196 103.53437805]
[-1.77747440 88.63591766]
[1.10762632 73.91599274]
[8.34523010 60.77761078]
[19.24549675 50.47303772]
[32.76947784 43.98443985]
[47.62815857 41.93027115]
[62.40530396 44.50632095]
[75.69244385 51.46705627]
[86.22314453 62.14902496]
[92.99367523 75.53408813]
[95.35871887 90.34760284]
[100.18472290 76.14514160]
[105.01071930 61.94268799]
[109.83671570 47.74023438]
[114.66271210 33.53777695]
[119.38285065 19.29978752]
[123.78384399 4.95994091]
[127.97085571 -9.44384098]
[122.45413208 -21.10268211]
[126.23803711 -33.01342773]
[136.77426147 -38.95603943]
[141.17524719 -53.29588699]
[145.57624817 -67.63573456]
[142.22843933 -83.09867859]
[153.35940552 -92.99569702]
[157.76040649 -107.33554840]
[162.16139221 -121.67539215]
[158.81358337 -137.13833618]
[169.94454956 -147.03535461]
[156.17260742 -153.01982117]
[143.15733337 -160.50865173]
[131.06239319 -169.40765381]
[120.03989410 -179.60493469]
[110.22846222 -190.97225952]
[101.75148773 -203.36665344]
[94.71556854 -216.63223267]
[89.20919800 -230.60220337]
[85.30162811 -245.10084534]
[83.04198456 -259.94586182]
[82.45869446 -274.95050049]
[83.55909729 -289.92611694]
[86.32934570 -304.68435669]
[90.73460388 -319.03964233]
[96.71947479 -332.81140137]
[104.20869446 -345.82644653]
[113.10806274 -357.92114258]
[123.30567932 -368.94332886]
[134.67329407 -378.75439453]
[147.06793213 -387.23101807]
[160.33372498 -394.26654053]
[174.30386353 -399.77249146]
[188.80262756 -403.67962646]
[203.64768982 -405.93881226]
[218.65237427 -406.52166748]
[233.62796021 -405.42080688]
[248.38612366 -402.65011597]
[262.74124146 -398.24444580]
[276.51281738 -392.25915527]
[289.52764893 -384.76956177]
[301.62207031 -375.86981201]
[312.64395142 -365.67187500]
[322.45471191 -354.30395508]
[330.93093872 -341.90905762]
[337.96606445 -328.64306641]
[343.47158813 -314.67276001]
[347.37829590 -300.17388916]
[349.63705444 -285.32873535]
[350.21945190 -270.32406616]
[349.11816406 -255.34849548]
[346.34701538 -240.59042358]
[341.94091797 -226.23541260]
[335.95520020 -212.46401978]
[328.46520996 -199.44941711]
[319.56512451 -187.35527039]
[309.36685181 -176.33369446]
[297.99865723 -166.52328491]
[285.60351562 -158.04740906]
[272.33728027 -151.01269531]
[258.36682129 -145.50756836]
[243.86781311 -141.60130310]
[229.02261353 -139.34298706]
[214.01791382 -138.76104736]
[199.04238892 -139.86279297]
[184.28439331 -142.63436890]
[187.94699097 -128.19709778]
[176.50125122 -117.27439880]
[172.10025024 -102.93454742]
[167.69924927 -88.59470367]
[171.36184692 -74.15744019]
[159.91610718 -63.23473740]
[155.51510620 -48.89488983]
[151.11410522 -34.55504227]
[155.95930481 -17.68818092]
[142.37463379 -5.25682974]
[138.18762207 9.14695263]
[139.66191101 13.68958855]
[138.29817200 19.20658684]
[133.65557861 23.91379738]
[134.58918762 31.24524879]
[128.86517334 38.36377335]
[124.03916931 52.56623077]
[119.21317291 66.76868439]
[114.38717651 80.97113800]
[109.56118011 95.17359924]
[106.67590332 109.89348602]
[105.78308868 124.86689758]
[104.89027405 139.84030151]
[103.99745941 154.81370544]
[103.10464478 169.78710938]
[104.55406189 184.71691895]
[108.31036377 199.23898315]
[112.06666565 213.76103210]
[115.82295990 228.28309631]
[119.90262604 242.71765137]
[124.30362701 257.05749512]
[128.70462036 271.39733887]
[133.10562134 285.73718262]
[146.88259888 288.15747070]
[158.21864319 296.23895264]
[164.93457031 308.35812378]
[165.76965332 322.12225342]
[160.61779785 334.84182739]
[150.53726196 344.05593872]
[154.72427368 358.45971680]
[158.91128540 372.86349487]
[163.09829712 387.26727295]
[174.38015747 398.35919189]
[170.50302124 412.74032593]
[181.78486633 423.83221436]
[177.90773010 438.21334839]
[182.09474182 452.61712646]
[186.28175354 467.02090454]
[201.38723755 467.04800415]
[215.87283325 471.33105469]
[228.56423950 479.52279663]
[238.43261719 490.95922852]
[244.67799377 504.71319580]
[246.79408264 519.66979980]
[244.60934448 534.61645508]
[238.30085754 548.34161377]
[228.38006592 559.73260498]
[215.65118408 567.86596680]
[201.14607239 572.08245850]
[186.04061890 572.04016113]
[171.55932617 567.74261475]
[158.87615967 559.53808594]
[149.01927185 548.09179688]
[142.78771973 534.33154297]
[140.68666077 519.37286377]
[142.88641357 504.42834473]
[149.20867920 490.70953369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[5 187]
[7 185]
[8 184]
[9 183]
[10 182]
[15 176]
[16 175]
[17 174]
[18 173]
[22 172]
[23 171]
[24 170]
[25 169]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 157]
[76 154]
[77 153]
[80 151]
[81 150]
[82 149]
[84 147]
[85 146]
[86 145]
[88 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
