%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[71.44147491 828.30462646]
[56.44437408 827.84356689]
[41.49874115 826.51922607]
[26.65423012 824.33605957]
[11.96015358 821.30126953]
[-2.53467822 817.42498779]
[-16.78211403 812.72009277]
[-30.73482323 807.20214844]
[-44.34645844 800.88952637]
[-57.57180405 793.80322266]
[-70.36692047 785.96673584]
[-82.68931580 777.40606689]
[-94.49803925 768.14978027]
[-105.75387573 758.22845459]
[-116.41942596 747.67517090]
[-126.45926666 736.52496338]
[-135.84004211 724.81488037]
[-144.53060913 712.58374023]
[-152.50205994 699.87225342]
[-159.72793579 686.72265625]
[-166.18424988 673.17858887]
[-171.84951782 659.28503418]
[-176.70495605 645.08819580]
[-180.73440552 630.63519287]
[-183.92449951 615.97406006]
[-186.26464844 601.15350342]
[-187.74705505 586.22271729]
[-188.36679077 571.23132324]
[-188.12182617 556.22912598]
[-187.01296997 541.26599121]
[-185.04388428 526.39154053]
[-182.22111511 511.65530396]
[-178.55406189 497.10610962]
[-174.05487061 482.79238892]
[-168.73852539 468.76162720]
[-162.62266541 455.06045532]
[-155.72760010 441.73440552]
[-148.07624817 428.82769775]
[-139.69403076 416.38327026]
[-130.60877991 404.44241333]
[-120.85068512 393.04483032]
[-110.45215607 382.22833252]
[-99.44773865 372.02890015]
[-87.87398529 362.48040771]
[-75.76934814 353.61453247]
[-63.17403412 345.46078491]
[-50.12988663 338.04620361]
[-36.68023300 331.39544678]
[-22.86975479 325.53060913]
[-8.74432945 320.47116089]
[5.64911985 316.23388672]
[20.26277924 312.83291626]
[35.04810333 310.27951050]
[49.95597839 308.58215332]
[64.93688202 307.74649048]
[79.94104004 307.77529907]
[80.83385468 292.80191040]
[81.72667694 277.82849121]
[82.61949158 262.85510254]
[83.51230621 247.88168335]
[84.40512085 232.90827942]
[75.71655273 217.66113281]
[85.98403168 202.37518311]
[86.65381622 187.39013672]
[87.21202850 172.40052795]
[87.65863037 157.40718079]
[88.10523987 142.41383362]
[76.47330475 151.88473511]
[61.53792572 150.49391174]
[51.85476303 139.03807068]
[52.97076797 124.07964325]
[64.24665070 114.18749237]
[79.22306824 115.02830505]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[86.01376343 32.53723907]
[79.46295929 17.45803452]
[81.39936066 1.22636199]
[91.20043945 -11.73877239]
[106.11557007 -17.95579910]
[107.67609406 -32.87440491]
[109.23661041 -47.79300690]
[110.79713440 -62.71161270]
[111.91278839 -77.67006683]
[112.58257294 -92.65510559]
[113.25235748 -107.64014435]
[113.92214203 -122.62518311]
[114.48035431 -137.61479187]
[114.92695618 -152.60813904]
[115.37356567 -167.60148621]
[115.82016754 -182.59484863]
[101.45539093 -187.26708984]
[88.98959351 -195.79823303]
[79.43331146 -207.49670410]
[73.56124115 -221.41415405]
[71.84940338 -236.42236328]
[74.43656158 -251.30467224]
[81.11299133 -264.85464478]
[91.33747101 -275.97387695]
[104.28113556 -283.76092529]
[118.89470673 -287.58456421]
[133.99353027 -287.13479614]
[148.35360718 -282.44812012]
[160.81083679 -273.90444946]
[170.35534668 -262.19641113]
[176.21343994 -248.27305603]
[177.91020203 -233.26313782]
[175.30809021 -218.38342285]
[168.61805725 -204.84016418]
[158.38241577 -193.73123169]
[145.43092346 -185.95718384]
[130.81352234 -182.14823914]
[130.36691284 -167.15489197]
[129.92030334 -152.16152954]
[129.47370911 -137.16818237]
[132.41665649 -130.38874817]
[128.90718079 -121.95539856]
[128.23739624 -106.97035980]
[127.56761169 -91.98532104]
[126.89782715 -77.00028229]
[128.68780518 -74.84294891]
[129.73109436 -71.84658813]
[129.70384216 -68.29206085]
[128.38973999 -64.57215881]
[125.71574402 -61.15108871]
[124.15522003 -46.23248672]
[122.59469604 -31.31388092]
[121.03417206 -16.39527512]
[132.59176636 -9.11935234]
[139.92211914 2.48214078]
[141.54649353 16.17558861]
[137.09129333 29.29539490]
[127.37194824 39.26287079]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[103.09858704 142.86042786]
[102.65198517 157.85379028]
[102.20537567 172.84713745]
[105.07788849 181.51814270]
[101.63885498 188.05992126]
[100.96907043 203.04496765]
[109.08122253 213.07270813]
[108.21485901 225.53999329]
[99.37852478 233.80110168]
[98.48571014 248.77450562]
[97.59289551 263.74792480]
[96.70008087 278.72131348]
[95.80726624 293.69473267]
[94.91444397 308.66812134]
[109.81571960 310.42248535]
[124.59117126 313.03240967]
[139.19172668 316.48925781]
[153.56886292 320.78152466]
[167.67483521 325.89495850]
[181.46278381 331.81259155]
[194.88690186 338.51473999]
[207.90258789 345.97912598]
[220.46662903 354.18099976]
[232.53727722 363.09307861]
[244.07443237 372.68579102]
[255.03976440 382.92724609]
[265.39685059 393.78341675]
[275.11126709 405.21823120]
[284.15078735 417.19375610]
[292.48535156 429.67016602]
[300.08731079 442.60601807]
[306.93133545 455.95834351]
[312.99475098 469.68280029]
[318.25741577 483.73379517]
[322.70181274 498.06463623]
[326.31320190 512.62768555]
[329.07958984 527.37469482]
[330.99179077 542.25653076]
[332.04342651 557.22381592]
[332.23098755 572.22680664]
[331.55392456 587.21575928]
[330.01443481 602.14074707]
[327.61761475 616.95227051]
[324.37149048 631.60107422]
[320.28677368 646.03857422]
[315.37710571 660.21673584]
[309.65872192 674.08850098]
[303.15066528 687.60778809]
[295.87454224 700.72967529]
[287.85455322 713.41058350]
[279.11727905 725.60833740]
[269.69177246 737.28247070]
[259.60937500 748.39422607]
[248.90353394 758.90667725]
[237.60983276 768.78479004]
[225.76579285 777.99591064]
[213.41075134 786.50933838]
[200.58575439 794.29687500]
[187.33340454 801.33258057]
[173.69773865 807.59307861]
[159.72402954 813.05761719]
[145.45869446 817.70800781]
[130.94914246 821.52880859]
[116.24356842 824.50738525]
[101.39082336 826.63372803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 159]
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[63 151]
[64 150]
[65 148]
[66 147]
[67 146]
[74 145]
[75 144]
[77 142]
[78 141]
[79 140]
[80 139]
[85 133]
[86 132]
[87 131]
[88 130]
[89 125]
[90 124]
[91 123]
[92 122]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
