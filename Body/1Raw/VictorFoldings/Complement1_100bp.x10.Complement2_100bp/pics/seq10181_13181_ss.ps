%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[85.79515076 328.41036987]
[81.68457794 313.97790527]
[78.61407471 299.28894043]
[76.59930420 284.41836548]
[75.65052032 269.44195557]
[75.77256775 254.43600464]
[76.96482849 239.47700500]
[79.22120667 224.64117432]
[82.53022766 210.00410461]
[86.87501526 195.64039612]
[92.23343658 181.62324524]
[98.57817841 168.02407837]
[105.87690735 154.91218567]
[114.09244537 142.35438538]
[123.18291473 130.41467285]
[111.92681885 120.50002289]
[100.67072296 110.58537292]
[88.98313904 101.18321991]
[76.88739014 92.31232452]
[64.79164124 83.44142914]
[52.69588470 74.57053375]
[40.60013199 65.69963837]
[31.01895714 77.24678802]
[20.76436234 88.20027161]
[9.87305450 98.52087402]
[-1.61597562 108.17166901]
[-13.66160011 117.11808777]
[-26.22069931 125.32810974]
[-39.24831390 132.77235413]
[-52.69781113 139.42416382]
[-66.52104187 145.25973511]
[-80.66851807 150.25816345]
[-95.08960724 154.40158081]
[-109.73267365 157.67512512]
[-124.54530334 160.06709290]
[-139.47447205 161.56892395]
[-154.46673584 162.17523193]
[-169.46841431 161.88385010]
[-184.42582703 160.69583130]
[-199.28541565 158.61541748]
[-213.99398804 155.65007019]
[-228.49890137 151.81037903]
[-242.74821472 147.11012268]
[-256.69091797 141.56608582]
[-270.27713013 135.19815063]
[-283.45819092 128.02909851]
[-296.18692017 120.08459473]
[-308.41772461 111.39307404]
[-320.10687256 101.98565674]
[-331.21249390 91.89601898]
[-341.69482422 81.16027832]
[-351.51635742 69.81685638]
[-360.64190674 57.90637207]
[-369.03884888 45.47145844]
[-376.67706299 32.55662918]
[-383.52926636 19.20811272]
[-389.57092285 5.47370052]
[-394.78036499 -8.59744549]
[-399.13897705 -22.95495415]
[-402.63113403 -37.54742813]
[-405.24438477 -52.32262802]
[-406.96929932 -67.22766876]
[-407.79974365 -82.20918274]
[-407.73275757 -97.21355438]
[-406.76855469 -112.18705750]
[-404.91061401 -127.07609558]
[-402.16555786 -141.82737732]
[-398.54321289 -156.38807678]
[-394.05654907 -170.70610046]
[-388.72167969 -184.73016357]
[-382.55761719 -198.41007996]
[-375.58648682 -211.69686890]
[-367.83325195 -224.54298401]
[-359.32559204 -236.90242004]
[-350.09405518 -248.73094177]
[-340.17163086 -259.98620605]
[-329.59384155 -270.62789917]
[-318.39855957 -280.61798096]
[-306.62588501 -289.92065430]
[-294.31793213 -298.50259399]
[-281.51876831 -306.33312988]
[-268.27423096 -313.38418579]
[-254.63171387 -319.63055420]
[-240.64004517 -325.04983521]
[-226.34931946 -329.62268066]
[-211.81071472 -333.33270264]
[-197.07624817 -336.16659546]
[-182.19866943 -338.11422729]
[-167.23124695 -339.16864014]
[-152.22755432 -339.32601929]
[-137.24130249 -338.58587646]
[-122.32614136 -336.95077515]
[-107.53546143 -334.42663574]
[-92.92221069 -331.02246094]
[-78.53870392 -326.75045776]
[-64.43641663 -321.62588501]
[-50.66585159 -315.66711426]
[-37.27629089 -308.89544678]
[-24.31567001 -301.33517456]
[-11.83038521 -293.01333618]
[0.13487026 -283.95971680]
[11.53726387 -274.20669556]
[22.33597565 -263.78924561]
[32.49235153 -252.74464417]
[41.97003174 -241.11239624]
[50.73509216 -228.93417358]
[58.75615311 -216.25354004]
[66.00450134 -203.11593628]
[72.45418549 -189.56834412]
[78.08212280 -175.65928650]
[82.86817169 -161.43855286]
[86.79518127 -146.95704651]
[89.84911346 -132.26660156]
[92.01902771 -117.41982269]
[93.29714966 -102.46984100]
[93.67891693 -87.47018433]
[93.16295624 -72.47454071]
[91.75111389 -57.53659439]
[89.44844055 -42.70981979]
[86.26318359 -28.04729271]
[82.20674896 -13.60150337]
[77.29365540 0.57583821]
[71.54148865 14.43397999]
[64.97084045 27.92331123]
[57.60523224 40.99554825]
[49.47102737 53.60388947]
[61.56678009 62.47478485]
[73.66253662 71.34568024]
[85.75828552 80.21657562]
[97.85403442 89.08747101]
[96.65019226 74.13585663]
[106.26590729 62.62334061]
[121.19286346 61.14481354]
[132.88021851 70.54724884]
[134.63293457 85.44449615]
[125.44696045 97.30274200]
[110.58537292 99.32927704]
[121.84146881 109.24392700]
[133.09756470 119.15857697]
[143.79438782 108.63378906]
[155.21479797 98.89891815]
[167.30058289 90.00358582]
[179.99015808 81.99310303]
[193.21887207 74.90830231]
[206.91931152 68.78528595]
[221.02165222 63.65524673]
[235.45402527 59.54433823]
[250.14291382 56.47349930]
[265.01342773 54.45838547]
[279.98983765 53.50926208]
[294.99578857 53.63096619]
[309.95480347 54.82287598]
[324.79071045 57.07891846]
[339.42782593 60.38759995]
[353.79165649 64.73205566]
[367.80892944 70.09014893]
[381.40823364 76.43458557]
[394.52029419 83.73301697]
[407.07827759 91.94825745]
[419.01821899 101.03845978]
[430.27920532 110.95727539]
[440.80392456 121.65418243]
[450.53869629 133.07466125]
[459.43395996 145.16050720]
[467.44433594 157.85015869]
[474.52902222 171.07891846]
[480.65194702 184.77940369]
[485.78186035 198.88179016]
[489.89266968 213.31419373]
[492.96340942 228.00309753]
[494.97839355 242.87364197]
[495.92739868 257.85003662]
[495.80557251 272.85598755]
[494.61355591 287.81503296]
[492.35739136 302.65087891]
[489.04861450 317.28799438]
[484.70404053 331.65176392]
[479.34585571 345.66900635]
[473.00131226 359.26828003]
[465.70275879 372.38027954]
[457.48742676 384.93820190]
[448.39715576 396.87805176]
[438.47824097 408.13897705]
[427.78125000 418.66360474]
[416.36068726 428.39831543]
[404.27478027 437.29345703]
[391.58508301 445.30374146]
[378.35626221 452.38833618]
[364.65573120 458.51113892]
[350.55331421 463.64096069]
[336.12084961 467.75164795]
[321.43191528 470.82226562]
[306.56137085 472.83715820]
[291.58496094 473.78604126]
[276.57901001 473.66412354]
[261.61999512 472.47198486]
[246.78414917 470.21569824]
[232.14706421 466.90679932]
[217.78332520 462.56213379]
[203.76612854 457.20382690]
[190.16690063 450.85919189]
[177.05494690 443.56054688]
[164.49710083 435.34509277]
[152.55731201 426.25473022]
[141.29646301 416.33572388]
[130.77191162 405.63867188]
[121.03731537 394.21804810]
[112.14225006 382.13204956]
[104.13206482 369.44229126]
[97.04756927 356.21340942]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 139]
[16 138]
[17 137]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
