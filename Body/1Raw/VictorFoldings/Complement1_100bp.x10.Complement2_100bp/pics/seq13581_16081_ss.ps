%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[48.95777893 761.71862793]
[34.50958252 765.77416992]
[19.80641174 768.77661133]
[4.92491961 770.71020508]
[-10.05730724 771.56500244]
[-25.06215668 771.33642578]
[-40.01140213 770.02575684]
[-54.82709885 767.63983154]
[-69.43201447 764.19104004]
[-83.74999237 759.69732666]
[-97.70639038 754.18218994]
[-111.22844696 747.67437744]
[-124.24565887 740.20776367]
[-136.69017029 731.82135010]
[-148.49708557 722.55883789]
[-159.60485840 712.46850586]
[-169.95558167 701.60290527]
[-179.49526978 690.01879883]
[-188.17420959 677.77648926]
[-195.94715881 664.93988037]
[-202.77355957 651.57580566]
[-208.61784363 637.75402832]
[-213.44953918 623.54656982]
[-217.24345398 609.02746582]
[-219.97981262 594.27246094]
[-221.64433289 579.35845947]
[-222.22836304 564.36322021]
[-221.72883606 549.36499023]
[-220.14836121 534.44183350]
[-217.49519348 519.67163086]
[-213.78314209 505.13140869]
[-209.03157043 490.89694214]
[-203.26525879 477.04241943]
[-196.51425171 463.64013672]
[-188.81378174 450.75988770]
[-180.20394897 438.46890259]
[-170.72967529 426.83120728]
[-160.44033813 415.90750122]
[-149.38960266 405.75473022]
[-137.63505554 396.42581177]
[-125.23799896 387.96942139]
[-112.26306152 380.42959595]
[-98.77788544 373.84570312]
[-84.85278320 368.25201416]
[-70.56034851 363.67773438]
[-55.97510147 360.14666748]
[-41.17308044 357.67727661]
[-26.23146057 356.28240967]
[-11.22813606 355.96932983]
[3.75866890 356.73965454]
[18.65081978 358.58941650]
[33.37067413 361.50894165]
[37.34276962 347.04440308]
[41.31486893 332.57989502]
[45.28696442 318.11535645]
[49.25905991 303.65084839]
[53.23115540 289.18630981]
[56.66221619 274.58401489]
[51.51751328 260.60610962]
[61.76481247 248.55192566]
[56.62010574 234.57403564]
[66.86740112 222.51985168]
[69.75267792 207.79995728]
[63.26663971 197.58929443]
[65.54994202 185.30229187]
[75.91476440 177.62550354]
[79.01887512 162.95019531]
[74.08285522 148.89726257]
[84.50848389 136.99697876]
[87.61259460 122.32167053]
[90.71670532 107.64636993]
[93.60197449 92.92648315]
[88.44040680 77.97091675]
[98.31642914 66.82131958]
[100.98222351 52.06010437]
[102.87551117 37.18006897]
[103.99116516 22.22161674]
[105.10681152 7.26316309]
[106.22245789 -7.69529057]
[107.33811188 -22.65374374]
[108.45375824 -37.61219788]
[109.56940460 -52.57065201]
[102.87994385 -66.90807343]
[111.54242706 -79.02462006]
[112.65807343 -93.98307037]
[113.32785797 -108.96810913]
[113.55118561 -123.96644592]
[113.77451324 -138.96478271]
[113.99784088 -153.96311951]
[114.22116852 -168.96145630]
[114.44449615 -183.95979309]
[114.33283234 -198.95938110]
[113.88622284 -213.95272827]
[113.43962097 -228.94609070]
[112.99301147 -243.93943787]
[112.54640961 -258.93276978]
[98.14639282 -263.66726685]
[86.23600769 -273.04376221]
[78.25349426 -285.92999268]
[75.16278076 -300.76992798]
[77.33708191 -315.77151489]
[84.51384735 -329.12329102]
[95.82643890 -339.21295166]
[109.90881348 -344.82211304]
[125.06045532 -345.27343750]
[139.45172119 -340.51242065]
[151.34480286 -331.11398315]
[159.30355835 -318.21304321]
[162.36691284 -303.36746216]
[160.16496277 -288.36990356]
[152.96360779 -275.03137207]
[141.63244629 -264.96258545]
[127.53975677 -259.37939453]
[127.98636627 -244.38603210]
[128.43296814 -229.39268494]
[128.87957764 -214.39933777]
[129.32618713 -199.40599060]
[131.62799072 -196.73503113]
[132.75045776 -192.81646729]
[132.12130737 -188.21675110]
[129.44284058 -183.73646545]
[129.21951294 -168.73812866]
[128.99618530 -153.73979187]
[128.77285767 -138.74145508]
[128.54953003 -123.74311829]
[128.32620239 -108.74478149]
[130.17962646 -106.64170074]
[131.31166077 -103.67773438]
[131.39024353 -100.12397003]
[130.18746948 -96.36659241]
[127.61653137 -92.86742401]
[126.50087738 -77.90897369]
[133.27014160 -64.64147949]
[124.52786255 -51.45500183]
[123.41220856 -36.49654770]
[122.29656219 -21.53809547]
[121.18091583 -6.57964182]
[120.06526184 8.37881184]
[118.94961548 23.33726501]
[117.83396912 38.29571915]
[129.14259338 28.44103432]
[144.13711548 28.03522682]
[155.96220398 37.26382828]
[159.21162415 51.90764236]
[152.39974976 65.27172089]
[138.64091492 71.24617767]
[124.22544098 67.09957886]
[115.74343872 54.72589874]
[113.07764435 69.48711395]
[118.42988586 83.38685608]
[108.36319733 95.59227753]
[110.30081940 100.46665192]
[109.36949921 106.07967377]
[105.39200592 110.75048065]
[102.28789520 125.42578125]
[99.18378448 140.10108948]
[103.89778137 155.20368958]
[93.69417572 166.05430603]
[90.59006500 180.72959900]
[96.70249176 198.09968567]
[84.47257233 210.68524170]
[81.58729553 225.40512085]
[86.52562714 240.43588257]
[76.48470306 251.43719482]
[81.42303467 266.46795654]
[71.38211060 277.46926880]
[85.09725189 271.39517212]
[98.46736908 278.19515991]
[101.63650513 292.85656738]
[92.26848602 304.57153320]
[77.26907349 304.70422363]
[67.69567871 293.15841675]
[63.72358322 307.62295532]
[59.75148773 322.08746338]
[55.77939224 336.55200195]
[51.80729675 351.01651001]
[47.83519745 365.48104858]
[61.98168945 370.48849487]
[75.72997284 376.50366211]
[89.00837708 383.49520874]
[101.74767303 391.42669678]
[113.88143158 400.25671387]
[125.34640503 409.93930054]
[136.08282471 420.42391968]
[146.03468323 431.65591431]
[155.15014648 443.57675171]
[163.38163757 456.12426758]
[170.68627930 469.23303223]
[177.02597046 482.83474731]
[182.36767578 496.85842896]
[186.68351746 511.23101807]
[189.95101929 525.87756348]
[192.15312195 540.72167969]
[193.27838135 555.68603516]
[193.32089233 570.69256592]
[192.28045654 585.66302490]
[190.16249084 600.51940918]
[186.97802734 615.18426514]
[182.74368286 629.58105469]
[177.48153687 643.63482666]
[171.21900940 657.27221680]
[163.98876953 670.42211914]
[155.82849121 683.01611328]
[146.78073120 694.98840332]
[136.89266968 706.27661133]
[126.21583557 716.82189941]
[114.80590820 726.56927490]
[102.72237396 735.46789551]
[90.02822876 743.47143555]
[76.78964996 750.53814697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 177]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 166]
[60 164]
[62 162]
[63 161]
[66 159]
[67 158]
[69 156]
[70 155]
[71 154]
[72 151]
[74 149]
[75 148]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[84 132]
[85 131]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
