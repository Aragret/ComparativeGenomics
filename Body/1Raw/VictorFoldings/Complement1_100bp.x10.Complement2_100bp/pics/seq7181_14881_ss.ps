%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[201.34780884 630.35064697]
[199.56533813 615.45690918]
[197.78288269 600.56317139]
[196.00041199 585.66949463]
[194.21794128 570.77575684]
[192.43548584 555.88201904]
[190.43147278 541.01647949]
[188.20634460 526.18249512]
[185.98123169 511.34841919]
[176.44311523 503.90859985]
[174.46792603 491.56832886]
[181.65310669 480.85684204]
[179.64909363 465.99130249]
[177.64508057 451.12576294]
[175.64106750 436.26025391]
[173.63705444 421.39471436]
[171.52243042 406.54452515]
[169.29731750 391.71047974]
[159.75920105 384.27066040]
[157.78401184 371.93038940]
[164.96917725 361.21890259]
[162.96516418 346.35336304]
[153.59686279 334.77389526]
[159.42108154 320.06372070]
[157.41706848 305.19821167]
[155.41305542 290.33267212]
[152.09078979 275.70520020]
[147.47677612 261.43246460]
[136.19970703 251.70228577]
[139.31692505 236.19120789]
[134.70291138 221.91847229]
[121.06409454 210.87539673]
[125.06909943 192.90203857]
[120.24310303 178.69958496]
[115.41710663 164.49713135]
[110.59111023 150.29467773]
[105.55419159 136.16564941]
[100.30747223 122.11317444]
[95.06075287 108.06069946]
[90.90549469 104.85948944]
[88.83959961 99.55803680]
[89.87385559 93.51094818]
[85.04785919 79.30849457]
[73.28197479 68.73142242]
[76.51309967 54.19150543]
[71.58150482 40.02537155]
[66.54458618 25.89634132]
[54.62253189 15.49561405]
[57.63682175 0.90920466]
[52.59990311 -13.21982479]
[43.91032028 -0.99316782]
[28.94249153 -0.01129820]
[18.73014259 -10.99801350]
[20.80143738 -25.85431671]
[33.62949371 -33.62869263]
[47.75678253 -28.59133148]
[43.78468323 -43.05585480]
[39.81258774 -57.52037811]
[35.84049225 -71.98490143]
[31.86839676 -86.44942474]
[27.89629936 -100.91394806]
[23.92420387 -115.37847137]
[20.72819519 -118.31777954]
[18.82515144 -121.77363586]
[18.21869659 -125.27614594]
[18.75947189 -128.40251160]
[20.17375374 -130.82283020]
[17.06964302 -145.49813843]
[13.85636902 -160.14993286]
[3.25471520 -171.89367676]
[7.98096561 -186.01853943]
[4.65870571 -200.64599609]
[1.33644640 -215.27345276]
[-11.75333881 -223.71710205]
[-14.91420841 -238.59875488]
[-6.78380680 -251.02583313]
[-10.10606670 -265.65328979]
[-13.42832565 -280.28076172]
[-16.75058556 -294.90820312]
[-24.67016029 -282.16928101]
[-38.88569641 -277.38195801]
[-52.89804077 -282.73492432]
[-60.30093384 -295.78088379]
[-57.70988083 -310.55538940]
[-46.30947113 -320.30377197]
[-31.31181908 -320.56915283]
[-19.57267570 -311.22866821]
[-21.35514069 -326.12237549]
[-23.13760757 -341.01608276]
[-27.26460838 -349.16506958]
[-24.83403587 -356.14462280]
[-26.39455795 -371.06323242]
[-41.22713470 -373.97631836]
[-54.54130554 -381.13342285]
[-65.15318298 -391.89816284]
[-72.11917114 -405.31329346]
[-74.81984711 -420.18603516]
[-73.01508331 -435.19381714]
[-66.86534882 -449.00222778]
[-56.91747665 -460.38342285]
[-44.05602646 -468.32534790]
[-29.42462349 -472.12188721]
[-14.32428837 -471.43536377]
[-0.09773061 -466.32690430]
[11.99003410 -457.25070190]
[20.86417007 -445.01382446]
[25.73559380 -430.70437622]
[26.17114449 -415.59472656]
[22.13208961 -401.02841187]
[13.97758198 -388.30065918]
[2.43271375 -378.54324341]
[-11.47595310 -372.62374878]
[-9.91543007 -357.70513916]
[-8.24388981 -342.79855347]
[-6.46142340 -327.90484619]
[-4.67895746 -313.01113892]
[-2.12312531 -298.23046875]
[1.19913423 -283.60302734]
[4.52139378 -268.97555542]
[7.84365320 -254.34809875]
[20.54445648 -246.65229797]
[24.12207413 -231.86531067]
[15.96390629 -218.59571838]
[19.28616524 -203.96826172]
[22.60842514 -189.34078979]
[32.97245026 -178.64331055]
[28.48382950 -163.47218323]
[33.03072357 -157.64573669]
[31.74494553 -148.60224915]
[34.84905624 -133.92694092]
[38.38872910 -119.35057068]
[42.36082458 -104.88604736]
[46.33292007 -90.42152405]
[50.30501556 -75.95700073]
[54.27711105 -61.49247742]
[58.24921036 -47.02795029]
[62.22130585 -32.56342697]
[66.72893524 -18.25674057]
[71.76584625 -4.12771177]
[83.32763672 5.26241302]
[80.67361450 20.85942459]
[85.71053314 34.98845291]
[90.91757202 40.23331070]
[90.71555328 49.36550903]
[102.13625336 58.92673111]
[99.25031281 74.48249817]
[104.07630920 88.68495178]
[109.11322784 102.81398010]
[114.35994720 116.86645508]
[119.60665894 130.91893005]
[124.45481873 135.41413879]
[126.06352997 140.86474609]
[124.79356384 145.46867371]
[129.61956787 159.67112732]
[134.44555664 173.87358093]
[139.27156067 188.07604980]
[150.47518921 194.46678162]
[154.20237732 206.39538574]
[148.97564697 217.30445862]
[153.58966064 231.57719421]
[165.19676208 242.32827759]
[161.74951172 256.81848145]
[166.36352539 271.09121704]
[170.22076416 256.59561157]
[179.91952515 245.15298462]
[193.58715820 238.97268677]
[208.58462524 239.24804688]
[222.01617432 245.92588806]
[231.28836060 257.71682739]
[234.61090088 272.34423828]
[231.34223938 286.98376465]
[222.11351013 298.80877686]
[208.70663452 305.53601074]
[193.71028137 305.86657715]
[180.02000427 299.73663330]
[170.27857971 288.32864380]
[172.28259277 303.19418335]
[174.28660583 318.05972290]
[183.79826355 330.70245361]
[177.83070374 344.34933472]
[179.83471680 359.21487427]
[191.42498779 373.52386475]
[184.13134766 389.48535156]
[186.35647583 404.31939697]
[190.72427368 412.34188843]
[188.50257874 419.39071655]
[190.50659180 434.25622559]
[192.51060486 449.12176514]
[194.51461792 463.98730469]
[196.51863098 478.85281372]
[208.10891724 493.16180420]
[200.81527710 509.12329102]
[203.04039001 523.95733643]
[205.26551819 538.79138184]
[209.07847595 544.19256592]
[209.52441406 549.85809326]
[207.32919312 554.09954834]
[209.11166382 568.99328613]
[210.89413452 583.88702393]
[212.67658997 598.78070068]
[214.45906067 613.67443848]
[216.24153137 628.56817627]
[230.16363525 635.21484375]
[238.26274109 648.34527588]
[237.95446777 663.76953125]
[229.33715820 676.56585693]
[215.16058350 682.65093994]
[199.94842529 680.08306885]
[188.55484009 669.68164062]
[184.61547852 654.76574707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[7 194]
[8 193]
[9 192]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 184]
[18 183]
[21 181]
[22 180]
[24 178]
[25 177]
[26 176]
[27 163]
[28 162]
[30 160]
[31 159]
[33 156]
[34 155]
[35 154]
[36 153]
[37 150]
[38 149]
[39 148]
[42 147]
[43 146]
[45 144]
[46 142]
[47 141]
[49 139]
[50 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[67 130]
[68 129]
[69 127]
[71 125]
[72 124]
[73 123]
[76 120]
[77 119]
[78 118]
[79 117]
[87 116]
[88 115]
[89 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
