%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[48.55699921 872.95397949]
[33.55447006 873.02294922]
[18.56476593 872.39898682]
[3.61987019 871.08343506]
[-11.24832058 869.07904053]
[-26.00807762 866.39013672]
[-40.62790298 863.02246094]
[-55.07659912 858.98315430]
[-69.32332611 854.28088379]
[-83.33768463 848.92565918]
[-97.08976746 842.92895508]
[-110.55022430 836.30346680]
[-123.69033813 829.06341553]
[-136.48205566 821.22430420]
[-148.89808655 812.80267334]
[-160.91192627 803.81671143]
[-172.49794006 794.28546143]
[-183.63140869 784.22930908]
[-194.28857422 773.66967773]
[-204.44667053 762.62915039]
[-214.08404541 751.13122559]
[-223.18013000 739.20050049]
[-231.71549988 726.86242676]
[-239.67195129 714.14337158]
[-247.03250122 701.07037354]
[-253.78143311 687.67138672]
[-259.90435791 673.97503662]
[-265.38821411 660.01049805]
[-270.22128296 645.80761719]
[-274.39321899 631.39666748]
[-277.89520264 616.80841064]
[-280.71969604 602.07397461]
[-282.86068726 587.22485352]
[-284.31359863 572.29272461]
[-285.07534790 557.30938721]
[-285.14431763 542.30682373]
[-284.52032471 527.31713867]
[-283.20471191 512.37225342]
[-281.20031738 497.50405884]
[-278.51138306 482.74429321]
[-275.14367676 468.12448120]
[-271.10433960 453.67578125]
[-266.40203857 439.42907715]
[-261.04681396 425.41473389]
[-255.05004883 411.66265869]
[-248.42456055 398.20220947]
[-241.18449402 385.06210327]
[-233.34529114 372.27041626]
[-224.92370605 359.85440063]
[-215.93766785 347.84057617]
[-206.40638733 336.25457764]
[-196.35020447 325.12112427]
[-185.79055786 314.46398926]
[-174.75000000 304.30590820]
[-163.25209045 294.66854858]
[-151.32135010 285.57250977]
[-138.98326111 277.03717041]
[-126.26415253 269.08074951]
[-113.19114685 261.72021484]
[-99.79216003 254.97129822]
[-86.09578705 248.84840393]
[-72.13124084 243.36459351]
[-57.92834091 238.53157043]
[-43.51738739 234.35963440]
[-28.92913818 230.85769653]
[-14.19472122 228.03323364]
[0.65441716 225.89227295]
[15.58658791 224.43937683]
[30.56992531 223.67765808]
[45.57245255 223.60873413]
[60.56215668 224.23275757]
[75.50704956 225.54838562]
[77.51106262 210.68286133]
[79.51507568 195.81732178]
[81.51908875 180.95179749]
[83.52310181 166.08627319]
[85.52711487 151.22074890]
[87.53112793 136.35520935]
[89.53514099 121.48968506]
[91.53915405 106.62416077]
[90.86936951 91.63912201]
[87.54711151 77.01165771]
[84.22485352 62.38420105]
[80.90259552 47.75674057]
[77.58032990 33.12928009]
[62.51119995 32.99555588]
[47.87923813 29.38966942]
[34.47353363 22.50608063]
[23.01703644 12.71601105]
[14.12758636 0.54742932]
[8.28457642 -13.34342957]
[5.80311346 -28.20744896]
[6.81702042 -43.24303055]
[11.27161694 -57.63932419]
[18.92667389 -70.61995697]
[29.36936378 -81.48490143]
[42.03652191 -89.64821625]
[56.24502945 -94.66967773]
[71.22863770 -96.27847290]
[86.17929840 -94.38784790]
[100.29074097 -89.09975433]
[112.80195618 -80.69938660]
[123.03822327 -69.63975525]
[130.44752502 -56.51728821]
[134.63027954 -42.03967667]
[135.36091614 -26.98766899]
[132.60002136 -12.17300701]
[126.49650574 1.60537612]
[117.37952423 13.60442829]
[105.74073029 23.17705536]
[92.20779419 29.80702019]
[95.53005219 44.43447876]
[98.85231018 59.06193924]
[102.17457581 73.68939972]
[105.49683380 88.31686401]
[109.00985718 73.73403931]
[115.86692047 60.39310074]
[125.68022156 49.04853439]
[137.89476013 40.34193420]
[151.81976318 34.76569748]
[166.66769409 32.63519287]
[181.59883118 34.07090378]
[195.76873779 38.99163818]
[208.37605286 47.11910248]
[218.70774841 57.99365234]
[226.17955017 71.00027466]
[230.36886597 85.40338898]
[231.03877258 100.38842010]
[228.15139771 115.10790253]
[221.87002563 128.72937012]
[212.54989624 140.48245239]
[200.71810913 149.70248413]
[187.04382324 155.86801147]
[172.30035400 158.63034058]
[157.32154846 157.83325195]
[142.95452881 153.52182007]
[130.01179504 145.93988037]
[119.22533417 135.51623535]
[111.20517731 122.84039307]
[106.40468597 108.62817383]
[104.40067291 123.49369812]
[102.39665985 138.35922241]
[100.39264679 153.22476196]
[98.38863373 168.09028625]
[96.38461304 182.95581055]
[94.38059998 197.82133484]
[92.37658691 212.68687439]
[90.37257385 227.55239868]
[105.13234711 230.24124146]
[119.75218201 233.60887146]
[134.20089722 237.64808655]
[148.44764709 242.35031128]
[162.46202087 247.70545959]
[176.21412659 253.70214844]
[189.67462158 260.32754517]
[202.81475830 267.56753540]
[215.60650635 275.40664673]
[228.02256775 283.82815552]
[240.03645325 292.81411743]
[251.62249756 302.34533691]
[262.75601196 312.40145874]
[273.41320801 322.96102905]
[283.57138062 334.00152588]
[293.20880127 345.49935913]
[302.30493164 357.43005371]
[310.84036255 369.76809692]
[318.79684448 382.48715210]
[326.15744019 395.56011963]
[332.90643311 408.95904541]
[339.02941895 422.65539551]
[344.51333618 436.61990356]
[349.34643555 450.82275391]
[353.51846313 465.23370361]
[357.02050781 479.82192993]
[359.84506226 494.55633545]
[361.98611450 509.40545654]
[363.43908691 524.33758545]
[364.20089722 539.32092285]
[364.26992798 554.32348633]
[363.64599609 569.31317139]
[362.33044434 584.25805664]
[360.32611084 599.12628174]
[357.63723755 613.88604736]
[354.26959229 628.50585938]
[350.23031616 642.95458984]
[345.52807617 657.20129395]
[340.17288208 671.21569824]
[334.17617798 684.96777344]
[327.55075073 698.42822266]
[320.31076050 711.56835938]
[312.47161865 724.36010742]
[304.05004883 736.77612305]
[295.06408691 748.79003906]
[285.53286743 760.37603760]
[275.47671509 771.50952148]
[264.91711426 782.16668701]
[253.87660217 792.32482910]
[242.37872314 801.96221924]
[230.44802856 811.05834961]
[218.10997009 819.59375000]
[205.39088440 827.55023193]
[192.31791687 834.91082764]
[178.91896057 841.65979004]
[165.22261047 847.78271484]
[151.25808716 853.26660156]
[137.05520630 858.09967041]
[122.64427185 862.27166748]
[108.05603027 865.77368164]
[93.32162476 868.59820557]
[78.47249603 870.73919678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
