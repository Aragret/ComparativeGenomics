%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[156.13392639 537.15924072]
[153.17114258 522.43902588]
[151.84573364 507.48220825]
[152.17375183 492.47036743]
[154.15126038 477.58569336]
[157.75421143 463.00894165]
[162.93888855 448.91702271]
[169.64236450 435.48098755]
[177.78323364 422.86398315]
[187.26271057 411.21911621]
[197.96569824 400.68777466]
[209.76226807 391.39776611]
[222.50924683 383.46191406]
[216.02975464 369.93356323]
[203.55380249 361.79724121]
[204.57078552 346.00875854]
[198.09129333 332.48040771]
[191.61180115 318.95205688]
[179.13584900 310.81570435]
[180.15283203 295.02722168]
[173.67333984 281.49887085]
[167.19384766 267.97055054]
[154.71789551 259.83419800]
[155.73487854 244.04571533]
[149.25538635 230.51736450]
[136.77943420 222.38102722]
[137.79641724 206.59252930]
[131.31692505 193.06419373]
[124.83742523 179.53584290]
[122.24134827 178.47824097]
[119.90777588 176.32858276]
[118.25476074 173.18168640]
[117.65833282 169.28184509]
[118.40190887 165.00386047]
[112.73912048 151.11384583]
[107.07633972 137.22381592]
[95.10679626 128.35931396]
[97.06172180 112.65935516]
[90.98788452 98.94408417]
[84.50839233 85.41574097]
[78.02889252 71.88739014]
[77.86436462 86.88648987]
[74.52264404 101.50951385]
[68.15574646 115.09122467]
[59.05333710 127.01372528]
[47.62950897 136.73463440]
[34.40396881 143.81172180]
[19.97839165 147.92300415]
[5.00904465 148.88146973]
[-9.82306671 146.64350891]
[-23.84317970 141.31092834]
[-36.41347122 133.12632751]
[-46.96208191 122.46205139]
[-55.00911713 109.80324554]
[-60.18848801 95.72581482]
[-62.26457214 80.87017822]
[-61.14292145 65.91217804]
[-56.87456131 51.53229141]
[-49.65367126 38.38471603]
[-39.80875778 27.06757355]
[-27.78769875 18.09572220]
[-14.13737106 11.87731934]
[0.52122742 8.69526100]
[15.52122784 8.69431019]
[30.18022919 11.87451077]
[43.83134460 18.09118271]
[55.85354233 27.06151009]
[65.69989014 38.37740326]
[72.92411041 51.52806091]
[64.57832336 38.08714294]
[71.73960114 25.02707672]
[71.06981659 10.04203796]
[70.40003204 -4.94300032]
[69.61870575 -19.92263794]
[68.72589111 -34.89604187]
[60.18090820 -48.21121597]
[67.14694977 -61.37645721]
[66.25413513 -76.34986115]
[65.36132050 -91.32326508]
[64.46850586 -106.29667664]
[63.57568741 -121.27008057]
[62.68287277 -136.24348450]
[51.14497757 -146.70841980]
[50.45283890 -161.90629578]
[60.50065613 -172.84141541]
[59.60783768 -187.81483459]
[58.71502304 -202.78823853]
[57.82220840 -217.76164246]
[49.27722168 -231.07681274]
[56.24326706 -244.24205017]
[55.35044861 -259.21545410]
[40.52293777 -261.93728638]
[26.77795410 -268.12911987]
[14.91460991 -277.43096924]
[5.62262678 -289.30206299]
[-0.55777192 -303.05218506]
[-3.26726627 -317.88195801]
[-2.34832978 -332.92916870]
[2.14561200 -347.31903076]
[9.95328712 -360.21490479]
[20.62076759 -370.86706543]
[33.52785873 -378.65618896]
[47.92416382 -383.12942505]
[62.97269440 -384.02673340]
[77.79855347 -381.29589844]
[91.53977966 -375.09573364]
[103.39748383 -365.78668213]
[112.68226624 -353.90997314]
[118.85433197 -340.15609741]
[121.55483246 -325.32470703]
[120.62677002 -310.27804565]
[116.12410736 -295.89089966]
[108.30861664 -282.99975586]
[97.63468170 -272.35409546]
[84.72286987 -264.57278442]
[70.32385254 -260.10827637]
[71.21667480 -245.13487244]
[79.69779205 -232.89068604]
[72.79561615 -218.65444946]
[73.68843079 -203.68104553]
[74.58124542 -188.70764160]
[75.47406006 -173.73423767]
[86.75011444 -164.07058716]
[87.86885834 -148.89814758]
[77.65628052 -137.13630676]
[78.54909515 -122.16289520]
[79.44190979 -107.18949127]
[80.33472443 -92.21607971]
[81.22753906 -77.24267578]
[82.12035370 -62.26927185]
[90.60147858 -50.02509689]
[83.69929504 -35.78886032]
[84.59211731 -20.81545448]
[88.12816620 -14.32560539]
[85.38507080 -5.61278534]
[86.05485535 9.37225342]
[86.72463989 24.35729218]
[95.02252197 36.72637939]
[87.90914917 50.85827637]
[91.55724335 65.40789795]
[98.03673553 78.93624115]
[104.51622772 92.46459198]
[107.29473114 93.71736145]
[109.67881012 96.00879669]
[111.28288269 99.19477081]
[111.78001404 102.99069977]
[110.95174408 106.99656677]
[123.32633209 116.85456848]
[120.96636200 131.56101990]
[126.62915039 145.45104980]
[132.29193115 159.34107971]
[138.36576843 173.05635071]
[144.84526062 186.58468628]
[151.32476807 200.11303711]
[164.26416016 209.21701050]
[162.78372192 224.03787231]
[169.26322937 237.56620789]
[182.20262146 246.67019653]
[180.72218323 261.49102783]
[187.20167542 275.01937866]
[193.68118286 288.54772949]
[206.62057495 297.65170288]
[205.14013672 312.47256470]
[211.61964417 326.00091553]
[218.09913635 339.52926636]
[231.03854370 348.63323975]
[229.55810547 363.45407104]
[236.03759766 376.98242188]
[250.21092224 372.02462769]
[264.84362793 368.65609741]
[279.75811768 366.91778564]
[294.77328491 366.83078003]
[309.70690918 368.39611816]
[324.37768555 371.59478760]
[338.60751343 376.38800049]
[352.22369385 382.71752930]
[365.06091309 390.50656128]
[376.96334839 399.66055298]
[387.78649902 410.06835938]
[397.39898682 421.60366821]
[405.68414307 434.12640381]
[412.54138184 447.48461914]
[417.88745117 461.51611328]
[421.65747070 476.05053711]
[423.80566406 490.91152954]
[424.30596924 505.91860962]
[423.15228271 520.88964844]
[420.35867310 535.64294434]
[415.95898438 549.99932861]
[410.00665283 563.78454590]
[402.57391357 576.83129883]
[393.75103760 588.98120117]
[383.64508057 600.08673096]
[372.37875366 610.01312256]
[360.08880615 618.63983154]
[346.92443848 625.86218262]
[333.04541016 631.59246826]
[318.62023926 635.76116943]
[303.82403564 638.31762695]
[288.83639526 639.23083496]
[273.83926392 638.48968506]
[259.01470947 636.10321045]
[244.54264832 632.10034180]
[230.59878540 626.52972412]
[217.35237122 619.45898438]
[204.96421814 610.97387695]
[193.58470154 601.17749023]
[183.35195923 590.18865967]
[174.39021301 578.14080811]
[166.80824280 565.18023682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 168]
[14 167]
[16 165]
[17 164]
[18 163]
[20 161]
[21 160]
[22 159]
[24 157]
[25 156]
[27 154]
[28 153]
[29 152]
[34 151]
[35 150]
[36 149]
[38 147]
[39 142]
[40 141]
[41 140]
[69 139]
[71 137]
[72 136]
[73 135]
[74 133]
[75 132]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[85 122]
[86 121]
[87 120]
[88 119]
[90 117]
[91 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
