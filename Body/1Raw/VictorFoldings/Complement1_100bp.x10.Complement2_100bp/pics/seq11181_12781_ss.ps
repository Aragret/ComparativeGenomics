%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[138.61337280 518.77697754]
[151.38520813 510.41976929]
[149.38119507 495.55422974]
[147.37718201 480.68869019]
[145.37316895 465.82318115]
[141.36421204 459.61428833]
[143.45169067 450.72158813]
[141.66921997 435.82788086]
[139.77592468 420.94784546]
[137.77191162 406.08230591]
[135.76789856 391.21676636]
[133.10209656 376.45556641]
[129.77984619 361.82809448]
[126.45758057 347.20065308]
[123.13532257 332.57318115]
[112.39310455 328.72988892]
[104.76110840 320.08880615]
[102.22206879 308.72009277]
[105.51966858 297.42291260]
[113.94572449 289.03610229]
[111.06045532 274.31622314]
[108.17517853 259.59634399]
[105.28990936 244.87644958]
[102.40463257 230.15655518]
[90.81038666 224.53489685]
[84.47643280 213.09098816]
[85.91123962 199.89433289]
[94.81374359 189.78691101]
[92.14794159 175.02569580]
[86.94617462 189.09486389]
[76.81285095 200.15451050]
[63.25120163 206.56401062]
[48.27301025 207.37252808]
[34.10020065 202.46014404]
[22.83522606 192.55558777]
[16.14918137 179.12812805]
[15.03390026 164.16964722]
[19.65482712 149.89913940]
[29.32647514 138.43357849]
[42.61411285 131.47378540]
[57.54660034 130.05221558]
[71.90879059 134.37976074]
[83.57013702 143.81442261]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.42494202 57.58567429]
[93.20161438 42.58733749]
[92.75500488 27.59398651]
[84.40921783 14.15306664]
[91.57049561 1.09300077]
[90.90071106 -13.89203835]
[90.23092651 -28.87707710]
[89.56114197 -43.86211395]
[88.89135742 -58.84715271]
[88.22157288 -73.83219147]
[87.55178833 -88.81723022]
[86.88199615 -103.80226898]
[76.61451721 -119.08822632]
[85.30309296 -134.33537292]
[84.41027069 -149.30877686]
[83.51745605 -164.28218079]
[82.62464142 -179.25559998]
[74.91907501 -166.38609314]
[62.16369629 -158.49302673]
[47.20809937 -157.33973694]
[33.39339447 -163.18388367]
[23.80582809 -174.71984863]
[20.58728218 -189.37048340]
[24.45679283 -203.86279297]
[34.54989624 -214.95915222]
[48.61177063 -220.18061829]
[63.50095749 -218.36068726]
[75.89117432 -209.90594482]
[83.01441956 -196.70518494]
[84.57494354 -211.62379456]
[86.13546753 -226.54240417]
[87.58488464 -241.47221375]
[88.92311859 -256.41238403]
[90.26135254 -271.35256958]
[91.59958649 -286.29275513]
[76.94029999 -289.57305908]
[62.83461380 -294.73876953]
[49.52389145 -301.70150757]
[37.23589706 -310.34213257]
[26.18089294 -320.51275635]
[16.54804802 -332.03939819]
[8.50219250 -344.72479248]
[2.18100023 -358.35189819]
[-2.30736470 -372.68750000]
[-4.88610029 -387.48629761]
[-5.51108074 -402.49511719]
[-4.17161226 -417.45709229]
[-0.89061475 -432.11624146]
[4.27576971 -446.22167969]
[11.23913765 -459.53207397]
[19.88033676 -471.81964111]
[30.05150414 -482.87417603]
[41.57859802 -492.50646973]
[54.26437378 -500.55172729]
[67.89176178 -506.87225342]
[82.22758484 -511.35995483]
[97.02652740 -513.93798828]
[112.03536987 -514.56225586]
[126.99728394 -513.22204590]
[141.65626526 -509.94036865]
[155.76145935 -504.77331543]
[169.07151794 -497.80929565]
[181.35868835 -489.16751099]
[192.41271973 -478.99581909]
[202.04446411 -467.46826172]
[210.08911133 -454.78210449]
[216.40901184 -441.15441895]
[220.89601135 -426.81838989]
[223.47334290 -412.01931763]
[224.09689331 -397.01046753]
[222.75599670 -382.04861450]
[219.47360229 -367.38980103]
[214.30587769 -353.28485107]
[207.34124756 -339.97509766]
[198.69886780 -327.68835449]
[188.52665710 -316.63479614]
[176.99864197 -307.00360107]
[164.31210327 -298.95956421]
[150.68411255 -292.64031982]
[136.34785461 -288.15399170]
[121.54866791 -285.57736206]
[106.53977203 -284.95452881]
[105.20153809 -270.01434326]
[103.86330414 -255.07415771]
[102.52507019 -240.13397217]
[105.05928802 -233.19139099]
[101.05406952 -224.98187256]
[99.49354553 -210.06327820]
[97.93302155 -195.14466858]
[97.59804535 -180.14840698]
[98.49085999 -165.17500305]
[99.38368225 -150.20159912]
[100.27649689 -135.22819519]
[109.11283112 -126.96709442]
[109.97919464 -114.49980927]
[101.86703491 -104.47205353]
[102.53682709 -89.48701477]
[103.20661163 -74.50197601]
[103.87639618 -59.51694107]
[104.54618073 -44.53190231]
[105.21596527 -29.54686165]
[105.88574982 -14.56182289]
[106.55553436 0.42321569]
[114.85341644 12.79230499]
[107.74004364 26.92420197]
[110.59745789 30.75098419]
[111.08123779 36.41340256]
[108.19995117 42.36400986]
[108.42327881 57.36234665]
[110.68506622 60.06727600]
[111.74906921 64.00211334]
[111.05149841 68.59195709]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[106.90916443 172.35989380]
[109.57495880 187.12110901]
[124.12633514 196.83073425]
[127.09481049 213.72756958]
[117.12452698 227.27128601]
[120.00979614 241.99116516]
[122.89507294 256.71105957]
[125.78034210 271.43093872]
[128.66561890 286.15084839]
[144.78018188 296.11251831]
[148.43341064 314.37634277]
[137.76278687 329.25091553]
[141.08503723 343.87838745]
[144.40730286 358.50582886]
[147.72956848 373.13330078]
[156.61917114 361.05130005]
[171.42695618 358.65768433]
[183.67036438 367.32366943]
[186.33580017 382.08493042]
[177.89639282 394.48559570]
[163.18661499 397.42196655]
[150.63342285 389.21276855]
[152.63743591 404.07830811]
[154.64144897 418.94381714]
[158.88932800 427.03045654]
[156.56294250 434.04541016]
[158.34539795 448.93911743]
[160.23869324 463.81915283]
[162.24270630 478.68469238]
[164.24671936 493.55020142]
[166.25073242 508.41574097]
[180.77967834 513.09252930]
[191.83468628 523.61633301]
[197.22079468 537.89752197]
[195.86857605 553.10058594]
[188.04652405 566.20703125]
[175.30769348 574.61444092]
[160.18141174 576.65362549]
[145.67098999 571.91961670]
[134.65750122 561.35241699]
[129.32768250 547.05010986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[7 196]
[8 195]
[9 193]
[10 192]
[11 191]
[12 184]
[13 183]
[14 182]
[15 181]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[28 171]
[29 170]
[44 169]
[45 168]
[46 167]
[47 166]
[49 164]
[50 163]
[51 159]
[52 158]
[53 155]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[64 143]
[65 142]
[66 141]
[67 140]
[79 139]
[80 138]
[81 137]
[82 135]
[83 134]
[84 133]
[85 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
