%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[142.81329346 363.37530518]
[152.40859985 351.61541748]
[165.60603333 344.11929321]
[163.38092041 329.28524780]
[161.15579224 314.45120239]
[157.94252014 299.79940796]
[153.75550842 285.39562988]
[149.56849670 270.99185181]
[145.38148499 256.58807373]
[141.19447327 242.18428040]
[136.68684387 227.87759399]
[131.86085510 213.67514038]
[127.03485870 199.47268677]
[122.20885468 185.27023315]
[108.40713501 174.43144226]
[112.14410400 156.40045166]
[107.10718536 142.27142334]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[72.58802032 49.09582138]
[59.12967682 40.77814865]
[59.72533798 25.89546013]
[52.45211029 12.77676678]
[45.08142090 -0.28741890]
[37.61367798 -13.29637146]
[29.76192284 -26.07721329]
[21.53311539 -38.61861420]
[13.30430698 -51.16001511]
[5.07549906 -63.70141602]
[-3.15330887 -76.24281311]
[-11.38211632 -88.78421783]
[-24.40585518 -81.33283234]
[-37.85963821 -74.68929291]
[-51.69341278 -68.87831116]
[-65.85571289 -63.92149734]
[-80.29386902 -59.83729935]
[-94.95414734 -56.64090729]
[-109.78202820 -54.34421158]
[-124.72234344 -52.95575714]
[-139.71951294 -52.48070908]
[-154.71775818 -52.92083740]
[-169.66127014 -54.27449799]
[-184.49446106 -56.53666306]
[-199.16213989 -59.69890976]
[-213.60975647 -63.74947739]
[-227.78356934 -68.67330170]
[-241.63084412 -74.45205688]
[-255.10005188 -81.06425476]
[-268.14111328 -88.48529053]
[-280.70547485 -96.68756104]
[-292.74645996 -105.64054871]
[-304.21920776 -115.31095886]
[-315.08108521 -125.66280365]
[-325.29165649 -136.65757751]
[-334.81292725 -148.25437927]
[-343.60952759 -160.41006470]
[-351.64871216 -173.07942200]
[-358.90054321 -186.21531677]
[-365.33807373 -199.76887512]
[-370.93734741 -213.68968201]
[-375.67755127 -227.92594910]
[-379.54101562 -242.42472839]
[-382.51339722 -257.13208008]
[-384.58364868 -271.99325562]
[-385.74401855 -286.95300293]
[-385.99023438 -301.95568848]
[-385.32138062 -316.94546509]
[-383.73989868 -331.86657715]
[-381.25173950 -346.66354370]
[-377.86611938 -361.28128052]
[-373.59561157 -375.66543579]
[-368.45614624 -389.76248169]
[-362.46682739 -403.51998901]
[-355.64993286 -416.88674927]
[-348.03082275 -429.81307983]
[-339.63784790 -442.25088501]
[-330.50219727 -454.15386963]
[-320.65792847 -465.47778320]
[-310.14157104 -476.18048096]
[-298.99234009 -486.22213745]
[-287.25164795 -495.56539917]
[-274.96316528 -504.17556763]
[-262.17266846 -512.02050781]
[-248.92767334 -519.07110596]
[-235.27748108 -525.30114746]
[-221.27287292 -530.68743896]
[-206.96594238 -535.20989990]
[-192.40992737 -538.85174561]
[-177.65895081 -541.59942627]
[-162.76791382 -543.44274902]
[-147.79219055 -544.37475586]
[-132.78750610 -544.39208984]
[-117.80967712 -543.49462891]
[-102.91442108 -541.68572998]
[-88.15714264 -538.97210693]
[-73.59275055 -535.36389160]
[-59.27542114 -530.87451172]
[-45.25841522 -525.52056885]
[-31.59387779 -519.32208252]
[-18.33264351 -512.30206299]
[-5.52404404 -504.48666382]
[6.78427076 -495.90493774]
[18.54651260 -486.58877563]
[29.71892548 -476.57290649]
[40.25994873 -465.89453125]
[50.13036346 -454.59338379]
[59.29345703 -442.71151733]
[67.71514130 -430.29315186]
[75.36408234 -417.38442993]
[82.21182251 -404.03344727]
[88.23290253 -390.28979492]
[93.40490723 -376.20465088]
[97.70861053 -361.83041382]
[101.12799072 -347.22052002]
[103.65032959 -332.42935181]
[105.26624298 -317.51193237]
[105.96972656 -302.52374268]
[105.75815582 -287.52053833]
[104.63232422 -272.55813599]
[102.59642029 -257.69219971]
[99.65800476 -242.97804260]
[95.82802582 -228.47038269]
[91.12071991 -214.22320557]
[85.55360413 -200.28950500]
[79.14739227 -186.72111511]
[71.92590332 -173.56851196]
[63.91601181 -160.88063049]
[55.14751053 -148.70465088]
[45.65302277 -137.08589172]
[35.46786880 -126.06756592]
[24.62993431 -115.69066620]
[13.17954063 -105.99379730]
[1.15928352 -97.01302338]
[9.38809109 -84.47162628]
[17.61689949 -71.93022156]
[25.84570694 -59.38882065]
[34.07451630 -46.84742355]
[42.30332184 -34.30602264]
[45.01742554 -33.60474396]
[47.61727524 -31.78611755]
[49.67589951 -28.88827896]
[50.78800201 -25.10307693]
[50.62263107 -20.76411247]
[58.09037018 -7.75515985]
[64.14663696 -3.51918793]
[65.57080078 5.50353670]
[72.84403229 18.62223053]
[85.78214264 26.00156593]
[85.70671082 41.82259369]
[87.09709167 26.88717079]
[95.19149780 14.25860691]
[108.18161774 6.75815725]
[123.16542816 6.06143951]
[136.79550171 12.32410336]
[146.02685547 24.14705276]
[148.79718018 38.88901138]
[144.48756409 53.25658798]
[134.06080627 64.04003143]
[119.84625244 68.83028412]
[105.01947784 66.55720520]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[121.23621368 137.23451233]
[126.27313232 151.36354065]
[137.57066345 157.58676147]
[141.47505188 169.45855713]
[136.41131592 180.44422913]
[141.23730469 194.64669800]
[146.06330872 208.84915161]
[150.88931274 223.05160522]
[154.81604004 226.49075317]
[156.82957458 230.67393494]
[156.96688843 234.74778748]
[155.59826660 237.99726868]
[159.78527832 252.40106201]
[163.97229004 266.80484009]
[168.15930176 281.20861816]
[172.34631348 295.61239624]
[178.01084900 281.72308350]
[190.22378540 273.01422119]
[205.20080566 272.18435669]
[218.30113220 279.49063110]
[225.46546936 292.66912842]
[224.47387695 307.63629150]
[215.63360596 319.75445557]
[201.68391418 325.26864624]
[186.94726562 322.47021484]
[175.98983765 312.22607422]
[178.21496582 327.06011963]
[180.44007874 341.89416504]
[195.25605774 345.18826294]
[207.87940979 353.61532593]
[216.60293579 366.03567505]
[220.24684143 380.76953125]
[218.31831360 395.82424927]
[211.07818604 409.16384888]
[199.50561523 418.98425293]
[185.16569519 423.95730591]
[169.99778748 423.41043091]
[156.05322266 417.41763306]
[145.21789551 406.78936768]
[138.95719910 392.96301270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[11 178]
[12 177]
[13 176]
[14 175]
[16 172]
[17 171]
[18 170]
[19 169]
[21 167]
[22 166]
[23 165]
[24 153]
[26 151]
[27 150]
[28 148]
[29 147]
[30 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
