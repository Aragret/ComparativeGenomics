%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[33.68918610 541.96972656]
[31.94528580 556.91778564]
[27.31838036 571.23834229]
[19.98631477 584.38092041]
[10.23091316 595.84033203]
[-1.57285249 605.17614746]
[-14.97127724 612.02947998]
[-29.44935989 616.13696289]
[-44.45060349 617.34069824]
[-59.39839935 615.59436035]
[-73.71819305 610.96514893]
[-86.85957336 603.63092041]
[-98.31742096 593.87371826]
[-107.65131378 582.06842041]
[-114.50250244 568.66888428]
[-118.60762787 554.19012451]
[-119.80891418 539.18872070]
[-118.06017303 524.24114990]
[-113.42863464 509.92211914]
[-106.09231567 496.78195190]
[-96.33320618 485.32568359]
[-84.52642059 475.99368286]
[-71.12577820 469.14468384]
[-56.64636230 465.04190063]
[-41.64472961 463.84304810]
[-26.69750023 465.59417725]
[-22.08349037 451.32147217]
[-17.46948051 437.04873657]
[-12.85547161 422.77600098]
[-20.26972771 412.23757935]
[-20.26033020 399.15774536]
[-12.60665607 388.31192017]
[0.08019847 383.78884888]
[4.90619612 369.58636475]
[9.73219395 355.38391113]
[14.55819130 341.18145752]
[11.32706642 326.64154053]
[23.09295082 316.06448364]
[27.70695877 301.79174805]
[32.10795593 287.45190430]
[36.50895691 273.11206055]
[40.90995407 258.77221680]
[39.86729431 251.45545959]
[45.48469543 244.25250244]
[50.09870529 229.97976685]
[54.71271515 215.70703125]
[59.32672501 201.43431091]
[63.94073486 187.16157532]
[68.55474091 172.88883972]
[65.10749817 158.39863586]
[76.71459961 147.64756775]
[81.32861328 133.37483215]
[85.94261932 119.10209656]
[90.55662537 104.82936096]
[94.63629150 90.39480591]
[98.17596436 75.81843567]
[101.71563721 61.24205780]
[105.25531006 46.66568375]
[108.79498291 32.08930969]
[112.33465576 17.51293182]
[108.07241058 2.27666593]
[118.59455872 -8.26533318]
[122.13422394 -22.84170914]
[121.11827850 -31.91946411]
[125.83663177 -37.60795593]
[129.59292603 -52.13001633]
[123.73152924 -63.61943436]
[127.15912628 -75.63755798]
[137.51374817 -81.89124298]
[141.48583984 -96.35576630]
[145.45793152 -110.82028961]
[149.43002319 -125.28481293]
[144.36233521 -142.98791504]
[157.31967163 -154.82321167]
[161.07597351 -169.34527588]
[164.83227539 -183.86732483]
[166.05924988 -198.81706238]
[164.72102356 -213.75724792]
[163.38278198 -228.69743347]
[162.04455566 -243.63761902]
[160.70631409 -258.57778931]
[150.27413940 -264.27923584]
[143.95417786 -274.20690918]
[143.21890259 -285.83245850]
[148.13552856 -296.26043701]
[157.37796021 -302.94949341]
[156.48515320 -317.92291260]
[155.59233093 -332.89630127]
[154.69952393 -347.86972046]
[153.80670166 -362.84310913]
[138.94502258 -365.30853271]
[125.00476074 -371.01965332]
[112.68515015 -379.69000244]
[102.60414124 -390.88467407]
[95.26739502 -404.04217529]
[91.04291534 -418.50253296]
[90.14260101 -433.54037476]
[92.61161041 -448.40145874]
[98.32609558 -462.34033203]
[106.99943542 -474.65783691]
[118.19656372 -484.73614502]
[131.35583496 -492.06970215]
[145.81719971 -496.29067993]
[160.85528564 -497.18734741]
[175.71575928 -494.71475220]
[189.65325928 -488.99688721]
[201.96865845 -480.32055664]
[212.04425049 -469.12097168]
[219.37461853 -455.95993042]
[223.59208679 -441.49752808]
[224.48512268 -426.45925903]
[222.00891113 -411.59936523]
[216.28765869 -397.66326904]
[207.60836792 -385.34994507]
[196.40635681 -375.27709961]
[183.24351501 -367.94989014]
[168.78010559 -363.73593140]
[169.67292786 -348.76251221]
[170.56573486 -333.78912354]
[171.45855713 -318.81570435]
[172.35137939 -303.84231567]
[186.74986267 -292.53747559]
[188.33990479 -273.97988892]
[175.64649963 -259.91604614]
[176.98472595 -244.97586060]
[178.32296753 -230.03567505]
[179.66120911 -215.09548950]
[180.99943542 -200.15530396]
[186.45716858 -214.12716675]
[195.17657471 -226.33258057]
[206.62443542 -236.02516174]
[220.10073853 -242.61222839]
[234.78138733 -245.69094849]
[249.76866150 -245.07308960]
[264.14605713 -240.79640198]
[277.03445435 -233.12243652]
[287.64566040 -222.52043152]
[295.33081055 -209.63871765]
[299.61996460 -195.26502991]
[300.25082397 -180.27830505]
[297.18484497 -165.59498596]
[290.60946655 -152.11297607]
[280.92681885 -140.65669250]
[268.72900391 -131.92671204]
[254.76185608 -126.45685577]
[239.87954712 -124.58161163]
[224.99209595 -126.41565704]
[211.00987244 -131.84683228]
[198.78791809 -140.54302979]
[189.07360840 -151.97247314]
[182.46095276 -165.43623352]
[179.35433960 -180.11102295]
[175.59803772 -165.58897400]
[171.84173584 -151.06690979]
[177.70852661 -140.48828125]
[174.69793701 -128.35897827]
[163.89454651 -121.31271362]
[159.92245483 -106.84819031]
[155.95036316 -92.38366699]
[151.97827148 -77.91914368]
[157.32350159 -61.20402145]
[144.11499023 -48.37371445]
[140.35868835 -33.85165787]
[136.71060181 -19.30203629]
[133.17092896 -4.72566080]
[137.68635559 9.46800613]
[126.91103363 21.05260468]
[123.37136078 35.62897873]
[119.83168793 50.20535660]
[116.29201508 64.78173065]
[112.75234222 79.35810852]
[109.21266937 93.93447876]
[123.18536377 88.47885132]
[136.23851013 95.86907196]
[138.74981689 110.65735626]
[128.86804199 121.94232941]
[113.87766266 121.40512848]
[104.82936096 109.44337463]
[100.21535492 123.71610260]
[95.60134125 137.98884583]
[90.98733521 152.26156616]
[94.10455322 167.77264404]
[82.82747650 177.50285339]
[78.21346283 191.77557373]
[73.59945679 206.04830933]
[68.98545074 220.32104492]
[64.37143707 234.59378052]
[59.75743103 248.86651611]
[55.24980164 263.17318726]
[50.84880447 277.51306152]
[46.44780350 291.85290527]
[42.04680634 306.19274902]
[43.15254974 312.71109009]
[41.10742188 318.01339722]
[37.29540634 320.89047241]
[40.18134308 336.44625854]
[28.76064682 346.00747681]
[23.93464851 360.20993042]
[19.10865211 374.41238403]
[14.28265381 388.61483765]
[22.30097198 404.16238403]
[16.70417404 420.37936401]
[1.41726148 427.39001465]
[-3.19674778 441.66271973]
[-7.81075716 455.93545532]
[-12.42476654 470.20819092]
[0.71898621 477.53814697]
[12.17998791 487.29168701]
[21.51770782 499.09393311]
[28.37322998 512.49127197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 206]
[27 205]
[28 204]
[29 203]
[33 200]
[34 199]
[35 198]
[36 197]
[38 195]
[39 192]
[40 191]
[41 190]
[42 189]
[44 188]
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[51 181]
[52 180]
[53 179]
[54 178]
[55 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[62 165]
[63 164]
[65 163]
[66 162]
[69 160]
[70 159]
[71 158]
[72 157]
[74 154]
[75 153]
[76 152]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
