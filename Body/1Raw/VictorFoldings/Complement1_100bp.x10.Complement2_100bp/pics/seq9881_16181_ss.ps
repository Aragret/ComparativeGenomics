%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[73.34949493 748.32788086]
[58.60558319 745.45642090]
[44.34992599 740.72308350]
[30.81661987 734.20556641]
[18.22789192 726.01092529]
[6.79046154 716.27368164]
[-3.30785918 705.15374756]
[-11.90124607 692.83380127]
[-18.84858704 679.51605225]
[-24.03580284 665.41918945]
[-27.37771225 650.77471924]
[-28.81943893 635.82312012]
[-28.33731079 620.80993652]
[-25.93923950 605.98168945]
[-21.66460991 591.58184814]
[-15.58360958 577.84686279]
[-7.79609728 565.00225830]
[1.57004941 553.25903320]
[12.36103058 542.80999756]
[24.39964676 533.82666016]
[37.48821640 526.45660400]
[51.41181183 520.82080078]
[65.94178772 517.01190186]
[80.83956146 515.09234619]
[80.83956146 500.09234619]
[80.83956146 485.09234619]
[80.83956146 470.09234619]
[80.83956146 455.09234619]
[80.83956146 440.09234619]
[80.83956146 425.09234619]
[80.83956146 410.09234619]
[80.83956146 395.09234619]
[80.83956146 380.09234619]
[80.83956146 365.09234619]
[80.83956146 350.09234619]
[80.83956146 335.09234619]
[80.83956146 320.09234619]
[80.83956146 305.09234619]
[73.10226440 292.36508179]
[80.83956146 278.56488037]
[72.51060486 269.79248047]
[72.38784790 257.29574585]
[81.08248138 247.76861572]
[81.30580902 232.77027893]
[81.52913666 217.77194214]
[81.75246429 202.77360535]
[81.97579193 187.77526855]
[72.48542786 199.39134216]
[58.25480652 204.13363647]
[43.69343948 200.53273010]
[33.31332397 189.70437622]
[30.33085251 175.00386047]
[35.67017365 160.98631287]
[47.67684555 151.99522400]
[62.63046646 150.81655884]
[75.89749146 157.81555176]
[83.36705780 170.82374573]
[85.59217834 155.98970032]
[87.81729126 141.15565491]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[89.11119080 57.63361740]
[98.13059235 45.78035736]
[99.69110870 30.86175346]
[93.43149567 16.33151627]
[102.45088959 4.47825575]
[104.01141357 -10.44034863]
[105.57193756 -25.35895348]
[107.13246155 -40.27755737]
[105.00537109 -45.04437637]
[104.92725372 -49.68627548]
[106.50741577 -53.44368362]
[109.11031342 -55.82218933]
[111.33543396 -70.65623474]
[105.73086548 -85.45148468]
[115.27054596 -96.89018250]
[117.49565887 -111.72422791]
[119.72077942 -126.55827332]
[121.94589233 -141.39231873]
[124.17101288 -156.22636414]
[125.73153687 -171.14495850]
[126.62435150 -186.11836243]
[127.51716614 -201.09176636]
[112.79740143 -204.10992432]
[98.65701294 -209.19227600]
[85.38389587 -216.23536682]
[73.24826050 -225.09579468]
[62.49717712 -235.59317017]
[53.34952545 -247.51379395]
[45.99153900 -260.61495972]
[40.57301712 -274.62997437]
[37.20427322 -289.27346802]
[35.95389175 -304.24737549]
[36.84732437 -319.24679565]
[39.86639023 -333.96636963]
[44.94961929 -348.10644531]
[51.99352264 -361.37911987]
[60.85469818 -373.51419067]
[71.35274506 -384.26464844]
[83.27393341 -393.41156006]
[96.37556458 -400.76873779]
[110.39090729 -406.18637085]
[125.03462219 -409.55422974]
[140.00859070 -410.80368042]
[155.00794983 -409.90930176]
[169.72734070 -406.88934326]
[183.86709595 -401.80523682]
[197.13934326 -394.76049805]
[209.27388000 -385.89859009]
[220.02366638 -375.39987183]
[229.16984558 -363.47811890]
[236.52619934 -350.37603760]
[241.94299316 -336.36035156]
[245.30992126 -321.71643066]
[246.55845642 -306.74240112]
[245.66316223 -291.74307251]
[242.64227295 -277.02386475]
[237.55729675 -262.88442993]
[230.51174927 -249.61262512]
[221.64907837 -237.47863770]
[211.14968872 -226.72949219]
[199.22737122 -217.58406067]
[186.12483215 -210.22850037]
[172.10882568 -204.81259155]
[157.46469116 -201.44656372]
[142.49057007 -200.19895935]
[141.59776306 -185.22555542]
[140.70494080 -170.25215149]
[152.61369324 -179.37252808]
[167.50105286 -177.53764343]
[176.83883667 -165.79856873]
[175.27795410 -150.88000488]
[163.71255493 -141.32797241]
[148.76780701 -142.61430359]
[139.00505066 -154.00123596]
[136.77993774 -139.16719055]
[134.55482483 -124.33315277]
[132.32969666 -109.49910736]
[130.10458374 -94.66506195]
[135.86830139 -80.93084717]
[126.16947174 -68.43111420]
[123.94435883 -53.59706879]
[122.05106354 -38.71703720]
[120.49053955 -23.79843140]
[118.93001556 -8.87982559]
[117.36949921 6.03877878]
[123.74073029 19.50193787]
[114.60971832 32.42227554]
[113.04919434 47.34088135]
[119.42042542 60.80403900]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[106.75627899 132.60296631]
[106.83439636 137.24485779]
[105.25423431 141.00227356]
[102.65133667 143.38076782]
[100.42621613 158.21481323]
[98.20110321 173.04885864]
[96.97412872 187.99859619]
[96.75080109 202.99693298]
[96.52747345 217.99526978]
[96.30414581 232.99360657]
[96.08081818 247.99194336]
[105.42025757 263.86193848]
[95.83956146 278.56488037]
[103.57686615 292.36508179]
[95.83956146 305.09234619]
[95.83956146 320.09234619]
[95.83956146 335.09234619]
[95.83956146 350.09234619]
[95.83956146 365.09234619]
[95.83956146 380.09234619]
[95.83956146 395.09234619]
[95.83956146 410.09234619]
[95.83956146 425.09234619]
[95.83956146 440.09234619]
[95.83956146 455.09234619]
[95.83956146 470.09234619]
[95.83956146 485.09234619]
[95.83956146 500.09234619]
[95.83956146 515.09234619]
[110.73733521 517.01190186]
[125.26731873 520.82080078]
[139.19091797 526.45660400]
[152.27947998 533.82666016]
[164.31809998 542.80999756]
[175.10908508 553.25903320]
[184.47521973 565.00225830]
[192.26274109 577.84686279]
[198.34373474 591.58184814]
[202.61836243 605.98168945]
[205.01643372 620.80993652]
[205.49856567 635.82312012]
[204.05683899 650.77471924]
[200.71493530 665.41918945]
[195.52770996 679.51605225]
[188.58036804 692.83380127]
[179.98698425 705.15374756]
[169.88867188 716.27368164]
[158.45123291 726.01092529]
[145.86250305 734.20556641]
[132.32920837 740.72308350]
[118.07354736 745.45642090]
[103.32962799 748.32788086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[40 171]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[57 164]
[58 163]
[59 162]
[60 158]
[61 157]
[63 155]
[64 154]
[66 152]
[67 151]
[69 149]
[70 148]
[71 147]
[72 146]
[76 145]
[77 144]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[84 131]
[85 130]
[86 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
