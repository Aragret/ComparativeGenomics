%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[105.58880615 421.25793457]
[90.08721161 420.56506348]
[77.97442627 410.86660767]
[73.90807343 395.89181519]
[79.45174408 381.39880371]
[92.47378540 372.96041870]
[93.14356995 357.97540283]
[93.81335449 342.99035645]
[94.37156677 328.00073242]
[87.01663208 315.04873657]
[95.16138458 301.48504639]
[95.60799408 286.49169922]
[95.60799408 271.49169922]
[95.16138458 256.49835205]
[94.71478271 241.50500488]
[94.26817322 226.51165771]
[83.28484344 216.51655579]
[82.61833191 201.31753540]
[93.17658234 189.86497498]
[92.72998047 174.87162781]
[89.92986298 171.00271606]
[89.53043365 165.33372498]
[92.50000000 159.42668152]
[92.50000000 144.42668152]
[92.50000000 129.42668152]
[92.50000000 114.42668152]
[84.77587128 105.71007538]
[84.86257172 94.06388855]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.16227722 55.46658325]
[93.38560486 40.46824265]
[90.93988037 25.66897392]
[85.90296173 11.53994370]
[80.86604309 -2.58908558]
[75.82913208 -16.71811485]
[63.90707397 -27.11884308]
[66.92136383 -41.70524979]
[61.88444519 -55.83428192]
[56.84753036 -69.96331024]
[51.08149719 -83.81079865]
[44.60200119 -97.33914185]
[38.12250519 -110.86748505]
[31.64300919 -124.39583588]
[25.16351318 -137.92417908]
[18.68401718 -151.45252991]
[12.20452118 -164.98086548]
[5.72502565 -178.50921631]
[-7.21437645 -187.61318970]
[-5.73393869 -202.43403625]
[-12.21343422 -215.96238708]
[-19.58412361 -229.02658081]
[-27.81293106 -241.56797791]
[-36.04174042 -254.10937500]
[-44.27054596 -266.65078735]
[-52.49935532 -279.19216919]
[-60.72816467 -291.73358154]
[-68.95697021 -304.27496338]
[-82.34087372 -297.46804810]
[-96.39237213 -292.17477417]
[-110.94089508 -288.45947266]
[-125.80984497 -286.36718750]
[-140.81871033 -285.92333984]
[-155.78530884 -287.13333130]
[-170.52796936 -289.98242188]
[-184.86770630 -294.43609619]
[-198.63046265 -300.44024658]
[-211.64916992 -307.92196655]
[-223.76577759 -316.79049683]
[-234.83323669 -326.93817139]
[-244.71716309 -338.24176025]
[-253.29759216 -350.56405640]
[-260.47036743 -363.75552368]
[-266.14837646 -377.65600586]
[-270.26275635 -392.09674072]
[-272.76354980 -406.90246582]
[-273.62036133 -421.89343262]
[-272.82281494 -436.88766479]
[-270.38061523 -451.70315552]
[-266.32336426 -466.16003418]
[-260.70031738 -480.08285522]
[-253.57977295 -493.30258179]
[-245.04814148 -505.65872192]
[-235.20898438 -517.00128174]
[-224.18174744 -527.19262695]
[-212.10029602 -536.10900879]
[-199.11126709 -543.64215088]
[-185.37236023 -549.70068359]
[-171.05033875 -554.21099854]
[-156.31907654 -557.11840820]
[-141.35737610 -558.38751221]
[-126.34687042 -558.00305176]
[-111.46976471 -555.96954346]
[-96.90666199 -552.31176758]
[-82.83434296 -547.07415771]
[-69.42362976 -540.32019043]
[-56.83732224 -532.13189697]
[-45.22819901 -522.60870361]
[-34.73718643 -511.86614990]
[-25.49164009 -500.03472900]
[-17.60378838 -487.25799561]
[-11.16938400 -473.69104004]
[-6.26653433 -459.49862671]
[-2.95475483 -444.85296631]
[-1.27424824 -429.93185425]
[-1.24541426 -414.91647339]
[-2.86860299 -399.98901367]
[-6.12411022 -385.33074951]
[-10.97241688 -371.11959839]
[-17.35466957 -357.52804565]
[-25.19339371 -344.72109985]
[-34.39343262 -332.85424805]
[-44.84310913 -322.07150269]
[-56.41556931 -312.50378418]
[-48.18676376 -299.96237183]
[-39.95795441 -287.42098999]
[-31.72914696 -274.87957764]
[-23.50033951 -262.33819580]
[-15.27153111 -249.79678345]
[-7.04272366 -237.25538635]
[-5.70260811 -252.19540405]
[3.41765785 -264.10424805]
[17.49205971 -269.29183960]
[32.15949249 -266.15075684]
[42.87509155 -255.65429688]
[46.31851196 -241.05488586]
[41.42277145 -226.87631226]
[29.70487213 -217.51197815]
[14.79572773 -215.86351013]
[1.31491113 -222.44187927]
[7.79440689 -208.91354370]
[20.27035141 -200.77719116]
[19.25337219 -184.98870850]
[25.73286629 -171.46035767]
[32.21236420 -157.93202209]
[38.69186020 -144.40367126]
[45.17135620 -130.87533569]
[51.65085220 -117.34698486]
[58.13034821 -103.81863403]
[64.60984039 -90.29029083]
[69.51126099 -104.46689606]
[82.31341553 -112.28384399]
[97.16334534 -110.16733551]
[107.27185822 -99.08500671]
[108.01747131 -84.10354614]
[99.05931091 -72.07228088]
[84.49291992 -68.49174500]
[70.97656250 -75.00022888]
[76.01347351 -60.87119675]
[81.05039215 -46.74216843]
[92.61217499 -37.35204315]
[89.95816040 -21.75503159]
[94.99507904 -7.62600183]
[100.03199005 6.50302744]
[105.06890869 20.63205719]
[106.82415009 5.73510695]
[112.04730988 -8.32613754]
[120.44299316 -20.75644684]
[131.53637695 -30.85282326]
[144.70007324 -38.04426956]
[159.18963623 -41.92407608]
[174.18557739 -42.27281952]
[188.83981323 -39.07077789]
[202.32359314 -32.49903870]
[213.87432861 -22.92926979]
[222.83877563 -10.90268517]
[228.70994568 2.90055203]
[231.15580750 17.69980240]
[230.03800964 32.65809631]
[225.41979980 46.92947006]
[217.56234741 59.70680618]
[206.91001892 70.26748657]
[194.06526184 78.01425171]
[179.75453186 82.50898743]
[164.78713989 83.49749756]
[150.00956726 80.92386627]
[136.25756836 74.93365479]
[124.30889130 65.86563110]
[114.83927917 54.23264313]
[108.38394165 40.69157028]
[108.16061401 55.68991089]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[116.25928497 100.12104797]
[107.50000000 114.42668152]
[107.50000000 129.42668152]
[107.50000000 144.42668152]
[107.50000000 159.42668152]
[107.72332764 174.42501831]
[108.16993713 189.41836548]
[119.39112854 200.22218323]
[119.63047028 215.43392944]
[109.26152802 226.06504822]
[109.70812988 241.05839539]
[110.15473938 256.05175781]
[110.60134125 271.04510498]
[113.01348114 274.65557861]
[114.04727173 278.46292114]
[113.81008148 282.00961304]
[112.54682922 284.92007446]
[110.60134125 286.93832397]
[110.15473938 301.93167114]
[117.47772217 315.95608521]
[109.36491394 328.44735718]
[112.23743439 337.11834717]
[108.79839325 343.66012573]
[108.12860870 358.64517212]
[107.45882416 373.63021851]
[119.67610168 383.19671631]
[123.90466309 398.12649536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 204]
[11 202]
[12 201]
[13 196]
[14 195]
[15 194]
[16 193]
[19 190]
[20 189]
[23 188]
[24 187]
[25 186]
[26 185]
[29 183]
[30 182]
[31 181]
[32 180]
[33 155]
[34 154]
[35 153]
[36 152]
[38 150]
[39 149]
[40 148]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[50 131]
[51 130]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
