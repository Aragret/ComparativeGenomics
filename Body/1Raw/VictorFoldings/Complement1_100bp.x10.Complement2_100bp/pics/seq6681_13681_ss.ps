%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[96.40843964 416.41921997]
[88.27230835 429.07623291]
[77.88766479 439.96456909]
[65.62989807 448.69058228]
[51.94212341 454.93890381]
[37.31914139 458.48358154]
[22.28956413 459.19653320]
[7.39670277 457.05197144]
[-6.82107639 452.12741089]
[-19.84980965 444.60089111]
[-31.21851540 434.74447632]
[-40.51622391 422.91445923]
[-47.40682220 409.53851318]
[-51.64123154 395.10015869]
[-53.06636810 380.12130737]
[-51.63072205 365.14349365]
[-47.38618851 350.70809937]
[-40.48620605 337.33697510]
[-31.18020439 325.51348877]
[-19.80458641 315.66503906]
[-6.77057791 308.14767456]
[7.45065260 303.23309326]
[22.34501648 301.09896851]
[37.37408829 301.82244873]
[40.91376114 287.24609375]
[44.45343399 272.66970825]
[47.99310684 258.09332275]
[51.53277969 243.51696777]
[55.07245255 228.94058228]
[53.56009674 225.75544739]
[53.51535797 221.67953491]
[55.34009552 217.41061401]
[59.10935211 213.79956055]
[55.23220825 199.41842651]
[66.51406097 188.32652283]
[70.70107269 173.92272949]
[74.88808441 159.51895142]
[71.01094055 145.13781738]
[82.29280090 134.04591370]
[86.47981262 119.64213562]
[90.66682434 105.23835754]
[93.00231171 90.42128754]
[93.44891357 75.42794037]
[84.34678650 59.42066193]
[94.14532471 44.86196899]
[94.36865234 29.86363029]
[94.59197998 14.86529255]
[94.81530762 -0.13304442]
[80.31703949 -4.28460550]
[67.39751434 -12.04161739]
[56.93431473 -22.87016106]
[49.63636780 -36.02791977]
[45.99589157 -50.61505890]
[46.25522232 -65.63577271]
[50.39067841 -80.06624603]
[58.11458206 -92.92445374]
[68.89527130 -103.33700562]
[81.99369812 -110.59841919]
[96.51406860 -114.21896362]
[96.73739624 -129.21730042]
[96.96072388 -144.21563721]
[89.42974854 -158.12947083]
[97.35567474 -170.74014282]
[97.57900238 -185.73847961]
[97.80233002 -200.73681641]
[98.02565765 -215.73515320]
[98.24898529 -230.73348999]
[98.47231293 -245.73182678]
[98.69564056 -260.73016357]
[97.02410126 -275.63674927]
[93.48442841 -290.21310425]
[89.94475555 -304.78948975]
[86.40508270 -319.36587524]
[82.86540985 -333.94223022]
[79.32574463 -348.51861572]
[75.78607178 -363.09500122]
[72.24639893 -377.67135620]
[68.70672607 -392.24774170]
[53.72486115 -391.02700806]
[38.73648834 -392.16506958]
[24.11071396 -395.63397217]
[10.20770836 -401.34823608]
[-2.63015532 -409.16717529]
[-14.08673191 -418.89822388]
[-23.87989235 -430.30175781]
[-31.76847267 -443.09695435]
[-37.55820847 -456.96868896]
[-41.10652542 -471.57540894]
[-42.32603836 -486.55737305]
[-41.18671799 -501.54565430]
[-37.71661758 -516.17114258]
[-32.00119781 -530.07366943]
[-24.18120384 -542.91088867]
[-14.44920826 -554.36663818]
[-3.04487085 -564.15887451]
[9.75096607 -572.04638672]
[23.62319374 -577.83502197]
[38.23019409 -581.38208008]
[53.21226120 -582.60040283]
[68.20044708 -581.45983887]
[82.82564545 -577.98852539]
[96.72770691 -572.27197266]
[109.56428528 -564.45092773]
[121.01924896 -554.71795654]
[130.81053162 -543.31280518]
[138.69700623 -530.51629639]
[144.48445129 -516.64361572]
[148.03034973 -502.03631592]
[149.24739075 -487.05416870]
[148.10559082 -472.06607056]
[144.63308716 -457.44116211]
[138.91537476 -443.53955078]
[131.09326172 -430.70364380]
[121.35937500 -419.24948120]
[109.95342255 -409.45913696]
[97.15628052 -401.57373047]
[83.28309631 -395.78741455]
[86.82276917 -381.21102905]
[90.36244202 -366.63467407]
[93.90211487 -352.05828857]
[97.44178772 -337.48190308]
[100.98146057 -322.90554810]
[104.52113342 -308.32916260]
[108.06080627 -293.75277710]
[111.60047913 -279.17642212]
[115.40368652 -293.68624878]
[123.65724945 -306.21136475]
[135.49015808 -315.42996216]
[149.65364075 -320.36917114]
[164.65299988 -320.50775146]
[178.90531921 -315.83105469]
[190.90650940 -306.83264160]
[199.39006042 -294.46215820]
[203.46069336 -280.02505493]
[202.68881226 -265.04492188]
[197.15588379 -251.10264587]
[187.44580078 -239.66961670]
[174.58329773 -231.95236206]
[159.92578125 -228.76531982]
[145.02009583 -230.44479370]
[131.43928528 -236.81358337]
[120.61654663 -247.19955444]
[113.69398499 -260.50683594]
[113.47065735 -245.50849915]
[113.24732971 -230.51016235]
[113.02400208 -215.51182556]
[112.80066681 -200.51348877]
[112.57733917 -185.51515198]
[112.35401154 -170.51681519]
[119.90097046 -157.67575073]
[111.95906067 -143.99230957]
[111.73573303 -128.99397278]
[111.51240540 -113.99563599]
[125.91854095 -109.94436646]
[138.79495239 -102.29618835]
[149.26084900 -91.56727600]
[156.59849548 -78.48479462]
[160.30245972 -63.93758774]
[160.11445618 -48.91581345]
[156.04129028 -34.44353485]
[148.35481262 -21.50889587]
[137.57385254 -10.99668026]
[124.42909241 -3.62776971]
[109.81364441 0.09028330]
[109.59031677 15.08862114]
[109.36698914 30.08695793]
[109.14366150 45.08529663]
[117.34108734 53.98073196]
[117.27777863 66.47792053]
[108.44226837 75.87454224]
[107.99565887 90.86788940]
[115.50540161 77.88314056]
[126.78105927 67.99074554]
[140.63269043 62.23466873]
[155.59849548 61.22236633]
[170.09909058 65.06067657]
[182.60420227 73.34452057]
[191.79414368 85.19969177]
[196.69906616 99.37508392]
[196.80133057 114.37473297]
[192.09017944 128.61569214]
[183.06275940 140.59507751]
[170.67176819 149.04869080]
[156.22485352 153.08436584]
[141.24664307 152.27624512]
[127.31781006 146.70959473]
[115.90830231 136.97187805]
[108.22219086 124.09073639]
[105.07060242 109.42536926]
[100.88359070 123.82914734]
[96.69657898 138.23292542]
[100.27424622 153.64431763]
[89.29187012 163.70596313]
[85.10485840 178.10974121]
[80.91784668 192.51353455]
[84.49550629 207.92491150]
[73.51313019 217.98655701]
[69.64882660 232.48025513]
[66.10915375 247.05664062]
[62.56948090 261.63299561]
[59.02980804 276.20938110]
[55.49013519 290.78576660]
[51.95046616 305.36212158]
[65.63754272 311.61196899]
[77.89434052 320.33935547]
[88.27776337 331.22885132]
[96.41248322 343.88677979]
[102.00440979 357.85556030]
[104.85141754 372.63021851]
[104.85057831 387.67669678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[33 197]
[35 195]
[36 194]
[37 193]
[39 191]
[40 190]
[41 189]
[42 171]
[43 170]
[45 167]
[46 166]
[47 165]
[48 164]
[59 153]
[60 152]
[61 151]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
