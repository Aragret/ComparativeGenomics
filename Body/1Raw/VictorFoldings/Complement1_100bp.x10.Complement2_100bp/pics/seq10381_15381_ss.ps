%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[194.43283081 408.44223022]
[205.29296875 398.02383423]
[217.97712708 389.92456055]
[212.52177429 375.95175171]
[207.06642151 361.97894287]
[201.61105347 348.00616455]
[196.15570068 334.03335571]
[182.45381165 328.30676270]
[176.72225952 314.21408081]
[182.82173157 299.88110352]
[177.36637878 285.90829468]
[171.91102600 271.93551636]
[155.88203430 269.89004517]
[142.99758911 259.98312378]
[136.83206177 244.84367371]
[139.15594482 228.56806946]
[149.42872620 215.61192322]
[143.76593018 201.72189331]
[138.10314941 187.83186340]
[132.44036865 173.94183350]
[126.77757263 160.05180359]
[119.99758148 146.67153931]
[112.14582825 133.89068604]
[104.29407501 121.10984802]
[96.44231415 108.32901001]
[92.85624695 106.91038513]
[89.91290283 103.91796875]
[88.30112457 99.67424011]
[88.54008484 94.79748535]
[81.26685333 81.67878723]
[73.99362946 68.56009674]
[66.72039795 55.44140244]
[59.44717026 42.32270813]
[52.17393875 29.20401382]
[37.32844543 32.04457855]
[22.35210037 30.16003036]
[8.71000671 23.74741364]
[-2.26717305 13.44612217]
[-9.51302147 0.27417251]
[-12.32895565 -14.47240162]
[-10.45156193 -29.34706306]
[-4.07718563 -42.89466095]
[6.15852499 -53.79380035]
[-1.11470425 -66.91249084]
[-14.57304382 -75.23016357]
[-13.97738361 -90.11285400]
[-19.43872452 -93.83914948]
[-21.83818817 -98.99081421]
[-21.26522446 -103.73220062]
[-28.14463615 -117.06163025]
[-35.02404785 -130.39105225]
[-41.90346146 -143.72048950]
[-48.78287506 -157.04991150]
[-55.95824051 -170.22239685]
[-63.42598343 -183.23133850]
[-70.89372253 -196.24029541]
[-84.57324982 -190.05757141]
[-98.78564453 -185.22399902]
[-113.39820099 -181.78471375]
[-128.27447510 -179.77180481]
[-143.27558899 -179.20407104]
[-158.26145935 -180.08682251]
[-173.09216309 -182.41181946]
[-187.62924194 -186.15734863]
[-201.73693848 -191.28845215]
[-215.28355408 -197.75718689]
[-228.14260864 -205.50318909]
[-240.19401550 -214.45411682]
[-251.32525635 -224.52639771]
[-261.43240356 -235.62599182]
[-270.42111206 -247.64926147]
[-278.20739746 -260.48394775]
[-284.71859741 -274.01019287]
[-289.89392090 -288.10174561]
[-293.68502808 -302.62701416]
[-296.05654907 -317.45034790]
[-296.98632812 -332.43338013]
[-296.46563721 -347.43618774]
[-294.49942017 -362.31869507]
[-291.10598755 -376.94198608]
[-286.31701660 -391.16946411]
[-280.17724609 -404.86831665]
[-272.74395752 -417.91064453]
[-264.08663940 -430.17465210]
[-254.28605652 -441.54583740]
[-243.43373108 -451.91806030]
[-231.63099670 -461.19442749]
[-218.98805237 -469.28833008]
[-205.62295532 -476.12423706]
[-191.66047668 -481.63830566]
[-177.23100281 -485.77902222]
[-162.46923828 -488.50775146]
[-147.51303101 -489.79901123]
[-132.50201416 -489.64071655]
[-117.57635498 -488.03439331]
[-102.87541199 -484.99502563]
[-88.53644562 -480.55099487]
[-74.69334412 -474.74374390]
[-61.47534561 -467.62756348]
[-49.00587845 -459.26885986]
[-37.40136337 -449.74569702]
[-26.77015114 -439.14697266]
[-17.21150970 -427.57165527]
[-8.81468487 -415.12783813]
[-1.65807772 -401.93170166]
[4.19149113 -388.10641479]
[8.67940426 -373.78112793]
[11.76375866 -359.08953857]
[13.41575527 -344.16888428]
[13.61997032 -329.15841675]
[12.37449551 -314.19833374]
[9.69096088 -299.42828369]
[5.59442234 -284.98620605]
[0.12312892 -271.00692749]
[-6.67183399 -257.62094116]
[-14.72702217 -244.95329285]
[-23.96722412 -233.12222290]
[-34.30616760 -222.23820496]
[-45.64731216 -212.40287781]
[-57.88476944 -203.70803833]
[-50.41703033 -190.69908142]
[-42.94928741 -177.69013977]
[-39.65959930 -176.42115784]
[-36.82111359 -173.49574280]
[-35.20566559 -169.14332581]
[-35.45344543 -163.92933655]
[-28.57403183 -150.59989929]
[-21.69462013 -137.27047729]
[-14.81520748 -123.94104004]
[-7.93579483 -110.61161041]
[-0.85868949 -97.38608551]
[12.07942009 -90.00675201]
[12.00399017 -74.18572235]
[19.27721977 -61.06702805]
[33.94383240 -63.97416687]
[48.81104660 -62.20326996]
[62.42137909 -55.91527176]
[73.43665314 -45.71455383]
[80.76956177 -32.59086990]
[83.69097137 -17.82332420]
[81.90245056 -2.85570669]
[75.56665039 10.84466267]
[65.29263306 21.93078423]
[72.56586456 35.04947662]
[79.83908844 48.16817093]
[87.11231995 61.28686523]
[94.38555145 74.40556335]
[101.65878296 87.52425385]
[109.22315979 100.47724915]
[117.07491302 113.25809479]
[124.92667389 126.03894043]
[132.77842712 138.81977844]
[133.50051880 123.83717346]
[141.02294922 110.85977173]
[153.66520691 102.78675842]
[168.60296631 101.42167664]
[182.49908447 107.06948090]
[192.24916077 118.46843719]
[195.67497253 133.07199097]
[192.01119995 147.61766052]
[182.07633972 158.85592651]
[168.08987427 164.27612305]
[153.17639160 162.66735840]
[140.66760254 154.38902283]
[146.33038330 168.27905273]
[151.99317932 182.16908264]
[157.65596008 196.05909729]
[163.31874084 209.94912720]
[177.25671387 211.13061523]
[189.26853943 218.16853333]
[197.03892517 229.64021301]
[199.09864807 243.27497864]
[195.10212708 256.40344238]
[185.88381958 266.48013306]
[191.33917236 280.45294189]
[196.79454041 294.42575073]
[210.99203491 300.83422852]
[216.32550049 315.08233643]
[210.12849426 328.57800293]
[215.58386230 342.55078125]
[221.03921509 356.52359009]
[226.49456787 370.49639893]
[231.94992065 384.46917725]
[246.76641846 381.83145142]
[261.81280518 382.13528442]
[276.51077271 385.36895752]
[290.29531860 391.40820312]
[302.63659668 400.02090454]
[313.06030273 410.87597656]
[321.16574097 423.55621338]
[326.64135742 437.57418823]
[329.27667236 452.39111328]
[328.97042847 467.43746948]
[325.73437500 482.13488770]
[319.69287109 495.91845703]
[311.07818604 508.25836182]
[300.22143555 518.68029785]
[287.53988647 526.78369141]
[273.52102661 532.25701904]
[258.70367432 534.88995361]
[243.65737915 534.58129883]
[228.96047974 531.34283447]
[215.17788696 525.29913330]
[202.83937073 516.68243408]
[192.41918945 505.82397461]
[184.31787109 493.14111328]
[178.84678650 479.12136841]
[176.21626282 464.30358887]
[176.52737427 449.25735474]
[179.76820374 434.56097412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[10 176]
[11 175]
[12 174]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 152]
[23 151]
[24 150]
[25 149]
[29 148]
[30 147]
[31 146]
[32 145]
[33 144]
[34 143]
[43 134]
[44 133]
[46 131]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 122]
[55 121]
[56 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
