%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[134.22702026 164.12188721]
[143.43664551 152.26376343]
[132.63449097 141.85639954]
[121.83233643 131.44902039]
[111.03018188 121.04164886]
[100.22801971 110.63427734]
[88.68172455 101.05915833]
[76.45523834 92.36933136]
[64.22875214 83.67951202]
[70.72393799 97.20032501]
[72.27187347 112.12023926]
[68.69071198 126.68647766]
[60.40115738 139.18780518]
[48.37705994 148.15559387]
[34.03100204 152.53630066]
[19.04833984 151.81529236]
[5.18922424 146.07725525]
[-5.91819000 135.99632263]
[-12.96901512 122.75676727]
[-15.13492775 107.91396332]
[-12.16147804 93.21163177]
[-4.39798403 80.37698364]
[7.24350643 70.91782379]
[21.39536285 65.94540405]
[36.39503860 66.04387665]
[50.48174667 71.20246124]
[40.65116882 59.87287140]
[30.82058525 48.54327774]
[20.99000549 37.21368408]
[11.15942478 25.88409233]
[1.32884359 14.55449963]
[-8.50173759 3.22490621]
[-18.33231735 -8.10468674]
[-30.27251053 0.98307824]
[-42.77042770 9.28715801]
[-55.77471161 16.77342796]
[-69.23192596 23.41112709]
[-83.08676910 29.17297935]
[-97.28231812 34.03530502]
[-111.76022339 37.97812653]
[-126.46100616 40.98524475]
[-141.32424927 43.04429245]
[-156.28887939 44.14682007]
[-171.29339600 44.28828812]
[-186.27615356 43.46812057]
[-201.17558289 41.68968964]
[-215.93043518 38.96029663]
[-230.48011780 35.29116058]
[-244.76481628 30.69735909]
[-258.72583008 25.19776917]
[-272.30581665 18.81499100]
[-285.44894409 11.57524967]
[-298.10122681 3.50829864]
[-310.21063232 -5.35271502]
[-321.72744751 -14.97137833]
[-332.60433960 -25.30816650]
[-342.79656982 -36.32060242]
[-352.26232910 -47.96343613]
[-360.96264648 -60.18881989]
[-368.86181641 -72.94651794]
[-375.92733765 -86.18410492]
[-382.13021851 -99.84719086]
[-387.44497681 -113.87962341]
[-391.84973145 -128.22373962]
[-395.32641602 -142.82060242]
[-397.86071777 -157.61022949]
[-399.44223022 -172.53184509]
[-400.06445312 -187.52412415]
[-399.72485352 -202.52546692]
[-398.42480469 -217.47422791]
[-396.16964722 -232.30899048]
[-392.96865845 -246.96878052]
[-388.83499146 -261.39334106]
[-383.78561401 -275.52343750]
[-377.84130859 -289.30099487]
[-371.02645874 -302.66937256]
[-363.36911011 -315.57366943]
[-354.90072632 -327.96081543]
[-345.65606689 -339.77996826]
[-335.67315674 -350.98251343]
[-324.99298096 -361.52243042]
[-313.65948486 -371.35641479]
[-301.71917725 -380.44403076]
[-289.22116089 -388.74798584]
[-276.21679688 -396.23410034]
[-262.75952148 -402.87167358]
[-248.90460205 -408.63336182]
[-234.70901489 -413.49551392]
[-220.23106384 -417.43820190]
[-205.53024292 -420.44512939]
[-190.66697693 -422.50402832]
[-175.70234680 -423.60638428]
[-160.69781494 -423.74768066]
[-145.71507263 -422.92736816]
[-130.81567383 -421.14877319]
[-116.06082916 -418.41918945]
[-101.51119232 -414.74990845]
[-87.22654724 -410.15594482]
[-73.26557922 -404.65618896]
[-59.68567276 -398.27328491]
[-46.54262543 -391.03338623]
[-33.89044571 -382.96630859]
[-21.78112030 -374.10513306]
[-10.26441479 -364.48635864]
[0.61234915 -354.14944458]
[10.80447483 -343.13690186]
[20.27008057 -331.49395752]
[28.97027016 -319.26849365]
[36.86928940 -306.51068115]
[43.93468475 -293.27301025]
[50.13742065 -279.60986328]
[55.45200729 -265.57739258]
[59.85660553 -251.23321533]
[63.33311844 -236.63630676]
[65.86725616 -221.84666443]
[67.44860840 -206.92503357]
[68.07067871 -191.93273926]
[67.73090363 -176.93139648]
[66.43068695 -161.98265076]
[64.17536926 -147.14791870]
[60.97421646 -132.48817444]
[56.84038544 -118.06363678]
[51.79086304 -103.93360138]
[45.84639359 -90.15612030]
[39.03141022 -76.78781128]
[31.37391472 -63.88360977]
[22.90537643 -51.49654007]
[13.66059113 -39.67750168]
[3.67754984 -28.47506905]
[-7.00272512 -17.93526840]
[2.82785583 -6.60567474]
[12.65843678 4.72391844]
[22.48901749 16.05351257]
[32.31959915 27.38310432]
[42.15018082 38.71269608]
[51.98075867 50.04228973]
[61.81134033 61.37188339]
[72.91857147 71.45302582]
[85.14505768 80.14284515]
[97.37154388 88.83267212]
[92.62607574 74.60310364]
[95.53426361 59.88772583]
[105.33591461 48.53309250]
[119.46890259 43.50728607]
[134.23889160 46.12403488]
[145.78504944 55.69932938]
[151.08923340 69.73020935]
[148.76493835 84.54903412]
[139.41975403 96.28221130]
[125.49645233 101.86270142]
[110.63539886 99.83212280]
[121.43755341 110.23949432]
[132.23971558 120.64686584]
[143.04187012 131.05424500]
[153.84402466 141.46160889]
[165.35119629 131.81707764]
[177.81834412 123.45033264]
[191.10420227 116.45619202]
[205.05822754 110.91389465]
[219.52232361 106.88624573]
[234.33259583 104.41887665]
[249.32124329 103.53974915]
[264.31842041 104.25881958]
[279.15417480 106.56794739]
[293.66043091 110.44096375]
[307.67285156 115.83398438]
[321.03262329 122.68590546]
[333.58834839 130.91908264]
[345.19784546 140.44023132]
[355.72949219 151.14147949]
[365.06396484 162.90155029]
[373.09552002 175.58721924]
[379.73318481 189.05471802]
[384.90167236 203.15148926]
[388.54248047 217.71777344]
[390.61431885 232.58853149]
[391.09375000 247.59527588]
[389.97531128 262.56796265]
[387.27166748 277.33691406]
[383.01348877 291.73483276]
[377.24899292 305.59857178]
[370.04351807 318.77099609]
[361.47869873 331.10290527]
[351.65158081 342.45455933]
[340.67352295 352.69729614]
[328.66888428 361.71511841]
[315.77371216 369.40579224]
[302.13412476 375.68222046]
[287.90463257 380.47326660]
[273.24649048 383.72463989]
[258.32580566 385.39947510]
[243.31163025 385.47885132]
[228.37406921 383.96185303]
[213.68238831 380.86563110]
[199.40304565 376.22531128]
[185.69784546 370.09344482]
[172.72209167 362.53955078]
[160.62278748 353.64916992]
[149.53703308 343.52304077]
[139.59043884 332.27593994]
[130.89570618 320.03527832]
[123.55136871 306.93975830]
[117.64062500 293.13775635]
[113.23045349 278.78564453]
[110.37082672 264.04611206]
[109.09414673 249.08607483]
[109.41487885 234.07510376]
[111.32938385 219.18327332]
[114.81597900 204.57931519]
[119.83514404 190.42869568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 140]
[8 139]
[9 138]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
