%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[102.84940338 776.00964355]
[88.17626190 772.86444092]
[73.76488495 768.68048096]
[59.68871307 763.47906494]
[46.01946640 757.28674316]
[32.82680511 750.13500977]
[20.17796135 742.06036377]
[8.13738537 733.10394287]
[-3.23356438 723.31134033]
[-13.87694263 712.73248291]
[-23.73851395 701.42132568]
[-32.76802444 689.43548584]
[-40.91946411 676.83593750]
[-48.15129089 663.68707275]
[-54.42665100 650.05572510]
[-59.71357346 636.01147461]
[-63.98511124 621.62579346]
[-67.21950531 606.97204590]
[-69.40026093 592.12493896]
[-70.51627350 577.16003418]
[-70.56185150 562.15362549]
[-69.53677368 547.18225098]
[-67.44625092 532.32214355]
[-64.30094147 517.64904785]
[-60.11687088 503.23770142]
[-54.91536713 489.16156006]
[-48.72292709 475.49237061]
[-41.57111359 462.29974365]
[-33.49636841 449.65097046]
[-24.53983688 437.61047363]
[-14.74716187 426.23959351]
[-4.16824484 415.59628296]
[7.14300537 405.73480225]
[19.12895012 396.70538330]
[31.72850990 388.55404663]
[44.87747955 381.32232666]
[58.50885391 375.04705811]
[72.55316925 369.76025391]
[86.93886566 365.48883057]
[101.59262848 362.25454712]
[116.43978119 360.07391357]
[115.32413483 345.11544800]
[114.20848846 330.15698242]
[113.09283447 315.19854736]
[111.97718811 300.24008179]
[110.86154175 285.28164673]
[109.74588776 270.32318115]
[108.63024139 255.36473083]
[107.51459503 240.40628052]
[98.85211182 228.28973389]
[105.54157257 213.95230103]
[104.42592621 198.99385071]
[103.31027222 184.03540039]
[101.74975586 169.11679077]
[99.74573517 154.25126648]
[97.74172211 139.38574219]
[88.37341309 127.80627441]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.16217041 85.56797028]
[86.73789215 81.88884735]
[86.60481262 78.33670807]
[87.55842590 75.31061554]
[89.28338623 73.10093689]
[88.16773987 58.14248657]
[87.05209351 43.18403244]
[85.93643951 28.22558022]
[84.70946503 13.27584553]
[83.37123108 -1.66433930]
[82.03299713 -16.60452461]
[79.58727264 -31.40379524]
[76.04759979 -45.98017120]
[72.50792694 -60.55654526]
[68.96825409 -75.13291931]
[64.99615479 -89.59744263]
[60.59516144 -103.93729401]
[56.19416046 -118.27713776]
[51.79316330 -132.61698914]
[36.84575272 -130.91714478]
[21.84051704 -131.99305725]
[7.28853369 -135.80807495]
[-6.31456232 -142.23228455]
[-18.50545502 -151.04685974]
[-28.86892700 -161.95158386]
[-37.05200195 -174.57505798]
[-42.77597046 -188.48731995]
[-45.84587479 -203.21450806]
[-46.15715027 -218.25505066]
[-43.69919968 -233.09664917]
[-38.55574036 -247.23381042]
[-30.90195656 -260.18502808]
[-20.99852943 -271.50921631]
[-9.18277073 -280.82061768]
[4.14288187 -287.80215454]
[18.52456093 -292.21597290]
[33.47243118 -293.91180420]
[48.47737503 -292.83184814]
[63.02832794 -289.01287842]
[76.62969208 -282.58502197]
[88.81820679 -273.76715088]
[99.17874146 -262.85964966]
[107.35841370 -250.23396301]
[113.07863617 -236.32015991]
[116.14456177 -221.59214783]
[116.45178986 -206.55152893]
[113.98983765 -191.71058655]
[108.84256744 -177.57479858]
[101.18529510 -164.62564087]
[91.27881622 -153.30413818]
[79.46054840 -143.99591064]
[66.13301086 -137.01799011]
[70.53401184 -122.67813873]
[74.93500519 -108.33828735]
[79.33600616 -93.99844360]
[81.74647522 -92.56744385]
[83.73534393 -90.09539795]
[84.90325928 -86.73810577]
[84.91458130 -82.79293060]
[83.54463196 -78.67259216]
[87.08430481 -64.09622192]
[90.62397766 -49.51984406]
[94.16365051 -34.94346619]
[99.90502930 -48.80119324]
[111.74564362 -58.00986862]
[126.59040070 -60.16236496]
[140.55891418 -54.69602585]
[149.99983215 -43.03973770]
[152.44532776 -28.24043083]
[147.25616455 -14.16660500]
[135.78877258 -4.49712467]
[121.04069519 -1.75956941]
[106.86705017 -6.66952944]
[96.97318268 -17.94275856]
[98.31141663 -3.00257349]
[99.64965057 11.93761158]
[103.37736511 18.31930161]
[100.89489746 27.10993004]
[102.01054382 42.06838226]
[103.12619019 57.02683640]
[104.24184418 71.98529053]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[118.57481384 123.73484039]
[112.60725403 137.38172913]
[114.61126709 152.24725342]
[116.61528015 167.11277771]
[119.38994598 170.45271301]
[120.81422424 174.13185120]
[120.94730377 177.68399048]
[119.99369049 180.71008301]
[118.26873016 182.91975403]
[119.38437653 197.87820435]
[120.50002289 212.83665466]
[129.24230957 226.02313232]
[122.47304535 239.29061890]
[123.58869934 254.24908447]
[124.70434570 269.20751953]
[125.81999207 284.16598511]
[126.93563843 299.12445068]
[128.05128479 314.08288574]
[129.16694641 329.04135132]
[130.28259277 343.99978638]
[131.39823914 358.95825195]
[146.40460205 358.91232300]
[161.37602234 359.93707275]
[176.23617554 362.02725220]
[190.90936279 365.17221069]
[205.32080078 369.35595703]
[219.39706421 374.55712891]
[233.06640625 380.74926758]
[246.25917053 387.90075684]
[258.90814209 395.97521973]
[270.94885254 404.93148804]
[282.31994629 414.72387695]
[292.96350098 425.30255127]
[302.82522583 436.61358643]
[311.85494995 448.59933472]
[320.00656128 461.19869995]
[327.23858643 474.34750366]
[333.51416016 487.97872925]
[338.80130005 502.02291870]
[343.07305908 516.40850830]
[346.30767822 531.06219482]
[348.48864746 545.90930176]
[349.60488892 560.87420654]
[349.65072632 575.88055420]
[348.62585449 590.85192871]
[346.53555298 605.71209717]
[343.39047241 620.38525391]
[339.20663452 634.79669189]
[334.00534058 648.87286377]
[327.81311035 662.54217529]
[320.66149902 675.73492432]
[312.58694458 688.38378906]
[303.63061523 700.42443848]
[293.83810425 711.79547119]
[283.25933838 722.43890381]
[271.94824219 732.30059814]
[259.96243286 741.33020020]
[247.36300659 749.48175049]
[234.21415710 756.71368408]
[220.58287048 762.98913574]
[206.53863525 768.27612305]
[192.15301514 772.54779053]
[177.49929810 775.78228760]
[162.65217590 777.96319580]
[147.68730164 779.07928467]
[132.68092346 779.12500000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 158]
[49 157]
[51 155]
[52 154]
[53 153]
[54 148]
[55 147]
[56 146]
[58 144]
[60 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 136]
[70 135]
[71 134]
[72 123]
[73 122]
[74 121]
[75 120]
[76 115]
[77 114]
[78 113]
[79 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
