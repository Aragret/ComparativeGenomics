%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[81.46511078 410.68557739]
[79.31589508 425.54818726]
[75.45573425 440.06079102]
[69.93682861 454.02713013]
[62.83381653 467.25830078]
[54.24275589 479.57534790]
[44.27983093 490.81176758]
[33.07978439 500.81552124]
[20.79407692 509.45138550]
[7.58886433 516.60253906]
[-6.35727072 522.17224121]
[-20.85572243 526.08520508]
[-35.71041489 528.28857422]
[-50.72045898 528.75238037]
[-65.68285370 527.47052002]
[-80.39525604 524.46026611]
[-94.65869904 519.76232910]
[-108.28027344 513.44018555]
[-121.07578278 505.57943726]
[-132.87216187 496.28631592]
[-143.50990295 485.68655396]
[-152.84510803 473.92346191]
[-160.75155640 461.15612793]
[-167.12231445 447.55725098]
[-171.87123108 433.31066895]
[-174.93408203 418.60913086]
[-176.26942444 403.65142822]
[-175.85922241 388.63980103]
[-173.70901489 373.77734375]
[-169.84788513 359.26498413]
[-164.32804871 345.29904175]
[-157.22415161 332.06835938]
[-148.63226318 319.75186157]
[-138.66859436 308.51611328]
[-127.46788025 298.51309204]
[-115.18159485 289.87805176]
[-101.97590637 282.72778320]
[-88.02940369 277.15899658]
[-73.53068542 273.24697876]
[-58.67584610 271.04464722]
[-43.66577530 270.58181763]
[-28.70346260 271.86468506]
[-13.99126148 274.87591553]
[0.27186430 279.57482910]
[13.89302254 285.89785767]
[21.74477768 273.11700439]
[29.59653282 260.33618164]
[37.44828796 247.55532837]
[45.30004501 234.77449036]
[53.15179825 221.99365234]
[61.00355530 209.21279907]
[68.85530853 196.43196106]
[74.62134552 182.58447266]
[70.10591888 168.39080811]
[80.88124084 156.80621338]
[84.09451294 142.15441895]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[83.96182251 102.67506409]
[86.28707123 91.26303101]
[95.64781189 84.33355713]
[98.75192261 69.65824890]
[101.85603333 54.98294830]
[97.14203644 39.88034058]
[107.34564209 29.02973175]
[110.44975281 14.35442829]
[96.88574219 5.99635792]
[87.02033997 -6.47999144]
[82.03193665 -21.55474663]
[82.50621033 -37.39949036]
[88.36744690 -52.09903717]
[98.88990784 -63.88291931]
[112.78765869 -71.33862305]
[128.37167358 -73.58090210]
[131.25694275 -88.30078888]
[134.14221191 -103.02068329]
[137.02748108 -117.74057770]
[139.91275024 -132.46046448]
[142.79803467 -147.18035889]
[145.68330383 -161.90025330]
[148.56857300 -176.62014771]
[149.23835754 -191.60517883]
[140.10734558 -204.52551270]
[146.47857666 -217.98867798]
[144.91806030 -232.90728760]
[143.35752869 -247.82588196]
[141.79701233 -262.74447632]
[140.23649597 -277.66308594]
[125.27055359 -279.34680176]
[111.01661682 -284.20883179]
[98.14134216 -292.02172852]
[87.24694824 -302.42010498]
[78.84297943 -314.91760254]
[73.32250214 -328.92968750]
[70.94371796 -343.80099487]
[71.81789398 -358.83593750]
[75.90413666 -373.33132935]
[83.01132202 -386.60922241]
[92.80704498 -398.04852295]
[104.83313751 -407.11425781]
[118.52711487 -413.38235474]
[133.24848938 -416.55966187]
[148.30870056 -416.49755859]
[163.00337219 -413.19900513]
[176.64521790 -406.81820679]
[188.59614563 -397.65365601]
[198.29722595 -386.13397217]
[205.29470825 -372.79794312]
[209.26130676 -358.26934814]
[210.01148987 -343.22769165]
[207.51017761 -328.37652588]
[201.87435913 -314.41043091]
[193.36764526 -301.98263550]
[182.38787842 -291.67443848]
[169.44863892 -283.96795654]
[155.15509033 -279.22363281]
[156.71562195 -264.30502319]
[158.27613831 -249.38641357]
[159.83666992 -234.46780396]
[161.39718628 -219.54919434]
[170.41658020 -207.69593811]
[164.15696716 -193.16569519]
[169.56217957 -207.15797424]
[178.64472961 -219.09561157]
[190.68833923 -228.03715515]
[204.74320984 -233.27745056]
[219.70091248 -234.40321350]
[234.38180542 -231.32566833]
[247.62811279 -224.28750610]
[258.39514160 -213.84381104]
[265.83380127 -200.81820679]
[269.35742188 -186.23794556]
[268.68814087 -171.25288391]
[263.87869263 -157.04481506]
[255.30841064 -144.73423767]
[243.65318298 -135.29202271]
[229.83216858 -129.46281433]
[214.93536377 -127.70632935]
[200.13758850 -130.16110229]
[186.60586548 -136.63352966]
[175.40734863 -146.61317444]
[167.42520142 -159.31298828]
[163.28846741 -173.73486328]
[160.40319824 -159.01498413]
[157.51792908 -144.29508972]
[154.63264465 -129.57519531]
[151.74737549 -114.85530090]
[148.86210632 -100.13541412]
[145.97683716 -85.41551971]
[143.09155273 -70.69562531]
[155.43086243 -63.75625992]
[165.03839111 -53.32952499]
[170.96504211 -40.42585754]
[172.61936951 -26.30130959]
[169.82644653 -12.33528805]
[162.84635925 0.10416307]
[152.34997559 9.79436493]
[139.35453796 15.77817917]
[125.12505341 17.45853806]
[122.02094269 32.13384247]
[126.95697021 46.18677521]
[116.53134155 58.08705902]
[113.42723083 72.76235962]
[110.32312012 87.43766022]
[115.93238068 103.24628448]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[98.81440735 145.03968811]
[100.50774384 149.97727966]
[100.17141724 154.60763550]
[98.26232910 158.20907593]
[95.45761871 160.34588623]
[99.71986389 175.58215332]
[89.19772339 186.12414551]
[98.93431854 174.71368408]
[111.35748291 166.30743408]
[125.57037354 161.51225281]
[140.54695129 160.67431641]
[155.20603943 163.85411072]
[168.48939514 170.82206726]
[179.43806458 181.07519531]
[187.26167297 193.87327576]
[191.39543152 208.29243469]
[191.54089355 223.29173279]
[187.68757629 237.78836060]
[180.11364746 250.73577881]
[169.36587524 261.19931030]
[156.22016907 268.42358398]
[141.62550354 271.88708496]
[126.63549042 271.33975220]
[112.33227539 266.82113647]
[99.74841309 258.65740967]
[89.79234314 247.43792725]
[83.18281555 233.97262573]
[80.39696503 219.23359680]
[81.63615417 204.28372192]
[73.78440094 217.06455994]
[65.93264008 229.84539795]
[58.08088684 242.62625122]
[50.22912979 255.40708923]
[42.37737656 268.18792725]
[34.52561951 280.96878052]
[26.67386436 293.74960327]
[38.47087097 303.04193115]
[49.10930634 313.64099121]
[58.44530869 325.40347290]
[66.35260773 338.17025757]
[72.72427368 351.76873779]
[77.47414398 366.01498413]
[80.53796387 380.71630859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 203]
[46 202]
[47 201]
[48 200]
[49 199]
[50 198]
[51 197]
[52 196]
[53 174]
[55 172]
[56 168]
[57 167]
[58 166]
[61 164]
[62 163]
[63 162]
[65 160]
[66 159]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 145]
[80 144]
[81 143]
[82 122]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
