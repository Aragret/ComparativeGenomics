%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[81.96784210 722.91009521]
[69.92043304 731.86700439]
[57.05309677 739.59997559]
[43.48974991 746.03442383]
[29.36101913 751.10845947]
[14.80297470 754.77319336]
[-0.04417552 756.99328613]
[-15.03744316 757.74743652]
[-30.03243065 757.02832031]
[-44.88472748 754.84289551]
[-59.45128632 751.21215820]
[-73.59182739 746.17114258]
[-87.17016602 739.76837158]
[-100.05552673 732.06549072]
[-112.12381744 723.13671875]
[-123.25880432 713.06799316]
[-133.35325623 701.95635986]
[-142.30996704 689.90875244]
[-150.04264832 677.04125977]
[-156.47683716 663.47778320]
[-161.55058289 649.34899902]
[-165.21501160 634.79083252]
[-167.43482971 619.94366455]
[-168.18865967 604.95037842]
[-167.46925354 589.95538330]
[-165.28350830 575.10314941]
[-161.65251160 560.53668213]
[-156.61120605 546.39624023]
[-150.20816040 532.81799316]
[-142.50502014 519.93280029]
[-133.57600403 507.86468506]
[-123.50707245 496.72991943]
[-112.39521790 486.63568115]
[-100.34745789 477.67919922]
[-87.47980499 469.94677734]
[-73.91620636 463.51284790]
[-59.78726959 458.43939209]
[-45.22908020 454.77526855]
[-30.38183975 452.55575562]
[-15.38854218 451.80221558]
[-0.39358255 452.52194214]
[14.45862484 454.70794678]
[29.02504158 458.33926392]
[34.06195831 444.21023560]
[39.09887314 430.08120728]
[36.08458328 415.49478149]
[48.00664139 405.09405518]
[53.04355621 390.96502686]
[57.44455338 376.62518311]
[61.20085526 362.10311890]
[64.95715332 347.58105469]
[68.71345520 333.05899048]
[71.37924957 318.29779053]
[72.93977356 303.37918091]
[74.50029755 288.46057129]
[76.06082153 273.54196167]
[77.62134552 258.62338257]
[69.62226105 243.00346375]
[80.56205750 228.19122314]
[81.90029144 213.25103760]
[83.23852539 198.31085205]
[84.57675934 183.37066650]
[78.00578308 170.00386047]
[86.94342041 156.94900513]
[88.28165436 142.00881958]
[80.76854706 132.52832031]
[81.76117706 120.07045746]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[100.05237579 27.40804100]
[101.27935791 12.45830727]
[102.17217255 -2.51509881]
[95.26998901 -16.75133705]
[103.75111389 -28.99551201]
[104.64392853 -43.96891785]
[97.74174500 -58.20515442]
[106.22286987 -70.44932556]
[107.11568451 -85.42273712]
[96.90310669 -97.18457794]
[98.02185059 -112.35701752]
[109.29790497 -122.02067566]
[110.19071960 -136.99407959]
[111.08353424 -151.96748352]
[111.97634888 -166.94088745]
[105.07416534 -181.17712402]
[113.55529022 -193.42129517]
[104.93379974 -209.69248962]
[115.16145325 -223.95298767]
[115.60806274 -238.94633484]
[115.83139038 -253.94467163]
[116.05471802 -268.94302368]
[116.27804565 -283.94134521]
[116.50137329 -298.93969727]
[116.72470093 -313.93801880]
[102.64408112 -319.60375977]
[91.56367493 -329.97628784]
[84.98200226 -343.65274048]
[83.78919983 -358.78356934]
[88.14656830 -373.32241821]
[97.46481323 -385.30300903]
[110.48371887 -393.10510254]
[125.44258881 -395.67349243]
[140.31835938 -392.66085815]
[153.09919739 -384.47460938]
[162.05659485 -372.22186279]
[165.97915649 -357.55975342]
[164.33638000 -342.47116089]
[157.35043335 -328.99670410]
[145.96611023 -318.95867920]
[131.72303772 -313.71469116]
[131.49971008 -298.71636963]
[131.27638245 -283.71801758]
[131.05305481 -268.71969604]
[130.82972717 -253.72134399]
[130.60639954 -238.72300720]
[133.23097229 -234.73294067]
[133.37686157 -229.05175781]
[130.14649963 -223.28320312]
[138.07543945 -214.14764404]
[137.64006042 -201.65788269]
[128.52870178 -192.52848816]
[135.49473572 -179.36325073]
[126.94975281 -166.04808044]
[126.05693817 -151.07466125]
[125.16412354 -136.10125732]
[124.27130890 -121.12785339]
[134.31912231 -110.19273376]
[133.62698364 -94.99485016]
[122.08908844 -84.52992249]
[121.19627380 -69.55651093]
[128.16232300 -56.39127350]
[119.61733246 -43.07609940]
[118.72451782 -28.10269547]
[125.69055939 -14.93745613]
[117.14557648 -1.62228286]
[116.25276184 13.35112286]
[118.30710602 16.21678543]
[119.07550049 20.21986008]
[118.03848267 24.74511147]
[114.97098541 28.96856308]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[114.07606506 129.55746460]
[103.22183990 143.34704590]
[101.88360596 158.28723145]
[108.35886383 172.72267151]
[99.51694489 184.70889282]
[98.17871094 199.64907837]
[96.84047699 214.58926392]
[95.50224304 229.52944946]
[103.15853882 239.90942383]
[101.73634338 252.32559204]
[92.53994751 260.18389893]
[90.97942352 275.10250854]
[89.41890717 290.02108765]
[87.85838318 304.93969727]
[86.29785919 319.85830688]
[96.35921478 308.73315430]
[110.60453033 304.03518677]
[125.31012726 306.99246216]
[136.63198853 316.83193970]
[141.61061096 330.98162842]
[138.94459534 345.74279785]
[129.33082581 357.25695801]
[115.28232574 362.51428223]
[100.47132874 360.14056396]
[88.76940918 350.75625610]
[83.23551941 336.81530762]
[79.47921753 351.33737183]
[75.72291565 365.85943604]
[71.96661377 380.38146973]
[85.40731049 373.72207642]
[99.66371155 378.38632202]
[106.56909943 391.70230103]
[102.16775513 406.04205322]
[88.98097229 413.19107056]
[74.56273651 409.05413818]
[67.17258453 396.00195312]
[62.13566971 410.13098145]
[64.78968811 425.72799683]
[53.22790146 435.11810303]
[48.19098663 449.24713135]
[43.15407181 463.37615967]
[56.73266220 469.77841187]
[69.61833191 477.48077393]
[81.68698120 486.40905762]
[92.82237244 496.47732544]
[102.91727448 507.58856201]
[111.87445068 519.63580322]
[119.60765076 532.50299072]
[126.04238892 546.06622314]
[131.11669922 560.19482422]
[134.78170776 574.75280762]
[137.00212097 589.59991455]
[137.75654602 604.59313965]
[137.03773499 619.58813477]
[134.85260010 634.44049072]
[131.22216797 649.00714111]
[126.18143463 663.14776611]
[119.77893066 676.72625732]
[112.07631683 689.61175537]
[103.14777374 701.68023682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 191]
[44 190]
[45 189]
[47 187]
[48 186]
[49 179]
[50 178]
[51 177]
[52 176]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[59 158]
[60 157]
[61 156]
[62 155]
[64 153]
[65 152]
[68 150]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 140]
[76 139]
[78 137]
[79 136]
[81 134]
[82 133]
[85 130]
[86 129]
[87 128]
[88 127]
[90 125]
[92 122]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
