%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[3.96479392 357.67413330]
[1.02132690 372.39068604]
[-3.08207345 386.82681274]
[-8.31946373 400.89129639]
[-14.65773106 414.49520874]
[-22.05680275 427.55255127]
[-30.46989822 439.98074341]
[-39.84382629 451.70120239]
[-50.11931992 462.63986206]
[-61.23141861 472.72756958]
[-73.10986328 481.90048218]
[-85.67955017 490.10067749]
[-98.86101532 497.27627563]
[-112.57091522 503.38189697]
[-126.72257233 508.37896729]
[-141.22651672 512.23590088]
[-155.99104309 514.92822266]
[-170.92280579 516.43908691]
[-185.92739868 516.75872803]
[-200.90995789 515.88531494]
[-215.77575684 513.82427979]
[-230.43081665 510.58862305]
[-244.78247070 506.19885254]
[-258.73999023 500.68270874]
[-272.21511841 494.07507324]
[-285.12268066 486.41772461]
[-297.38104248 477.75906372]
[-308.91275024 468.15383911]
[-319.64483643 457.66278076]
[-329.50946045 446.35220337]
[-338.44427490 434.29364014]
[-346.39279175 421.56329346]
[-353.30474854 408.24169922]
[-359.13644409 394.41305542]
[-363.85101318 380.16479492]
[-367.41864014 365.58700562]
[-369.81674194 350.77182007]
[-371.03024292 335.81295776]
[-371.05136108 320.80499268]
[-369.88006592 305.84277344]
[-367.52368164 291.02090454]
[-363.99716187 276.43310547]
[-359.32275391 262.17163086]
[-353.53005981 248.32659912]
[-346.65567017 234.98556519]
[-338.74307251 222.23289490]
[-329.84225464 210.14920044]
[-320.00952148 198.81086731]
[-309.30706787 188.28961182]
[-297.80249023 178.65191650]
[-285.56857300 169.95875549]
[-272.68264771 162.26506042]
[-259.22616577 155.61947632]
[-245.28425598 150.06402588]
[-230.94502258 145.63383484]
[-216.29914856 142.35691833]
[-201.43920898 140.25398254]
[-186.45916748 139.33831787]
[-171.45372009 139.61572266]
[-156.51776123 141.08445740]
[-141.74571228 143.73521423]
[-127.23095703 147.55123901]
[-113.06527710 152.50840759]
[-99.33822632 158.57537842]
[-86.13659668 165.71380615]
[-73.54384613 173.87854004]
[-61.63960648 183.01795959]
[-50.49912643 193.07429504]
[-40.19284821 203.98394775]
[-35.12593079 189.97767639]
[-19.52340508 187.35627747]
[-7.83582306 177.95413208]
[3.85175824 168.55198669]
[15.53933907 159.14982605]
[27.22692108 149.74768066]
[38.91450119 140.34553528]
[50.60208130 130.94337463]
[56.05294800 114.26239777]
[74.27245331 111.59196472]
[85.81875610 102.01684570]
[90.85643768 88.97409058]
[104.60612488 86.43685150]
[109.21424866 78.54995728]
[116.39635468 76.80667114]
[128.08393860 67.40452576]
[139.77151489 58.00237274]
[151.45910645 48.60021973]
[163.14668274 39.19807053]
[174.83425903 29.79591751]
[186.01623535 19.79774666]
[196.66224670 9.23069763]
[207.30825806 -1.33634973]
[217.95426941 -11.90339756]
[218.78260803 -24.77494049]
[227.86724854 -33.35709000]
[239.96347046 -33.44555664]
[250.76562500 -43.85292816]
[261.56777954 -54.26029968]
[252.16386414 -65.95955658]
[243.84652710 -78.45468140]
[236.68273926 -91.64507294]
[230.73017883 -105.42452240]
[226.03677368 -119.68209076]
[222.64031982 -134.30297852]
[220.56816101 -149.16946411]
[219.83697510 -164.16184998]
[220.45263672 -179.15942383]
[222.41021729 -194.04142761]
[225.69395447 -208.68804932]
[230.27738953 -222.98133850]
[236.12361145 -236.80624390]
[243.18557739 -250.05142212]
[251.40641785 -262.61026001]
[260.71994019 -274.38159180]
[271.05114746 -285.27069092]
[282.31686401 -295.18984985]
[294.42636108 -304.05923462]
[307.28219604 -311.80740356]
[320.78082275 -318.37197876]
[334.81353760 -323.70010376]
[349.26736450 -327.74890137]
[364.02597046 -330.48574829]
[378.97045898 -331.88861084]
[393.98056030 -331.94619751]
[408.93539429 -330.65805054]
[423.71453857 -328.03451538]
[438.19903564 -324.09674072]
[452.27221680 -318.87643433]
[465.82080078 -312.41564941]
[478.73568726 -304.76632690]
[490.91290283 -295.99014282]
[502.25439453 -286.15771484]
[512.66888428 -275.34820557]
[522.07238770 -263.64865112]
[530.38934326 -251.15327454]
[537.55273438 -237.96266174]
[543.50488281 -224.18302917]
[548.19787598 -209.92532349]
[551.59387207 -195.30433655]
[553.66558838 -180.43778992]
[554.39630127 -165.44537354]
[553.78021240 -150.44783020]
[551.82214355 -135.56587219]
[548.53796387 -120.91935730]
[543.95410156 -106.62620544]
[538.10742188 -92.80148315]
[531.04510498 -79.55651093]
[522.82385254 -66.99794006]
[513.51000977 -55.22687531]
[503.17843628 -44.33809280]
[491.91241455 -34.41926956]
[479.80264282 -25.55026627]
[466.94659424 -17.80249023]
[453.44775391 -11.23832512]
[439.41488647 -5.91062117]
[424.96090698 -1.86227548]
[410.20223999 0.87411600]
[395.25769043 2.27652144]
[380.24758911 2.33364916]
[365.29281616 1.04503918]
[350.51373291 -1.57893300]
[336.02938843 -5.51714039]
[321.95635986 -10.73787403]
[308.40795898 -17.19910049]
[295.49328613 -24.84879303]
[283.31634521 -33.62536240]
[271.97515869 -43.45814514]
[261.17300415 -33.05076981]
[250.37084961 -22.64339828]
[246.42991638 -5.54263735]
[228.52131653 -1.25738871]
[217.87530518 9.30965900]
[207.22929382 19.87670708]
[196.58328247 30.44375420]
[211.58325195 30.41181183]
[223.17465210 39.93228531]
[226.05805969 54.65254593]
[218.91520691 67.84268188]
[205.01171875 73.47234344]
[190.70408630 68.96772766]
[182.53355408 56.38828278]
[184.23641968 41.48349762]
[172.54882812 50.88565063]
[160.86125183 60.28779984]
[149.17367554 69.68994904]
[137.48608398 79.09210205]
[125.79850769 88.49425507]
[114.18124390 97.98315430]
[109.14356232 111.02590942]
[95.39387512 113.56314850]
[83.84757233 123.13826752]
[81.87418365 135.88458252]
[72.06011963 143.62202454]
[60.00423431 142.63095093]
[48.31665421 152.03311157]
[36.62907028 161.43525696]
[24.94149017 170.83741760]
[13.25390911 180.23956299]
[1.56632817 189.64170837]
[-10.12125301 199.04386902]
[-16.02414513 213.72264099]
[-30.79069710 215.67153931]
[-22.34208679 228.07560730]
[-14.90569782 241.11172485]
[-8.52854538 254.69744873]
[-3.25094748 268.74688721]
[0.89372826 283.17123413]
[3.87927747 297.87930298]
[5.68682384 312.77804565]
[6.30494022 327.77331543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 202]
[71 200]
[72 199]
[73 198]
[74 197]
[75 196]
[76 195]
[77 194]
[79 191]
[80 190]
[82 188]
[84 187]
[85 186]
[86 185]
[87 184]
[88 183]
[89 182]
[90 174]
[91 173]
[92 172]
[93 171]
[96 169]
[97 168]
[98 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
