%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[87.57878113 488.24716187]
[76.67822266 477.65252686]
[70.66640472 463.69091797]
[70.46007538 448.49139404]
[76.09071350 434.37176514]
[86.69967651 423.48513794]
[100.66917419 417.49169922]
[100.44584656 402.49334717]
[100.22251892 387.49502563]
[99.99919128 372.49667358]
[99.77586365 357.49835205]
[99.55253601 342.50000000]
[99.10593414 327.50665283]
[90.80804443 315.13757324]
[97.92141724 301.00567627]
[97.25163269 286.02062988]
[96.58184814 271.03558350]
[95.80052948 256.05593872]
[94.90770721 241.08255005]
[94.01489258 226.10913086]
[85.17856598 217.84803772]
[84.31220245 205.38075256]
[92.42435455 195.35299683]
[91.75457001 180.36796570]
[89.77925110 178.37892151]
[88.47280121 175.48759460]
[88.18283081 171.94480896]
[89.15982056 168.12249756]
[91.51793671 164.47651672]
[83.97098541 151.63545227]
[91.91289520 137.95201111]
[92.13622284 122.95367432]
[92.35955048 107.95533752]
[79.94222260 116.37020111]
[65.57644653 112.05458069]
[59.85214615 98.18978882]
[66.98905182 84.99643707]
[81.72611237 82.20017242]
[93.19902802 91.86078644]
[94.53726196 76.92060852]
[95.87549591 61.98041916]
[88.21919250 51.60044479]
[89.64138794 39.18428040]
[98.83778381 31.32598114]
[100.39830780 16.40737724]
[101.95883179 1.48877239]
[103.51935577 -13.42983246]
[105.07987213 -28.34843636]
[93.71513367 -38.74790192]
[90.68846130 -53.67079163]
[96.95516205 -67.35262299]
[109.92142487 -74.63369751]
[111.48194885 -89.55229950]
[113.04247284 -104.47090149]
[113.82379913 -119.45053864]
[113.82379913 -134.45054626]
[113.82379913 -149.45054626]
[113.37718964 -164.44389343]
[112.48437500 -179.41729736]
[111.59156036 -194.39070129]
[110.69874573 -209.36410522]
[109.80592346 -224.33750916]
[108.91310883 -239.31091309]
[108.02029419 -254.28433228]
[93.16851807 -256.78045654]
[79.25133514 -262.51635742]
[66.96550751 -271.20135498]
[56.92534256 -282.39727783]
[49.63198090 -295.54046631]
[45.44839478 -309.97018433]
[44.58131409 -324.96185303]
[47.07101059 -339.76342773]
[52.78945160 -353.63308716]
[61.44686890 -365.87646484]
[72.60644531 -375.88140869]
[85.70635223 -383.14849854]
[100.08803558 -387.31613159]
[99.19522095 -402.28952026]
[98.30240631 -417.26293945]
[97.40959167 -432.23632812]
[88.86460876 -445.55151367]
[95.83065033 -458.71673584]
[94.93783569 -473.69015503]
[80.88406372 -479.54275513]
[70.80609894 -490.87066650]
[66.66281891 -505.39144897]
[69.22451782 -520.21032715]
[77.93031311 -532.39715576]
[91.00988007 -539.56585693]
[90.11705780 -554.53924561]
[89.22424316 -569.51269531]
[88.33142853 -584.48608398]
[73.54832458 -587.50640869]
[60.05109787 -594.25079346]
[48.76000595 -604.25952148]
[40.44489288 -616.85003662]
[35.67269897 -631.16394043]
[34.76879883 -646.22534180]
[37.79482651 -661.00726318]
[44.54446030 -674.50189209]
[54.55749512 -685.78912354]
[67.15122986 -694.09936523]
[81.46700287 -698.86602783]
[96.52873230 -699.76409912]
[111.30950165 -696.73236084]
[124.80151367 -689.97753906]
[136.08488464 -679.96014404]
[144.39025879 -667.36322021]
[149.15139771 -653.04559326]
[150.04367065 -637.98352051]
[147.00622559 -623.20391846]
[140.24618530 -609.71453857]
[130.22442627 -598.43499756]
[117.62428284 -590.13452148]
[103.30483246 -585.37890625]
[104.19765472 -570.40551758]
[105.09046936 -555.43206787]
[105.98328400 -540.45867920]
[119.82203674 -534.89501953]
[129.91432190 -523.82904053]
[134.21881104 -509.41961670]
[131.83041382 -494.50933838]
[123.16996002 -482.06411743]
[109.91123962 -474.58297729]
[110.80405426 -459.60955811]
[119.28517914 -447.36538696]
[112.38299561 -433.12915039]
[113.27581024 -418.15573120]
[114.16862488 -403.18234253]
[115.06144714 -388.20892334]
[129.83647156 -385.77984619]
[143.70712280 -380.12091064]
[155.97651672 -371.51296997]
[166.02748108 -360.38510132]
[173.35356140 -347.29324341]
[177.58450317 -332.89239502]
[178.50503540 -317.90390015]
[176.06579590 -303.07928467]
[170.38592529 -289.16256714]
[161.74731445 -276.85290527]
[150.58059692 -266.76950073]
[137.44361877 -259.42044067]
[122.99369812 -255.17713928]
[123.88651276 -240.20373535]
[124.77933502 -225.23033142]
[125.67214966 -210.25692749]
[126.56496429 -195.28352356]
[127.45777893 -180.31011963]
[128.35060120 -165.33670044]
[130.35530090 -163.37730408]
[131.70465088 -160.50573730]
[132.04734802 -156.96766663]
[131.12736511 -153.13124084]
[128.82379150 -149.45054626]
[128.82379150 -134.45054626]
[128.82379150 -119.45053864]
[139.36814880 -130.11903381]
[154.29093933 -131.63894653]
[166.76968384 -123.31542206]
[171.09924316 -108.95384979]
[165.30023193 -95.12014008]
[152.02384949 -88.13889313]
[137.33990479 -91.20183563]
[127.96107483 -102.91037750]
[126.40055847 -87.99177551]
[124.84003448 -73.07317352]
[136.01887512 -63.26646042]
[139.31858826 -48.58396149]
[133.26928711 -34.61043930]
[119.99848175 -26.78791428]
[118.43795776 -11.86930943]
[116.87743378 3.04929543]
[115.31690979 17.96789932]
[113.75638580 32.88650513]
[121.75547028 48.50641632]
[110.81568146 63.31865311]
[109.47744751 78.25884247]
[108.13920593 93.19902039]
[107.35788727 108.17866516]
[107.13455963 123.17700195]
[106.91123199 138.17533875]
[114.44220734 152.08917236]
[106.51628113 164.69984436]
[106.73960876 179.69818115]
[107.40939331 194.68321228]
[117.67687225 209.96916199]
[108.98830414 225.21632385]
[109.88111877 240.18972778]
[110.77393341 255.16313171]
[114.40858459 263.54330444]
[111.56688690 270.36581421]
[112.23667145 285.35083008]
[112.90645599 300.33587646]
[121.25225067 313.77679443]
[114.09097290 326.83685303]
[117.32133484 332.60543823]
[117.17544556 338.28659058]
[114.55087280 342.27667236]
[114.77420044 357.27502441]
[114.99752808 372.27334595]
[115.22085571 387.27169800]
[115.44418335 402.27001953]
[115.66751099 417.26837158]
[129.80926514 422.84323120]
[140.73767090 433.40914917]
[146.78619385 447.35488892]
[147.03251648 462.55383301]
[141.43904114 476.68823242]
[130.85876465 487.60272217]
[116.90507507 493.63290405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[13 195]
[15 193]
[16 192]
[17 191]
[18 189]
[19 188]
[20 187]
[23 185]
[24 184]
[29 183]
[31 181]
[32 180]
[33 179]
[39 178]
[40 177]
[41 176]
[44 174]
[45 173]
[46 172]
[47 171]
[48 170]
[52 166]
[53 165]
[54 164]
[55 156]
[56 155]
[57 154]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[77 130]
[78 129]
[79 128]
[80 127]
[82 125]
[83 124]
[89 118]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
