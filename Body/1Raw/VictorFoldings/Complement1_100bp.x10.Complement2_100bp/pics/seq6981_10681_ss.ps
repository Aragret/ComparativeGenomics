%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[98.09696960 750.05633545]
[83.70932007 745.78674316]
[69.70101929 740.40142822]
[56.15842819 733.93365479]
[43.16505051 726.42321777]
[30.80098724 717.91650391]
[19.14247131 708.46594238]
[8.26138401 698.12982178]
[-1.77519011 686.97180176]
[-10.90537071 675.06072998]
[-19.07286835 662.46997070]
[-26.22732353 649.27728271]
[-32.32463074 635.56390381]
[-37.32719040 621.41436768]
[-41.20416641 606.91601562]
[-43.93165588 592.15814209]
[-45.49283600 577.23175049]
[-45.87808990 562.22888184]
[-45.08503342 547.24206543]
[-43.11856461 532.36364746]
[-39.99080276 517.68542480]
[-35.72103119 503.29779053]
[-30.33557701 489.28955078]
[-23.86764336 475.74700928]
[-16.35710907 462.75372314]
[-7.85027552 450.38973999]
[1.60040545 438.73132324]
[11.93666744 427.85034180]
[23.09478378 417.81387329]
[35.00595856 408.68383789]
[47.59675598 400.51644897]
[60.78955078 393.36212158]
[74.50299835 387.26498413]
[88.65255737 382.26254272]
[103.15097809 378.38571167]
[117.90888214 375.65838623]
[116.34835815 360.73977661]
[114.78783417 345.82116699]
[113.22731018 330.90258789]
[111.66678619 315.98397827]
[102.64739227 304.13070679]
[108.90701294 289.60046387]
[107.34648895 274.68185425]
[105.56401825 259.78814697]
[103.56000519 244.92262268]
[94.19169617 233.34315491]
[100.01591492 218.63299561]
[98.01190186 203.76745605]
[96.00788879 188.90193176]
[86.98338318 200.88351440]
[72.39743042 204.38351440]
[58.91853333 197.80177307]
[52.70906067 184.14738464]
[56.60789871 169.66293335]
[68.83255768 160.97053528]
[83.79407501 162.04423523]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[81.47133636 84.00956726]
[66.60041046 85.97312164]
[53.87938309 78.02481842]
[49.12413788 63.79851913]
[54.50870895 49.79829025]
[67.57134247 42.42485046]
[82.33998108 45.04923630]
[92.06324768 56.47335052]
[93.17889404 41.51489639]
[94.29454803 26.55644417]
[95.41019440 11.59799004]
[93.38675690 7.75615644]
[92.75467682 3.86193085]
[93.35955811 0.35914344]
[94.91874695 -2.40410304]
[97.06364441 -4.20898008]
[99.06765747 -19.07450867]
[101.07167053 -33.94003677]
[87.46930695 -40.53041840]
[76.58468628 -50.98831177]
[69.47505951 -64.28047180]
[66.82559967 -79.09922791]
[68.88338470 -93.99111176]
[75.43443298 -107.49942780]
[85.82584381 -118.30677795]
[99.03089142 -125.36346436]
[113.75042725 -127.98951721]
[115.75444031 -142.85504150]
[117.75845337 -157.72056580]
[119.76246643 -172.58610535]
[121.43401337 -187.49267578]
[122.77224731 -202.43286133]
[124.11048126 -217.37304688]
[125.44871521 -232.31323242]
[111.38749695 -237.83219910]
[99.45158386 -247.09019470]
[90.60855103 -259.33673096]
[85.57527161 -273.57901001]
[84.75977325 -288.66250610]
[88.22815704 -303.36444092]
[95.69926453 -316.49301147]
[106.56743622 -326.98391724]
[119.95164490 -333.98675537]
[134.76689148 -336.93380737]
[149.81217957 -335.58615112]
[163.86784363 -330.05307007]
[175.79444885 -320.78308105]
[184.62518311 -308.52764893]
[189.64414978 -294.28033447]
[190.44448853 -279.19601440]
[186.96133423 -264.49758911]
[179.47705078 -251.37652588]
[168.59834290 -240.89653015]
[155.20710754 -233.90715027]
[140.38890076 -230.97499084]
[139.05065918 -216.03480530]
[137.71243286 -201.09461975]
[136.37419128 -186.15443420]
[138.34230042 -183.22888184]
[138.99118042 -179.20469666]
[137.81988525 -174.71234131]
[134.62799072 -170.58209229]
[132.62397766 -155.71655273]
[130.61996460 -140.85102844]
[128.61595154 -125.98550415]
[142.11463928 -119.55536652]
[152.97962952 -109.25380707]
[160.13822937 -96.08055878]
[162.87832642 -81.31970215]
[160.91917419 -66.41452789]
[154.44020081 -52.82637024]
[144.06452942 -41.89139175]
[130.79914856 -34.68914413]
[115.93719482 -31.93602180]
[113.93318176 -17.07049370]
[111.92916870 -2.20496631]
[110.36864471 12.71363831]
[109.25299835 27.67209244]
[108.13735199 42.63054657]
[107.02169800 57.58899689]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[110.87342072 186.89791870]
[112.87743378 201.76344299]
[114.88144684 216.62898254]
[124.39309692 229.27172852]
[118.42553711 242.91860962]
[120.42955017 257.78414917]
[124.16167450 263.24148560]
[124.52321625 268.91302490]
[122.26509094 273.12133789]
[123.82561493 288.03994751]
[132.95663452 300.96029663]
[126.58539581 314.42343140]
[128.14591980 329.34204102]
[129.70643616 344.26065063]
[131.26696777 359.17926025]
[132.82748413 374.09786987]
[147.83032227 373.71215820]
[162.81718445 374.50476074]
[177.69566345 376.47076416]
[192.37400818 379.59808350]
[206.76174927 383.86740112]
[220.77015686 389.25244141]
[234.31288147 395.71994019]
[247.30641174 403.23007202]
[259.67065430 411.73654175]
[271.32934570 421.18685913]
[282.21066284 431.52279663]
[292.24746704 442.68060303]
[301.37786865 454.59149170]
[309.54562378 467.18203735]
[316.70034790 480.37463379]
[322.79794312 494.08789062]
[327.80078125 508.23727417]
[331.67807007 522.73559570]
[334.40585327 537.49340820]
[335.96734619 552.41973877]
[336.35290527 567.42260742]
[335.56015015 582.40942383]
[333.59399414 597.28790283]
[330.46652222 611.96624756]
[326.19705200 626.35394287]
[320.81188965 640.36224365]
[314.34420776 653.90490723]
[306.83395386 666.89837646]
[298.32736206 679.26251221]
[288.87692261 690.92114258]
[278.54089355 701.80230713]
[267.38296509 711.83905029]
[255.47198486 720.96929932]
[242.88136292 729.13696289]
[229.68870544 736.29156494]
[215.97538757 742.38897705]
[201.82592773 747.39172363]
[187.32759094 751.26879883]
[172.56974792 753.99645996]
[157.64337158 755.55780029]
[142.64053345 755.94317627]
[127.65368652 755.15026855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[42 162]
[43 161]
[44 158]
[45 157]
[47 155]
[48 154]
[49 153]
[57 152]
[58 151]
[59 150]
[60 149]
[61 148]
[63 146]
[64 145]
[72 144]
[73 143]
[74 142]
[75 141]
[80 140]
[81 139]
[82 138]
[91 129]
[92 128]
[93 127]
[94 126]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
