%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[205.46995544 422.00823975]
[214.50566101 409.98892212]
[225.44279480 399.66964722]
[237.96665955 391.34732056]
[231.89282227 377.63208008]
[225.81898499 363.91680908]
[219.74514771 350.20153809]
[213.67132568 336.48626709]
[207.59748840 322.77099609]
[200.81748962 309.39071655]
[193.34974670 296.38177490]
[185.88200378 283.37283325]
[174.29127502 279.91140747]
[167.96331787 269.13455200]
[170.76077271 256.54339600]
[163.48754883 243.42471313]
[156.21430969 230.30601501]
[148.94108582 217.18731689]
[141.66786194 204.06861877]
[134.39462280 190.94993591]
[127.12139893 177.83123779]
[121.95764160 191.91439819]
[108.40656281 198.34622192]
[94.23084259 193.44226074]
[87.55096436 180.01173401]
[92.19348145 165.74824524]
[105.49893188 158.82257080]
[119.84462738 163.20146179]
[113.77079773 149.48620605]
[107.69696045 135.77093506]
[101.62313080 122.05566406]
[95.54929352 108.34040070]
[91.21086121 105.39218903]
[88.83307648 100.22309875]
[89.50556946 94.12517548]
[83.84278870 80.23514557]
[78.18000031 66.34512329]
[72.51721191 52.45509338]
[66.44338226 38.73982620]
[59.96388245 25.21148109]
[53.48438644 11.68313599]
[46.80419159 -1.74723983]
[39.92477798 -15.07666874]
[33.04536819 -28.40609741]
[17.83837128 -30.86647224]
[7.12128258 -41.68300629]
[4.85515547 -56.56012344]
[11.70185757 -69.76091003]
[4.82244539 -83.09033966]
[-2.05696726 -96.41976929]
[-8.93637943 -109.74919891]
[-15.81579208 -123.07862854]
[-30.55767632 -119.89868164]
[-45.60866165 -120.64252472]
[-59.94306564 -125.25346375]
[-72.58560181 -133.41145325]
[-82.67773438 -144.55535889]
[-89.53595734 -157.92150879]
[-92.69812012 -172.59602356]
[-91.95453644 -187.57731628]
[-87.36189270 -201.84449768]
[-79.23896790 -214.42681885]
[-68.14453125 -224.46987915]
[-75.02394104 -237.79930115]
[-81.90335846 -251.12873840]
[-88.78276825 -264.45816040]
[-95.66218567 -277.78759766]
[-109.82610321 -272.77789307]
[-124.54026794 -269.74356079]
[-139.53056335 -268.74114990]
[-154.51773071 -269.78933716]
[-169.22254944 -272.86856079]
[-183.37110901 -277.92147827]
[-196.69981384 -284.85397339]
[-208.96035767 -293.53686523]
[-219.92434692 -303.80844116]
[-229.38751221 -315.47729492]
[-237.17355347 -328.32608032]
[-243.13745117 -342.11541748]
[-247.16807556 -356.58840942]
[-249.19035339 -371.47546387]
[-249.16661072 -386.49920654]
[-247.09727478 -401.37979126]
[-243.02091980 -415.83996582]
[-237.01345825 -429.61038208]
[-229.18682861 -442.43447876]
[-219.68681335 -454.07336426]
[-208.69041443 -464.31021118]
[-196.40248108 -472.95431519]
[-183.05192566 -479.84463501]
[-168.88746643 -484.85281372]
[-154.17297363 -487.88552856]
[-139.18257141 -488.88632202]
[-124.19551849 -487.83651733]
[-109.49102020 -484.75570679]
[-95.34300995 -479.70123291]
[-82.01506042 -472.76730347]
[-69.75545502 -464.08306885]
[-58.79258347 -453.81033325]
[-49.33068466 -442.14044189]
[-41.54602051 -429.29083252]
[-35.58362198 -415.50085449]
[-31.55455971 -401.02740479]
[-29.53389359 -386.14013672]
[-29.55926895 -371.11639404]
[-31.63021088 -356.23605347]
[-35.70814133 -341.77630615]
[-41.71708679 -328.00653076]
[-49.54510880 -315.18328857]
[-59.04637527 -303.54541016]
[-70.04388428 -293.30978394]
[-82.33275604 -284.66699219]
[-75.45333862 -271.33758545]
[-68.57392883 -258.00814819]
[-61.69451523 -244.67871094]
[-54.81510162 -231.34928894]
[-40.20177078 -234.57418823]
[-25.24014473 -233.90596008]
[-10.95037079 -229.38414001]
[1.69164944 -221.31124878]
[11.82092094 -210.23251343]
[18.74253273 -196.89907837]
[21.97933197 -182.21708679]
[21.30481148 -167.18606567]
[16.75895119 -152.83088684]
[8.64589977 -140.13192749]
[-2.48636317 -129.95803833]
[4.39304924 -116.62860870]
[11.27246189 -103.29917908]
[18.15187454 -89.96974945]
[25.03128624 -76.64031982]
[39.75767517 -74.57356262]
[50.57118225 -64.10781097]
[53.17908859 -49.10606766]
[46.37479782 -35.28551102]
[53.25420761 -21.95608139]
[60.13362122 -8.62665272]
[64.33025360 -6.34688663]
[67.13930511 -1.40661800]
[67.01273346 5.20364046]
[73.49222565 18.73198509]
[79.97172546 32.26033020]
[82.56780243 33.31792831]
[84.90137482 35.46759415]
[86.55438995 38.61448669]
[87.15081787 42.51433563]
[86.40724182 46.79230881]
[92.07002258 60.68233490]
[97.73281097 74.57236481]
[103.39559937 88.46238708]
[109.26455688 102.26656342]
[115.33839417 115.98183441]
[121.41223145 129.69709778]
[127.48606110 143.41236877]
[133.55989075 157.12762451]
[140.24009705 170.55801392]
[147.51332092 183.67669678]
[154.78654480 196.79539490]
[162.05978394 209.91409302]
[169.33300781 223.03279114]
[176.60623169 236.15147400]
[183.87947083 249.27017212]
[199.88008118 258.38400269]
[198.89096069 275.90509033]
[206.35870361 288.91403198]
[213.82644653 301.92297363]
[217.65988159 287.42111206]
[229.84518433 278.67361450]
[244.81140137 279.67977905]
[255.71617126 289.97958374]
[257.57400513 304.86407471]
[249.53549194 317.52828979]
[235.27575684 322.18231201]
[221.31274414 316.69717407]
[227.38658142 330.41244507]
[233.46041870 344.12771606]
[239.53425598 357.84295654]
[245.60809326 371.55822754]
[251.68191528 385.27349854]
[266.26144409 381.59301758]
[281.25323486 380.42959595]
[296.22601318 381.81671143]
[310.74896240 385.71444702]
[324.40420532 392.01068115]
[336.79885864 400.52420044]
[347.57632446 411.01010132]
[356.42651367 423.16668701]
[363.09475708 436.64416504]
[367.38922119 451.05477905]
[369.18637085 465.98388672]
[368.43441772 481.00195312]
[365.15509033 495.67687988]
[359.44268799 509.58648682]
[351.46157837 522.33050537]
[341.44137573 533.54223633]
[329.67041016 542.89923096]
[316.48736572 550.13214111]
[302.27151489 555.03289795]
[287.43185425 557.46051025]
[272.39541626 557.34509277]
[257.59478760 554.69000244]
[243.45582581 549.57165527]
[230.38533020 542.13726807]
[218.75935364 532.60076904]
[208.91241455 521.23657227]
[201.12782288 508.37155151]
[195.62956238 494.37594604]
[192.57583618 479.65240479]
[192.05447388 464.62454224]
[194.08052063 449.72476196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 179]
[5 178]
[6 177]
[7 176]
[8 175]
[9 174]
[10 166]
[11 165]
[12 164]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 142]
[40 141]
[41 140]
[42 137]
[43 136]
[44 135]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
