%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[221.48399353 527.71289062]
[220.10440063 512.76379395]
[220.22013855 497.75164795]
[221.83006287 482.82559204]
[224.91813660 468.13403320]
[229.45370483 453.82293701]
[235.39167786 440.03457642]
[242.67304993 426.90597534]
[251.22543335 414.56759644]
[260.96383667 403.14208984]
[271.79147339 392.74301147]
[283.60073853 383.47369385]
[275.55953979 370.81118774]
[267.51837158 358.14865112]
[254.16398621 351.55249023]
[253.29759216 335.75503540]
[245.25642395 323.09249878]
[237.21525574 310.42996216]
[229.17407227 297.76745605]
[221.03886414 285.16513062]
[212.81005859 272.62374878]
[204.58125305 260.08233643]
[196.07441711 247.72782898]
[187.29382324 235.56637573]
[178.51321411 223.40492249]
[169.73260498 211.24346924]
[160.95201111 199.08200073]
[147.42962646 202.83497620]
[133.40859985 201.74447632]
[120.57471466 195.92117310]
[110.47800446 186.04602051]
[104.34556580 173.29061890]
[102.93240356 159.17835999]
[106.42855835 145.40235901]
[114.43382263 133.62242126]
[105.83525848 121.33158875]
[97.23669434 109.04074860]
[92.41217804 106.98210144]
[89.08452606 102.36690521]
[88.57151031 96.25350189]
[80.34270477 83.71209717]
[66.30300140 76.41844940]
[65.79009247 61.53268051]
[51.75038528 54.23903275]
[51.23747253 39.35326004]
[43.00866699 26.81185913]
[34.77985764 14.27045918]
[26.55105019 1.72905898]
[18.32224083 -10.81234169]
[10.09343338 -23.35374260]
[-6.54072094 -31.25224876]
[-6.85749769 -48.79837418]
[-15.27211571 -61.21586990]
[-23.68673515 -73.63336945]
[-24.80426788 -58.67505264]
[-33.74621582 -46.63173676]
[-47.74182510 -41.23516464]
[-62.45439529 -44.15752411]
[-73.32508850 -54.49329376]
[-76.98548889 -69.03982544]
[-72.30139160 -83.28971100]
[-60.72420502 -92.82746887]
[-45.84125900 -94.69772339]
[-32.26399231 -88.32079315]
[-38.94418716 -101.75116730]
[-45.62438202 -115.18154144]
[-52.30457687 -128.61192322]
[-58.98477173 -142.04229736]
[-73.23719788 -137.28681946]
[-88.01276398 -134.56124878]
[-103.02386475 -133.91865540]
[-117.97830963 -135.37152100]
[-132.58499146 -138.89158630]
[-146.55960083 -144.41032410]
[-159.63011169 -151.82031250]
[-171.54209900 -160.97731018]
[-182.06370544 -171.70306396]
[-190.99011230 -183.78881836]
[-198.14756775 -196.99931335]
[-203.39675903 -211.07737732]
[-206.63549805 -225.74900818]
[-207.80073547 -240.72860718]
[-206.86979675 -255.72459412]
[-203.86080933 -270.44506836]
[-198.83235168 -284.60348511]
[-191.88227844 -297.92422485]
[-183.14588928 -310.14804077]
[-172.79324341 -321.03698730]
[-161.02584839 -330.37905884]
[-148.07276917 -337.99246216]
[-134.18614197 -343.72900391]
[-119.63626862 -347.47695923]
[-104.70636749 -349.16342163]
[-89.68705750 -348.75558472]
[-74.87068176 -346.26132202]
[-60.54566193 -341.72921753]
[-46.99082947 -335.24749756]
[-34.47003174 -326.94235229]
[-23.22699738 -316.97537231]
[-13.48056793 -305.54064941]
[-5.42046309 -292.86071777]
[0.79642385 -279.18237305]
[5.04908037 -264.77194214]
[7.25472689 -249.90986633]
[7.37042999 -234.88545227]
[5.39393759 -219.99118042]
[1.36372268 -205.51693726]
[-4.64176559 -191.74449158]
[-12.50562859 -178.94192505]
[-22.07479477 -167.35842896]
[-33.16299438 -157.21949768]
[-45.55439758 -148.72248840]
[-38.87420273 -135.29211426]
[-32.19400787 -121.86173248]
[-25.51381302 -108.43135834]
[-18.83361816 -95.00098419]
[-11.26923943 -82.04798889]
[-2.85462070 -69.63049316]
[5.55999804 -57.21299362]
[17.37607765 -54.62324142]
[24.48806190 -44.34688950]
[22.63483429 -31.58255005]
[30.86364174 -19.04114914]
[39.09244919 -6.49974871]
[47.32125854 6.04165125]
[55.55006409 18.58305168]
[63.77887344 31.12445259]
[77.22999573 37.52105713]
[78.33148956 53.30387115]
[91.78261566 59.70047379]
[92.88410187 75.48329163]
[101.11291504 88.02468872]
[109.52753448 100.44218445]
[118.12609863 112.73302460]
[126.72466278 125.02386475]
[142.40049744 121.44947052]
[158.20985413 124.15781403]
[171.73689270 132.70501709]
[180.92610168 145.75730896]
[184.39456177 161.29902649]
[181.64004517 176.94387817]
[173.11346436 190.30140686]
[181.89407349 202.46286011]
[190.67466736 214.62431335]
[199.45527649 226.78576660]
[208.23587036 238.94721985]
[212.99884033 241.08291626]
[216.15110779 244.49122620]
[217.47763062 248.34548950]
[217.12265015 251.85353088]
[225.35145569 264.39492798]
[233.58026123 276.93634033]
[240.90452576 282.39462280]
[241.83660889 289.72628784]
[249.87777710 302.38879395]
[257.91894531 315.05133057]
[265.96011353 327.71386719]
[279.88967896 335.21572876]
[280.18090820 350.10748291]
[288.22207642 362.77001953]
[296.26324463 375.43252563]
[309.67449951 368.68588257]
[323.69085693 363.30810547]
[338.17300415 359.35266113]
[352.97705078 356.85882568]
[367.95581055 355.85144043]
[382.96047974 356.34045410]
[397.84185791 358.32104492]
[412.45208740 361.77352905]
[426.64596558 366.66360474]
[440.28240967 372.94262695]
[453.22589111 380.54821777]
[465.34774780 389.40478516]
[476.52755737 399.42431641]
[486.65414429 410.50720215]
[495.62692261 422.54330444]
[503.35665894 435.41302490]
[509.76657104 448.98843384]
[514.79290771 463.13461304]
[518.38580322 477.71096802]
[520.50946045 492.57263184]
[521.14276123 507.57186890]
[520.27954102 522.55963135]
[517.92822266 537.38696289]
[514.11224365 551.90649414]
[508.86956787 565.97393799]
[502.25222778 579.44946289]
[494.32604980 592.19915771]
[485.16976929 604.09625244]
[474.87438965 615.02258301]
[463.54226685 624.86944580]
[451.28601074 633.53912354]
[438.22744751 640.94531250]
[424.49630737 647.01452637]
[410.22912598 651.68634033]
[395.56765747 654.91436768]
[380.65765381 656.66656494]
[365.64727783 656.92541504]
[350.68569946 655.68841553]
[335.92166138 652.96789551]
[321.50186157 648.79083252]
[307.56961060 643.19873047]
[294.26339722 636.24725342]
[281.71548462 628.00537109]
[270.05053711 618.55511475]
[259.38452148 607.99029541]
[249.82344055 596.41601562]
[241.46231079 583.94726562]
[234.38423157 570.70794678]
[228.65956116 556.82965088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 161]
[13 160]
[14 159]
[16 157]
[17 156]
[18 155]
[19 154]
[20 152]
[21 151]
[22 150]
[23 146]
[24 145]
[25 144]
[26 143]
[27 142]
[35 135]
[36 134]
[37 133]
[40 132]
[41 131]
[43 129]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[52 119]
[53 118]
[54 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
