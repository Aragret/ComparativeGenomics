%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[94.94544983 496.45660400]
[81.70864868 485.86303711]
[88.22389984 470.21093750]
[88.67050171 455.21759033]
[89.11711121 440.22424316]
[89.56371307 425.23089600]
[82.20878601 412.27890015]
[90.35353851 398.71520996]
[90.80014038 383.72186279]
[91.24674988 368.72851562]
[77.59539032 362.68121338]
[67.27136230 351.83871460]
[61.87043381 337.83175659]
[62.24467850 322.78359985]
[68.36820221 308.98809814]
[79.33632660 298.56008911]
[93.49915314 293.11123657]
[93.94576263 278.11788940]
[94.39236450 263.12454224]
[94.83897400 248.13117981]
[95.28558350 233.13783264]
[95.50891113 218.13949585]
[95.50891113 203.13949585]
[95.50891113 188.13949585]
[95.50891113 173.13949585]
[95.50891113 158.13949585]
[95.50891113 143.13949585]
[95.50891113 128.13949585]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[84.09734344 44.54194260]
[81.87223053 29.70790100]
[79.64710999 14.87385654]
[67.84506989 0.73902714]
[74.90026093 -15.32930374]
[72.45453644 -30.12857437]
[70.00880432 -44.92784500]
[67.56307983 -59.72711563]
[64.89728546 -74.48833466]
[54.64998627 -86.54251862]
[59.79468918 -100.52040863]
[56.90941620 -115.24029541]
[54.02414322 -129.96018982]
[41.60272598 -143.55392456]
[47.93338776 -159.92126465]
[44.82927704 -174.59657288]
[41.72516632 -189.27186584]
[38.62105560 -203.94717407]
[35.51694870 -218.62248230]
[20.66152573 -216.50451660]
[5.69781494 -215.38352966]
[-9.30735397 -215.26451111]
[-24.28696442 -216.14801025]
[-39.17411041 -218.03005981]
[-53.90230560 -220.90225220]
[-68.40576935 -224.75178528]
[-82.61972046 -229.56143188]
[-96.48068237 -235.30973816]
[-109.92674255 -241.97102356]
[-122.89785004 -249.51553345]
[-135.33607483 -257.90957642]
[-147.18585205 -267.11566162]
[-158.39427185 -277.09265137]
[-168.91127014 -287.79602051]
[-178.68988037 -299.17794800]
[-187.68640137 -311.18759155]
[-195.86068726 -323.77133179]
[-203.17622375 -336.87295532]
[-209.60031128 -350.43392944]
[-215.10427856 -364.39370728]
[-219.66354370 -378.68994141]
[-223.25773621 -393.25878906]
[-225.87081909 -408.03515625]
[-227.49110413 -422.95306396]
[-228.11135864 -437.94589233]
[-227.72880554 -452.94665527]
[-226.34516907 -467.88836670]
[-223.96662903 -482.70428467]
[-220.60380554 -497.32827759]
[-216.27169800 -511.69497681]
[-210.98968506 -525.74023438]
[-204.78132629 -539.40136719]
[-197.67437744 -552.61724854]
[-189.70057678 -565.32897949]
[-180.89552307 -577.47967529]
[-171.29853821 -589.01519775]
[-160.95251465 -599.88391113]
[-149.90364075 -610.03729248]
[-138.20124817 -619.43005371]
[-125.89763641 -628.02014160]
[-113.04773712 -635.76934814]
[-99.70894623 -642.64288330]
[-85.94083405 -648.61016846]
[-71.80490112 -653.64453125]
[-57.36427307 -657.72344971]
[-42.68345261 -660.82867432]
[-27.82800484 -662.94647217]
[-12.86427975 -664.06726074]
[2.14089131 -664.18609619]
[17.12049103 -663.30242920]
[32.00761414 -661.42016602]
[46.73577499 -658.54779053]
[61.23918533 -654.69805908]
[75.45307922 -649.88824463]
[89.31396484 -644.13977051]
[102.75994873 -637.47833252]
[115.73095703 -629.93365479]
[128.16906738 -621.53942871]
[140.01873779 -612.33319092]
[151.22703552 -602.35607910]
[161.74389648 -591.65258789]
[171.52235413 -580.27050781]
[180.51873779 -568.26074219]
[188.69287109 -555.67694092]
[196.00822449 -542.57519531]
[202.43214417 -529.01416016]
[207.93594360 -515.05432129]
[212.49502563 -500.75802612]
[216.08903503 -486.18911743]
[218.70193481 -471.41271973]
[220.32202148 -456.49481201]
[220.94209290 -441.50198364]
[220.55935669 -426.50122070]
[219.17553711 -411.55950928]
[216.79679871 -396.74362183]
[213.43379211 -382.11968994]
[209.10150146 -367.75305176]
[203.81930542 -353.70782471]
[197.61079407 -340.04681396]
[190.50367737 -326.83099365]
[182.52970886 -314.11938477]
[173.72450256 -301.96875000]
[164.12738037 -290.43338013]
[153.78121948 -279.56478882]
[142.73220825 -269.41152954]
[131.02970886 -260.01895142]
[118.72599030 -251.42897034]
[105.87599182 -243.67999268]
[92.53710938 -236.80659485]
[78.76892853 -230.83947754]
[64.63292694 -225.80532837]
[50.19224930 -221.72659302]
[53.29636002 -207.05128479]
[56.40047073 -192.37597656]
[59.50458145 -177.70068359]
[62.60868835 -163.02537537]
[72.57272339 -156.16647339]
[75.27890778 -143.96563721]
[68.74403381 -132.84545898]
[71.62931061 -118.12557220]
[74.51457977 -103.40567780]
[84.55550385 -92.40435791]
[79.61717224 -77.37360382]
[83.01063538 -74.01303101]
[84.32904053 -68.48503113]
[82.36235046 -62.17284393]
[84.80807495 -47.37357330]
[87.25380707 -32.57430267]
[89.69953156 -17.77503014]
[99.34735870 -10.47804451]
[101.50605011 1.83145642]
[94.48115540 12.64873981]
[96.70626831 27.48278427]
[98.93138885 42.31682587]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[116.18211365 97.66567993]
[128.79707336 89.55009460]
[143.77467346 88.73056793]
[157.19979858 95.42131805]
[165.56314087 107.87339783]
[166.67855835 122.83186340]
[160.25448608 136.38661194]
[147.97015381 144.99446106]
[133.03665161 146.40534973]
[119.35757446 140.25045776]
[110.50891113 128.13949585]
[110.50891113 143.13949585]
[110.50891113 158.13949585]
[110.50891113 173.13949585]
[110.50891113 188.13949585]
[110.50891113 203.13949585]
[110.50891113 218.13949585]
[113.47846985 224.04653931]
[113.07904816 229.71553040]
[110.27893066 233.58444214]
[109.83232117 248.57778931]
[109.38571930 263.57113647]
[108.93910980 278.56448364]
[108.49250793 293.55783081]
[122.30590057 299.84002686]
[132.63389587 310.90237427]
[137.92544556 325.03790283]
[137.40333557 340.08166504]
[131.17828369 353.74230957]
[120.22719574 363.95111084]
[106.24009705 369.17510986]
[105.79349518 384.16848755]
[105.34688568 399.16183472]
[112.66987610 413.18624878]
[104.55706787 425.67752075]
[104.11045837 440.67086792]
[103.66385651 455.66421509]
[103.21724701 470.65756226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[8 205]
[9 204]
[10 203]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 189]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 172]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[38 162]
[39 161]
[40 160]
[41 159]
[42 156]
[44 154]
[45 153]
[46 152]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
