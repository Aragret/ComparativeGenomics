%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[136.93830872 606.39965820]
[128.13371277 594.24493408]
[120.36293030 581.40454102]
[113.67903900 567.96636963]
[108.12770844 554.02209473]
[103.74685669 539.66705322]
[100.56640625 524.99926758]
[98.60808563 510.11892700]
[97.88526917 495.12768555]
[98.40290070 480.12796021]
[100.15744019 465.22222900]
[103.13690186 450.51226807]
[107.32093048 436.09863281]
[112.68095398 422.07971191]
[119.18034363 408.55133057]
[126.77471161 395.60586548]
[135.41218567 383.33175659]
[145.03373718 371.81283569]
[155.57366943 361.12783813]
[166.95996094 351.34970093]
[179.11483765 342.54525757]
[191.95527649 334.77462769]
[185.27508545 321.34423828]
[178.59489441 307.91387939]
[171.91470337 294.48348999]
[165.23449707 281.05313110]
[158.55430603 267.62274170]
[151.87411499 254.19236755]
[145.19392395 240.76199341]
[129.04635620 240.15472412]
[115.32943726 231.43681335]
[107.83782196 216.90777588]
[108.70040131 200.48976135]
[117.77632141 186.66877747]
[110.89691162 173.33935547]
[110.62511444 188.33688354]
[105.56030273 202.45593262]
[96.23696899 214.20648193]
[83.63903046 222.34848022]
[69.09597015 226.02264404]
[54.14256668 224.84127808]
[40.35687637 218.92901611]
[29.19374275 208.90982056]
[21.83123398 195.84101868]
[19.04633331 181.10180664]
[21.13293839 166.24765015]
[27.87084770 152.84613037]
[38.54898834 142.31155396]
[52.04047394 135.75566101]
[66.92151642 133.87030029]
[81.62168121 136.85444641]
[94.58963013 144.39317322]
[104.45691681 155.69105530]
[101.13465881 141.06359863]
[97.81240082 126.43613434]
[94.49014282 111.80867767]
[90.99606323 126.39604187]
[84.27455902 139.80580139]
[74.67823029 151.33447266]
[62.71047592 160.37731934]
[48.99910736 166.45994568]
[34.26338959 169.26327515]
[19.27633476 168.64025879]
[4.82412958 164.62358093]
[-8.33509159 157.42393494]
[-19.51102257 147.41900635]
[-28.11739349 135.13362122]
[-33.70273590 121.21228027]
[-35.97405243 106.38523865]
[-34.81219101 91.43030548]
[-30.27810287 77.13198090]
[-22.60963821 64.24033356]
[-12.20906925 53.43162155]
[0.37801173 45.27286148]
[14.49131203 40.19203949]
[29.39047623 38.45568466]
[44.29392242 40.15488434]
[58.41984558 45.20050430]
[71.02722931 53.32785416]
[81.45471954 64.11059570]
[89.15530396 76.98308563]
[93.72534943 91.27169037]
[95.95046234 76.43764496]
[98.17558289 61.60359955]
[89.38343811 53.60142517]
[85.58468628 42.46273804]
[87.61354828 30.99200821]
[94.85208893 22.01876068]
[105.41197968 17.69962311]
[108.07777405 2.93840504]
[110.74357605 -11.82281208]
[113.40937042 -26.58403015]
[115.96520233 -41.36468124]
[118.41092682 -56.16395569]
[120.85665131 -70.96322632]
[122.30607605 -85.89303589]
[122.75267792 -100.88638306]
[123.19928741 -115.87973022]
[123.64588928 -130.87307739]
[124.09249878 -145.86643982]
[110.52052307 -152.84957886]
[101.32933044 -165.03500366]
[98.34382629 -180.00329590]
[102.15679169 -194.78247070]
[112.01116180 -206.43812561]
[125.95034027 -212.65600586]
[141.20669556 -212.20156860]
[154.75105286 -205.16502380]
[163.89419556 -192.94349670]
[166.82072449 -177.96357727]
[162.94958496 -163.19952393]
[153.04940796 -151.58277893]
[139.08584595 -145.41983032]
[138.63923645 -130.42648315]
[138.19264221 -115.43312836]
[137.74603271 -100.43977356]
[137.29942322 -85.44642639]
[146.96168518 -96.91991425]
[161.26132202 -101.44981384]
[175.76747131 -97.63249969]
[185.98521423 -86.65081024]
[188.74848938 -71.90752411]
[183.20106506 -57.97102737]
[171.06185913 -49.15968323]
[156.09234619 -48.20378876]
[142.93098450 -55.39953613]
[135.65592957 -68.51749420]
[133.21020508 -53.71822739]
[130.76446533 -38.91895676]
[132.77529907 -31.80710983]
[128.17057800 -23.91823387]
[125.50479126 -9.15701675]
[122.83899689 5.60420036]
[120.17319489 20.36541748]
[131.49736023 34.74870682]
[128.66331482 53.15742874]
[113.00962830 63.82871628]
[110.78450775 78.66275787]
[108.55938721 93.49680328]
[109.11759949 108.48641205]
[112.43985748 123.11387634]
[115.76212311 137.74133301]
[119.08438110 152.36878967]
[124.22634125 166.45993042]
[131.10575867 179.78936768]
[145.09355164 179.72265625]
[157.68536377 185.66085815]
[166.44821167 196.39356995]
[169.71615601 209.79019165]
[166.90682983 223.22285461]
[158.62429810 234.08180237]
[165.30448914 247.51217651]
[171.98468018 260.94253540]
[178.66487122 274.37292480]
[185.34507751 287.80331421]
[192.02526855 301.23367310]
[198.70545959 314.66406250]
[205.38565063 328.09442139]
[219.32971191 322.54260254]
[233.68461609 318.16122437]
[248.35229492 314.98025513]
[263.23257446 313.02139282]
[278.22378540 312.29806519]
[293.22351074 312.81515503]
[308.12930298 314.56915283]
[322.83935547 317.54809570]
[337.25317383 321.73159790]
[351.27227783 327.09112549]
[364.80090332 333.59002686]
[377.74664307 341.18392944]
[390.02105713 349.82095337]
[401.54028320 359.44210815]
[412.22567749 369.98165894]
[422.00421143 381.36761475]
[430.80911255 393.52215576]
[438.58020020 406.36233521]
[445.26440430 419.80038452]
[450.81607056 433.74450684]
[455.19726562 448.09945679]
[458.37805176 462.76718140]
[460.33673096 477.64746094]
[461.05990601 492.63867188]
[460.54263306 507.63839722]
[458.78845215 522.54418945]
[455.80932617 537.25421143]
[451.62564087 551.66796875]
[446.26596069 565.68701172]
[439.76690674 579.21551514]
[432.17285156 592.16119385]
[423.53567505 604.43548584]
[413.91436768 615.95465088]
[403.37469482 626.63989258]
[391.98864746 636.41827393]
[379.83398438 645.22302246]
[366.99371338 652.99395752]
[353.55560303 659.67803955]
[339.61141968 665.22949219]
[325.25640869 669.61053467]
[310.58865356 672.79119873]
[295.70834351 674.74969482]
[280.71710205 675.47265625]
[265.71737671 674.95520020]
[250.81161499 673.20086670]
[236.10163879 670.22155762]
[221.68794250 666.03771973]
[207.66897583 660.67785645]
[194.14050293 654.17858887]
[181.19494629 646.58441162]
[168.92073059 637.94708252]
[157.40171814 628.32568359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[34 145]
[35 144]
[53 143]
[54 142]
[55 141]
[56 140]
[82 139]
[83 138]
[84 137]
[89 134]
[90 133]
[91 132]
[92 131]
[93 129]
[94 128]
[95 127]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
