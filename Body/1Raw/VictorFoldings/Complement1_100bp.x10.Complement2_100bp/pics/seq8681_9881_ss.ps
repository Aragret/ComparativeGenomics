%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[75.36959839 597.63470459]
[60.51053238 599.91601562]
[45.47793961 599.78405762]
[30.66120529 597.24230957]
[16.44411469 592.35656738]
[3.19492340 585.25341797]
[-8.74318123 576.11676025]
[-19.06097412 565.18334961]
[-27.49119759 552.73638916]
[-33.81549072 539.09820557]
[-37.87004089 524.62213135]
[-39.54981995 509.68310547]
[-38.81132126 494.66809082]
[-35.67367554 479.96600342]
[-30.21815109 465.95767212]
[-22.58606148 453.00595093]
[-12.97509670 441.44628906]
[-1.63420177 431.57815552]
[11.14286518 423.65710449]
[25.02514839 417.88836670]
[39.65306091 414.42132568]
[54.64770889 413.34582520]
[55.98594284 398.40563965]
[57.32417679 383.46545410]
[58.66241074 368.52526855]
[60.00064468 353.58508301]
[61.33887863 338.64489746]
[54.76790619 325.27810669]
[63.70554352 312.22323608]
[65.04377747 297.28305054]
[65.82509613 282.30340576]
[66.04842377 267.30508423]
[57.01972961 279.28350830]
[43.25034714 285.23364258]
[28.33955765 283.60012817]
[16.18500710 274.80996704]
[9.96386719 261.16088867]
[11.30232716 246.22071838]
[19.85051727 233.89479065]
[33.37396240 227.40507507]
[48.33766556 228.44795227]
[60.83015060 236.75083923]
[67.58572388 250.14248657]
[70.03145599 235.34321594]
[72.47718048 220.54394531]
[74.92291260 205.74467468]
[66.06725311 193.82356262]
[68.33674622 178.78016663]
[80.90074921 169.57235718]
[83.34647369 154.77308655]
[85.79219818 139.97381592]
[88.23793030 125.17455292]
[75.51443481 113.13626099]
[72.52066040 95.87808228]
[80.44622803 80.25780487]
[96.14179230 72.48239899]
[98.14580536 57.61686707]
[100.14981842 42.75133896]
[102.15383148 27.88581276]
[96.32960510 13.17564487]
[105.69792175 1.59618044]
[107.70193481 -13.26934814]
[109.70594788 -28.13487625]
[111.70996094 -43.00040436]
[113.71397400 -57.86593246]
[115.71798706 -72.73146057]
[106.22856140 -61.11462784]
[92.87142181 -54.28917313]
[77.89749146 -53.40529633]
[63.83012390 -58.61195755]
[53.03993225 -69.03173065]
[47.34524536 -82.90871429]
[47.70572281 -97.90438080]
[54.06061554 -111.49169922]
[65.33901215 -121.38097382]
[79.64030457 -125.90568542]
[94.55447388 -124.30334473]
[107.56822205 -116.84396362]
[116.48850250 -104.78458405]
[119.81212616 -90.15576935]
[114.82149506 -102.04931641]
[119.13346863 -113.77922058]
[129.92453003 -119.24543762]
[134.96144104 -133.37446594]
[132.30743408 -148.97148132]
[143.86921692 -158.36160278]
[148.90612793 -172.49063110]
[153.94305420 -186.61965942]
[158.97996521 -200.74868774]
[164.01687622 -214.87771606]
[169.05380249 -229.00674438]
[173.66780090 -243.27947998]
[177.85481262 -257.68325806]
[182.04182434 -272.08703613]
[186.22883606 -286.49084473]
[172.60490417 -292.83819580]
[160.10961914 -301.19091797]
[149.03588867 -311.35324097]
[139.64329529 -323.08694458]
[132.15202332 -336.11694336]
[126.73766327 -350.13784790]
[123.52714539 -364.82092285]
[122.59573364 -379.82202148]
[123.96525574 -394.78948975]
[127.60360718 -409.37243652]
[133.42549133 -423.22906494]
[141.29446411 -436.03454590]
[151.02603149 -447.48864746]
[162.39208984 -457.32293701]
[175.12620544 -465.30685425]
[188.92985535 -471.25323486]
[203.47947693 -475.02270508]
[218.43400574 -476.52691650]
[233.44287109 -475.73056030]
[248.15426636 -472.65234375]
[262.22332764 -467.36444092]
[275.32025146 -459.99075317]
[287.13800049 -450.70416260]
[297.39959717 -439.72235107]
[305.86447144 -427.30276489]
[312.33422852 -413.73651123]
[316.65713501 -399.34161377]
[318.73190308 -384.45553589]
[318.50991821 -369.42718506]
[315.99633789 -354.60888672]
[311.25012207 -340.34796143]
[304.38247681 -326.97872925]
[295.55447388 -314.81460571]
[284.97296143 -304.14068604]
[272.88604736 -295.20721436]
[259.57702637 -288.22360229]
[245.35792542 -283.35354614]
[230.56204224 -280.71121216]
[215.53619385 -280.35855103]
[200.63261414 -282.30383301]
[196.44560242 -267.90002441]
[192.25859070 -253.49626160]
[188.07159424 -239.09246826]
[189.30194092 -236.57366943]
[189.60868835 -233.41574097]
[188.74340820 -229.96803284]
[186.58859253 -226.66328430]
[183.18283081 -223.96983337]
[178.14590454 -209.84080505]
[173.10899353 -195.71177673]
[168.07208252 -181.58274841]
[163.03515625 -167.45372009]
[157.99824524 -153.32469177]
[161.01252747 -138.73828125]
[149.09046936 -128.33755493]
[144.05355835 -114.20851898]
[148.14077759 -97.14213562]
[134.01457214 -85.32977295]
[130.58351135 -70.72744751]
[128.57949829 -55.86191940]
[126.57549286 -40.99639130]
[124.57147980 -26.13086319]
[122.56745911 -11.26533413]
[120.56344604 3.60019398]
[126.53101349 17.24707985]
[117.01935577 29.88982582]
[115.01534271 44.75535202]
[113.01132965 59.62088013]
[111.00731659 74.48641205]
[120.77935791 81.55216980]
[126.63783264 92.09238434]
[127.47933960 104.12191772]
[123.14540100 115.37512970]
[114.45227051 123.73259735]
[103.03720093 127.62027740]
[100.59146881 142.41955566]
[98.14574432 157.21882629]
[95.70001984 172.01809692]
[104.63353729 184.77857971]
[101.94240570 199.75230408]
[89.72218323 208.19041443]
[87.27645111 222.98968506]
[84.83072662 237.78895569]
[82.38499451 252.58822632]
[81.04676056 267.52841187]
[80.82343292 282.52673340]
[93.24076843 274.11187744]
[107.60653687 278.42749023]
[113.33084106 292.29229736]
[106.19393158 305.48562622]
[91.45687103 308.28189087]
[79.98396301 298.62127686]
[78.64572906 313.56146240]
[85.12097931 327.99688721]
[76.27906799 339.98312378]
[74.94083405 354.92330933]
[73.60260010 369.86349487]
[72.26435852 384.80368042]
[70.92612457 399.74386597]
[69.58789062 414.68405151]
[84.15270233 418.40728760]
[97.93159485 424.41879272]
[110.56767273 432.56286621]
[121.73361969 442.62854004]
[131.14021301 454.35510254]
[138.54380798 467.43878174]
[143.75262451 481.54071045]
[146.63174438 496.29562378]
[147.10659790 511.32128906]
[145.16487122 526.22851562]
[140.85687256 540.63122559]
[134.29418945 554.15625000]
[125.64679718 566.45336914]
[115.13869476 577.20397949]
[103.04206848 586.12969971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[29 188]
[30 187]
[31 181]
[32 180]
[43 179]
[44 178]
[45 177]
[46 176]
[49 173]
[50 172]
[51 171]
[52 170]
[56 164]
[57 163]
[58 162]
[59 161]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[80 153]
[83 151]
[84 150]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 138]
[93 137]
[94 136]
[95 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
