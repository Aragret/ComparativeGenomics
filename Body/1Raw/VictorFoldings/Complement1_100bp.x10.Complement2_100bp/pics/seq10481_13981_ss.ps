%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[89.42346191 900.36096191]
[74.45102692 899.42126465]
[59.52629471 897.90167236]
[44.67171097 895.80456543]
[29.90961266 893.13299561]
[15.26220798 889.89099121]
[0.75152689 886.08355713]
[-13.60060501 881.71624756]
[-27.77260017 876.79577637]
[-41.74314117 871.32946777]
[-55.49121857 865.32550049]
[-68.99615479 858.79302979]
[-82.23763275 851.74176025]
[-95.19573212 844.18237305]
[-107.85097504 836.12622070]
[-120.18431854 827.58544922]
[-132.17721558 818.57281494]
[-143.81161499 809.10192871]
[-155.07003784 799.18707275]
[-165.93554688 788.84313965]
[-176.39178467 778.08563232]
[-186.42303467 766.93072510]
[-196.01419067 755.39532471]
[-205.15086365 743.49664307]
[-213.81927490 731.25268555]
[-222.00642395 718.68176270]
[-229.69995117 705.80285645]
[-236.88832092 692.63531494]
[-243.56069946 679.19897461]
[-249.70706177 665.51397705]
[-255.31816101 651.60095215]
[-260.38555908 637.48077393]
[-264.90164185 623.17480469]
[-268.85958862 608.70440674]
[-272.25347900 594.09149170]
[-275.07818604 579.35791016]
[-277.32946777 564.52593994]
[-279.00393677 549.61773682]
[-280.09909058 534.65588379]
[-280.61325073 519.66284180]
[-280.54568481 504.66107178]
[-279.89645386 489.67324829]
[-278.66656494 474.72186279]
[-276.85784912 459.82940674]
[-274.47302246 445.01828003]
[-271.51568604 430.31076050]
[-267.99029541 415.72897339]
[-263.90213013 401.29486084]
[-259.25735474 387.03012085]
[-254.06294250 372.95620728]
[-248.32672119 359.09429932]
[-242.05731201 345.46524048]
[-235.26414490 332.08953857]
[-227.95744324 318.98727417]
[-220.14819336 306.17822266]
[-211.84812927 293.68157959]
[-203.06976318 281.51617432]
[-193.82626343 269.70031738]
[-184.13156128 258.25177002]
[-174.00021362 247.18774414]
[-163.44747925 236.52488708]
[-152.48922729 226.27922058]
[-141.14193726 216.46618652]
[-129.42268372 207.10052490]
[-117.34907532 198.19631958]
[-104.93928528 189.76696777]
[-92.21198273 181.82516479]
[-79.18629456 174.38282776]
[-65.88182831 167.45117188]
[-52.31859207 161.04060364]
[-38.51698303 155.16078186]
[-24.49775696 149.82054138]
[-10.28200722 145.02792358]
[4.10888815 140.79013062]
[18.65328217 137.11354065]
[33.32929993 134.00367737]
[48.11486816 131.46522522]
[62.98774338 129.50199890]
[77.92556000 128.11694336]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[91.42582703 27.91616821]
[91.20249939 12.91783047]
[90.97917175 -2.08050728]
[90.75584412 -17.07884407]
[90.53251648 -32.07718277]
[90.30918884 -47.07551956]
[90.08586121 -62.07385635]
[89.86253357 -77.07219696]
[89.63920593 -92.07053375]
[89.41587830 -107.06887054]
[75.01617432 -111.75152588]
[62.91864395 -120.85802460]
[54.43553162 -133.40057373]
[50.48702621 -148.01864624]
[51.50142670 -163.12658691]
[57.36870575 -177.08558655]
[67.45242310 -188.38148499]
[80.65876770 -195.78900146]
[95.55521393 -198.50459290]
[110.52591705 -196.23371887]
[123.94696045 -189.22270203]
[134.36251831 -178.23204041]
[140.64280701 -164.45391846]
[142.10658264 -149.38287354]
[138.59506226 -134.65373230]
[130.48915100 -121.86416626]
[118.66811371 -112.40150452]
[104.41421509 -107.29219818]
[104.63754272 -92.29386139]
[104.86087036 -77.29552460]
[105.08419800 -62.29718399]
[105.30752563 -47.29884720]
[105.53085327 -32.30051041]
[105.75418091 -17.30217171]
[105.97750854 -2.30383492]
[106.20083618 12.69450283]
[106.42416382 27.69284058]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[122.90179443 127.44723511]
[137.87423706 128.38691711]
[152.79896545 129.90646362]
[167.65356445 132.00357056]
[182.41566467 134.67509460]
[197.06307983 137.91702271]
[211.57376099 141.72445679]
[225.92590332 146.09169006]
[240.09791565 151.01216125]
[254.06846619 156.47845459]
[267.81655884 162.48234558]
[281.32150269 169.01480103]
[294.56301880 176.06600952]
[307.52111816 183.62536621]
[320.17639160 191.68148804]
[332.50976562 200.22227478]
[344.50265503 209.23486328]
[356.13708496 218.70570374]
[367.39553833 228.62054443]
[378.26107788 238.96447754]
[388.71734619 249.72195435]
[398.74859619 260.87680054]
[408.33981323 272.41220093]
[417.47650146 284.31082153]
[426.14495850 296.55480957]
[434.33212280 309.12567139]
[442.02569580 322.00457764]
[449.21408081 335.17208862]
[455.88650513 348.60845947]
[462.03289795 362.29342651]
[467.64404297 376.20645142]
[472.71145630 390.32656860]
[477.22756958 404.63256836]
[481.18554688 419.10290527]
[484.57946777 433.71585083]
[487.40423584 448.44940186]
[489.65554810 463.28140259]
[491.33004761 478.18954468]
[492.42523193 493.15142822]
[492.93945312 508.14450073]
[492.87191772 523.14624023]
[492.22271729 538.13409424]
[490.99285889 553.08544922]
[489.18417358 567.97790527]
[486.79937744 582.78906250]
[483.84210205 597.49658203]
[480.31671143 612.07836914]
[476.22860718 626.51251221]
[471.58386230 640.77722168]
[466.38949585 654.85113525]
[460.65328979 668.71307373]
[454.38391113 682.34216309]
[447.59078979 695.71789551]
[440.28411865 708.82012939]
[432.47491455 721.62927246]
[424.17486572 734.12591553]
[415.39651489 746.29132080]
[406.15304565 758.10717773]
[396.45837402 769.55578613]
[386.32705688 780.61981201]
[375.77435303 791.28271484]
[364.81613159 801.52838135]
[353.46887207 811.34149170]
[341.74963379 820.70715332]
[329.67605591 829.61138916]
[317.26629639 838.04077148]
[304.53900146 845.98260498]
[291.51333618 853.42498779]
[278.20889282 860.35668945]
[264.64566040 866.76727295]
[250.84405518 872.64709473]
[236.82484436 877.98736572]
[222.60911560 882.78002930]
[208.21823120 887.01788330]
[193.67384338 890.69451904]
[178.99783325 893.80438232]
[164.21226501 896.34289551]
[149.33940125 898.30615234]
[134.40158081 899.69122314]
[119.42129517 900.49609375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
