%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[92.26971436 870.08245850]
[77.37294769 868.29779053]
[62.58674240 865.75476074]
[47.94966888 862.46014404]
[33.49991608 858.42242432]
[19.27518272 853.65209961]
[5.31257915 848.16174316]
[-8.35146904 841.96557617]
[-21.68131256 835.07983398]
[-34.64217758 827.52239990]
[-47.20024872 819.31304932]
[-59.32276154 810.47314453]
[-70.97808838 801.02581787]
[-82.13582611 790.99572754]
[-92.76686859 780.40893555]
[-102.84347534 769.29315186]
[-112.33935547 757.67736816]
[-121.22973633 745.59185791]
[-129.49142456 733.06811523]
[-137.10287476 720.13891602]
[-144.04421997 706.83795166]
[-150.29734802 693.19982910]
[-155.84594727 679.26031494]
[-160.67555237 665.05560303]
[-164.77354431 650.62280273]
[-168.12925720 635.99963379]
[-170.73391724 621.22412109]
[-172.58073425 606.33496094]
[-173.66488647 591.37091064]
[-173.98355103 576.37097168]
[-173.53588867 561.37438965]
[-172.32308960 546.42016602]
[-170.34828186 531.54742432]
[-167.61665344 516.79492188]
[-164.13531494 502.20114136]
[-159.91333008 487.80413818]
[-154.96174622 473.64147949]
[-149.29347229 459.75015259]
[-142.92327881 446.16635132]
[-135.86779785 432.92556763]
[-128.14544678 420.06228638]
[-119.77635193 407.61010742]
[-110.78235626 395.60150146]
[-101.18692780 384.06777954]
[-91.01509857 373.03906250]
[-80.29340363 362.54412842]
[-69.04981995 352.61032104]
[-57.31367111 343.26358032]
[-45.11558151 334.52828979]
[-32.48737335 326.42724609]
[-19.46199417 318.98156738]
[-6.07342291 312.21069336]
[7.64340830 306.13226318]
[21.65271568 300.76217651]
[35.91794968 296.11441040]
[50.40188980 292.20111084]
[65.06675720 289.03244019]
[79.87429047 286.61672974]
[94.78585052 284.96023560]
[93.89303589 269.98684692]
[93.00022125 255.01344299]
[81.72415924 245.34979248]
[80.60541534 230.17733765]
[90.81800079 218.41549683]
[89.92518616 203.44209290]
[89.03237152 188.46868896]
[88.13955688 173.49528503]
[79.53944397 185.78503418]
[65.70095062 191.57263184]
[50.91209412 189.06471252]
[39.75535202 179.03839111]
[35.68776703 164.60043335]
[39.96972656 150.22459412]
[51.27441025 140.36537170]
[66.09894562 138.07777405]
[79.84979248 144.07063293]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[96.99870300 27.39877892]
[96.32891846 12.41374111]
[87.98312378 -1.02717841]
[95.14440155 -14.08724499]
[94.47461700 -29.07228279]
[86.12882233 -42.51320267]
[93.29010773 -55.57326889]
[92.62032318 -70.55830383]
[91.95053864 -85.54335022]
[91.28075409 -100.52838898]
[76.74800873 -104.78022766]
[64.38470459 -113.52250671]
[55.53191757 -125.80692291]
[51.14992905 -140.30094910]
[51.71406174 -155.43238831]
[57.16312790 -169.55989075]
[66.90605164 -181.15101624]
[79.88599396 -188.94844055]
[94.69498444 -192.10636902]
[109.72666168 -190.28222656]
[123.35049438 -183.67391968]
[134.08866882 -172.99822998]
[140.77641296 -159.41320801]
[142.68824768 -144.39244080]
[139.61682129 -129.56526184]
[131.89530945 -116.54002380]
[120.36124420 -106.72960663]
[106.26579285 -101.19817352]
[106.93557739 -86.21313477]
[107.60536194 -71.22809601]
[108.27514648 -56.24305344]
[116.57302856 -43.87396622]
[109.45965576 -29.74206924]
[110.12944031 -14.75702953]
[118.42733002 -2.38794065]
[111.31395721 11.74395561]
[111.98374176 26.72899437]
[121.34476471 15.00844955]
[135.77613831 10.91752338]
[149.89529419 15.98203182]
[158.43615723 28.31303787]
[158.21318054 43.31137848]
[149.30953979 55.38304901]
[135.04608154 60.02561188]
[120.74269104 55.50750351]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[103.11296082 172.60246277]
[104.00577545 187.57586670]
[104.89859009 202.54928589]
[105.79140472 217.52268982]
[117.32929993 227.98760986]
[118.02143860 243.18550110]
[107.97362518 254.12062073]
[108.86643982 269.09402466]
[109.75925446 284.06744385]
[124.76200104 283.94021606]
[139.75167847 284.57922363]
[154.68916321 285.98278809]
[169.53550720 288.14721680]
[184.25196838 291.06692505]
[198.80014038 294.73422241]
[213.14208984 299.13958740]
[227.24038696 304.27151489]
[241.05824280 310.11660767]
[254.55963135 316.65963745]
[267.70932007 323.88351440]
[280.47299194 331.76940918]
[292.81735229 340.29672241]
[304.71020508 349.44323730]
[316.12051392 359.18508911]
[327.01852417 369.49682617]
[337.37579346 380.35159302]
[347.16528320 391.72103882]
[356.36148071 403.57550049]
[364.94039917 415.88409424]
[372.87960815 428.61465454]
[380.15844727 441.73400879]
[386.75790405 455.20788574]
[392.66079712 469.00115967]
[397.85165405 483.07788086]
[402.31698608 497.40124512]
[406.04513550 511.93395996]
[409.02639771 526.63806152]
[411.25292969 541.47521973]
[412.71899414 556.40673828]
[413.42071533 571.39355469]
[413.35626221 586.39672852]
[412.52584839 601.37701416]
[410.93161011 616.29534912]
[408.57769775 631.11285400]
[405.47027588 645.79083252]
[401.61746216 660.29095459]
[397.02926636 674.57543945]
[391.71768188 688.60705566]
[385.69653320 702.34912109]
[378.98159790 715.76586914]
[371.59033203 728.82220459]
[363.54205322 741.48406982]
[354.85775757 753.71850586]
[345.56008911 765.49359131]
[335.67327881 776.77850342]
[325.22317505 787.54394531]
[314.23699951 797.76171875]
[302.74343872 807.40515137]
[290.77249146 816.44921875]
[278.35531616 824.87017822]
[265.52438354 832.64617920]
[252.31314087 839.75683594]
[238.75605774 846.18365479]
[224.88850403 851.90985107]
[210.74664307 856.92047119]
[196.36738586 861.20251465]
[181.78825378 864.74475098]
[167.04725647 867.53790283]
[152.18287659 869.57476807]
[137.23388672 870.84997559]
[122.23927307 871.36016846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 148]
[60 147]
[61 146]
[64 143]
[65 142]
[66 141]
[67 140]
[77 139]
[78 138]
[79 137]
[80 136]
[82 134]
[83 133]
[84 132]
[85 131]
[86 122]
[87 121]
[89 119]
[90 118]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
