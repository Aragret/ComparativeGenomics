%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[116.03547668 243.03041077]
[113.58975220 228.23114014]
[111.14402008 213.43186951]
[108.69829559 198.63259888]
[106.25257111 183.83332825]
[103.80683899 169.03405762]
[94.09791565 157.73864746]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[75.83528900 47.23018646]
[81.39389038 33.41167450]
[78.94815826 18.61240196]
[63.91728973 17.67491341]
[49.47889709 13.41801834]
[36.35619354 6.05829620]
[25.20573997 -4.03234053]
[16.58460617 -16.34543610]
[10.92252827 -30.26161194]
[8.50049400 -45.08172607]
[9.43680191 -60.06199265]
[13.68128395 -74.45131683]
[21.01798248 -87.52894592]
[31.07614136 -98.64057159]
[43.34893417 -107.23108673]
[57.21900177 -112.87228394]
[54.77327347 -127.67155457]
[52.32754898 -142.47082520]
[49.88182068 -157.27009583]
[47.43609238 -172.06936646]
[32.53505325 -170.32485962]
[17.56825256 -169.28599548]
[2.56909251 -168.95509338]
[-12.42895985 -169.33288574]
[-27.39243889 -170.41853333]
[-42.28795242 -172.20960999]
[-57.08226395 -174.70211792]
[-71.74236298 -177.89050293]
[-86.23553467 -181.76765442]
[-100.52944183 -186.32490540]
[-114.59218597 -191.55209351]
[-128.39239502 -197.43756104]
[-141.89926147 -203.96815491]
[-155.08265686 -211.12933350]
[-167.91316223 -218.90509033]
[-180.36213684 -227.27809143]
[-192.40182495 -236.22964478]
[-204.00534058 -245.73979187]
[-215.14680481 -255.78729248]
[-225.80134583 -266.34973145]
[-235.94519043 -277.40353394]
[-245.55570984 -288.92404175]
[-254.61146545 -300.88555908]
[-263.09222412 -313.26138306]
[-270.97909546 -326.02389526]
[-278.25445557 -339.14459229]
[-284.90206909 -352.59426880]
[-290.90713501 -366.34286499]
[-296.25622559 -380.35968018]
[-300.93740845 -394.61349487]
[-304.94021606 -409.07244873]
[-308.25576782 -423.70431519]
[-310.87664795 -438.47644043]
[-312.79696655 -453.35583496]
[-314.01248169 -468.30932617]
[-314.52047729 -483.30352783]
[-314.31982422 -498.30499268]
[-313.41091919 -513.28027344]
[-311.79586792 -528.19586182]
[-309.47821045 -543.01861572]
[-306.46316528 -557.71533203]
[-302.75741577 -572.25323486]
[-298.36926270 -586.59997559]
[-293.30850220 -600.72344971]
[-287.58639526 -614.59222412]
[-281.21572876 -628.17523193]
[-274.21072388 -641.44226074]
[-266.58700562 -654.36370850]
[-258.36160278 -666.91070557]
[-249.55284119 -679.05523682]
[-240.18037415 -690.77026367]
[-230.26513672 -702.02954102]
[-219.82925415 -712.80810547]
[-208.89599609 -723.08172607]
[-197.48976135 -732.82763672]
[-185.63601685 -742.02398682]
[-173.36120605 -750.65032959]
[-160.69270325 -758.68731689]
[-147.65881348 -766.11712646]
[-134.28857422 -772.92309570]
[-120.61186218 -779.09002686]
[-106.65916443 -784.60430908]
[-92.46163177 -789.45343018]
[-78.05094147 -793.62670898]
[-63.45924759 -797.11480713]
[-48.71910858 -799.90991211]
[-33.86341858 -802.00579834]
[-18.92532539 -803.39782715]
[-3.93816185 -804.08282471]
[11.06462955 -804.05932617]
[26.04957199 -803.32733154]
[40.98322678 -801.88848877]
[55.83227539 -799.74603271]
[70.56357574 -796.90472412]
[85.14426422 -793.37091064]
[99.54180145 -789.15246582]
[113.72406006 -784.25885010]
[127.65940094 -778.70086670]
[141.31672668 -772.49108887]
[154.66554260 -765.64318848]
[167.67608643 -758.17260742]
[180.31932068 -750.09588623]
[192.56703186 -741.43115234]
[204.39189148 -732.19769287]
[215.76751709 -722.41607666]
[226.66850281 -712.10821533]
[237.07055664 -701.29699707]
[246.95045471 -690.00665283]
[256.28613281 -678.26232910]
[265.05679321 -666.09020996]
[273.24282837 -653.51751709]
[280.82598877 -640.57226562]
[287.78936768 -627.28332520]
[294.11743164 -613.68035889]
[299.79602051 -599.79376221]
[304.81246948 -585.65447998]
[309.15563965 -571.29406738]
[312.81576538 -556.74456787]
[315.78475952 -542.03851318]
[318.05590820 -527.20855713]
[319.62420654 -512.28796387]
[320.48614502 -497.30993652]
[320.63977051 -482.30792236]
[320.08477783 -467.31536865]
[318.82238770 -452.36578369]
[316.85540771 -437.49246216]
[314.18826294 -422.72863770]
[310.82684326 -408.10723877]
[306.77871704 -393.66088867]
[302.05288696 -379.42184448]
[296.65988159 -365.42184448]
[290.61175537 -351.69213867]
[283.92199707 -338.26339722]
[276.60552979 -325.16552734]
[268.67871094 -312.42782593]
[260.15917969 -300.07864380]
[251.06596375 -288.14556885]
[241.41938782 -276.65524292]
[231.24092102 -265.63330078]
[220.55332947 -255.10432434]
[209.38041687 -245.09181213]
[197.74714661 -235.61808777]
[185.67945862 -226.70433044]
[173.20428467 -218.37039185]
[160.34947205 -210.63488770]
[147.14369202 -203.51509094]
[133.61640930 -197.02685547]
[119.79782867 -191.18469238]
[105.71876526 -186.00160217]
[91.41064453 -181.48919678]
[76.90538788 -177.65750122]
[62.23536301 -174.51509094]
[64.68109131 -159.71582031]
[67.12681580 -144.91654968]
[69.57254791 -130.11727905]
[72.01827240 -115.31800842]
[86.96583557 -114.43921661]
[101.34993744 -110.25402069]
[114.44828796 -102.96923828]
[125.60240936 -92.94740295]
[134.25073242 -80.68874359]
[139.95690918 -66.80621338]
[142.43177795 -51.99483109]
[141.54803467 -36.99689102]
[137.34681702 -22.56477547]
[130.03572083 -9.42318344]
[119.97862244 1.76723480]
[107.67749786 10.44310284]
[93.74742889 16.16667557]
[96.19316101 30.96594620]
[105.90208435 42.26134872]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[124.16471100 152.76982117]
[118.60610962 166.58833313]
[121.05184174 181.38760376]
[123.49756622 196.18687439]
[125.94329834 210.98614502]
[128.38902283 225.78541565]
[130.83474731 240.58468628]
[145.49649048 244.82684326]
[156.85993958 255.01676941]
[162.66886902 269.13128662]
[161.76989746 284.36788940]
[154.34153748 297.70138550]
[141.85867310 306.48440552]
[126.79981232 308.97302246]
[112.15488434 304.67315674]
[100.83164978 294.43856812]
[95.07835388 280.30126953]
[96.03731537 265.06832886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[8 192]
[9 191]
[10 190]
[12 188]
[13 187]
[14 186]
[16 184]
[17 183]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
