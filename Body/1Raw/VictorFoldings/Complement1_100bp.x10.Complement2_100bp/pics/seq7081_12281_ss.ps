%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[150.11076355 690.92523193]
[136.80575562 683.98895264]
[123.93937683 676.26934814]
[111.55768585 667.79412842]
[99.70501709 658.59362793]
[88.42378998 648.70074463]
[77.75439453 638.15087891]
[67.73503113 626.98181152]
[58.40155029 615.23352051]
[49.78737259 602.94812012]
[41.92333603 590.16955566]
[34.83758926 576.94348145]
[28.55550003 563.31738281]
[23.09955597 549.33996582]
[18.48928642 535.06127930]
[14.74119568 520.53247070]
[11.86870098 505.80545044]
[9.88208580 490.93304443]
[8.78846169 475.96844482]
[8.59174347 460.96520996]
[9.29263592 445.97705078]
[10.88862801 431.05767822]
[13.37400818 416.26043701]
[16.73987961 401.63830566]
[20.97419167 387.24365234]
[26.06178856 373.12799072]
[31.98445511 359.34185791]
[38.72099304 345.93460083]
[46.24728394 332.95422363]
[54.53638840 320.44717407]
[63.55863190 308.45822144]
[73.28171539 297.03030396]
[83.67083740 286.20434570]
[94.68880463 276.01904297]
[106.29616547 266.51092529]
[118.45138550 257.71398926]
[131.11094666 249.65972900]
[144.22952271 242.37696838]
[157.76016235 235.89181519]
[152.09738159 222.00178528]
[146.43458557 208.11175537]
[140.77180481 194.22172546]
[135.10902405 180.33171082]
[129.44622803 166.44168091]
[122.76603699 153.01130676]
[115.10543823 140.11497498]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.56304169 80.49933624]
[71.71128082 67.71849823]
[63.85952759 54.93765259]
[56.00777054 42.15681076]
[42.53806305 48.78261948]
[28.50708199 54.11798096]
[14.03813839 58.11600113]
[-0.74161094 60.74154282]
[-15.70227909 61.97153473]
[-30.71238708 61.79516983]
[-45.64002609 60.21399307]
[-60.35400391 57.24190140]
[-74.72501373 52.90501785]
[-88.62675476 47.24145508]
[-101.93706512 40.30097961]
[-114.53896332 32.14459229]
[-126.32170105 22.84397316]
[-137.18173218 12.48085499]
[-147.02362061 1.14631343]
[-155.76084900 -11.06004143]
[-163.31666565 -24.03093719]
[-169.62464905 -37.65238190]
[-174.62937927 -51.80467224]
[-178.28684998 -66.36342621]
[-180.56492615 -81.20070648]
[-181.44360352 -96.18611145]
[-180.91514587 -111.18795013]
[-178.98420715 -126.07438660]
[-175.66773987 -140.71458435]
[-170.99488831 -154.97990417]
[-165.00674438 -168.74494934]
[-157.75592041 -181.88876343]
[-149.30613708 -194.29583740]
[-139.73165894 -205.85714722]
[-129.11660767 -216.47106934]
[-117.55429077 -226.04432678]
[-105.14631653 -234.49279785]
[-92.00173187 -241.74223328]
[-78.23604584 -247.72892761]
[-63.97024536 -252.40025330]
[-49.32968903 -255.71516418]
[-34.44305038 -257.64453125]
[-19.44115639 -258.17141724]
[-4.45584297 -257.29113770]
[10.38119316 -255.01148987]
[24.93956184 -251.35247803]
[39.09132004 -246.34625244]
[52.71209717 -240.03681946]
[65.68218994 -232.47962952]
[77.88761902 -223.74110413]
[89.22112274 -213.89802551]
[99.58309174 -203.03689575]
[108.88246155 -191.25317383]
[117.03751373 -178.65040588]
[123.97657776 -165.33937073]
[129.63867188 -151.43702698]
[133.97402954 -137.06555176]
[136.94456482 -122.35125732]
[138.52415466 -107.42345428]
[138.69892883 -92.41333008]
[137.46736145 -77.45278931]
[134.84025574 -62.67331696]
[130.84069824 -48.20479584]
[125.50385284 -34.17438126]
[118.87661743 -20.70537376]
[111.01722717 -7.91614151]
[101.99475098 4.08092070]
[91.88849640 15.18037987]
[80.78726196 25.28469086]
[68.78861237 34.30505371]
[76.64037323 47.08589554]
[84.49212646 59.86673737]
[92.34387970 72.64758301]
[98.52358246 76.70135498]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[128.00177002 132.45437622]
[135.66236877 145.35070801]
[137.08520508 130.41833496]
[145.70289612 118.14089966]
[159.26278687 111.72769165]
[174.22036743 112.85509491]
[186.66574097 121.22842407]
[193.34573364 134.65890503]
[192.51420593 149.63583374]
[184.38851929 162.24429321]
[171.09269714 169.18844604]
[156.10224915 168.65312195]
[143.33625793 160.77888489]
[148.99903870 174.66891479]
[154.66183472 188.55894470]
[160.32461548 202.44897461]
[165.98739624 216.33900452]
[171.65019226 230.22901917]
[185.85824585 225.40547180]
[200.32934570 221.44026184]
[215.01167297 218.34759521]
[229.85267639 216.13851929]
[244.79924011 214.82095337]
[259.79785156 214.39961243]
[274.79479980 214.87600708]
[289.73641968 216.24842834]
[304.56921387 218.51197815]
[319.24008179 221.65852356]
[333.69653320 225.67683411]
[347.88677979 230.55250549]
[361.76004028 236.26809692]
[375.26666260 242.80313110]
[388.35830688 250.13421631]
[400.98806763 258.23513794]
[413.11074829 267.07684326]
[424.68295288 276.62774658]
[435.66326904 286.85360718]
[446.01239014 297.71783447]
[455.69323730 309.18151855]
[464.67120361 321.20367432]
[472.91409302 333.74121094]
[480.39245605 346.74926758]
[487.07949829 360.18127441]
[492.95126343 373.98916626]
[497.98675537 388.12350464]
[502.16793823 402.53369141]
[505.47982788 417.16812134]
[507.91061401 431.97442627]
[509.45156860 446.89962769]
[510.09713745 461.89022827]
[509.84509277 476.89263916]
[508.69625854 491.85311890]
[506.65478516 506.71810913]
[503.72799683 521.43438721]
[499.92633057 535.94934082]
[495.26342773 550.21087646]
[489.75595093 564.16809082]
[483.42364502 577.77093506]
[476.28915405 590.97070312]
[468.37802124 603.72021484]
[459.71859741 615.97375488]
[450.34182739 627.68756104]
[440.28131104 638.81958008]
[429.57308960 649.32995605]
[418.25543213 659.18121338]
[406.36889648 668.33795166]
[393.95605469 676.76739502]
[381.06127930 684.43945312]
[367.73077393 691.32666016]
[354.01223755 697.40423584]
[339.95477295 702.65057373]
[325.60873413 707.04675293]
[311.02548218 710.57714844]
[296.25717163 713.22906494]
[281.35668945 714.99304199]
[266.37741089 715.86279297]
[251.37290955 715.83508301]
[236.39694214 714.91015625]
[221.50308228 713.09118652]
[206.74465942 710.38482666]
[192.17451477 706.80065918]
[177.84478760 702.35156250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 146]
[40 145]
[41 144]
[42 143]
[43 142]
[44 141]
[45 130]
[46 129]
[47 128]
[48 127]
[50 125]
[51 123]
[52 122]
[53 121]
[54 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
