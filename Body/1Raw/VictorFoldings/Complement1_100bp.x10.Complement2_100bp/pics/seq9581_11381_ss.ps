%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[157.81083679 460.48297119]
[157.14105225 445.49792480]
[156.35972595 430.51828003]
[155.46691895 415.54489136]
[154.57409668 400.57147217]
[153.68127441 385.59808350]
[152.78846741 370.62466431]
[149.90319824 355.90478516]
[145.07719421 341.70233154]
[140.25119019 327.49987793]
[135.42520142 313.29739380]
[129.76240540 299.40737915]
[123.28291321 285.87902832]
[116.80342102 272.35067749]
[110.32392883 258.82235718]
[110.12800598 273.82107544]
[106.39604950 288.34939575]
[99.33911896 301.58569336]
[89.35630035 312.78140259]
[77.01219177 321.30328369]
[63.00490189 326.66946411]
[48.12660980 328.57641602]
[33.21875763 326.91632080]
[19.12446022 321.78302002]
[6.64081192 313.46685791]
[-3.52617288 302.43814087]
[-10.80150223 289.32061768]
[-14.77372169 274.85610962]
[-15.21818256 259.86270142]
[-12.10974789 245.18832397]
[-5.62421608 231.66287231]
[3.87162614 220.05128479]
[15.84074211 211.01025391]
[29.60622025 205.05108643]
[44.38955688 202.51081848]
[59.35467911 203.53309631]
[73.65524292 208.06011963]
[86.48247528 215.83584595]
[97.11093903 226.42054749]
[104.93998718 239.21655273]
[103.60175323 224.27636719]
[102.26351929 209.33618164]
[89.40709686 201.86286926]
[83.34479523 188.08926392]
[86.59331512 173.21308899]
[98.11162567 162.98397827]
[96.77339172 148.04379272]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.62465668 68.23462677]
[88.28642273 53.29444122]
[85.28215027 49.02578735]
[84.31262207 44.48559952]
[85.14053345 40.49440765]
[87.23731232 37.65964890]
[86.56752777 22.67461014]
[78.22173309 9.23369026]
[85.38301086 -3.82637620]
[84.71322632 -18.81141472]
[84.04344177 -33.79645538]
[83.37365723 -48.78149414]
[82.70387268 -63.76653290]
[82.03408813 -78.75157166]
[67.79170227 -83.98896027]
[56.66953278 -94.25250244]
[50.34129715 -107.95531464]
[49.74304962 -122.99624634]
[54.93483734 -137.08206177]
[65.09629059 -148.07707214]
[78.65610504 -154.32693481]
[77.98631287 -169.31198120]
[77.31652832 -184.29701233]
[76.64674377 -199.28205872]
[62.79330444 -201.72976685]
[49.76268387 -207.01506042]
[38.12887192 -214.90226746]
[28.40373421 -225.04118347]
[21.01448441 -236.98260498]
[16.28493309 -250.19822693]
[14.42128658 -264.10400391]
[15.50316048 -278.08596802]
[19.48018646 -291.52743530]
[26.17434311 -303.83596802]
[35.28793335 -314.46975708]
[46.41680908 -322.96130371]
[59.06830597 -328.93798828]
[72.68304443 -332.13848877]
[72.45971680 -347.13684082]
[72.23638916 -362.13516235]
[64.29448700 -375.81863403]
[71.84143829 -388.65966797]
[71.61811066 -403.65802002]
[57.10457230 -407.88278198]
[44.48202133 -416.19918823]
[34.87284088 -427.86773682]
[29.13147354 -441.85089111]
[27.76844025 -456.90524292]
[30.90494156 -471.69216919]
[38.26207733 -484.89688110]
[49.18566132 -495.34515381]
[62.70437241 -502.10800171]
[77.61613464 -504.58401489]
[92.59500885 -502.55307007]
[106.30908203 -496.19573975]
[117.53890228 -486.07730103]
[125.28593445 -473.09753418]
[128.86131287 -458.41052246]
[127.94709778 -443.32226562]
[122.62461090 -429.17437744]
[113.36711121 -417.22488403]
[100.99776459 -408.53637695]
[86.61644745 -403.88134766]
[86.83977509 -388.88299561]
[94.76570892 -376.27233887]
[87.23472595 -362.35848999]
[87.45805359 -347.36016846]
[87.68138123 -332.36181641]
[103.28823090 -328.93536377]
[117.63688660 -321.88555908]
[129.89924622 -311.61483765]
[139.36651611 -298.71160889]
[145.49024963 -283.91659546]
[147.91406250 -268.08032227]
[146.49440002 -252.11422729]
[141.30902100 -236.93812561]
[132.65277100 -223.42733765]
[121.02077484 -212.36210632]
[107.08016205 -204.38259888]
[91.63178253 -199.95184326]
[92.30156708 -184.96679688]
[92.97135162 -169.98176575]
[93.64114380 -154.99671936]
[107.70446014 -149.98152161]
[118.80632782 -139.93692017]
[125.23408508 -126.37046814]
[125.98011017 -111.33613586]
[120.89961243 -97.12339020]
[110.73745728 -85.90850067]
[97.01912689 -79.42135620]
[97.68891144 -64.43631744]
[98.35869598 -49.45127869]
[99.02848053 -34.46623993]
[99.69826508 -19.48119926]
[100.36804962 -4.49616146]
[108.66593933 7.87292767]
[101.55256653 22.00482368]
[102.22235107 36.98986435]
[103.22660828 51.95620728]
[104.56484222 66.89639282]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.71357727 146.70555115]
[113.05181122 161.64573669]
[126.20467377 169.66499329]
[132.04527283 183.72702026]
[128.52731323 198.35876465]
[117.20370483 207.99795532]
[118.54193878 222.93814087]
[119.88017273 237.87832642]
[123.85227203 252.34284973]
[130.33177185 265.87118530]
[136.81126404 279.39953613]
[143.29075623 292.92788696]
[147.31968689 278.47909546]
[158.99992371 269.06781006]
[173.97505188 268.20425415]
[186.65969849 276.21047974]
[192.32281494 290.10037231]
[188.85218811 304.69335938]
[177.54229736 314.54656982]
[162.61143494 315.98507690]
[149.62765503 308.47140503]
[154.45365906 322.67385864]
[159.27964783 336.87631226]
[164.10565186 351.07876587]
[166.47035217 336.26635742]
[173.24057007 322.88113403]
[183.77101135 312.19891357]
[197.05799866 305.23785400]
[211.83506775 302.66146851]
[226.69380188 304.71530151]
[240.21794128 311.20358276]
[251.11843872 321.50790405]
[258.35635376 334.64608765]
[261.24179077 349.36596680]
[259.49975586 364.26446533]
[253.29626465 377.92156982]
[243.22259521 389.03558350]
[230.23892212 396.54718018]
[215.58274841 399.74041748]
[200.65103149 398.31091309]
[186.86692810 392.39492798]
[175.54429626 382.55633545]
[167.76187134 369.73184204]
[168.65469360 384.70526123]
[169.54750061 399.67864990]
[170.44032288 414.65206909]
[171.33312988 429.62548828]
[174.96778870 438.00564575]
[172.12608337 444.82815552]
[172.79586792 459.81317139]
[182.07266235 473.33624268]
[174.75659180 488.01300049]
[158.37379456 488.74526978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 204]
[4 203]
[5 202]
[6 201]
[7 200]
[8 181]
[9 180]
[10 179]
[11 178]
[12 169]
[13 168]
[14 167]
[15 166]
[40 165]
[41 164]
[42 163]
[46 159]
[47 158]
[48 157]
[49 156]
[52 153]
[53 152]
[54 151]
[58 150]
[59 149]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[73 135]
[74 134]
[75 133]
[76 132]
[90 120]
[91 119]
[92 118]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
