%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[143.93820190 478.13836670]
[144.07937622 463.03350830]
[148.47167969 448.58065796]
[156.75904846 435.95150757]
[168.26966858 426.16976929]
[182.07041931 420.02844238]
[180.06640625 405.16290283]
[178.06239319 390.29736328]
[176.05838013 375.43185425]
[174.05436707 360.56631470]
[172.05035400 345.70080566]
[170.04634094 330.83526611]
[167.82122803 316.00122070]
[165.37550354 301.20196533]
[155.66658020 289.90655518]
[161.05024719 275.02947998]
[158.60450745 260.23022461]
[148.89558411 248.93482971]
[154.27925110 234.05776978]
[151.83352661 219.25849915]
[149.38780212 204.45922852]
[146.94207764 189.65995789]
[141.38284302 175.72816467]
[132.96823120 163.31066895]
[124.55360413 150.89317322]
[116.13899231 138.47567749]
[107.72437286 126.05817413]
[99.30975342 113.64067841]
[101.33515167 128.50331116]
[100.46240234 143.47790527]
[96.72412872 158.00460815]
[90.26010132 171.54035950]
[81.31198120 183.57908630]
[70.21428680 193.67073059]
[57.38192368 201.43798828]
[43.29463577 206.59049988]
[28.47909164 208.93562317]
[13.48917580 208.38569641]
[-1.11470068 204.96124268]
[-14.78656101 198.79032898]
[-27.01527405 190.10363770]
[-37.34365845 179.22593689]
[-45.38558197 166.56388855]
[-50.84038925 152.59088135]
[-53.50415039 137.82928467]
[-53.27727509 122.83100891]
[-50.16825104 108.15674591]
[-44.29330826 94.35511017]
[-35.87208557 81.94209290]
[-25.21941566 71.38175964]
[-12.73355770 63.06891632]
[1.11869466 57.31434631]
[15.81946564 54.33318329]
[30.81915665 54.23688507]
[45.55699158 57.02905273]
[59.48199081 62.60529327]
[72.07354736 70.75714111]
[82.86093140 81.17983246]
[91.43784332 93.47837830]
[89.21273041 78.64434052]
[79.51390076 66.14460754]
[85.27761841 52.41038513]
[83.05249786 37.57634354]
[80.82738495 22.74229813]
[78.60226440 7.90825510]
[68.90343475 -4.59147549]
[74.66715240 -18.32569695]
[72.44203949 -33.15974045]
[62.55251694 -41.43984985]
[61.00460052 -53.84096527]
[68.08689117 -63.64748383]
[58.57523727 -76.29022980]
[64.54280090 -89.93711090]
[62.53878403 -104.80264282]
[60.53477097 -119.66816711]
[58.53075790 -134.53369141]
[56.52674484 -149.39923096]
[41.50607300 -149.31121826]
[26.59747314 -151.14479065]
[12.04575729 -154.86982727]
[-1.91012120 -160.42515564]
[-15.04099464 -167.71957397]
[-27.13124275 -176.63328552]
[-37.98233032 -187.01992798]
[-47.41607666 -198.70892334]
[-55.27756500 -211.50834656]
[-61.43770981 -225.20802307]
[-65.79534912 -239.58297729]
[-68.27893829 -254.39715576]
[-68.84767914 -269.40731812]
[-67.49224091 -284.36697388]
[-64.23487854 -299.03045654]
[-59.12908173 -313.15701294]
[-52.25869751 -326.51461792]
[-43.73653412 -338.88397217]
[-33.70253754 -350.06198120]
[-22.32147980 -359.86502075]
[-9.78024101 -368.13217163]
[3.71523714 -374.72766113]
[17.94334602 -379.54315186]
[32.67044830 -382.49963379]
[47.65471268 -383.54855347]
[62.65008163 -382.67260742]
[77.41031647 -379.88626099]
[91.69304657 -375.23526001]
[105.26373291 -368.79592896]
[117.89952850 -360.67404175]
[129.39294434 -351.00299072]
[139.55526733 -339.94152832]
[148.21958923 -327.67132568]
[155.24365234 -314.39385986]
[160.51211548 -300.32717896]
[163.93846130 -285.70227051]
[165.46643066 -270.75924683]
[165.07092285 -255.74353027]
[162.75845337 -240.90167236]
[158.56697083 -226.47738647]
[152.56532288 -212.70755005]
[144.85205078 -199.81826782]
[135.55381775 -188.02117920]
[124.82329559 -177.51002502]
[112.83670807 -168.45739746]
[99.79087830 -161.01194763]
[85.90003204 -155.29594421]
[71.39227295 -151.40324402]
[73.39628601 -136.53770447]
[75.40029907 -121.67218018]
[77.40431213 -106.80665588]
[79.40832520 -91.94112396]
[88.77664185 -80.36166382]
[82.95241547 -65.65149689]
[94.41155243 -52.36032867]
[87.27607727 -35.38485718]
[89.50119781 -20.55081367]
[99.04087067 -9.11211300]
[93.43630981 5.68313789]
[95.66143036 20.51718140]
[97.88654327 35.35122681]
[100.11166382 50.18526840]
[109.65133667 61.62397003]
[104.04677582 76.41921997]
[106.27188873 91.25326538]
[111.72724915 105.22605896]
[120.14186859 117.64355469]
[128.55648804 130.06105042]
[136.97109985 142.47854614]
[145.38572693 154.89604187]
[153.80033875 167.31353760]
[151.75634766 152.45346069]
[152.70393372 137.48341370]
[156.60536194 122.99967194]
[163.30523682 109.57910156]
[172.53671265 97.75624847]
[183.93208313 88.00200653]
[197.03750610 80.70487976]
[211.33097839 76.15552521]
[226.24319458 74.53512573]
[241.18022156 75.90822601]
[255.54710388 80.22013855]
[268.77163696 87.29911804]
[280.32705688 96.86321259]
[289.75314331 108.53149414]
[296.67446899 121.83921051]
[300.81533813 136.25633240]
[302.01083374 151.20861816]
[300.21331787 166.10052490]
[295.49441528 180.33891296]
[288.04208374 193.35668945]
[278.15307617 204.63534546]
[266.22137451 213.72566223]
[252.72212219 220.26557922]
[238.19302368 223.99459839]
[223.21278381 224.76420593]
[208.37805176 222.54376221]
[194.27966309 217.42167664]
[181.47918701 209.60198975]
[170.48643494 199.39613342]
[161.74134827 187.21423340]
[164.18707275 202.01350403]
[166.63279724 216.81277466]
[169.07852173 231.61204529]
[178.96238708 243.96598816]
[173.40377808 257.78448486]
[175.84951782 272.58377075]
[185.73336792 284.93771362]
[180.17477417 298.75622559]
[182.62049866 313.55548096]
[186.51345825 318.89932251]
[187.04370117 324.55755615]
[184.91186523 328.83123779]
[186.91589355 343.69677734]
[188.91990662 358.56231689]
[190.92391968 373.42782593]
[192.92793274 388.29336548]
[194.93194580 403.15890503]
[196.93595886 418.02441406]
[211.87030029 420.29199219]
[225.56028748 426.67645264]
[236.89610291 436.66021729]
[244.95880127 449.43399048]
[249.09480286 463.96224976]
[248.96881104 479.06726074]
[244.59101868 493.52447510]
[236.31632996 506.16198730]
[224.81555176 515.95526123]
[211.02096558 522.11047363]
[196.05087280 524.12860107]
[181.11880493 521.84600830]
[167.43525696 515.44781494]
[156.10946655 505.45263672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[13 187]
[14 186]
[16 184]
[17 183]
[19 181]
[20 180]
[21 179]
[22 178]
[23 148]
[24 147]
[25 146]
[26 145]
[27 144]
[28 143]
[59 142]
[60 141]
[62 139]
[63 138]
[64 137]
[65 136]
[67 134]
[68 133]
[71 131]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
