%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[94.86203003 587.06488037]
[82.46585846 577.73138428]
[77.95545197 562.88427734]
[83.06515503 548.23260498]
[95.83018494 539.41027832]
[96.05351257 524.41192627]
[96.27684021 509.41360474]
[96.50016785 494.41528320]
[96.72349548 479.41693115]
[96.94682312 464.41860962]
[89.39987183 451.57754517]
[97.34177399 437.89410400]
[97.56510162 422.89575195]
[97.78842926 407.89743042]
[94.74486542 401.16253662]
[98.12839508 392.67788696]
[98.57500458 377.68453979]
[99.02160645 362.69119263]
[99.46821594 347.69784546]
[92.11328125 334.74584961]
[100.25803375 321.18215942]
[100.70464325 306.18881226]
[101.15124512 291.19546509]
[101.15124512 276.19546509]
[100.70464325 261.20211792]
[100.25803375 246.20875549]
[84.81134796 238.60360718]
[75.29520416 224.14828491]
[74.40655518 206.77548218]
[82.48030853 191.26660156]
[97.37224579 181.93583679]
[96.47943115 166.96243286]
[87.99830627 154.71826172]
[94.90048981 140.48202515]
[94.00767517 125.50861359]
[93.11486053 110.53520966]
[91.88788605 95.58547974]
[90.32736206 80.66687012]
[88.76683807 65.74826813]
[87.20631409 50.82966232]
[85.64579010 35.91105652]
[84.08526611 20.99245262]
[82.52474976 6.07384777]
[79.96891785 -8.70680618]
[76.42924500 -23.28318214]
[72.88957214 -37.85955811]
[59.28107452 -41.09555054]
[48.44615555 -49.83744431]
[42.46346664 -62.33487320]
[42.44912720 -76.12432098]
[48.34892654 -88.51468658]
[58.96002579 -97.11245728]
[55.63776398 -111.73991394]
[52.20670319 -126.34223938]
[48.66703033 -140.91860962]
[45.12735748 -155.49499512]
[41.58768845 -170.07136536]
[38.04801559 -184.64773560]
[34.07592010 -199.11225891]
[29.67492104 -213.45211792]
[25.27392197 -227.79196167]
[13.82817268 -238.71466064]
[17.49077415 -253.15193176]
[13.08977509 -267.49176025]
[8.68877697 -281.83163452]
[-4.99276161 -289.27832031]
[-9.25172329 -303.88363647]
[-2.06812429 -316.88101196]
[-6.46912241 -331.22085571]
[-10.87012005 -345.56069946]
[-24.55166054 -353.00741577]
[-28.81062126 -367.61273193]
[-21.62702179 -380.61010742]
[-26.02802086 -394.94995117]
[-30.42901802 -409.28979492]
[-34.83001709 -423.62963867]
[-39.23101425 -437.96948242]
[-54.13394928 -435.98144531]
[-69.16085052 -436.47360229]
[-83.90176392 -439.43255615]
[-97.95454407 -444.77755737]
[-110.93583679 -452.36279297]
[-122.49148560 -461.98138428]
[-132.30625916 -473.37084961]
[-140.11238098 -486.22052002]
[-145.69692993 -500.17984009]
[-148.90751648 -514.86798096]
[-149.65657043 -529.88427734]
[-147.92367554 -544.81903076]
[-143.75607300 -559.26483154]
[-137.26748657 -572.82757568]
[-128.63490295 -585.13726807]
[-118.09384918 -595.85809326]
[-105.93187714 -604.69757080]
[-92.48078156 -611.41455078]
[-78.10752106 -615.82580566]
[-63.20420074 -617.81097412]
[-48.17739868 -617.31591797]
[-33.43705750 -614.35412598]
[-19.38529968 -609.00640869]
[-6.40547371 -601.41870117]
[5.14832497 -591.79791260]
[14.96089935 -580.40655518]
[22.76455498 -567.55535889]
[28.34640312 -553.59497070]
[31.55416489 -538.90618896]
[32.30033493 -523.88977051]
[30.56455040 -508.95532227]
[26.39417076 -494.51034546]
[19.90296364 -480.94885254]
[11.26801491 -468.64080811]
[0.72489291 -457.92202759]
[-11.43877888 -449.08489990]
[-24.89116669 -442.37048340]
[-20.49016953 -428.03063965]
[-16.08917046 -413.69079590]
[-11.68817329 -399.35095215]
[-7.28717518 -385.01110840]
[5.95083666 -378.28128052]
[10.61835098 -363.80133057]
[3.46972656 -349.96170044]
[7.87072468 -335.62185669]
[12.27172279 -321.28201294]
[25.50973511 -314.55218506]
[30.17724800 -300.07223511]
[23.02862358 -286.23260498]
[27.42962265 -271.89276123]
[31.83061981 -257.55291748]
[42.96158218 -247.65589905]
[39.61376953 -232.19296265]
[44.01476669 -217.85310364]
[48.41576385 -203.51325989]
[50.82623672 -202.08226013]
[52.81510544 -199.61021423]
[53.98302078 -196.25292969]
[53.99433899 -192.30775452]
[52.62438965 -188.18740845]
[56.16406250 -173.61103821]
[59.70373535 -159.03466797]
[63.24340820 -144.45828247]
[66.78308105 -129.88191223]
[71.41621399 -124.12380219]
[70.26522827 -115.06217957]
[73.58748627 -100.43471527]
[89.13570404 -96.03411865]
[100.40799713 -84.32552338]
[104.25951385 -68.43896484]
[99.54699707 -52.68816376]
[87.46594238 -41.39922714]
[91.00561523 -26.82285309]
[94.54528809 -12.24647808]
[100.82436371 -25.86900330]
[113.41399384 -34.02383804]
[128.41313171 -34.18411636]
[141.17414856 -26.30017281]
[147.74288940 -12.81493664]
[146.08396912 2.09304714]
[136.71141052 13.80437756]
[122.52941895 18.69017029]
[107.93242645 15.23651028]
[97.44335175 4.51332474]
[99.00387573 19.43192863]
[100.56439972 34.35053253]
[102.12492371 49.26913834]
[103.68544006 64.18774414]
[105.24596405 79.10634613]
[106.80648804 94.02495575]
[109.42793274 96.85345459]
[110.78987885 100.82371521]
[110.41037750 105.34732056]
[108.08826447 109.64239502]
[108.98107910 124.61579895]
[109.87389374 139.58920288]
[118.41888428 152.90437317]
[111.45283508 166.06961060]
[112.34565735 181.04302979]
[124.39118195 185.69972229]
[133.74682617 194.53413391]
[139.04701233 206.20817566]
[139.53651428 218.97296143]
[135.17793274 230.93083191]
[126.65197754 240.31745911]
[115.25138092 245.76214600]
[115.69799042 260.75549316]
[116.14459229 275.74884033]
[118.55673218 279.35931396]
[119.59052277 283.16665649]
[119.35333252 286.71337891]
[118.09008026 289.62384033]
[116.14459229 291.64205933]
[115.69799042 306.63540649]
[115.25138092 321.62875366]
[122.57437134 335.65316772]
[114.46156311 348.14443970]
[114.01495361 363.13778687]
[113.56835175 378.13113403]
[113.12174225 393.12448120]
[112.78676605 408.12075806]
[112.56343842 423.11907959]
[112.34011078 438.11743164]
[119.87109375 452.03128052]
[111.94515991 464.64193726]
[111.72183228 479.64025879]
[111.49850464 494.63861084]
[111.27517700 509.63693237]
[111.05184937 524.63525391]
[110.82852173 539.63360596]
[123.32521057 548.83209229]
[127.99641418 563.62939453]
[123.04595947 578.33557129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[12 200]
[13 199]
[14 198]
[16 197]
[17 196]
[18 195]
[19 194]
[21 192]
[22 191]
[23 190]
[24 185]
[25 184]
[26 183]
[31 176]
[32 175]
[34 173]
[35 172]
[36 171]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 151]
[45 150]
[46 149]
[52 144]
[53 143]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 132]
[60 131]
[61 130]
[63 128]
[64 127]
[65 126]
[68 123]
[69 122]
[70 121]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
