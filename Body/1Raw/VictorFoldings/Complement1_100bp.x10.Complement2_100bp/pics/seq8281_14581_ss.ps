%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[123.14813232 829.51513672]
[108.32522583 827.20001221]
[93.62305450 824.21264648]
[79.07208252 820.55920410]
[64.70248413 816.24731445]
[50.54402924 811.28576660]
[36.62606430 805.68499756]
[22.97744560 799.45660400]
[9.62645340 792.61340332]
[-3.39923644 785.16961670]
[-16.07262611 777.14068604]
[-28.36744881 768.54327393]
[-40.25822449 759.39520264]
[-51.72029877 749.71533203]
[-62.72992706 739.52386475]
[-73.26428223 728.84185791]
[-83.30152893 717.69140625]
[-92.82086182 706.09570312]
[-101.80255890 694.07873535]
[-110.22800446 681.66546631]
[-118.07972717 668.88153076]
[-125.34145355 655.75347900]
[-131.99813843 642.30853271]
[-138.03599548 628.57452393]
[-143.44247437 614.57995605]
[-148.20640564 600.35382080]
[-152.31790161 585.92553711]
[-155.76843262 571.32513428]
[-158.55085754 556.58282471]
[-160.65940857 541.72912598]
[-162.08972168 526.79486084]
[-162.83882141 511.81094360]
[-162.90515137 496.80847168]
[-162.28857422 481.81854248]
[-160.99038696 466.87222290]
[-159.01325989 452.00045776]
[-156.36131287 437.23410034]
[-153.04000854 422.60372925]
[-149.05625916 408.13970947]
[-144.41831970 393.87200928]
[-139.13578796 379.83016968]
[-133.21961975 366.04330444]
[-126.68209076 352.54000854]
[-119.53672791 339.34826660]
[-111.79835510 326.49542236]
[-103.48300934 314.00808716]
[-94.60792542 301.91217041]
[-85.19149780 290.23272705]
[-75.25324249 278.99398804]
[-64.81375885 268.21923828]
[-53.89468002 257.93078613]
[-42.51864624 248.14999390]
[-30.70923233 238.89709473]
[-18.49091530 230.19129944]
[-5.88901663 222.05062866]
[7.07034111 214.49197388]
[20.36029816 207.53097534]
[33.95331192 201.18209839]
[47.82120132 195.45848083]
[61.93523026 190.37197876]
[76.26614380 185.93313599]
[90.78423309 182.15118408]
[105.45941925 179.03392029]
[103.01369476 164.23464966]
[100.56796265 149.43537903]
[88.34774017 140.99726868]
[85.65660095 126.02353668]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[75.83528900 47.23018646]
[81.39389038 33.41167450]
[78.94815826 18.61240196]
[76.50243378 3.81313205]
[74.05670166 -10.98613834]
[59.04078674 -10.53263950]
[44.09841156 -12.08467770]
[29.49624062 -15.61455441]
[15.49486637 -21.05927467]
[2.34416199 -28.32167244]
[-9.72118378 -37.27214050]
[-20.48585129 -47.75094604]
[-29.75773048 -59.57108688]
[-37.37135315 -72.52161407]
[-43.19084930 -86.37141418]
[-47.11236191 -100.87331390]
[-49.06590652 -115.76851654]
[-49.01661682 -130.79119873]
[-46.96537399 -145.67326355]
[-42.94878769 -160.14912415]
[-37.03853607 -173.96043396]
[-29.34009743 -186.86073303]
[-19.99085426 -198.61976624]
[-9.15765953 -209.02770996]
[2.96615839 -217.89881897]
[16.16423416 -225.07476807]
[30.20103455 -230.42749023]
[44.82605362 -233.86148071]
[59.77829361 -235.31542969]
[74.79090881 -234.76341248]
[89.59599304 -232.21527100]
[103.92932129 -227.71647644]
[117.53509521 -221.34730530]
[130.17051697 -213.22145081]
[141.61009216 -203.48390198]
[151.64964294 -192.30845642]
[160.11004639 -179.89454651]
[166.84027100 -166.46371460]
[171.72023010 -152.25563049]
[174.66284180 -137.52388000]
[175.61558533 -122.53136444]
[174.56144714 -107.54562378]
[171.51924133 -92.83412170]
[166.54328918 -78.65937805]
[159.72235107 -65.27437592]
[151.17817688 -52.91798019]
[141.06324768 -41.81070328]
[129.55805969 -32.15077209]
[116.86796570 -24.11057281]
[103.21940613 -17.83359909]
[88.85597992 -13.43186665]
[91.30170441 1.36740458]
[93.74742889 16.16667557]
[96.19316101 30.96594620]
[105.90208435 42.26134872]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[121.95339966 120.02513123]
[124.22289276 135.06854248]
[115.36723328 146.98965454]
[117.81296539 161.78892517]
[120.25868988 176.58819580]
[135.15652466 174.81820679]
[150.11947632 173.72813416]
[165.11654663 173.32023621]
[180.11662292 173.59533691]
[195.08865356 174.55287170]
[210.00157166 176.19087219]
[224.82449341 178.50592041]
[239.52667236 181.49322510]
[254.07765198 185.14660645]
[268.44726562 189.45849609]
[282.60574341 194.41993713]
[296.52374268 200.02064514]
[310.17239380 206.24902344]
[323.52340698 213.09217834]
[336.54913330 220.53588867]
[349.22253418 228.56475830]
[361.51739502 237.16212463]
[373.40820312 246.31018066]
[384.87033081 255.98995972]
[395.87997437 266.18139648]
[406.41439819 276.86340332]
[416.45166016 288.01376343]
[425.97106934 299.60943604]
[434.95278931 311.62637329]
[443.37829590 324.03964233]
[451.23007202 336.82354736]
[458.49185181 349.95156860]
[465.14859009 363.39648438]
[471.18649292 377.13046265]
[476.59304810 391.12503052]
[481.35702515 405.35113525]
[485.46856689 419.77935791]
[488.91915894 434.37976074]
[491.70166016 449.12210083]
[493.81027222 463.97576904]
[495.24063110 478.91003418]
[495.98977661 493.89392090]
[496.05618286 508.89639282]
[495.43966675 523.88635254]
[494.14154053 538.83270264]
[492.16445923 553.70446777]
[489.51257324 568.47082520]
[486.19134521 583.10119629]
[482.20764160 597.56524658]
[477.56976318 611.83294678]
[472.28726196 625.87481689]
[466.37115479 639.66168213]
[459.83367920 653.16503906]
[452.68838501 666.35681152]
[444.95004272 679.20965576]
[436.63476562 691.69702148]
[427.75973511 703.79296875]
[418.34335327 715.47247314]
[408.40512085 726.71124268]
[397.96569824 737.48602295]
[387.04666138 747.77453613]
[375.67065430 757.55535889]
[363.86126709 766.80828857]
[351.64300537 775.51416016]
[339.04113770 783.65490723]
[326.08178711 791.21356201]
[312.79187012 798.17462158]
[299.19888306 804.52355957]
[285.33102417 810.24725342]
[271.21701050 815.33380127]
[256.88610840 819.77270508]
[242.36802673 823.55468750]
[227.69287109 826.67205811]
[212.89102173 829.11816406]
[197.99317932 830.88812256]
[183.03021240 831.97808838]
[168.03315735 832.38598633]
[153.03306580 832.11077881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 137]
[64 136]
[65 135]
[68 132]
[70 130]
[71 129]
[72 128]
[74 126]
[75 125]
[76 124]
[77 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
