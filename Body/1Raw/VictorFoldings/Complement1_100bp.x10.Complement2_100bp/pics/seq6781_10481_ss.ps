%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[154.77549744 481.81161499]
[163.20239258 469.31158447]
[174.37635803 459.19198608]
[187.64772034 452.04116821]
[183.89141846 437.51910400]
[180.13511658 422.99703979]
[176.37881470 408.47497559]
[172.62251282 393.95291138]
[168.86622620 379.43087769]
[165.10992432 364.90881348]
[161.03025818 350.47424316]
[156.62925720 336.13439941]
[152.22825623 321.79455566]
[147.72062683 307.48788452]
[143.10661316 293.21514893]
[131.82954407 283.48495483]
[134.94676208 267.97387695]
[130.33274841 253.70112610]
[125.71874237 239.42839050]
[117.94248962 252.25532532]
[103.40729523 255.96046448]
[90.43957520 248.42135620]
[86.46782684 233.95674133]
[93.76725006 220.85260010]
[108.15640259 216.61558533]
[121.39191437 223.67211914]
[118.06965637 209.04466248]
[114.74739838 194.41720581]
[111.42514038 179.78974915]
[108.10288239 165.16227722]
[104.67182159 150.55996704]
[101.13214874 135.98358154]
[97.59247589 121.40721130]
[94.05280304 106.83083344]
[91.07697296 104.37791443]
[89.19680023 100.62520599]
[88.96854401 96.09145355]
[90.69601440 91.52465057]
[87.81073761 76.80475616]
[84.92546844 62.08486557]
[81.49440765 47.48254395]
[77.52230835 33.01801682]
[73.55020905 18.55349541]
[67.57865143 4.79339170]
[59.72689438 -7.98745108]
[51.87513733 -20.76829338]
[44.02338409 -33.54913712]
[30.20706367 -41.25756454]
[30.13758278 -56.15200806]
[22.28582764 -68.93285370]
[14.43407249 -81.71369171]
[6.58231640 -94.49453735]
[-1.26943886 -107.27537537]
[0.12735431 -92.34055328]
[-1.67493165 -77.44922638]
[-6.59430456 -63.27883911]
[-14.40696621 -50.47406006]
[-24.75749207 -39.61742401]
[-37.17500305 -31.20282555]
[-51.09458542 -25.61308098]
[-65.88298798 -23.10248184]
[-80.86743927 -23.78524590]
[-95.36624908 -27.63031006]
[-108.71981812 -34.46275330]
[-120.32064056 -43.97174072]
[-129.64096069 -55.72467804]
[-136.25677490 -69.18688202]
[-139.86709595 -83.74592590]
[-140.30769348 -98.73944855]
[-137.55850220 -113.48536682]
[-131.74459839 -127.31282043]
[-123.13048553 -139.59277344]
[-112.10804749 -149.76654053]
[-99.17871857 -157.37130737]
[-84.93070984 -162.06111145]
[-70.01219940 -163.62257385]
[-55.10189438 -161.98468018]
[-40.87810135 -157.22193909]
[-27.98791313 -149.55101013]
[-17.01774979 -139.32089233]
[-8.46459961 -126.99315643]
[-10.68971729 -141.82719421]
[-12.91483402 -156.66123962]
[-15.13995171 -171.49528503]
[-17.36506844 -186.32933044]
[-19.59018517 -201.16337585]
[-23.40315247 -206.56455994]
[-23.84909248 -212.23008728]
[-21.65387344 -216.47155762]
[-23.43633842 -231.36528015]
[-38.37300491 -233.50033569]
[-52.24773788 -239.42942810]
[-64.11454010 -248.74830627]
[-73.16431427 -260.82156372]
[-78.78002167 -274.82608032]
[-80.57878876 -289.80697632]
[-78.43796539 -304.74279785]
[-72.50351715 -318.61523438]
[-63.18005753 -330.47845459]
[-51.10328674 -339.52355957]
[-37.09661484 -345.13388062]
[-22.11503792 -346.92684937]
[-7.18002701 -344.78024292]
[6.69012499 -338.84045410]
[18.54972839 -329.51242065]
[27.59017372 -317.43215942]
[33.19506836 -303.42330933]
[34.98226547 -288.44104004]
[32.82990646 -273.50686646]
[26.88474655 -259.63900757]
[17.55213165 -247.78300476]
[5.46837997 -238.74722290]
[-8.54262161 -233.14773560]
[-6.76015568 -218.25402832]
[-4.75614166 -203.38848877]
[-2.53102469 -188.55444336]
[-0.30590752 -173.72041321]
[1.91920960 -158.88636780]
[4.14432669 -144.05232239]
[6.36944389 -129.21827698]
[11.51140404 -115.12713623]
[19.36315918 -102.34629059]
[27.21491432 -89.56545258]
[35.06666946 -76.78460693]
[42.91842651 -64.00376129]
[56.17313385 -57.20950699]
[56.80422592 -41.40089035]
[64.65598297 -28.62004852]
[72.50773621 -15.83920670]
[80.35948944 -3.05836391]
[79.27760315 -18.01929665]
[82.59506226 -32.64784622]
[90.02487183 -45.67849731]
[100.92429352 -55.98396683]
[114.35040283 -62.67272949]
[129.14170837 -65.16614532]
[144.01863098 -63.24849701]
[157.69415283 -57.08568954]
[168.98519897 -47.21086502]
[176.91499329 -34.47829819]
[180.79753113 -19.98947716]
[180.29692078 -4.99783230]
[175.45648193 9.19970798]
[166.69496155 21.37491417]
[154.77030945 30.47451210]
[140.71412659 35.71129227]
[125.74243164 36.63222122]
[111.15040588 33.15763474]
[98.20040894 25.58810997]
[88.01473999 14.58139896]
[91.98683167 29.04592323]
[95.95893097 43.51044464]
[105.53382111 31.96395493]
[120.53321838 32.09806061]
[129.90013123 43.81390762]
[126.72961426 58.47500610]
[113.35885620 65.27374268]
[99.64535522 59.19959259]
[102.53063202 73.91948700]
[105.41590118 88.63937378]
[108.62917328 103.29116058]
[112.16884613 117.86753845]
[115.70851898 132.44390869]
[119.24819183 147.02029419]
[124.31430054 154.62109375]
[122.73033905 161.84002686]
[126.05259705 176.46748352]
[129.37486267 191.09494019]
[132.69711304 205.72239685]
[136.01937866 220.34986877]
[139.99147034 234.81439209]
[144.60548401 249.08712769]
[149.21949768 263.35986328]
[160.82659912 274.11093140]
[157.37934875 288.60113525]
[161.99336243 302.87387085]
[167.61076355 310.07681274]
[166.56809998 317.39355469]
[170.96910095 331.73339844]
[175.37010193 346.07324219]
[179.19270325 349.62780762]
[181.08079529 353.86907959]
[181.09674072 357.94519043]
[179.63197327 361.15249634]
[183.38827515 375.67456055]
[187.14457703 390.19662476]
[190.90087891 404.71868896]
[194.65718079 419.24075317]
[198.41348267 433.76281738]
[202.16978455 448.28485107]
[217.24395752 448.10375977]
[231.92327881 451.53610229]
[245.35430908 458.38232422]
[256.75619507 468.24441528]
[265.46603394 480.54895020]
[270.97747803 494.58062744]
[272.97003174 509.52362061]
[271.32794189 524.50915527]
[266.14660645 538.66607666]
[257.72726440 551.17120361]
[246.55946350 561.29754639]
[233.29243469 568.45642090]
[218.69750977 572.23156738]
[203.62322998 572.40350342]
[188.94599915 568.96228027]
[175.51910400 562.10791016]
[164.12321472 552.23895264]
[155.42082214 539.92907715]
[149.91790771 525.89410400]
[147.93438721 510.94989014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 180]
[12 179]
[13 178]
[14 176]
[15 175]
[17 173]
[18 172]
[19 171]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 164]
[32 163]
[33 162]
[34 161]
[38 160]
[39 159]
[40 158]
[41 152]
[42 151]
[43 150]
[44 130]
[45 129]
[46 128]
[47 127]
[49 125]
[50 124]
[51 123]
[52 122]
[53 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
