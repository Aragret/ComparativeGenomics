%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[91.84533691 444.27978516]
[84.87085724 430.94738770]
[80.54585266 416.53591919]
[79.02666473 401.56631470]
[80.36820984 386.57977295]
[84.52198792 372.11801147]
[91.33785248 358.70382690]
[100.56941223 346.82211304]
[111.88294983 336.90240479]
[124.86949158 329.30331421]
[139.05957031 324.29949951]
[136.83445740 309.46545410]
[134.60934448 294.63140869]
[132.38421631 279.79739380]
[130.15910339 264.96334839]
[127.38349152 250.22236633]
[117.01947021 239.52488708]
[121.50808716 224.35375977]
[111.14406586 213.65628052]
[115.63268280 198.48515320]
[112.31042480 183.85769653]
[99.71120453 171.64186096]
[105.30374908 154.09748840]
[101.76407623 139.52111816]
[98.22440338 124.94473267]
[94.68473053 110.36836243]
[89.76004791 124.53690338]
[79.23707581 135.22648621]
[65.14763641 140.37310791]
[50.21218872 138.98304749]
[37.31451797 131.32472229]
[28.94497490 118.87679291]
[26.71957970 104.04279327]
[31.06802559 89.68692017]
[41.15069199 78.58107758]
[55.02077866 72.86962128]
[70.00018311 73.65534973]
[83.19662476 80.78654480]
[92.06258392 92.88745880]
[91.16976929 77.91405487]
[90.27694702 62.94065094]
[89.38413239 47.96724319]
[88.49131775 32.99383926]
[79.37995148 23.86444855]
[78.94458008 11.37468338]
[86.87351990 2.23912311]
[86.20373535 -12.74591541]
[85.53395081 -27.73095512]
[84.86416626 -42.71599197]
[76.51837158 -56.15691376]
[83.67964935 -69.21697998]
[68.39878082 -71.52208710]
[53.86248398 -76.75382996]
[40.62540054 -84.71067047]
[29.19223213 -95.08712006]
[19.99847794 -107.48548889]
[13.39387035 -121.43112183]
[9.62905502 -136.39053345]
[8.84608746 -151.79190063]
[11.07307053 -167.04679871]
[16.22315216 -181.57281494]
[24.09790611 -194.81568909]
[34.39498520 -206.27047729]
[46.71972275 -215.50086975]
[60.60025406 -222.15571594]
[75.50559998 -225.98245239]
[74.61278534 -240.95585632]
[66.06780243 -254.27102661]
[73.03384399 -267.43627930]
[72.14102173 -282.40966797]
[71.24820709 -297.38308716]
[70.35539246 -312.35647583]
[69.46257782 -327.32989502]
[68.56976318 -342.30331421]
[67.67694855 -357.27670288]
[66.78412628 -372.25012207]
[65.89131165 -387.22351074]
[64.99849701 -402.19692993]
[64.10568237 -417.17031860]
[49.11831665 -418.16134644]
[34.37334442 -421.02297974]
[20.10331917 -425.71017456]
[6.53329802 -432.14892578]
[-6.12270117 -440.23776245]
[-17.66507530 -449.84902954]
[-27.91178322 -460.83120728]
[-36.70121765 -473.01107788]
[-43.89476013 -486.19653320]
[-49.37895966 -500.17962646]
[-53.06731796 -514.73980713]
[-54.90166473 -529.64746094]
[-54.85307312 -544.66748047]
[-52.92230606 -559.56298828]
[-49.13981628 -574.09899902]
[-43.56525803 -588.04632568]
[-36.28654861 -601.18493652]
[-27.41848946 -613.30767822]
[-17.10093880 -624.22332764]
[-5.49661827 -633.75970459]
[7.21145344 -641.76647949]
[20.82285309 -648.11730957]
[35.12290573 -652.71203613]
[49.88608551 -655.47827148]
[64.87954712 -656.37225342]
[79.86682892 -655.38000488]
[94.61156464 -652.51708984]
[108.88119507 -647.82873535]
[122.45067596 -641.38879395]
[135.10598755 -633.29895020]
[146.64755249 -623.68664551]
[156.89334106 -612.70361328]
[165.68174744 -600.52301025]
[172.87417603 -587.33697510]
[178.35720825 -573.35339355]
[182.04434204 -558.79290771]
[183.87742615 -543.88513184]
[183.82757568 -528.86511230]
[181.89555359 -513.96978760]
[178.11183167 -499.43405151]
[172.53610229 -485.48721313]
[165.25628662 -472.34921265]
[156.38720703 -460.22720337]
[146.06874084 -449.31243896]
[134.46362305 -439.77700806]
[121.75487518 -431.77133179]
[108.14293671 -425.42163086]
[93.84249878 -420.82809448]
[79.07908630 -418.06314087]
[79.97190094 -403.08975220]
[80.86472321 -388.11633301]
[81.75753784 -373.14291382]
[82.65035248 -358.16952515]
[83.54316711 -343.19610596]
[84.43598175 -328.22271729]
[85.32879639 -313.24929810]
[86.22161865 -298.27590942]
[87.11443329 -283.30249023]
[88.00724792 -268.32910156]
[96.48837280 -256.08489990]
[89.58618927 -241.84867859]
[90.47900391 -226.87527466]
[104.93708801 -225.02880859]
[118.81102753 -220.54779053]
[131.62493896 -213.58432007]
[142.93896484 -204.37567139]
[152.36447144 -193.23625183]
[159.57728577 -180.54679871]
[164.32891846 -166.74137878]
[166.45510864 -152.29260254]
[165.88150024 -137.69535828]
[162.62622070 -123.44994354]
[156.79933167 -110.04483032]
[148.59913635 -97.94001007]
[138.30535889 -87.55113220]
[126.26966858 -79.23526764]
[112.90364838 -73.27864838]
[98.66468811 -69.88676453]
[106.96257782 -57.51767349]
[99.84920502 -43.38577652]
[100.51898956 -28.40073967]
[101.18877411 -13.41570091]
[101.85855865 1.56933808]
[112.08621979 15.82983971]
[103.46472168 32.10102081]
[104.35753632 47.07442856]
[105.25035858 62.04783249]
[106.14317322 77.02124023]
[107.03598785 91.99464417]
[109.26110077 106.82868958]
[112.80077362 121.40506744]
[116.34044647 135.98144531]
[119.88011932 150.55781555]
[130.46891785 157.92260742]
[133.11703491 170.13616943]
[126.93788147 180.53543091]
[130.26014709 195.16288757]
[140.86180115 206.90663147]
[136.13554382 221.03150940]
[146.73719788 232.77525330]
[142.01095581 246.90011597]
[152.09187317 235.79267883]
[167.07032776 236.59640503]
[175.90475464 248.71882629]
[172.08274841 263.22372437]
[158.42173767 269.41864014]
[144.99314880 262.73822021]
[147.21826172 277.57226562]
[149.44337463 292.40631104]
[151.66850281 307.24035645]
[153.89361572 322.07440186]
[168.92730713 322.69461060]
[183.57188416 326.14901733]
[197.29794312 332.31277466]
[209.60931396 340.96301270]
[220.06092834 351.78707886]
[228.27497864 364.39364624]
[233.95454407 378.32702637]
[236.89428711 393.08352661]
[236.98794556 408.12973022]
[234.23214722 422.92166138]
[228.72650146 436.92468262]
[220.67002869 449.63253784]
[210.35397339 460.58587646]
[198.15126038 469.38873291]
[184.50299072 475.72290039]
[169.90257263 479.35934448]
[154.87776184 480.16668701]
[139.97172546 478.11572266]
[125.72329712 473.28054810]
[112.64754486 465.83599854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 180]
[18 178]
[20 176]
[21 175]
[23 172]
[24 171]
[25 170]
[26 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[46 162]
[47 161]
[48 160]
[49 159]
[51 157]
[66 141]
[67 140]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
