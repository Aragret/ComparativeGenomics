%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[260.58422852 517.42773438]
[258.58020020 502.56222534]
[256.57620239 487.69668579]
[254.57218933 472.83117676]
[243.54051208 482.99493408]
[228.69349670 480.85809326]
[220.97579956 467.99584961]
[226.07662964 453.88977051]
[240.23583984 448.93832397]
[253.01489258 456.79016113]
[252.12207031 441.81677246]
[251.22924805 426.84335327]
[250.33644104 411.86993408]
[246.36434937 397.40542603]
[239.48492432 384.07598877]
[232.60551453 370.74655151]
[225.72610474 357.41714478]
[218.84669495 344.08770752]
[211.86824036 330.80987549]
[204.79113770 317.58432007]
[197.71403503 304.35879517]
[190.63691711 291.13327026]
[183.55981445 277.90774536]
[166.70742798 279.11474609]
[150.97129822 272.81332397]
[139.53536987 260.22628784]
[134.73620605 243.85353088]
[137.58580017 226.97540283]
[147.55856323 212.99565125]
[140.09083557 199.98669434]
[132.62309265 186.97773743]
[127.66957855 201.13623047]
[114.21576691 207.76908875]
[99.96860504 203.07672119]
[93.08950806 189.74713135]
[97.51914215 175.41610718]
[110.72001648 168.29310608]
[125.12931061 172.45793152]
[112.77588654 164.13674927]
[114.02782440 148.36514282]
[107.75046539 134.74183655]
[101.47309875 121.11851501]
[85.86410522 115.75875092]
[78.84612274 100.82169342]
[84.68429565 85.38525391]
[78.20479584 71.85691071]
[71.42480469 58.47663498]
[64.34770203 45.25111008]
[51.01469040 36.73398590]
[51.83186722 21.86181259]
[44.75476074 8.63628483]
[37.67765427 -4.58924294]
[24.34464455 -13.10636711]
[25.16181946 -27.97853851]
[18.08471489 -41.20406723]
[11.00760937 -54.42959595]
[-2.32540107 -62.94672012]
[-1.50822556 -77.81889343]
[-5.27586699 -79.97732544]
[-7.89706326 -82.92585754]
[-9.26420784 -86.20706940]
[-9.42930317 -89.37556458]
[-8.58620930 -92.04901123]
[-21.38863182 -101.34462738]
[-19.68769836 -116.14179230]
[-25.96505928 -129.76510620]
[-32.24242020 -143.38842773]
[-38.51977921 -157.01174927]
[-52.87956238 -152.59812927]
[-67.69950867 -150.13792419]
[-82.71514130 -149.67503357]
[-97.65848541 -151.21772766]
[-112.26286316 -154.73847961]
[-126.26763153 -160.17445374]
[-139.42286682 -167.42863464]
[-151.49380493 -176.37155151]
[-162.26502991 -186.84362793]
[-171.54429626 -198.65797424]
[-179.16600037 -211.60374451]
[-184.99415588 -225.44990540]
[-188.92472839 -239.94935608]
[-190.88757324 -254.84333801]
[-190.84768677 -269.86605835]
[-188.80574036 -284.74938965]
[-184.79820251 -299.22775269]
[-178.89657593 -313.04275513]
[-171.20620728 -325.94784546]
[-161.86431885 -337.71273804]
[-151.03762817 -348.12744141]
[-138.91935730 -357.00613403]
[-125.72576141 -364.19033813]
[-111.69231415 -369.55181885]
[-97.06944275 -372.99493408]
[-82.11811066 -374.45825195]
[-67.10515594 -373.91561890]
[-52.29848480 -371.37670898]
[-37.96234894 -366.88687134]
[-24.35259056 -360.52621460]
[-11.71209335 -352.40826416]
[-0.26644242 -342.67785645]
[9.78010273 -331.50869751]
[18.24824905 -319.10006714]
[24.98687172 -305.67343140]
[29.87571526 -291.46841431]
[32.82752991 -276.73852539]
[33.78963470 -261.74658203]
[32.74486542 -246.76019287]
[29.71186256 -232.04678345]
[24.74475479 -217.86894226]
[17.93218803 -204.47967529]
[9.39573860 -192.11795044]
[-0.71225059 -181.00434875]
[-12.21138954 -171.33723450]
[-24.89646339 -163.28910828]
[-18.61910248 -149.66578674]
[-12.34174252 -136.04246521]
[-6.06438160 -122.41915894]
[6.28904247 -114.09796906]
[5.03710747 -98.32637024]
[11.71730232 -84.89599609]
[24.54410934 -77.32485199]
[24.23313713 -61.50669861]
[31.31024170 -48.28117371]
[38.38734818 -35.05564499]
[51.21415710 -27.48449898]
[50.90318298 -11.66634846]
[57.98028946 1.55917943]
[65.05739594 14.78470707]
[77.88420105 22.35585403]
[77.57322693 38.17400360]
[84.65032959 51.39953232]
[87.90077972 52.76588821]
[90.65090942 55.77451706]
[92.13605499 60.17311096]
[91.73313904 65.37741089]
[98.21263885 78.90576172]
[110.58345795 81.66555023]
[119.16040039 90.99773407]
[120.86886597 103.55698395]
[115.09642029 114.84115601]
[121.37377930 128.46446228]
[127.65113831 142.08778381]
[140.45356750 151.38340759]
[138.75262451 166.18057251]
[145.63203430 179.50999451]
[153.09977722 192.51895142]
[160.56752014 205.52790833]
[173.64442444 203.63157654]
[186.55624390 206.28558350]
[197.77049255 213.15278625]
[205.96372986 223.39727783]
[210.17770386 235.78616333]
[209.93138123 248.83784485]
[205.27580261 260.99926758]
[196.78533936 270.83065796]
[203.86245728 284.05618286]
[210.93955994 297.28170776]
[218.01666260 310.50723267]
[225.09376526 323.73275757]
[231.90185547 329.82272339]
[232.17611694 337.20828247]
[239.05554199 350.53771973]
[245.93495178 363.86715698]
[252.81436157 377.19659424]
[259.69378662 390.52600098]
[259.41748047 375.52856445]
[262.22311401 360.79327393]
[267.99139404 346.94674683]
[276.47708130 334.57766724]
[287.31930542 324.21206665]
[300.05706787 316.29061890]
[314.14877319 311.15017700]
[328.99520874 309.00933838]
[343.96508789 309.95907593]
[358.42193604 313.95907593]
[371.75100708 320.83917236]
[383.38552856 330.30691528]
[392.83081055 341.95965576]
[399.68524170 355.30194092]
[403.65734863 369.76647949]
[404.57824707 384.73818970]
[402.40878296 399.58047485]
[397.24121094 413.66223145]
[389.29522705 426.38470459]
[378.90875244 437.20693970]
[366.52334595 445.66876221]
[352.66571045 451.41033936]
[337.92504883 454.18759155]
[322.92816162 453.88238525]
[308.31271362 450.50772095]
[294.70013428 444.20706177]
[282.66928101 435.24838257]
[272.73168945 424.01251221]
[265.30984497 410.97714233]
[266.20266724 425.95053101]
[267.09548950 440.92395020]
[267.98828125 455.89733887]
[269.43771362 470.82714844]
[271.44171143 485.69268799]
[273.44573975 500.55822754]
[275.44973755 515.42376709]
[289.68795776 521.18298340]
[299.12634277 533.29962158]
[301.22601318 548.51434326]
[295.42214966 562.73437500]
[283.27600098 572.13476562]
[268.05480957 574.18670654]
[253.85296631 568.33831787]
[244.49073792 556.16278076]
[242.48649597 540.93518066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[29 147]
[30 146]
[31 145]
[38 144]
[40 142]
[41 141]
[42 140]
[45 136]
[46 135]
[47 131]
[48 130]
[50 128]
[51 127]
[52 126]
[54 124]
[55 123]
[56 122]
[58 120]
[63 119]
[65 117]
[66 116]
[67 115]
[68 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
