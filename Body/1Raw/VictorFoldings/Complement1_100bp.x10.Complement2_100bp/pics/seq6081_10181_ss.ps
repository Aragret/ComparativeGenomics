%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[-126.09059906 563.77252197]
[-124.47928619 578.70678711]
[-124.79100800 593.72448730]
[-127.02065277 608.57897949]
[-131.13159180 623.02642822]
[-137.05633545 636.82952881]
[-144.69757080 649.76165771]
[-153.92985535 661.61041260]
[-164.60156250 672.18127441]
[-176.53744507 681.30065918]
[-189.54153442 688.81878662]
[-203.40028381 694.61218262]
[-217.88609314 698.58575439]
[-232.76112366 700.67425537]
[-247.78111267 700.84338379]
[-262.69940186 699.09033203]
[-277.27099609 695.44396973]
[-291.25668335 689.96405029]
[-304.42675781 682.74066162]
[-316.56497192 673.89233398]
[-327.47198486 663.56445312]
[-336.96871948 651.92657471]
[-344.89920044 639.16979980]
[-351.13323975 625.50360107]
[-355.56845093 611.15234375]
[-358.13198853 596.35180664]
[-358.78176880 581.34497070]
[-357.50714111 566.37817383]
[-354.32901001 551.69732666]
[-349.29956055 537.54339600]
[-342.50140381 524.14886475]
[-334.04617310 511.73370361]
[-324.07269287 500.50167847]
[-312.74472046 490.63732910]
[-300.24832153 482.30258179]
[-286.78863525 475.63430786]
[-272.58676147 470.74203491]
[-257.87582397 467.70605469]
[-242.89744568 466.57626343]
[-227.89756775 467.37118530]
[-213.12249756 470.07778931]
[-198.81486511 474.65161133]
[-185.20960999 481.01757812]
[-177.16842651 468.35504150]
[-169.12725830 455.69250488]
[-172.61262512 441.25686646]
[-164.63812256 428.30072021]
[-149.47305298 424.74282837]
[-141.43188477 412.08029175]
[-133.39071655 399.41778564]
[-125.34953308 386.75524902]
[-117.30836487 374.09271240]
[-132.29339600 374.76281738]
[-142.27482605 363.56588745]
[-139.89471436 348.75592041]
[-126.90760803 341.25027466]
[-112.88710022 346.58181763]
[-108.16838837 360.81869507]
[-99.20769501 348.78930664]
[-90.24699402 336.75994873]
[-81.28630066 324.73056030]
[-72.32560730 312.70117188]
[-63.36491013 300.67181396]
[-64.80393219 288.66116333]
[-57.43707657 278.56594849]
[-44.77302933 276.11956787]
[-35.63422775 264.22494507]
[-26.49542427 252.33032227]
[-17.35662270 240.43568420]
[-15.73797703 225.62928772]
[-1.19468451 219.40007019]
[7.94411802 207.50543213]
[3.55244613 193.29800415]
[8.42645645 179.06044006]
[20.89525223 170.32073975]
[36.29742813 170.60211182]
[45.43622971 158.70747375]
[54.57503128 146.81283569]
[63.71383286 134.91821289]
[72.85263824 123.02357483]
[81.99143982 111.12894440]
[79.47407532 94.81849670]
[89.43122864 81.65708160]
[105.81149292 79.64347076]
[114.77218628 67.61409760]
[123.73288727 55.58471680]
[132.33145142 43.29388046]
[140.56025696 30.75247955]
[145.91143799 16.73945618]
[140.30688477 1.94420588]
[149.84655762 -9.49449444]
[144.24198914 -24.28974533]
[153.78166199 -35.72844696]
[155.00863647 -50.67818069]
[155.23196411 -65.67651367]
[155.45529175 -80.67485046]
[147.92431641 -94.58869171]
[155.85025024 -107.19935608]
[156.07357788 -122.19769287]
[142.23735046 -128.55998230]
[132.18998718 -140.00421143]
[127.67224121 -154.54759216]
[129.46685791 -169.67039490]
[137.26289368 -182.75251770]
[149.70964050 -191.52737427]
[164.65061951 -194.47470093]
[179.49723816 -191.08383179]
[191.67721558 -181.94227600]
[199.08029175 -168.63383484]
[200.42384338 -153.46430969]
[195.47508240 -139.06188965]
[185.09143066 -127.92188263]
[171.07191467 -121.97436523]
[170.84858704 -106.97602844]
[178.39553833 -94.13497162]
[170.45362854 -80.45152283]
[170.23030090 -65.45318604]
[170.00697327 -50.45485306]
[179.49734497 -62.07091904]
[193.72796631 -66.81322479]
[208.28932190 -63.21230698]
[218.66944885 -52.38395691]
[221.65191650 -37.68345261]
[216.31259155 -23.66590309]
[204.30592346 -14.67480373]
[189.35231018 -13.49614143]
[176.08528137 -20.49513817]
[168.61570740 -33.50333023]
[174.37942505 -19.76910782]
[164.68060303 -7.26937771]
[170.44432068 6.46484280]
[160.74548340 18.96457291]
[169.31095886 6.65064859]
[180.15110779 -3.71713829]
[192.83419800 -11.72584152]
[206.85505676 -17.05647850]
[221.65522766 -19.49672890]
[236.64523315 -18.94940376]
[251.22804260 -15.43629837]
[264.82281494 -9.09733963]
[276.88806152 -0.18500665]
[286.94323730 10.94572639]
[294.58786011 23.85152626]
[299.51745605 38.01836014]
[301.53564453 52.88196945]
[300.56207275 67.85034180]
[296.63549805 82.32729340]
[289.91235352 95.73620605]
[280.66036987 107.54302216]
[269.24807739 117.27746582]
[256.13000488 124.55182648]
[241.82865906 129.07637024]
[226.91365051 130.67088318]
[211.97903442 129.27185059]
[197.61964417 124.93500519]
[184.40744019 117.83307648]
[172.86862183 108.24893188]
[163.46279907 96.56430817]
[156.56459045 83.24459839]
[152.44876099 68.82031250]
[151.27922058 53.86597824]
[153.10165405 38.98128891]
[144.87284851 51.52268600]
[145.31002808 54.29162598]
[144.67674255 57.40057373]
[142.83799744 60.44267273]
[139.80841064 62.96975327]
[135.76226807 64.54541016]
[126.80156708 76.57479095]
[117.84087372 88.60417175]
[121.15321350 100.83863068]
[116.88270569 112.77246094]
[106.56021881 120.12772369]
[93.88607025 120.26774597]
[84.74726868 132.16238403]
[75.60846710 144.05700684]
[66.46966553 155.95164490]
[57.33086395 167.84628296]
[48.19205856 179.74090576]
[52.43185043 194.55072021]
[47.19935608 208.85017395]
[34.69801712 217.22755432]
[19.83875084 216.64424133]
[10.69994831 228.53886414]
[8.42763519 244.19604492]
[-5.46198940 249.57447815]
[-14.60079193 261.46911621]
[-23.73959351 273.36373901]
[-32.87839508 285.25839233]
[-34.86895752 303.56463623]
[-51.33553314 309.63250732]
[-60.29622650 321.66186523]
[-69.25691986 333.69125366]
[-78.21762085 345.72064209]
[-87.17831421 357.75000000]
[-96.13901520 369.77938843]
[-104.64583588 382.13391113]
[-112.68701172 394.79641724]
[-120.72818756 407.45895386]
[-128.76936340 420.12145996]
[-136.81053162 432.78399658]
[-133.58192444 448.02255249]
[-141.91719055 460.74960327]
[-156.46473694 463.73370361]
[-164.50590515 476.39620972]
[-172.54707336 489.05874634]
[-160.99987793 498.66552734]
[-150.77601624 509.67013550]
[-142.04338074 521.89178467]
[-134.94534302 535.12988281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 206]
[44 205]
[45 204]
[48 201]
[49 200]
[50 199]
[51 198]
[52 197]
[58 196]
[59 195]
[60 194]
[61 193]
[62 192]
[63 191]
[66 189]
[67 188]
[68 187]
[69 186]
[71 184]
[72 183]
[76 179]
[77 178]
[78 177]
[79 176]
[80 175]
[81 174]
[84 170]
[85 169]
[86 168]
[87 163]
[88 162]
[89 132]
[91 130]
[93 128]
[94 118]
[95 117]
[96 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
