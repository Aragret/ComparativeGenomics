%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[127.45783997 615.78723145]
[112.36738586 615.11273193]
[98.07868195 610.21276855]
[85.75003815 601.48455811]
[76.38088989 589.63568115]
[70.73075104 575.62664795]
[69.25765228 560.59313965]
[72.08100891 545.75384521]
[78.97194672 532.31170654]
[89.37184906 521.35638428]
[102.43764496 513.77600098]
[117.11013794 510.18511963]
[117.77992249 495.20007324]
[118.44970703 480.21505737]
[118.67303467 465.21670532]
[118.44970703 450.21838379]
[118.22637939 435.22003174]
[118.00305176 420.22171021]
[117.66807556 405.22543335]
[117.22147369 390.23208618]
[116.77486420 375.23873901]
[108.66205597 362.74746704]
[115.98504639 348.72305298]
[114.98078156 333.75671387]
[113.42026520 318.83810425]
[111.85974121 303.91949463]
[110.29921722 289.00088501]
[108.73869324 274.08227539]
[107.17816925 259.16369629]
[105.61764526 244.24508667]
[96.42124939 236.38677979]
[94.99906158 223.97061157]
[102.65535736 213.59063721]
[101.31712341 198.65045166]
[99.97888947 183.71026611]
[98.64065552 168.77008057]
[85.78423309 161.29676819]
[79.72192383 147.52316284]
[82.97044373 132.64698792]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[90.78962708 77.34691620]
[82.04734802 64.16044617]
[88.81661224 50.89294815]
[80.07433319 37.70647430]
[86.84358978 24.43898010]
[85.72794342 9.48052692]
[84.61228943 -5.47792673]
[83.49664307 -20.43638039]
[82.38099670 -35.39483261]
[78.94993591 -49.99715424]
[73.28714752 -63.88718414]
[67.62435913 -77.77720642]
[61.96157455 -91.66723633]
[56.29878616 -105.55726624]
[42.00744629 -111.75365448]
[36.46244049 -125.92078400]
[42.45782852 -139.50721741]
[38.93518448 -142.04589844]
[36.63496017 -145.25112915]
[35.61659622 -148.65676880]
[35.78202820 -151.82524109]
[36.89868164 -154.39646912]
[32.07268143 -168.59892273]
[27.24668503 -182.80137634]
[22.42068672 -197.00384521]
[20.37284851 -182.14428711]
[14.59786606 -168.30052185]
[5.47877455 -156.39077759]
[-6.37958956 -147.20495605]
[-20.19070435 -141.35234070]
[-35.03852463 -139.22111511]
[-49.93825531 -140.95260620]
[-63.90164185 -146.43200684]
[-76.00254822 -155.29586792]
[-85.43836975 -166.95628357]
[-91.58325195 -180.63986206]
[-94.02962494 -195.43902588]
[-92.61524200 -210.37220764]
[-87.43391418 -224.44891357]
[-78.82928467 -236.73550415]
[-67.37208557 -246.41705322]
[-53.82221603 -252.85142517]
[-39.07839966 -255.61184692]
[-24.11853981 -254.51522827]
[-9.93486881 -249.63429260]
[2.53186131 -241.29278564]
[12.45477676 -230.04397583]
[19.17741585 -216.62910461]
[19.17741585 -231.62910461]
[19.17741585 -246.62910461]
[11.44011497 -260.42929077]
[19.17741585 -273.15655518]
[19.17741585 -288.15655518]
[19.17741585 -303.15655518]
[4.92474508 -308.31768799]
[-6.70118427 -318.04461670]
[-14.29648590 -331.16281128]
[-16.94398880 -346.08819580]
[-14.32399559 -361.01840210]
[-6.75288248 -374.15057373]
[4.85510206 -383.89895630]
[19.09823608 -389.08633423]
[34.25659561 -389.08633423]
[48.49972916 -383.89895630]
[60.10771561 -374.15057373]
[67.67882538 -361.01840210]
[70.29882050 -346.08819580]
[67.65131378 -331.16281128]
[60.05601501 -318.04461670]
[48.43008423 -308.31768799]
[34.17741394 -303.15655518]
[34.17741394 -288.15655518]
[34.17741394 -273.15655518]
[41.91471481 -260.42929077]
[34.17741394 -246.62910461]
[34.17741394 -231.62910461]
[34.17741394 -216.62910461]
[36.62314224 -201.82983398]
[41.44914246 -187.62738037]
[46.27513885 -173.42492676]
[51.10113525 -159.22247314]
[56.34785461 -145.16999817]
[70.13348389 -139.64804077]
[76.07422638 -125.64224243]
[70.18881226 -111.22004700]
[75.85160065 -97.33002472]
[81.51438904 -83.43999481]
[87.17717743 -69.54997253]
[92.83995819 -55.65994263]
[94.05465698 -70.61067963]
[99.20611572 -84.69834900]
[107.92243958 -96.90596008]
[119.57439423 -106.35221863]
[133.32081604 -112.35520935]
[148.16934204 -114.48155975]
[163.04803467 -112.57776642]
[176.88279724 -106.78127289]
[188.67488098 -97.51052856]
[197.57301331 -85.43479156]
[202.93481445 -71.42583466]
[204.37322998 -56.49495697]
[201.78440857 -41.72004700]
[195.35523987 -28.16771126]
[185.54985046 -16.81630707]
[173.07611084 -8.48530006]
[158.83450317 -3.77611327]
[143.85313416 -3.02870750]
[129.21351624 -6.29703856]
[115.97252655 -13.34516239]
[105.08602142 -23.66427040]
[97.33944702 -36.51048279]
[98.45509338 -21.55202866]
[99.57074738 -6.59357548]
[100.68639374 8.36487770]
[101.80204010 23.32333183]
[110.46452332 35.43987656]
[103.77506256 49.77730179]
[112.43754578 61.89384842]
[105.74808502 76.23126984]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[122.58181000 129.09887695]
[128.42240906 143.16091919]
[124.90444946 157.79266357]
[113.58084106 167.43185425]
[114.91907501 182.37203979]
[116.25730896 197.31222534]
[117.59554291 212.25241089]
[128.53533936 227.06465149]
[120.53625488 242.68455505]
[122.09677124 257.60314941]
[123.65729523 272.52175903]
[125.21781921 287.44036865]
[126.77834320 302.35897827]
[128.33886719 317.27758789]
[129.89938354 332.19619751]
[141.22879028 322.36538696]
[156.00559998 324.94332886]
[163.33691406 338.02963257]
[157.81835938 351.97760010]
[143.51799011 356.50527954]
[130.97839355 348.27645874]
[139.12315369 361.84011841]
[131.76821899 374.79214478]
[132.21482849 389.78549194]
[132.66142273 404.77883911]
[136.04495239 413.26348877]
[133.00138855 419.99838257]
[133.22471619 434.99670410]
[133.44804382 449.99505615]
[133.67137146 464.99337769]
[136.02949524 468.63937378]
[137.00648499 472.46166992]
[136.71650696 476.00445557]
[135.41006470 478.89578247]
[133.43475342 480.88482666]
[132.76496887 495.86987305]
[132.09518433 510.85491943]
[146.38879395 515.74047852]
[158.72621155 524.45629883]
[168.10725403 536.29577637]
[173.77145386 550.29907227]
[175.25965881 565.33111572]
[172.45121765 580.17327881]
[165.57377625 593.62231445]
[155.18489075 604.58807373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 202]
[13 201]
[14 200]
[15 195]
[16 194]
[17 193]
[18 192]
[19 190]
[20 189]
[21 188]
[23 186]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[33 172]
[34 171]
[35 170]
[36 169]
[40 165]
[41 164]
[43 163]
[44 162]
[46 160]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[60 125]
[65 124]
[66 123]
[67 122]
[68 121]
[91 120]
[92 119]
[93 118]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
