%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[71.20851898 463.62930298]
[58.51828384 455.59970093]
[46.84606171 446.15109253]
[36.34970093 435.41131592]
[27.17115784 423.52557373]
[19.43455887 410.65463257]
[13.24453163 396.97250366]
[8.68479061 382.66427612]
[5.81700087 367.92346191]
[4.67994595 352.94934082]
[5.28900337 337.94448853]
[7.63593578 323.11181641]
[11.68900394 308.65191650]
[17.39339638 294.76031494]
[24.67196465 281.62490845]
[33.42627716 269.42330933]
[43.53793716 258.32058716]
[54.87020111 248.46682739]
[67.26981354 239.99534607]
[80.56907654 233.02067566]
[94.58814240 227.63714600]
[109.13741302 223.91757202]
[107.13339996 209.05204773]
[97.76509094 197.47257996]
[103.58930969 182.76240540]
[101.58529663 167.89688110]
[99.58128357 153.03135681]
[97.57727051 138.16583252]
[95.57325745 123.30030060]
[93.56924438 108.43476868]
[90.90345001 93.67355347]
[87.58118439 79.04609680]
[84.25892639 64.41863251]
[77.77772522 77.94616699]
[65.06808472 85.91265106]
[50.06821823 85.84959412]
[37.42599869 77.77653503]
[31.05875778 64.19499207]
[32.93945312 49.31336212]
[42.48533249 37.74287415]
[56.73849869 33.06877136]
[71.28245544 36.73937607]
[81.61071777 47.61754227]
[80.27248383 32.67735672]
[78.93424988 17.73717117]
[77.59601593 2.79698539]
[62.60097122 3.31040072]
[47.60041809 2.99699140]
[32.63990402 1.85770905]
[17.76486969 -0.10398621]
[3.02048945 -2.88213682]
[-11.54846001 -6.46830559]
[-25.89773178 -10.85160160]
[-39.98374939 -16.01871109]
[-53.76372910 -21.95394516]
[-67.19582367 -28.63927650]
[-80.23925018 -36.05440140]
[-92.85437775 -44.17679977]
[-105.00290680 -52.98180771]
[-116.64793396 -62.44268036]
[-127.75410461 -72.53068542]
[-138.28768921 -83.21519470]
[-148.21667480 -94.46374512]
[-157.51094055 -106.24217987]
[-166.14224243 -118.51473236]
[-174.08436584 -131.24414062]
[-181.31318665 -144.39172363]
[-187.80676270 -157.91755676]
[-193.54536438 -171.78057861]
[-198.51158142 -185.93867493]
[-202.69030762 -200.34884644]
[-206.06886292 -214.96733093]
[-208.63699341 -229.74974060]
[-210.38688660 -244.65118408]
[-211.31323242 -259.62637329]
[-211.41320801 -274.62988281]
[-210.68653870 -289.61608887]
[-209.13540649 -304.53955078]
[-206.76454163 -319.35485840]
[-203.58111572 -334.01708984]
[-199.59481812 -348.48165894]
[-194.81774902 -362.70471191]
[-189.26441956 -376.64297485]
[-182.95169067 -390.25415039]
[-175.89874268 -403.49691772]
[-168.12698364 -416.33102417]
[-159.66001892 -428.71752930]
[-150.52357483 -440.61880493]
[-140.74537659 -451.99868774]
[-130.35513306 -462.82263184]
[-119.38441467 -473.05776978]
[-107.86650848 -482.67300415]
[-95.83641052 -491.63916016]
[-83.33065796 -499.92895508]
[-70.38722992 -507.51727295]
[-57.04542542 -514.38104248]
[-43.34577179 -520.49938965]
[-29.32987595 -525.85382080]
[-15.04029846 -530.42797852]
[-0.52044034 -534.20800781]
[14.18560314 -537.18237305]
[29.03317070 -539.34216309]
[43.97716904 -540.68072510]
[58.97221375 -541.19403076]
[73.97277069 -540.88055420]
[88.93327332 -539.74114990]
[103.80829620 -537.77935791]
[118.55265045 -535.00109863]
[133.12158203 -531.41485596]
[147.47082520 -527.03143311]
[161.55679321 -521.86419678]
[175.33673096 -515.92889404]
[188.76878357 -509.24346924]
[201.81214905 -501.82824707]
[214.42723083 -493.70574951]
[226.57569885 -484.90066528]
[238.22065735 -475.43972778]
[249.32676697 -465.35162354]
[259.86026001 -454.66705322]
[269.78918457 -443.41842651]
[279.08334351 -431.63992310]
[287.71456909 -419.36730957]
[295.65658569 -406.63784790]
[302.88534546 -393.49023438]
[309.37881470 -379.96432495]
[315.11734009 -366.10128784]
[320.08343506 -351.94314575]
[324.26205444 -337.53295898]
[327.64050293 -322.91442871]
[330.20852661 -308.13201904]
[331.95831299 -293.23056030]
[332.88455200 -278.25534058]
[332.98443604 -263.25186157]
[332.25765991 -248.26562500]
[330.70642090 -233.34220886]
[328.33544922 -218.52690125]
[325.15191650 -203.86470032]
[321.16552734 -189.40014648]
[316.38836670 -175.17715454]
[310.83493042 -161.23892212]
[304.52212524 -147.62777710]
[297.46905518 -134.38505554]
[289.69720459 -121.55099487]
[281.23016357 -109.16455078]
[272.09362793 -97.26335144]
[262.31536865 -85.88352966]
[251.92504883 -75.05966187]
[240.95425415 -64.82460022]
[229.43627930 -55.20944214]
[217.40611267 -46.24338913]
[204.90029907 -37.95366287]
[191.95681763 -30.36544228]
[178.61497498 -23.50177574]
[164.91526794 -17.38350487]
[150.89933777 -12.02921295]
[136.60972595 -7.45515919]
[122.08984375 -3.67523527]
[107.38378143 -0.70092082]
[92.53620148 1.45875120]
[93.87443542 16.39893532]
[95.21266937 31.33912086]
[96.55090332 46.27930450]
[98.88639069 61.09637451]
[102.20864868 75.72383118]
[105.53090668 90.35129547]
[114.42050934 78.26927948]
[129.22830200 75.87567902]
[141.47171021 84.54164886]
[144.13714600 99.30293274]
[135.69773865 111.70359039]
[120.98795319 114.63996887]
[108.43476868 106.43075562]
[110.43878174 121.29628754]
[112.44279480 136.16181946]
[114.44681549 151.02734375]
[116.45082855 165.89286804]
[118.45484161 180.75839233]
[127.96649170 193.40113831]
[121.99893188 207.04803467]
[124.00294495 221.91355896]
[139.01779175 221.64761353]
[153.96199036 223.12661743]
[168.63343811 226.33056641]
[182.83370972 231.21614075]
[196.37075806 237.71726990]
[209.06152344 245.74603271]
[220.73439026 255.19383240]
[231.23146057 265.93292236]
[240.41079712 277.81805420]
[248.14825439 290.68847656]
[254.33918762 304.37017822]
[258.89990234 318.67810059]
[261.76867676 333.41876221]
[262.90670776 348.39276123]
[262.29867554 363.39767456]
[259.95272827 378.23049927]
[255.90061951 392.69067383]
[250.19715881 406.58267212]
[242.91946411 419.71856689]
[234.16596985 431.92071533]
[224.05503845 443.02413940]
[212.72343445 452.87863159]
[200.32438660 461.35095215]
[187.02558899 468.32650757]
[173.00688171 473.71096802]
[158.45785522 477.43151855]
[143.57528687 479.43783569]
[128.56040955 479.70278931]
[113.61631012 478.22277832]
[98.94508362 475.01785278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 180]
[23 179]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[31 165]
[32 164]
[33 163]
[43 162]
[44 161]
[45 160]
[46 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
