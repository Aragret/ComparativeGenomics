%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[133.42706299 691.05920410]
[134.91041565 676.04382324]
[140.23042297 661.92431641]
[149.02432251 649.66339111]
[160.69256592 640.09710693]
[174.43955994 633.87756348]
[171.99383545 619.07830811]
[169.54809570 604.27899170]
[167.10237122 589.47973633]
[157.39344788 578.18432617]
[162.77711487 563.30731201]
[160.33139038 548.50799561]
[157.88566589 533.70874023]
[155.43992615 518.90948486]
[145.79209900 511.61248779]
[143.63340759 499.30297852]
[150.65830994 488.48571777]
[148.43319702 473.65167236]
[146.20806885 458.81762695]
[136.66839600 447.37890625]
[142.27296448 432.58367920]
[140.04785156 417.74963379]
[137.82272339 402.91558838]
[135.59761047 388.08154297]
[133.37249756 373.24749756]
[131.14738464 358.41345215]
[116.17501831 357.89508057]
[101.54898071 354.63336182]
[87.76770020 348.73797607]
[75.30110168 340.40835571]
[64.57456970 329.92694092]
[55.95444870 317.64965820]
[49.73550415 303.99380493]
[46.13087463 289.42382812]
[45.26474380 274.43557739]
[47.16807175 259.53948975]
[51.77748871 245.24296570]
[58.93741226 232.03343201]
[68.40528107 220.36141968]
[79.85979462 210.62538147]
[92.91178131 203.15798950]
[107.11747742 198.21487427]
[104.89235687 183.38082886]
[102.66724396 168.54678345]
[100.44212341 153.71273804]
[98.21701050 138.87869263]
[95.99188995 124.04465485]
[93.76677704 109.21060944]
[84.00317383 120.59797668]
[69.05837250 121.88359833]
[57.49342346 112.33100891]
[55.93325806 97.41236877]
[65.27160645 85.67375183]
[80.15904999 83.83956909]
[92.06688690 92.95970154]
[91.17407227 77.98629761]
[90.28125763 63.01289368]
[89.38844299 48.03948593]
[88.49562836 33.06608200]
[76.73855591 42.38119507]
[62.09159470 39.14600754]
[55.35193253 25.74537468]
[61.48779678 12.05774784]
[75.97605896 8.17313385]
[88.13571930 16.95367813]
[88.35904694 1.95534146]
[88.58237457 -13.04299641]
[88.80570221 -28.04133415]
[89.02902985 -43.03966904]
[89.25235748 -58.03800964]
[88.02538300 -72.98773956]
[85.35958862 -87.74896240]
[75.29289246 -99.95437622]
[80.64513397 -113.85411835]
[77.97933960 -128.61534119]
[75.31354523 -143.37655640]
[72.42827606 -158.09643555]
[69.32416534 -172.77174377]
[66.22005463 -187.44705200]
[63.11594391 -202.12234497]
[57.40470505 -188.25218201]
[45.96131516 -178.55429077]
[31.34226036 -175.19523621]
[16.81347275 -178.92543030]
[5.62072182 -188.91154480]
[0.26449519 -202.92263794]
[1.94138813 -217.82861328]
[10.27677822 -230.29942322]
[23.40851784 -237.54907227]
[38.40294647 -237.95796204]
[51.91026306 -231.43475342]
[60.91291428 -219.43670654]
[60.24312973 -234.42175293]
[59.57334518 -249.40678406]
[58.90355682 -264.39181519]
[44.37081909 -268.64367676]
[32.00751495 -277.38595581]
[23.15472412 -289.67037964]
[18.77273369 -304.16439819]
[19.33686829 -319.29583740]
[24.78593445 -333.42333984]
[34.52885818 -345.01446533]
[47.50880051 -352.81188965]
[62.31779099 -355.96981812]
[77.34946442 -354.14566040]
[90.97330475 -347.53735352]
[101.71147919 -336.86166382]
[108.39921570 -323.27664185]
[110.31105804 -308.25588989]
[107.23963928 -293.42871094]
[99.51811218 -280.40347290]
[87.98405457 -270.59304810]
[73.88859558 -265.06161499]
[74.55838013 -250.07656860]
[75.22816467 -235.09153748]
[75.89794922 -220.10649109]
[77.79124451 -205.22645569]
[80.89535522 -190.55116272]
[83.99946594 -175.87585449]
[87.10357666 -161.20054626]
[90.54669952 -157.89086914]
[91.94725037 -152.38311768]
[90.07476044 -146.04234314]
[92.74055481 -131.28112793]
[95.40635681 -116.51991272]
[105.28237152 -105.37031555]
[100.12080383 -90.41475677]
[102.78659821 -75.65353394]
[108.24259186 -89.62608337]
[118.85260010 -100.22927856]
[132.82865906 -105.67629242]
[147.81553650 -105.04920197]
[161.28770447 -98.45369720]
[170.97485352 -87.00122070]
[175.24453735 -72.62172699]
[173.37722778 -57.73841095]
[165.68759155 -44.85936737]
[153.47149658 -36.15494919]
[138.78755188 -33.09199905]
[124.11026001 -36.18667984]
[111.91300201 -44.91748047]
[104.25069427 -57.81468201]
[104.02736664 -42.81634140]
[103.80403900 -27.81800652]
[103.58071136 -12.81966782]
[103.35738373 2.17866921]
[103.13405609 17.17700577]
[103.46903229 32.17326736]
[104.36184692 47.14667130]
[105.25466156 62.12007904]
[106.14747620 77.09348297]
[107.04029846 92.06688690]
[108.60081482 106.98549652]
[110.82593536 121.81953430]
[113.05105591 136.65357971]
[115.27616882 151.48762512]
[117.50128937 166.32167053]
[119.72640228 181.15571594]
[121.95152283 195.98976135]
[136.98233032 196.54737854]
[151.65083313 199.85667419]
[165.45777893 205.80346680]
[177.93353271 214.18392944]
[188.65402222 224.71139526]
[197.25517273 237.02630615]
[203.44525146 250.70840454]
[207.01478577 265.29110718]
[207.84362793 280.27746582]
[205.90499878 295.15695190]
[201.26640320 309.42306519]
[194.08720398 322.59033203]
[184.61317444 334.21109009]
[173.16810608 343.89044189]
[160.14274597 351.29986572]
[145.98141479 356.18832397]
[148.20654297 371.02236938]
[150.43165588 385.85641479]
[152.65676880 400.69046021]
[154.88189697 415.52450562]
[157.10700989 430.35855103]
[166.80583191 442.85827637]
[161.04211426 456.59249878]
[163.26724243 471.42654419]
[165.49235535 486.26058960]
[177.29438782 500.39541626]
[170.23919678 516.46374512]
[172.68493652 531.26300049]
[175.13066101 546.06231689]
[177.57638550 560.86157227]
[187.46023560 573.21551514]
[181.90164185 587.03399658]
[184.34736633 601.83331299]
[186.79310608 616.63256836]
[189.23883057 631.43182373]
[204.25593567 632.89782715]
[218.38157654 638.20141602]
[230.65264893 646.98114014]
[240.23249817 658.63830566]
[246.46794128 672.37805176]
[248.93383789 687.26367188]
[247.46206665 702.28021240]
[242.15298462 716.40380859]
[233.36854553 728.67150879]
[221.70770264 738.24682617]
[207.96551514 744.47698975]
[193.07893372 746.93713379]
[178.06297302 745.45959473]
[163.94143677 740.14501953]
[151.67713928 731.35583496]
[142.10629272 719.69134521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[9 191]
[11 189]
[12 188]
[13 187]
[14 186]
[17 184]
[18 183]
[19 182]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 128]
[72 127]
[74 125]
[75 124]
[76 123]
[77 120]
[78 119]
[79 118]
[80 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
