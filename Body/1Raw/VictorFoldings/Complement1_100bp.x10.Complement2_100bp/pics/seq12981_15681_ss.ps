%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[135.49716187 572.38330078]
[148.50210571 564.62762451]
[145.39799500 549.95233154]
[142.29388428 535.27703857]
[139.18977356 520.60174561]
[136.08566284 505.92642212]
[132.98155212 491.25109863]
[122.77794647 480.40051270]
[127.49194336 465.29788208]
[125.21875763 463.65753174]
[123.45835876 461.01791382]
[122.59462738 457.56982422]
[122.93532562 453.63937378]
[124.66741180 449.65768433]
[115.12929535 442.21786499]
[113.15410614 429.87759399]
[120.33927917 419.16610718]
[118.33526611 404.30056763]
[116.33125305 389.43502808]
[114.32723999 374.56951904]
[112.32322693 359.70397949]
[110.17833710 357.89910889]
[108.61914062 355.13586426]
[108.01425934 351.63305664]
[108.64634705 347.73883057]
[110.66977692 343.89700317]
[109.55413055 328.93856812]
[108.43848419 313.98010254]
[94.03798676 309.99124146]
[81.84825134 301.29989624]
[73.35171509 288.93933105]
[69.58974457 274.39047241]
[71.03508759 259.40444946]
[77.53250122 245.79182434]
[88.31520844 235.20384216]
[102.09533691 228.93220520]
[100.97969055 213.97375488]
[99.86404419 199.01530457]
[98.74839783 184.05685425]
[97.63274384 169.09840393]
[96.51709747 154.13993835]
[87.85461426 142.02339172]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[78.80504608 63.13768387]
[77.88671112 47.95179367]
[87.77060699 36.86828232]
[86.65496063 21.90982819]
[77.91268158 8.72335243]
[84.68193817 -4.54414177]
[83.56629181 -19.50259590]
[69.42694092 -25.14531136]
[59.18143463 -36.32192230]
[54.82242203 -50.77941513]
[57.16320801 -65.63478088]
[65.68659210 -77.94985962]
[78.65797424 -85.31252289]
[77.54232788 -100.27097321]
[76.42668152 -115.22942352]
[67.68440247 -128.41589355]
[74.45365906 -141.68339539]
[72.67119598 -156.57711792]
[70.22546387 -171.37638855]
[67.77973938 -186.17565918]
[57.89588165 -198.52960205]
[63.45447922 -212.34811401]
[61.00875092 -227.14738464]
[58.56302261 -241.94665527]
[56.11729431 -256.74591064]
[41.12343216 -255.94143677]
[26.13206863 -256.79132080]
[11.32519341 -259.28521729]
[-3.11745501 -263.39291382]
[-17.02055550 -269.06451416]
[-30.21533775 -276.23117065]
[-42.54162979 -284.80587769]
[-53.84980011 -294.68457031]
[-64.00257874 -305.74731445]
[-72.87671661 -317.85980225]
[-80.36449432 -330.87506104]
[-86.37502289 -344.63500977]
[-90.83532715 -358.97268677]
[-93.69126892 -373.71401978]
[-94.90818024 -388.68005371]
[-94.47129059 -403.68914795]
[-92.38590240 -418.55905151]
[-88.67732239 -433.10928345]
[-83.39057922 -447.16323853]
[-76.58985138 -460.55029297]
[-68.35768127 -473.10794067]
[-58.79401398 -484.68377686]
[-48.01493454 -495.13720703]
[-36.15129089 -504.34140015]
[-23.34709930 -512.18463135]
[-9.75779057 -518.57159424]
[4.45167255 -523.42492676]
[19.10880089 -526.68554688]
[34.03567123 -528.31396484]
[49.05108643 -528.29040527]
[63.97276688 -526.61511230]
[78.61958313 -523.30841064]
[92.81373596 -518.41058350]
[106.38291931 -511.98089600]
[119.16241455 -504.09753418]
[130.99710083 -494.85610962]
[141.74328613 -484.36886597]
[151.27056885 -472.76309204]
[159.46325684 -460.17962646]
[166.22190857 -446.77130127]
[171.46449280 -432.70080566]
[175.12734985 -418.13897705]
[177.16603088 -403.26260376]
[177.55578613 -388.25222778]
[176.29187012 -373.29006958]
[173.38964844 -358.55780029]
[168.88433838 -344.23419189]
[162.83062744 -330.49316406]
[155.30201721 -317.50152588]
[146.38987732 -305.41693115]
[136.20240784 -294.38613892]
[124.86327362 -284.54299927]
[112.51010895 -276.00704956]
[99.29288483 -268.88186646]
[85.37204742 -263.25396729]
[70.91656494 -259.19165039]
[73.36229706 -244.39237976]
[75.80802155 -229.59310913]
[78.25374603 -214.79383850]
[87.96266937 -203.49844360]
[82.57901001 -188.62138367]
[85.02473450 -173.82211304]
[87.47046661 -159.02284241]
[97.06343842 -170.55430603]
[111.98744202 -172.06230164]
[123.69333649 -162.68295288]
[125.47544098 -147.78918457]
[116.31289673 -135.91284180]
[101.45442200 -133.85720825]
[89.41210938 -142.79904175]
[98.07459259 -130.68249512]
[91.38513184 -116.34507751]
[92.50077820 -101.38661957]
[93.61643219 -86.42816925]
[107.53648376 -81.07115936]
[117.79240417 -70.15669250]
[122.31095123 -55.81292343]
[120.14480591 -40.86876297]
[111.67060852 -28.29597664]
[98.52474213 -20.61824417]
[99.64038849 -5.65979004]
[108.30287170 6.45675611]
[101.61341095 20.79417992]
[102.72905731 35.75263214]
[114.14774323 45.24732971]
[115.49225616 60.40143585]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[118.24481201 139.75680542]
[111.47554779 153.02429199]
[112.59120178 167.98275757]
[113.70684814 182.94120789]
[114.82249451 197.89965820]
[115.93814850 212.85810852]
[117.05379486 227.81655884]
[131.61180115 231.97465515]
[143.84585571 240.84596252]
[152.29069519 253.34414673]
[155.94308472 267.94998169]
[154.38093567 282.89590454]
[147.81198120 296.38009644]
[137.04638672 306.78353882]
[123.39693451 312.86444092]
[124.51258087 327.82290649]
[125.62823486 342.78137207]
[127.18875122 357.69998169]
[129.19276428 372.56549072]
[131.19677734 387.43103027]
[133.20079041 402.29653931]
[135.20480347 417.16207886]
[146.79508972 431.47106934]
[139.50144958 447.43255615]
[142.16725159 462.19378662]
[152.59288025 474.09405518]
[147.65686035 488.14700317]
[150.76097107 502.82229614]
[153.86508179 517.49761963]
[156.96919250 532.17291260]
[160.07330322 546.84820557]
[163.17739868 561.52349854]
[178.20892334 563.34893799]
[191.83219910 569.95837402]
[202.56947327 580.63500977]
[209.25605774 594.22058105]
[211.16662598 609.24151611]
[208.09394836 624.06842041]
[200.37132263 637.09301758]
[188.83644104 646.90246582]
[174.74050903 652.43267822]
[159.61256409 653.08386230]
[145.09356689 648.78533936]
[132.75843811 640.00335693]
[123.94518280 627.69055176]
[119.60980225 613.18249512]
[120.22257996 598.05291748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[9 188]
[14 187]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[26 180]
[27 179]
[28 178]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[41 165]
[43 163]
[44 162]
[46 160]
[47 159]
[50 156]
[51 155]
[53 153]
[54 152]
[60 146]
[61 145]
[62 144]
[64 142]
[65 135]
[66 134]
[67 133]
[69 131]
[70 130]
[71 129]
[72 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
