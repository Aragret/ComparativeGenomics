%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[185.41415405 631.21081543]
[184.76664734 616.19989014]
[186.21463013 601.24499512]
[189.72991943 586.63714600]
[195.24409485 572.66076660]
[202.64981079 559.58782959]
[211.80291748 547.67285156]
[222.52523804 537.14770508]
[234.60807800 528.21734619]
[247.81622314 521.05560303]
[242.56950378 507.00311279]
[237.32278442 492.95065308]
[232.07606506 478.89819336]
[226.82934570 464.84570312]
[221.58262634 450.79324341]
[216.33592224 436.74078369]
[204.63560486 427.52383423]
[207.05711365 411.88903809]
[195.35681152 402.67208862]
[197.77830505 387.03729248]
[193.88232422 384.27499390]
[191.68023682 379.03591919]
[192.59141541 372.48751831]
[187.76541138 358.28506470]
[182.93942261 344.08261108]
[178.11341858 329.88015747]
[173.28741455 315.67770386]
[168.46142578 301.47525024]
[163.11022949 287.46221924]
[157.24127197 273.65805054]
[151.73129272 268.73242188]
[151.38938904 259.60440063]
[145.72660828 245.71437073]
[133.75706482 236.84986877]
[135.71199036 221.14990234]
[130.04920959 207.25987244]
[127.52067566 206.04963684]
[125.31919098 203.76489258]
[123.85641479 200.52517700]
[123.49316406 196.59675598]
[124.49005890 192.37062073]
[119.66405487 178.16816711]
[114.83805847 163.96571350]
[109.90646362 149.79957581]
[104.86955261 135.67054749]
[99.83263397 121.54151154]
[94.79571533 107.41248322]
[91.58084869 105.28246307]
[89.32046509 101.74572754]
[88.62178040 97.26031494]
[89.86476898 92.53857422]
[85.46376801 78.19873047]
[81.06276703 63.85888290]
[74.93507385 77.55017090]
[61.98797607 85.12464905]
[47.05043411 83.75723267]
[35.69377899 73.95793152]
[32.15375900 59.38163757]
[37.75071716 45.46495438]
[50.39712524 37.39846039]
[65.37618256 38.19075394]
[77.10173035 47.54730606]
[74.43592834 32.78608704]
[64.36923981 20.58066940]
[69.72148132 6.68092966]
[67.05568695 -8.08028698]
[56.98899460 -20.28570557]
[62.34123611 -34.18544388]
[59.67544174 -48.94666290]
[57.00964737 -63.70787811]
[54.34384918 -78.46909332]
[51.56824112 -93.21006012]
[48.68296814 -107.92995453]
[45.79769516 -122.64984131]
[42.91242218 -137.36973572]
[39.91764832 -152.06773376]
[35.08008957 -159.81602478]
[36.87828445 -166.98457336]
[33.99301147 -181.70446777]
[31.10773849 -196.42436218]
[21.74514580 -201.96064758]
[17.07129478 -211.53851318]
[18.41232300 -221.88983154]
[25.08600807 -229.62773132]
[22.64027977 -244.42700195]
[20.19455338 -259.22625732]
[15.70779800 -267.18283081]
[17.82429314 -274.26394653]
[15.59917641 -289.09799194]
[0.60556513 -290.78738403]
[-13.43954945 -296.30075073]
[-25.57854843 -305.26217651]
[-34.98377609 -317.06063843]
[-41.01396561 -330.89175415]
[-43.25796890 -345.81243896]
[-41.56278992 -360.80538940]
[-36.04400253 -374.84835815]
[-27.07789230 -386.98391724]
[-15.27578259 -396.38458252]
[-1.44235873 -402.40942383]
[13.47919178 -404.64767456]
[28.47149467 -402.94671631]
[42.51234818 -397.42248535]
[54.64442062 -388.45169067]
[64.04053497 -376.64596558]
[70.06004333 -362.81021118]
[72.29252625 -347.88778687]
[70.58576202 -332.89614868]
[65.05613708 -318.85742188]
[56.08065796 -306.72882080]
[44.27129364 -297.33728027]
[30.43321991 -291.32312012]
[32.65833664 -276.48907471]
[34.99382401 -261.67199707]
[37.43955231 -246.87272644]
[39.88528061 -232.07345581]
[53.21467972 -218.06581116]
[45.82762909 -199.30963135]
[48.71290207 -184.58973694]
[51.59817505 -169.86985779]
[54.59294891 -155.17184448]
[59.05259323 -149.27835083]
[57.63231277 -140.25500488]
[60.51758575 -125.53511810]
[63.40285873 -110.81522369]
[66.28813171 -96.09532928]
[70.65953064 -90.13608551]
[69.10507202 -81.13489532]
[71.77086639 -66.37367249]
[74.43666077 -51.61245728]
[77.10245514 -36.85124207]
[86.97846985 -25.70164299]
[81.81690216 -10.74608326]
[84.48269653 4.01513433]
[94.35871887 15.16473198]
[89.19715118 30.12029266]
[91.86294556 44.88150787]
[95.40261841 59.45788574]
[99.80361176 73.79772949]
[104.20461273 88.13758087]
[108.92474365 102.37556458]
[113.96166229 116.50460052]
[118.99858093 130.63362122]
[124.03549957 144.76264954]
[129.86486816 151.79516602]
[129.04051208 159.13970947]
[133.86651611 173.34216309]
[138.69250488 187.54461670]
[143.93922424 201.59709167]
[149.60202026 215.48712158]
[161.97659302 225.34512329]
[159.61663818 240.05157471]
[165.27941895 253.94160461]
[171.04545593 267.78909302]
[176.91441345 281.59326172]
[184.86083984 268.87106323]
[199.74369812 267.00006104]
[210.59188843 277.35943604]
[209.40852356 292.31268311]
[197.06594849 300.83682251]
[182.66387939 296.64926147]
[187.48988342 310.85171509]
[192.31587219 325.05416870]
[197.14187622 339.25662231]
[201.96786499 353.45907593]
[206.79386902 367.66152954]
[211.83078003 381.79055786]
[223.90637207 392.01263428]
[221.10958862 406.64230347]
[233.18516541 416.86437988]
[230.38838196 431.49404907]
[235.63510132 445.54650879]
[240.88182068 459.59899902]
[246.12854004 473.65145874]
[251.37525940 487.70394897]
[256.62197876 501.75640869]
[261.86868286 515.80889893]
[276.53851318 512.56195068]
[291.51745605 511.38836670]
[306.51394653 512.31091309]
[321.23611450 515.31170654]
[335.39730835 520.33227539]
[348.72195435 527.27490234]
[360.95065308 536.00445557]
[371.84533691 546.35101318]
[381.19400024 558.11322021]
[388.81463623 571.06201172]
[394.55889893 584.94543457]
[398.31500244 599.49322510]
[400.00979614 614.42218018]
[399.61032104 629.44171143]
[397.12432861 644.25952148]
[392.60021973 658.58703613]
[386.12606812 672.14550781]
[377.82788086 684.67089844]
[367.86721802 695.91949463]
[356.43789673 705.67230225]
[343.76248169 713.73950195]
[330.08761597 719.96405029]
[315.67953491 724.22473145]
[300.81869507 726.43865967]
[285.79437256 726.56274414]
[270.89898682 724.59454346]
[256.42251587 720.57244873]
[242.64671326 714.57464600]
[229.83975220 706.71789551]
[218.25093079 697.15521240]
[208.10581970 686.07269287]
[199.60188293 673.68603516]
[192.90467834 660.23632812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[18 169]
[20 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 155]
[30 154]
[32 153]
[33 152]
[35 150]
[36 149]
[41 148]
[42 147]
[43 146]
[44 144]
[45 143]
[46 142]
[47 141]
[51 140]
[52 139]
[53 138]
[62 137]
[63 136]
[65 134]
[66 133]
[68 131]
[69 130]
[70 129]
[71 128]
[72 126]
[73 125]
[74 124]
[75 123]
[76 121]
[78 120]
[79 119]
[80 118]
[84 116]
[85 115]
[86 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
