%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[66.31418610 661.70178223]
[51.46095276 663.82177734]
[36.51411057 665.12744141]
[21.51827240 665.61492920]
[6.51818562 665.28283691]
[-8.44137859 664.13201904]
[-23.31577682 662.16601562]
[-38.06061935 659.39068604]
[-52.63189697 655.81427002]
[-66.98612213 651.44744873]
[-81.08046722 646.30328369]
[-94.87285614 640.39709473]
[-108.32213593 633.74658203]
[-121.38816071 626.37145996]
[-134.03193665 618.29388428]
[-146.21574402 609.53784180]
[-157.90319824 600.12957764]
[-169.05943298 590.09704590]
[-179.65116882 579.47027588]
[-189.64675903 568.28094482]
[-199.01640320 556.56250000]
[-207.73211670 544.34979248]
[-215.76791382 531.67938232]
[-223.09977722 518.58911133]
[-229.70587158 505.11791992]
[-235.56643677 491.30609131]
[-240.66401672 477.19482422]
[-244.98336792 462.82626343]
[-248.51162720 448.24322510]
[-251.23825073 433.48931885]
[-253.15509033 418.60848999]
[-254.25645447 403.64520264]
[-254.53903198 388.64410400]
[-254.00199890 373.64996338]
[-252.64694214 358.70751953]
[-250.47790527 343.86135864]
[-247.50135803 329.15582275]
[-243.72621155 314.63476562]
[-239.16369629 300.34152222]
[-233.82745361 286.31878662]
[-227.73339844 272.60836792]
[-220.89973450 259.25122070]
[-213.34681702 246.28715515]
[-205.09722900 233.75491333]
[-196.17556763 221.69187927]
[-186.60847473 210.13404846]
[-176.42448425 199.11592102]
[-165.65399170 188.67036438]
[-154.32914734 178.82856750]
[-142.48376465 169.61990356]
[-130.15316772 161.07185364]
[-117.37416077 153.20991516]
[-104.18489075 146.05757141]
[-90.62472534 139.63615417]
[-76.73411560 133.96482849]
[-62.55453110 129.06051636]
[-48.12828064 124.93786621]
[-33.49842453 121.60917664]
[-18.70862198 119.08438110]
[-3.80300999 117.37100983]
[11.17392540 116.47418213]
[26.17748642 116.39657593]
[41.16289902 117.13842010]
[56.08543777 118.69750214]
[70.90056610 121.06916046]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[111.88768768 28.38800240]
[97.75370026 23.34394455]
[84.03617096 17.25774956]
[70.81182861 10.16345596]
[58.15462875 2.10073781]
[46.13534927 -6.88531446]
[34.82121277 -16.74444580]
[24.27548790 -27.42152214]
[14.55715561 -38.85682678]
[5.72056484 -50.98641586]
[-2.18486667 -63.74244690]
[-9.11492825 -77.05358887]
[-15.03086281 -90.84539795]
[-19.89958572 -105.04073334]
[-23.69387054 -119.56022644]
[-26.39249611 -134.32266235]
[-27.98037148 -149.24549866]
[-28.44861603 -164.24526978]
[-27.79461098 -179.23808289]
[-26.02201271 -194.14009094]
[-23.14073753 -208.86798096]
[-19.16689491 -223.33935547]
[-14.12271214 -237.47329712]
[-8.03639698 -251.19076538]
[-0.94198680 -264.41503906]
[7.12084293 -277.07217407]
[16.10700035 -289.09136963]
[25.96623230 -300.40542603]
[36.64340210 -310.95104980]
[48.07879257 -320.66928101]
[60.20845795 -329.50576782]
[72.96456146 -337.41110229]
[86.27576447 -344.34103394]
[100.06761932 -350.25686646]
[114.26300812 -355.12545776]
[128.78253174 -358.91961670]
[143.54499817 -361.61810303]
[158.46783447 -363.20584106]
[173.46760559 -363.67395020]
[188.46041870 -363.01983643]
[203.36241150 -361.24710083]
[218.09027100 -358.36569214]
[232.56161499 -354.39172363]
[246.69551086 -349.34741211]
[260.41293335 -343.26098633]
[273.63714600 -336.16644287]
[286.29421997 -328.10351562]
[298.31332397 -319.11724854]
[309.62728882 -309.25790405]
[320.17282104 -298.58065796]
[329.89096069 -287.14517212]
[338.72732544 -275.01544189]
[346.63253784 -262.25924683]
[353.56237793 -248.94799805]
[359.47805786 -235.15608215]
[364.34652710 -220.96064758]
[368.14056396 -206.44110107]
[370.83892822 -191.67860413]
[372.42654419 -176.75575256]
[372.89453125 -161.75598145]
[372.24026489 -146.76316833]
[370.46740723 -131.86119080]
[367.58584595 -117.13336182]
[363.61175537 -102.66204834]
[358.56732178 -88.52819061]
[352.48077393 -74.81082916]
[345.38613892 -61.58667755]
[337.32308960 -48.92968750]
[328.33670044 -36.91064453]
[318.47726440 -25.59676743]
[307.79992676 -15.05132675]
[296.36434937 -5.33329725]
[284.23452759 3.50297284]
[271.47830200 11.40806675]
[258.16696167 18.33777618]
[244.37500000 24.25334549]
[230.17953491 29.12169456]
[215.65994263 32.91559601]
[200.89743042 35.61383057]
[185.97456360 37.20130920]
[170.97477722 37.66915894]
[155.98197937 37.01475525]
[141.08001709 35.24176407]
[126.35221100 32.36009979]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[114.25822449 132.97558594]
[128.20683289 138.50271606]
[141.83279419 144.78334045]
[155.09544373 151.79867554]
[167.95520020 159.52781677]
[180.37368774 167.94769287]
[192.31382751 177.03315735]
[203.74000549 186.75711060]
[214.61811829 197.09053040]
[224.91569519 208.00257874]
[234.60200500 219.46069336]
[243.64814758 231.43066406]
[252.02711487 243.87678528]
[259.71389771 256.76190186]
[266.68557739 270.04754639]
[272.92132568 283.69409180]
[278.40252686 297.66082764]
[283.11285400 311.90603638]
[287.03820801 326.38720703]
[290.16693115 341.06112671]
[292.48962402 355.88400269]
[293.99938965 370.81161499]
[294.69174194 385.79940796]
[294.56454468 400.80261230]
[293.61825562 415.77651978]
[291.85565186 430.67639160]
[289.28201294 445.45776367]
[285.90499878 460.07653809]
[281.73471069 474.48910522]
[276.78359985 488.65240479]
[271.06640625 502.52420044]
[264.60021973 516.06304932]
[257.40432739 529.22863770]
[249.50022888 541.98156738]
[240.91148376 554.28387451]
[231.66372681 566.09881592]
[221.78457642 577.39105225]
[211.30349731 588.12695312]
[200.25178528 598.27453613]
[188.66239929 607.80334473]
[176.56996155 616.68511963]
[164.01052856 624.89324951]
[151.02159119 632.40332031]
[137.64193726 639.19281006]
[123.91146088 645.24151611]
[109.87116241 650.53143311]
[95.56294250 655.04669189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 163]
[67 162]
[69 160]
[70 159]
[71 158]
[72 157]
[73 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
