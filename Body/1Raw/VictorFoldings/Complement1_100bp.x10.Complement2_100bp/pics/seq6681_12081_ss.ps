%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[103.00237274 581.41888428]
[91.45058441 571.83721924]
[80.71823883 561.34576416]
[70.87675476 550.01452637]
[61.99163055 537.91876221]
[54.12199402 525.13903809]
[47.32022095 511.76034546]
[41.63156891 497.87179565]
[37.09390640 483.56576538]
[33.73742294 468.93746948]
[31.58445549 454.08425903]
[30.64933777 439.10501099]
[30.93828773 424.09936523]
[32.44938660 409.16720581]
[35.17257309 394.40789795]
[39.08972931 379.91967773]
[44.17478180 365.79895020]
[50.39389420 352.13967896]
[57.70568085 339.03280640]
[66.06147766 326.56549072]
[75.40567780 314.82077026]
[85.67609406 303.87677002]
[96.80438232 293.80630493]
[108.71648407 284.67642212]
[121.33312225 276.54788208]
[134.57034302 269.47476196]
[148.34002686 263.50415039]
[143.51403809 249.30169678]
[138.68803406 235.09924316]
[124.88631439 224.26045227]
[128.62327576 206.22946167]
[123.58636475 192.10043335]
[111.28647614 188.26089478]
[103.32498932 177.88317871]
[102.78631592 164.61968994]
[110.09097290 153.30348206]
[105.26497650 139.10101318]
[100.43898010 124.89856720]
[95.61298370 110.69610596]
[91.59041595 125.14668274]
[81.38052368 136.13568115]
[67.26421356 141.20812988]
[52.39510345 139.23083496]
[40.09500122 130.64553833]
[33.11177063 117.37019348]
[33.00548935 102.37057495]
[39.79990005 88.99761200]
[51.97711182 80.23887634]
[66.81670380 78.05107880]
[81.00347900 82.92298889]
[91.36808014 93.76622009]
[88.92235565 78.96694946]
[86.47662354 64.16767883]
[84.03089905 49.36840439]
[81.58516693 34.56913376]
[79.13944244 19.76986313]
[76.69371796 4.97059298]
[74.24798584 -9.82867813]
[71.80226135 -24.62794876]
[65.83740997 -10.86493397]
[54.54853058 -0.98762512]
[40.11533356 3.09682512]
[25.32463455 0.59977335]
[13.03229141 -7.99663877]
[5.61176205 -21.03257942]
[4.49583387 -35.99101257]
[9.89997482 -49.98369598]
[20.78073120 -60.30886841]
[35.03719711 -64.97289276]
[49.91667557 -63.07522583]
[62.54616928 -54.98227692]
[70.48754120 -42.25545883]
[70.71086884 -57.25379562]
[70.93419647 -72.25212860]
[71.15753174 -87.25047302]
[61.11547852 -76.10787964]
[46.46620178 -72.88317871]
[32.67351532 -78.77909851]
[24.88175392 -91.59660339]
[25.99704552 -106.55507660]
[35.60342026 -118.07539368]
[50.11793137 -121.86074829]
[64.12702942 -116.49929810]
[72.40598297 -103.98960876]
[74.40999603 -118.85513306]
[76.41401672 -133.72067261]
[78.41802979 -148.58619690]
[63.92990494 -152.55831909]
[50.10051346 -158.42614746]
[37.17665100 -166.08494568]
[25.38896179 -175.39804077]
[14.94780922 -186.19923401]
[6.03952789 -198.29576111]
[-1.17690325 -211.47175598]
[-6.57269812 -225.49205017]
[-10.05156231 -240.10646057]
[-11.55141258 -255.05416870]
[-11.04548073 -270.06842041]
[-8.54279709 -284.88122559]
[-4.08802414 -299.22830200]
[2.23933744 -312.85357666]
[10.32636833 -325.51388550]
[20.02874565 -336.98330688]
[31.17331886 -347.05712891]
[43.56120300 -355.55557251]
[56.97131348 -362.32699585]
[71.16434479 -367.25057983]
[85.88699341 -370.23837280]
[100.87651825 -371.23715210]
[115.86541748 -370.22900391]
[130.58619690 -367.23199463]
[144.77613831 -362.29956055]
[158.18202209 -355.51977539]
[170.56459045 -347.01354980]
[181.70286560 -336.93276978]
[191.39807129 -325.45730591]
[199.47718811 -312.79196167]
[205.79603577 -299.16271973]
[210.24183655 -284.81286621]
[212.73527527 -269.99847412]
[213.23181152 -254.98393250]
[211.72262573 -240.03715515]
[208.23463440 -225.42492676]
[202.83007812 -211.40800476]
[195.60540771 -198.23652649]
[186.68957520 -186.14556885]
[176.24166870 -175.35090637]
[164.44816589 -166.04518127]
[151.51951599 -158.39445496]
[137.68646240 -152.53527832]
[123.19586182 -148.57220459]
[108.30632019 -146.57595825]
[93.28355408 -146.58218384]
[91.27954102 -131.71664429]
[89.27552795 -116.85112000]
[87.27151489 -101.98559570]
[86.15586853 -87.02713776]
[85.93254089 -72.02880096]
[85.70921326 -57.03046799]
[85.48588562 -42.03213120]
[86.60153198 -27.07367516]
[89.04725647 -12.27440548]
[91.49298859 2.52486587]
[93.93871307 17.32413673]
[96.38443756 32.12340927]
[98.83016968 46.92267990]
[101.27589417 61.72195053]
[103.72162628 76.52121735]
[106.16735077 91.32048798]
[109.81543732 105.87010956]
[114.64143372 120.07256317]
[119.46743011 134.27502441]
[124.29343414 148.47747803]
[140.12414551 155.92111206]
[145.56628418 172.19064331]
[137.71539307 187.06352234]
[142.75230408 201.19255066]
[154.04985046 207.41577148]
[157.95422363 219.28756714]
[152.89048767 230.27325439]
[157.71649170 244.47570801]
[162.54249573 258.67816162]
[177.09913635 255.02348328]
[191.90524292 252.56745911]
[206.86227417 251.32646179]
[221.87069702 251.30874634]
[236.83061218 252.51441956]
[251.64247131 254.93545532]
[266.20770264 258.55575562]
[280.42941284 263.35122681]
[294.21289062 269.28994751]
[307.46643066 276.33236694]
[320.10186768 284.43170166]
[332.03509521 293.53396606]
[343.18664551 303.57861328]
[353.48239136 314.49880981]
[362.85375977 326.22186279]
[371.23840332 338.66976929]
[378.58053589 351.75970459]
[384.83123779 365.40454102]
[389.94897461 379.51345825]
[393.89968872 393.99255371]
[396.65704346 408.74551392]
[398.20269775 423.67413330]
[398.52639771 438.67907715]
[397.62597656 453.66046143]
[395.50741577 468.51861572]
[392.18481445 483.15463257]
[387.68026733 497.47113037]
[382.02380371 511.37283325]
[375.25302124 524.76721191]
[367.41302490 537.56512451]
[358.55590820 549.68145752]
[348.74069214 561.03546143]
[338.03268433 571.55169678]
[326.50311279 581.16009521]
[314.22872925 589.79681396]
[301.29119873 597.40423584]
[287.77664185 603.93188477]
[273.77499390 609.33618164]
[259.37942505 613.58123779]
[244.68576050 616.63879395]
[229.79174805 618.48852539]
[214.79653931 619.11804199]
[199.79991150 618.52325439]
[184.90165710 616.70800781]
[170.20094299 613.68450928]
[155.79557800 609.47277832]
[141.78146362 604.10089111]
[128.25183105 597.60461426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 162]
[28 161]
[29 160]
[31 157]
[32 156]
[36 153]
[37 152]
[38 151]
[39 150]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[72 140]
[73 139]
[74 138]
[75 137]
[84 136]
[85 135]
[86 134]
[87 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
