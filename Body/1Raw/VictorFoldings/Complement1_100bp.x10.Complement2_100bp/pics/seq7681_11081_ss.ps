%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[177.93525696 370.90869141]
[174.07192993 356.40875244]
[171.19630432 341.68112183]
[169.32148743 326.79293823]
[168.45606995 311.81213379]
[168.60397339 296.80709839]
[169.76452637 281.84628296]
[171.93243408 266.99795532]
[175.09780884 252.32984924]
[179.24621582 237.90890503]
[184.35870361 223.80091858]
[190.41197205 210.07025146]
[197.37837219 196.77957153]
[205.22615051 183.98953247]
[192.99966431 175.29969788]
[180.77317810 166.60987854]
[168.54669189 157.92005920]
[156.32020569 149.23022461]
[144.09371948 140.54040527]
[131.86723328 131.85058594]
[119.64074707 123.16075134]
[107.41426086 114.47093201]
[95.83460999 115.71714783]
[86.39204407 108.89958191]
[83.93111420 97.51603699]
[71.83536530 88.64514160]
[62.19684601 100.14548492]
[51.83412170 110.99780273]
[40.79065704 121.15658569]
[29.11277580 130.57922363]
[16.84945679 139.22618103]
[4.05213976 147.06120300]
[-9.22550106 154.05142212]
[-22.92777252 160.16751099]
[-36.99720383 165.38383484]
[-51.37478256 169.67849731]
[-66.00019836 173.03350830]
[-80.81211853 175.43476868]
[-95.74840546 176.87220764]
[-110.74641418 177.33981323]
[-125.74323273 176.83561707]
[-140.67596436 175.36172485]
[-155.48197937 172.92434692]
[-170.09918213 169.53366089]
[-184.46623230 165.20393372]
[-198.52288818 159.95329285]
[-212.21020508 153.80378723]
[-225.47074890 146.78118896]
[-238.24891663 138.91497803]
[-250.49108887 130.23811340]
[-262.14596558 120.78701782]
[-273.16458130 110.60132599]
[-283.50082397 99.72374725]
[-293.11123657 88.19992828]
[-301.95559692 76.07818604]
[-309.99673462 63.40937424]
[-317.20095825 50.24662781]
[-323.53805542 36.64515305]
[-328.98144531 22.66200638]
[-333.50830078 8.35583115]
[-337.09960938 -6.21336365]
[-339.74029541 -20.98446846]
[-341.41934204 -35.89553070]
[-342.12966919 -50.88400269]
[-341.86828613 -65.88702393]
[-340.63632202 -80.84165955]
[-338.43893433 -95.68518829]
[-335.28530884 -110.35534668]
[-331.18872070 -124.79061127]
[-326.16632080 -138.93041992]
[-320.23916626 -152.71548462]
[-313.43215942 -166.08796692]
[-305.77380371 -178.99179077]
[-297.29623413 -191.37283325]
[-288.03506470 -203.17915344]
[-278.02905273 -214.36123657]
[-267.32022095 -224.87217712]
[-255.95347595 -234.66787720]
[-243.97650146 -243.70729065]
[-231.43951416 -251.95245361]
[-218.39509583 -259.36880493]
[-204.89799500 -265.92526245]
[-191.00479126 -271.59426880]
[-176.77377319 -276.35211182]
[-162.26461792 -280.17877197]
[-147.53819275 -283.05825806]
[-132.65626526 -284.97845459]
[-117.68125153 -285.93130493]
[-102.67596436 -285.91281128]
[-87.70334625 -284.92309570]
[-72.82619476 -282.96624756]
[-58.10690689 -280.05053711]
[-43.60722351 -276.18814087]
[-29.38796043 -271.39526367]
[-15.50876236 -265.69204712]
[-2.02783990 -259.10238647]
[10.99826050 -251.65391541]
[23.51490402 -243.37789917]
[35.46958923 -234.30903625]
[46.81217575 -224.48535156]
[57.49508667 -213.94807434]
[67.47351837 -202.74137878]
[76.70561218 -190.91229248]
[85.15264130 -178.51042175]
[92.77919006 -165.58776855]
[99.55325317 -152.19856262]
[105.44642639 -138.39894104]
[110.43399811 -124.24680328]
[114.49503326 -109.80149841]
[117.61251068 -95.12361145]
[119.77334595 -80.27471924]
[120.96848297 -65.31709290]
[121.19290161 -50.31347656]
[120.44567108 -35.32679749]
[118.72991180 -20.41991615]
[116.05283356 -5.65535927]
[112.42565918 8.90494633]
[107.86360168 23.19992828]
[102.38579559 37.16963196]
[96.01521301 50.75545502]
[88.77858734 63.90042114]
[80.70626068 76.54939270]
[92.80200958 85.42028809]
[109.51802063 86.81719208]
[116.10408783 102.24444580]
[128.33056641 110.93426514]
[140.55705261 119.62409210]
[152.78353882 128.31391907]
[165.01002502 137.00373840]
[177.23651123 145.69357300]
[189.46299744 154.38339233]
[201.68948364 163.07321167]
[213.91596985 171.76304626]
[223.41487122 160.14651489]
[233.67634583 149.19775391]
[244.65354919 138.96673584]
[256.29641724 129.50012207]
[268.55181885 120.84112549]
[281.36380005 113.02923584]
[294.67395020 106.10011292]
[308.42153931 100.08535767]
[322.54379272 95.01243591]
[336.97631836 90.90447235]
[351.65322876 87.78022003]
[366.50759888 85.65393829]
[381.47161865 84.53533173]
[396.47698975 84.42948914]
[411.45529175 85.33690643]
[426.33816528 87.25343323]
[441.05770874 90.17033386]
[455.54672241 94.07430267]
[469.73913574 98.94750977]
[483.57019043 104.76773071]
[496.97677612 111.50841522]
[509.89770508 119.13879395]
[522.27398682 127.62406158]
[534.04925537 136.92549133]
[545.16967773 147.00064087]
[555.58459473 157.80355835]
[565.24639893 169.28494263]
[574.11108398 181.39239502]
[582.13818359 194.07067871]
[589.29101562 207.26194763]
[595.53704834 220.90602112]
[600.84765625 234.94061279]
[605.19866943 249.30172729]
[608.57031250 263.92379761]
[610.94702148 278.74014282]
[612.31811523 293.68313599]
[612.67730713 308.68460083]
[612.02288818 323.67608643]
[610.35791016 338.58920288]
[607.68994141 353.35586548]
[604.03112793 367.90875244]
[599.39825439 382.18142700]
[593.81237793 396.10876465]
[587.29901123 409.62722778]
[579.88781738 422.67514038]
[571.61273193 435.19296265]
[562.51141357 447.12356567]
[552.62542725 458.41250610]
[541.99993896 469.00830078]
[530.68328857 478.86257935]
[518.72723389 487.93041992]
[506.18627930 496.17041016]
[493.11764526 503.54495239]
[479.58096313 510.02038574]
[465.63803101 515.56719971]
[451.35241699 520.16009521]
[436.78936768 523.77807617]
[422.01525879 526.40466309]
[407.09753418 528.02783203]
[392.10427856 528.64019775]
[377.10388184 528.23901367]
[362.16479492 526.82604980]
[347.35516357 524.40771484]
[332.74258423 520.99517822]
[318.39373779 516.60388184]
[304.37408447 511.25393677]
[290.74755859 504.96972656]
[277.57638550 497.77993774]
[264.92065430 489.71734619]
[252.83810425 480.81875610]
[241.38385010 471.12478638]
[230.61018372 460.67965698]
[220.56623840 449.53100586]
[211.29785156 437.72973633]
[202.84730530 425.32968140]
[195.25317383 412.38742065]
[188.55010986 398.96200562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[21 126]
[22 125]
[25 123]
[26 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
