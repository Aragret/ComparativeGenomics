%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[161.57669067 408.68054199]
[174.54986572 400.94277954]
[170.79356384 386.42071533]
[160.11563110 376.03656006]
[164.15057373 360.73852539]
[160.39427185 346.21646118]
[156.63796997 331.69439697]
[152.88166809 317.17233276]
[149.12536621 302.65026855]
[145.36906433 288.12820435]
[130.97958374 284.28002930]
[120.37778473 273.67541504]
[116.48173523 259.09161377]
[120.43452454 244.41944885]
[131.27127075 233.62536621]
[127.51496124 219.10331726]
[123.75866699 204.58125305]
[113.08073425 194.19708252]
[117.11566162 178.89904785]
[113.35935974 164.37698364]
[109.60305786 149.85491943]
[105.84675598 135.33287048]
[101.02075958 121.13040924]
[95.15180206 107.32623291]
[92.43200684 105.95064545]
[90.15262604 103.55503845]
[88.69241333 100.30062103]
[88.36527252 96.48627472]
[89.37158966 92.52139282]
[84.33467102 78.39236450]
[79.29776001 64.26333618]
[74.26084137 50.13430405]
[69.22392273 36.00527573]
[64.18701172 21.87624550]
[52.26495361 11.47551727]
[55.27923965 -3.11089158]
[49.72001648 -17.04269028]
[43.64618301 -30.75795746]
[37.57234573 -44.47322464]
[24.90974045 -53.95841980]
[26.83079529 -68.72862244]
[20.75695992 -82.44388580]
[14.68312645 -96.15915680]
[11.96581936 -81.40733337]
[2.77702665 -69.55127716]
[-10.83045197 -63.23965836]
[-25.81666946 -63.88250732]
[-38.83366776 -71.33621216]
[-46.97341919 -83.93560028]
[-48.41747665 -98.86592865]
[-42.84323883 -112.79172516]
[-31.49600029 -122.60193634]
[-16.91076660 -126.10492706]
[-2.34591627 -122.51813507]
[8.94474030 -112.64282227]
[5.18843985 -127.16488647]
[1.43213916 -141.68693542]
[-13.34477711 -139.06567383]
[-28.28038788 -137.59739685]
[-43.28486633 -137.29093933]
[-58.26797485 -138.14813232]
[-73.13960266 -140.16384888]
[-87.81030273 -143.32594299]
[-102.19184875 -147.61540222]
[-116.19774628 -153.00642395]
[-129.74375916 -159.46659851]
[-142.74841309 -166.95706177]
[-155.13351440 -175.43278503]
[-166.82455444 -184.84275818]
[-177.75123596 -195.13041687]
[-187.84783936 -206.23388672]
[-197.05364990 -218.08638000]
[-205.31329346 -230.61660767]
[-212.57708740 -243.74922180]
[-218.80134583 -257.40524292]
[-223.94865417 -271.50253296]
[-227.98805237 -285.95629883]
[-230.89521790 -300.67962646]
[-232.65269470 -315.58398438]
[-233.24990845 -330.57971191]
[-232.68327332 -345.57662964]
[-230.95617676 -360.48452759]
[-228.07902527 -375.21374512]
[-224.06910706 -389.67572021]
[-218.95054626 -403.78347778]
[-212.75413513 -417.45214844]
[-205.51712036 -430.59954834]
[-197.28303528 -443.14660645]
[-188.10142517 -455.01782227]
[-178.02746582 -466.14184570]
[-167.12178040 -476.45175171]
[-155.44993591 -485.88555908]
[-143.08215332 -494.38650513]
[-130.09278870 -501.90344238]
[-116.55996704 -508.39123535]
[-102.56508636 -513.81079102]
[-88.19232178 -518.12957764]
[-73.52809143 -521.32153320]
[-58.66060638 -523.36755371]
[-43.67927933 -524.25531006]
[-28.67420578 -523.97943115]
[-13.73563290 -522.54162598]
[1.04659629 -519.95050049]
[15.58357906 -516.22161865]
[29.78788757 -511.37744141]
[43.57409286 -505.44711304]
[56.85928345 -498.46627808]
[69.56356049 -490.47692871]
[81.61051178 -481.52713013]
[92.92769623 -471.67065430]
[103.44704437 -460.96685791]
[113.10528564 -449.48004150]
[121.84433746 -437.27932739]
[129.61163330 -424.43811035]
[136.36048889 -411.03356934]
[142.05027771 -397.14636230]
[146.64680481 -382.85998535]
[150.12240601 -368.26037598]
[152.45620728 -353.43536377]
[153.63414001 -338.47402954]
[153.64913940 -323.46643066]
[152.50111389 -308.50280762]
[150.19696045 -293.67312622]
[146.75054932 -279.06661987]
[142.18260193 -264.77108765]
[136.52058411 -250.87252808]
[129.79853821 -237.45452881]
[122.05692291 -224.59779358]
[113.34228516 -212.37963867]
[103.70702362 -200.87355042]
[93.20909882 -190.14872742]
[81.91164398 -180.26966858]
[69.88260651 -171.29579163]
[57.19432449 -163.28105164]
[43.92311859 -156.27368164]
[30.14879417 -150.31579590]
[15.95419884 -145.44323730]
[19.71049881 -130.92118835]
[23.46680069 -116.39912415]
[28.39839363 -102.23298645]
[34.47222900 -88.51772308]
[40.54606247 -74.80245209]
[52.77422714 -66.29826355]
[51.28761292 -50.54705811]
[57.36144638 -36.83179092]
[63.43528366 -23.11652374]
[71.19142151 -35.95561600]
[86.04476166 -38.04802322]
[97.04598236 -27.85129738]
[96.08538818 -12.88208771]
[83.87108612 -4.17513752]
[69.40827179 -8.14780807]
[80.97005463 1.24231672]
[78.31604004 16.83932877]
[83.35295105 30.96835709]
[88.38986969 45.09738922]
[93.42678833 59.22641754]
[98.46370697 73.35544586]
[103.50061798 87.48447418]
[108.95597839 101.45727539]
[114.82493591 115.26145172]
[118.23000336 100.65304565]
[128.41072083 89.63700867]
[142.70585632 85.09289551]
[157.37870789 88.20854187]
[168.59384155 98.16951752]
[173.41961670 112.37204742]
[170.59461975 127.10362244]
[160.85726929 138.51344299]
[146.75289917 143.61901855]
[131.96836853 141.08575439]
[120.36882019 131.57656860]
[124.12511444 146.09863281]
[127.88141632 160.62068176]
[131.63772583 175.14274597]
[142.58433533 186.56562805]
[138.28071594 200.82495117]
[142.03701782 215.34701538]
[145.79331970 229.86906433]
[160.50477600 234.05480957]
[171.07606506 244.97015381]
[174.74008179 259.61398315]
[170.60993958 274.02917480]
[159.89112854 284.37191772]
[163.64743042 298.89398193]
[167.40373230 313.41604614]
[171.16001892 327.93807983]
[174.91632080 342.46014404]
[178.67262268 356.98220825]
[189.61923218 368.40509033]
[185.31562805 382.66442871]
[189.07192993 397.18649292]
[204.16992188 397.66329956]
[218.52156067 402.37573242]
[230.96343994 410.94174194]
[240.48695374 422.66690063]
[246.32005310 436.60073853]
[247.98988342 451.61367798]
[245.36108398 466.48867798]
[238.64675903 480.01992798]
[228.39120483 491.11047363]
[215.42579651 498.86126709]
[200.80158997 502.64401245]
[185.70408630 502.15200806]
[171.35717773 497.42517090]
[158.92391968 488.84667969]
[149.41218567 477.11193848]
[143.59309387 463.17227173]
[141.93833923 448.15765381]
[144.58207703 433.28527832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[15 179]
[16 178]
[17 177]
[19 175]
[20 174]
[21 173]
[22 172]
[23 161]
[24 160]
[29 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[36 152]
[37 146]
[38 145]
[39 144]
[41 142]
[42 141]
[43 140]
[55 139]
[56 138]
[57 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
