%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[35.61846542 753.82183838]
[21.50111961 758.90527344]
[7.10012484 763.11865234]
[-7.53094530 766.44616699]
[-22.33766365 768.87561035]
[-37.26494598 770.39776611]
[-52.25726318 771.00714111]
[-67.25884247 770.70135498]
[-82.21387482 769.48156738]
[-97.06672668 767.35235596]
[-111.76214600 764.32159424]
[-126.24546051 760.40057373]
[-140.46279907 755.60388184]
[-154.36126709 749.94934082]
[-167.88916016 743.45806885]
[-180.99613953 736.15411377]
[-193.63348389 728.06469727]
[-205.75413513 719.21990967]
[-217.31304932 709.65258789]
[-228.26718140 699.39843750]
[-238.57582092 688.49560547]
[-248.20057678 676.98449707]
[-257.10568237 664.90808105]
[-265.25799561 652.31121826]
[-272.62719727 639.24084473]
[-279.18585205 625.74542236]
[-284.90957642 611.87536621]
[-289.77706909 597.68212891]
[-293.77023315 583.21850586]
[-296.87423706 568.53839111]
[-299.07745361 553.69635010]
[-300.37176514 538.74755859]
[-300.75234985 523.74768066]
[-300.21774292 508.75253296]
[-298.76998901 493.81784058]
[-296.41442871 478.99920654]
[-293.15982056 464.35171509]
[-289.01834106 449.92990112]
[-284.00531006 435.78738403]
[-278.13946533 421.97680664]
[-271.44253540 408.54949951]
[-263.93951416 395.55545044]
[-255.65824890 383.04299927]
[-246.62957764 371.05868530]
[-236.88710022 359.64706421]
[-226.46704102 348.85061646]
[-215.40815735 338.70950317]
[-203.75161743 329.26144409]
[-191.54075623 320.54159546]
[-178.82099915 312.58239746]
[-165.63969421 305.41345215]
[-152.04585266 299.06143188]
[-138.09004211 293.54995728]
[-123.82419586 288.89953613]
[-109.30136871 285.12747192]
[-94.57559967 282.24780273]
[-79.70166016 280.27120972]
[-64.73489380 279.20507812]
[-49.73096466 279.05337524]
[-34.74569702 279.81668091]
[-19.83483505 281.49209595]
[-5.05384827 284.07342529]
[9.54227543 287.55108643]
[23.89923859 291.91210938]
[37.96363068 297.14025879]
[44.03746414 283.42498779]
[43.87165070 276.03619385]
[50.30518341 269.55178833]
[56.58254623 255.92848206]
[62.85990524 242.30516052]
[69.13726807 228.68185425]
[75.41462708 215.05853271]
[81.69198608 201.43521118]
[85.55628967 186.94152832]
[86.89452362 172.00134277]
[78.66377258 156.50225830]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[86.73896790 72.93505096]
[95.40145111 60.81850815]
[96.51709747 45.86005402]
[97.07530975 30.87044525]
[89.33800507 17.07027245]
[97.07530975 4.34300041]
[97.07530975 -10.65699959]
[97.07530975 -25.65699959]
[97.07530975 -40.65699768]
[97.07530975 -55.65699768]
[97.07530975 -70.65699768]
[97.07530975 -85.65699768]
[82.43608856 -89.25655365]
[69.08402252 -96.25552368]
[57.79536819 -106.24700928]
[49.22643661 -118.65010834]
[43.87541580 -132.74372864]
[42.05340958 -147.70848083]
[43.86634445 -162.67433167]
[49.20881653 -176.77117920]
[57.77022552 -189.17947388]
[69.05281830 -199.17779541]
[82.40065002 -206.18487549]
[97.03768158 -209.79328918]
[112.11293793 -209.79328918]
[126.74996948 -206.18487549]
[140.09779358 -199.17779541]
[151.38038635 -189.17947388]
[159.94180298 -176.77117920]
[165.28427124 -162.67433167]
[167.09719849 -147.70848083]
[165.27519226 -132.74372864]
[159.92417908 -118.65010834]
[151.35525513 -106.24700928]
[140.06658936 -96.25552368]
[126.71452332 -89.25655365]
[112.07530975 -85.65699768]
[112.07530975 -70.65699768]
[112.07530975 -55.65699768]
[112.07530975 -40.65699768]
[112.07530975 -25.65699959]
[112.07530975 -10.65699959]
[112.07530975 4.34300041]
[119.81260681 17.07027245]
[112.07530975 30.87044525]
[124.36597443 22.27163887]
[138.79440308 26.37289429]
[144.72450256 40.15092087]
[137.78482056 53.44906616]
[123.09102631 56.46443558]
[111.47554779 46.97570419]
[110.35990143 61.93415833]
[117.12915802 75.20165253]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[112.15026855 152.90927124]
[110.91309357 165.34523010]
[101.83470917 173.33956909]
[100.49647522 188.27975464]
[108.35041046 175.50025940]
[119.10014343 165.03874207]
[132.08834839 157.53497314]
[146.52076721 153.44776917]
[161.51486206 153.02708435]
[176.15374756 156.29866028]
[189.54223633 163.06240845]
[200.86163330 172.90473938]
[209.41972351 185.22378540]
[214.69320679 199.26623535]
[216.35960388 214.17338562]
[214.31698608 229.03366089]
[208.69029236 242.93833923]
[199.82359314 255.03717041]
[188.25906372 264.59027100]
[174.70391846 271.01348877]
[159.98703003 273.91403198]
[145.00834656 273.11456299]
[130.68383789 268.66390991]
[117.88942719 260.83428955]
[107.40751648 250.10443115]
[99.87907410 237.13050842]
[95.76446533 222.70588684]
[95.31529999 207.71258545]
[89.03794098 221.33589172]
[82.76058197 234.95921326]
[76.48322296 248.58251953]
[70.20586395 262.20584106]
[63.92850113 275.82916260]
[57.75273132 289.49884033]
[51.67889786 303.21411133]
[65.00260162 310.11480713]
[77.88082886 317.81494141]
[90.26566315 326.28585815]
[102.11104584 335.49606323]
[113.37290192 345.41128540]
[124.00933075 355.99462891]
[133.98077393 367.20672607]
[143.25013733 379.00588989]
[151.78292847 391.34817505]
[159.54742432 404.18771362]
[166.51470947 417.47671509]
[172.65888977 431.16574097]
[177.95710754 445.20391846]
[182.38963318 459.53894043]
[185.94000244 474.11755371]
[188.59498596 488.88549805]
[190.34472656 503.78781128]
[191.18269348 518.76910400]
[191.10578918 533.77362061]
[190.11428833 548.74548340]
[188.21186829 563.62908936]
[185.40563965 578.36901855]
[181.70602417 592.91046143]
[177.12677002 607.19934082]
[171.68492126 621.18243408]
[165.40074158 634.80780029]
[158.29759216 648.02465820]
[150.40188599 660.78393555]
[141.74302673 673.03808594]
[132.35319519 684.74163818]
[122.26733398 695.85089111]
[111.52297211 706.32464600]
[100.16006470 716.12390137]
[88.22089386 725.21221924]
[75.74987030 733.55572510]
[62.79338455 741.12341309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 174]
[66 173]
[68 172]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 143]
[75 142]
[77 139]
[78 138]
[79 137]
[81 135]
[83 133]
[84 132]
[85 126]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
