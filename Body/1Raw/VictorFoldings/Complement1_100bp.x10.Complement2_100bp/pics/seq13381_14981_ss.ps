%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[101.42127991 970.30560303]
[86.46633148 969.11651611]
[71.57328796 967.31048584]
[56.76761246 964.89050293]
[42.07458496 961.86071777]
[27.51931190 958.22637939]
[13.12666416 953.99359131]
[-1.07877052 949.16967773]
[-15.07272243 943.76287842]
[-28.83128166 937.78234863]
[-42.33094406 931.23840332]
[-55.54864502 924.14215088]
[-68.46179962 916.50573730]
[-81.04834747 908.34216309]
[-93.28678894 899.66546631]
[-105.15621185 890.49041748]
[-116.63632965 880.83276367]
[-127.70754242 870.70886230]
[-138.35092163 860.13610840]
[-148.54829407 849.13256836]
[-158.28224182 837.71704102]
[-167.53611755 825.90893555]
[-176.29412842 813.72857666]
[-184.54129028 801.19665527]
[-192.26353455 788.33465576]
[-199.44766235 775.16448975]
[-206.08139038 761.70874023]
[-212.15338135 747.99029541]
[-217.65328979 734.03265381]
[-222.57168579 719.85968018]
[-226.90019226 705.49554443]
[-230.63139343 690.96478271]
[-233.75892639 676.29223633]
[-236.27745056 661.50299072]
[-238.18266296 646.62231445]
[-239.47128296 631.67559814]
[-240.14114380 616.68841553]
[-240.19108582 601.68634033]
[-239.62103271 586.69506836]
[-238.43193054 571.74011230]
[-236.62585449 556.84704590]
[-234.20584106 542.04138184]
[-231.17607117 527.34838867]
[-227.54168701 512.79309082]
[-223.30891418 498.40045166]
[-218.48498535 484.19503784]
[-213.07812500 470.20108032]
[-207.09759521 456.44253540]
[-200.55360413 442.94287109]
[-193.45732117 429.72518921]
[-185.82089233 416.81204224]
[-177.65733337 404.22552490]
[-168.98062134 391.98709106]
[-159.80555725 380.11767578]
[-150.14784241 368.63757324]
[-140.02395630 357.56637573]
[-129.45120239 346.92300415]
[-118.44763184 336.72564697]
[-107.03206635 326.99172974]
[-95.22399139 317.73785400]
[-83.04359436 308.97988892]
[-70.51167297 300.73272705]
[-57.64964294 293.01049805]
[-44.47948074 285.82641602]
[-31.02368736 279.19268799]
[-17.30525017 273.12069702]
[-3.34760666 267.62081909]
[10.82539654 262.70245361]
[25.18954468 258.37396240]
[39.72029495 254.64279175]
[54.39282608 251.51527405]
[69.18206787 248.99678040]
[84.06275177 247.09159851]
[99.00946045 245.80297852]
[98.33966827 230.81794739]
[97.66988373 215.83290100]
[97.00009918 200.84786987]
[96.33031464 185.86282349]
[95.66053009 170.87779236]
[94.99074554 155.89274597]
[94.32096100 140.90771484]
[93.65117645 125.92266846]
[92.98139191 110.93762970]
[91.86574554 95.97917938]
[90.30522156 81.06057739]
[80.79528809 72.34713745]
[79.80265808 59.88926697]
[87.31576538 50.40877151]
[85.97753143 35.46858978]
[84.63929749 20.52840233]
[83.30106354 5.58821821]
[81.96282959 -9.35196686]
[67.14462280 -12.28412247]
[53.75338364 -19.27349854]
[42.87467575 -29.75349617]
[35.39038467 -42.87454987]
[31.90723228 -57.57299805]
[32.70758057 -72.65729523]
[37.72654724 -86.90464020]
[46.55727005 -99.16004181]
[58.48388290 -108.43003082]
[72.53954315 -113.96311951]
[87.58482361 -115.31076813]
[102.40007782 -112.36372375]
[115.78428650 -105.36090088]
[126.65246582 -94.86997986]
[134.12356567 -81.74140930]
[137.59194946 -67.03947449]
[136.77644348 -51.95598602]
[131.74317932 -37.71369553]
[122.90013885 -25.46716690]
[110.96422577 -16.20916557]
[96.90301514 -10.69020081]
[98.24124908 4.24998379]
[99.57948303 19.19016838]
[100.91771698 34.13035202]
[102.25595093 49.07053757]
[113.11016846 62.86012650]
[105.22382355 79.50005341]
[106.78434753 94.41865540]
[108.98084259 96.53169250]
[110.45703888 99.49063873]
[110.89813995 103.03025055]
[110.09175110 106.77271271]
[107.96643066 110.26784515]
[108.63621521 125.25288391]
[109.30599976 140.23793030]
[109.97578430 155.22296143]
[110.64556885 170.20800781]
[111.31535339 185.19303894]
[111.98513794 200.17808533]
[112.65492249 215.16311646]
[113.32470703 230.14816284]
[113.99449921 245.13319397]
[128.99656677 245.08319092]
[143.98788452 245.65318298]
[158.94284058 246.84220886]
[173.83587646 248.64823914]
[188.64157104 251.06816101]
[203.33460999 254.09788513]
[217.88989258 257.73220825]
[232.28254700 261.96490479]
[246.48799133 266.78878784]
[260.48196411 272.19555664]
[274.24053955 278.17602539]
[287.74023438 284.71997070]
[300.95794678 291.81619263]
[313.87112427 299.45257568]
[326.45770264 307.61605835]
[338.69616699 316.29272461]
[350.56561279 325.46774292]
[362.04574585 335.12539673]
[373.11700439 345.24923706]
[383.76040649 355.82196045]
[393.95782471 366.82546997]
[403.69180298 378.24099731]
[412.94570923 390.04901123]
[421.70373535 402.22940063]
[429.95095825 414.76126099]
[437.67324829 427.62326050]
[444.85739136 440.79339600]
[451.49118042 454.24914551]
[457.56320190 467.96755981]
[463.06314087 481.92520142]
[467.98159790 496.09817505]
[472.31015015 510.46231079]
[476.04138184 524.99304199]
[479.16897583 539.66552734]
[481.68753052 554.45477295]
[483.59277344 569.33544922]
[484.88146973 584.28216553]
[485.55136108 599.26934814]
[485.60134888 614.27142334]
[485.03134155 629.26269531]
[483.84228516 644.21765137]
[482.03622437 659.11071777]
[479.61627197 673.91638184]
[476.58654785 688.60943604]
[472.95220947 703.16473389]
[468.71948242 717.55737305]
[463.89556885 731.76281738]
[458.48876953 745.75677490]
[452.50827026 759.51531982]
[445.96432495 773.01501465]
[438.86810303 786.23272705]
[431.23168945 799.14587402]
[423.06817627 811.73242188]
[414.39151001 823.97088623]
[405.21646118 835.84033203]
[395.55877686 847.32049561]
[385.43493652 858.39172363]
[374.86221313 869.03509521]
[363.85867310 879.23248291]
[352.44314575 888.96643066]
[340.63510132 898.22033691]
[328.45471191 906.97833252]
[315.92282104 915.22552490]
[303.06082153 922.94781494]
[289.89068604 930.13195801]
[276.43490601 936.76568604]
[262.71649170 942.83770752]
[248.75885010 948.33764648]
[234.58586121 953.25604248]
[220.22172546 957.58459473]
[205.69097900 961.31579590]
[191.01846313 964.44335938]
[176.22923279 966.96191406]
[161.34855652 968.86712646]
[146.40185547 970.15582275]
[131.41465759 970.82568359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 134]
[75 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 120]
[85 119]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
