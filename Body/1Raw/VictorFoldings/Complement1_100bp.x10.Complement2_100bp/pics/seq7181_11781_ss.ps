%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[86.28016663 566.82995605]
[72.26655579 572.22430420]
[57.73707581 576.01562500]
[42.87445831 578.15631104]
[27.86560822 578.61944580]
[12.89928246 577.39916992]
[-1.83630168 574.51080322]
[-16.15583038 569.99072266]
[-29.87921906 563.89575195]
[-42.83388138 556.30255127]
[-54.85689926 547.30657959]
[-65.79707336 537.02105713]
[-75.51681519 525.57525635]
[-83.89389038 513.11309814]
[-90.82294464 499.79138184]
[-96.21684265 485.77761841]
[-100.00775146 471.24801636]
[-102.14799500 456.38534546]
[-102.61065674 441.37646484]
[-101.38991547 426.41018677]
[-98.50112152 411.67468262]
[-93.98061371 397.35528564]
[-87.88523865 383.63208008]
[-80.29164886 370.67764282]
[-71.29534149 358.65490723]
[-61.00946045 347.71502686]
[-49.56335831 337.99563599]
[-37.10097885 329.61892700]
[-23.77905464 322.69027710]
[-9.76511860 317.29678345]
[4.76458645 313.50631714]
[19.62733459 311.36651611]
[34.63621140 310.90432739]
[49.60246277 312.12548828]
[52.48773575 297.40560913]
[55.37300873 282.68572998]
[50.22830200 268.70782471]
[60.47560120 256.65365601]
[63.36087418 241.93374634]
[66.24614716 227.21386719]
[69.13141632 212.49397278]
[62.64538193 202.28329468]
[64.92868042 189.99629211]
[75.29351044 182.31950378]
[78.39762115 167.64419556]
[81.39239502 152.94619751]
[84.27766418 138.22630310]
[87.16294098 123.50641632]
[90.04821014 108.78652191]
[80.95610809 120.71689606]
[69.54068756 130.44767761]
[56.32126617 137.53617859]
[41.89925003 141.65994263]
[26.93073654 142.63134766]
[12.09669685 140.40620422]
[-1.92802000 135.08573914]
[-14.50538349 126.91201019]
[-25.06320572 116.25685120]
[-33.12117767 103.60501099]
[-38.31271744 89.53205872]
[-40.40164185 74.67822266]
[-39.29291534 59.71925735]
[-35.03698730 45.33568573]
[-27.82746506 32.18187332]
[-17.99233627 20.85622787]
[-5.97903681 11.87398815]
[7.66591215 5.64378929]
[22.32175446 2.44906282]
[37.32174683 2.43514729]
[51.98349380 5.60267591]
[65.63997650 11.80754662]
[77.66992188 20.76748085]
[87.52604675 32.07485962]
[94.75996399 45.21527100]
[99.04257202 59.59091949]
[100.17904663 74.54780579]
[98.11663818 89.40969086]
[99.45299530 73.64502716]
[112.99786377 67.44940186]
[121.41248322 55.03190231]
[129.82710266 42.61440659]
[137.86827087 29.95188332]
[145.52886963 17.05555534]
[153.18946838 4.15922880]
[160.85006714 -8.73709869]
[168.51066589 -21.63342476]
[160.15965271 -34.36221313]
[158.17144775 -49.39331436]
[162.88729858 -63.73838043]
[173.32096863 -74.56887817]
[187.36441040 -79.77379608]
[202.21356201 -78.37099457]
[209.87416077 -91.26731873]
[217.53475952 -104.16365051]
[205.49826050 -113.13806915]
[194.46578979 -123.32150269]
[184.55822754 -134.60237122]
[175.88414001 -146.85707092]
[168.53854370 -159.95135498]
[162.60194397 -173.74172974]
[158.13937378 -188.07711792]
[155.19973755 -202.80043030]
[153.81523132 -217.75038147]
[154.00102234 -232.76315308]
[155.75508118 -247.67425537]
[159.05819702 -262.32031250]
[163.87417603 -276.54086304]
[170.15023804 -290.18011475]
[177.81762695 -303.08859253]
[186.79234314 -315.12487793]
[196.97604370 -326.15710449]
[208.25714111 -336.06436157]
[220.51206970 -344.73815918]
[233.60652161 -352.08343506]
[247.39703369 -358.01971436]
[261.73254395 -362.48193359]
[276.45593262 -365.42120361]
[291.40591431 -366.80535889]
[306.41867065 -366.61920166]
[321.32971191 -364.86477661]
[335.97570801 -361.56130981]
[350.19613647 -356.74499512]
[363.83523560 -350.46859741]
[376.74353027 -342.80087280]
[388.77960205 -333.82586670]
[399.81155396 -323.64190674]
[409.71856689 -312.36056519]
[418.39205933 -300.10543823]
[425.73703003 -287.01080322]
[431.67294312 -273.22012329]
[436.13482666 -258.88452148]
[439.07376099 -244.16107178]
[440.45751953 -229.21105957]
[440.27099609 -214.19830322]
[438.51623535 -199.28727722]
[435.21240234 -184.64138794]
[430.39575195 -170.42106628]
[424.11901855 -156.78213501]
[416.45098877 -143.87402344]
[407.47570801 -131.83816528]
[397.29147339 -120.80644226]
[386.00985718 -110.89970398]
[373.75451660 -102.22650909]
[360.65972900 -94.88187408]
[346.86889648 -88.94628143]
[332.53320312 -84.48475647]
[317.80966187 -81.54618835]
[302.85961914 -80.16276550]
[287.84686279 -80.34965515]
[272.93588257 -82.10480499]
[258.29006958 -85.40898895]
[244.06987000 -90.22599792]
[230.43109131 -96.50305176]
[222.77049255 -83.60672760]
[215.10989380 -70.71039581]
[223.44499207 -58.34142303]
[225.59201050 -43.51914978]
[221.07206726 -29.17581940]
[210.73059082 -18.17244911]
[196.57974243 -12.72817516]
[181.40698242 -13.97282791]
[173.74639893 -1.07650077]
[166.08580017 11.81982613]
[158.42520142 24.71615219]
[150.76460266 37.61248016]
[151.32498169 40.35913467]
[150.83114624 43.49325943]
[149.13006592 46.61442947]
[146.21633911 49.27426910]
[142.24459839 51.02902603]
[133.82997131 63.44652176]
[125.41535950 75.86401367]
[124.68087769 90.74050140]
[110.53413391 97.82431030]
[104.76810455 111.67179871]
[101.88282776 126.39168549]
[98.99755859 141.11157227]
[96.11228180 155.83146667]
[97.53256226 164.85481262]
[93.07292175 170.74830627]
[89.96881104 185.42361450]
[96.08123016 202.79370117]
[83.85131073 215.37924194]
[80.96604156 230.09913635]
[78.08076477 244.81903076]
[75.19549561 259.53890991]
[80.13382721 274.56967163]
[70.09290314 285.57098389]
[67.20762634 300.29089355]
[64.32235718 315.01077271]
[78.64215088 319.52999878]
[92.36590576 325.62414551]
[105.32102203 333.21658325]
[117.34458160 342.21179199]
[128.28536987 352.49670410]
[138.00579834 363.94192505]
[146.38360596 376.40356445]
[153.31346130 389.72485352]
[158.70820618 403.73831177]
[162.49998474 418.26766968]
[164.64111328 433.13021851]
[165.10467529 448.13906860]
[163.88482666 463.10543823]
[160.99691772 477.84109497]
[156.47726440 492.16076660]
[150.38270569 505.88433838]
[142.78988647 518.83923340]
[133.79431152 530.86248779]
[123.50907898 541.80297852]
[112.06355286 551.52307129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 190]
[35 189]
[36 188]
[38 186]
[39 185]
[40 184]
[41 183]
[44 181]
[45 180]
[46 178]
[47 177]
[48 176]
[49 175]
[77 174]
[79 172]
[80 171]
[81 170]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
[92 155]
[93 154]
[94 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
