%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[102.96919250 578.53308105]
[89.62253571 571.60211182]
[77.68230438 562.45874023]
[67.51135254 551.38067627]
[59.41875839 538.70465088]
[53.65045166 524.81591797]
[50.38171768 510.13644409]
[49.71189499 495.11239624]
[51.66133881 480.20028687]
[56.17080688 465.85330200]
[63.10326004 452.50744629]
[72.24803162 440.56823730]
[83.32721710 430.39855957]
[96.00413513 422.30740356]
[109.89355469 416.54064941]
[124.57337952 413.27359009]
[123.90359497 398.28854370]
[123.23381042 383.30352783]
[112.10288239 373.47305298]
[111.21015930 358.28564453]
[121.59672546 346.67715454]
[120.92694092 331.69210815]
[112.62905884 319.32302856]
[119.74243164 305.19113159]
[119.07264709 290.20608521]
[118.40286255 275.22103882]
[116.06153870 272.58465576]
[114.88085175 268.68322754]
[115.44145966 264.07464600]
[118.05292511 259.55499268]
[118.05292511 244.55499268]
[118.05292511 229.55499268]
[118.05292511 214.55499268]
[118.05292511 199.55499268]
[115.93830109 184.70480347]
[111.75128937 170.30102539]
[101.30471039 164.20219421]
[97.69856262 152.23643494]
[103.38825226 140.66102600]
[99.41616058 126.19649506]
[95.44406128 111.73197174]
[91.14994049 97.35976410]
[86.53592682 83.08702850]
[74.92882538 72.33594513]
[78.37606812 57.84575272]
[73.76206207 43.57302094]
[69.14805603 29.30028534]
[61.37180328 42.12720871]
[46.83660889 45.83235550]
[33.86888504 38.29324341]
[29.89713669 23.82862663]
[37.19655991 10.72448730]
[51.58571243 6.48747587]
[64.82122803 13.54401207]
[61.49897003 -1.08344793]
[58.17671204 -15.71090794]
[54.85445023 -30.33836746]
[51.53219223 -44.96582794]
[40.93053818 -56.70957184]
[45.65678787 -70.83443451]
[37.73721313 -58.09550858]
[23.52167702 -53.30817413]
[9.50933456 -58.66114044]
[2.10643792 -71.70709991]
[4.69749212 -86.48162079]
[16.09790230 -96.22998810]
[31.09555435 -96.49537659]
[42.83469772 -87.15488434]
[41.05223465 -102.04859924]
[39.26976776 -116.94232178]
[37.48730087 -131.83602905]
[35.70483398 -146.72975159]
[33.92237091 -161.62347412]
[32.13990402 -176.51718140]
[30.35743713 -191.41090393]
[23.43153763 -178.10557556]
[11.16857910 -169.46730042]
[-3.69185972 -167.42588806]
[-17.82991982 -172.43739319]
[-28.08712196 -183.38224792]
[-32.17198181 -197.81533813]
[-29.17193031 -212.51226807]
[-19.75718689 -224.18969727]
[-6.03102922 -230.23887634]
[8.94008350 -229.30841064]
[21.81156731 -221.60614014]
[29.70790482 -208.85276794]
[30.37768936 -223.83779907]
[31.04747581 -238.82284546]
[31.71726036 -253.80787659]
[32.38704681 -268.79290771]
[32.72202301 -283.78918457]
[32.72202301 -298.78918457]
[32.72202301 -313.78918457]
[32.72202301 -328.78918457]
[18.22450256 -333.03164673]
[5.51022339 -341.18786621]
[-4.39012527 -352.59661865]
[-10.67396736 -366.33306885]
[-12.83189964 -381.28366089]
[-10.68898773 -396.23641968]
[-4.41894865 -409.97915649]
[5.46993399 -421.39785767]
[18.17601204 -429.56683350]
[32.66926193 -433.82388306]
[47.77478027 -433.82388306]
[62.26803207 -429.56683350]
[74.97410583 -421.39785767]
[84.86299133 -409.97915649]
[91.13303375 -396.23641968]
[93.27593994 -381.28366089]
[91.11801147 -366.33306885]
[84.83416748 -352.59661865]
[74.93382263 -341.18786621]
[62.21953964 -333.03164673]
[47.72202301 -328.78918457]
[47.72202301 -313.78918457]
[47.72202301 -298.78918457]
[47.72202301 -283.78918457]
[49.94328690 -281.05087280]
[50.94858932 -277.10064697]
[50.18275833 -272.52166748]
[47.37208557 -268.12313843]
[46.70229721 -253.13809204]
[46.03251266 -238.15306091]
[45.36272812 -223.16801453]
[44.69294357 -208.18298340]
[45.25115585 -193.19337463]
[47.03361893 -178.29965210]
[48.81608582 -163.40594482]
[50.59855270 -148.51222229]
[52.38101959 -133.61849976]
[54.16348267 -118.72478485]
[55.94594955 -103.83106995]
[57.72841644 -88.93734741]
[60.28424835 -74.15670013]
[70.64826965 -63.45920563]
[66.15965271 -48.28808975]
[69.48191071 -33.66062927]
[72.80416870 -19.03316689]
[76.12642670 -4.40570736]
[79.44869232 10.22175312]
[83.42078400 24.68627739]
[88.03479767 38.95901108]
[92.64880371 53.23174286]
[103.92588043 62.96194077]
[100.80866241 78.47302246]
[105.42266846 92.74575043]
[108.57270050 94.97054291]
[110.72677612 98.57302094]
[111.29160309 103.07723999]
[109.90858459 107.75988007]
[113.88068390 122.22440338]
[117.85277557 136.68891907]
[131.25085449 149.32115173]
[126.15506744 166.11401367]
[130.34208679 180.51779175]
[133.26055908 165.80444336]
[140.33332825 152.57659912]
[150.94850159 141.97857666]
[164.18778992 134.92723083]
[178.90583801 132.03257751]
[193.82939148 133.54501343]
[207.66741943 139.33369446]
[219.22279358 148.89787292]
[227.49586487 161.41011047]
[231.77090454 175.78800964]
[231.67811584 190.78773499]
[227.22549438 205.11163330]
[218.79824829 217.52056885]
[207.12542725 226.94102478]
[193.21682739 232.55805969]
[178.27569580 233.88572693]
[163.59458923 230.80917358]
[150.44357300 223.59455872]
[139.96032715 212.86602783]
[133.05291748 199.55499268]
[133.05291748 214.55499268]
[133.05291748 229.55499268]
[133.05291748 244.55499268]
[133.05291748 259.55499268]
[133.38789368 274.55126953]
[134.05767822 289.53628540]
[134.72746277 304.52133179]
[143.07325745 317.96224976]
[135.91198730 331.02230835]
[136.58177185 346.00735474]
[147.96257019 356.64291382]
[148.42835999 371.84942627]
[138.21885681 382.63372803]
[138.88864136 397.61877441]
[139.55842590 412.60382080]
[154.47119141 414.54818726]
[168.81970215 419.05276489]
[182.16792297 425.98068237]
[194.11022949 435.12136841]
[204.28369141 446.19711304]
[212.37916565 458.87127686]
[218.15061951 472.75872803]
[221.42268372 487.43743896]
[222.09591675 502.46136475]
[220.14985657 517.37390137]
[215.64364624 531.72192383]
[208.71421814 545.06933594]
[199.57215881 557.01062012]
[188.49526978 567.18280029]
[175.82019043 575.27685547]
[161.93208313 581.04675293]
[147.25299072 584.31713867]
[132.22900391 584.98864746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 192]
[17 191]
[18 190]
[21 187]
[22 186]
[24 184]
[25 183]
[26 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 157]
[36 156]
[39 154]
[40 153]
[41 152]
[42 148]
[43 147]
[45 145]
[46 144]
[47 143]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[60 136]
[68 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
