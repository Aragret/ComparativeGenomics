%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[169.17689514 535.65179443]
[162.28764343 522.16784668]
[160.15237427 507.17721558]
[163.00270081 492.30593872]
[170.52943420 479.16717529]
[181.91615295 469.18612671]
[195.92768860 463.44543457]
[195.03488159 448.47204590]
[194.14205933 433.49862671]
[193.24925232 418.52523804]
[192.35643005 403.55181885]
[191.46360779 388.57843018]
[188.35949707 373.90310669]
[183.11279297 359.85064697]
[177.86607361 345.79818726]
[173.97007751 343.03588867]
[171.76799011 337.79681396]
[172.67916870 331.24841309]
[167.85316467 317.04595947]
[163.02717590 302.84350586]
[158.20117188 288.64105225]
[142.83892822 290.32208252]
[127.47988129 288.55017090]
[112.89082336 283.41064453]
[99.80075836 275.15710449]
[88.86454010 264.19873047]
[80.63007355 251.08020020]
[75.51087952 236.45446777]
[73.76532745 221.05033875]
[75.48358917 205.63613892]
[80.58300018 190.98135376]
[88.81201935 177.81831360]
[99.76264954 166.80546570]
[112.89063263 158.49453735]
[107.85371399 144.36550903]
[102.81680298 130.23648071]
[97.77988434 116.10745239]
[87.57727051 110.49069977]
[83.74821472 99.49163055]
[88.25723267 88.75337982]
[83.43123627 74.55092621]
[78.60523224 60.34846878]
[73.46327972 46.25732803]
[68.00791931 32.28453064]
[62.55256271 18.31173325]
[50.32612228 8.27058125]
[52.90478134 -6.39910793]
[47.44942474 -20.37190628]
[41.99406815 -34.34470367]
[27.79656601 -40.75318527]
[22.46310425 -55.00130081]
[28.66010666 -68.49695587]
[23.20475006 -82.46975708]
[17.74939346 -96.44255829]
[3.55188942 -102.85103607]
[-1.78157067 -117.09915161]
[4.41543150 -130.59481812]
[-1.03992546 -144.56761169]
[-6.49528265 -158.54040527]
[-11.95063972 -172.51319885]
[-26.38346481 -168.38670349]
[-41.13928604 -165.62985229]
[-56.08842850 -164.26689148]
[-71.09951019 -164.30979919]
[-86.04061890 -165.75819397]
[-100.78044128 -168.59934998]
[-115.18943787 -172.80828857]
[-129.14099121 -178.34802246]
[-142.51248169 -185.16989136]
[-155.18640137 -193.21391296]
[-167.05136108 -202.40939331]
[-178.00309753 -212.67555237]
[-187.94537354 -223.92214966]
[-196.79078674 -236.05033875]
[-204.46162415 -248.95353699]
[-210.89047241 -262.51837158]
[-216.02082825 -276.62557983]
[-219.80758667 -291.15124512]
[-222.21749878 -305.96768188]
[-223.22937012 -320.94470215]
[-222.83432007 -335.95065308]
[-221.03579712 -350.85363770]
[-217.84963989 -365.52276611]
[-213.30381775 -379.82904053]
[-207.43829346 -393.64678955]
[-200.30461121 -406.85455322]
[-191.96546936 -419.33627319]
[-182.49415588 -430.98223877]
[-171.97389221 -441.69012451]
[-160.49714661 -451.36581421]
[-148.16477966 -459.92428589]
[-135.08517456 -467.29028320]
[-121.37326050 -473.39913940]
[-107.14955139 -478.19711304]
[-92.53904724 -481.64205933]
[-77.67015076 -483.70370483]
[-62.67353439 -484.36395264]
[-47.68098831 -483.61694336]
[-32.82426834 -481.46929932]
[-18.23394394 -477.93984985]
[-4.03823566 -473.05966187]
[9.63810062 -466.87158203]
[22.67487526 -459.43002319]
[34.95751572 -450.80035400]
[46.37808228 -441.05841064]
[56.83620453 -430.28985596]
[66.23997498 -418.58926392]
[74.50675964 -406.05950928]
[81.56389618 -392.81069946]
[87.34937286 -378.95922852]
[91.81233978 -364.62689209]
[94.91357422 -349.93957520]
[96.62583160 -335.02639771]
[96.93405151 -320.01843262]
[95.83554077 -305.04754639]
[93.33993530 -290.24530029]
[89.46918488 -275.74179077]
[84.25729370 -261.66445923]
[77.75006866 -248.13706970]
[70.00469971 -235.27847290]
[61.08925247 -223.20166016]
[51.08207321 -212.01278687]
[40.07111740 -201.81018066]
[28.15314484 -192.68348694]
[15.43289566 -184.71293640]
[2.02215815 -177.96856689]
[7.47751522 -163.99575806]
[12.93287277 -150.02296448]
[18.38822937 -136.05017090]
[32.09011841 -130.32357788]
[37.82167053 -116.23088074]
[31.72219086 -101.89791107]
[37.17754745 -87.92511749]
[42.63290405 -73.95231628]
[56.33479309 -68.22572327]
[62.06634903 -54.13303375]
[55.96686554 -39.80006027]
[61.42222214 -25.82726288]
[66.87757874 -11.85446453]
[78.71381378 -2.81274056]
[76.52536011 12.85637665]
[81.98072052 26.82917404]
[87.43607330 40.80197144]
[90.50112152 42.54490280]
[92.87424469 45.85901260]
[93.82617950 50.40292358]
[92.80769348 55.52247238]
[97.63368988 69.72492981]
[102.45968628 83.92738342]
[115.35584259 94.65423584]
[111.90891266 111.07054138]
[116.94583130 125.19956970]
[121.98274231 139.32859802]
[127.01966095 153.45762634]
[141.48063660 151.60429382]
[156.00421143 152.80552673]
[169.95256042 157.00604248]
[182.71360779 164.01885986]
[193.72792053 173.53369141]
[202.51329041 185.13058472]
[208.68572998 198.29852295]
[211.97637939 212.45794678]
[212.24313354 226.98617554]
[209.47680664 241.24493408]
[203.80139160 254.60824585]
[195.46859741 266.48999023]
[184.84654236 276.36968994]
[172.40362549 283.81506348]
[177.22962952 298.01751709]
[182.05561829 312.21997070]
[186.88162231 326.42242432]
[191.91853333 340.55145264]
[197.16525269 354.60394287]
[202.41197205 368.65640259]
[204.14100647 353.75637817]
[209.94474792 339.92465210]
[219.36547852 328.25204468]
[231.66024780 319.65911865]
[245.85943604 314.82351685]
[260.84323120 314.12661743]
[275.42996216 317.62338257]
[288.46926880 325.03802490]
[298.93276978 335.78579712]
[305.99530029 349.01910400]
[309.09988403 363.69430542]
[308.00167847 378.65405273]
[302.78729248 392.71856689]
[293.86795044 404.77862549]
[281.94705200 413.88314819]
[267.96478271 419.31411743]
[253.02377319 420.64321899]
[238.30236816 417.76565552]
[224.96157837 410.90832520]
[214.05348206 400.61203003]
[206.43702698 387.68560791]
[207.32983398 402.65899658]
[208.22265625 417.63241577]
[209.11546326 432.60583496]
[210.00828552 447.57922363]
[210.90109253 462.55264282]
[225.49552917 466.58764648]
[237.98762512 475.14486694]
[247.02232361 487.29611206]
[251.61962891 501.72329712]
[251.28083801 516.86145020]
[246.04272461 531.06854248]
[236.47344971 542.80340576]
[223.61103821 550.79327393]
[208.85070801 554.17132568]
[193.79353333 552.57116699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 174]
[14 173]
[15 172]
[18 171]
[19 170]
[20 169]
[21 168]
[34 154]
[35 153]
[36 152]
[37 151]
[40 149]
[41 148]
[42 147]
[43 143]
[44 142]
[45 141]
[47 139]
[48 138]
[49 137]
[52 134]
[53 133]
[54 132]
[57 129]
[58 128]
[59 127]
[60 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
