%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[112.40123749 740.04516602]
[97.87718201 736.27990723]
[83.59417725 731.68408203]
[69.59967041 726.27301025]
[55.94014740 720.06469727]
[42.66098785 713.07977295]
[29.80630493 705.34136963]
[17.41879845 696.87524414]
[5.53961706 687.70947266]
[-5.79177475 677.87457275]
[-16.53773689 667.40319824]
[-26.66256905 656.33007812]
[-36.13264084 644.69207764]
[-44.91649246 632.52777100]
[-52.98494720 619.87768555]
[-60.31119537 606.78369141]
[-66.87090302 593.28942871]
[-72.64228821 579.43963623]
[-77.60616302 565.28033447]
[-81.74604797 550.85858154]
[-85.04818726 536.22222900]
[-87.50161743 521.42004395]
[-89.09818268 506.50100708]
[-89.83258057 491.51480103]
[-89.70236969 476.51116943]
[-88.70797729 461.53997803]
[-86.85272217 446.65093994]
[-84.14276123 431.89349365]
[-80.58708954 417.31671143]
[-76.19752502 402.96896362]
[-70.98864746 388.89794922]
[-64.97776031 375.15042114]
[-58.18482971 361.77200317]
[-50.63242722 348.80715942]
[-42.34563446 336.29898071]
[-33.35198212 324.28900146]
[-23.68134880 312.81707764]
[-13.36585522 301.92138672]
[-2.43977165 291.63809204]
[9.06060791 282.00131226]
[21.09707832 273.04315186]
[33.62965775 264.79327393]
[46.61671448 257.27914429]
[60.01510239 250.52572632]
[73.78031921 244.55541992]
[87.86663055 239.38806152]
[102.22724915 235.04084778]
[116.81446838 231.52818298]
[114.14867401 216.76696777]
[111.48287964 202.00575256]
[108.70726776 187.26478577]
[105.82199097 172.54489136]
[102.93672180 157.82501221]
[98.56532288 151.86575317]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[84.13670349 60.01282501]
[79.52269745 45.74009323]
[74.90868378 31.46735954]
[70.29467773 17.19462585]
[65.68067169 2.92189288]
[61.06665802 -11.35084057]
[49.45955658 -22.10192108]
[52.90680313 -36.59211731]
[38.18506622 -33.63098526]
[23.22174644 -32.36734390]
[8.21191597 -32.81766129]
[-6.64873791 -34.97607040]
[-21.16647720 -38.81443024]
[-35.15203476 -44.28270340]
[-48.42307663 -51.30959320]
[-60.80659103 -59.80349350]
[-72.14112854 -69.65367126]
[-82.27893066 -80.73170471]
[-91.08781433 -92.89316559]
[-98.45295715 -105.97951508]
[-104.27832031 -119.82013702]
[-108.48796844 -134.23460388]
[-111.02702332 -149.03497314]
[-111.86237335 -164.02830505]
[-110.98313904 -179.01911926]
[-108.40077209 -193.81199646]
[-104.14894104 -208.21406555]
[-98.28308868 -222.03758240]
[-90.87967682 -235.10231018]
[-82.03522491 -247.23794556]
[-71.86503601 -258.28625488]
[-60.50171280 -268.10321045]
[-48.09338760 -276.56082153]
[-34.80183029 -283.54882812]
[-20.80032921 -288.97613525]
[-6.27141523 -292.77197266]
[8.59549332 -294.88687134]
[23.60657692 -295.29327393]
[38.56613541 -293.98580933]
[53.27913666 -290.98159790]
[67.55377197 -286.31979370]
[81.20394135 -280.06112671]
[94.05168152 -272.28726196]
[105.92950439 -263.09948730]
[116.68254852 -252.61761475]
[126.17063141 -240.97827148]
[134.27006531 -228.33323669]
[140.87522888 -214.84733582]
[145.90003967 -200.69639587]
[149.27899170 -186.06491089]
[150.96800232 -171.14361572]
[150.94506836 -156.12704468]
[149.21051025 -141.21098328]
[145.78689575 -126.58988190]
[140.71890259 -112.45435333]
[134.07257080 -98.98868561]
[125.93457794 -86.36843872]
[116.41099548 -74.75813293]
[105.62599182 -64.30913544]
[93.72016907 -55.15768051]
[80.84874725 -47.42306519]
[67.17953491 -41.20612717]
[78.45661163 -31.47592735]
[75.33939362 -15.96484947]
[79.95339966 -1.69211650]
[84.56741333 12.58061695]
[89.18141937 26.85334969]
[93.79543304 41.12608337]
[98.40943909 55.39881516]
[103.65792847 41.34700775]
[115.60615540 32.27838516]
[130.55183411 31.00296783]
[143.86387634 37.91595459]
[151.41741943 50.87527847]
[150.87190247 65.86535645]
[142.39634705 78.24134827]
[128.61701965 84.16841125]
[113.80358887 81.80999756]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.65661621 154.93972778]
[120.54188538 169.65962219]
[123.42715454 184.37951660]
[128.14881897 192.19895935]
[126.24409485 199.33995056]
[128.90989685 214.10116577]
[131.57568359 228.86239624]
[146.47010803 227.05082703]
[161.44416809 226.10035706]
[176.44810486 226.01417542]
[191.43209839 226.79252625]
[206.34635925 228.43284607]
[221.14134216 230.92968750]
[235.76789856 234.27476501]
[250.17744446 238.45693970]
[264.32211304 243.46234131]
[278.15490723 249.27432251]
[291.62991333 255.87359619]
[304.70233154 263.23822021]
[317.32873535 271.34375000]
[329.46719360 280.16323853]
[341.07736206 289.66741943]
[352.12072754 299.82470703]
[362.56054688 310.60134888]
[372.36215210 321.96154785]
[381.49301147 333.86755371]
[389.92276001 346.27984619]
[397.62341309 359.15716553]
[404.56936646 372.45675659]
[410.73757935 386.13446045]
[416.10757446 400.14477539]
[420.66143799 414.44119263]
[424.38412476 428.97622681]
[427.26321411 443.70159912]
[429.28918457 458.56838989]
[430.45526123 473.52719116]
[430.75759888 488.52835083]
[430.19519043 503.52197266]
[428.76989746 518.45831299]
[426.48645020 533.28771973]
[423.35244751 547.96099854]
[419.37829590 562.42926025]
[414.57720947 576.64459229]
[408.96511841 590.55969238]
[402.56063843 604.12835693]
[395.38510132 617.30548096]
[387.46231079 630.04736328]
[378.81860352 642.31164551]
[369.48269653 654.05755615]
[359.48556519 665.24603271]
[348.86044312 675.84002686]
[337.64263916 685.80432129]
[325.86938477 695.10571289]
[313.57983398 703.71343994]
[300.81478882 711.59881592]
[287.61663818 718.73565674]
[274.02923584 725.10028076]
[260.09771729 730.67150879]
[245.86839294 735.43090820]
[231.38848877 739.36260986]
[216.70613098 742.45355225]
[201.87007141 744.69348145]
[186.92962646 746.07495117]
[171.93438721 746.59332275]
[156.93418884 746.24700928]
[141.97886658 745.03704834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 151]
[49 150]
[50 149]
[51 147]
[52 146]
[53 145]
[55 144]
[56 143]
[57 142]
[59 140]
[60 139]
[61 129]
[62 128]
[63 127]
[64 126]
[65 125]
[66 124]
[68 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
