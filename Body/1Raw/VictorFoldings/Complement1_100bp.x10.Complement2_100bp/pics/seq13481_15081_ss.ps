%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[153.08493042 588.07659912]
[151.20010376 573.16369629]
[151.67150879 558.13958740]
[154.48751831 543.37420654]
[159.57879639 529.23120117]
[166.81994629 516.05877686]
[176.03266907 504.18139648]
[186.99009705 493.89151001]
[199.42236328 485.44256592]
[213.02333069 479.04254150]
[208.83631897 464.63876343]
[204.64930725 450.23498535]
[200.46229553 435.83120728]
[196.27529907 421.42742920]
[192.08828735 407.02365112]
[187.90127563 392.61987305]
[183.71426392 378.21606445]
[179.52725220 363.81228638]
[163.86772156 363.48739624]
[149.05670166 358.33288574]
[136.54795837 348.84197998]
[127.57326508 335.93420410]
[123.02098846 320.86621094]
[123.34825897 305.10952759]
[128.53503418 290.20684814]
[138.08493042 277.62094116]
[151.07269287 268.59103394]
[146.67169189 254.25119019]
[141.95155334 240.01319885]
[136.91464233 225.88417053]
[131.87773132 211.75514221]
[126.84080505 197.62611389]
[121.80389404 183.49708557]
[116.76697540 169.36805725]
[102.83782959 171.30921936]
[88.79846954 170.48109436]
[75.19412231 166.91581726]
[62.55311966 160.75187683]
[51.36636353 152.22862244]
[42.06830215 141.67706299]
[35.02002335 129.50697327]
[30.49524307 116.19097137]
[28.66968918 102.24620056]
[29.61425018 88.21419525]
[33.29225159 74.63989258]
[39.56084824 62.05045700]
[48.17660904 50.93479156]
[58.80493164 41.72457504]
[71.03307343 34.77748871]
[66.41905975 20.50475693]
[61.80504990 6.23202372]
[57.19104385 -8.04070950]
[52.57703400 -22.31344414]
[47.96302414 -36.58617783]
[43.34901428 -50.85890961]
[38.73500443 -65.13164520]
[26.30207253 -64.61212921]
[14.11845684 -67.08844757]
[2.89478087 -72.41075897]
[-6.71561861 -80.26337433]
[-14.15472603 -90.18349457]
[-18.99224472 -101.58846283]
[-20.95048523 -113.81002808]
[-19.92029762 -126.13343048]
[-15.96714497 -137.83927917]
[-9.32696915 -148.24549866]
[-0.39211494 -156.74707031]
[10.31184959 -162.85125732]
[6.55554914 -177.37332153]
[2.79924870 -191.89537048]
[-0.95705211 -206.41743469]
[-4.71335268 -220.93949890]
[-8.46965313 -235.46154785]
[-13.64836693 -242.98609924]
[-12.17205715 -250.22779846]
[-15.71173000 -264.80416870]
[-30.66920090 -263.37072754]
[-45.67842484 -264.08062744]
[-60.43383408 -266.91940308]
[-74.63502502 -271.82928467]
[-87.99288177 -278.71029663]
[-100.23545074 -287.42236328]
[-111.11349487 -297.78814697]
[-120.40554810 -309.59652710]
[-127.92243195 -322.60720825]
[-133.51112366 -336.55520630]
[-137.05783081 -351.15664673]
[-138.49037170 -366.11419678]
[-137.77954102 -381.12338257]
[-134.93984985 -395.87860107]
[-130.02908325 -410.07949829]
[-123.14723969 -423.43692017]
[-114.43441010 -435.67895508]
[-104.06797791 -446.55636597]
[-92.25899506 -455.84768677]
[-79.24787140 -463.36376953]
[-65.29950714 -468.95159912]
[-50.69786072 -472.49740601]
[-35.74021149 -473.92901611]
[-20.73107529 -473.21725464]
[-5.97601843 -470.37664795]
[8.22456455 -465.46499634]
[21.58156776 -458.58233643]
[33.82305908 -449.86874390]
[44.69982147 -439.50164795]
[53.99041367 -427.69207764]
[61.50569153 -414.68051147]
[67.09265137 -400.73178101]
[70.63755798 -386.12991333]
[72.06823730 -371.17218018]
[71.35556030 -356.16308594]
[68.51403046 -341.40820312]
[63.60151291 -327.20791626]
[56.71801376 -313.85134888]
[48.00366592 -301.61041260]
[37.63588715 -290.73428345]
[25.82575607 -281.44442749]
[12.81370449 -273.92996216]
[-1.13535428 -268.34384155]
[2.40431809 -253.76747131]
[6.05240583 -239.21784973]
[9.80870628 -224.69578552]
[13.56500721 -210.17373657]
[17.32130814 -195.65167236]
[21.07760811 -181.12960815]
[24.83390999 -166.60755920]
[42.48012543 -165.45832825]
[58.69467926 -158.34213257]
[71.52124023 -146.09982300]
[79.40621185 -130.19174194]
[81.38687134 -112.52364349]
[77.20889282 -95.21826935]
[67.35887909 -80.36039734]
[53.00774002 -69.74565125]
[57.62174988 -55.47291946]
[62.23575592 -41.20018768]
[66.84976959 -26.92745209]
[71.46377563 -12.65471935]
[76.07778168 1.61801422]
[80.69179535 15.89074802]
[85.30580139 30.16348076]
[101.12673950 28.64322662]
[116.89179230 30.66223145]
[131.81903076 36.12035751]
[145.16804504 44.74688721]
[156.27674866 56.11394119]
[164.59416199 69.65772247]
[169.70771790 84.70646667]
[171.36381531 100.51376343]
[169.48030090 116.29557800]
[164.15060425 131.26913452]
[155.63905334 144.69177246]
[144.36784363 155.89770508]
[130.89601135 164.33114624]
[135.93292236 178.46017456]
[140.96983337 192.58920288]
[146.00675964 206.71823120]
[151.04367065 220.84725952]
[156.08058167 234.97628784]
[160.05809021 238.35659790]
[162.13368225 242.50933838]
[162.33163452 246.58068848]
[161.01153564 249.85018921]
[165.41253662 264.19003296]
[179.81008911 264.15725708]
[193.61790466 268.17932129]
[205.71885681 275.92153931]
[215.13659668 286.74853516]
[221.11427307 299.77651978]
[223.17530823 313.94540405]
[221.16148376 328.10501099]
[215.24497986 341.10845947]
[205.91368103 351.90505981]
[193.93103027 359.62527466]
[198.11804199 374.02905273]
[202.30505371 388.43286133]
[206.49206543 402.83663940]
[210.67907715 417.24041748]
[214.86608887 431.64419556]
[219.05310059 446.04797363]
[223.24011230 460.45175171]
[227.42712402 474.85552979]
[242.33952332 472.96704102]
[257.36376953 473.43472290]
[272.12985229 476.24707031]
[286.27413940 481.33483887]
[299.44833374 488.57275391]
[311.32800293 497.78253174]
[321.62057495 508.73739624]
[330.07263184 521.16754150]
[336.47601318 534.76696777]
[340.67300415 549.20068359]
[342.56027222 564.11322021]
[342.09136963 579.13745117]
[339.27777100 593.90325928]
[334.18884277 608.04711914]
[326.94985962 621.22076416]
[317.73910522 633.09967041]
[306.78338623 643.39135742]
[294.35250854 651.84234619]
[280.75259399 658.24462891]
[266.31854248 662.44042969]
[251.40582275 664.32647705]
[236.38165283 663.85626221]
[221.61604309 661.04150391]
[207.47257996 655.95141602]
[194.29959106 648.71130371]
[182.42144775 639.49957275]
[172.13066101 628.54302979]
[163.68066406 616.11145020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 182]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[27 164]
[28 163]
[29 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[75 120]
[76 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
