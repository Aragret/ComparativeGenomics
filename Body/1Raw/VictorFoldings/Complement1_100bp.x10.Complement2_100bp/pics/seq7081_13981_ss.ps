%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[112.69639587 398.37185669]
[107.47228241 384.30340576]
[103.31412506 369.88391113]
[100.24516296 355.19400024]
[98.28257751 340.31579590]
[97.43732452 325.33255005]
[97.71414948 310.32803345]
[99.11148834 295.38616943]
[101.62154388 280.59048462]
[105.23026276 266.02377319]
[109.91746521 251.76745605]
[115.65694427 237.90129089]
[122.41660309 224.50280762]
[130.15863037 211.64695740]
[138.83973694 199.40560913]
[148.41137695 187.84722900]
[158.82000732 177.03646851]
[148.82183838 165.85449219]
[134.57066345 161.52401733]
[131.14010620 146.07920837]
[121.14193726 134.89724731]
[111.14376831 123.71526337]
[101.14559174 112.53329468]
[90.90019989 101.57738495]
[80.41270447 90.85300446]
[69.92520142 80.12862396]
[59.43769836 69.40424347]
[48.95019913 58.67986298]
[38.46269608 47.95548248]
[27.97519684 37.23110580]
[14.57923222 38.63207626]
[2.99143410 32.15647507]
[-2.66708851 20.36396790]
[-0.53249192 7.65676546]
[-10.85916042 -3.22256899]
[-21.18582916 -14.10190296]
[-31.51249695 -24.98123741]
[-41.83916473 -35.86057281]
[-53.45663071 -26.36100578]
[-65.74394226 -17.74536514]
[-78.63397980 -10.06070614]
[-92.05635834 -3.34900045]
[-105.93776703 2.35309458]
[-120.20237732 7.01443577]
[-134.77227783 10.60956478]
[-149.56791687 13.11884499]
[-164.50846863 14.52857208]
[-179.51231384 14.83104610]
[-194.49754333 14.02461624]
[-209.38227844 12.11368465]
[-224.08525085 9.10869122]
[-238.52613831 5.02604580]
[-252.62606812 -0.11195175]
[-266.30804443 -6.27723980]
[-279.49734497 -13.43614578]
[-292.12188721 -21.54956818]
[-304.11279297 -30.57319641]
[-315.40451050 -40.45774460]
[-325.93539429 -51.14922333]
[-335.64791870 -62.58924484]
[-344.48904419 -74.71532440]
[-352.41046143 -87.46122742]
[-359.36895752 -100.75734711]
[-365.32647705 -114.53105927]
[-370.25048828 -128.70713806]
[-374.11410522 -143.20816040]
[-376.89624023 -157.95492554]
[-378.58169556 -172.86688232]
[-379.16125488 -187.86259460]
[-378.63174438 -202.86015320]
[-376.99606323 -217.77764893]
[-374.26315308 -232.53361511]
[-370.44793701 -247.04743958]
[-365.57125854 -261.23986816]
[-359.65972900 -275.03338623]
[-352.74566650 -288.35266113]
[-344.86679077 -301.12493896]
[-336.06619263 -313.28042603]
[-326.39187622 -324.75280762]
[-315.89675903 -335.47937012]
[-304.63806152 -345.40155029]
[-292.67736816 -354.46511841]
[-280.07995605 -362.62063599]
[-266.91461182 -369.82351685]
[-253.25329590 -376.03442383]
[-239.17057800 -381.21945190]
[-224.74339294 -385.35025024]
[-210.05053711 -388.40429688]
[-195.17225647 -390.36489868]
[-180.18980408 -391.22131348]
[-165.18502808 -390.96890259]
[-150.23985291 -389.60903931]
[-135.43592834 -387.14913940]
[-120.85411072 -383.60266113]
[-106.57402039 -378.98895264]
[-92.67366791 -373.33322144]
[-79.22897339 -366.66632080]
[-66.31335449 -359.02471924]
[-53.99736404 -350.45013428]
[-42.34826660 -340.98937988]
[-31.42968369 -330.69415283]
[-21.30125046 -319.62066650]
[-12.01828766 -307.82940674]
[-3.63149261 -295.38476562]
[3.81332636 -282.35473633]
[10.27550793 -268.81045532]
[15.71975803 -254.82592773]
[20.11634064 -240.47749329]
[23.44124603 -225.84355164]
[25.67630959 -211.00402832]
[26.80932808 -196.03994751]
[26.83411026 -181.03306580]
[25.75052452 -166.06533813]
[23.56448555 -151.21850586]
[20.28793526 -136.57365417]
[15.93876648 -122.21079254]
[10.54073620 -108.20834351]
[4.12332535 -94.64279938]
[-3.27841592 -81.58824158]
[-11.62406158 -69.11597443]
[-20.86802864 -57.29411697]
[-30.95983124 -46.18724060]
[-20.63316345 -35.30790710]
[-10.30649471 -24.42857170]
[0.02017387 -13.54923725]
[10.34684277 -2.66990304]
[27.16231155 -2.95050931]
[39.21520233 9.25779629]
[38.69957733 26.74360275]
[49.18707657 37.46798325]
[59.67457962 48.19236374]
[70.16207886 58.91674423]
[80.64958191 69.64112091]
[91.13708496 80.36550140]
[101.62458038 91.08988190]
[105.43579102 91.67901611]
[108.96881104 93.94521332]
[111.48046875 97.72655487]
[112.32756805 102.53511810]
[122.32574463 113.71709442]
[132.32391357 124.89907074]
[142.32208252 136.08103943]
[157.28840637 141.21133423]
[160.00381470 155.85632324]
[170.00198364 167.03829956]
[181.90531921 157.89920044]
[194.45832825 149.67520142]
[207.59080505 142.41229248]
[221.22933960 136.15109253]
[235.29763794 130.92660522]
[249.71702576 126.76805878]
[264.40686035 123.69871521]
[279.28500366 121.73573303]
[294.26821899 120.89009094]
[309.27276611 121.16651154]
[324.21466064 122.56346130]
[339.01040649 125.07312012]
[353.57720947 128.68145752]
[367.83364868 133.36828613]
[381.69998169 139.10739136]
[395.09863281 145.86669922]
[407.95468140 153.60838318]
[420.19625854 162.28916931]
[431.75488281 171.86050415]
[442.56594849 182.26884460]
[452.56890869 193.45600891]
[461.70791626 205.35942078]
[469.93179321 217.91249084]
[477.19458008 231.04504395]
[483.45568848 244.68363953]
[488.68002319 258.75198364]
[492.83843994 273.17141724]
[495.90765381 287.86126709]
[497.87051392 302.73941040]
[498.71603394 317.72265625]
[498.43948364 332.72717285]
[497.04238892 347.66906738]
[494.53262329 362.46478271]
[490.92416382 377.03158569]
[486.23718262 391.28796387]
[480.49795532 405.15423584]
[473.73852539 418.55282593]
[465.99673462 431.40884399]
[457.31582642 443.65032959]
[447.74441528 455.20886230]
[437.33596802 466.01980591]
[426.14871216 476.02270508]
[414.24523926 485.16159058]
[401.69207764 493.38537598]
[388.55944824 500.64804077]
[374.92080688 506.90902710]
[360.85241699 512.13323975]
[346.43295288 516.29156494]
[331.74307251 519.36059570]
[316.86489868 521.32336426]
[301.88165283 522.16870117]
[286.87713623 521.89202881]
[271.93524170 520.49481201]
[257.13955688 517.98492432]
[242.57281494 514.37634277]
[228.31645203 509.68923950]
[214.45024109 503.94989014]
[201.05169678 497.19033813]
[188.19577026 489.44842529]
[175.95434570 480.76742554]
[164.39588928 471.19589233]
[153.58503723 460.78735352]
[143.58226013 449.60000610]
[134.44346619 437.69644165]
[126.21980286 425.14321899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 145]
[18 144]
[20 142]
[21 141]
[22 140]
[23 139]
[24 135]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[30 129]
[34 126]
[35 125]
[36 124]
[37 123]
[38 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
