%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[2.36427546 673.41564941]
[-12.58663845 674.84735107]
[-27.60017014 674.43090820]
[-42.44872284 672.17254639]
[-56.90718842 668.10650635]
[-70.75638580 662.29455566]
[-83.78636932 654.82464600]
[-95.79959869 645.81011963]
[-106.61396027 635.38757324]
[-116.06551361 623.71502686]
[-124.01097107 610.96948242]
[-130.32987976 597.34411621]
[-134.92645264 583.04547119]
[-137.73100281 568.29034424]
[-138.70101929 553.30236816]
[-137.82179260 538.30883789]
[-135.10664368 523.53698730]
[-130.59675598 509.21075439]
[-124.36047363 495.54736328]
[-116.49235535 482.75390625]
[-107.11166382 471.02435303]
[-96.36062622 460.53652954]
[-84.40220642 451.44940186]
[-71.41770172 443.90072632]
[-57.60395813 438.00497437]
[-43.17037964 433.85150146]
[-28.33577728 431.50326538]
[-13.32504272 430.99584961]
[-11.98680878 416.05566406]
[-10.64857388 401.11550903]
[-9.31033993 386.17532349]
[-7.97210598 371.23513794]
[-16.24139786 383.74987793]
[-28.08587074 392.95358276]
[-42.25555038 397.87500000]
[-57.25506973 397.99472046]
[-71.50150299 393.30014038]
[-83.49138641 384.28665161]
[-91.95939636 371.90551758]
[-96.01188660 357.46328735]
[-95.22118378 342.48416138]
[-89.67073822 328.54885864]
[-79.94629669 317.12802124]
[-67.07411194 309.42694092]
[-52.41260529 306.25830078]
[-37.50904846 307.95651245]
[-23.93624306 314.34234619]
[-13.12656212 324.74191284]
[-6.22077799 338.05770874]
[-3.94767642 352.88464355]
[1.08923984 338.75561523]
[6.12615585 324.62658691]
[1.22654140 313.56674194]
[5.30724621 301.75439453]
[16.69618416 295.70007324]
[13.89939880 281.07040405]
[25.97498512 270.84832764]
[31.22170448 256.79583740]
[28.42491913 242.16618347]
[40.50050354 231.94410706]
[45.74722290 217.89163208]
[39.34997940 204.48973083]
[44.47071457 190.16378784]
[58.57123184 183.54464722]
[63.81794739 169.49217224]
[62.68561935 164.85246277]
[64.45590973 159.45217896]
[69.43575287 155.10330200]
[75.09853363 141.21327209]
[80.76132202 127.32324982]
[86.42411041 113.43321991]
[80.90144348 100.03746033]
[86.37151337 86.62014008]
[99.68585968 80.90399170]
[105.34864807 67.01396179]
[111.01143646 53.12393570]
[115.51906586 38.81724930]
[118.84132385 24.18978882]
[114.35270691 9.01867008]
[124.71672821 -1.67881930]
[128.03898621 -16.30628014]
[130.92425537 -31.02617073]
[133.36997986 -45.82544327]
[135.81571960 -60.62471390]
[138.15119934 -75.44178009]
[140.37631226 -90.27582550]
[142.60144043 -105.10987091]
[144.82655334 -119.94390869]
[147.05166626 -134.77795410]
[145.31958008 -138.75964355]
[144.97888184 -142.69009399]
[145.84262085 -146.13819885]
[147.60301208 -148.77781677]
[149.87620544 -150.41816711]
[152.98031616 -165.09347534]
[156.08442688 -179.76876831]
[154.79864502 -188.81225586]
[159.34555054 -194.63870239]
[162.66780090 -209.26617432]
[165.99006653 -223.89363098]
[152.45712280 -230.52359009]
[140.81832886 -240.09622192]
[131.70135498 -252.09527588]
[125.59783173 -265.87365723]
[122.83694458 -280.68832397]
[123.56758118 -295.74032593]
[127.75033569 -310.21792603]
[135.15962219 -323.34039307]
[145.39590454 -334.40002441]
[157.90711975 -342.80041504]
[172.01855469 -348.08850098]
[186.96922302 -349.97912598]
[201.95281982 -348.37033081]
[216.16133118 -343.34887695]
[228.82849121 -335.18554688]
[239.27117920 -324.32061768]
[246.92623901 -311.33996582]
[251.38082886 -296.94366455]
[252.39474487 -281.90808105]
[249.91328430 -267.04406738]
[244.07026672 -253.15321350]
[235.18081665 -240.98463440]
[223.72431946 -231.19456482]
[210.31861877 -224.31097412]
[195.68666077 -220.70509338]
[180.61752319 -220.57136536]
[177.29525757 -205.94390869]
[173.97300720 -191.31645203]
[170.75973511 -176.66465759]
[167.65562439 -161.98936462]
[164.55151367 -147.31405640]
[161.88571167 -132.55284119]
[159.66059875 -117.71879578]
[157.43548584 -102.88475037]
[155.21035767 -88.05070496]
[152.98524475 -73.21665955]
[155.10174561 -66.13554382]
[150.61499023 -58.17898560]
[148.16926575 -43.37971497]
[145.72352600 -28.58044434]
[147.24447632 -26.22568893]
[147.92431641 -23.12658691]
[147.47485352 -19.60048485]
[145.72802734 -16.06309891]
[142.66644287 -12.98402023]
[139.34419250 1.64344025]
[144.07043457 15.76830578]
[133.46878052 27.51204872]
[130.14653015 42.13951111]
[141.13813782 31.93242455]
[155.58973694 27.91355705]
[170.27279663 30.98073196]
[181.90708923 40.44873428]
[187.89349365 54.20238876]
[186.89462280 69.16909790]
[179.13362122 82.00524902]
[166.34431458 89.84322357]
[151.38388062 90.93199921]
[137.59451294 85.02832794]
[128.05679321 73.45111847]
[124.90146637 58.78672409]
[119.23867798 72.67675018]
[113.57588959 86.56678009]
[119.09855652 99.96253967]
[113.62848663 113.37985992]
[100.31414032 119.09600830]
[94.65135193 132.98603821]
[88.98856354 146.87606812]
[83.32577515 160.76608276]
[77.87042236 174.73889160]
[72.62370300 188.79136658]
[78.93590546 203.03193665]
[73.41480255 217.20838928]
[59.79969406 223.13835144]
[54.55297470 237.19082642]
[56.97447968 252.82562256]
[45.27417374 262.04257202]
[40.02745819 276.09503174]
[42.44896317 291.72982788]
[30.74865532 300.94677734]
[34.21675110 319.03140259]
[20.25518608 329.66351318]
[15.21826935 343.79254150]
[10.18135357 357.92156982]
[6.96807909 372.57336426]
[5.62984514 387.51354980]
[4.29161072 402.45373535]
[2.95337677 417.39392090]
[1.61514258 432.33410645]
[16.29675102 435.50112915]
[30.47787476 440.44836426]
[43.94353104 447.10086060]
[56.48958588 455.35775757]
[67.92584229 465.09384155]
[78.07893372 476.16156006]
[86.79493713 488.39312744]
[93.94172668 501.60308838]
[99.41094971 515.59118652]
[103.11969757 530.14538574]
[105.01174927 545.04504395]
[105.05841827 560.06427002]
[103.25900269 574.97540283]
[99.64076996 589.55236816]
[94.25859070 603.57421875]
[87.19403839 616.82830811]
[78.55421448 629.11383057]
[68.47010803 640.24444580]
[57.09457397 650.05139160]
[44.60007477 658.38610840]
[31.17602158 665.12213135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[50 184]
[51 183]
[52 182]
[55 180]
[57 178]
[58 177]
[60 175]
[61 174]
[64 171]
[65 170]
[68 169]
[69 168]
[70 167]
[71 166]
[74 163]
[75 162]
[76 161]
[77 149]
[78 148]
[80 146]
[81 145]
[82 140]
[83 139]
[84 138]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[94 131]
[95 130]
[96 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
