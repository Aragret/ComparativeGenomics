%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[147.71682739 428.62567139]
[144.67781067 413.92691040]
[142.93147278 399.01919556]
[142.49107361 384.01602173]
[143.35998535 369.03155518]
[145.53157043 354.17984009]
[148.98933411 339.57388306]
[153.70692444 325.32489014]
[159.64846802 311.54132080]
[166.76872253 298.32800293]
[175.01350403 285.78558350]
[184.32008362 274.00942993]
[194.61759949 263.08926392]
[205.82769775 253.10812378]
[192.01968384 247.52348328]
[189.98074341 231.83421326]
[181.02005005 219.80484009]
[172.05935669 207.77546692]
[163.09864807 195.74607849]
[149.29064941 190.16143799]
[147.25169373 174.47216797]
[138.11289978 162.57754517]
[128.79800415 150.82028198]
[119.48312378 139.06303406]
[110.16824341 127.30578613]
[105.87440491 141.67808533]
[92.01831055 147.42340088]
[78.81415558 140.30648804]
[75.99555206 125.57368469]
[85.64027405 114.08545685]
[100.63710785 114.30976868]
[88.14216614 108.03536987]
[86.94539642 94.10485077]
[78.53078461 81.68735504]
[70.11616516 69.26985931]
[61.70154190 56.85236359]
[52.92094040 44.69090652]
[43.78213882 32.79627609]
[34.64333725 20.90164185]
[25.50453377 9.00700855]
[16.36573029 -2.88762426]
[7.22692871 -14.78225708]
[-3.36294174 -13.48671341]
[-13.45817566 -16.67942238]
[-21.25742149 -23.72039413]
[-25.39829826 -33.28940964]
[-25.19513512 -43.63320923]
[-20.75159836 -52.88663864]
[-29.35016251 -65.17747498]
[-37.94872665 -77.46831512]
[-46.54729080 -89.75915527]
[-50.21788788 -75.21519470]
[-63.02629471 -67.40849304]
[-77.63527679 -70.81107330]
[-85.67614746 -83.47379303]
[-82.54273224 -98.14286041]
[-70.02998352 -106.41517639]
[-55.30657578 -103.55249786]
[-62.77431870 -116.56145477]
[-76.35500336 -124.67782593]
[-75.98098755 -139.56773376]
[-83.44873047 -152.57669067]
[-90.91647339 -165.58564758]
[-98.38421631 -178.59458923]
[-112.26016235 -172.84251404]
[-126.75775909 -168.91210938]
[-141.63894653 -166.86795044]
[-156.65936279 -166.74359131]
[-171.57235718 -168.54107666]
[-186.13304138 -172.23089600]
[-200.10232544 -177.75244141]
[-213.25080872 -185.01506042]
[-225.36259460 -193.89949036]
[-236.23878479 -204.25984192]
[-245.70079041 -215.92597961]
[-253.59323120 -228.70634460]
[-259.78649902 -242.39106750]
[-264.17892456 -256.75543213]
[-266.69833374 -271.56356812]
[-267.30340576 -286.57229614]
[-265.98416138 -301.53518677]
[-262.76229858 -316.20651245]
[-257.69070435 -330.34536743]
[-250.85267639 -343.71957397]
[-242.36045837 -356.10952759]
[-232.35354614 -367.31176758]
[-220.99624634 -377.14233398]
[-208.47505188 -385.43978882]
[-194.99557495 -392.06793213]
[-180.77915955 -396.91784668]
[-166.05924988 -399.90997314]
[-151.07757568 -400.99511719]
[-136.08012390 -400.15548706]
[-121.31318665 -397.40487671]
[-107.01924896 -392.78842163]
[-93.43302155 -386.38195801]
[-80.77760315 -378.29067993]
[-69.26081085 -368.64746094]
[-59.07176590 -357.61062622]
[-50.37777328 -345.36141968]
[-43.32159805 -332.10101318]
[-38.01911163 -318.04711914]
[-34.55738068 -303.43051147]
[-32.99325943 -288.49124146]
[-33.35242081 -273.47460938]
[-35.62897491 -258.62719727]
[-39.78553391 -244.19282532]
[-45.75384903 -230.40849304]
[-53.43590927 -217.50057983]
[-62.70557022 -205.68103027]
[-73.41061401 -195.14393616]
[-85.37525940 -186.06233215]
[-77.90752411 -173.05339050]
[-70.43978119 -160.04443359]
[-62.97203827 -147.03547668]
[-49.92549515 -139.84959412]
[-49.76536560 -124.02919769]
[-42.29762650 -111.02024078]
[-34.25645065 -98.35771942]
[-25.65788841 -86.06687927]
[-17.05932426 -73.77603912]
[-8.46076012 -61.48520279]
[10.92011547 -59.51140213]
[22.78395081 -43.67621994]
[19.12156105 -23.92105865]
[28.26036453 -12.02642632]
[37.39916611 -0.13179384]
[46.53796768 11.76283932]
[55.67676926 23.65747261]
[64.81557465 35.55210495]
[67.57431793 36.04957581]
[70.30223083 37.66979599]
[72.57067871 40.40649414]
[73.96123505 44.09849548]
[74.11904144 48.43774414]
[82.53366089 60.85523987]
[90.94827271 73.27273560]
[99.36289215 85.69023132]
[111.85783386 91.96463013]
[113.05460358 105.89514923]
[121.92549896 117.99090576]
[131.24037170 129.74815369]
[140.55526733 141.50540161]
[149.87014771 153.26264954]
[155.86596680 156.04862976]
[159.07328796 160.74011230]
[159.28106689 165.51147461]
[173.73001099 171.95654297]
[175.12803650 186.78538513]
[184.08872986 198.81475830]
[193.04942322 210.84414673]
[202.01011658 222.87351990]
[216.45906067 229.31857300]
[217.85707092 244.14743042]
[230.62963867 236.26385498]
[244.04071045 229.52348328]
[257.98822021 223.97761536]
[272.36599731 219.66848755]
[287.06463623 216.62886047]
[301.97229004 214.88189697]
[316.97543335 214.44087219]
[331.95993042 215.30914307]
[346.81176758 217.48010254]
[361.41784668 220.93724060]
[375.66702271 225.65425110]
[389.45086670 231.59519958]
[402.66445923 238.71490479]
[415.20724487 246.95916748]
[426.98376465 256.26522827]
[437.90438843 266.56228638]
[447.88598633 277.77197266]
[456.85263062 289.80895996]
[464.73602295 302.58163452]
[471.47619629 315.99279785]
[477.02185059 329.94039917]
[481.33081055 344.31823730]
[484.37020874 359.01690674]
[486.11697388 373.92456055]
[486.55780029 388.92773438]
[485.68930054 403.91223145]
[483.51812744 418.76400757]
[480.06079102 433.37005615]
[475.34359741 447.61917114]
[469.40243530 461.40292358]
[462.28256226 474.61642456]
[454.03811646 487.15908813]
[444.73187256 498.93548584]
[434.43466187 509.85595703]
[423.22485352 519.83740234]
[411.18774414 528.80389404]
[398.41494751 536.68707275]
[385.00369263 543.42706299]
[371.05603027 548.97253418]
[356.67813110 553.28125000]
[341.97940063 556.32049561]
[327.07171631 558.06701660]
[312.06854248 558.50762939]
[297.08404541 557.63897705]
[282.23229980 555.46759033]
[267.62631226 552.01000977]
[253.37727356 547.29260254]
[239.59359741 541.35125732]
[226.38018799 534.23120117]
[213.83763123 525.98657227]
[202.06138611 516.68017578]
[191.14105225 506.38281250]
[181.15975952 495.17285156]
[172.19346619 483.13562012]
[164.31042480 470.36273193]
[157.57061768 456.95138550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 154]
[16 152]
[17 151]
[18 150]
[19 149]
[21 147]
[22 144]
[23 143]
[24 142]
[25 141]
[31 140]
[33 138]
[34 137]
[35 136]
[36 135]
[37 130]
[38 129]
[39 128]
[40 127]
[41 126]
[42 125]
[48 122]
[49 121]
[50 120]
[51 119]
[58 118]
[59 117]
[61 115]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
