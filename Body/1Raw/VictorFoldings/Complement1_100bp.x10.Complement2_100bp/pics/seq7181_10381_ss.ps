%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[129.79786682 750.53198242]
[116.64299011 743.30047607]
[104.23509216 734.85131836]
[92.68653107 725.26092529]
[82.10189819 714.61621094]
[72.57704926 703.01348877]
[64.19825745 690.55798340]
[57.04138565 677.36236572]
[51.17126083 663.54620361]
[46.64104080 649.23461914]
[43.49175644 634.55718994]
[41.75192261 619.64685059]
[41.43730545 604.63867188]
[42.55074310 589.66851807]
[45.08216095 574.87200928]
[49.00862885 560.38311768]
[54.29459000 546.33312988]
[60.89216995 532.84918213]
[68.74161530 520.05340576]
[77.77185059 508.06179810]
[87.90108490 496.98281860]
[99.03758240 486.91687012]
[111.08049774 477.95513916]
[123.92075348 470.17871094]
[137.44207764 463.65808105]
[151.52200317 458.45227051]
[166.03302002 454.60842896]
[163.58728027 439.80917358]
[161.14155579 425.00988770]
[158.69583130 410.21063232]
[146.47561646 401.77252197]
[143.78446960 386.79879761]
[152.71800232 374.03829956]
[150.27226257 359.23904419]
[147.82653809 344.43975830]
[145.38081360 329.64050293]
[142.16754150 314.98870850]
[138.19544983 300.52416992]
[134.22334290 286.05966187]
[130.25125122 271.59512329]
[125.42525482 257.39266968]
[119.76246643 243.50265503]
[114.09967804 229.61262512]
[112.33449554 244.50839233]
[105.64297485 257.93313599]
[94.81122589 268.30969238]
[81.11175537 274.41906738]
[66.15396118 275.54354858]
[51.69507217 271.55099487]
[39.43370438 262.91046143]
[30.81030655 250.63702393]
[26.83795166 236.17257690]
[27.98330498 221.21636963]
[34.11181641 207.52543640]
[44.50350571 196.70820618]
[57.93757629 190.03543091]
[72.83580780 188.29106140]
[87.44795990 191.68000793]
[100.05741882 199.80413818]
[109.18357086 211.71043396]
[106.95845032 196.87638855]
[104.73332977 182.04234314]
[102.50821686 167.20829773]
[100.28309631 152.37425232]
[98.05798340 137.54020691]
[95.83286285 122.70616150]
[93.60774994 107.87212372]
[89.39271545 101.00145721]
[91.46163940 92.80081940]
[89.45762634 77.93529510]
[83.63282013 91.75816345]
[73.01576996 102.35430145]
[59.18144608 108.15184021]
[44.18208694 108.29074860]
[30.24276352 102.75041962]
[19.43128967 92.35272980]
[13.35148048 78.64010620]
[12.90524292 63.64674759]
[18.15877151 49.59682083]
[28.33273888 38.57455063]
[41.91789246 32.21502686]
[56.89896393 31.46164703]
[71.05358887 36.42617035]
[82.28202820 46.37213898]
[88.91809082 59.82228088]
[90.03374481 44.86382675]
[83.34428406 30.52640343]
[92.00675964 18.40985680]
[93.12241364 3.45140409]
[91.09897614 -0.39042953]
[90.46689606 -4.28465509]
[91.07177734 -7.78744221]
[92.63096619 -10.55068874]
[94.77585602 -12.35556602]
[96.77987671 -27.22109413]
[98.78388977 -42.08662033]
[92.95966339 -56.79679108]
[102.32798004 -68.37625122]
[104.33199310 -83.24178314]
[90.46504974 -89.20922852]
[78.72304535 -98.69754028]
[69.97733307 -111.00261688]
[64.87688446 -125.21134949]
[63.80019379 -140.26934814]
[66.82716370 -155.05921936]
[73.73316193 -168.48342896]
[84.00572968 -179.54585266]
[96.88256073 -187.42555237]
[111.40811920 -191.53781128]
[126.50450897 -191.57748413]
[141.05148315 -187.54161072]
[153.96954346 -179.72969055]
[164.30010986 -168.72140503]
[171.27655029 -155.33366394]
[174.38121033 -140.55990601]
[173.38366699 -125.49645996]
[168.35795593 -111.26112366]
[159.67701721 -98.91025543]
[147.98504639 -89.36036682]
[134.14965820 -83.32012939]
[119.19751740 -81.23777008]
[117.19350433 -66.37223816]
[123.16107178 -52.72535324]
[113.64941406 -40.08260727]
[111.64540100 -25.21708107]
[109.64138794 -10.35155201]
[108.08086395 4.56705284]
[106.96521759 19.52550697]
[113.73447418 32.79299927]
[104.99219513 45.97947693]
[103.87654877 60.93792725]
[104.32315063 75.93128204]
[106.32716370 90.79680634]
[108.44178772 105.64700317]
[110.66690826 120.48104858]
[112.89202881 135.31509399]
[115.11714172 150.14913940]
[117.34226227 164.98318481]
[119.56737518 179.81723022]
[121.79249573 194.65126038]
[124.01760864 209.48530579]
[127.98970795 223.94982910]
[133.65249634 237.83985901]
[139.31527710 251.72988892]
[144.19706726 237.54650879]
[156.41677856 228.84715271]
[171.41674805 228.87644958]
[183.60237122 237.62348938]
[188.42869568 251.82583618]
[184.09564209 266.18637085]
[172.21932983 275.34893799]
[157.22930908 275.89617920]
[144.71577454 267.62304688]
[148.68786621 282.08755493]
[152.65997314 296.55209351]
[156.63206482 311.01660156]
[163.97491455 297.93676758]
[177.96250916 292.51943970]
[192.19989014 297.24139404]
[200.17794800 309.94378662]
[198.24919128 324.81924438]
[187.29544067 335.06695557]
[172.32460022 336.00177002]
[160.18008423 327.19476318]
[162.62580872 341.99401855]
[165.07153320 356.79330444]
[167.51727295 371.59255981]
[180.08126831 380.80038452]
[182.35076904 395.84378052]
[173.49510193 407.76489258]
[175.94082642 422.56417847]
[178.38656616 437.36343384]
[180.83229065 452.16271973]
[195.80845642 451.13348389]
[210.81463623 451.53253174]
[225.71493530 453.35623169]
[240.37440491 456.58801270]
[254.66029358 461.19866943]
[268.44320679 467.14642334]
[281.59835815 474.37741089]
[294.00656128 482.82614136]
[305.55548096 492.41610718]
[316.14050293 503.06045532]
[325.66577148 514.66278076]
[334.04501343 527.11804199]
[341.20236206 540.31335449]
[347.07299805 554.12933350]
[351.60372925 568.44073486]
[354.75357056 583.11804199]
[356.49392700 598.02832031]
[356.80911255 613.03649902]
[355.69619751 628.00665283]
[353.16531372 642.80328369]
[349.23937988 657.29229736]
[343.95394897 671.34252930]
[337.35684204 684.82672119]
[329.50787354 697.62274170]
[320.47805786 709.61468506]
[310.34924316 720.69403076]
[299.21310425 730.76037598]
[287.17053223 739.72259521]
[274.33053589 747.49945068]
[260.80947876 754.02056885]
[246.72973633 759.22692871]
[232.21885681 763.07128906]
[217.40824890 765.51885986]
[202.43205261 766.54754639]
[187.42588806 766.14794922]
[172.52565002 764.32373047]
[157.86628723 761.09136963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 173]
[28 172]
[29 171]
[30 170]
[33 167]
[34 166]
[35 165]
[36 164]
[37 156]
[38 155]
[39 154]
[40 153]
[41 144]
[42 143]
[43 142]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[69 133]
[70 132]
[85 131]
[86 130]
[88 128]
[89 127]
[94 126]
[95 125]
[96 124]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
