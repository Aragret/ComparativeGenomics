%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[52.75388718 418.80691528]
[37.97246933 416.26354980]
[23.32538795 413.03521729]
[8.84436703 409.12893677]
[-5.43923235 404.55313110]
[-19.49447441 399.31774902]
[-33.29091644 393.43411255]
[-46.79868317 386.91494751]
[-59.98851395 379.77441406]
[-72.83184814 372.02792358]
[-85.30086517 363.69232178]
[-97.36856842 354.78558350]
[-109.00881195 345.32705688]
[-120.19638824 335.33718872]
[-130.90707397 324.83764648]
[-141.11766052 313.85116577]
[-150.80604553 302.40151978]
[-159.95123291 290.51351929]
[-168.53343201 278.21292114]
[-176.53404236 265.52633667]
[-183.93574524 252.48126221]
[-190.72250366 239.10595703]
[-196.87963867 225.42936707]
[-202.39378357 211.48114014]
[-207.25302124 197.29145813]
[-211.44680786 182.89106750]
[-214.96607971 168.31115723]
[-217.80320740 153.58329773]
[-219.95202637 138.73939514]
[-221.40792847 123.81158447]
[-222.16770935 108.83220673]
[-222.22976685 93.83370209]
[-221.59393311 78.84854889]
[-220.26161194 63.90920258]
[-218.23567200 49.04802322]
[-215.52049255 34.29719543]
[-212.12197876 19.68866348]
[-208.04748535 5.25406837]
[-203.30581665 -8.97532845]
[-197.90727234 -22.96870804]
[-191.86351013 -36.69576645]
[-185.18765259 -50.12677383]
[-177.89413452 -63.23263931]
[-169.99876404 -75.98497772]
[-161.51863098 -88.35617828]
[-152.47212219 -100.31943512]
[-142.87879944 -111.84884644]
[-132.75946045 -122.91944122]
[-122.13601685 -133.50724792]
[-111.03147888 -143.58932495]
[-99.46989441 -153.14384460]
[-87.47630310 -162.15011597]
[-75.07668304 -170.58862305]
[-62.29788208 -178.44110107]
[-49.16757965 -185.69052124]
[-35.71421814 -192.32122803]
[-21.96692657 -198.31881714]
[-7.95548344 -203.67031860]
[6.28976631 -208.36413574]
[20.73797226 -212.39010620]
[35.35784149 -215.73950195]
[32.69204712 -230.50071716]
[30.02625084 -245.26194763]
[27.36045456 -260.02316284]
[24.69465828 -274.78436279]
[22.02886391 -289.54559326]
[19.36306763 -304.30682373]
[16.69727325 -319.06802368]
[14.03147697 -333.82925415]
[11.36568165 -348.59045410]
[-3.60715079 -347.48049927]
[-18.61398125 -347.94174194]
[-33.49038696 -349.96911621]
[-48.07337570 -353.54040527]
[-62.20316696 -358.61651611]
[-75.72494507 -365.14178467]
[-88.49055481 -373.04473877]
[-100.36014557 -382.23880005]
[-111.20364380 -392.62322998]
[-120.90225983 -404.08422852]
[-129.34973145 -416.49624634]
[-136.45349121 -429.72326660]
[-142.13571167 -443.62039185]
[-146.33413696 -458.03533936]
[-149.00276184 -472.81018066]
[-150.11235046 -487.78305054]
[-149.65075684 -502.78988647]
[-147.62301636 -517.66625977]
[-144.05136108 -532.24914551]
[-138.97492981 -546.37878418]
[-132.44932556 -559.90039062]
[-124.54605103 -572.66583252]
[-115.35169983 -584.53521729]
[-104.96701813 -595.37847900]
[-93.50578308 -605.07678223]
[-81.09356689 -613.52392578]
[-67.86636353 -620.62738037]
[-53.96910095 -626.30926514]
[-39.55404663 -630.50732422]
[-24.77913284 -633.17559814]
[-9.80624580 -634.28485107]
[5.20056248 -633.82287598]
[20.07686996 -631.79479980]
[34.65968323 -628.22277832]
[48.78922653 -623.14599609]
[62.31068802 -616.62005615]
[75.07592010 -608.71649170]
[86.94506073 -599.52185059]
[97.78805542 -589.13690186]
[107.48611450 -577.67541504]
[115.93297577 -565.26300049]
[123.03609467 -552.03564453]
[128.71763611 -538.13824463]
[132.91535950 -523.72308350]
[135.58326721 -508.94808960]
[136.69213867 -493.97518921]
[136.22981262 -478.96838379]
[134.20135498 -464.09213257]
[130.62898254 -449.50939941]
[125.55186462 -435.37997437]
[119.02560425 -421.85867310]
[111.12171173 -409.09362793]
[101.92678833 -397.22473145]
[91.54158020 -386.38198853]
[80.07987213 -376.68420410]
[67.66724396 -368.23764038]
[54.43970108 -361.13482666]
[40.54216003 -355.45364380]
[26.12689972 -351.25625610]
[28.79269409 -336.49502563]
[31.45849037 -321.73382568]
[34.12428665 -306.97259521]
[36.79008102 -292.21139526]
[39.45587540 -277.45016479]
[42.12167358 -262.68896484]
[44.78746796 -247.92773438]
[47.45326233 -233.16651917]
[50.11905670 -218.40530396]
[64.98696899 -220.38122559]
[79.93070984 -221.66328430]
[94.91791534 -222.24868774]
[109.91613007 -222.13616943]
[124.89286804 -221.32598877]
[139.81568909 -219.81988525]
[154.65229797 -217.62110901]
[169.37051392 -214.73445129]
[183.93850708 -211.16615295]
[198.32470703 -206.92391968]
[212.49795532 -202.01698303]
[226.42755127 -196.45593262]
[240.08334351 -190.25282288]
[253.43574524 -183.42109680]
[266.45584106 -175.97554016]
[279.11541748 -167.93228149]
[291.38708496 -159.30874634]
[303.24423218 -150.12361145]
[314.66122437 -140.39675903]
[325.61331177 -130.14926147]
[336.07675171 -119.40331268]
[346.02890015 -108.18218994]
[355.44821167 -96.51018524]
[364.31427002 -84.41259003]
[372.60791016 -71.91559601]
[380.31112671 -59.04627228]
[387.40725708 -45.83248901]
[393.88092041 -32.30286407]
[399.71810913 -18.48670197]
[404.90618896 -4.41392565]
[409.43389893 9.88498878]
[413.29144287 24.37907219]
[416.47045898 39.03693390]
[418.96408081 53.82682419]
[420.76690674 68.71672058]
[421.87500000 83.67436218]
[422.28601074 98.66736603]
[421.99899292 113.66326141]
[421.01461792 128.62956238]
[419.33502197 143.53384399]
[416.96377563 158.34385681]
[413.90606689 173.02751160]
[410.16851807 187.55299377]
[405.75921631 201.88887024]
[400.68771362 216.00405884]
[394.96499634 229.86802673]
[388.60342407 243.45071411]
[381.61682129 256.72274780]
[374.02029419 269.65533447]
[365.83029175 282.22048950]
[357.06457520 294.39099121]
[347.74209595 306.14047241]
[337.88308716 317.44351196]
[327.50885010 328.27563477]
[316.64190674 338.61334229]
[305.30575562 348.43429565]
[293.52496338 357.71716309]
[281.32501221 366.44189453]
[268.73239136 374.58956909]
[255.77430725 382.14254761]
[242.47886658 389.08444214]
[228.87484741 395.40026855]
[214.99169922 401.07632446]
[200.85951233 406.10031128]
[186.50889587 410.46136475]
[171.97091675 414.15002441]
[157.27706909 417.15829468]
[142.45915222 419.47967529]
[127.54930115 421.10913086]
[112.57977295 422.04315186]
[97.58300018 422.27969360]
[82.59146881 421.81823730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
