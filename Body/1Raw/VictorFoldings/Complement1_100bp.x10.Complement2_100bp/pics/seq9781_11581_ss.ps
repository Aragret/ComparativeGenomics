%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[172.71054077 218.96423340]
[164.48173523 206.42282104]
[156.25291443 193.88142395]
[147.83830261 181.46392822]
[139.23973083 169.17309570]
[130.64117432 156.88224792]
[122.04261017 144.59141541]
[113.44404602 132.30058289]
[99.80843353 126.30729675]
[98.23751831 110.56427765]
[88.07396698 99.53240204]
[76.52767181 89.95728302]
[64.98136902 80.38215637]
[49.41959763 77.52875519]
[44.56177521 63.44859695]
[33.01547241 53.87347794]
[21.46917152 44.29835510]
[9.92287064 34.72323608]
[-1.97176254 25.58443451]
[-14.19824791 16.89461136]
[-26.42473412 8.20478630]
[-44.79239273 6.89685345]
[-51.46883392 -9.33250427]
[-63.82334137 -17.83933067]
[-76.17784882 -26.34615707]
[-88.53236389 -34.85298538]
[-100.88687134 -43.35981369]
[-113.24137878 -51.86663818]
[-125.59588623 -60.37346649]
[-137.95039368 -68.88029480]
[-150.30490112 -77.38712311]
[-159.70504761 -65.68906403]
[-169.94345093 -54.71717453]
[-180.96420288 -44.53138733]
[-192.70710754 -35.18732834]
[-205.10803223 -26.73603821]
[-218.09924316 -19.22367096]
[-231.60978699 -12.69125748]
[-245.56587219 -7.17447615]
[-259.89126587 -2.70345831]
[-274.50775146 0.69737697]
[-289.33547974 3.00945497]
[-304.29348755 4.22014809]
[-319.30001831 4.32284355]
[-334.27319336 3.31698036]
[-349.13116455 1.20805264]
[-363.79281616 -1.99242139]
[-378.17807007 -6.26696157]
[-392.20837402 -11.59222221]
[-405.80703735 -17.93911743]
[-418.89984131 -25.27298164]
[-431.41528320 -33.55376053]
[-443.28497314 -42.73622894]
[-454.44409180 -52.77022934]
[-464.83169556 -63.60096359]
[-474.39105225 -75.16928101]
[-483.06997681 -87.41198730]
[-490.82101440 -100.26222229]
[-497.60183716 -113.64980316]
[-503.37545776 -127.50160980]
[-508.11032104 -141.74198914]
[-511.78054810 -156.29316711]
[-514.36608887 -171.07565308]
[-515.85284424 -186.00872803]
[-516.23272705 -201.01083374]
[-515.50360107 -216.00001526]
[-513.66949463 -230.89440918]
[-510.74035645 -245.61268616]
[-506.73223877 -260.07443237]
[-501.66702271 -274.20068359]
[-495.57238770 -287.91427612]
[-488.48159790 -301.14031982]
[-480.43341064 -313.80654907]
[-471.47174072 -325.84381104]
[-461.64556885 -337.18637085]
[-451.00854492 -347.77227783]
[-439.61877441 -357.54367065]
[-427.53845215 -366.44720459]
[-414.83358765 -374.43429565]
[-401.57351685 -381.46124268]
[-387.83071899 -387.48971558]
[-373.68023682 -392.48678589]
[-359.19934082 -396.42517090]
[-344.46713257 -399.28332520]
[-329.56405640 -401.04565430]
[-314.57153320 -401.70254517]
[-299.57144165 -401.25039673]
[-284.64569092 -399.69168091]
[-269.87582397 -397.03491211]
[-255.34251404 -393.29461670]
[-241.12512207 -388.49118042]
[-227.30130005 -382.65087891]
[-213.94654846 -375.80560303]
[-201.13381958 -367.99273682]
[-188.93307495 -359.25494385]
[-177.41096497 -349.63992310]
[-166.63041687 -339.20025635]
[-156.65029907 -327.99291992]
[-147.52514648 -316.07910156]
[-139.30476379 -303.52392578]
[-132.03408813 -290.39593506]
[-125.75279236 -276.76681519]
[-120.49520874 -262.71102905]
[-116.29003906 -248.30534363]
[-113.16026306 -233.62843323]
[-111.12295532 -218.76046753]
[-110.18926239 -203.78262329]
[-110.36427307 -188.77674866]
[-111.64703369 -173.82476807]
[-114.03054047 -159.00834656]
[-117.50177765 -144.40843201]
[-122.04177856 -130.10473633]
[-127.62574768 -116.17539215]
[-134.22319031 -102.69648743]
[-141.79808044 -89.74163055]
[-129.44357300 -81.23480225]
[-117.08905792 -72.72797394]
[-104.73455048 -64.22114563]
[-92.38004303 -55.71432114]
[-80.02553558 -47.20749283]
[-67.67102814 -38.70066833]
[-55.31651688 -30.19384003]
[-42.96200562 -21.68701363]
[-31.01322556 -23.57200432]
[-20.65085983 -16.58593559]
[-17.73490906 -4.02169943]
[-5.50842381 4.66812468]
[6.71806192 13.35794926]
[6.82943296 -1.64163744]
[18.53106689 -11.02629375]
[33.19695282 -7.87800026]
[40.01594925 5.48243809]
[33.96134186 19.20620346]
[19.49798965 23.17693520]
[31.04429245 32.75205612]
[42.59059525 42.32717514]
[54.13689423 51.90229416]
[68.87279510 54.07082367]
[74.55648804 68.83586121]
[86.10279083 78.41098022]
[97.64909363 87.98609924]
[91.91036987 74.12727356]
[90.67247772 59.17843628]
[94.05340576 44.56442642]
[101.73089600 31.67814827]
[112.97318268 21.74784660]
[126.70873260 15.72000980]
[141.62834167 14.16917610]
[156.30998230 17.24316025]
[169.35429382 24.64896774]
[179.51797485 35.68072510]
[185.83227539 49.28695679]
[187.69537354 64.17080688]
[184.92968750 78.91362762]
[177.79881287 92.11024475]
[166.98242188 102.50283051]
[153.51147461 109.10083771]
[138.66993713 111.27537537]
[123.87239838 108.81919098]
[110.52835846 101.96571350]
[124.77899170 108.83811188]
[125.73488617 123.70201111]
[134.33345032 135.99285889]
[142.93200684 148.28369141]
[151.53057861 160.57452393]
[160.12913513 172.86537170]
[165.94851685 176.00328064]
[168.87091064 180.87734985]
[168.79432678 185.65261841]
[177.02313232 198.19401550]
[185.25193787 210.73541260]
[198.90480042 204.45393372]
[213.34140015 200.27755737]
[228.23922729 198.29959106]
[243.26545715 198.56422424]
[258.08441162 201.06555176]
[272.36499023 205.74768066]
[285.78820801 212.50602722]
[298.05413818 221.18959045]
[308.88879395 231.60437012]
[318.05010986 243.51773071]
[325.33343506 256.66348267]
[330.57601929 270.74798584]
[333.66076660 285.45654297]
[334.51876831 300.46060181]
[333.13085938 315.42492676]
[329.52801514 330.01525879]
[323.79074097 343.90557861]
[316.04721069 356.78561401]
[306.47042847 368.36764526]
[295.27435303 378.39285278]
[282.70907593 386.63732910]
[269.05529785 392.91687012]
[254.61811829 397.09118652]
[239.72000122 399.06704712]
[224.69380188 398.80026245]
[209.87522888 396.29684448]
[195.59530640 391.61267090]
[182.17304993 384.85241699]
[169.90834045 376.16711426]
[159.07518005 365.75076294]
[149.91555786 353.83612061]
[142.63410950 340.68930054]
[137.39352417 326.60406494]
[134.31086731 311.89508057]
[133.45501709 296.89089966]
[134.84506226 281.92675781]
[138.44998169 267.33697510]
[144.18922424 253.44744873]
[151.93458557 240.56849670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[10 160]
[11 141]
[12 140]
[13 139]
[15 137]
[16 136]
[17 135]
[18 134]
[19 128]
[20 127]
[21 126]
[23 123]
[24 122]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[31 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
