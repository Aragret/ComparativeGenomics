%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[44.77871323 552.50030518]
[33.34506226 562.21966553]
[21.24717331 571.09851074]
[8.54669476 579.09167480]
[-4.69165516 586.15844727]
[-18.40041542 592.26281738]
[-32.50973129 597.37365723]
[-46.94769669 601.46490479]
[-61.64074707 604.51574707]
[-76.51400757 606.51062012]
[-91.49167633 607.43933105]
[-106.49744415 607.29718018]
[-121.45484161 606.08489990]
[-136.28764343 603.80865479]
[-150.92025757 600.48004150]
[-165.27813721 596.11602783]
[-179.28810120 590.73883057]
[-192.87876892 584.37591553]
[-205.98088074 577.05963135]
[-218.52766418 568.82727051]
[-230.45520020 559.72082520]
[-241.70268250 549.78668213]
[-252.21281433 539.07543945]
[-261.93203735 527.64172363]
[-270.81079102 515.54376221]
[-278.80389404 502.84323120]
[-285.87057495 489.60482788]
[-291.97482300 475.89602661]
[-297.08554077 461.78665161]
[-301.17666626 447.34866333]
[-304.22738647 432.65557861]
[-306.22213745 417.78231812]
[-307.15075684 402.80462646]
[-307.00851440 387.79885864]
[-305.79611206 372.84149170]
[-303.51974487 358.00869751]
[-300.19100952 343.37609863]
[-295.82690430 329.01824951]
[-290.44961548 315.00833130]
[-284.08654785 301.41772461]
[-276.77017212 288.31567383]
[-268.53775024 275.76895142]
[-259.43118286 263.84149170]
[-249.49696350 252.59408569]
[-238.78564453 242.08403015]
[-227.35185242 232.36489868]
[-215.25382996 223.48622131]
[-202.55322266 215.49322510]
[-189.31477356 208.42665100]
[-175.60591125 202.32249451]
[-161.49652100 197.21188354]
[-147.05848694 193.12086487]
[-132.36538696 190.07025146]
[-117.49210358 188.07562256]
[-102.51441956 187.14712524]
[-87.50865173 187.28950500]
[-72.55127716 188.50201416]
[-57.71850967 190.77848816]
[-43.08594131 194.10731506]
[-28.72812843 198.47155762]
[-14.71824455 203.84895325]
[-1.12767589 210.21209717]
[11.97432041 217.52859497]
[20.20312881 204.98718262]
[28.43193626 192.44578552]
[29.47307205 185.12882996]
[36.87778473 179.78018188]
[45.29240417 167.36268616]
[53.70702362 154.94519043]
[62.12163925 142.52769470]
[53.02521515 132.19851685]
[46.67245865 119.98871613]
[43.43442535 106.61141968]
[43.50023270 92.84796906]
[46.86604309 79.50225067]
[53.33526230 67.35375214]
[62.53004456 57.11203384]
[73.91334534 49.37528610]
[86.82030487 44.59539032]
[100.49704742 43.05153275]
[114.14476013 44.83387756]
[126.96631622 49.83833313]
[135.74691772 37.67687607]
[144.52752686 25.51542091]
[153.30813599 13.35396576]
[162.08872986 1.19251001]
[170.86933899 -10.96894550]
[177.84779358 -24.24679184]
[182.88470459 -38.37582016]
[187.92161560 -52.50485229]
[192.95854187 -66.63388062]
[197.99545288 -80.76290894]
[184.57472229 -87.50558472]
[172.08433533 -95.84645081]
[160.71365356 -105.65904999]
[150.63504028 -116.79463196]
[142.00128174 -129.08438110]
[134.94328308 -142.34197998]
[129.56802368 -156.36647034]
[125.95698547 -170.94522095]
[124.16493225 -185.85723877]
[124.21901703 -200.87644958]
[126.11842346 -215.77516174]
[129.83436584 -230.32754517]
[135.31048584 -244.31294250]
[142.46379089 -257.51937866]
[151.18583679 -269.74661255]
[161.34439087 -280.80932617]
[172.78544617 -290.53979492]
[185.33558655 -298.79046631]
[198.80451965 -305.43630981]
[212.98808289 -310.37655640]
[227.67126465 -313.53634644]
[242.63143921 -314.86773682]
[257.64184570 -314.35055542]
[272.47491455 -311.99261475]
[286.90576172 -307.82974243]
[300.71566772 -301.92495728]
[313.69525146 -294.36782837]
[325.64773560 -285.27288818]
[336.39193726 -274.77804565]
[345.76495361 -263.04238892]
[353.62475586 -250.24382019]
[359.85211182 -236.57635498]
[364.35266113 -222.24719238]
[367.05816650 -207.47357178]
[367.92761230 -192.47946167]
[366.94781494 -177.49214172]
[364.13363647 -162.73883057]
[359.52774048 -148.44319153]
[353.19995117 -134.82194519]
[345.24618530 -122.08156586]
[335.78701782 -110.41520691]
[324.96585083 -99.99972534]
[312.94674683 -90.99302673]
[299.91189575 -83.53163910]
[286.05889893 -77.72867584]
[271.59780884 -73.67211914]
[256.74777222 -71.42344666]
[241.73397827 -71.01676178]
[226.78399658 -72.45822906]
[212.12448120 -75.72599030]
[207.08757019 -61.59696579]
[202.05064392 -47.46793365]
[197.01373291 -33.33890533]
[191.97682190 -19.20987511]
[202.95581055 -29.43051910]
[216.43339539 -36.01496887]
[231.24359131 -38.39360809]
[246.10519409 -36.36066055]
[259.73251343 -30.09199333]
[270.94665527 -20.12991333]
[278.77746582 -7.33623552]
[282.54754639 7.18225622]
[281.93069458 22.16956711]
[276.98031616 36.32914734]
[268.12463379 48.43604660]
[256.12979126 57.44290161]
[242.03341675 62.57052994]
[227.05502319 63.37533569]
[212.49038696 59.78770065]
[199.59947205 52.11798477]
[189.49749756 41.02970123]
[183.05838013 27.48209381]
[180.83915710 12.64716721]
[183.03079224 -2.18834257]
[174.25018311 9.97311306]
[165.46958923 22.13456917]
[156.68898010 34.29602432]
[147.90837097 46.45748138]
[139.12777710 58.61893463]
[149.17730713 71.27774048]
[155.26583862 86.24999237]
[156.90296936 102.32973480]
[153.95683289 118.22183228]
[146.66473389 132.64624023]
[135.61401367 144.44116211]
[121.69476318 152.65655518]
[106.02809143 156.63070679]
[89.87589264 156.04353333]
[74.53913879 150.94232178]
[66.12451935 163.35981750]
[57.70989990 175.77731323]
[49.29528046 188.19480896]
[40.97333527 200.67459106]
[32.74452972 213.21600342]
[24.51572037 225.75740051]
[36.44338608 234.86366272]
[47.69102478 244.79763794]
[58.20132065 255.50871277]
[67.92071533 266.94229126]
[76.79967499 279.04010010]
[84.79296112 291.74050903]
[91.85984039 304.97882080]
[97.96430206 318.68753052]
[103.07523346 332.79681396]
[107.16659546 347.23474121]
[110.21753693 361.92776489]
[112.21251678 376.80102539]
[113.14135742 391.77868652]
[112.99932861 406.78445435]
[111.78716278 421.74185181]
[109.51103210 436.57467651]
[106.18252563 451.20730591]
[101.81862640 465.56521606]
[96.44155121 479.57522583]
[90.07871246 493.16595459]
[82.76252747 506.26812744]
[74.53028107 518.81494141]
[65.42392731 530.74255371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 187]
[64 186]
[65 185]
[67 184]
[68 183]
[69 182]
[70 181]
[82 171]
[83 170]
[84 169]
[85 168]
[86 167]
[87 166]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
