%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[111.85675049 569.15679932]
[100.02783203 559.92462158]
[88.81472015 549.95361328]
[78.26350403 539.28460693]
[68.41752625 527.96148682]
[59.31725693 516.03082275]
[51.00008774 503.54162598]
[43.50019455 490.54519653]
[36.84840393 477.09494019]
[31.07203865 463.24615479]
[26.19484329 449.05569458]
[22.23685455 434.58193970]
[19.21434021 419.88430786]
[17.13971901 405.02322388]
[16.02151489 390.05975342]
[15.86432648 375.05538940]
[16.66879654 360.07180786]
[18.43161964 345.17050171]
[21.14555168 330.41281128]
[24.79944229 315.85928345]
[29.37827492 301.56979370]
[34.86323547 287.60299683]
[41.23178482 274.01635742]
[48.45775223 260.86563110]
[56.51144409 248.20492554]
[65.35976410 236.08622742]
[74.96635437 224.55934143]
[85.29174042 213.67164612]
[96.29349518 203.46786499]
[107.92640686 193.98992920]
[120.14266968 185.27680969]
[132.89208984 177.36427307]
[125.81497955 164.13874817]
[112.98816681 156.56761169]
[113.29914093 140.74945068]
[106.22203827 127.52392578]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.35630798 79.66001129]
[72.88856506 66.65106201]
[65.42082977 53.64210510]
[57.95308685 40.63315201]
[49.53846741 28.21565819]
[40.22358322 16.45840645]
[30.90870285 4.70115566]
[21.59381866 -7.05609560]
[12.27893639 -18.81334686]
[-0.26360983 -10.56821728]
[-13.48578644 -3.46387577]
[-27.28410912 2.44407701]
[-41.55058670 7.10940170]
[-56.17356110 10.49558544]
[-71.03858948 12.57612705]
[-86.02931976 13.33474064]
[-101.02844238 12.76549149]
[-115.91855621 10.87283421]
[-130.58312988 7.67158127]
[-144.90737915 3.18678713]
[-158.77920532 -2.54644775]
[-172.09004211 -9.48325157]
[-184.73570251 -17.56933403]
[-196.61723328 -26.74141121]
[-207.64163208 -36.92769241]
[-217.72261047 -48.04846191]
[-226.78128052 -60.01667786]
[-234.74673462 -72.73867035]
[-241.55662537 -86.11487579]
[-247.15768433 -100.04060364]
[-251.50605774 -114.40686035]
[-254.56770325 -129.10121155]
[-256.31866455 -144.00865173]
[-256.74523926 -159.01249695]
[-255.84410095 -173.99534607]
[-253.62228394 -188.83992004]
[-250.09718323 -203.43002319]
[-245.29640198 -217.65148926]
[-239.25749207 -231.39300537]
[-232.02772522 -244.54701233]
[-223.66368103 -257.01058960]
[-214.23083496 -268.68615723]
[-203.80300903 -279.48236084]
[-192.46179199 -289.31469727]
[-180.29598999 -298.10620117]
[-167.40077209 -305.78805542]
[-153.87710571 -312.30020142]
[-139.83079529 -317.59161377]
[-125.37180328 -321.62088013]
[-110.61327362 -324.35647583]
[-95.67073059 -325.77700806]
[-80.66110992 -325.87136841]
[-65.70188141 -324.63876343]
[-50.91014099 -322.08886719]
[-36.40163803 -318.24166870]
[-22.28993607 -313.12722778]
[-8.68547153 -306.78561401]
[4.30527544 -299.26641846]
[16.58063507 -290.62854004]
[28.04453087 -280.93954468]
[38.60724640 -270.27526855]
[48.18610382 -258.71917725]
[56.70614624 -246.36172485]
[64.10067749 -233.29962158]
[70.31183624 -219.63510132]
[75.29100800 -205.47511292]
[78.99921417 -190.93045044]
[81.40744781 -176.11499023]
[82.49684906 -161.14465332]
[82.25889587 -146.13662720]
[80.69544983 -131.20835876]
[77.81874847 -116.47668457]
[73.65130615 -102.05690765]
[68.22573090 -88.06187439]
[61.58450317 -74.60112762]
[53.77958679 -61.78001785]
[44.87207031 -49.69888306]
[34.93167114 -38.45228195]
[24.03618813 -28.12822914]
[33.35107040 -16.37097931]
[42.66595459 -4.61372709]
[51.98083496 7.14352417]
[61.29571915 18.90077591]
[60.71083069 3.91218305]
[67.61098480 -9.40651894]
[80.19250488 -17.57385445]
[95.16661072 -18.45489883]
[108.61910248 -11.81935310]
[117.03353119 0.59826976]
[118.21038818 15.55203247]
[111.84204865 29.13305664]
[99.59317780 37.79129410]
[84.66559601 39.26350784]
[70.96203613 33.16541290]
[78.42977905 46.17436600]
[85.89752197 59.18331909]
[93.36526489 72.19226837]
[97.65950775 74.28237152]
[100.68634796 79.09228516]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[119.44756317 120.44682312]
[126.52467346 133.67234802]
[139.85768127 142.18946838]
[139.04051208 157.06164551]
[146.11761475 170.28717041]
[159.77404785 164.06967163]
[173.80079651 158.73992920]
[188.14019775 154.31982422]
[202.73332214 150.82752991]
[217.52023315 148.27740479]
[232.44013977 146.67993164]
[247.43174744 146.04165649]
[262.43344116 146.36520386]
[277.38360596 147.64926147]
[292.22076416 149.88854980]
[306.88394165 153.07385254]
[321.31295776 157.19209290]
[335.44842529 162.22634888]
[349.23233032 168.15591431]
[362.60800171 174.95643616]
[375.52047729 182.59999084]
[387.91668701 191.05513000]
[399.74569702 200.28713989]
[410.95892334 210.25805664]
[421.51025391 220.92694092]
[431.35635376 232.24992371]
[440.45675659 244.18048096]
[448.77407837 256.66961670]
[456.27410889 269.66595459]
[462.92605591 283.11611938]
[468.70257568 296.96487427]
[473.57992554 311.15524292]
[477.53808594 325.62896729]
[480.56076050 340.32656860]
[482.63552856 355.18762207]
[483.75390625 370.15106201]
[483.91125488 385.15542603]
[483.10696411 400.13906860]
[481.34429932 415.04034424]
[478.63052368 429.79809570]
[474.97680664 444.35165405]
[470.39813232 458.64120483]
[464.91333008 472.60806274]
[458.54492188 486.19479370]
[451.31909180 499.34555054]
[443.26556396 512.00634766]
[434.41735840 524.12518311]
[424.81091309 535.65216064]
[414.48562622 546.53997803]
[403.48400879 556.74389648]
[391.85119629 566.22192383]
[379.63504028 574.93518066]
[366.88571167 582.84783936]
[353.65560913 589.92742920]
[339.99908447 596.14477539]
[325.97229004 601.47436523]
[311.63284302 605.89428711]
[297.03967285 609.38641357]
[282.25274658 611.93640137]
[267.33279419 613.53369141]
[252.34118652 614.17181396]
[237.33949280 613.84808350]
[222.38935852 612.56384277]
[207.55223083 610.32440186]
[192.88906860 607.13897705]
[178.46011353 603.02056885]
[164.32469177 597.98614502]
[150.54084778 592.05639648]
[137.16526794 585.25573730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 146]
[33 145]
[35 143]
[36 142]
[37 141]
[39 139]
[40 136]
[41 135]
[42 134]
[43 133]
[44 122]
[45 121]
[46 120]
[47 119]
[48 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
