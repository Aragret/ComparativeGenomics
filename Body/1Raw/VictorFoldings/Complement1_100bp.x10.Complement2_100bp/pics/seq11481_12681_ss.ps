%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[79.14460754 398.15255737]
[64.08691406 400.42977905]
[49.40652084 396.37936401]
[37.64689255 386.70306396]
[30.84545326 373.07733154]
[30.18059731 357.86294556]
[35.76751328 343.69586182]
[46.63823318 333.03060913]
[60.90934372 327.71502686]
[61.80215836 312.74163818]
[62.69497299 297.76821899]
[63.58779144 282.79483032]
[64.48060608 267.82141113]
[65.37342072 252.84800720]
[62.63362122 245.98394775]
[66.39263153 237.65882874]
[55.70516968 248.18394470]
[40.88992691 250.53099060]
[27.47262764 243.82456970]
[20.45759010 230.56602478]
[22.46125031 215.70043945]
[32.73629379 204.77233887]
[47.45038223 201.85762024]
[61.11552429 208.04339600]
[68.63520813 221.02368164]
[71.52048492 206.30378723]
[74.40575409 191.58389282]
[77.29103088 176.86399841]
[80.17630005 162.14411926]
[83.06156921 147.42422485]
[85.94684601 132.70433044]
[88.83211517 117.98443604]
[80.55987549 108.38112640]
[79.25638580 95.77340698]
[85.38890839 84.68080902]
[96.75910187 79.07971954]
[99.86321259 64.40441132]
[102.96732330 49.72911072]
[89.83739471 56.98203278]
[75.38694000 52.95903397]
[67.89385223 39.96466446]
[71.65049744 25.44269562]
[84.50491333 17.71196747]
[99.09349060 21.20099449]
[107.05908203 33.91016388]
[111.46007538 19.57031822]
[115.86107635 5.23047066]
[118.63668823 -9.51049232]
[119.75233459 -24.46894455]
[120.86798096 -39.42739868]
[121.98363495 -54.38585281]
[107.10468292 -56.31708908]
[92.35339355 -59.05797577]
[77.77379608 -62.60032654]
[63.40940475 -66.93357849]
[49.30308151 -72.04479218]
[35.49692535 -77.91871643]
[22.03214264 -84.53781891]
[8.94891739 -91.88234711]
[-3.71370530 -99.93038177]
[-15.91793442 -108.65790558]
[-27.62734985 -118.03887177]
[-38.80700302 -128.04528809]
[-49.42353058 -138.64727783]
[-59.44524765 -149.81320190]
[-68.84224701 -161.50975037]
[-77.58647919 -173.70201111]
[-85.65185547 -186.35360718]
[-93.01430511 -199.42675781]
[-99.65184784 -212.88246155]
[-105.54467773 -226.68054199]
[-110.67521667 -240.77986145]
[-115.02814484 -255.13830566]
[-118.59046936 -269.71304321]
[-121.35155487 -284.46054077]
[-123.30317688 -299.33685303]
[-124.43950653 -314.29751587]
[-124.75714111 -329.29791260]
[-124.25514221 -344.29327393]
[-122.93500519 -359.23883057]
[-120.80066681 -374.09002686]
[-117.85850525 -388.80249023]
[-114.11729431 -403.33233643]
[-109.58819580 -417.63616943]
[-104.28473663 -431.67135620]
[-98.22274017 -445.39596558]
[-91.42030334 -458.76907349]
[-83.89771271 -471.75073242]
[-75.67742920 -484.30221558]
[-66.78398132 -496.38607788]
[-57.24391937 -507.96621704]
[-47.08570480 -519.00811768]
[-36.33965683 -529.47882080]
[-25.03784752 -539.34704590]
[-13.21400642 -548.58337402]
[-0.90341830 -557.16021729]
[11.85717583 -565.05200195]
[25.02969360 -572.23516846]
[38.57482147 -578.68823242]
[52.45213699 -584.39202881]
[66.62022400 -589.32946777]
[81.03679657 -593.48577881]
[95.65883636 -596.84863281]
[110.44269562 -599.40802002]
[125.34426880 -601.15618896]
[140.31906128 -602.08801270]
[155.32240295 -602.20068359]
[170.30950928 -601.49389648]
[185.23565674 -599.96966553]
[200.05627441 -597.63262939]
[214.72717285 -594.48974609]
[229.20454407 -590.55035400]
[243.44519043 -585.82629395]
[257.40658569 -580.33160400]
[271.04711914 -574.08264160]
[284.32601929 -567.09814453]
[297.20370483 -559.39886475]
[309.64172363 -551.00787354]
[321.60293579 -541.95019531]
[333.05166626 -532.25280762]
[343.95376587 -521.94470215]
[354.27667236 -511.05657959]
[363.98956299 -499.62100220]
[373.06347656 -487.67208862]
[381.47134399 -475.24545288]
[389.18804932 -462.37823486]
[396.19055176 -449.10882568]
[402.45800781 -435.47677612]
[407.97164917 -421.52282715]
[412.71502686 -407.28860474]
[416.67404175 -392.81661987]
[419.83682251 -378.14999390]
[422.19396973 -363.33255005]
[423.73840332 -348.40847778]
[424.46557617 -333.42233276]
[424.37322998 -318.41885376]
[423.46173096 -303.44281006]
[421.73373413 -288.53890991]
[419.19445801 -273.75158691]
[415.85140991 -259.12500000]
[411.71463013 -244.70278931]
[406.79641724 -230.52801514]
[401.11148071 -216.64297485]
[394.67675781 -203.08911133]
[387.51147461 -189.90686035]
[379.63702393 -177.13557434]
[371.07687378 -164.81336975]
[361.85659790 -152.97700500]
[352.00369263 -141.66181946]
[341.54760742 -130.90158081]
[330.51947021 -120.72840881]
[318.95227051 -111.17264557]
[306.88049316 -102.26281738]
[294.34017944 -94.02552032]
[281.36871338 -86.48532867]
[268.00488281 -79.66475677]
[254.28848267 -73.58414459]
[240.26051331 -68.26165771]
[225.96281433 -63.71316528]
[211.43806458 -59.95225143]
[196.72961426 -56.99013519]
[181.88133240 -54.83565903]
[166.93757629 -53.49525070]
[151.94290161 -52.97291183]
[136.94209290 -53.27020264]
[135.82643127 -38.31174850]
[134.71078491 -23.35329628]
[133.59513855 -8.39484310]
[141.96701050 -20.84119606]
[154.22785950 -29.48248100]
[168.76454163 -33.18178558]
[183.66452026 -31.45240021]
[196.96743774 -24.52186203]
[206.92306519 -13.30199718]
[212.22157288 0.73102653]
[212.16586304 15.73092270]
[206.76324463 29.72419930]
[196.72454834 40.86979675]
[183.37051392 47.70132446]
[168.45809937 49.31997299]
[153.94929504 45.51278305]
[141.75299072 36.78065491]
[133.47380066 24.27245522]
[130.20092773 9.63146877]
[125.79992676 23.97131538]
[121.39892578 38.31116486]
[117.64262390 52.83322144]
[114.53851318 67.50852203]
[111.43440247 82.18383026]
[120.75035858 95.80663300]
[117.45539093 111.97793579]
[103.55200958 120.86971283]
[100.66674042 135.58959961]
[97.78146362 150.30949402]
[94.89619446 165.02938843]
[92.01091766 179.74928284]
[89.12564850 194.46916199]
[86.24037170 209.18905640]
[83.35510254 223.90895081]
[81.35108948 238.77447510]
[80.34682465 253.74082947]
[79.45401001 268.71423340]
[78.56119537 283.68762207]
[77.66838074 298.66104126]
[76.77556610 313.63446045]
[75.88275146 328.60784912]
[89.42108154 335.58160400]
[98.94741821 347.46307373]
[102.81125641 362.19366455]
[100.34317017 377.22125244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 206]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[16 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[36 189]
[37 188]
[38 187]
[45 186]
[46 185]
[47 184]
[48 168]
[49 167]
[50 166]
[51 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
