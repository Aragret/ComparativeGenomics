%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[104.79209137 187.65335083]
[112.22425842 200.76287842]
[116.43225098 215.23316956]
[117.18913269 230.28388977]
[114.45409393 245.10334778]
[108.37461853 258.89233398]
[99.27856445 270.90728760]
[87.65648651 280.50018311]
[74.13513184 287.15374756]
[59.44370270 290.50912476]
[44.37448120 290.38537598]
[29.74013710 286.78918457]
[16.32987785 279.91445923]
[4.86690235 270.13198853]
[-4.03060389 257.96929932]
[-9.88281059 244.08230591]
[-12.37411499 229.21994019]
[-11.37016487 214.18368530]
[-6.92510128 199.78445435]
[0.72135866 186.79875183]
[11.15685081 175.92689514]
[23.81860352 167.75518799]
[38.02378082 162.72431946]
[53.00632095 161.10560608]
[67.95822906 162.98632812]
[73.20494843 148.93386841]
[78.45166779 134.88139343]
[77.84635925 127.51556396]
[83.88252258 120.65972900]
[89.33788300 106.68693542]
[94.47984314 92.59579468]
[99.30583954 78.39333344]
[104.13183594 64.19087982]
[108.95783234 49.98842621]
[113.67797089 35.75043488]
[118.29197693 21.47770119]
[122.90599060 7.20496893]
[108.82482147 2.03005290]
[94.95909882 -3.69712234]
[81.33045959 -9.96761513]
[67.96018219 -16.77163315]
[54.86914825 -24.09855461]
[42.07780075 -31.93693924]
[29.60610199 -40.27454758]
[17.47353363 -49.09836197]
[5.69903564 -58.39460373]
[-5.69900703 -68.14875793]
[-16.70279694 -78.34559631]
[-27.29515457 -88.96920013]
[-37.45953751 -100.00297546]
[-47.18008041 -111.42969513]
[-56.44160461 -123.23152161]
[-65.22964478 -135.39002991]
[-73.53047943 -147.88623047]
[-81.33116150 -160.70060730]
[-88.61949158 -173.81317139]
[-95.38410187 -187.20343018]
[-101.61442566 -200.85047913]
[-107.30073547 -214.73300171]
[-112.43415833 -228.82934570]
[-117.00666809 -243.11749268]
[-121.01113892 -257.57513428]
[-124.44130707 -272.17968750]
[-127.29181671 -286.90835571]
[-129.55822754 -301.73812866]
[-131.23698425 -316.64584351]
[-132.32548523 -331.60827637]
[-132.82202148 -346.60202026]
[-132.72581482 -361.60366821]
[-132.03701782 -376.58981323]
[-130.75671387 -391.53704834]
[-128.88688660 -406.42202759]
[-126.43046570 -421.22152710]
[-123.39128113 -435.91241455]
[-119.77408600 -450.47177124]
[-115.58452606 -464.87686157]
[-110.82913208 -479.10519409]
[-105.51534271 -493.13452148]
[-99.65145111 -506.94299316]
[-93.24660492 -520.50903320]
[-86.31081390 -533.81140137]
[-78.85491180 -546.82940674]
[-70.89052582 -559.54266357]
[-62.43009949 -571.93139648]
[-53.48683929 -583.97619629]
[-44.07471848 -595.65826416]
[-34.20841980 -606.95935059]
[-23.90335846 -617.86187744]
[-13.17561913 -628.34875488]
[-2.04195476 -638.40362549]
[9.48025227 -648.01080322]
[21.37301064 -657.15527344]
[33.61775208 -665.82275391]
[46.19535446 -673.99969482]
[59.08618546 -681.67340088]
[72.27011108 -688.83178711]
[85.72655487 -695.46380615]
[99.43449402 -701.55895996]
[113.37253571 -707.10784912]
[127.51891327 -712.10174561]
[141.85153198 -716.53283691]
[156.34802246 -720.39428711]
[170.98576355 -723.67999268]
[185.74186707 -726.38482666]
[200.59330750 -728.50457764]
[215.51690674 -730.03601074]
[230.48934937 -730.97662354]
[245.48727417 -731.32495117]
[260.48724365 -731.08056641]
[275.46585083 -730.24371338]
[290.39971924 -728.81579590]
[305.26547241 -726.79895020]
[320.03997803 -724.19647217]
[334.70013428 -721.01226807]
[349.22302246 -717.25140381]
[363.58602905 -712.91973877]
[377.76666260 -708.02398682]
[391.74282837 -702.57183838]
[405.49267578 -696.57177734]
[418.99475098 -690.03320312]
[432.22796631 -682.96630859]
[445.17166138 -675.38214111]
[457.80563354 -667.29254150]
[470.11013794 -658.71014404]
[482.06600952 -649.64831543]
[493.65451050 -640.12121582]
[504.85757446 -630.14373779]
[515.65771484 -619.73144531]
[526.03808594 -608.90063477]
[535.98248291 -597.66815186]
[545.47534180 -586.05163574]
[554.50183105 -574.06909180]
[563.04791260 -561.73931885]
[571.10021973 -549.08154297]
[578.64617920 -536.11547852]
[585.67395020 -522.86151123]
[592.17266846 -509.34017944]
[598.13214111 -495.57269287]
[603.54302979 -481.58050537]
[608.39685059 -467.38546753]
[612.68615723 -453.00976562]
[616.40417480 -438.47583008]
[619.54510498 -423.80633545]
[622.10400391 -409.02423096]
[624.07696533 -394.15255737]
[625.46081543 -379.21456909]
[626.25341797 -364.23355103]
[626.45361328 -349.23294067]
[626.06097412 -334.23611450]
[625.07623291 -319.26651001]
[623.50079346 -304.34747314]
[621.33721924 -289.50234985]
[618.58880615 -274.75430298]
[615.25994873 -260.12631226]
[611.35577393 -245.64129639]
[606.88238525 -231.32180786]
[601.84680176 -217.19021606]
[596.25683594 -203.26861572]
[590.12121582 -189.57872009]
[583.44958496 -176.14190674]
[576.25225830 -162.97915649]
[568.54058838 -150.11102295]
[560.32653809 -137.55760193]
[551.62298584 -125.33848572]
[542.44348145 -113.47275543]
[532.80230713 -101.97894287]
[522.71466064 -90.87499237]
[512.19616699 -80.17824554]
[501.26330566 -69.90539551]
[489.93313599 -60.07248688]
[478.22335815 -50.69487000]
[466.15222168 -41.78718948]
[453.73861694 -33.36335373]
[441.00189209 -25.43651390]
[427.96194458 -18.01904869]
[414.63912964 -11.12253761]
[401.05426025 -4.75775003]
[387.22857666 1.06537688]
[373.18359375 6.33775043]
[358.94131470 11.05113888]
[344.52392578 15.19818211]
[329.95397949 18.77240562]
[315.25418091 21.76822853]
[300.44750977 24.18097305]
[285.55706787 26.00687218]
[270.60610962 27.24307442]
[255.61801147 27.88765144]
[240.61613464 27.93959427]
[225.62391663 27.39882278]
[210.66477966 26.26618195]
[195.76205444 24.54343987]
[180.93902588 22.23328590]
[166.21884155 19.33932877]
[151.62448120 15.86608505]
[137.17872620 11.81897831]
[132.56471252 26.09171104]
[127.95070648 40.36444473]
[128.88430786 47.69589615]
[123.16029358 54.81442261]
[118.33429718 69.01687622]
[113.50829315 83.21932983]
[108.68229675 97.42179108]
[109.87944031 101.08774567]
[109.45487976 105.26358032]
[107.21711731 109.21319580]
[103.31068420 112.14228821]
[97.85532379 126.11508942]
[92.50413513 140.12811279]
[87.25742340 154.18058777]
[82.01070404 168.23304749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[27 208]
[29 207]
[30 206]
[31 202]
[32 201]
[33 200]
[34 199]
[35 197]
[36 196]
[37 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
