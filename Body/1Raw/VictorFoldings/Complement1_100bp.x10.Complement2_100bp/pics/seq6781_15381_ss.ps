%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[95.55760193 441.65942383]
[98.90484619 426.99981689]
[104.68159485 413.11685181]
[112.72161865 400.40991211]
[122.79360962 389.24465942]
[134.60775757 379.94229126]
[147.82415771 372.77050781]
[142.99816895 358.56805420]
[138.17216492 344.36560059]
[133.34617615 330.16314697]
[128.52017212 315.96066284]
[117.09947968 306.39944458]
[119.98541260 290.84368896]
[115.15941620 276.64123535]
[110.33341980 262.43878174]
[98.91271973 252.87754822]
[101.79866028 237.32179260]
[96.97266388 223.11932373]
[92.14666748 208.91687012]
[86.42932129 222.78453064]
[73.71349335 230.74113464]
[58.74185562 229.81907654]
[47.09847260 220.36224365]
[43.12603378 205.89781189]
[48.30615997 191.82066345]
[60.70679092 183.38121033]
[75.70279694 183.72717285]
[87.70172119 192.73046875]
[84.59761047 178.05516052]
[81.49349976 163.37985229]
[77.79415894 177.91653442]
[71.09609985 191.33801270]
[61.70403290 203.03369141]
[50.04523849 212.47151184]
[36.65011215 219.22212219]
[22.12804604 222.97839355]
[7.13969612 223.56945801]
[-7.63306856 220.96841431]
[-21.51818466 215.29359436]
[-33.88397598 206.80317688]
[-44.16787338 195.88340759]
[-51.90203857 183.03106689]
[-56.73461151 168.83084106]
[-58.44574356 153.92875671]
[-56.95758820 139.00276184]
[-52.33785248 124.73188019]
[-44.79669571 111.76535034]
[-34.67719650 100.69305420]
[-22.43972206 92.01871490]
[-8.64099693 86.13694763]
[6.09123135 83.31533813]
[21.08674240 83.68225861]
[35.66334152 87.22100830]
[49.15789413 93.77059937]
[60.95648193 103.03306580]
[70.52234650 114.58703613]
[77.42031860 127.90686798]
[81.33724976 142.39088440]
[84.22251892 127.67099762]
[72.36006927 136.85154724]
[57.37089920 137.42144775]
[44.84560013 129.16815186]
[39.45579529 115.16993713]
[43.21175003 100.64778900]
[54.71258545 91.01811218]
[69.66877747 89.87252808]
[82.50203705 97.63832092]
[88.42597961 111.42020416]
[83.75758362 100.75027466]
[87.42245483 89.69541931]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[107.19230652 55.52247238]
[112.01830292 41.32001495]
[116.84430695 27.11756134]
[121.67030334 12.91510487]
[124.11602783 -1.88416564]
[124.11602783 -16.88416481]
[124.11602783 -31.88416481]
[124.11602783 -46.88416672]
[124.11602783 -61.88416672]
[124.11602783 -76.88416290]
[123.89270020 -91.88249969]
[123.44609833 -106.87585449]
[122.99948883 -121.86920166]
[122.55288696 -136.86254883]
[114.40813446 -150.42623901]
[121.76306152 -163.37823486]
[113.61830902 -176.94192505]
[120.97324371 -189.89392090]
[120.52663422 -204.88726807]
[112.38188171 -218.45095825]
[119.73681641 -231.40295410]
[111.59206390 -244.96664429]
[118.94699097 -257.91864014]
[104.42153168 -262.14547729]
[91.91429901 -270.65573120]
[82.65063477 -282.61563110]
[77.53808594 -296.85351562]
[77.07754517 -311.97445679]
[81.31410980 -326.49710083]
[89.83274078 -338.99862671]
[101.79886627 -348.25427246]
[116.04016113 -353.35726929]
[131.16140747 -353.80767822]
[145.68119812 -349.56140137]
[158.17701721 -341.03439331]
[167.42463684 -329.06207275]
[172.51809692 -314.81735229]
[172.95838928 -299.69580078]
[168.70236206 -285.17886353]
[160.16697693 -272.68875122]
[148.18846130 -263.44915771]
[133.94033813 -258.36523438]
[142.05314636 -245.87397766]
[134.73016357 -231.84956360]
[142.84297180 -219.35829163]
[135.51998901 -205.33387756]
[135.96659851 -190.34053040]
[144.07940674 -177.84925842]
[136.75640869 -163.82484436]
[144.86921692 -151.33358765]
[137.54623413 -137.30915833]
[137.99284363 -122.31581116]
[138.43943787 -107.32245636]
[138.88604736 -92.32910919]
[141.68617249 -88.46020508]
[142.08558655 -82.79121399]
[139.11602783 -76.88416290]
[139.11602783 -61.88416672]
[139.11602783 -46.88416672]
[139.11602783 -31.88416481]
[139.11602783 -16.88416481]
[139.11602783 -1.88416564]
[145.83580017 -15.29478550]
[155.75772095 -26.54446983]
[168.22370911 -34.88706970]
[182.40695190 -39.76924896]
[197.36671448 -40.86719131]
[212.11077881 -38.10807419]
[225.66120911 -31.67489815]
[237.11926270 -21.99435425]
[245.72497559 -9.70851803]
[250.90754700 4.36773586]
[252.32325745 19.30077934]
[249.87817383 34.10015869]
[243.73449707 47.78428268]
[234.29971313 59.44553375]
[222.19958496 68.31046295]
[208.23667908 73.79108429]
[193.33709717 75.52390289]
[178.48908997 73.39397430]
[164.67745972 67.54257202]
[152.81828308 58.35780334]
[143.69815063 46.44885635]
[137.92195129 32.60560989]
[135.87275696 17.74110222]
[131.04675293 31.94355774]
[126.22076416 46.14601517]
[121.39476776 60.34846878]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[115.43373108 105.11654663]
[102.69870758 116.03421021]
[98.94241333 130.55627441]
[96.05713654 145.27616882]
[96.16880798 160.27574158]
[99.27291870 174.95104980]
[102.37702179 189.62635803]
[106.34912109 204.09088135]
[111.17511749 218.29333496]
[116.00111389 232.49578857]
[127.76699829 243.07286072]
[124.53587341 257.61279297]
[129.36187744 271.81524658]
[134.18786621 286.01770020]
[145.95375061 296.59475708]
[142.72262573 311.13467407]
[147.54862976 325.33712769]
[152.37461853 339.53958130]
[157.20062256 353.74203491]
[162.02662659 367.94448853]
[176.87634277 365.57940674]
[191.91217041 365.75814819]
[206.70149231 368.47552490]
[220.81877136 373.65341187]
[233.85784912 381.14276123]
[245.44354248 390.72814941]
[255.24252319 402.13375854]
[262.97286987 415.03143311]
[268.41210938 429.05007935]
[271.40380859 443.78634644]
[271.86187744 458.81625366]
[269.77310181 473.70736694]
[265.19760132 488.03121948]
[258.26699829 501.37570190]
[249.18075562 513.35687256]
[238.20025635 523.62994385]
[225.64144897 531.89941406]
[211.86567688 537.92736816]
[197.26928711 541.54028320]
[182.27224731 542.63433838]
[167.30604553 541.17791748]
[152.80131531 537.21295166]
[139.17536926 530.85357666]
[126.82025146 522.28277588]
[116.09144592 511.74710083]
[107.29763794 499.54968262]
[100.69184875 486.04147339]
[96.46414185 471.61114502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 182]
[8 181]
[9 180]
[10 179]
[11 178]
[13 176]
[14 175]
[15 174]
[17 172]
[18 171]
[19 170]
[28 169]
[29 168]
[30 167]
[58 166]
[59 165]
[68 164]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 126]
[84 125]
[85 124]
[86 123]
[88 121]
[90 119]
[91 118]
[93 116]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
