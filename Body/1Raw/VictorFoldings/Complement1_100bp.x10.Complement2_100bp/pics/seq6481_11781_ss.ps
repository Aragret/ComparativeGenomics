%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[104.89984131 619.53778076]
[90.47465515 615.32214355]
[76.83893585 609.00354004]
[64.29730988 600.72314453]
[53.12997055 590.66589355]
[43.58638763 579.05651855]
[35.87977600 566.15435791]
[30.18230438 552.24761963]
[26.62125397 537.64709473]
[25.27618027 522.67883301]
[26.17713356 507.67727661]
[29.30398560 492.97760010]
[34.58687973 478.90820312]
[41.90779877 465.78332520]
[51.10318756 453.89627075]
[61.96761703 443.51254272]
[74.25837708 434.86413574]
[87.70087433 428.14425659]
[101.99481964 423.50302124]
[116.82086182 421.04412842]
[108.89492798 408.43347168]
[116.42590332 394.51962280]
[116.20257568 379.52130127]
[107.74393463 370.87387085]
[107.43512726 358.38034058]
[115.98695374 348.72482300]
[115.98695374 333.72482300]
[115.98695374 318.72482300]
[115.98695374 303.72482300]
[115.98695374 288.72482300]
[115.31716919 273.73977661]
[113.97893524 258.79959106]
[112.64070129 243.85940552]
[111.30246735 228.91921997]
[109.52000427 214.02549744]
[99.98032379 202.58680725]
[105.58489227 187.79154968]
[103.35977173 172.95750427]
[101.13465118 158.12345886]
[98.90953827 143.28942871]
[96.68441772 128.45538330]
[82.92932892 123.00638580]
[73.72725677 111.42122650]
[71.53253937 96.78984833]
[76.93054199 83.01466370]
[88.48153687 73.76973724]
[86.25641632 58.93569565]
[84.03130341 44.10165024]
[81.80618286 29.26760864]
[79.58106995 14.43356419]
[77.35594940 -0.40047923]
[75.13083649 -15.23452282]
[72.90571594 -30.06856728]
[70.08163452 -33.36682510]
[68.60273743 -37.02433777]
[68.41678619 -40.57410049]
[69.32524109 -43.61405563]
[71.01710510 -45.84916687]
[62.07947159 -58.90402222]
[68.65044403 -72.27082825]
[59.71281052 -85.32568359]
[66.28378296 -98.69248962]
[50.43511200 -100.74616241]
[35.44058228 -106.25496674]
[22.04318619 -114.94274902]
[10.90608025 -126.37592316]
[2.57974482 -139.98510742]
[-2.52521420 -155.09346008]
[-4.15831518 -170.95036316]
[-2.24149036 -186.76867676]
[3.12718844 -201.76388550]
[11.67852211 -215.19293213]
[22.98568344 -226.39106750]
[36.48551559 -234.80476379]
[51.50658798 -240.01907349]
[49.72412109 -254.91279602]
[47.94165802 -269.80651855]
[46.15919113 -284.70022583]
[40.12923050 -270.96560669]
[29.35559464 -260.52871704]
[15.43648720 -254.93780518]
[0.43672508 -255.02221680]
[-13.41856670 -260.76947021]
[-24.07403755 -271.32699585]
[-29.94901085 -285.12860107]
[-30.17197037 -300.12695312]
[-24.70984077 -314.09710693]
[-14.37289810 -324.96667480]
[-0.69456363 -331.12322998]
[14.29606152 -331.65347290]
[28.37520599 -326.47875977]
[39.45431519 -316.36672974]
[45.88939667 -302.81927490]
[47.22763062 -317.75946045]
[48.56586456 -332.69964600]
[49.79283905 -347.64938354]
[50.90848923 -362.60781860]
[52.02413559 -377.56628418]
[53.13978577 -392.52471924]
[54.25543594 -407.48318481]
[40.53701019 -413.97698975]
[30.09362984 -424.99060059]
[24.33766937 -439.03460693]
[24.04757690 -454.20959473]
[29.26258659 -468.46328735]
[39.27740860 -479.86801147]
[52.73762512 -486.88134766]
[67.82284546 -488.55484009]
[82.49291992 -484.66210938]
[94.76384735 -475.72964478]
[102.97608185 -462.96551514]
[106.01898193 -448.09588623]
[103.48101807 -433.13183594]
[95.70544434 -420.09707642]
[83.74382782 -410.75448608]
[69.21389008 -406.36752319]
[68.09823608 -391.40908813]
[66.98258972 -376.45062256]
[65.86694336 -361.49218750]
[64.75128937 -346.53372192]
[67.38859558 -339.62963867]
[63.50605011 -331.36138916]
[62.16781616 -316.42120361]
[60.82958221 -301.48101807]
[61.05290985 -286.48269653]
[62.83537292 -271.58898926]
[64.61784363 -256.69525146]
[66.40030670 -241.80154419]
[80.42093658 -240.63467407]
[93.94530487 -236.73895264]
[106.44741821 -230.26379395]
[117.44062042 -221.45895386]
[126.49657440 -210.66491699]
[133.26188660 -198.29972839]
[137.47193909 -184.84283447]
[138.96124268 -170.81642151]
[137.66993713 -156.76521301]
[133.64614868 -143.23529053]
[127.04427338 -130.75286865]
[118.11900330 -119.80385590]
[107.21552277 -110.81488800]
[94.75614929 -104.13676453]
[81.22396851 -100.03072357]
[90.06588745 -88.04449463]
[83.59062958 -73.60906219]
[92.43254852 -61.62282944]
[85.95729065 -47.18740082]
[87.73976135 -32.29368210]
[89.96487427 -17.45964050]
[92.18999481 -2.62559628]
[94.41510773 12.20844746]
[96.64022827 27.04249191]
[98.86534882 41.87653351]
[101.09046173 56.71057892]
[103.31558228 71.54462433]
[117.07067108 76.99361420]
[126.27274323 88.57877350]
[128.46746826 103.21015167]
[123.06945801 116.98533630]
[111.51846313 126.23026276]
[113.74358368 141.06430054]
[115.96869659 155.89834595]
[118.19381714 170.73239136]
[120.41893005 185.56643677]
[130.11776733 198.06616211]
[124.35404205 211.80038452]
[127.17813110 215.09864807]
[128.65702820 218.75616455]
[128.84297180 222.30592346]
[127.93452454 225.34587097]
[126.24265289 227.58099365]
[127.58088684 242.52117920]
[128.91911316 257.46136475]
[130.25735474 272.40155029]
[140.68142700 261.61550903]
[155.67625427 261.22167969]
[166.65213013 271.44570923]
[167.32154846 286.43075562]
[157.30105591 297.59274292]
[142.33084106 298.53753662]
[130.98695374 288.72482300]
[130.98695374 303.72482300]
[130.98695374 318.72482300]
[130.98695374 333.72482300]
[130.98695374 348.72482300]
[140.56164551 364.45397949]
[131.20091248 379.29797363]
[131.42424011 394.29629517]
[139.36614990 407.97973633]
[131.81919861 420.82080078]
[146.71188354 422.83718872]
[161.13766479 427.05075073]
[174.77427673 433.36743164]
[187.31709290 441.64605713]
[198.48587036 451.70172119]
[208.03109741 463.30972290]
[215.73954773 476.21078491]
[221.43899536 490.11669922]
[225.00213623 504.71676636]
[226.34933472 519.68481445]
[225.45051575 534.68646240]
[222.32575989 549.38659668]
[217.04486084 563.45678711]
[209.72581482 576.58264160]
[200.53211975 588.47106934]
[189.66917419 598.85632324]
[177.37965393 607.50646973]
[163.93809509 614.22827148]
[149.64482117 618.87152100]
[134.81913757 621.33251953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 190]
[22 188]
[23 187]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 174]
[32 173]
[33 172]
[34 171]
[35 166]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[58 147]
[60 145]
[62 143]
[75 128]
[76 127]
[77 126]
[78 125]
[93 124]
[94 123]
[95 122]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
