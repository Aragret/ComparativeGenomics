%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[88.84214020 634.98236084]
[73.72927094 634.30688477]
[59.56552887 628.99237061]
[47.73853683 619.55963135]
[39.40697861 606.93261719]
[35.38710022 592.34857178]
[36.07272339 577.23614502]
[41.39668274 563.07598877]
[50.83739090 551.25531006]
[63.46994019 542.93218994]
[78.05672455 538.92205811]
[78.72650909 523.93707275]
[79.39629364 508.95199585]
[80.06607819 493.96697998]
[80.73586273 478.98193359]
[80.17765045 463.99230957]
[78.39518738 449.09860229]
[76.61271667 434.20489502]
[74.83025360 419.31115723]
[73.04779053 404.41744995]
[70.93316650 389.56726074]
[68.48743439 374.76797485]
[61.48643494 374.58679199]
[54.55749130 373.55297852]
[47.80408859 371.68139648]
[41.32714844 368.99951172]
[35.22354507 365.54672241]
[29.58462906 361.37414551]
[24.49488258 356.54357910]
[20.03063965 351.12667847]
[16.25895309 345.20394897]
[13.23657799 338.86346436]
[11.00911808 332.19958496]
[9.61034584 325.31158447]
[9.06168270 318.30212402]
[9.37187386 311.27578735]
[10.53684902 304.33740234]
[12.53977680 297.59066772]
[15.35130501 291.13635254]
[18.92999268 285.07104492]
[23.22291565 279.48553467]
[28.16646194 274.46347046]
[33.68725586 270.08023071]
[39.70326233 266.40164185]
[46.12500381 263.48306274]
[52.85688019 261.36859131]
[59.79859924 260.09030151]
[66.84667969 259.66778564]
[68.85069275 244.80226135]
[70.85470581 229.93673706]
[72.85872650 215.07121277]
[74.86273956 200.20568848]
[76.86675262 185.34014893]
[75.27636719 183.03172302]
[74.50456238 179.95423889]
[74.84883881 176.41632080]
[76.48957062 172.82849121]
[79.45811462 169.65962219]
[82.34338379 154.93972778]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[96.79220581 71.79234314]
[98.13043976 56.85215378]
[99.46867371 41.91197205]
[100.80690765 26.97178459]
[102.03388214 12.02205181]
[103.14953613 -2.93640161]
[104.26518250 -17.89485550]
[103.93020630 -32.89111328]
[102.14774323 -47.78483200]
[100.36527252 -62.67855072]
[98.58280945 -77.57226562]
[96.80034637 -92.46598053]
[87.47797394 -105.24893951]
[93.64805603 -118.80546570]
[91.86559296 -133.69918823]
[90.08312988 -148.59289551]
[88.30065918 -163.48661804]
[82.27069855 -149.75199890]
[71.49706268 -139.31510925]
[57.57795715 -133.72418213]
[42.57819366 -133.80860901]
[28.72290230 -139.55586243]
[18.06743240 -150.11337280]
[12.19245911 -163.91499329]
[11.96949959 -178.91333008]
[17.43162918 -192.88348389]
[27.76857185 -203.75305176]
[41.44690704 -209.90960693]
[56.43753052 -210.43986511]
[70.51667786 -205.26515198]
[81.59578705 -195.15310669]
[88.03086853 -181.60565186]
[89.36910248 -196.54583740]
[90.70733643 -211.48602295]
[92.04557037 -226.42620850]
[93.38380432 -241.36639404]
[79.64842224 -247.77850342]
[68.93664551 -258.50387573]
[62.54198074 -272.24737549]
[61.23661041 -287.34942627]
[65.17816162 -301.98635864]
[73.89067841 -314.39071655]
[86.32208252 -323.06460571]
[100.97121429 -326.96057129]
[116.06912994 -325.60821533]
[129.79266357 -319.17080688]
[140.48466492 -308.42572021]
[146.85398865 -294.67044067]
[148.13153076 -279.56600952]
[144.16300964 -264.93637085]
[135.42764282 -252.54809570]
[122.98027802 -243.89714050]
[108.32398987 -240.02816772]
[106.98575592 -225.08798218]
[105.64752197 -210.14779663]
[104.30928802 -195.20761108]
[102.97105408 -180.26742554]
[103.19438171 -165.26908875]
[104.97684479 -150.37536621]
[106.75930786 -135.48164368]
[108.54177856 -120.58793640]
[117.73664856 -108.87026978]
[111.69406128 -94.24845123]
[113.47652435 -79.35472870]
[115.25899506 -64.46101379]
[117.04145813 -49.56729889]
[118.82392120 -34.67358017]
[125.10190582 -48.29661179]
[136.32421875 -58.24948502]
[150.59970093 -62.85496902]
[165.52268982 -61.33695984]
[178.57839966 -53.95126724]
[187.56671143 -41.94250870]
[190.97293091 -27.33437347]
[188.22306824 -12.58858681]
[179.78050232 -0.19007440]
[167.06796265 7.77179718]
[152.22773743 9.95531273]
[137.76066589 5.99251223]
[126.10469818 -3.44880438]
[119.22363281 -16.77920723]
[118.10798645 -1.82075298]
[116.99234009 13.13770008]
[119.62963867 20.04178810]
[115.74709320 28.31001854]
[114.40885925 43.25020599]
[113.07062531 58.19038773]
[111.73239136 73.13057709]
[123.90741730 64.36879730]
[138.73353577 66.64613342]
[147.71766663 78.65802002]
[145.71330261 93.52349854]
[133.86862183 102.72695160]
[118.96880341 100.99622345]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[101.43467712 151.86575317]
[97.06327820 157.82501221]
[94.17800903 172.54489136]
[91.73227692 187.34416199]
[89.72826385 202.20970154]
[87.72425079 217.07522583]
[85.72023773 231.94075012]
[83.71622467 246.80627441]
[81.71221161 261.67181396]
[103.56836700 273.12091064]
[118.63261414 292.61773682]
[124.17991638 316.58798218]
[119.22663116 340.65249634]
[104.70474243 360.42727661]
[83.28670502 372.32226562]
[85.73243713 387.12152100]
[89.04587555 391.15490723]
[90.35040283 395.61041260]
[89.82164001 399.65213013]
[87.94150543 402.63497925]
[89.72396851 417.52871704]
[91.50643921 432.42242432]
[93.28890228 447.31613159]
[95.07136536 462.20986938]
[101.99726868 448.90451050]
[114.26022339 440.26623535]
[129.12066650 438.22482300]
[143.25872803 443.23635864]
[153.51593018 454.18121338]
[157.60078430 468.61428833]
[154.60073853 483.31121826]
[145.18598938 494.98864746]
[131.45983887 501.03784180]
[116.48872375 500.10736084]
[103.61724091 492.40509033]
[95.72090149 479.65173340]
[95.05111694 494.63674927]
[94.38133240 509.62179565]
[93.71154785 524.60681152]
[93.04176331 539.59185791]
[107.21260834 544.88732910]
[119.05223846 554.30426025]
[127.40071106 566.92010498]
[131.44012451 581.49877930]
[130.77474976 596.61206055]
[125.46977997 610.77935791]
[116.04492188 622.61267090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 179]
[22 178]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[58 166]
[59 165]
[60 163]
[61 162]
[62 161]
[64 159]
[65 152]
[66 151]
[67 150]
[68 149]
[69 147]
[70 146]
[71 145]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[78 125]
[79 124]
[80 123]
[81 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
