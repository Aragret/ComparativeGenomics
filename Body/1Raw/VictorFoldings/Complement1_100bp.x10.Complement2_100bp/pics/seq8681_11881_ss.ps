%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[138.82560730 706.31579590]
[125.65354919 699.12902832]
[112.96382141 691.12133789]
[100.80753326 682.32495117]
[89.23361969 672.77520752]
[78.28868866 662.51068115]
[68.01681519 651.57257080]
[58.45936203 640.00506592]
[49.65480804 627.85467529]
[41.63861084 615.17028809]
[34.44305038 602.00305176]
[28.09709358 588.40594482]
[22.62630081 574.43371582]
[18.05270004 560.14263916]
[14.39470387 545.59027100]
[11.66704559 530.83520508]
[9.88070679 515.93682861]
[9.04288101 500.95513916]
[9.15694141 485.95050049]
[10.22243023 470.98330688]
[12.23505497 456.11380005]
[15.18671322 441.40188599]
[19.06551743 426.90679932]
[23.85585213 412.68692017]
[29.53842545 398.79949951]
[36.09035873 385.30041504]
[43.48526382 372.24407959]
[51.69336700 359.68304443]
[60.68162155 347.66790771]
[70.41382599 336.24700928]
[80.85079956 325.46636963]
[91.95050812 315.36941528]
[103.66826630 305.99673462]
[115.95687866 297.38613892]
[128.76687622 289.57226562]
[142.04666138 282.58660889]
[155.74278259 276.45724487]
[150.49606323 262.40478516]
[145.24934387 248.35231018]
[140.00262451 234.29983521]
[134.71807861 229.13308716]
[134.78411865 219.99890137]
[129.74719238 205.86987305]
[124.71028137 191.74084473]
[119.67336273 177.61180115]
[108.11157990 168.22167969]
[110.76559448 152.62466431]
[105.72868347 138.49563599]
[100.69176483 124.36661530]
[95.65484619 110.23757935]
[88.26395416 123.29034424]
[73.84552002 127.42662048]
[60.65907669 120.27694702]
[56.25842285 105.93699646]
[63.16444778 92.62133789]
[77.42107391 87.95778656]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[83.34822083 65.57299805]
[79.59191895 51.05094147]
[75.83561707 36.52888489]
[72.07931519 22.00682449]
[68.93194580 36.67290878]
[62.14330673 50.04879761]
[52.16366959 61.24731445]
[39.65494156 69.52570343]
[25.44678116 74.33488464]
[10.48157024 75.35588837]
[-4.24810553 72.52098846]
[-17.76527977 66.01822662]
[-29.17340660 56.27888870]
[-37.71582794 43.94896317]
[-42.82595062 29.84624672]
[-44.16484451 14.90612030]
[-41.64369965 0.11950977]
[-35.42974091 -13.53284168]
[-25.93511200 -25.14542198]
[-13.78956127 -33.94801331]
[0.20134220 -39.35676956]
[15.10963154 -41.01294708]
[29.94649315 -38.80669403]
[43.72785187 -32.88434982]
[55.53963852 -23.63872147]
[64.59841919 -11.68303490]
[70.30468750 2.19468951]
[71.42033386 -12.76376343]
[72.53598785 -27.72221756]
[73.65163422 -42.68067169]
[59.24980545 -49.82878876]
[48.71899414 -61.92724228]
[43.64942551 -77.10404205]
[44.78931808 -93.02586365]
[51.93462372 -107.25679779]
[63.96478271 -117.63100433]
[79.01836395 -122.58233643]
[79.91118622 -137.55574036]
[80.80400085 -152.52914429]
[81.69681549 -167.50254822]
[67.60637665 -173.00843811]
[55.90826797 -182.60058594]
[47.74855423 -195.33927917]
[43.92663574 -209.97650146]
[44.81694794 -225.07823181]
[50.33226776 -239.16497803]
[59.93225861 -250.85665894]
[72.67641449 -259.00784302]
[87.31619263 -262.81994629]
[102.41732788 -261.91952515]
[116.50037384 -256.39474487]
[128.18562317 -246.78694153]
[136.32826233 -234.03732300]
[140.13055420 -219.39498901]
[139.22000122 -204.29446411]
[133.68580627 -190.21511841]
[124.07015991 -178.53631592]
[111.31509399 -170.40222168]
[96.67021942 -166.60974121]
[95.77740479 -151.63633728]
[94.88459015 -136.66293335]
[93.99177551 -121.68952179]
[106.83873749 -116.04196930]
[117.00796509 -106.32778931]
[123.26383209 -93.69910431]
[124.83660889 -79.66384125]
[121.51711273 -65.90565491]
[113.68426514 -54.08197021]
[102.26194763 -45.62431717]
[88.61008453 -41.56502151]
[87.49443817 -26.60656929]
[86.37879181 -11.64811516]
[85.26314545 3.31033826]
[86.60137939 18.25052261]
[90.35767365 32.77258301]
[94.11397552 47.29464340]
[97.87027740 61.81669998]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.78387451 105.20066833]
[114.82079315 119.32969666]
[119.85771179 133.45872498]
[124.89462280 147.58775330]
[136.81668091 157.98847961]
[133.80239868 172.57489014]
[138.83930969 186.70391846]
[143.87622070 200.83294678]
[148.91314697 214.96197510]
[154.05509949 229.05311584]
[159.30181885 243.10559082]
[164.54853821 257.15805054]
[169.79525757 271.21054077]
[184.15702820 266.86401367]
[198.76554871 263.43713379]
[213.56201172 260.94369507]
[228.48681641 259.39370728]
[243.47988892 258.79345703]
[258.48086548 259.14532471]
[273.42929077 260.44790649]
[288.26501465 262.69595337]
[302.92828369 265.88043213]
[317.36007690 269.98849487]
[331.50225830 275.00360107]
[345.29788208 280.90557861]
[358.69140625 287.67065430]
[371.62887573 295.27154541]
[384.05822754 303.67773438]
[395.92941284 312.85528564]
[407.19461060 322.76730347]
[417.80847168 333.37380981]
[427.72824097 344.63217163]
[436.91400146 356.49700928]
[445.32876587 368.92056274]
[452.93859863 381.85281372]
[459.71292114 395.24163818]
[465.62442017 409.03320312]
[470.64929199 423.17190552]
[474.76733398 437.60083008]
[477.96191406 452.26190186]
[480.22021484 467.09609985]
[481.53311157 482.04360962]
[481.89535522 497.04434204]
[481.30541992 512.03784180]
[479.76574707 526.96368408]
[477.28253174 541.76190186]
[473.86572266 556.37274170]
[469.52914429 570.73754883]
[464.29019165 584.79833984]
[458.17001343 598.49853516]
[451.19320679 611.78302002]
[443.38790894 624.59820557]
[434.78555298 636.89257812]
[425.42071533 648.61663818]
[415.33117676 659.72308350]
[404.55752563 670.16723633]
[393.14315796 679.90710449]
[381.13400269 688.90338135]
[368.57846069 697.11987305]
[355.52709961 704.52355957]
[342.03240967 711.08447266]
[328.14877319 716.77636719]
[313.93209839 721.57623291]
[299.43960571 725.46472168]
[284.72967529 728.42620850]
[269.86154175 730.44879150]
[254.89505005 731.52429199]
[239.89047241 731.64837646]
[224.90824890 730.82055664]
[210.00868225 729.04418945]
[195.25178528 726.32641602]
[180.69696045 722.67816162]
[166.40283203 718.11413574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 150]
[38 149]
[39 148]
[40 147]
[42 146]
[43 145]
[44 144]
[45 143]
[47 141]
[48 140]
[49 139]
[50 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[85 131]
[86 130]
[87 129]
[88 128]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
