%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[117.50500488 388.73501587]
[109.29438019 401.30245972]
[99.90914154 413.01879883]
[89.43690491 423.77465820]
[77.97546387 433.46954346]
[65.63182831 442.01296997]
[52.52124405 449.32513428]
[38.76613235 455.33782959]
[24.49492073 459.99487305]
[9.84085846 463.25277710]
[-5.05922842 465.08114624]
[-20.06621933 465.46289062]
[-35.03999710 464.39447021]
[-49.84074783 461.88583374]
[-64.33027649 457.96038818]
[-78.37329865 452.65481567]
[-91.83869934 446.01867676]
[-104.60074615 438.11389160]
[-116.54028320 429.01428223]
[-127.54582977 418.80477905]
[-137.51461792 407.58078003]
[-146.35359192 395.44702148]
[-153.98020935 382.51681519]
[-160.32325745 368.91088867]
[-165.32351685 354.75625610]
[-168.93431091 340.18515015]
[-171.12190247 325.33355713]
[-171.86587524 310.34014893]
[-171.15930176 295.34494019]
[-169.00874329 280.48794556]
[-165.43431091 265.90783691]
[-160.46936035 251.74081421]
[-154.16026306 238.11911011]
[-146.56591797 225.16992188]
[-137.75723267 213.01416016]
[-127.81645966 201.76531982]
[-116.83641052 191.52841187]
[-104.91960144 182.39906311]
[-92.17730713 174.46246338]
[-78.72850037 167.79275513]
[-64.69875336 162.45217896]
[-50.21905899 158.49063110]
[-35.42461014 155.94508362]
[-20.45354462 154.83930969]
[-5.44564772 155.18362427]
[9.45895290 156.97482300]
[24.12109375 160.19618225]
[38.40387344 164.81762695]
[52.17393875 170.79598999]
[59.44717026 157.67729187]
[66.72039795 144.55859375]
[73.99362946 131.43991089]
[81.26685333 118.32121277]
[88.54008484 105.20251465]
[95.51853943 91.92466736]
[102.19873047 78.49429321]
[108.87892914 65.06391907]
[115.55912018 51.63354111]
[102.47281647 44.29589844]
[89.76539612 36.32006454]
[77.46795654 27.72555733]
[65.61059570 18.53341293]
[54.22233200 8.76612377]
[43.33103180 -1.55240631]
[32.96334839 -12.39692688]
[23.14465523 -23.74090004]
[13.89897633 -35.55656433]
[5.24894047 -47.81500626]
[-2.78428459 -60.48622513]
[-10.18104076 -73.53921509]
[-16.92322540 -86.94202423]
[-22.99434090 -100.66186523]
[-28.37952995 -114.66516113]
[-33.06561279 -128.91763306]
[-37.04112625 -143.38441467]
[-40.29633331 -158.03010559]
[-42.82327271 -172.81886292]
[-44.61576462 -187.71447754]
[-45.66941452 -202.68051147]
[-45.98164749 -217.68034363]
[-45.55170059 -232.67726135]
[-44.38062668 -247.63458252]
[-42.47129059 -262.51565552]
[-39.82836151 -277.28411865]
[-36.45830917 -291.90380859]
[-32.36938477 -306.33895874]
[-27.57158661 -320.55419922]
[-22.07666397 -334.51480103]
[-15.89805794 -348.18658447]
[-9.05089283 -361.53607178]
[-1.55192161 -374.53060913]
[6.58050251 -387.13839722]
[15.32647896 -399.32855225]
[24.66460419 -411.07128906]
[34.57202530 -422.33786011]
[45.02450180 -433.10067749]
[55.99644852 -443.33343506]
[67.46101379 -453.01101685]
[79.39015198 -462.10983276]
[91.75466156 -470.60757446]
[104.52429199 -478.48342896]
[117.66777802 -485.71813965]
[131.15296936 -492.29400635]
[144.94686890 -498.19491577]
[159.01571655 -503.40646362]
[173.32507324 -507.91589355]
[187.83992004 -511.71212769]
[202.52476501 -514.78588867]
[217.34362793 -517.12969971]
[232.26028442 -518.73779297]
[247.23822021 -519.60620117]
[262.24075317 -519.73284912]
[277.23123169 -519.11743164]
[292.17288208 -517.76141357]
[307.02923584 -515.66815186]
[321.76385498 -512.84271240]
[336.34072876 -509.29205322]
[350.72418213 -505.02487183]
[364.87902832 -500.05160522]
[378.77056885 -494.38439941]
[392.36486816 -488.03713989]
[405.62863159 -481.02532959]
[418.52938843 -473.36621094]
[431.03561401 -465.07843018]
[443.11666870 -456.18231201]
[454.74298096 -446.69964600]
[465.88610840 -436.65359497]
[476.51879883 -426.06878662]
[486.61502075 -414.97109985]
[496.15008545 -403.38766479]
[505.10061646 -391.34689331]
[513.44470215 -378.87820435]
[521.16198730 -366.01214600]
[528.23358154 -352.78015137]
[534.64215088 -339.21463013]
[540.37194824 -325.34878540]
[545.40905762 -311.21655273]
[549.74108887 -296.85250854]
[553.35748291 -282.29180908]
[556.24938965 -267.57006836]
[558.40966797 -252.72332764]
[559.83312988 -237.78793335]
[560.51617432 -222.80039978]
[560.45727539 -207.79743958]
[559.65643311 -192.81575012]
[558.11566162 -177.89198303]
[555.83874512 -163.06268311]
[552.83129883 -148.36412048]
[549.10058594 -133.83229065]
[544.65576172 -119.50273132]
[539.50775146 -105.41051483]
[533.66912842 -91.59013367]
[527.15417480 -78.07540131]
[519.97888184 -64.89939117]
[512.16070557 -52.09435654]
[503.71887207 -39.69162750]
[494.67398071 -27.72155380]
[485.04821777 -16.21343040]
[474.86508179 -5.19541931]
[464.14953613 5.30551624]
[452.92779541 15.26367855]
[441.22732544 24.65469933]
[429.07675171 33.45559311]
[416.50579834 41.64482880]
[403.54522705 49.20236206]
[390.22677612 56.10969925]
[376.58300781 62.34993744]
[362.64736938 67.90779877]
[348.45388794 72.76969910]
[334.03735352 76.92372131]
[319.43301392 80.35971069]
[304.67663574 83.06925201]
[289.80432129 85.04572296]
[274.85244751 86.28428650]
[259.85760498 86.78189850]
[244.85652161 86.53735352]
[229.88587952 85.55125427]
[214.98233032 83.82599640]
[200.18232727 81.36581421]
[185.52210999 78.17673492]
[171.03752136 74.26654053]
[156.76405334 69.64482117]
[142.73660278 64.32287598]
[128.98950195 58.31373596]
[122.30930328 71.74411011]
[115.62911224 85.17449188]
[108.94891357 98.60486603]
[109.64555359 102.39789581]
[108.66690063 106.47957611]
[105.92152405 110.09481049]
[101.65878296 112.47574615]
[94.38555145 125.59443665]
[87.11231995 138.71313477]
[79.83908844 151.83183289]
[72.56586456 164.95051575]
[65.29263306 178.06921387]
[77.65818787 186.58088684]
[89.14450836 196.24629211]
[99.64435577 206.97515869]
[109.05967712 218.66734314]
[117.30257416 231.21366882]
[124.29608154 244.49697876]
[129.97489929 258.39324951]
[134.28601074 272.77276611]
[137.18914795 287.50122070]
[138.65721130 302.44110107]
[138.67651367 317.45294189]
[137.24684143 332.39654541]
[134.38156128 347.13241577]
[130.10743713 361.52294922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 196]
[50 195]
[51 194]
[52 193]
[53 192]
[54 191]
[55 187]
[56 186]
[57 185]
[58 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
