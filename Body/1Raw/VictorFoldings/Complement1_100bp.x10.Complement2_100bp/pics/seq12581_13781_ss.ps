%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[81.72411346 586.94329834]
[69.51141357 595.68322754]
[56.35070801 602.91729736]
[42.42676544 608.54406738]
[27.93505096 612.48443604]
[13.07900429 614.68310547]
[-1.93281579 615.10925293]
[-16.88966942 613.75689697]
[-31.58158302 610.64495850]
[-45.80230713 605.81719971]
[-59.35220337 599.34136963]
[-72.04105377 591.30834961]
[-83.69072723 581.83093262]
[-94.13768005 571.04217529]
[-103.23525238 559.09350586]
[-110.85572815 546.15264893]
[-116.89212799 532.40136719]
[-121.25971222 518.03265381]
[-123.89716339 503.24816895]
[-124.76746368 488.25555420]
[-123.85838318 473.26522827]
[-121.18269348 458.48764038]
[-116.77795410 444.13024902]
[-110.70599365 430.39462280]
[-103.05207062 417.47354126]
[-93.92361450 405.54846191]
[-83.44879150 394.78674316]
[-71.77463531 385.33950806]
[-59.06504822 377.33932495]
[-45.49844360 370.89855957]
[-31.26527977 366.10760498]
[-16.56536484 363.03369141]
[-1.60506296 361.72003174]
[13.40560436 362.18499756]
[28.25591278 364.42211914]
[32.22800827 349.95761108]
[36.20010376 335.49307251]
[40.17220306 321.02856445]
[44.14429855 306.56402588]
[40.05347061 292.24221802]
[51.16893387 280.98358154]
[55.14103317 266.51904297]
[59.11312866 252.05451965]
[63.08522415 237.58999634]
[58.99439621 223.26818848]
[70.10986328 212.00955200]
[74.08195496 197.54502869]
[77.40422058 182.91755676]
[80.07001495 168.15634155]
[82.73580933 153.39512634]
[85.40160370 138.63391113]
[88.06739807 123.87269592]
[90.73319244 109.11147308]
[92.95831299 94.27743530]
[83.46391296 81.92858124]
[85.48375702 66.84962463]
[97.31501007 57.87426758]
[99.09747314 42.98055267]
[100.87993622 28.08683395]
[102.66240692 13.19311619]
[104.44487000 -1.70060098]
[98.40228271 -16.32242393]
[107.59715271 -28.04008484]
[109.37962341 -42.93380356]
[107.29215240 -51.82651138]
[111.30110168 -58.03538513]
[111.18943787 -73.03496552]
[108.96431732 -87.86901093]
[106.73920441 -102.70305634]
[104.51408386 -117.53710175]
[102.28896332 -132.37113953]
[100.06385040 -147.20518494]
[97.83872986 -162.03923035]
[82.83287811 -161.48753357]
[67.85961151 -162.61947632]
[53.10723495 -165.42079163]
[38.76127625 -169.85626221]
[25.00214958 -175.87011719]
[12.00289249 -183.38673401]
[-0.07301690 -192.31155396]
[-11.07371044 -202.53234863]
[-20.86084366 -213.92059326]
[-29.31133080 -226.33305359]
[-36.31890106 -239.61364746]
[-41.79542542 -253.59533691]
[-45.67203140 -268.10229492]
[-47.89996338 -282.95208740]
[-48.45120621 -297.95794678]
[-47.31882858 -312.93118286]
[-44.51706696 -327.68347168]
[-40.08116150 -342.02929688]
[-34.06689072 -355.78826904]
[-26.54990005 -368.78729248]
[-17.62471771 -380.86294556]
[-7.40358877 -391.86331177]
[3.98494554 -401.65011597]
[16.39766121 -410.10021973]
[29.67845726 -417.10739136]
[43.66031265 -422.58349609]
[58.16739273 -426.45968628]
[73.01725006 -428.68716431]
[88.02313995 -429.23797607]
[102.99633789 -428.10513306]
[117.74854279 -425.30291748]
[132.09423828 -420.86660767]
[145.85301208 -414.85192871]
[158.85180664 -407.33453369]
[170.92718506 -398.40899658]
[181.92727661 -388.18753052]
[191.71372986 -376.79870605]
[200.16346741 -364.38574219]
[207.17024231 -351.10473633]
[212.64593506 -337.12271118]
[216.52166748 -322.61550903]
[218.74871826 -307.76559448]
[219.29905701 -292.75970459]
[218.16578674 -277.78652954]
[215.36314392 -263.03439331]
[210.92637634 -248.68884277]
[204.91128540 -234.93025208]
[197.39352417 -221.93167114]
[188.46760559 -209.85656738]
[178.24581909 -198.85678101]
[166.85670471 -189.07067871]
[154.44348145 -180.62130737]
[141.16226196 -173.61492920]
[127.18008423 -168.13964844]
[112.67277527 -164.26434326]
[114.89789581 -149.43029785]
[117.12300873 -134.59626770]
[119.34812927 -119.76221466]
[121.57324219 -104.92817688]
[123.79836273 -90.09413147]
[126.02348328 -75.26008606]
[130.88151550 -89.45161438]
[139.65812683 -101.61595154]
[151.59405518 -110.70075989]
[165.65670776 -115.92011261]
[180.62954712 -116.82248688]
[195.21725464 -113.32981110]
[208.15785217 -105.74423981]
[218.33184814 -94.72200012]
[224.85910034 -81.21662903]
[227.17492676 -66.39647675]
[225.07897949 -51.54362869]
[218.75259399 -37.94301224]
[208.74305725 -26.77121162]
[195.91629028 -18.99470139]
[181.38194275 -15.28622532]
[166.39738464 -15.96660614]
[152.25891113 -20.97698212]
[140.18966675 -29.88390732]
[131.23374939 -41.91684341]
[126.16663361 -56.03137207]
[124.27333832 -41.15133667]
[122.49087524 -26.25761795]
[128.66094971 -12.70109463]
[119.33858490 0.08186490]
[117.55612183 14.97558212]
[115.77365875 29.86929893]
[113.99118805 44.76301575]
[112.20872498 59.65673447]
[121.58786011 71.17053223]
[119.99234772 86.30027008]
[107.85202789 96.05989838]
[109.52597046 98.60694122]
[110.31014252 101.81935120]
[109.95632172 105.36875916]
[108.34106445 108.83966827]
[105.49441528 111.77726746]
[102.82861328 126.53849030]
[100.16281891 141.29971313]
[97.49702454 156.06092834]
[94.83123016 170.82214355]
[92.16543579 185.58335876]
[105.07360077 177.94271851]
[119.63742065 181.53369141]
[127.51408386 194.29920959]
[124.19146729 208.92658997]
[111.57292938 217.03660583]
[96.88694000 213.98348999]
[88.54647827 201.51712036]
[84.57438660 215.98164368]
[88.38110352 231.33805847]
[77.54975128 241.56210327]
[73.57765198 256.02661133]
[69.60555267 270.49114990]
[65.63346100 284.95565796]
[69.44017792 300.31207275]
[58.60882187 310.53613281]
[54.63672638 325.00064087]
[50.66463089 339.46517944]
[46.69253159 353.92968750]
[42.72043610 368.39422607]
[56.63057709 374.05499268]
[69.77354431 381.32125854]
[81.96483612 390.09103394]
[93.03330994 400.24118042]
[102.82357025 411.62921143]
[111.19818115 424.09524536]
[118.03957367 437.46429443]
[123.25171661 451.54867554]
[126.76142883 466.15069580]
[128.51943970 481.06530762]
[128.50106812 496.08316040]
[126.70658875 510.99343872]
[123.16117859 525.58679199]
[117.91460419 539.65838623]
[111.04053497 553.01068115]
[102.63545990 565.45617676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[41 188]
[42 187]
[43 186]
[44 185]
[46 183]
[47 182]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 165]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[63 156]
[64 155]
[66 154]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
