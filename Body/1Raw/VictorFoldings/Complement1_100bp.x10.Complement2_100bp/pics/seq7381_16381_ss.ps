%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[129.03271484 482.82803345]
[126.58003235 467.96426392]
[127.49685669 452.92739868]
[131.73721313 438.47171021]
[139.08840942 425.32226562]
[149.18170166 414.13867188]
[161.51083374 405.48184204]
[175.45735168 399.78604126]
[173.01162720 384.98675537]
[170.56590271 370.18750000]
[168.12017822 355.38821411]
[165.67443848 340.58895874]
[162.38253784 337.12884521]
[161.22930908 331.56402588]
[163.38307190 325.31320190]
[161.37905884 310.44766235]
[159.37504578 295.58215332]
[157.37103271 280.71661377]
[153.93997192 266.11428833]
[140.13824463 255.27549744]
[143.87521362 237.24450684]
[138.83830261 223.11547852]
[133.80137634 208.98645020]
[128.76446533 194.85742188]
[123.72754669 180.72839355]
[118.69062805 166.59936523]
[113.33944702 152.58634949]
[107.67665863 138.69631958]
[95.70711517 129.83181763]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.45957184 49.86085129]
[65.79678345 35.97082138]
[59.41818237 22.39461708]
[52.34107590 9.16908836]
[45.26396942 -4.05643892]
[38.18686295 -17.28196716]
[31.10975838 -30.50749397]
[24.03265381 -43.73302078]
[11.93695164 -48.21150208]
[6.31468868 -59.37277222]
[9.69277287 -70.98806763]
[-3.51195216 -79.70275879]
[-2.47344255 -94.56111145]
[-9.35285473 -107.89054108]
[-9.13207912 -92.89216614]
[-12.59848309 -78.29819489]
[-19.54009438 -65.00105286]
[-29.53243256 -53.81386185]
[-41.96446228 -45.42073059]
[-56.07595444 -40.33489609]
[-71.00399780 -38.86736298]
[-85.83572388 -41.10786819]
[-99.66416931 -46.91940689]
[-111.64373016 -55.94659805]
[-121.04183960 -67.63742828]
[-127.28380585 -81.27700043]
[-129.98793030 -96.03124237]
[-128.98884583 -110.99793243]
[-124.34766388 -125.26184845]
[-116.34817505 -137.95075989]
[-105.47956848 -148.28871155]
[-92.40644836 -155.64355469]
[-77.92825317 -159.56552124]
[-62.93032455 -159.81478882]
[-48.32979202 -156.37611389]
[-35.01948547 -149.45977783]
[-23.81333351 -139.48870850]
[-15.39658260 -127.07263184]
[-17.40059662 -141.93815613]
[-19.62571335 -156.77220154]
[-22.07144165 -171.57147217]
[-24.51716805 -186.37074280]
[-26.96289635 -201.17001343]
[-29.40862274 -215.96928406]
[-40.13279724 -205.48156738]
[-55.03685379 -207.17541504]
[-63.13407898 -219.80216980]
[-58.45549774 -234.05386353]
[-44.44998932 -239.42468262]
[-31.44282913 -231.95681763]
[-32.78106308 -246.89700317]
[-34.11929703 -261.83718872]
[-35.45753098 -276.77737427]
[-36.79576492 -291.71755981]
[-51.74431229 -293.51605225]
[-65.99214172 -298.38363647]
[-78.91638947 -306.10745239]
[-89.95207214 -316.34988403]
[-98.61676025 -328.66314697]
[-104.53165436 -342.50900269]
[-107.43820190 -357.28216553]
[-107.20932770 -372.33676147]
[-103.85504150 -387.01470947]
[-97.52197266 -400.67437744]
[-88.48698425 -412.71856689]
[-77.14504242 -422.62078857]
[-63.99197006 -429.94815063]
[-49.60276031 -434.38034058]
[-34.60644913 -435.72360229]
[-19.65861130 -433.91921997]
[-5.41270256 -429.04605103]
[7.50850916 -421.31713867]
[18.54016304 -411.07037354]
[27.20000076 -398.75369263]
[33.10945511 -384.90551758]
[36.01018524 -370.13122559]
[35.77539062 -355.07672119]
[32.41532898 -340.40008545]
[26.07688904 -326.74291992]
[17.03716278 -314.70227051]
[5.69132566 -304.80450439]
[-7.46462965 -297.48233032]
[-21.85558128 -293.05578613]
[-20.51734734 -278.11560059]
[-19.17911339 -263.17541504]
[-17.84087944 -248.23522949]
[-16.50264549 -233.29504395]
[-14.60935211 -218.41500854]
[-12.16362476 -203.61573792]
[-9.71789742 -188.81646729]
[-7.27217007 -174.01719666]
[-4.82644272 -159.21792603]
[-1.53454018 -155.75781250]
[-0.38131419 -150.19299316]
[-2.53506827 -143.94216919]
[-0.53105450 -129.07664490]
[3.97657394 -114.76995850]
[10.85598660 -101.44052887]
[23.56864929 -93.67924500]
[23.02220154 -77.86747742]
[38.27906418 -69.19596863]
[37.25818253 -50.81012726]
[44.33528519 -37.58459854]
[51.41239166 -24.35907173]
[58.48949814 -11.13354397]
[65.56660461 2.09198332]
[72.64370728 15.31751060]
[76.90721893 0.93618637]
[89.34756470 -7.44461250]
[104.27719116 -5.99329758]
[114.87046814 4.62660980]
[116.28429413 19.55983162]
[107.87229156 31.97909737]
[93.48030853 36.20648956]
[79.68681335 30.30803680]
[85.34960175 44.19806290]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[123.92665100 118.32707214]
[121.56668091 133.03352356]
[127.22946930 146.92355347]
[131.35394287 150.12289429]
[133.61289978 154.17880249]
[133.99244690 158.23725891]
[132.81965637 161.56245422]
[137.85658264 175.69148254]
[142.89349365 189.82051086]
[147.93040466 203.94953918]
[152.96733093 218.07856750]
[158.00424194 232.20759583]
[169.30177307 238.43081665]
[173.20616150 250.30261230]
[168.14242554 261.28829956]
[171.46534729 246.66098022]
[180.38508606 234.60119629]
[193.39849854 227.14123535]
[208.31259155 225.53820801]
[222.61408997 230.06227112]
[233.89292908 239.95103455]
[240.24844360 253.53807068]
[240.60960388 268.53372192]
[234.91554260 282.41094971]
[224.12582397 292.83123779]
[210.05870056 298.03851318]
[195.08471680 297.15533447]
[181.72727966 290.33047485]
[172.23655701 278.71261597]
[174.24057007 293.57812500]
[176.24458313 308.44366455]
[178.24859619 323.30917358]
[180.47370911 338.14321899]
[182.91944885 352.94250488]
[185.36517334 367.74176025]
[187.81089783 382.54104614]
[190.25662231 397.34030151]
[205.29414368 398.24621582]
[219.75291443 402.47607422]
[232.90769958 409.81768799]
[244.09864807 419.90286255]
[252.76441956 432.22567749]
[258.47036743 446.16806030]
[260.93023682 461.03067017]
[260.02072144 476.06796265]
[255.78735352 490.52569580]
[248.44253540 503.67871094]
[238.35466003 514.86718750]
[226.02973938 523.52996826]
[212.08596802 529.23254395]
[197.22277832 531.68884277]
[182.18569946 530.77563477]
[167.72897339 526.53881836]
[154.57775879 519.19079590]
[143.39170837 509.10021973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 192]
[9 191]
[10 190]
[11 189]
[12 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 170]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 158]
[28 157]
[30 155]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[45 134]
[47 132]
[48 131]
[72 130]
[73 129]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
