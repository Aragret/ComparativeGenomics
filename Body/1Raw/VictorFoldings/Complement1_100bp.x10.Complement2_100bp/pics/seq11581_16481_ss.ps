%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[64.91087341 384.12838745]
[59.81369781 398.24520874]
[53.55312729 411.88604736]
[46.17306900 424.95513916]
[37.72529221 437.36083984]
[28.26905251 449.01614380]
[17.87067986 459.83929443]
[6.60311127 469.75433350]
[-5.45461702 478.69177246]
[-18.21792793 486.58889771]
[-31.59729385 493.39028931]
[-45.49886703 499.04827881]
[-59.82513809 503.52316284]
[-74.47561646 506.78353882]
[-89.34753418 508.80657959]
[-104.33657074 509.57803345]
[-119.33760071 509.09252930]
[-134.24539185 507.35348511]
[-148.95536804 504.37304688]
[-163.36436462 500.17214966]
[-177.37130737 494.78030396]
[-190.87792969 488.23526001]
[-203.78950500 480.58294678]
[-216.01547241 471.87707520]
[-227.47006226 462.17868042]
[-238.07292175 451.55578613]
[-247.74969482 440.08291626]
[-256.43249512 427.84054565]
[-264.06042480 414.91455078]
[-270.57998657 401.39559937]
[-275.94540405 387.37850952]
[-280.11911011 372.96163940]
[-283.07177734 358.24606323]
[-284.78271484 343.33499146]
[-285.23989868 328.33309937]
[-284.44015503 313.34552002]
[-282.38909912 298.47744751]
[-279.10107422 283.83316040]
[-274.59918213 269.51535034]
[-268.91497803 255.62448120]
[-262.08834839 242.25796509]
[-254.16716003 229.50958252]
[-245.20698547 217.46873474]
[-235.27069092 206.21989441]
[-224.42794800 195.84194946]
[-212.75482178 186.40771484]
[-200.33320618 177.98336792]
[-187.25019836 170.62797546]
[-173.59761047 164.39314270]
[-159.47116089 159.32261658]
[-144.96997070 155.45195007]
[-130.19575500 152.80830383]
[-115.25212860 151.41020203]
[-100.24392700 151.26747131]
[-85.27642059 152.38108826]
[-70.45458984 154.74327087]
[-55.88240433 158.33744812]
[-41.66208267 163.13838196]
[-27.89337158 169.11242676]
[-14.67284870 176.21765137]
[-2.09324694 184.40423584]
[9.75719452 193.61474609]
[19.92074203 182.58287048]
[22.85389328 167.97993469]
[37.89493561 163.07304382]
[48.05848312 152.04116821]
[58.22203064 141.00929260]
[68.38557434 129.97740173]
[78.54912567 118.94553375]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[114.50650787 59.66457367]
[121.97425079 46.65562439]
[128.95269775 33.37777710]
[135.43220520 19.84943008]
[141.91169739 6.32108545]
[148.39118958 -7.20726013]
[154.87068176 -20.73560524]
[161.35018921 -34.26395035]
[149.57145691 -43.64838028]
[140.18099976 -55.41306305]
[133.64727783 -68.96596527]
[130.29504395 -83.62598419]
[130.28930664 -98.65715790]
[133.62713623 -113.30564117]
[140.13800049 -126.83748627]
[149.49244690 -138.57542419]
[161.21882629 -147.93278503]
[174.72703552 -154.44277954]
[189.33818054 -157.78181458]
[204.31878662 -157.78556824]
[218.91751099 -154.45704651]
[225.39700317 -167.98539734]
[231.87649536 -181.51374817]
[238.35600281 -195.04208374]
[244.83549500 -208.57043457]
[251.31498718 -222.09878540]
[257.79449463 -235.62712097]
[245.35818481 -244.06489563]
[234.31843567 -254.26203918]
[224.92187500 -265.99072266]
[217.37843323 -278.98898315]
[211.85662842 -292.96633911]
[208.47981262 -307.61062622]
[207.32342529 -322.59463501]
[208.41331482 -337.58361816]
[211.72511292 -352.24273682]
[217.18484497 -366.24447632]
[224.67054749 -379.27606201]
[234.01496887 -391.04632568]
[245.00936890 -401.29235840]
[257.40811157 -409.78524780]
[270.93420410 -416.33520508]
[285.28549194 -420.79598999]
[300.14132690 -423.06787109]
[315.16986084 -423.10015869]
[330.03530884 -420.89208984]
[344.40560913 -416.49298096]
[357.95971680 -410.00115967]
[370.39483643 -401.56161499]
[381.43313599 -391.36288452]
[390.82800293 -379.63287354]
[398.36959839 -366.63354492]
[403.88943481 -352.65539551]
[407.26416016 -338.01062012]
[408.41839600 -323.02645874]
[407.32638550 -308.03762817]
[404.01248169 -293.37896729]
[398.55075073 -279.37802124]
[391.06320190 -266.34750366]
[381.71710205 -254.57855225]
[370.72125244 -244.33409119]
[358.32131958 -235.84298706]
[344.79428101 -229.29493713]
[330.44235229 -224.83621216]
[315.58618164 -222.56642151]
[300.55764771 -222.53630066]
[285.69250488 -224.74649048]
[271.32284546 -229.14762878]
[264.84332275 -215.61927795]
[258.36383057 -202.09094238]
[251.88433838 -188.56259155]
[245.40484619 -175.03424072]
[238.92535400 -161.50590515]
[232.44586182 -147.97755432]
[244.18997192 -138.68898010]
[253.57704163 -127.01416779]
[260.13375854 -113.53662109]
[263.52844238 -98.93088531]
[263.58767700 -83.92872620]
[260.30526733 -69.28253174]
[253.84269714 -55.72756195]
[244.52119446 -43.94499969]
[232.80572510 -34.52777863]
[219.28182983 -27.95069313]
[204.62638855 -24.54649734]
[189.57363892 -24.48905373]
[174.87852478 -27.78445625]
[168.39903259 -14.25611019]
[161.91954041 -0.72776431]
[155.44004822 12.80058098]
[148.96054077 26.32892609]
[142.48104858 39.85727310]
[157.28027344 37.41125488]
[168.52153015 47.34273148]
[167.91816711 62.33059311]
[155.91497803 71.32633972]
[141.36026001 67.69864655]
[134.98320007 54.12336349]
[127.51546478 67.13231659]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[113.35588837 106.70864868]
[128.14656067 104.21143341]
[142.85501099 107.15443420]
[155.54611206 115.15043640]
[164.55010986 127.14743042]
[168.68240356 141.56700134]
[167.39927673 156.51202393]
[160.86958313 170.01620483]
[149.95239258 180.30285645]
[136.08406067 186.01856995]
[121.08920288 186.41136169]
[106.94065094 181.42955017]
[95.49989319 171.72856140]
[88.27214813 158.58474731]
[86.20835876 143.72740173]
[89.58100128 129.10908508]
[79.41745758 140.14096069]
[69.25390625 151.17283630]
[59.09035873 162.20471191]
[48.92681503 173.23658752]
[45.26669693 188.62860107]
[30.95261765 192.74641418]
[20.78907204 203.77830505]
[30.93806839 214.83561707]
[40.12620926 226.70341492]
[48.28904724 239.29844666]
[55.36932373 252.53234863]
[61.31737137 266.31231689]
[66.09147644 280.54165649]
[69.65814209 295.12060547]
[71.99236298 309.94686890]
[73.07775116 324.91644287]
[72.90670013 339.92434692]
[71.48041534 354.86529541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 199]
[63 198]
[65 196]
[66 195]
[67 194]
[68 193]
[69 192]
[70 176]
[72 174]
[73 173]
[74 172]
[75 171]
[76 165]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
