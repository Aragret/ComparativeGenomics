%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[125.46751404 553.93017578]
[115.33374786 542.85534668]
[106.29861450 530.86737061]
[98.44392395 518.07489014]
[91.84082794 504.59362793]
[86.54911804 490.54577637]
[82.61672211 476.05850220]
[80.07925415 461.26303101]
[78.95968628 446.29333496]
[79.26816559 431.28503418]
[81.00189209 416.37399292]
[84.14517212 401.69528198]
[88.66954041 387.38183594]
[94.53400421 373.56326294]
[101.68547821 360.36474609]
[110.05917358 347.90576172]
[119.57927704 336.29919434]
[130.15954590 325.65011597]
[141.70417786 316.05502319]
[154.10862732 307.60076904]
[167.26054382 300.36392212]
[181.04081726 294.41000366]
[176.42680359 280.13726807]
[171.81278992 265.86453247]
[160.53572083 256.13433838]
[163.65293884 240.62327576]
[159.03892517 226.35054016]
[154.42491150 212.07780457]
[143.14784241 202.34761047]
[146.26506042 186.83653259]
[141.65104675 172.56379700]
[134.77163696 159.23435974]
[125.81093597 147.20498657]
[116.85024261 135.17561340]
[107.88954926 123.14623260]
[98.92884827 111.11685181]
[89.87885284 99.15451813]
[75.33555603 92.92529297]
[73.71691132 78.11890411]
[64.57810974 66.22427368]
[55.43930817 54.32963562]
[40.89601517 48.10041428]
[39.27737045 33.29402161]
[24.73407745 27.06480217]
[23.11543274 12.25840950]
[13.97663021 0.36377645]
[4.83782816 -11.53085613]
[-7.79645681 -3.42846870]
[-21.07236099 3.57325864]
[-34.89423370 9.42387676]
[-49.16247940 14.08123207]
[-63.77429962 17.51176643]
[-78.62441254 19.69076347]
[-93.60581970 20.60252380]
[-108.61057281 20.24047661]
[-123.53057098 18.60722923]
[-138.25831604 15.71455193]
[-152.68766785 11.58328629]
[-166.71469116 6.24319887]
[-180.23831177 -0.26723528]
[-193.16107178 -7.90110683]
[-205.38987732 -16.60341263]
[-216.83660889 -26.31145287]
[-227.41880798 -36.95527649]
[-237.06021118 -48.45819473]
[-245.69136047 -60.73733139]
[-253.25006104 -73.70420837]
[-259.68185425 -87.26539612]
[-264.94039917 -101.32318878]
[-268.98779297 -115.77629852]
[-271.79492188 -130.52058411]
[-273.34149170 -145.44981384]
[-273.61639404 -160.45642090]
[-272.61764526 -175.43228149]
[-270.35247803 -190.26948547]
[-266.83712769 -204.86114502]
[-262.09701538 -219.10211182]
[-256.16622925 -232.88977051]
[-249.08752441 -246.12478638]
[-240.91191101 -258.71182251]
[-231.69827271 -270.56015015]
[-221.51303101 -281.58441162]
[-210.42953491 -291.70520020]
[-198.52766418 -300.84954834]
[-185.89317322 -308.95159912]
[-172.61708069 -315.95300293]
[-158.79505920 -321.80325317]
[-144.52670288 -326.46023560]
[-129.91479492 -329.89041138]
[-115.06462097 -332.06900024]
[-100.08319092 -332.98037720]
[-85.07844543 -332.61795044]
[-70.15848541 -330.98431396]
[-55.43082428 -328.09124756]
[-41.00156784 -323.95962524]
[-26.97468567 -318.61917114]
[-13.45124245 -312.10839844]
[-0.52867484 -304.47418213]
[11.69990730 -295.77157593]
[23.14639473 -286.06323242]
[33.72831345 -275.41912842]
[43.36942291 -263.91595459]
[52.00025177 -251.63661194]
[59.55861664 -238.66954041]
[65.99005890 -225.10816956]
[71.24824524 -211.05024719]
[75.29527283 -196.59703064]
[78.10199738 -181.85267639]
[79.64819336 -166.92340088]
[79.92271423 -151.91679382]
[78.92358398 -136.94094849]
[76.65801239 -122.10380554]
[73.14230347 -107.51224518]
[68.40180969 -93.27140808]
[62.47066879 -79.48389435]
[55.39162445 -66.24905396]
[47.21567917 -53.66224670]
[38.00174713 -41.81415558]
[27.81621170 -30.79014778]
[16.73246002 -20.66965866]
[25.87126350 -8.77502632]
[35.01006699 3.11960697]
[48.89968872 8.49804497]
[51.17200470 24.15522194]
[65.06163025 29.53365898]
[67.33393860 45.19083405]
[76.47274780 57.08546829]
[85.61154938 68.98010254]
[99.50116730 74.35853577]
[101.77348328 90.01571655]
[108.79132843 93.98086548]
[110.95822906 102.15615845]
[119.91892242 114.18553925]
[128.87962341 126.21491241]
[137.84031677 138.24429321]
[146.80101013 150.27366638]
[144.17875671 135.50465393]
[145.41539001 120.55571747]
[150.42890930 106.41836548]
[158.88676453 94.03028107]
[170.22798157 84.21311951]
[183.70034790 77.61801147]
[198.41027832 74.68239594]
[213.38212585 75.60098267]
[227.62286377 80.31283569]
[240.18794250 88.50544739]
[250.24395752 99.63541412]
[257.12396240 112.96454620]
[260.37161255 127.60874939]
[259.77148438 142.59674072]
[255.36341858 156.93441772]
[247.43977356 169.67080688]
[236.52607727 179.96115112]
[223.34620667 187.12294006]
[208.77435303 190.68115234]
[193.77699280 190.39978027]
[179.34884644 186.29748535]
[166.44689941 178.64636230]
[155.92378235 167.94978333]
[160.53779602 182.22251892]
[172.14489746 192.97360229]
[168.69764709 207.46379089]
[173.31166077 221.73652649]
[177.92567444 236.00926208]
[189.53277588 246.76034546]
[186.08552551 261.25054932]
[190.69953918 275.52328491]
[195.31353760 289.79598999]
[209.97134399 286.55661011]
[224.87069702 284.72518921]
[239.87666321 284.31835938]
[254.85336304 285.33981323]
[269.66516113 287.78027344]
[284.17788696 291.61764526]
[298.26013184 296.81716919]
[311.78433228 303.33178711]
[324.62805176 311.10247803]
[336.67495728 320.05886841]
[347.81594849 330.11984253]
[357.95013428 341.19427490]
[366.98568726 353.18191528]
[374.84085083 365.97415161]
[381.44442749 379.45513916]
[386.73666382 393.50280762]
[390.66958618 407.98995972]
[393.20758057 422.78533936]
[394.32769775 437.75497437]
[394.01977539 452.76330566]
[392.28659058 467.67437744]
[389.14385986 482.35321045]
[384.61999512 496.66683960]
[378.75604248 510.48562622]
[371.60504150 523.68438721]
[363.23181152 536.14367676]
[353.71212769 547.75061035]
[343.13223267 558.40002441]
[331.58795166 567.99560547]
[319.18380737 576.45031738]
[306.03216553 583.68762207]
[292.25210571 589.64202881]
[277.96844482 594.25958252]
[263.31054688 597.49841309]
[248.41111755 599.32928467]
[233.40513611 599.73559570]
[218.42848206 598.71356201]
[203.61677551 596.27258301]
[189.10418701 592.43469238]
[175.02214050 587.23461914]
[161.49815369 580.71954346]
[148.65470886 572.94836426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 168]
[23 167]
[24 166]
[26 164]
[27 163]
[28 162]
[30 160]
[31 159]
[32 136]
[33 135]
[34 134]
[35 133]
[36 132]
[37 130]
[39 128]
[40 127]
[41 126]
[43 124]
[45 122]
[46 121]
[47 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
