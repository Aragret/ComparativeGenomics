%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[294.62060547 355.18197632]
[303.17233276 342.83972168]
[313.02993774 331.51315308]
[302.86639404 320.48129272]
[292.70285034 309.44940186]
[282.53930664 298.41754150]
[272.37576294 287.38565063]
[262.21218872 276.35375977]
[251.96681213 265.39785767]
[241.64013672 254.51852417]
[231.31347656 243.63919067]
[220.98680115 232.75985718]
[210.66014099 221.88052368]
[200.33346558 211.00119019]
[190.00680542 200.12185669]
[174.50445557 207.34196472]
[157.44300842 208.82632446]
[140.87904358 204.37908936]
[126.81505585 194.52041626]
[116.95721436 180.42572021]
[112.50849915 163.78553772]
[114.02185059 146.60278320]
[121.33152771 130.95164490]
[110.52937317 120.54427338]
[99.72721863 110.13690186]
[92.19882202 107.25665283]
[88.84316254 99.49325562]
[78.19715118 88.92620850]
[67.55114746 78.35916138]
[56.29505157 68.44450378]
[44.40041733 59.30570602]
[32.43807983 50.25570297]
[20.47574425 41.20570374]
[8.51340675 32.15570450]
[-3.44893003 23.10570526]
[-15.41126728 14.05570507]
[-27.37360382 5.00570488]
[-37.38604736 16.18651581]
[-48.28760147 26.50231171]
[-60.00379944 35.88262177]
[-72.45460510 44.26337051]
[-85.55496979 51.58730698]
[-99.21539307 57.80440140]
[-113.34257507 62.87218475]
[-127.83999634 66.75603485]
[-142.60862732 69.42942047]
[-157.54759216 70.87408447]
[-172.55482483 71.08015442]
[-187.52781677 70.04622650]
[-202.36428833 67.77935791]
[-216.96287537 64.29503632]
[-231.22387695 59.61706543]
[-245.04986572 53.77739716]
[-258.34637451 46.81592941]
[-271.02261353 38.78020859]
[-282.99194336 29.72513390]
[-294.17263794 19.71255875]
[-304.48831177 8.81088066]
[-313.86846924 -2.90542960]
[-322.24908447 -15.35633564]
[-329.57287598 -28.45678520]
[-335.78979492 -42.11728668]
[-340.85742188 -56.24452591]
[-344.74108887 -70.74198914]
[-347.41430664 -85.51065826]
[-348.85879517 -100.44963074]
[-349.06466675 -115.45687103]
[-348.03057861 -130.42985535]
[-345.76351929 -145.26629639]
[-342.27902222 -159.86485291]
[-337.60089111 -174.12579346]
[-331.76104736 -187.95170593]
[-324.79943848 -201.24813843]
[-316.76354980 -213.92427063]
[-307.70834351 -225.89350891]
[-297.69561768 -237.07408142]
[-286.79382324 -247.38961792]
[-275.07739258 -256.76965332]
[-262.62640381 -265.15011597]
[-249.52586365 -272.47372437]
[-235.86528015 -278.69049072]
[-221.73799133 -283.75793457]
[-207.24047852 -287.64144897]
[-192.47177124 -290.31448364]
[-177.53279114 -291.75878906]
[-162.52554321 -291.96450806]
[-147.55258179 -290.93020630]
[-132.71615601 -288.66299438]
[-118.11764526 -285.17831421]
[-103.85675812 -280.50000000]
[-90.03091431 -274.66000366]
[-76.73455811 -267.69824219]
[-64.05852509 -259.66220093]
[-52.08939743 -250.60684204]
[-40.90894318 -240.59400940]
[-30.59353828 -229.69207764]
[-21.21364594 -217.97555542]
[-12.83334160 -205.52444458]
[-5.50987339 -192.42381287]
[0.70673233 -178.76316833]
[5.77400875 -164.63581848]
[9.65734005 -150.13824463]
[12.33020020 -135.36952209]
[13.77433014 -120.43051147]
[13.97986412 -105.42327118]
[12.94539833 -90.45031738]
[10.67799950 -75.61392212]
[7.19315720 -61.01545334]
[2.51467562 -46.75461960]
[-3.32548547 -32.92884445]
[-10.28743076 -19.63257217]
[-18.32360458 -6.95663214]
[-6.36126709 2.09336782]
[5.60106993 11.14336777]
[17.56340599 20.19336700]
[29.52574348 29.24336815]
[41.48807907 38.29336929]
[53.45041656 47.34336853]
[60.68125153 48.87204361]
[65.52214813 56.61823654]
[62.69475937 41.88711929]
[68.96149445 28.25890923]
[81.98500824 20.81659508]
[96.90785980 22.33597565]
[108.16419220 32.25035858]
[111.55567169 46.86192703]
[105.81735992 60.72092056]
[93.08950043 68.65828705]
[78.11819458 67.71315002]
[88.76419830 78.28019714]
[99.41020966 88.84724426]
[110.13459015 99.33474731]
[120.93674469 109.74211884]
[131.73890686 120.14949036]
[143.03131104 113.71676636]
[155.59146118 110.43186951]
[168.56031799 110.51225281]
[181.05274963 113.94542694]
[192.21797180 120.49033356]
[201.29747009 129.69422913]
[207.67651367 140.92401123]
[210.92578125 153.40975952]
[210.83029175 166.29751587]
[207.40353394 178.70771790]
[200.88613892 189.79519653]
[211.21279907 200.67453003]
[221.53947449 211.55386353]
[231.86613464 222.43319702]
[242.19281006 233.31253052]
[252.51947021 244.19186401]
[262.84613037 255.07119751]
[271.02386475 259.14093018]
[273.24407959 266.19021606]
[283.40762329 277.22210693]
[293.57116699 288.25396729]
[303.73471069 299.28585815]
[313.89825439 310.31774902]
[324.06182861 321.34960938]
[336.15673828 312.45153809]
[349.15716553 304.93804932]
[362.90521240 298.90032959]
[377.23403931 294.41168213]
[391.96969604 291.52661133]
[406.93331909 290.28012085]
[421.94320679 290.68731689]
[436.81723022 292.74331665]
[451.37478638 296.42312622]
[465.43914795 301.68206787]
[478.83963013 308.45632935]
[491.41351318 316.66363525]
[503.00820923 326.20440674]
[513.48297119 336.96279907]
[522.71057129 348.80822754]
[530.57910156 361.59689331]
[536.99298096 375.17355347]
[541.87432861 389.37338257]
[545.16394043 404.02404785]
[546.82183838 418.94766235]
[546.82794189 433.96310425]
[545.18218994 448.88806152]
[541.90447998 463.54138184]
[537.03466797 477.74517822]
[530.63183594 491.32705688]
[522.77374268 504.12210083]
[513.55578613 515.97503662]
[503.08978271 526.74194336]
[491.50286865 536.29211426]
[478.93563843 544.50970459]
[465.54067993 551.29486084]
[451.48059082 556.56524658]
[436.92602539 560.25689697]
[422.05371094 562.32495117]
[407.04412842 562.74438477]
[392.07952881 561.51007080]
[377.34152222 558.63696289]
[363.00903320 554.15997314]
[349.25607300 548.13348389]
[336.24957275 540.63055420]
[324.14739990 531.74230957]
[313.09646606 521.57666016]
[303.23092651 510.25701904]
[294.67056274 497.92074585]
[287.51928711 484.71765137]
[281.86386108 470.80795288]
[277.77297974 456.36053467]
[275.29629517 441.55075073]
[274.46386719 426.55844116]
[275.28579712 411.56552124]
[277.75210571 396.75399780]
[281.83288574 382.30374146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[8 153]
[9 151]
[10 150]
[11 149]
[12 148]
[13 147]
[14 146]
[15 145]
[23 134]
[24 133]
[25 132]
[27 131]
[28 130]
[29 129]
[30 120]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[36 113]
[37 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
