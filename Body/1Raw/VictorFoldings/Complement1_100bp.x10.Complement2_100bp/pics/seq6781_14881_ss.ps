%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[-26.63454437 436.05987549]
[-24.13781548 450.88259888]
[-23.99073219 465.91339111]
[-26.19691658 480.78210449]
[-30.70203972 495.12261963]
[-37.39516068 508.58178711]
[-46.11145020 520.82812500]
[-56.63626862 531.56005859]
[-68.71042633 540.51336670]
[-82.03659821 547.46746826]
[-96.28659821 552.25115967]
[-111.10951996 554.74670410]
[-126.14032745 554.89251709]
[-141.00888062 552.68511963]
[-155.34901428 548.17883301]
[-168.80761719 541.48455811]
[-181.05323792 532.76727295]
[-191.78431702 522.24157715]
[-200.73658752 510.16668701]
[-207.68960571 496.83993530]
[-212.47215271 482.58953857]
[-214.96643066 467.76641846]
[-215.11103821 452.73559570]
[-212.90240479 437.86721802]
[-208.39491272 423.52743530]
[-201.69956970 410.06939697]
[-192.98126221 397.82452393]
[-182.45466614 387.09429932]
[-170.37902832 378.14300537]
[-157.05171204 371.19110107]
[-142.80093384 366.40972900]
[-127.97759247 363.91665649]
[-112.94676208 363.77331543]
[-98.07857513 365.98318481]
[-83.73917389 370.49185181]
[-77.05898285 357.06146240]
[-70.37878418 343.63110352]
[-63.69859314 330.20071411]
[-77.56863403 335.91226196]
[-92.17362976 332.49261475]
[-102.06627655 321.21716309]
[-103.55685425 306.29141235]
[-96.08942413 293.28228760]
[-82.44915009 287.04187012]
[-67.72351074 289.89767456]
[-57.40481567 300.78457642]
[-55.34187698 315.64315796]
[-47.11306763 303.10174561]
[-38.88426208 290.56036377]
[-30.65545273 278.01895142]
[-22.42664528 265.47753906]
[-14.19783688 252.93615723]
[-5.96902895 240.39474487]
[2.25977898 227.85334778]
[-3.17642927 214.01190186]
[0.62514037 199.45126343]
[12.40937042 189.80838013]
[27.78981400 188.94342041]
[36.01861954 176.40200806]
[35.66363144 172.89398193]
[36.99015808 169.03970337]
[40.14242172 165.63140869]
[44.90539169 163.49571228]
[53.68599701 151.33425903]
[62.46659851 139.17279053]
[71.24720001 127.01134491]
[72.42428589 112.16332245]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[106.93183899 71.91136932]
[109.59763336 57.15015030]
[112.26342773 42.38893127]
[114.92922211 27.62771606]
[117.59502411 12.86649799]
[120.26081848 -1.89471924]
[113.56110382 -12.91636467]
[116.08534241 -25.15613556]
[125.94615173 -32.16263580]
[128.83142090 -46.88252640]
[131.71669006 -61.60241699]
[134.60195923 -76.32231140]
[126.05233002 -89.34311676]
[129.18809509 -104.23007965]
[141.65414429 -112.30060577]
[144.53941345 -127.02050018]
[147.42468262 -141.74038696]
[150.30995178 -156.46028137]
[152.86578369 -171.24093628]
[155.09091187 -186.07498169]
[157.31602478 -200.90902710]
[159.54113770 -215.74307251]
[161.76625061 -230.57711792]
[156.16169739 -245.37236023]
[165.70137024 -256.81106567]
[151.53837585 -261.89984131]
[138.64044189 -269.65417480]
[127.50333405 -279.77597046]
[118.55513763 -291.87622070]
[112.13980103 -305.48980713]
[108.50390625 -320.09347534]
[107.78720093 -335.12585449]
[110.01725006 -350.00915527]
[115.10832214 -364.17135620]
[122.86473846 -377.06802368]
[132.98835754 -388.20349121]
[145.09005737 -397.14971924]
[158.70468140 -403.56286621]
[173.30891418 -407.19638062]
[188.34141541 -407.91064453]
[203.22436523 -405.67819214]
[217.38571167 -400.58483887]
[230.28114319 -392.82632446]
[241.41496277 -382.70092773]
[250.35923767 -370.59777832]
[256.77017212 -356.98211670]
[260.40133667 -342.37728882]
[261.11315918 -327.34466553]
[258.87829590 -312.46206665]
[253.78265381 -298.30154419]
[246.02206421 -285.40737915]
[235.89483643 -274.27520752]
[223.79025269 -265.33288574]
[210.17355347 -258.92416382]
[195.56814575 -255.29534912]
[180.53541565 -254.58593750]
[186.29913330 -240.85173035]
[176.60029602 -228.35198975]
[174.37518311 -213.51794434]
[172.15007019 -198.68389893]
[169.92494202 -183.84986877]
[167.69982910 -169.01582336]
[169.49032593 -165.97830200]
[169.89851379 -161.92263794]
[168.46191406 -157.50794983]
[165.02984619 -153.57501221]
[162.14457703 -138.85511780]
[159.25930786 -124.13522339]
[156.37402344 -109.41533661]
[164.87081909 -97.23583984]
[162.15443420 -82.26667786]
[149.32185364 -73.43703461]
[146.43658447 -58.71714401]
[143.55131531 -43.99725342]
[140.66604614 -29.27736282]
[147.23968506 -13.00609684]
[135.02203369 0.77107626]
[132.35623169 15.53229332]
[129.69044495 30.29351044]
[127.02465057 45.05472946]
[124.35884857 59.81594467]
[121.69305420 74.57716370]
[130.63644409 62.53490448]
[141.73014832 52.43889236]
[154.55944824 44.66656494]
[168.64469910 39.50850296]
[183.45932007 37.15753937]
[198.44946289 37.70157242]
[213.05468750 41.12025452]
[226.72897339 47.28578568]
[238.96110535 55.96765518]
[249.29377747 66.84129333]
[257.34069824 79.50016785]
[262.80099487 93.47103119]
[265.47058105 108.23155975]
[265.24963379 123.22993469]
[262.14639282 137.90542603]
[256.27688599 151.70936584]
[247.86054993 164.12570190]
[237.21203613 174.69023132]
[224.72946167 183.00799561]
[210.87947083 188.76803589]
[196.17988586 191.75498962]
[181.18023682 191.85719299]
[166.44129944 189.07083130]
[152.51409912 183.50007629]
[139.91932678 175.35319519]
[129.12783813 164.93476868]
[120.54309082 152.63427734]
[114.48601532 138.91160583]
[111.18306732 124.27976990]
[110.75773621 109.28579712]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[97.13198853 130.00234985]
[83.40866089 135.79194641]
[74.62805176 147.95339966]
[65.84745026 160.11485291]
[57.06684875 172.27630615]
[48.56002045 184.63082886]
[40.33121490 197.17222595]
[45.66076660 211.62567139]
[41.50630569 226.27468872]
[29.66267204 235.55867004]
[14.80117893 236.08215332]
[6.57237148 248.62355042]
[-1.65643644 261.16494751]
[-9.88524437 273.70635986]
[-18.11405182 286.24777222]
[-26.34285927 298.78915405]
[-34.57166672 311.33056641]
[-42.80047607 323.87194824]
[-50.26821518 336.88092041]
[-56.94841003 350.31127930]
[-63.62860489 363.74166870]
[-70.30879974 377.17202759]
[-58.06174469 385.88732910]
[-47.32892990 396.41125488]
[-38.37465668 408.48468018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 207]
[36 206]
[37 205]
[38 204]
[47 203]
[48 202]
[49 201]
[50 200]
[51 199]
[52 198]
[53 197]
[54 196]
[58 192]
[59 191]
[63 190]
[64 189]
[65 188]
[66 187]
[68 185]
[70 183]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[79 145]
[80 144]
[81 143]
[82 142]
[85 139]
[86 138]
[87 137]
[88 136]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[95 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
