%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[129.45898438 616.41156006]
[119.65129089 605.04791260]
[110.93394470 592.82769775]
[103.38134003 579.85534668]
[97.05789948 566.24139404]
[92.01758575 552.10211182]
[88.30339813 537.55804443]
[85.94702911 522.73333740]
[84.96857452 507.75445557]
[85.37638855 492.74917603]
[87.16698456 477.84555054]
[90.32509613 463.17068481]
[94.82376862 448.84985352]
[100.62462616 435.00518799]
[107.67817688 421.75482178]
[115.92424011 409.21182251]
[125.29246521 397.48318481]
[135.70291138 386.66897583]
[147.06677246 376.86145020]
[159.28709412 368.14431763]
[172.25959778 360.59191895]
[185.87362671 354.26870728]
[180.83671570 340.13967896]
[175.62966919 334.89483643]
[175.83169556 325.76263428]
[171.00569153 311.56018066]
[166.17970276 297.35772705]
[161.35369873 283.15527344]
[156.00251770 269.14224243]
[150.13356018 255.33805847]
[144.26458740 241.53388977]
[138.39562988 227.72970581]
[132.52667236 213.92553711]
[126.65770721 200.12135315]
[120.78874969 186.31718445]
[114.18787384 199.78671265]
[100.04119110 204.77384949]
[86.45257568 198.42173767]
[81.20619202 184.36914062]
[87.30741882 170.66603088]
[101.26118469 165.16217041]
[115.07347107 171.00975037]
[110.45946503 156.73703003]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.41504669 104.94155121]
[73.29212952 115.00538635]
[58.64858246 118.25601959]
[44.31220245 113.84375000]
[34.03047180 102.92193604]
[30.49102211 88.34550476]
[34.61904907 73.92471313]
[45.33549881 63.42910767]
[59.83911896 59.60222244]
[74.33869171 63.44439316]
[85.04361725 73.95053101]
[82.59789276 59.15125656]
[80.15216827 44.35198593]
[77.70643616 29.55271530]
[75.26071167 14.75344467]
[70.90457153 29.10698128]
[63.39682007 42.09288406]
[53.13130569 53.02994156]
[40.64653015 61.34441376]
[26.59742737 66.60014343]
[11.72097969 68.52142334]
[-3.20242214 67.00746155]
[-17.38992691 62.13769150]
[-30.09728813 54.16755676]
[-40.65789795 43.51516342]
[-48.51777649 30.73931503]
[-53.26459885 16.51020241]
[-54.64936829 1.57425809]
[-52.59943390 -13.28500748]
[-47.22233200 -27.28810692]
[-38.80014038 -39.70046616]
[-27.77466393 -49.87095642]
[-14.72428131 -57.26605606]
[-0.33358759 -61.49783325]
[14.64251041 -62.34429550]
[29.41839600 -59.76103973]
[43.21895599 -53.88357544]
[55.32024002 -45.02022934]
[65.08744049 -33.63594818]
[72.00818634 -20.32793427]
[75.71965790 -5.79265213]
[78.82376099 -20.46795464]
[74.10976410 -35.57056427]
[84.31336975 -46.42117310]
[87.41748047 -61.09647369]
[90.52159119 -75.77177429]
[93.62570190 -90.44708252]
[96.72981262 -105.12238312]
[99.83392334 -119.79768372]
[85.99892426 -125.72043610]
[73.58540344 -134.22871399]
[63.07050705 -144.99548340]
[54.85839844 -157.60688782]
[49.26472855 -171.57817078]
[46.50450134 -186.37234497]
[46.68381500 -201.42073059]
[49.79577637 -216.14492798]
[55.72077179 -229.97897339]
[64.23105621 -242.39111328]
[74.99951935 -252.90426636]
[87.61225128 -261.11434937]
[101.58445740 -266.70574951]
[116.37906647 -269.46356201]
[131.42742920 -269.28182983]
[146.15112305 -266.16748047]
[159.98420715 -260.24023438]
[172.39497375 -251.72795105]
[182.90637207 -240.95777893]
[191.11441040 -228.34371948]
[196.70355225 -214.37062073]
[199.45898438 -199.57556152]
[199.27481079 -184.52722168]
[196.15808105 -169.80404663]
[190.22860718 -155.97192383]
[181.71429443 -143.56253052]
[170.94242859 -133.05287170]
[158.32704163 -124.84687805]
[144.35302734 -119.25999451]
[129.55752563 -116.50695038]
[114.50922394 -116.69357300]
[111.40511322 -102.01827240]
[108.30100250 -87.34297180]
[105.19689178 -72.66766357]
[102.09278107 -57.99236298]
[98.98867035 -43.31706238]
[103.92469788 -29.26412964]
[93.49906921 -17.36384392]
[90.39495850 -2.68854213]
[90.05998230 12.30771732]
[92.50570679 27.10698700]
[94.95143890 41.90625763]
[97.39716339 56.70552826]
[99.84288788 71.50479889]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[124.73220062 152.12301636]
[129.34620667 166.39575195]
[134.59292603 180.44822693]
[140.46188354 194.25239563]
[146.33084106 208.05657959]
[152.19981384 221.86074829]
[158.06877136 235.66493225]
[163.93772888 249.46910095]
[169.80668640 263.27328491]
[177.75312805 250.55108643]
[192.63597107 248.68005371]
[203.48416138 259.03945923]
[202.30079651 273.99270630]
[189.95822144 282.51681519]
[175.55615234 278.32925415]
[180.38215637 292.53170776]
[185.20814514 306.73419189]
[190.03414917 320.93664551]
[194.96574402 335.10278320]
[200.00265503 349.23181152]
[214.54652405 345.51687622]
[229.37112427 343.15975952]
[244.34996033 342.18057251]
[259.35525513 342.58761597]
[274.25900269 344.37747192]
[288.93399048 347.53485107]
[303.25506592 352.03280640]
[317.10000610 357.83297729]
[330.35073853 364.88586426]
[342.89413452 373.13131714]
[354.62326050 382.49893188]
[365.43798828 392.90884399]
[375.24606323 404.27221680]
[383.96380615 416.49209595]
[391.51684570 429.46423340]
[397.84075928 443.07794189]
[402.88153076 457.21707153]
[406.59619141 471.76101685]
[408.95306396 486.58566284]
[409.93203735 501.56451416]
[409.52471924 516.56982422]
[407.73461914 531.47351074]
[404.57699585 546.14843750]
[400.07879639 560.46942139]
[394.27838135 574.31427002]
[387.22528076 587.56488037]
[378.97964478 600.10815430]
[369.61181641 611.83715820]
[359.20172119 622.65167236]
[347.83819580 632.45959473]
[335.61816406 641.17712402]
[322.64590454 648.72991943]
[309.03207397 655.05358887]
[294.89285278 660.09417725]
[280.34887695 663.80859375]
[265.52420044 666.16522217]
[250.54531860 667.14392090]
[235.54003906 666.73632812]
[220.63636780 664.94598389]
[205.96147156 661.78814697]
[191.64056396 657.28967285]
[177.79579163 651.48907471]
[164.54531860 644.43572998]
[152.00216675 636.18988037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 166]
[23 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[48 142]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[89 136]
[90 135]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
