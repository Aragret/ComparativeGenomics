%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[70.94091034 847.48071289]
[55.96081161 846.64483643]
[41.04429626 845.03253174]
[26.23156929 842.64819336]
[11.56256485 839.49822998]
[-2.92317152 835.59112549]
[-17.18658829 830.93743896]
[-31.18923569 825.54968262]
[-44.89336395 819.44244385]
[-58.26202774 812.63208008]
[-71.25918579 805.13702393]
[-83.84980774 796.97747803]
[-95.99994659 788.17541504]
[-107.67684174 778.75463867]
[-118.84902191 768.74041748]
[-129.48635864 758.15979004]
[-139.56019592 747.04138184]
[-149.04336548 735.41503906]
[-157.91029358 723.31219482]
[-166.13706970 710.76538086]
[-173.70155334 697.80853271]
[-180.58331299 684.47644043]
[-186.76382446 670.80523682]
[-192.22639465 656.83160400]
[-196.95632935 642.59326172]
[-200.94085693 628.12866211]
[-204.16925049 613.47668457]
[-206.63279724 598.67694092]
[-208.32485962 583.76928711]
[-209.24087524 568.79382324]
[-209.37835693 553.79107666]
[-208.73696899 538.80139160]
[-207.31842041 523.86523438]
[-205.12652588 509.02279663]
[-202.16722107 494.31414795]
[-198.44845581 479.77893066]
[-193.98028564 465.45629883]
[-188.77471924 451.38491821]
[-182.84582520 437.60266113]
[-176.20956421 424.14675903]
[-168.88381958 411.05340576]
[-160.88836670 398.35794067]
[-152.24475098 386.09460449]
[-142.97625732 374.29641724]
[-133.10789490 362.99520874]
[-122.66625977 352.22143555]
[-111.67949677 342.00415039]
[-100.17722321 332.37091064]
[-88.19044495 323.34765625]
[-75.75148773 314.95870972]
[-62.89387894 307.22671509]
[-49.65227890 300.17248535]
[-36.06238556 293.81509399]
[-22.16083336 288.17160034]
[-7.98510313 283.25726318]
[6.42659235 279.08535767]
[21.03540039 275.66708374]
[35.80194092 273.01165771]
[50.68640137 271.12625122]
[65.64865875 270.01596069]
[80.64838409 269.68377686]
[81.09498596 254.69041443]
[73.74005127 241.73841858]
[81.88480377 228.17474365]
[82.33141327 213.18138123]
[82.77802277 198.18803406]
[83.22462463 183.19468689]
[71.59268951 192.66560364]
[56.65731430 191.27476501]
[46.97414780 179.81892395]
[48.09015656 164.86050415]
[59.36603546 154.96835327]
[74.34245300 155.80915833]
[84.43990326 166.90037537]
[86.22237396 152.00665283]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.92288208 47.66311646]
[99.48340607 32.74451065]
[100.71038055 17.79477882]
[101.60319519 2.82137275]
[102.49600983 -12.15203285]
[102.60767365 -27.15161705]
[101.93788910 -42.13665771]
[101.26810455 -57.12169647]
[100.59832001 -72.10673523]
[99.92853546 -87.09177399]
[99.25875092 -102.07681274]
[90.91295624 -115.51773071]
[98.07424164 -128.57778931]
[97.40445709 -143.56283569]
[96.73466492 -158.54788208]
[96.06488037 -173.53291321]
[81.87449646 -179.06037903]
[71.16377258 -189.88627625]
[65.78839874 -204.13497925]
[66.67970276 -219.33778381]
[73.68325806 -232.86073303]
[85.58564758 -242.36088562]
[100.32472229 -246.19229126]
[115.34683990 -243.69111633]
[128.04933167 -235.29072571]
[136.23141479 -222.44653320]
[138.47549438 -207.38386536]
[134.39276123 -192.71241760]
[124.69058228 -180.97412109]
[111.04991913 -174.20269775]
[111.71970367 -159.21766663]
[112.38949585 -144.23262024]
[113.05928040 -129.24758911]
[121.35716248 -116.87849426]
[114.24378967 -102.74659729]
[114.91357422 -87.76155853]
[115.58335876 -72.77651978]
[116.25314331 -57.79148102]
[116.92292786 -42.80644226]
[117.59271240 -27.82140350]
[127.65017700 -38.95007706]
[142.49021912 -41.13482285]
[155.32817078 -33.37680054]
[160.29470825 -19.22287560]
[155.11917114 -5.14403009]
[142.16777039 2.42307568]
[127.36169434 0.01886385]
[117.46941376 -11.25921726]
[116.57659912 3.71418858]
[115.68378448 18.68759346]
[117.73812866 21.55325699]
[118.50652313 25.55633163]
[117.46950531 30.08158112]
[114.40200806 34.30503464]
[112.84148407 49.22364044]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.11608887 153.78912354]
[99.33362579 168.68284607]
[98.21797180 183.64129639]
[97.77136993 198.63464355]
[97.32476044 213.62799072]
[96.87815857 228.62133789]
[104.20114136 242.64576721]
[96.08833313 255.13702393]
[95.64173126 270.13037109]
[110.59508514 271.35479736]
[125.46472931 273.35366821]
[140.21058655 276.12167358]
[154.79289246 279.65130615]
[169.17233276 283.93304443]
[183.31016541 288.95538330]
[197.16825867 294.70474243]
[210.70924377 301.16564941]
[223.89665222 308.32067871]
[236.69490051 316.15054321]
[249.06950378 324.63412476]
[260.98709106 333.74856567]
[272.41552734 343.46929932]
[283.32403564 353.77011108]
[293.68316650 364.62322998]
[303.46502686 375.99938965]
[312.64324951 387.86791992]
[321.19305420 400.19686890]
[329.09143066 412.95294189]
[336.31704712 426.10180664]
[342.85046387 439.60797119]
[348.67407227 453.43502808]
[353.77212524 467.54571533]
[358.13088989 481.90200806]
[361.73867798 496.46517944]
[364.58566284 511.19598389]
[366.66427612 526.05468750]
[367.96884155 541.00128174]
[368.49584961 555.99542236]
[368.24389648 570.99670410]
[367.21368408 585.96466064]
[365.40792847 600.85900879]
[362.83154297 615.63952637]
[359.49148560 630.26641846]
[355.39669800 644.70025635]
[350.55828857 658.90203857]
[344.98925781 672.83361816]
[338.70465088 686.45727539]
[331.72137451 699.73645020]
[324.05828857 712.63525391]
[315.73599243 725.11889648]
[306.77700806 737.15380859]
[297.20541382 748.70739746]
[287.04705811 759.74871826]
[276.32931519 770.24780273]
[265.08105469 780.17651367]
[253.33262634 789.50799561]
[241.11569214 798.21710205]
[228.46319580 806.28033447]
[215.40922546 813.67602539]
[201.98899841 820.38415527]
[188.23867798 826.38671875]
[174.19534302 831.66748047]
[159.89683533 836.21221924]
[145.38171387 840.00866699]
[130.68910217 843.04663086]
[115.85861206 845.31793213]
[100.93022919 846.81634521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 152]
[62 151]
[64 149]
[65 148]
[66 147]
[67 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[84 131]
[85 130]
[86 129]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
