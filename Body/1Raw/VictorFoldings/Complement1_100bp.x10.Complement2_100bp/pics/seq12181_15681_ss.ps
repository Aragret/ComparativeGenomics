%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[76.64266968 484.12509155]
[64.24649811 474.79156494]
[59.73609161 459.94448853]
[64.84579468 445.29284668]
[77.61081696 436.47052002]
[77.83414459 421.47216797]
[78.05747223 406.47384644]
[78.28079987 391.47549438]
[78.50412750 376.47717285]
[78.72745514 361.47882080]
[78.83912659 346.47924805]
[78.83912659 331.47924805]
[78.83912659 316.47924805]
[78.61579895 301.48089600]
[78.16918945 286.48754883]
[77.72258759 271.49420166]
[77.27597809 256.50085449]
[66.22838593 266.64730835]
[51.23670578 266.14791870]
[40.88884354 255.28874207]
[41.11252975 240.29040527]
[51.77962875 229.74464417]
[66.77954102 229.69255066]
[77.51924896 240.16308594]
[78.41207123 225.18968201]
[79.30488586 210.21627808]
[80.19770050 195.24287415]
[67.41701508 203.09487915]
[53.25827026 198.14210510]
[48.15877151 184.03553772]
[55.87767792 171.17402649]
[70.72489929 169.03858948]
[81.75499725 179.20187378]
[83.75901031 164.33633423]
[85.76302338 149.47080994]
[87.76703644 134.60528564]
[81.79947662 120.95839691]
[91.31112671 108.31565094]
[93.09358978 93.42193604]
[94.65411377 78.50332642]
[96.21463776 63.58472443]
[97.77516174 48.66612244]
[98.33337402 33.67650986]
[97.88676453 18.68316078]
[97.44016266 3.68981099]
[96.99355316 -11.30353928]
[90.76435089 2.34186411]
[81.86882782 14.41951466]
[70.68522644 24.41586494]
[57.68907547 31.90586662]
[43.43298340 36.57103729]
[28.52312469 38.21301651]
[13.59347248 36.76198196]
[-0.72115529 32.27963638]
[-13.81209373 24.95656586]
[-25.12270927 15.10415745]
[-34.17206955 3.14133644]
[-40.57538986 -10.42323017]
[-44.06039810 -25.01277161]
[-44.47891235 -40.00693130]
[-41.81313705 -54.76815414]
[-36.17641830 -68.66877747]
[-27.80843353 -81.11774445]
[-17.06499481 -91.58572388]
[-4.40291929 -99.62760925]
[9.63939571 -104.90144348]
[24.46486473 -107.18299866]
[39.44309998 -106.37525177]
[53.93722153 -102.51254272]
[67.33092499 -95.75913239]
[79.05471802 -86.40216827]
[88.61008453 -74.83951569]
[95.59072876 -61.56282043]
[99.69983673 -47.13661957]
[100.76267242 -32.17414856]
[106.42546082 -46.06417465]
[112.08824921 -59.95420074]
[117.75103760 -73.84423065]
[107.73596191 -88.95899200]
[108.78958130 -106.90250397]
[120.30156708 -120.50122070]
[137.51840210 -124.43213654]
[142.76512146 -138.48460388]
[148.01184082 -152.53707886]
[153.25856018 -166.58955383]
[152.38793945 -170.84349060]
[152.86798096 -174.75936890]
[154.42657471 -177.95408630]
[156.69511414 -180.17227173]
[159.25854492 -181.30670166]
[165.33238220 -195.02195740]
[171.40621948 -208.73722839]
[177.48004150 -222.45249939]
[183.55387878 -236.16775513]
[189.52545166 -249.92787170]
[195.39440918 -263.73205566]
[201.26336670 -277.53622437]
[188.38818359 -285.28060913]
[176.71615601 -294.74160767]
[166.47450256 -305.73498535]
[157.86256409 -318.04678345]
[151.04795837 -331.43734741]
[146.16337585 -345.64605713]
[143.30386353 -360.39627075]
[142.52508545 -375.40093994]
[143.84222412 -390.36795044]
[147.22961426 -405.00598145]
[152.62132263 -419.03005981]
[159.91241455 -432.16726685]
[168.96096802 -444.16186523]
[179.59082031 -454.78033447]
[191.59509277 -463.81604004]
[204.74008179 -471.09304810]
[218.76995850 -476.46975708]
[233.41160583 -479.84149170]
[248.38000488 -481.14257812]
[263.38381958 -480.34774780]
[278.13098145 -477.47244263]
[292.33444214 -472.57263184]
[305.71771240 -465.74371338]
[318.02029419 -457.11859131]
[329.00268555 -446.86517334]
[338.45117188 -435.18301392]
[346.18179321 -422.29956055]
[352.04406738 -408.46554565]
[355.92388916 -393.95028687]
[357.74575806 -379.03628540]
[357.47418213 -364.01388550]
[355.11444092 -349.17550659]
[350.71252441 -334.80996704]
[344.35406494 -321.19686890]
[336.16284180 -308.60122681]
[326.29827881 -297.26821899]
[314.95245361 -287.41845703]
[302.34616089 -279.24365234]
[288.72482300 -272.90289307]
[274.35354614 -268.51968384]
[259.51208496 -266.17926025]
[244.48934937 -265.92724609]
[229.57774353 -267.76852417]
[215.06755066 -271.66726685]
[209.19857788 -257.86306763]
[203.32962036 -244.05889893]
[203.60542297 -236.67340088]
[197.26914978 -230.09393311]
[191.19531250 -216.37866211]
[185.12147522 -202.66339111]
[179.04765320 -188.94813538]
[172.97381592 -175.23286438]
[167.31101990 -161.34283447]
[162.06431580 -147.29035950]
[156.81759644 -133.23788452]
[151.57087708 -119.18541718]
[159.70216370 -110.17114258]
[163.25025940 -98.48593903]
[161.48309326 -86.32953644]
[154.67529297 -76.01772308]
[144.06759644 -69.54121399]
[131.64106750 -68.18144226]
[125.97827148 -54.29141617]
[120.31549072 -40.40139008]
[114.65270233 -26.51136208]
[111.98690796 -11.75014496]
[112.43350983 3.24320507]
[112.88011932 18.23655510]
[113.32672119 33.22990417]
[122.28893280 21.20165634]
[136.29360962 15.82865143]
[151.00123596 18.77577591]
[161.85450745 29.12983131]
[165.49041748 43.68249893]
[160.78234863 57.92448044]
[149.18911743 67.44273376]
[134.30303955 69.28794098]
[120.73672485 62.88832474]
[112.69376373 50.22664261]
[111.13324738 65.14524841]
[109.57272339 80.06385040]
[108.01219940 94.98246002]
[110.30699921 99.69921875]
[109.79573059 105.36595917]
[106.17665863 110.31966400]
[112.00087738 125.02983093]
[102.63256836 136.60929871]
[100.62854767 151.47482300]
[98.62453461 166.34034729]
[96.62052155 181.20588684]
[95.17110443 196.13569641]
[94.27828979 211.10910034]
[93.38547516 226.08250427]
[92.49266052 241.05590820]
[92.26933289 256.05426025]
[92.71593475 271.04760742]
[93.16254425 286.04095459]
[93.60914612 301.03430176]
[96.75326538 306.85031128]
[96.52281189 312.52868652]
[93.83912659 316.47924805]
[93.83912659 331.47924805]
[93.83912659 346.47924805]
[96.96853638 355.06088257]
[93.72579956 361.70214844]
[93.50247192 376.70050049]
[93.27913666 391.69882202]
[93.05580902 406.69717407]
[92.83248138 421.69549561]
[92.60915375 436.69384766]
[105.10585022 445.89233398]
[109.77705383 460.68960571]
[104.82659149 475.39581299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 200]
[12 199]
[13 198]
[14 195]
[15 194]
[16 193]
[17 192]
[24 191]
[25 190]
[26 189]
[27 188]
[33 187]
[34 186]
[35 185]
[36 184]
[38 182]
[39 179]
[40 178]
[41 177]
[42 176]
[43 166]
[44 165]
[45 164]
[46 163]
[75 162]
[76 161]
[77 160]
[78 159]
[82 153]
[83 152]
[84 151]
[85 150]
[90 149]
[91 148]
[92 147]
[93 146]
[94 145]
[95 143]
[96 142]
[97 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
