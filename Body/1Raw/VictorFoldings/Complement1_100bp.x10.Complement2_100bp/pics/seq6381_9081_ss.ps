%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[41.90783691 467.90545654]
[34.07391739 480.70687866]
[25.23530960 492.83639526]
[15.44933510 504.21536255]
[4.77945948 514.77001953]
[-6.70511627 524.43182373]
[-18.92991066 533.13818359]
[-31.81563759 540.83264160]
[-45.27872849 547.46520996]
[-59.23187256 552.99298096]
[-73.58457184 557.38006592]
[-88.24374390 560.59796143]
[-103.11431122 562.62585449]
[-118.09984589 563.45062256]
[-133.10314941 563.06683350]
[-148.02691650 561.47705078]
[-162.77435303 558.69152832]
[-177.24983215 554.72833252]
[-191.35948181 549.61322021]
[-205.01174927 543.37927246]
[-218.11814880 536.06707764]
[-230.59362793 527.72387695]
[-242.35731506 518.40393066]
[-253.33290100 508.16757202]
[-263.44921875 497.08123779]
[-272.64062500 485.21682739]
[-280.84753418 472.65127563]
[-288.01672363 459.46609497]
[-294.10171509 445.74679565]
[-299.06298828 431.58233643]
[-302.86840820 417.06457520]
[-305.49328613 402.28768921]
[-306.92059326 387.34750366]
[-307.14108276 372.34091187]
[-306.15332031 357.36523438]
[-303.96371460 342.51760864]
[-300.58648682 327.89434814]
[-296.04348755 313.59024048]
[-290.36419678 299.69805908]
[-283.58547974 286.30795288]
[-275.75128174 273.50671387]
[-266.91241455 261.37738037]
[-257.12619019 249.99862671]
[-246.45608521 239.44424438]
[-234.97128296 229.78266907]
[-222.74630737 221.07658386]
[-209.86041260 213.38243103]
[-196.39717102 206.75012207]
[-182.44390869 201.22265625]
[-168.09111023 196.83590698]
[-153.43186951 193.61831665]
[-138.56124878 191.59072876]
[-123.57569885 190.76632690]
[-108.57241058 191.15043640]
[-93.64867401 192.74057007]
[-78.90129089 195.52642822]
[-64.42589569 199.48991394]
[-50.31637573 204.60536194]
[-36.66423416 210.83955383]
[-23.55800629 218.15209961]
[-11.08269978 226.49554443]
[-1.76781738 214.73828125]
[7.54706526 202.98103333]
[16.86194801 191.22378540]
[26.17683029 179.46653748]
[35.49171448 167.70927429]
[30.72126389 155.23991394]
[32.75144196 141.93493652]
[41.15767670 131.28576660]
[53.82820129 126.14025879]
[67.49372101 127.94149780]
[76.98262024 116.32423401]
[86.47151947 104.70697021]
[88.90633392 90.93876648]
[101.91121674 85.80413055]
[94.21506500 72.76593781]
[91.44925690 57.90921021]
[93.92861938 43.03060150]
[101.33487701 29.92268944]
[112.75733948 20.15801811]
[126.80484772 14.90045166]
[141.77519226 14.76646709]
[155.86137390 19.75293541]
[165.35026550 8.13567257]
[150.55967712 10.63338470]
[137.07481384 4.06387472]
[129.92520142 -9.12259293]
[131.77745056 -24.00779152]
[141.94073486 -35.03991318]
[156.62440491 -38.10424423]
[170.35179138 -32.05786514]
[178.00294495 -19.15593147]
[176.72370911 -4.20946264]
[187.52586365 -14.61683559]
[198.32801819 -25.02420807]
[209.13017273 -35.43158340]
[219.93232727 -45.83895493]
[210.49964905 -57.51431274]
[202.12045288 -69.96736145]
[194.85850525 -83.10331726]
[188.76907349 -96.82221985]
[183.89849854 -111.01964569]
[180.28387451 -125.58754730]
[177.95268250 -140.41505432]
[176.92266846 -155.38931274]
[177.20169067 -170.39636230]
[178.78761292 -185.32199097]
[181.66836548 -200.05258179]
[185.82200623 -214.47605896]
[191.21696472 -228.48262024]
[197.81213379 -241.96568298]
[205.55735779 -254.82263184]
[214.39367676 -266.95559692]
[224.25382996 -278.27224731]
[235.06278992 -288.68646240]
[246.73828125 -298.11898804]
[259.19143677 -306.49801636]
[272.32751465 -313.75976562]
[286.04647827 -319.84899902]
[300.24398804 -324.71939087]
[314.81192017 -328.33380127]
[329.63946533 -330.66479492]
[344.61373901 -331.69458008]
[359.62078857 -331.41534424]
[374.54638672 -329.82922363]
[389.27694702 -326.94827271]
[403.70037842 -322.79443359]
[417.70684814 -317.39926147]
[431.18981934 -310.80389404]
[444.04666138 -303.05850220]
[456.17950439 -294.22201538]
[467.49603271 -284.36169434]
[477.91009521 -273.55261230]
[487.34243774 -261.87698364]
[495.72128296 -249.42370605]
[502.98287964 -236.28753662]
[509.07189941 -222.56846619]
[513.94207764 -208.37091064]
[517.55633545 -193.80290222]
[519.88708496 -178.97532654]
[520.91668701 -164.00103760]
[520.63720703 -148.99400330]
[519.05090332 -134.06842041]
[516.16973877 -119.33789825]
[512.01568604 -104.91454315]
[506.62033081 -90.90812683]
[500.02478027 -77.42525482]
[492.27920532 -64.56852722]
[483.44253540 -52.43581009]
[473.58206177 -41.11943054]
[462.77282715 -30.70551872]
[451.09707642 -21.27333260]
[438.64367676 -12.89465618]
[425.50738525 -5.63325930]
[411.78823853 0.45559379]
[397.59060669 5.32556295]
[383.02255249 8.93958378]
[368.19494629 11.27015114]
[353.22064209 12.29952717]
[338.21362305 12.01987839]
[323.28805542 10.43333244]
[308.55758667 7.55196428]
[294.13427734 3.39770341]
[280.12792969 -1.99783325]
[266.64514160 -8.59358215]
[253.78854370 -16.33934402]
[241.65594482 -25.17616844]
[230.33970642 -35.03680038]
[219.53755188 -24.62942505]
[208.73539734 -14.22205257]
[197.93322754 -3.81467938]
[187.13107300 6.59269381]
[176.96752930 17.62457085]
[167.47863770 29.24183464]
[175.17703247 42.04885864]
[178.03460693 56.74455261]
[175.68750000 71.55892181]
[168.39993286 84.70095062]
[157.03459167 94.57511902]
[142.95054626 99.97509766]
[127.84072876 100.23114014]
[113.52848053 95.29302979]
[111.09366608 109.06123352]
[98.08878326 114.19586945]
[88.59988403 125.81313324]
[79.11098480 137.43038940]
[83.64190674 153.72660828]
[77.62644196 169.35720825]
[63.62014389 178.23332214]
[47.24896622 177.02416992]
[37.93408203 188.78141785]
[28.61919975 200.53866577]
[19.30431747 212.29591370]
[9.98943424 224.05316162]
[0.67455113 235.81042480]
[11.65036297 246.04652405]
[21.76691437 257.13262939]
[30.95859146 268.99682617]
[39.16578674 281.56219482]
[46.33526611 294.74722290]
[52.42053604 308.46640015]
[57.38213348 322.63073730]
[61.18787384 337.14840698]
[63.81307983 351.92523193]
[65.24072266 366.86538696]
[65.46154785 381.87197876]
[64.47411346 396.84768677]
[62.28483582 411.69534302]
[58.90790558 426.31869507]
[54.36523056 440.62292480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 195]
[62 194]
[63 193]
[64 192]
[65 191]
[66 190]
[71 186]
[72 185]
[73 184]
[75 182]
[83 174]
[84 173]
[93 172]
[94 171]
[95 170]
[96 169]
[97 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
