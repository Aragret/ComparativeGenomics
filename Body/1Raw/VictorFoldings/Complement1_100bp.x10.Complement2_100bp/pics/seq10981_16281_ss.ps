%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[92.03809357 506.74218750]
[82.61676788 494.94638062]
[76.72834015 481.04568481]
[74.80977631 466.07165527]
[77.00344849 451.13543701]
[83.14656067 437.34542847]
[92.78326416 425.72491455]
[105.19844818 417.13619995]
[119.47082520 412.21664429]
[118.57801056 397.24325562]
[117.68519592 382.26983643]
[116.79238129 367.29644775]
[115.89955902 352.32302856]
[107.41844177 340.07885742]
[114.32061768 325.84262085]
[102.56355286 335.15774536]
[87.91658783 331.92254639]
[81.17692566 318.52191162]
[87.31278992 304.83428955]
[101.80105591 300.94967651]
[113.96071625 309.73022461]
[114.18404388 294.73187256]
[114.40737152 279.73355103]
[113.51454926 264.76013184]
[104.14624023 253.18067932]
[109.97045898 238.47050476]
[107.96644592 223.60498047]
[105.96243286 208.73945618]
[92.57557678 205.09799194]
[81.55294800 196.60249329]
[74.57889557 184.50942993]
[72.73496246 170.62812805]
[76.33226013 157.05003357]
[84.85960388 145.83358765]
[97.05581665 138.69221497]
[95.27335358 123.79850769]
[93.49088287 108.90478516]
[82.30910492 118.90318298]
[67.49555206 116.54553223]
[59.97021484 103.56980896]
[65.28050232 89.54123688]
[79.51186371 84.80115509]
[92.17258453 92.84236908]
[91.50279999 77.85733032]
[90.83301544 62.87229538]
[90.16323090 47.88725662]
[79.89575195 32.60130310]
[88.58432007 17.35415077]
[87.69150543 2.38074517]
[86.79869080 -12.59266090]
[85.90587616 -27.56606674]
[77.36089325 -40.88124084]
[84.32693481 -54.04647827]
[83.43412018 -69.01988220]
[82.54129791 -83.99329376]
[72.04737091 -99.12467957]
[80.50797272 -114.49950409]
[79.39232635 -129.45796204]
[78.27667999 -144.41641235]
[77.16102600 -159.37486267]
[76.04537964 -174.33331299]
[74.92973328 -189.29176331]
[73.81407928 -204.25022888]
[65.07180023 -217.43670654]
[71.84106445 -230.70419312]
[70.61408234 -245.65393066]
[69.27584839 -260.59411621]
[60.33821487 -273.64895630]
[66.90918732 -287.01577759]
[65.57095337 -301.95596313]
[64.23271942 -316.89614868]
[62.89448547 -331.83633423]
[61.55625153 -346.77651978]
[60.21801758 -361.71670532]
[45.20581436 -362.00112915]
[30.31236458 -363.90701294]
[15.71229267 -367.41204834]
[1.57677555 -372.47509766]
[-11.92845535 -379.03680420]
[-24.64505768 -387.02023315]
[-36.42393494 -396.33178711]
[-47.12699127 -406.86230469]
[-56.62873077 -418.48834229]
[-64.81775665 -431.07351685]
[-71.59805298 -444.47033691]
[-76.89012909 -458.52172852]
[-80.63192749 -473.06289673]
[-82.77958679 -487.92343140]
[-83.30792999 -502.92901611]
[-82.21075439 -517.90380859]
[-79.50092316 -532.67211914]
[-75.21021271 -547.06091309]
[-69.38893127 -560.90142822]
[-62.10532761 -574.03143311]
[-53.44479370 -586.29687500]
[-43.50887680 -597.55413818]
[-32.41406631 -607.67102051]
[-20.29044342 -616.52911377]
[-7.28015327 -624.02441406]
[6.46426630 -630.06909180]
[20.78166962 -634.59228516]
[35.50419235 -637.54095459]
[50.45921707 -638.88049316]
[65.47140503 -638.59527588]
[80.36475372 -636.68853760]
[94.96463776 -633.18273926]
[109.09988403 -628.11895752]
[122.60475922 -621.55651855]
[135.32093811 -613.57238770]
[147.09930420 -604.26019287]
[157.80180359 -593.72912598]
[167.30291748 -582.10260010]
[175.49125671 -569.51696777]
[182.27082825 -556.11975098]
[187.56214905 -542.06811523]
[191.30317688 -527.52673340]
[193.45002747 -512.66607666]
[193.97756958 -497.66046143]
[192.87957764 -482.68576050]
[190.16896057 -467.91754150]
[185.87747192 -453.52899170]
[180.05545044 -439.68878174]
[172.77113342 -426.55920410]
[164.10993958 -414.29418945]
[154.17341614 -403.03750610]
[143.07806396 -392.92117310]
[130.95396423 -384.06375122]
[117.94327545 -376.56915283]
[104.19853210 -370.52520752]
[89.88088226 -366.00280762]
[75.15820312 -363.05493164]
[76.49643707 -348.11474609]
[77.83467102 -333.17456055]
[79.17290497 -318.23437500]
[80.51113892 -303.29418945]
[81.84937286 -288.35400391]
[90.69129181 -276.36776733]
[84.21603394 -261.93234253]
[85.55426788 -246.99215698]
[89.28198242 -240.61047363]
[86.79951477 -231.81983948]
[95.46199799 -219.70329285]
[88.77253723 -205.36587524]
[89.88818359 -190.40742493]
[91.00382996 -175.44895935]
[92.11948395 -160.49050903]
[93.23513031 -145.53205872]
[94.35077667 -130.57360840]
[95.46643066 -115.61515045]
[104.42477417 -107.48652649]
[105.47666168 -95.03352356]
[97.51470947 -84.88610840]
[98.40752411 -69.91269684]
[99.30033875 -54.93929291]
[107.78146362 -42.69511795]
[100.87928009 -28.45888138]
[101.77209473 -13.48547649]
[102.66490936 1.48792946]
[103.55773163 16.46133423]
[112.39405823 24.72243690]
[113.26042175 37.18972015]
[105.14826965 47.21747208]
[105.81805420 62.20251083]
[106.48783875 77.18754578]
[107.15762329 92.17258453]
[108.38460541 107.12232208]
[110.16706848 122.01603699]
[111.94953156 136.90975952]
[127.38573456 142.05345154]
[138.99194336 153.37332153]
[144.48002625 168.56678772]
[142.79895020 184.57482910]
[134.33578491 198.19790649]
[120.82796478 206.73544312]
[122.83197784 221.60096741]
[124.83599091 236.46649170]
[134.34764099 249.10923767]
[128.38008118 262.75613403]
[135.53199768 249.57090759]
[148.26638794 241.64402771]
[163.25451660 241.04759216]
[176.57853699 247.93748474]
[184.75556946 260.51269531]
[185.64816284 275.48611450]
[179.02297974 288.94372559]
[166.61186218 297.36770630]
[151.65901184 298.55612183]
[138.07307434 292.19824219]
[129.40570068 279.95687866]
[129.18237305 294.95520020]
[128.95904541 309.95355225]
[129.29402161 324.94979858]
[137.83900452 338.26498413]
[130.87297058 351.43020630]
[131.76577759 366.40362549]
[132.65859985 381.37704468]
[133.55142212 396.35043335]
[134.44422913 411.32385254]
[149.20007324 414.51251221]
[162.54789734 421.56506348]
[173.49719238 431.95809937]
[181.23547363 444.92044067]
[185.18847656 459.49014282]
[185.06289673 474.58605957]
[180.86802673 489.08798218]
[172.91516113 501.91973877]
[161.79444885 512.12921143]
[148.33114624 518.95867920]
[133.52429199 521.90142822]
[118.47266388 520.73901367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[15 192]
[21 191]
[22 190]
[23 189]
[24 178]
[26 176]
[27 175]
[28 174]
[35 168]
[36 167]
[37 166]
[43 165]
[44 164]
[45 163]
[46 162]
[48 159]
[49 158]
[50 157]
[51 156]
[53 154]
[54 153]
[55 152]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[65 141]
[66 139]
[67 138]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
