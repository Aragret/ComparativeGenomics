%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[157.69416809 442.81958008]
[168.28620911 432.04992676]
[181.48402405 424.70184326]
[178.16175842 410.07440186]
[174.83950806 395.44692993]
[171.51724243 380.81948853]
[168.19499207 366.19201660]
[164.87272644 351.56454468]
[161.55046082 336.93710327]
[158.01078796 322.36071777]
[154.25448608 307.83865356]
[150.49819946 293.31658936]
[146.74189758 278.79452515]
[142.76979065 264.33001709]
[138.58277893 249.92623901]
[134.39576721 235.52244568]
[123.41339874 225.46080017]
[126.99105835 210.04942322]
[122.80404663 195.64562988]
[117.91841888 190.10014343]
[118.66364288 180.99617004]
[114.69154358 166.53164673]
[110.71944427 152.06712341]
[106.10543823 137.79438782]
[100.85871887 123.74191284]
[95.61199951 109.68944550]
[89.33464050 96.06612396]
[82.06140900 82.94743347]
[74.78818512 69.82874298]
[67.51495361 56.71004486]
[52.66946030 59.55060959]
[37.69311142 57.66606140]
[24.05101967 51.25344467]
[13.07384014 40.95215607]
[5.82799196 27.78020477]
[3.01205826 13.03363037]
[4.88945150 -1.84102988]
[11.26382828 -15.38862991]
[21.49953842 -26.28776741]
[14.22630882 -39.40645981]
[6.95307970 -52.52515411]
[-0.32014978 -65.64385223]
[-7.59337950 -78.76254272]
[-19.69421005 -75.86123657]
[-32.12663651 -75.94777679]
[-44.16447449 -79.01181030]
[-55.10587311 -84.86920929]
[-64.31421661 -93.17315674]
[-71.25515747 -103.43465424]
[-75.52767181 -115.05131531]
[-76.88714600 -127.34275818]
[-75.25945282 -139.59040833]
[-70.74492645 -151.07954407]
[-63.61220932 -161.14099121]
[-54.28227615 -169.19010925]
[-60.76177216 -182.71846008]
[-73.70117950 -191.82243347]
[-72.22074127 -206.64328003]
[-78.70023346 -220.17163086]
[-85.17973328 -233.69998169]
[-91.65922546 -247.22831726]
[-98.13871765 -260.75665283]
[-111.07812500 -269.86065674]
[-109.59768677 -284.68148804]
[-122.53708649 -293.78546143]
[-121.05664825 -308.60632324]
[-127.53614807 -322.13467407]
[-134.01564026 -335.66302490]
[-140.49513245 -349.19137573]
[-154.83219910 -344.69363403]
[-169.66342163 -342.28213501]
[-184.68688965 -342.00598145]
[-199.59672546 -343.87075806]
[-214.08940125 -347.83856201]
[-227.86984253 -353.82855225]
[-240.65751648 -361.71881104]
[-252.19206238 -371.34872437]
[-262.23867798 -382.52218628]
[-270.59280396 -395.01174927]
[-277.08435059 -408.56314087]
[-281.58120728 -422.90048218]
[-283.99179077 -437.73187256]
[-284.26702881 -452.75534058]
[-282.40130615 -467.66506958]
[-278.43261719 -482.15750122]
[-272.44177246 -495.93756104]
[-264.55068970 -508.72476196]
[-254.92008972 -520.25872803]
[-243.74600220 -530.30462646]
[-231.25592041 -538.65795898]
[-217.70411682 -545.14868164]
[-203.36650085 -549.64465332]
[-188.53497314 -552.05432129]
[-173.51147461 -552.32861328]
[-158.60186768 -550.46197510]
[-144.10969543 -546.49237061]
[-130.32998657 -540.50067139]
[-117.54329681 -532.60882568]
[-106.00994110 -522.97753906]
[-95.96471405 -511.80279541]
[-87.61212921 -499.31219482]
[-81.12224579 -485.76000977]
[-76.62716675 -471.42211914]
[-74.21842957 -456.59042358]
[-73.94506073 -441.56692505]
[-75.81262207 -426.65744019]
[-79.78310394 -412.16549683]
[-85.77566528 -398.38616943]
[-93.66830444 -385.59997559]
[-103.30033875 -374.06719971]
[-114.47566986 -364.02267456]
[-126.96678925 -355.67086792]
[-120.48729706 -342.14251709]
[-114.00779724 -328.61416626]
[-107.52830505 -315.08581543]
[-95.05236053 -306.94949341]
[-96.06934357 -291.16098022]
[-83.59339142 -283.02465820]
[-84.61037445 -267.23617554]
[-78.13088226 -253.70782471]
[-71.65138245 -240.17947388]
[-65.17189026 -226.65112305]
[-58.69239426 -213.12278748]
[-46.21644592 -204.98643494]
[-47.23342896 -189.19795227]
[-40.75393295 -175.66960144]
[-23.21618080 -177.93611145]
[-5.93561029 -174.07170105]
[9.00625992 -164.52520752]
[19.80393028 -150.43089294]
[25.14608765 -133.47370911]
[24.37484360 -115.68785095]
[17.56670189 -99.21276093]
[5.52531481 -86.03577423]
[12.79854393 -72.91707611]
[20.07177353 -59.79838562]
[27.34500313 -46.67969131]
[34.61823273 -33.56099701]
[49.28484344 -36.46813583]
[64.15206146 -34.69723892]
[77.76239777 -28.40924072]
[88.77767181 -18.20852089]
[96.11057281 -5.08483648]
[99.03198242 9.68270874]
[97.24346161 24.65032578]
[90.90766144 38.35069656]
[80.63364410 49.43681717]
[87.90687561 62.55551147]
[95.18010712 75.67420197]
[102.45333862 88.79290009]
[104.32013702 73.90951538]
[113.29955292 61.89410400]
[127.04438019 55.88746262]
[141.96176147 57.45971298]
[154.15231323 66.19986725]
[160.42945862 79.82328033]
[159.15238953 94.76882172]
[150.65489197 107.12975311]
[137.15823364 113.67496490]
[122.19036865 112.69355774]
[109.66447449 104.44272614]
[114.91119385 118.49519348]
[120.15790558 132.54766846]
[127.35364532 119.38630676]
[141.70890808 115.03582764]
[155.00033569 121.98838043]
[159.61399841 136.26123047]
[152.90698242 149.67822266]
[138.72137451 154.55352783]
[125.18396759 148.09501648]
[129.15606689 162.55953979]
[133.12815857 177.02407837]
[137.20782471 191.45861816]
[141.39483643 205.86241150]
[152.67669678 216.95429993]
[148.79956055 231.33543396]
[152.98657227 245.73922729]
[157.17358398 260.14300537]
[161.67396545 264.98635864]
[162.87283325 270.54150391]
[161.26394653 275.03823853]
[165.02024841 289.56030273]
[168.77655029 304.08236694]
[172.53285217 318.60443115]
[176.88703918 323.57962036]
[177.91996765 329.16799927]
[176.17793274 333.61483765]
[179.50018311 348.24227905]
[182.82244873 362.86975098]
[186.14469910 377.49722290]
[189.46696472 392.12466431]
[192.78923035 406.75213623]
[196.11148071 421.37960815]
[211.18858337 422.30572510]
[225.39355469 427.44335938]
[237.57487488 436.37600708]
[246.74505615 448.37954712]
[252.16072083 462.48086548]
[253.38281250 477.53686523]
[250.31230164 492.32702637]
[243.19807434 505.65234375]
[232.61686707 516.43261719]
[219.42643738 523.79394531]
[204.69607544 527.13958740]
[189.61991882 526.19830322]
[175.42010498 521.04638672]
[163.24777222 512.10156250]
[154.08964539 500.08880615]
[148.68817139 485.98205566]
[147.48118591 470.92483521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 193]
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 184]
[11 183]
[12 182]
[13 181]
[14 178]
[15 177]
[16 176]
[18 174]
[19 173]
[21 172]
[22 171]
[23 170]
[24 163]
[25 162]
[26 161]
[27 150]
[28 149]
[29 148]
[30 147]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[55 126]
[56 125]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[64 117]
[66 115]
[67 114]
[68 113]
[69 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
