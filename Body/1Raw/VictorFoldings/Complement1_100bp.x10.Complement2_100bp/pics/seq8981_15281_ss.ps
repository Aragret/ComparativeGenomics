%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[68.02428436 474.34375000]
[58.48901367 462.72753906]
[50.79163742 449.81985474]
[45.10412216 435.90908813]
[41.55352402 421.30596924]
[40.21916199 406.33676147]
[41.13085556 391.33587646]
[44.26822662 376.63845825]
[49.56119156 362.57281494]
[56.89150238 349.45318604]
[66.09539795 337.57272339]
[76.96726227 327.19674683]
[89.26420593 318.55715942]
[102.71150970 311.84689331]
[117.00876617 307.21591187]
[114.56304169 292.41662598]
[112.11731720 277.61737061]
[109.67158508 262.81808472]
[97.82180786 249.87399292]
[104.44869232 232.69360352]
[101.78289795 217.93238831]
[97.24706268 232.23016357]
[88.56616974 244.46298218]
[76.56761932 253.46492004]
[62.39503479 258.37792969]
[47.39925385 258.73376465]
[33.00958633 254.49851990]
[20.59755707 246.07583618]
[11.34620571 234.26852417]
[6.13731050 220.20199585]
[5.46735001 205.21696472]
[9.40018082 190.74171448]
[17.56095123 178.15592957]
[29.17182732 168.65922546]
[43.12613678 163.15673828]
[58.09384155 162.17295837]
[72.64831543 165.80163574]
[85.40232086 173.69691467]
[95.14022064 185.10626221]
[100.93414307 198.94331360]
[102.27237701 184.00312805]
[103.61061096 169.06294250]
[104.94884491 154.12275696]
[103.49942780 139.19294739]
[99.31241608 124.78916931]
[95.12540436 110.38539124]
[90.00852966 124.48565674]
[78.59090424 134.21385193]
[63.85707092 137.02706909]
[49.65841675 132.18989563]
[39.70642853 120.96680450]
[36.60254288 106.29145050]
[41.15810013 91.99995422]
[52.18229294 81.82807159]
[66.79341888 78.43471527]
[81.17217255 82.70688629]
[91.55954742 93.52709198]
[89.55553436 78.66156006]
[87.55152130 63.79603195]
[85.54750824 48.93050385]
[75.78235626 40.50407410]
[74.41925049 28.08128357]
[81.64675903 18.38129997]
[79.86428833 3.48758197]
[78.08182526 -11.40613556]
[76.29936218 -26.29985237]
[72.64889526 -31.81217194]
[72.37184143 -37.48846054]
[74.69236755 -41.66268921]
[73.35413361 -56.60287476]
[72.01589966 -71.54306030]
[70.67766571 -86.48324585]
[61.74002838 -99.53810120]
[68.31100464 -112.90490723]
[66.97277069 -127.84509277]
[51.96068192 -128.18754578]
[37.08133698 -130.20869446]
[22.52185249 -133.88311768]
[8.46533203 -139.16462708]
[-4.91144848 -145.98677063]
[-17.44026184 -154.26377869]
[-28.96354675 -163.89154053]
[-39.33638382 -174.74899292]
[-48.42832184 -186.69958496]
[-56.12502670 -199.59303284]
[-62.32969666 -213.26716614]
[-66.96430969 -227.55003357]
[-69.97056580 -242.26202393]
[-71.31067657 -257.21810913]
[-70.96778107 -272.23016357]
[-68.94618225 -287.10946655]
[-65.27131653 -301.66882324]
[-59.98939896 -315.72518921]
[-53.16684723 -329.10177612]
[-44.88946533 -341.63034058]
[-35.26135254 -353.15332031]
[-24.40358925 -363.52584839]
[-12.45272636 -372.61743164]
[0.44094345 -380.31375122]
[14.11526775 -386.51800537]
[28.39827728 -391.15219116]
[43.11034775 -394.15802002]
[58.06646347 -395.49768066]
[73.07852936 -395.15432739]
[87.95775604 -393.13229370]
[102.51702118 -389.45700073]
[116.57321930 -384.17465210]
[129.94960022 -377.35168457]
[142.47792053 -369.07394409]
[154.00062561 -359.44546509]
[164.37280273 -348.58740234]
[173.46403503 -336.63626099]
[181.15997314 -323.74237061]
[187.36381531 -310.06787109]
[191.99757385 -295.78469849]
[195.00296021 -281.07254028]
[196.34217834 -266.11639404]
[195.99836731 -251.10433960]
[193.97589111 -236.22517395]
[190.30015564 -221.66603088]
[185.01739502 -207.60997009]
[178.19404602 -194.23381042]
[169.91590881 -181.70573425]
[160.28710938 -170.18331909]
[149.42872620 -159.81144714]
[137.47732544 -150.72058105]
[124.58319092 -143.02503967]
[110.90849304 -136.82159424]
[96.62520599 -132.18826294]
[81.91295624 -129.18331909]
[83.25119019 -114.24314117]
[92.09310913 -102.25690460]
[85.61785126 -87.82147980]
[86.95608521 -72.88129425]
[88.29431915 -57.94110870]
[89.63255310 -43.00092316]
[91.19307709 -28.08231926]
[92.97554016 -13.18860149]
[94.75801086 1.70511603]
[96.54047394 16.59883308]
[107.80045319 30.05913925]
[100.41303253 46.92649078]
[102.41704559 61.79201889]
[104.42105865 76.65754700]
[106.42507172 91.52307129]
[109.52918243 106.19837952]
[113.71619415 120.60215759]
[117.90320587 135.00593567]
[120.52283478 120.23645782]
[126.43425751 106.45041656]
[135.32737732 94.37099457]
[146.73567200 84.63185120]
[160.06068420 77.74389648]
[174.60342407 74.06844330]
[189.60098267 73.79830933]
[204.26664734 76.94766235]
[217.83106995 83.35129547]
[229.58268738 92.67327881]
[238.90504456 104.42461395]
[245.30909729 117.98883057]
[248.45890808 132.65438843]
[248.18923950 147.65197754]
[244.51423645 162.19482422]
[237.62669373 175.52005005]
[227.88790894 186.92864990]
[215.80876160 195.82212830]
[202.02290344 201.73399353]
[187.25349426 204.35408020]
[172.27534485 203.54495239]
[157.87414551 199.34907532]
[144.80535889 191.98654175]
[133.75456238 181.84356689]
[125.30144501 169.45225525]
[119.88903046 155.46099854]
[118.55079651 170.40118408]
[117.21256256 185.34136963]
[115.87432861 200.28155518]
[116.54411316 215.26658630]
[119.20990753 230.02780151]
[129.34156799 238.00979614]
[131.25802612 250.35932922]
[124.47085571 260.37237549]
[126.91658783 275.17163086]
[129.36231995 289.97091675]
[131.80804443 304.77017212]
[146.83506775 304.55505371]
[161.72628784 306.58206177]
[176.14906311 310.80596924]
[189.78115845 317.13241577]
[202.31802368 325.42001343]
[213.47959900 335.48364258]
[223.01652527 347.09851074]
[230.71574402 360.00509644]
[236.40524292 373.91503906]
[239.95791626 388.51766968]
[241.29440308 403.48666382]
[240.38485718 418.48770142]
[237.24957275 433.18557739]
[231.95861816 447.25195312]
[224.63017273 460.37261963]
[215.42796326 472.25442505]
[204.55758667 482.63189697]
[192.26187134 491.27328491]
[178.81552124 497.98544312]
[164.51892090 502.61846924]
[149.69146729 505.06884766]
[134.66441345 505.28186035]
[119.77347565 503.25271606]
[105.35131073 499.02673340]
[91.72011566 492.69836426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 185]
[16 184]
[17 183]
[18 182]
[20 179]
[21 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 148]
[45 147]
[46 146]
[57 145]
[58 144]
[59 143]
[60 142]
[63 140]
[64 139]
[65 138]
[66 137]
[69 136]
[70 135]
[71 134]
[72 133]
[74 131]
[75 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
