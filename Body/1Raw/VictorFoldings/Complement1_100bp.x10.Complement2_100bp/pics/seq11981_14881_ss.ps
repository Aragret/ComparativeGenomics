%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[24.29658127 361.35690308]
[22.61112213 376.27279663]
[19.55657196 390.96954346]
[15.15899467 405.32177734]
[9.45590782 419.20700073]
[2.49596906 432.50674438]
[-5.66144037 445.10760498]
[-14.94672203 456.90200806]
[-25.28065681 467.78936768]
[-36.57507706 477.67675781]
[-48.73361969 486.47985840]
[-61.65254974 494.12353516]
[-75.22164917 500.54260254]
[-89.32514191 505.68225098]
[-103.84270477 509.49865723]
[-118.65047455 511.95928955]
[-133.62211609 513.04309082]
[-148.62988281 512.74084473]
[-163.54576111 511.05514526]
[-178.24244690 508.00033569]
[-192.59458923 503.60253906]
[-206.47972107 497.89920044]
[-219.77937317 490.93905640]
[-232.38008118 482.78143311]
[-244.17434692 473.49594116]
[-255.06152344 463.16183472]
[-264.94873047 451.86724854]
[-273.75161743 439.70855713]
[-281.39508057 426.78948975]
[-287.81393433 413.22030640]
[-292.95333862 399.11672974]
[-296.76950073 384.59909058]
[-299.22988892 369.79129028]
[-300.31344604 354.81961060]
[-300.01095581 339.81185913]
[-298.32498169 324.89602661]
[-295.26995850 310.19937134]
[-290.87188721 295.84729004]
[-285.16833496 281.96228027]
[-278.20794678 268.66271973]
[-270.05014038 256.06216431]
[-260.76446533 244.26805115]
[-250.43016052 233.38104248]
[-239.13540649 223.49401855]
[-226.97657776 214.69132996]
[-214.05738831 207.04808044]
[-200.48806763 200.62947083]
[-186.38441467 195.49029541]
[-171.86671448 191.67436218]
[-157.05886841 189.21424866]
[-142.08718872 188.13093567]
[-127.07942200 188.43368530]
[-112.16362000 190.11988831]
[-97.46702576 193.17517090]
[-83.11502838 197.57345581]
[-69.23009491 203.27723694]
[-55.93067169 210.23785400]
[-43.33023071 218.39588928]
[-31.53628349 227.68176270]
[-21.20961380 216.80242920]
[-10.88294506 205.92309570]
[-7.73270273 191.36543274]
[7.37972927 186.68302917]
[10.52997208 172.12538147]
[25.64240456 167.44296265]
[35.96907425 156.56362915]
[46.29574203 145.68429565]
[56.62240982 134.80496216]
[66.94908142 123.92562866]
[77.27574921 113.04629517]
[87.60241699 102.16696167]
[97.68355560 91.05972290]
[107.51413727 79.73013306]
[117.34471893 68.40053558]
[127.17530060 57.07094574]
[112.43398285 59.84469986]
[98.49354553 54.30717850]
[89.67357635 42.17424393]
[88.70703888 27.20541573]
[95.89342499 14.03894997]
[109.00595856 6.75461864]
[123.98157501 7.60955095]
[136.17991638 16.33883667]
[141.82119751 30.23761177]
[139.15728760 44.99942017]
[144.39884949 30.07170868]
[159.06364441 27.46539879]
[170.31974792 17.55074692]
[181.57583618 7.63609552]
[192.83193970 -2.27855539]
[183.73197937 -14.21085644]
[175.49639893 -26.75533867]
[168.16619873 -39.84950256]
[161.77792358 -53.42811966]
[156.36338806 -67.42353821]
[151.94955444 -81.76602936]
[148.55842590 -96.38414001]
[146.20690918 -111.20503998]
[144.90669250 -126.15490723]
[144.66427612 -141.15924072]
[145.48085022 -156.14331055]
[147.35235596 -171.03244019]
[150.26948547 -185.75247192]
[154.21766663 -200.23007202]
[159.17726135 -214.39309692]
[165.12356567 -228.17098999]
[172.02691650 -241.49513245]
[179.85296631 -254.29911804]
[188.56269836 -266.51916504]
[198.11271667 -278.09439087]
[208.45547485 -288.96713257]
[219.53941345 -299.08322144]
[231.30931091 -308.39224243]
[243.70655823 -316.84783936]
[256.66937256 -324.40789795]
[270.13317871 -331.03472900]
[284.03091431 -336.69531250]
[298.29330444 -341.36148071]
[312.84930420 -345.00994873]
[327.62643433 -347.62258911]
[342.55102539 -349.18630981]
[357.54873657 -349.69338989]
[372.54489136 -349.14129639]
[387.46472168 -347.53271484]
[402.23391724 -344.87573242]
[416.77890015 -341.18356323]
[431.02722168 -336.47457886]
[444.90789795 -330.77227783]
[458.35171509 -324.10504150]
[471.29177856 -316.50610352]
[483.66357422 -308.01330566]
[495.40548706 -298.66897583]
[506.45898438 -288.51962280]
[516.76904297 -277.61587524]
[526.28424072 -266.01202393]
[534.95721436 -253.76586914]
[542.74481201 -240.93844604]
[549.60809326 -227.59364319]
[555.51300049 -213.79794312]
[560.43005371 -199.62008667]
[564.33471680 -185.13069153]
[567.20764160 -170.40196228]
[569.03442383 -155.50727844]
[569.80596924 -140.52082825]
[569.51849365 -125.51728821]
[568.17340088 -110.57140350]
[565.77734375 -95.75762177]
[562.34234619 -81.14976501]
[557.88549805 -66.82059479]
[552.42895508 -52.84150314]
[545.99987793 -39.28213501]
[538.63043213 -26.21004105]
[530.35717773 -13.69034958]
[521.22143555 -1.78543222]
[511.26867676 9.44540119]
[500.54849243 19.94619751]
[489.11431885 29.66464424]
[477.02307129 38.55232239]
[464.33502197 46.56495285]
[451.11337280 53.66261673]
[437.42398071 59.80995560]
[423.33508301 64.97634125]
[408.91683960 69.13603973]
[394.24108887 72.26831818]
[379.38092041 74.35758209]
[364.41043091 75.39340973]
[349.40414429 75.37065887]
[334.43685913 74.28942108]
[319.58312988 72.15510559]
[304.91693115 68.97832489]
[290.51135254 64.77491760]
[276.43820190 59.56582642]
[262.76751709 53.37699890]
[249.56745911 46.23926544]
[236.90376282 38.18819046]
[224.83953857 29.26388168]
[213.43487549 19.51080322]
[202.74658203 8.97754002]
[191.49049377 18.89219093]
[180.23439026 28.80684280]
[168.97830200 38.72149277]
[164.54185486 52.94004440]
[149.07194519 56.25551605]
[138.50488281 66.90152740]
[128.67431641 78.23111725]
[118.84372711 89.56071472]
[109.01314545 100.89030457]
[108.73773956 104.73693085]
[106.76813507 108.44348145]
[103.20491028 111.25603485]
[98.48175049 112.49362946]
[88.15508270 123.37296295]
[77.82841492 134.25228882]
[67.50174713 145.13163757]
[57.17507553 156.01097107]
[46.84840775 166.89030457]
[36.52173996 177.76963806]
[32.63286209 193.10545349]
[18.25906372 197.00968933]
[14.37018871 212.34550476]
[-0.00361117 216.24975586]
[-10.33027935 227.12908936]
[-20.65694809 238.00842285]
[-10.76935768 249.30268860]
[-1.96605980 261.46109009]
[5.67783689 274.37988281]
[12.09711552 287.94888306]
[17.23700905 302.05227661]
[21.05366325 316.56979370]
[23.51451683 331.37750244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 203]
[60 202]
[61 201]
[63 199]
[65 197]
[66 196]
[67 195]
[68 194]
[69 193]
[70 192]
[71 191]
[72 187]
[73 186]
[74 185]
[75 184]
[85 183]
[87 181]
[88 180]
[89 179]
[90 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
