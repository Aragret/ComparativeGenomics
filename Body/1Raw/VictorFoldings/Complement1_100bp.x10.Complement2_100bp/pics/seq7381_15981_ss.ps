%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[177.98611450 502.20001221]
[175.76100159 487.36596680]
[173.53588867 472.53192139]
[171.31076050 457.69787598]
[168.86503601 442.89862061]
[158.98902893 431.74902344]
[164.15058899 416.79345703]
[161.48480225 402.03222656]
[158.81900024 387.27102661]
[155.93373108 372.55114746]
[152.82962036 357.87582397]
[149.72550964 343.20053101]
[146.62139893 328.52523804]
[143.51728821 313.84991455]
[140.41317749 299.17462158]
[130.20956421 288.32400513]
[134.92356873 273.22140503]
[124.71996307 262.37078857]
[129.43395996 247.26818848]
[126.32984924 232.59288025]
[123.22573853 217.91758728]
[120.12162781 203.24227905]
[116.58196259 188.66590881]
[105.75060272 178.44186401]
[109.55731964 163.08544922]
[105.58522797 148.62092590]
[94.75386810 138.39688110]
[98.56058502 123.04046631]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[85.48793793 86.34191132]
[86.96424866 79.10020447]
[83.42457581 64.52382660]
[79.88490295 49.94745255]
[67.65216827 44.31053925]
[60.99663162 32.82514572]
[62.15419769 19.79663277]
[70.47908020 9.96170235]
[67.15682220 -4.66575766]
[63.83456039 -19.29321861]
[60.51229858 -33.92067719]
[57.19004059 -48.54813766]
[53.86777878 -63.17559814]
[50.34908295 -48.59414673]
[44.08998489 -34.96242905]
[35.32448578 -22.79008102]
[24.38029480 -12.53217411]
[11.66656590 -4.57220554]
[-2.34138870 0.79223424]
[-17.11987114 3.36059141]
[-32.11637497 3.03684640]
[-46.77025223 -0.16689730]
[-60.53364563 -6.13086557]
[-72.89201355 -14.63209057]
[-83.38331604 -25.35274887]
[-91.61534119 -37.89204025]
[-97.28031921 -51.78117371]
[-100.16645813 -66.50089264]
[-100.16587067 -81.50089264]
[-97.27857208 -96.22039032]
[-91.61249542 -110.10907745]
[-83.37949371 -122.64772034]
[-72.88734436 -133.36755371]
[-60.52830887 -141.86781311]
[-46.76444626 -147.83068848]
[-32.11031723 -151.03327942]
[-17.11378670 -151.35585022]
[-2.33550715 -148.78633118]
[11.67202568 -143.42079163]
[24.38512802 -135.45982361]
[35.32851410 -125.20104980]
[44.09305191 -113.02801514]
[50.35107803 -99.39580536]
[53.86777878 -84.82011414]
[57.19004059 -99.44757843]
[60.40331268 -114.09936523]
[63.50742340 -128.77467346]
[66.61153412 -143.44996643]
[68.61554718 -158.31549072]
[61.71336746 -172.55174255]
[70.19448853 -184.79591370]
[71.08730316 -199.76931763]
[71.98011780 -214.74272156]
[72.87294006 -229.71612549]
[73.76575470 -244.68952942]
[74.65856934 -259.66293335]
[75.55138397 -274.63635254]
[73.47097778 -278.44763184]
[72.78098297 -282.33200073]
[73.33364868 -285.84341431]
[74.85152435 -288.62957764]
[76.96930695 -290.46618652]
[78.75177002 -305.35989380]
[80.53424072 -320.25360107]
[82.31670380 -335.14733887]
[83.76612091 -350.07714844]
[84.88177490 -365.03558350]
[85.99742126 -379.99404907]
[72.07290649 -385.94271851]
[60.83605576 -396.09219360]
[53.50576019 -409.34155273]
[50.87716293 -424.25360107]
[53.23538208 -439.21078491]
[60.32462692 -452.59066772]
[71.37590027 -462.94189453]
[85.19045258 -469.14166260]
[100.26977539 -470.51742554]
[114.97817993 -466.91998291]
[127.72020721 -458.73956299]
[137.11369324 -446.86349487]
[142.13972473 -432.58001709]
[142.25308228 -417.43847656]
[137.44149780 -403.08135986]
[128.22688293 -391.06597900]
[115.60876465 -382.69567871]
[100.95587158 -378.87838745]
[99.84022522 -363.91995239]
[98.72457886 -348.96148682]
[100.73602295 -346.06555176]
[101.44474030 -342.05148315]
[100.34046173 -337.54217529]
[97.21041870 -333.36486816]
[95.42795563 -318.47116089]
[93.64549255 -303.57742310]
[91.86302185 -288.68371582]
[90.52478790 -273.74353027]
[89.63197327 -258.77011108]
[88.73915863 -243.79672241]
[87.84634399 -228.82331848]
[86.95352936 -213.84989929]
[86.06070709 -198.87649536]
[85.16789246 -183.90309143]
[92.13393402 -170.73785400]
[83.58895111 -157.42268372]
[93.14350891 -168.98600769]
[107.16484833 -174.31536865]
[121.98782349 -172.01768494]
[133.73774719 -162.69355774]
[139.34321594 -148.78030396]
[137.33897400 -133.91481018]
[128.24893188 -121.98287201]
[114.44919586 -116.10348511]
[99.54698944 -117.81349182]
[87.43770599 -126.66590881]
[81.28683472 -140.34585571]
[78.18272400 -125.67055511]
[75.07861328 -110.99525452]
[76.76988220 -103.80071259]
[71.81749725 -96.12532043]
[68.49523926 -81.49785614]
[68.49523926 -66.49785614]
[71.81749725 -51.87039948]
[75.13976288 -37.24293900]
[78.46202087 -22.61547852]
[81.78427887 -7.98801756]
[85.10653687 6.63944292]
[99.70703125 14.98596001]
[103.83470154 31.63760185]
[94.46128082 46.40777969]
[98.00095367 60.98415756]
[101.54061890 75.56053162]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.02510834 119.06836700]
[124.14057922 130.32701111]
[120.04975128 144.64881897]
[124.02184296 159.11335754]
[135.13731384 170.37199402]
[131.04647827 184.69380188]
[134.24249268 187.63310242]
[136.14553833 191.08895874]
[136.75198364 194.59147644]
[136.21121216 197.71784973]
[134.79693604 200.13816833]
[137.90104675 214.81347656]
[141.00515747 229.48876953]
[144.10926819 244.16407776]
[154.53489685 256.06436157]
[149.59887695 270.11727905]
[160.02450562 282.01757812]
[155.08848572 296.07052612]
[158.19259644 310.74581909]
[161.29669189 325.42111206]
[164.40080261 340.09640503]
[167.50491333 354.77172852]
[170.60902405 369.44702148]
[174.73672485 374.61169434]
[175.51908875 380.24063110]
[173.58021545 384.60522461]
[176.24601746 399.36645508]
[178.91180420 414.12765503]
[188.97850037 426.33306885]
[183.62625122 440.23281860]
[187.59834290 445.51809692]
[188.21276855 451.16781616]
[186.14480591 455.47277832]
[188.36993408 470.30682373]
[190.59504700 485.14086914]
[192.82015991 499.97491455]
[207.29850769 504.93835449]
[217.80339050 516.06970215]
[221.92083740 530.81097412]
[218.70471191 545.77478027]
[208.89404297 557.52252197]
[194.74325562 563.35461426]
[179.50410461 561.93103027]
[166.67842102 553.57873535]
[159.21347046 540.21710205]
[158.82461548 524.91656494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 197]
[5 194]
[7 192]
[8 191]
[9 190]
[10 187]
[11 186]
[12 185]
[13 184]
[14 183]
[15 182]
[17 180]
[19 178]
[20 177]
[21 176]
[22 175]
[23 170]
[25 168]
[26 167]
[28 165]
[29 164]
[31 163]
[33 162]
[34 161]
[35 160]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[44 152]
[75 151]
[76 150]
[77 148]
[78 147]
[79 146]
[80 135]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[87 128]
[88 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
