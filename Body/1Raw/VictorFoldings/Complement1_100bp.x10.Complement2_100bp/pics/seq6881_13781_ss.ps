%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[196.87884521 398.70748901]
[199.82582092 383.98562622]
[204.29553223 369.65246582]
[210.23899841 355.86505127]
[217.59109497 342.77444458]
[226.27128601 330.52404785]
[236.18446350 319.24810791]
[247.22200012 309.07019043]
[238.26130676 297.04080200]
[229.30061340 285.01141357]
[220.33992004 272.98205566]
[211.37922668 260.95266724]
[196.65002441 259.05886841]
[187.39125061 246.98699951]
[189.47752380 231.55052185]
[180.51683044 219.52113342]
[166.70881653 213.93649292]
[164.66987610 198.24722290]
[155.70918274 186.21784973]
[146.74847412 174.18847656]
[137.78778076 162.15908813]
[128.73777771 150.19676208]
[119.59898376 138.30212402]
[110.46018219 126.40749359]
[103.89228058 123.01861572]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[77.73448944 82.66426849]
[70.09833527 77.65159607]
[68.73152161 70.38842773]
[61.17084122 65.26261139]
[59.91231155 57.97990036]
[51.31374741 45.68906403]
[37.06311035 38.81666183]
[36.10721970 23.95276070]
[27.50865555 11.66192341]
[18.91009140 -0.62891459]
[4.65945339 -7.50131512]
[3.70356297 -22.36521530]
[-4.89500093 -34.65605545]
[-13.49356461 -46.94689178]
[-22.09212875 -59.23772812]
[-30.69069290 -71.52856445]
[-39.28925705 -83.81940460]
[-47.88782120 -96.11024475]
[-56.48638535 -108.40108490]
[-65.08494568 -120.69191742]
[-73.68350983 -132.98275757]
[-82.28207397 -145.27359009]
[-95.29314423 -137.78962708]
[-108.91473389 -131.48487854]
[-123.04024506 -126.40869141]
[-137.55911255 -122.60079956]
[-152.35771179 -120.09098816]
[-167.32022095 -118.89891815]
[-182.32952881 -119.03391266]
[-197.26817322 -120.49491882]
[-212.01922607 -123.27050018]
[-226.46725464 -127.33892822]
[-240.49917603 -132.66836548]
[-254.00515747 -139.21710205]
[-266.87951660 -146.93388367]
[-279.02148438 -155.75831604]
[-290.33599854 -165.62132263]
[-300.73455811 -176.44572449]
[-310.13574219 -188.14682007]
[-318.46597290 -200.63299561]
[-325.66009521 -213.80654907]
[-331.66174316 -227.56436157]
[-336.42401123 -241.79878235]
[-339.90954590 -256.39837646]
[-342.09115601 -271.24893188]
[-342.95172119 -286.23413086]
[-342.48449707 -301.23678589]
[-340.69314575 -316.13943481]
[-337.59170532 -330.82543945]
[-333.20443726 -345.17987061]
[-327.56567383 -359.09036255]
[-320.71957397 -372.44805908]
[-312.71969604 -385.14843750]
[-303.62863159 -397.09207153]
[-293.51757812 -408.18548584]
[-282.46560669 -418.34188843]
[-270.55929565 -427.48171997]
[-257.89175415 -435.53353882]
[-244.56219482 -442.43426514]
[-230.67488098 -448.12988281]
[-216.33853149 -452.57586670]
[-201.66534424 -455.73739624]
[-186.77015686 -457.58969116]
[-171.76954651 -458.11831665]
[-156.78092957 -457.31909180]
[-141.92158508 -455.19830322]
[-127.30783844 -451.77252197]
[-113.05405426 -447.06854248]
[-99.27178955 -441.12326050]
[-86.06890106 -433.98312378]
[-73.54873657 -425.70404053]
[-61.80928040 -416.35083008]
[-50.94240570 -405.99664307]
[-41.03316879 -394.72259521]
[-32.15911865 -382.61685181]
[-24.38971519 -369.77420044]
[-17.78576088 -356.29510498]
[-12.39894199 -342.28512573]
[-8.27141857 -327.85388184]
[-5.43549538 -313.11428833]
[-3.91336727 -298.18176270]
[-3.71694756 -283.17312622]
[-4.84777308 -268.20587158]
[-7.29699373 -253.39710999]
[-11.04544067 -238.86277771]
[-16.06377602 -224.71661377]
[-22.31272507 -211.06933594]
[-29.74337959 -198.02775574]
[-38.29758453 -185.69392395]
[-47.90838623 -174.16439819]
[-58.50057220 -163.52938843]
[-69.99124146 -153.87216187]
[-61.39267349 -141.58131409]
[-52.79410934 -129.29048157]
[-44.19554520 -116.99964905]
[-35.59698105 -104.70880890]
[-26.99841881 -92.41796875]
[-18.39985466 -80.12712860]
[-9.80129051 -67.83629608]
[-1.20272696 -55.54545593]
[7.39583731 -43.25461960]
[15.99440098 -30.96377945]
[29.63001251 -24.97050285]
[31.20092964 -9.22747898]
[39.79949188 3.06335950]
[48.39805603 15.35419750]
[62.03366852 21.34747505]
[63.60458755 37.09049988]
[72.20314789 49.38133621]
[80.89297485 61.60782242]
[89.76387024 73.70357513]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[122.35481262 117.26869202]
[131.49362183 129.16331482]
[140.63241577 141.05795288]
[148.34236145 145.95639038]
[149.81715393 153.19839478]
[158.77786255 165.22776794]
[167.73855591 177.25715637]
[176.69924927 189.28652954]
[191.14819336 195.73158264]
[192.54620361 210.56044006]
[201.50689697 222.58981323]
[216.89459229 225.00993347]
[225.81063843 237.33708191]
[223.40859985 251.99197388]
[232.36929321 264.02136230]
[241.32998657 276.05072021]
[250.29069519 288.08010864]
[259.25137329 300.10949707]
[272.16311646 292.44757080]
[285.80502319 286.17730713]
[300.02761841 281.36740112]
[314.67507935 278.07049561]
[329.58694458 276.32278442]
[344.59979248 276.14337158]
[359.54913330 277.53424072]
[374.27120972 280.48013306]
[388.60467529 284.94879150]
[402.39254761 290.89123535]
[415.48370361 298.24240112]
[427.73471069 306.92169189]
[439.01138306 316.83404541]
[449.19012451 327.87084961]
[458.15942383 339.91116333]
[465.82101440 352.82308960]
[472.09094238 366.46514893]
[476.90051270 380.68786621]
[480.19705200 395.33541870]
[481.94442749 410.24731445]
[482.12347412 425.26016235]
[480.73223877 440.20947266]
[477.78598022 454.93145752]
[473.31695557 469.26483154]
[467.37417603 483.05255127]
[460.02270508 496.14352417]
[451.34310913 508.39434814]
[441.43048096 519.67077637]
[430.39343262 529.84924316]
[418.35290527 538.81823730]
[405.44079590 546.47949219]
[391.79858398 552.74914551]
[377.57574463 557.55834961]
[362.92813110 560.85455322]
[348.01620483 562.60150146]
[333.00332642 562.78021240]
[318.05404663 561.38861084]
[303.33212280 558.44201660]
[288.99884033 553.97265625]
[275.21130371 548.02954102]
[262.12048340 540.67773438]
[249.86990356 531.99786377]
[238.59371948 522.08496094]
[228.41551208 511.04763794]
[219.44679260 499.00689697]
[211.78584290 486.09460449]
[205.51657104 472.45223999]
[200.70767212 458.22927856]
[197.41184998 443.58157349]
[195.66522217 428.66961670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[15 153]
[16 152]
[18 150]
[19 149]
[20 148]
[21 147]
[22 145]
[23 144]
[24 143]
[26 142]
[28 140]
[29 139]
[31 138]
[33 137]
[34 136]
[36 134]
[37 133]
[38 132]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
[50 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
