%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[63.88872528 647.33941650]
[49.22787857 650.53765869]
[34.38615417 652.74951172]
[19.42983055 653.96514893]
[4.42571497 654.17907715]
[-10.55918407 653.39031982]
[-25.45793724 651.60247803]
[-40.20400620 648.82348633]
[-54.73152542 645.06579590]
[-68.97561646 640.34613037]
[-82.87265778 634.68560791]
[-96.36058044 628.10949707]
[-109.37915039 620.64721680]
[-121.87021637 612.33197021]
[-133.77798462 603.20104980]
[-145.04928589 593.29516602]
[-155.63377380 582.65850830]
[-165.48417664 571.33868408]
[-174.55648804 559.38616943]
[-182.81019592 546.85437012]
[-190.20845032 533.79931641]
[-196.71818542 520.27923584]
[-202.31034851 506.35452271]
[-206.95994568 492.08740234]
[-210.64620972 477.54159546]
[-213.35269165 462.78204346]
[-215.06730652 447.87469482]
[-215.78237915 432.88610840]
[-215.49472046 417.88320923]
[-214.20561218 402.93304443]
[-211.92083740 388.10235596]
[-208.65055847 373.45742798]
[-204.40942383 359.06359863]
[-199.21633911 344.98519897]
[-193.09452820 331.28509521]
[-186.07130432 318.02450562]
[-178.17807007 305.26260376]
[-169.45004272 293.05642700]
[-159.92622375 281.46047974]
[-149.64913940 270.52655029]
[-138.66470337 260.30346680]
[-127.02196503 250.83688354]
[-114.77293396 242.16911316]
[-101.97229767 234.33883667]
[-88.67725372 227.38104248]
[-74.94715881 221.32679749]
[-60.84334946 216.20314026]
[-46.42881012 212.03297424]
[-31.76792336 208.83489990]
[-16.92616844 206.62321472]
[-1.96983123 205.40779114]
[13.03428745 205.19406128]
[28.01917648 205.98297119]
[42.91790771 207.77101135]
[57.66394043 210.55017090]
[61.42024231 196.02812195]
[65.17654419 181.50605774]
[68.93283844 166.98399353]
[55.49214554 173.64340210]
[41.23574829 168.97917175]
[34.33035660 155.66317749]
[38.73170090 141.32344055]
[51.91848373 134.17440796]
[66.33672333 138.31135559]
[73.72686768 151.36354065]
[78.76378632 137.23451233]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[85.34534454 95.38825226]
[70.86487579 99.30182648]
[56.03216553 97.06785583]
[43.34677887 89.06278992]
[34.94643021 76.63563538]
[32.24672699 61.88058472]
[35.70261765 47.28411865]
[44.73171616 35.30599976]
[57.81246948 27.96475029]
[72.74053955 26.49750328]
[87.00027466 31.15151405]
[98.18867493 41.14249802]
[104.42028809 54.78680038]
[104.64466095 69.78674316]
[112.30525970 56.89041901]
[119.96585846 43.99409485]
[127.62644958 31.09776688]
[125.20511627 18.42890930]
[131.85113525 7.84523773]
[143.53979492 4.73045397]
[151.39155579 -8.05038834]
[159.24330139 -20.83123207]
[147.27015686 -29.88656425]
[136.22686768 -40.05521393]
[126.21656799 -51.24223328]
[117.33271790 -63.34317017]
[109.65826416 -76.24504089]
[103.26486206 -89.82738495]
[98.21221161 -103.96337128]
[94.54748535 -118.52102661]
[92.30490112 -133.36442566]
[91.50539398 -148.35496521]
[92.15643311 -163.35267639]
[94.25194550 -178.21754456]
[97.77235413 -192.81077576]
[102.68479156 -206.99610901]
[108.94339752 -220.64108276]
[116.48973083 -233.61830139]
[125.25333405 -245.80661011]
[135.15237427 -257.09219360]
[146.09443665 -267.36968994]
[157.97735596 -276.54312134]
[170.69015503 -284.52685547]
[184.11416626 -291.24633789]
[198.12403870 -296.63882446]
[212.58897400 -300.65399170]
[227.37388611 -303.25430298]
[242.34075928 -304.41552734]
[257.34982300 -304.12680054]
[272.26095581 -302.39080811]
[286.93493652 -299.22378540]
[301.23474121 -294.65527344]
[315.02685547 -288.72793579]
[328.18249512 -281.49716187]
[340.57882690 -273.03039551]
[352.10015869 -263.40670776]
[362.63882446 -252.71600342]
[372.09652710 -241.05804443]
[380.38485718 -228.54170227]
[387.42651367 -215.28385925]
[393.15570068 -201.40826416]
[397.51895142 -187.04450989]
[400.47549438 -172.32667542]
[401.99774170 -157.39221191]
[402.07147217 -142.38055420]
[400.69604492 -127.43184662]
[397.88421631 -112.68568420]
[393.66232300 -98.27974701]
[388.06973267 -84.34854126]
[381.15869141 -71.02214050]
[372.99371338 -58.42497635]
[363.65103149 -46.67466736]
[353.21786499 -35.88092041]
[341.79168701 -26.14452171]
[329.47912598 -17.55637741]
[316.39514160 -10.19667435]
[302.66192627 -4.13413143]
[288.40771484 0.57464671]
[273.76556396 3.88569427]
[258.87219238 5.76809597]
[243.86669922 6.20427608]
[228.88914490 5.19016218]
[214.07939148 2.73522234]
[199.57571411 -1.13762105]
[185.51353455 -6.39220762]
[172.02415466 -12.97947598]
[164.17239380 -0.19863318]
[156.32063293 12.58220959]
[156.78765869 30.12498093]
[140.52278137 38.75836182]
[132.86218262 51.65468979]
[125.20158386 64.55101776]
[117.54098511 77.44734192]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[92.89281464 142.27142334]
[87.85589600 156.40045166]
[83.45490265 170.74029541]
[79.69860077 185.26235962]
[75.94229889 199.78442383]
[72.18599701 214.30647278]
[86.43014526 219.02595520]
[100.32726288 224.68630981]
[113.81526947 231.26223755]
[126.83393097 238.72439575]
[139.32510376 247.03942871]
[151.23298645 256.17022705]
[162.50440979 266.07598877]
[173.08903503 276.71249390]
[182.93957520 288.03222656]
[192.01203918 299.98461914]
[200.26591492 312.51629639]
[207.66432190 325.57128906]
[214.17422485 339.09127808]
[219.76655579 353.01589966]
[224.41633606 367.28295898]
[228.10279846 381.82870483]
[230.80946350 396.58822632]
[232.52426147 411.49557495]
[233.23951721 426.48416138]
[232.95204163 441.48703003]
[231.66313171 456.43722534]
[229.37854004 471.26794434]
[226.10845947 485.91293335]
[221.86749268 500.30679321]
[216.67459106 514.38525391]
[210.55294800 528.08544922]
[203.52989197 541.34613037]
[195.63681030 554.10809326]
[186.90893555 566.31439209]
[177.38526917 577.91046143]
[167.10832214 588.84454346]
[156.12400818 599.06774902]
[144.48139954 608.53448486]
[132.23246765 617.20239258]
[119.43193817 625.03283691]
[106.13697815 631.99078369]
[92.40695953 638.04522705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 173]
[56 172]
[57 171]
[58 170]
[65 169]
[66 168]
[67 167]
[68 166]
[70 164]
[84 163]
[85 162]
[86 161]
[87 160]
[90 158]
[91 157]
[92 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
