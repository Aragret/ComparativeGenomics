%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[-13.20191002 760.26611328]
[-27.58257675 764.54418945]
[-42.16897964 768.05737305]
[-56.92046356 770.79577637]
[-71.79591370 772.75195312]
[-86.75386810 773.92028809]
[-101.75263214 774.29754639]
[-116.75041199 773.88275146]
[-131.70539856 772.67700195]
[-146.57591248 770.68371582]
[-161.32049561 767.90838623]
[-175.89807129 764.35876465]
[-190.26800537 760.04473877]
[-204.39022827 754.97839355]
[-218.22538757 749.17376709]
[-231.73493958 742.64709473]
[-244.88119507 735.41650391]
[-257.62756348 727.50225830]
[-269.93844604 718.92626953]
[-281.77960205 709.71258545]
[-293.11801147 699.88677979]
[-303.92202759 689.47625732]
[-314.16159058 678.51007080]
[-323.80810547 667.01879883]
[-332.83474731 655.03442383]
[-341.21633911 642.59039307]
[-348.92950439 629.72131348]
[-355.95272827 616.46313477]
[-362.26647949 602.85278320]
[-367.85311890 588.92816162]
[-372.69711304 574.72814941]
[-376.78494263 560.29223633]
[-380.10519409 545.66070557]
[-382.64865112 530.87438965]
[-384.40820312 515.97436523]
[-385.37896729 501.00231934]
[-385.55819702 485.99987793]
[-384.94543457 471.00888062]
[-383.54235840 456.07110596]
[-381.35287476 441.22821045]
[-378.38311768 426.52154541]
[-374.64135742 411.99209595]
[-370.13800049 397.68038940]
[-364.88562012 383.62628174]
[-358.89883423 369.86895752]
[-352.19436646 356.44677734]
[-344.79086304 343.39709473]
[-336.70898438 330.75634766]
[-327.97125244 318.55975342]
[-318.60198975 306.84127808]
[-308.62734985 295.63360596]
[-298.07513428 284.96795654]
[-286.97473145 274.87408447]
[-275.35708618 265.38009644]
[-263.25457764 256.51248169]
[-250.70094299 248.29592896]
[-237.73117065 240.75334167]
[-224.38140869 233.90576172]
[-210.68887329 227.77226257]
[-196.69172668 222.36994934]
[-182.42897034 217.71385193]
[-167.94035339 213.81698608]
[-153.26628113 210.69018555]
[-138.44763184 208.34216309]
[-123.52572632 206.77947998]
[-108.54213715 206.00650024]
[-93.53863525 206.02534485]
[-78.55703735 206.83598328]
[-63.63910294 208.43615723]
[-48.82640457 210.82139587]
[-34.16023254 213.98506165]
[-19.68146133 217.91833496]
[-5.43044853 222.61024475]
[8.55308533 228.04772949]
[22.23016739 234.21560669]
[29.10957909 220.88618469]
[35.98899078 207.55676270]
[42.86840439 194.22732544]
[49.74781799 180.89790344]
[56.62723160 167.56846619]
[63.50664139 154.23904419]
[62.46813202 139.38067627]
[75.67285919 130.66598511]
[82.55226898 117.33656311]
[89.43168640 104.00713348]
[75.47814178 109.51155090]
[60.92567825 105.87481689]
[51.20200729 94.45333862]
[49.93381119 79.50704193]
[57.59410477 66.61053467]
[71.32577515 60.57388687]
[86.00726318 63.64862442]
[96.16272736 74.68794250]
[98.00421143 89.57559967]
[106.41883087 77.15810394]
[114.83345032 64.74060822]
[116.16980743 48.97594452]
[129.71467590 42.78031540]
[138.12928772 30.36281967]
[126.75897980 20.55300331]
[116.60442352 9.48948097]
[107.80295563 -2.67812848]
[100.47360992 -15.78527069]
[94.71549988 -29.65468788]
[90.60650635 -44.09880829]
[88.20218658 -58.92229462]
[87.53506470 -73.92467499]
[88.61415863 -88.90306854]
[91.42488098 -103.65489197]
[95.92921448 -117.98065186]
[102.06624603 -131.68661499]
[109.75297546 -144.58741760]
[118.88545227 -156.50859070]
[129.34016418 -167.28890991]
[140.97573853 -176.78260803]
[153.63479614 -184.86125183]
[167.14616394 -191.41561890]
[181.32708740 -196.35707092]
[195.98580933 -199.61875916]
[210.92405701 -201.15657043]
[225.93984985 -200.94973755]
[240.83007812 -199.00103760]
[255.39338684 -195.33682251]
[269.43283081 -190.00665283]
[282.75851440 -183.08261108]
[295.19027710 -174.65834045]
[306.55993652 -164.84776306]
[316.71374512 -153.78356934]
[325.51440430 -141.61537170]
[332.84286499 -128.50773621]
[338.60006714 -114.63793945]
[342.70809937 -100.19354248]
[345.11141968 -85.36989594]
[345.77752686 -70.36746979]
[344.69744873 -55.38915634]
[341.88574219 -40.63751602]
[337.38043213 -26.31205368]
[331.24249268 -12.60650253]
[323.55490112 0.29378611]
[314.42163086 12.21434975]
[303.96618652 22.99397659]
[292.32998657 32.48688507]
[279.67037964 40.56469345]
[266.15859985 47.11816025]
[251.97734070 52.05865479]
[237.31840515 55.31936646]
[222.38005066 56.85619354]
[207.36427307 56.64835358]
[192.47416687 54.69865799]
[177.91110229 51.03347397]
[163.87202454 45.70236588]
[150.54678345 38.77743912]
[142.13217163 51.19493484]
[141.39768982 66.07141876]
[127.25094604 73.15522766]
[118.83632660 85.57272339]
[110.42170715 97.99021912]
[102.76111603 110.88654327]
[95.88169861 124.21597290]
[89.00228882 137.54541016]
[89.54873657 153.35717773]
[76.83607483 161.11845398]
[69.95665741 174.44787598]
[63.07724762 187.77731323]
[56.19783401 201.10673523]
[49.31842041 214.43617249]
[42.43901062 227.76559448]
[35.55959702 241.09503174]
[48.51046371 248.67001343]
[61.04351044 256.91793823]
[73.12380219 265.81579590]
[84.71767426 275.33880615]
[95.79280853 285.46038818]
[106.31832886 296.15237427]
[116.26491547 307.38497925]
[125.60482788 319.12683105]
[134.31204224 331.34524536]
[142.36230469 344.00616455]
[149.73313904 357.07431030]
[156.40403748 370.51321411]
[162.35639954 384.28546143]
[167.57362366 398.35266113]
[172.04118347 412.67559814]
[175.74659729 427.21435547]
[178.67958069 441.92837524]
[180.83192444 456.77670288]
[182.19764709 471.71792603]
[182.77293396 486.71041870]
[182.55618286 501.71237183]
[181.54798889 516.68194580]
[179.75119019 531.57751465]
[177.17077637 546.35742188]
[173.81393433 560.98059082]
[169.69001770 575.40625000]
[164.81053162 589.59411621]
[159.18908691 603.50469971]
[152.84132385 617.09924316]
[145.78495789 630.33984375]
[138.03965759 643.18957520]
[129.62698364 655.61260986]
[120.57040405 667.57440186]
[110.89516449 679.04150391]
[100.62821960 689.98205566]
[89.79819489 700.36547852]
[78.43526459 710.16290283]
[66.57111359 719.34698486]
[54.23880386 727.89215088]
[41.47270203 735.77453613]
[28.30839729 742.97222900]
[14.78257656 749.46508789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[81 162]
[83 160]
[84 159]
[85 158]
[94 157]
[95 156]
[96 155]
[98 153]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
