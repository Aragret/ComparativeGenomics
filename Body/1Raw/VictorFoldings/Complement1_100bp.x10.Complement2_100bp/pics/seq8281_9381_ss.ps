%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[43.06115723 517.08258057]
[37.23686600 502.92858887]
[38.66896057 487.69021606]
[47.02835083 474.86917114]
[60.39411545 467.41162109]
[59.94750977 452.41827393]
[59.50090408 437.42492676]
[56.15964508 430.83267212]
[59.16093826 422.20538330]
[58.93761063 407.20706177]
[58.71428299 392.20870972]
[47.51685333 402.18957520]
[32.53426743 401.46704102]
[22.34922791 390.45498657]
[22.79619408 375.46166992]
[33.61911774 365.07589722]
[48.61814117 365.24713135]
[59.20077515 375.87640381]
[60.31642151 360.91793823]
[61.43207169 345.95950317]
[62.54772186 331.00103760]
[60.53627014 328.10510254]
[59.82756042 324.09103394]
[60.93183899 319.58172607]
[64.06187439 315.40441895]
[65.84434509 300.51068115]
[67.62680817 285.61697388]
[60.39929962 275.91699219]
[61.76240921 263.49420166]
[71.52755737 255.06777954]
[73.53157043 240.20223999]
[75.53558350 225.33671570]
[69.56802368 211.68983459]
[79.07967377 199.04708862]
[81.08368683 184.18154907]
[83.08769989 169.31602478]
[85.09171295 154.45050049]
[79.12415314 140.80361938]
[88.63580322 128.16087341]
[90.63981628 113.29534149]
[83.87030029 97.94770813]
[94.26747894 84.78430939]
[85.82485962 97.18278503]
[74.14036560 106.58876801]
[60.22481918 112.18855286]
[45.28205872 113.49770355]
[30.60477829 110.40296173]
[17.46271133 103.17205048]
[6.99277782 92.43051910]
[0.10073207 79.10761261]
[-2.61719561 64.35591125]
[-0.92587680 49.45156479]
[5.02837229 35.68395996]
[14.73044968 24.24413109]
[27.34102821 16.12173653]
[41.76916885 12.01944351]
[56.76668930 12.29214287]
[71.03615570 16.91624260]
[83.34311676 25.49171257]
[92.62290192 37.27668762]
[98.07270813 51.25165176]
[99.22132111 66.20411682]
[97.50036621 50.47679138]
[109.60056305 41.79148483]
[107.87960052 26.06415558]
[119.97979736 17.37884903]
[125.84875488 3.57467270]
[124.12779999 -12.15265560]
[136.22799683 -20.83796310]
[142.09695435 -34.64213943]
[147.96591187 -48.44631577]
[153.83486938 -62.25049210]
[159.70384216 -76.05467224]
[165.57279968 -89.85884857]
[171.44175720 -103.66302490]
[177.31071472 -117.46720123]
[182.97351074 -131.35722351]
[188.42886353 -145.33003235]
[193.88421631 -159.30282593]
[199.33956909 -173.27561951]
[204.69076538 -187.28865051]
[209.93748474 -201.34111023]
[196.38688660 -207.79640198]
[183.45046997 -215.40814209]
[171.22669983 -224.11840820]
[159.80860901 -233.86091614]
[149.28308105 -244.56150818]
[139.73022461 -256.13876343]
[131.22276306 -268.50451660]
[123.82543945 -281.56472778]
[117.59454346 -295.21997070]
[112.57749939 -309.36630249]
[108.81249237 -323.89605713]
[106.32817078 -338.69866943]
[105.14345551 -353.66149902]
[105.26734924 -368.67062378]
[106.69892120 -383.61184692]
[109.42726898 -398.37142944]
[113.43162537 -412.83706665]
[118.68151855 -426.89862061]
[125.13699341 -440.44912720]
[132.74891663 -453.38543701]
[141.45935059 -465.60910034]
[151.20202637 -477.02706909]
[161.90275574 -487.55242920]
[173.48013306 -497.10510254]
[185.84603882 -505.61239624]
[198.90634155 -513.00952148]
[212.56166077 -519.24023438]
[226.70805359 -524.25708008]
[241.23786926 -528.02191162]
[256.04052734 -530.50604248]
[271.00335693 -531.69049072]
[286.01248169 -531.56640625]
[300.95367432 -530.13464355]
[315.71322632 -527.40606689]
[330.17880249 -523.40155029]
[344.24032593 -518.15142822]
[357.79074097 -511.69577026]
[370.72692871 -504.08364868]
[382.95046997 -495.37304688]
[394.36828613 -485.63021851]
[404.89349365 -474.92935181]
[414.44601440 -463.35183716]
[422.95315552 -450.98580933]
[430.35009766 -437.92541504]
[436.58062744 -424.26998901]
[441.59725952 -410.12353516]
[445.36187744 -395.59365845]
[447.84576416 -380.79095459]
[449.03005981 -365.82812500]
[448.90576172 -350.81900024]
[447.47375488 -335.87780762]
[444.74499512 -321.11831665]
[440.74023438 -306.65277100]
[435.48995972 -292.59133911]
[429.03408813 -279.04101562]
[421.42181396 -266.10494995]
[412.71102905 -253.88153076]
[402.96804810 -242.46385193]
[392.26699829 -231.93876648]
[380.68936157 -222.38641357]
[368.32324219 -213.87947083]
[355.26272583 -206.48269653]
[341.60720825 -200.25236511]
[327.46069336 -195.23591614]
[312.93075562 -191.47152710]
[298.12802124 -188.98782349]
[283.16516113 -187.80374146]
[268.15603638 -187.92826843]
[253.21488953 -189.36045837]
[238.45541382 -192.08943176]
[223.98994446 -196.09439087]
[218.74322510 -182.04193115]
[219.34854126 -174.67610168]
[213.31237793 -167.82026672]
[207.85700989 -153.84747314]
[202.40165710 -139.87466431]
[196.94630432 -125.90187073]
[198.00942993 -121.24581909]
[196.15893555 -115.87248993]
[191.11489868 -111.59824371]
[185.24592590 -97.79405975]
[179.37696838 -83.98988342]
[173.50801086 -70.18570709]
[167.63905334 -56.38153076]
[161.77009583 -42.57735443]
[155.90112305 -28.77317810]
[150.03216553 -14.96900177]
[152.17291260 -0.22904031]
[139.65293884 9.44363308]
[133.78396606 23.24781036]
[135.92471313 37.98777390]
[123.40473938 47.66044617]
[125.54548645 62.40040588]
[113.02550507 72.07308197]
[109.16119385 86.56677246]
[115.79479218 96.13948059]
[114.32477570 107.69284821]
[105.50534821 115.29935455]
[103.50133514 130.16488647]
[109.32555389 144.87504578]
[99.95724487 156.45451355]
[97.95323181 171.32003784]
[95.94921875 186.18556213]
[93.94519806 201.05110168]
[99.76942444 215.76126099]
[90.40110779 227.34072876]
[88.39709473 242.20625305]
[86.39308167 257.07177734]
[93.78050232 273.93914795]
[82.52052307 287.39944458]
[80.73806000 302.29315186]
[78.95558929 317.18688965]
[77.50617218 332.11669922]
[76.39052582 347.07513428]
[75.27487946 362.03359985]
[74.15922546 376.99203491]
[73.71262360 391.98538208]
[73.93595123 406.98373413]
[74.15927887 421.98205566]
[74.49425507 436.97833252]
[74.94085693 451.97167969]
[75.38746643 466.96502686]
[89.17341614 473.61380005]
[98.28110504 485.91455078]
[100.61766815 501.04064941]
[95.64616394 515.51623535]
[84.50901794 526.01495361]
[69.76545715 530.12420654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[9 201]
[10 200]
[11 199]
[18 198]
[19 197]
[20 196]
[21 195]
[25 194]
[26 193]
[27 192]
[30 190]
[31 189]
[32 188]
[34 186]
[35 185]
[36 184]
[37 183]
[39 181]
[40 180]
[42 177]
[62 176]
[64 174]
[66 172]
[67 171]
[69 169]
[70 168]
[71 167]
[72 166]
[73 165]
[74 164]
[75 163]
[76 162]
[77 159]
[78 158]
[79 157]
[80 156]
[81 154]
[82 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
