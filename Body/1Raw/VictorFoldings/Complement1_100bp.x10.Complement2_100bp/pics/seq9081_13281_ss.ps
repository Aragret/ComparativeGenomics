%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[155.81628418 775.74194336]
[141.81526184 770.34930420]
[128.12387085 764.21295166]
[114.78160858 757.35052490]
[101.82693481 749.78179932]
[89.29719543 741.52862549]
[77.22851562 732.61480713]
[65.65570831 723.06604004]
[54.61213303 712.90985107]
[44.12962341 702.17553711]
[34.23841476 690.89398193]
[24.96702194 679.09777832]
[16.34217453 666.82092285]
[8.38874435 654.09881592]
[1.12965989 640.96813965]
[-5.41414738 627.46673584]
[-11.22381020 613.63354492]
[-16.28257751 599.50848389]
[-20.57586288 585.13226318]
[-24.09128952 570.54626465]
[-26.81871796 555.79260254]
[-28.75028992 540.91381836]
[-29.88043022 525.95281982]
[-30.20588493 510.95269775]
[-29.72571182 495.95675659]
[-28.44129944 481.00820923]
[-26.35634613 466.15014648]
[-23.47686768 451.42541504]
[-19.81116676 436.87646484]
[-15.36980820 422.54525757]
[-10.16560078 408.47311401]
[-4.21354961 394.70062256]
[2.46918488 381.26742554]
[9.86333370 368.21234131]
[17.94757843 355.57296753]
[26.69861031 343.38574219]
[36.09119415 331.68579102]
[46.09825516 320.50689697]
[56.69093704 309.88125610]
[67.83869171 299.83950806]
[79.50939178 290.41064453]
[91.66937256 281.62179565]
[104.28358459 273.49832153]
[117.31564331 266.06365967]
[130.72799683 259.33920288]
[144.48194885 253.34440613]
[139.23522949 239.29193115]
[127.53492737 230.07498169]
[129.95643616 214.44018555]
[124.70970917 200.38772583]
[119.46299744 186.33525085]
[114.21627808 172.28277588]
[108.96955872 158.23030090]
[101.77381897 171.39166260]
[87.41856384 175.74214172]
[74.12713623 168.78959656]
[69.51346588 154.51675415]
[76.22048187 141.09974670]
[90.40608978 136.22444153]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[71.80078888 75.62305450]
[58.55403519 71.93284607]
[46.72750854 64.94165802]
[37.12623596 55.13305664]
[30.40177727 43.18212509]
[27.00801468 29.90900421]
[27.17051697 16.22260094]
[30.87156677 3.05835962]
[37.85181427 -8.68567848]
[47.62844849 -18.21014023]
[59.52857590 -24.86872482]
[55.98890305 -39.44509888]
[52.44923019 -54.02147675]
[41.67390442 -65.60607147]
[46.18933487 -79.79974365]
[31.18104744 -78.83930969]
[16.23401260 -80.49981689]
[1.80245495 -84.73080444]
[-11.67506695 -91.40370178]
[-23.78898811 -100.31571960]
[-34.17117691 -111.19603729]
[-42.50613403 -123.71400452]
[-48.54056549 -137.48922729]
[-52.09109497 -152.10308838]
[-53.04982758 -167.11148071]
[-51.38762283 -182.05833435]
[-47.15499496 -196.48941040]
[-40.48057175 -209.96617126]
[-31.56718063 -222.07908630]
[-20.68568802 -232.46003723]
[-8.16677094 -240.79357910]
[5.60913515 -246.82644653]
[20.22339630 -250.37532043]
[35.23189926 -251.33233643]
[50.17855835 -249.66844177]
[64.60915375 -245.43418884]
[78.08516693 -238.75822449]
[90.19705963 -229.84346008]
[100.57678223 -218.96080017]
[108.90889740 -206.44093323]
[114.94020844 -192.66433716]
[118.48742676 -178.04968262]
[119.44274902 -163.04106140]
[117.77715302 -148.09460449]
[113.54125977 -133.66447449]
[106.86377716 -120.18923187]
[97.94763947 -108.07834625]
[87.06378937 -97.69985199]
[74.54298401 -89.36915588]
[60.76570892 -83.33941650]
[71.28785706 -72.79741669]
[67.02560425 -57.56114578]
[70.56527710 -42.98477173]
[74.10494995 -28.40839577]
[90.38008118 -27.43976974]
[105.57855225 -21.48722839]
[118.21138000 -11.12158012]
[127.03713226 2.65342379]
[131.18389893 18.49827003]
[130.23544312 34.86793900]
[124.27291870 50.16257095]
[113.86811829 62.88380051]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[123.02202606 152.98358154]
[128.26875305 167.03605652]
[133.51547241 181.08853149]
[138.76217651 195.14100647]
[144.00889587 209.19346619]
[156.08448792 219.41554260]
[153.28770447 234.04521179]
[158.53442383 248.09768677]
[172.85169983 243.61164856]
[187.38912964 239.90057373]
[202.10481262 236.97517395]
[216.95629883 234.84388733]
[231.90077209 233.51283264]
[246.89515686 232.98588562]
[261.89620972 233.26454163]
[276.86065674 234.34800720]
[291.74539185 236.23315430]
[306.50747681 238.91455078]
[321.10433960 242.38446045]
[335.49392700 246.63287354]
[349.63473511 251.64755249]
[363.48596191 257.41403198]
[377.00769043 263.91567993]
[390.16098022 271.13378906]
[402.90780640 279.04748535]
[415.21151733 287.63397217]
[427.03659058 296.86853027]
[438.34890747 306.72451782]
[449.11590576 317.17346191]
[459.30651855 328.18530273]
[468.89135742 339.72827148]
[477.84277344 351.76907349]
[486.13497925 364.27301025]
[493.74404907 377.20401001]
[500.64807129 390.52481079]
[506.82714844 404.19699097]
[512.26342773 418.18112183]
[516.94122314 432.43692017]
[520.84704590 446.92321777]
[523.96972656 461.59829712]
[526.30017090 476.41986084]
[527.83166504 491.34512329]
[528.55981445 506.33105469]
[528.48254395 521.33447266]
[527.60003662 536.31213379]
[525.91479492 551.22082520]
[523.43182373 566.01757812]
[520.15814209 580.65972900]
[516.10321045 595.10504150]
[511.27880859 609.31188965]
[505.69876099 623.23925781]
[499.37918091 636.84704590]
[492.33828735 650.09600830]
[484.59637451 662.94793701]
[476.17578125 675.36578369]
[467.10076904 687.31372070]
[457.39752197 698.75732422]
[447.09402466 709.66357422]
[436.21994019 720.00103760]
[424.80667114 729.73992920]
[412.88708496 738.85217285]
[400.49557495 747.31146240]
[387.66787720 755.09344482]
[374.44094849 762.17565918]
[360.85293579 768.53765869]
[346.94302368 774.16107178]
[332.75131226 779.02984619]
[318.31872559 783.12976074]
[303.68688965 786.44909668]
[288.89794922 788.97827148]
[273.99459839 790.70996094]
[259.01974487 791.63922119]
[244.01663208 791.76330566]
[229.02848816 791.08190918]
[214.09851074 789.59692383]
[199.26977539 787.31274414]
[184.58502197 784.23590088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 141]
[47 140]
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[60 133]
[61 132]
[62 131]
[64 129]
[65 128]
[76 119]
[77 118]
[78 117]
[80 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
