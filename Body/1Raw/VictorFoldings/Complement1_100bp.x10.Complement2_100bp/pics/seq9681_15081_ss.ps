%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[47.93815231 290.49060059]
[55.68933487 303.39846802]
[60.58706665 317.63595581]
[62.41724014 332.58065796]
[61.09984970 347.57925415]
[56.69248199 361.97610474]
[49.38781357 375.14178467]
[39.50516891 386.50079346]
[27.47657394 395.55654907]
[13.82787132 401.91314697]
[-0.84427857 405.29275513]
[-15.89847183 405.54760742]
[-30.67660522 402.66653442]
[-44.53263855 396.77554321]
[-56.86085129 388.13211060]
[-67.12229919 377.11410522]
[-74.86840820 364.20318604]
[-79.76053619 349.96380615]
[-81.58483124 335.01837158]
[-80.26153564 320.02029419]
[-75.84851074 305.62518311]
[-68.53865814 292.46237183]
[-58.65154648 281.10723877]
[-46.61939240 272.05624390]
[-32.96818924 265.70498657]
[-18.29471016 262.33114624]
[-3.24041772 262.08224487]
[11.53658009 264.96911621]
[17.40554047 251.16493225]
[23.27450180 237.36074829]
[29.14346313 223.55657959]
[35.01242447 209.75239563]
[40.77845764 195.90490723]
[46.44124222 182.01487732]
[46.05551147 174.63430786]
[52.29312515 167.96122742]
[39.11974716 175.13493347]
[24.15185738 174.15397644]
[12.02742004 165.32232666]
[6.50332403 151.37657166]
[9.29127121 136.63793945]
[19.52738571 125.67335510]
[34.03989410 121.88032532]
[48.33193970 126.43416595]
[57.97497940 137.92379761]
[59.98096848 152.78932190]
[67.64156342 139.89299011]
[75.30216217 126.99665833]
[82.96276093 114.10033417]
[90.62335968 101.20401001]
[90.51309204 95.95979309]
[93.34891510 91.02709961]
[98.70891571 88.04258728]
[99.57530212 72.24512482]
[112.92970276 65.64896393]
[120.97087097 52.98643494]
[128.14624023 39.81396103]
[134.42359924 26.19064331]
[140.70095825 12.56732750]
[146.97831726 -1.05598855]
[153.25567627 -14.67930508]
[159.53303528 -28.30261993]
[165.50460815 -42.06272507]
[171.16738892 -55.95275116]
[176.83018494 -69.84278107]
[174.87525940 -85.54273987]
[186.84480286 -94.40724182]
[192.50758362 -108.29726410]
[178.98812866 -114.80634308]
[165.89501953 -122.13534546]
[153.27793884 -130.25646973]
[141.18472290 -139.13891602]
[129.66125488 -148.74899292]
[118.75125885 -159.05023193]
[108.49610901 -170.00355530]
[98.93470764 -181.56742859]
[90.10332489 -193.69798279]
[82.03546143 -206.34921265]
[74.76172638 -219.47309875]
[68.30970764 -233.01986694]
[62.70388031 -246.93814087]
[57.96551132 -261.17510986]
[54.11256790 -275.67678833]
[51.15967560 -290.38815308]
[49.11803055 -305.25338745]
[47.99538040 -320.21612549]
[47.79597855 -335.21957397]
[48.52058411 -350.20684814]
[50.16645050 -365.12109375]
[52.72733307 -379.90573120]
[56.19351578 -394.50469971]
[60.55185318 -408.86257935]
[65.78580475 -422.92489624]
[71.87552643 -436.63836670]
[78.79792023 -449.95092773]
[86.52671051 -462.81207275]
[95.03259277 -475.17303467]
[104.28329468 -486.98693848]
[114.24372864 -498.20895386]
[124.87610626 -508.79650879]
[136.14010620 -518.70941162]
[147.99298096 -527.91009521]
[160.38980103 -536.36370850]
[173.28349304 -544.03808594]
[186.62518311 -550.90411377]
[200.36425781 -556.93585205]
[214.44859314 -562.11035156]
[228.82475281 -566.40795898]
[243.43821716 -569.81243896]
[258.23355103 -572.31079102]
[273.15460205 -573.89361572]
[288.14483643 -574.55487061]
[303.14730835 -574.29211426]
[318.10516357 -573.10620117]
[332.96163940 -571.00177002]
[347.66040039 -567.98675537]
[362.14566040 -564.07257080]
[376.36248779 -559.27404785]
[390.25692749 -553.60943604]
[403.77633667 -547.10028076]
[416.86935425 -539.77111816]
[429.48635864 -531.64990234]
[441.57949829 -522.76733398]
[453.10284424 -513.15710449]
[464.01275635 -502.85577393]
[474.26779175 -491.90234375]
[483.82910156 -480.33837891]
[492.66033936 -468.20773315]
[500.72808838 -455.55642700]
[508.00170898 -442.43246460]
[514.45361328 -428.88565063]
[520.05926514 -414.96731567]
[524.79748535 -400.73028564]
[528.65032959 -386.22857666]
[531.60302734 -371.51718140]
[533.64453125 -356.65194702]
[534.76702881 -341.68917847]
[534.96630859 -326.68572998]
[534.24157715 -311.69845581]
[532.59552002 -296.78421021]
[530.03454590 -281.99960327]
[526.56817627 -267.40069580]
[522.20971680 -253.04286194]
[516.97564697 -238.98057556]
[510.88577271 -225.26718140]
[503.96325684 -211.95469666]
[496.23431396 -199.09361267]
[487.72833252 -186.73272705]
[478.47750854 -174.91891479]
[468.51696777 -163.69700623]
[457.88446045 -153.10957336]
[446.62039185 -143.19676208]
[434.76739502 -133.99617004]
[422.37051392 -125.54272461]
[409.47674561 -117.86847687]
[396.13497925 -111.00254059]
[382.39584351 -104.97095490]
[368.31146240 -99.79661560]
[353.93527222 -95.49913025]
[339.32177734 -92.09481812]
[324.52639771 -89.59658051]
[309.60531616 -88.01390076]
[294.61511230 -87.35278320]
[279.61264038 -87.61573029]
[264.65478516 -88.80175018]
[249.79832458 -90.90634155]
[235.09960938 -93.92151642]
[220.61437988 -97.83584595]
[206.39761353 -102.63447571]
[200.73481750 -88.74445343]
[203.09478760 -74.03799438]
[190.72019958 -64.17999268]
[185.05741882 -50.28996277]
[179.39463806 -36.39993668]
[180.41777039 -33.02569199]
[179.85739136 -28.98823929]
[177.41958618 -25.03723907]
[173.15635681 -22.02526093]
[166.87899780 -8.40194416]
[160.60163879 5.22137213]
[154.32427979 18.84468842]
[148.04692078 32.46800613]
[141.76956177 46.09132004]
[155.15068054 39.31301498]
[170.08273315 40.73917770]
[181.93884277 49.92790222]
[187.04527283 64.03195953]
[183.81973267 78.68105316]
[173.26170349 89.33599854]
[158.64270020 92.69525146]
[144.49256897 87.71791077]
[135.19589233 75.94625854]
[133.63339233 61.02760696]
[125.59222412 73.69013214]
[125.30099487 88.58189392]
[111.37143707 96.08376312]
[103.51968384 108.86460114]
[95.85908508 121.76093292]
[88.19849396 134.65725708]
[80.53789520 147.55358887]
[72.87729645 160.44990540]
[66.09730530 173.83018494]
[60.33127213 187.67767334]
[54.66848373 201.56770325]
[54.32658768 210.69572449]
[48.81660080 215.62135315]
[42.94763947 229.42553711]
[37.07867813 243.22970581]
[31.20971870 257.03387451]
[25.34075737 270.83807373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[33 204]
[34 203]
[36 202]
[46 201]
[47 200]
[48 199]
[49 198]
[50 197]
[53 196]
[55 194]
[56 193]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[63 174]
[64 173]
[65 172]
[67 170]
[68 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
