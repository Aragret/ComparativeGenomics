%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[156.01524353 540.03881836]
[140.95660400 541.93670654]
[126.23019409 538.26281738]
[113.82763672 529.51403809]
[105.42627716 516.87359619]
[102.16233063 502.05093384]
[104.47721100 487.05072021]
[112.05786133 473.90167236]
[123.87905121 464.38198853]
[138.34207153 459.77920532]
[139.23487854 444.80581665]
[140.12770081 429.83239746]
[141.02050781 414.85900879]
[141.91333008 399.88558960]
[142.80615234 384.91220093]
[143.69895935 369.93878174]
[144.59178162 354.96536255]
[144.59178162 339.96536255]
[143.69895935 324.99197388]
[142.80615234 310.01855469]
[141.91333008 295.04516602]
[141.02050781 280.07174683]
[139.45999146 265.15313721]
[137.23487854 250.31910706]
[127.69519806 238.88040161]
[133.29975891 224.08515930]
[131.07464600 209.25111389]
[127.31834412 194.72904968]
[122.07162476 180.67657471]
[116.82491302 166.62411499]
[111.57819366 152.57164001]
[106.33147430 138.51916504]
[101.08475494 124.46669769]
[95.83803558 110.41422272]
[89.69139099 124.09701538]
[76.24288940 130.74064636]
[61.64100266 127.30772400]
[52.56151581 115.36775208]
[53.15545273 100.37951660]
[63.15127182 89.19543457]
[77.97901917 86.92871857]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[83.34822083 65.57299805]
[79.59191895 51.05094147]
[75.83561707 36.52888489]
[72.07931519 22.00682449]
[68.32301331 7.48476458]
[54.66785049 4.45173979]
[43.70397568 -4.12786818]
[37.53588486 -16.53483772]
[37.31624222 -30.32254601]
[43.03091431 -42.79937744]
[53.51282883 -51.55417633]
[49.97315598 -66.13055420]
[46.43348312 -80.70693207]
[32.23655319 -86.68633270]
[24.37459755 -99.72639465]
[25.68314362 -114.71811676]
[35.45158005 -125.93041229]
[31.91190910 -140.50679016]
[21.13658333 -152.09138489]
[25.65201187 -166.28504944]
[22.36911392 -151.64871216]
[16.24514771 -137.95574951]
[7.52402544 -125.75157166]
[-3.44689250 -115.52225494]
[-16.23063850 -107.67522430]
[-30.31804276 -102.52304077]
[-45.14800644 -100.27088928]
[-60.12985992 -101.00849915]
[-74.66688538 -104.70646667]
[-88.18006897 -111.21752167]
[-100.13119507 -120.28232574]
[-110.04424286 -131.53982544]
[-117.52439880 -144.54164124]
[-122.27371216 -158.76992798]
[-124.10303497 -173.65795898]
[-122.93949127 -188.61276245]
[-118.82943726 -203.03869629]
[-111.93656921 -216.36117554]
[-102.53542328 -228.04956055]
[-91.00045013 -237.63833618]
[-77.79108429 -244.74554443]
[-63.43344498 -249.08815002]
[-48.49939346 -250.49316406]
[-33.58374405 -248.90463257]
[-19.28058434 -244.38581848]
[-6.15960503 -237.11671448]
[5.25659275 -227.38684082]
[14.51330566 -215.58374023]
[21.24184227 -202.17752075]
[25.17351913 -187.70625305]
[28.05879211 -202.42614746]
[30.94406509 -217.14604187]
[33.82933807 -231.86593628]
[36.71461105 -246.58583069]
[39.59988403 -261.30572510]
[42.48515320 -276.02560425]
[28.76082230 -282.24969482]
[16.84217453 -291.47155762]
[7.37197304 -303.19384766]
[0.86093086 -316.78439331]
[-2.33981872 -331.51028442]
[-2.05766344 -346.57736206]
[1.69218063 -361.17309570]
[8.70748901 -374.51034546]
[18.60993385 -385.86984253]
[30.86549187 -394.63900757]
[44.81323242 -400.34490967]
[59.70097351 -402.67984009]
[74.72583771 -401.51785278]
[89.07755280 -396.92166138]
[101.98215485 -389.13912964]
[112.74369812 -378.58990479]
[120.78184509 -365.84295654]
[125.66310120 -351.58566284]
[127.12422180 -336.58694458]
[125.08641815 -321.65563965]
[119.65957642 -307.59695435]
[111.13637543 -295.16909790]
[99.97644806 -285.04226685]
[86.78163147 -277.76260376]
[72.26351929 -273.72265625]
[57.20504761 -273.14031982]
[54.31977463 -258.42044067]
[51.43450165 -243.70054626]
[48.54922867 -228.98065186]
[45.66395569 -214.26077271]
[42.77868271 -199.54087830]
[39.89340973 -184.82098389]
[40.22838593 -169.82472229]
[50.75053024 -159.28273010]
[46.48828506 -144.04646301]
[50.02795792 -129.47007751]
[63.85073853 -123.98658752]
[71.88916779 -111.26465607]
[70.88333893 -96.07117462]
[61.00985718 -84.24659729]
[64.54953003 -69.67022705]
[68.08920288 -55.09384918]
[83.70121765 -50.92523193]
[95.14659119 -39.38576126]
[99.23419952 -23.55830574]
[94.75671387 -7.73908901]
[82.84507751 3.72846413]
[86.60137939 18.25052261]
[90.35767365 32.77258301]
[94.11397552 47.29464340]
[97.87027740 61.81669998]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.89051056 105.16750336]
[115.13722229 119.21997833]
[120.38394165 133.27244568]
[125.63066101 147.32492065]
[130.87738037 161.37739563]
[136.12409973 175.42985535]
[141.37081909 189.48233032]
[143.98941040 174.71267700]
[151.99591064 162.02818298]
[164.20257568 153.31056213]
[178.79864502 149.85298157]
[193.61886597 152.16836548]
[206.46475220 159.91325378]
[215.43067932 171.93873596]
[219.18663025 186.46087646]
[217.17541504 201.32543945]
[209.69537354 214.32733154]
[197.85615540 223.53779602]
[183.41401672 227.59053040]
[168.51136780 225.88433838]
[155.35893250 218.67230225]
[145.90869141 207.02600098]
[148.13380432 221.86003113]
[157.83264160 234.35977173]
[152.06892395 248.09399414]
[154.29403687 262.92803955]
[164.05763245 251.54066467]
[179.00244141 250.25503540]
[190.56738281 259.80761719]
[192.12754822 274.72628784]
[182.78919983 286.46490479]
[167.90176392 288.29907227]
[155.99392700 279.17892456]
[156.88673401 294.15234375]
[157.77955627 309.12576294]
[158.67236328 324.09915161]
[159.56518555 339.07257080]
[168.75067139 327.21395874]
[183.11953735 322.90859985]
[197.31253052 327.76232910]
[206.03604126 339.96481323]
[206.03639221 354.96481323]
[197.31346130 367.16772461]
[183.12069702 372.02212524]
[168.75163269 367.71746826]
[159.56518555 355.85818481]
[158.67236328 370.83160400]
[157.77955627 385.80499268]
[156.88673401 400.77841187]
[155.99392700 415.75183105]
[155.10110474 430.72521973]
[154.20828247 445.69863892]
[153.31547546 460.67202759]
[167.12905884 466.96084595]
[177.73526001 477.81777954]
[183.69967651 491.77450562]
[184.21566772 506.94351196]
[179.21345520 521.27325439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[23 178]
[24 177]
[26 175]
[27 174]
[28 159]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[54 141]
[55 140]
[56 139]
[60 135]
[61 134]
[63 132]
[93 131]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
