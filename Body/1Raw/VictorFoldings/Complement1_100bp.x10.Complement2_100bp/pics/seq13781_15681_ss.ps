%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[78.89027405 398.62805176]
[80.09459686 413.65512085]
[77.66700745 428.53363037]
[71.74865723 442.39859009]
[62.68362045 454.44384766]
[50.99893188 463.96914673]
[37.37392426 470.42071533]
[22.60073471 473.42343140]
[7.53825951 472.80273438]
[-6.93779039 468.59472656]
[-19.98579597 461.04403687]
[-30.84716225 450.58963013]
[-38.89042282 437.83935547]
[-43.64795685 423.53451538]
[-44.84316635 408.50668335]
[-42.40656281 393.62963867]
[-36.47980499 379.76831055]
[-27.40746689 367.72854614]
[-15.71700668 358.21029663]
[-2.08808875 351.76702881]
[12.68691826 348.77325439]
[27.74901581 349.40307617]
[31.93602562 334.99929810]
[36.12303925 320.59552002]
[40.31004715 306.19174194]
[44.28214645 291.72720337]
[48.03844452 277.20513916]
[43.73484039 262.94583130]
[54.68144989 251.52293396]
[58.43775177 237.00088501]
[62.19404984 222.47882080]
[65.95034790 207.95675659]
[69.70664978 193.43470764]
[73.46295166 178.91264343]
[72.09462738 171.64976501]
[77.38479614 164.20315552]
[81.35688782 149.73863220]
[84.89656067 135.16226196]
[88.00067139 120.48695374]
[91.10478210 105.81165314]
[93.21940613 90.96145630]
[86.52994537 76.62403107]
[95.19242859 64.50748444]
[96.30807495 49.54903030]
[97.42372131 34.59057999]
[98.53937531 19.63212585]
[88.50303650 7.71953678]
[89.84755707 -7.43456888]
[101.26623535 -16.92926598]
[102.38188934 -31.88772011]
[103.49753571 -46.84617233]
[101.47409821 -50.68800735]
[100.84201813 -54.58223343]
[101.44689941 -58.08501816]
[103.00608826 -60.84826660]
[105.15098572 -62.65314102]
[107.15499878 -77.51866913]
[99.76757812 -94.38602448]
[111.02755737 -107.84632874]
[112.81002045 -122.74004364]
[114.59248352 -137.63375854]
[116.37495422 -152.52748108]
[118.15741730 -167.42120361]
[108.66301727 -179.77005005]
[110.68286133 -194.84899902]
[122.51411438 -203.82435608]
[124.29657745 -218.71807861]
[126.07904816 -233.61180115]
[127.86151123 -248.50550842]
[113.14060974 -251.42402649]
[98.68630981 -255.46084595]
[84.58343506 -260.59231567]
[70.91476440 -266.78826904]
[57.76049042 -274.01239014]
[45.19782257 -282.22229004]
[33.30048370 -291.36972046]
[22.13828468 -301.40109253]
[11.77673817 -312.25747681]
[2.27664781 -323.87518311]
[-6.30623579 -336.18603516]
[-13.92154312 -349.11776733]
[-20.52458572 -362.59451294]
[-26.07661057 -376.53717041]
[-30.54504013 -390.86392212]
[-33.90364838 -405.49069214]
[-36.13272476 -420.33163452]
[-37.21919250 -435.29968262]
[-37.15666962 -450.30697632]
[-35.94552994 -465.26544189]
[-33.59287262 -480.08731079]
[-30.11251259 -494.68560791]
[-25.52486992 -508.97463989]
[-19.85686684 -522.87054443]
[-13.14176655 -536.29180908]
[-5.41897631 -549.15966797]
[3.26618242 -561.39855957]
[12.86274147 -572.93670654]
[23.31438446 -583.70635986]
[34.55977249 -593.64434814]
[46.53292084 -602.69238281]
[59.16355515 -610.79730225]
[72.37756348 -617.91156006]
[86.09738922 -623.99346924]
[100.24252319 -629.00720215]
[114.72994995 -632.92346191]
[129.47467041 -635.71923828]
[144.39012146 -637.37805176]
[159.38880920 -637.89025879]
[174.38269043 -637.25286865]
[189.28376770 -635.46948242]
[204.00462341 -632.55072021]
[218.45884705 -628.51361084]
[232.56161499 -623.38189697]
[246.23017883 -617.18566895]
[259.38430786 -609.96130371]
[271.94680786 -601.75115967]
[283.84399414 -592.60345459]
[295.00598145 -582.57189941]
[305.36734009 -571.71533203]
[314.86721802 -560.09747314]
[323.44985962 -547.78643799]
[331.06491089 -534.85455322]
[337.66769409 -521.37768555]
[343.21948242 -507.43493652]
[347.68762207 -493.10809326]
[351.04595947 -478.48126221]
[353.27474976 -463.64025879]
[354.36093140 -448.67218018]
[354.29812622 -433.66488647]
[353.08670044 -418.70645142]
[350.73376465 -403.88461304]
[347.25314331 -389.28640747]
[342.66522217 -374.99746704]
[336.99694824 -361.10165405]
[330.28158569 -347.68054199]
[322.55856323 -334.81283569]
[313.87316895 -322.57409668]
[304.27639771 -311.03613281]
[293.82455444 -300.26666260]
[282.57897949 -290.32885742]
[270.60565186 -281.28106689]
[257.97485352 -273.17639160]
[244.76072693 -266.06237793]
[231.04077148 -259.98077393]
[216.89555359 -254.96726990]
[202.40803528 -251.05128479]
[187.66328430 -248.25581360]
[172.74778748 -246.59724426]
[157.74909973 -246.08532715]
[142.75523376 -246.72305298]
[140.97276306 -231.82933044]
[139.19029236 -216.93560791]
[137.40783691 -202.04190063]
[146.78695679 -190.52810669]
[145.19145203 -175.39836121]
[133.05113220 -165.63873291]
[131.26867676 -150.74501038]
[129.48620605 -135.85130310]
[127.70373535 -120.95758057]
[125.92127228 -106.06386566]
[133.14877319 -96.36387634]
[131.78567505 -83.94108582]
[122.02052307 -75.51465607]
[120.01651001 -60.64912796]
[118.45598602 -45.73052597]
[117.34033966 -30.77207184]
[116.22469330 -15.81361771]
[126.10858917 -4.73010683]
[125.19024658 10.45578480]
[113.49782562 20.74777412]
[112.38217926 35.70622635]
[111.26652527 50.66468048]
[110.15087891 65.62313080]
[116.92013550 78.89062500]
[108.17785645 92.07710266]
[118.34279633 81.04650879]
[132.83045959 77.15962982]
[147.15167236 81.62087250]
[156.86886597 93.04785919]
[158.97106934 107.89981842]
[152.80686951 121.57471466]
[140.28633118 129.83522034]
[125.28906250 130.12173462]
[112.46214294 122.34548950]
[105.78008270 108.91576385]
[102.67597198 123.59106445]
[99.57186127 138.26637268]
[101.06388855 142.34408569]
[101.17003632 146.28785706]
[100.10260010 149.67842102]
[98.18820953 152.20858765]
[95.82141113 153.71072388]
[91.84931946 168.17524719]
[87.98500824 182.66894531]
[84.22871399 197.19100952]
[80.47241211 211.71305847]
[76.71611023 226.23512268]
[72.95980835 240.75718689]
[69.20350647 255.27923584]
[73.23843384 270.57727051]
[62.56050491 280.96145630]
[58.80420303 295.48352051]
[60.19990540 301.94598389]
[58.39357758 307.33432007]
[54.71382904 310.37875366]
[50.52682114 324.78253174]
[46.33980942 339.18630981]
[42.15279770 353.59008789]
[55.20537567 361.13287354]
[66.07308197 371.58065796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[26 202]
[27 201]
[29 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[36 193]
[37 192]
[38 187]
[39 186]
[40 185]
[41 175]
[43 173]
[44 172]
[45 171]
[46 170]
[49 167]
[50 166]
[51 165]
[56 164]
[57 163]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[66 153]
[67 152]
[68 151]
[69 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
