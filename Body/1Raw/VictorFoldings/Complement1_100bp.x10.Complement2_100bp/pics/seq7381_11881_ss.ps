%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[245.18572998 670.25006104]
[242.08161926 655.57470703]
[238.97750854 640.89941406]
[235.87339783 626.22412109]
[232.76928711 611.54882812]
[229.66517639 596.87353516]
[226.56106567 582.19824219]
[223.34779358 567.54644775]
[220.02552795 552.91894531]
[216.70327759 538.29150391]
[213.38101196 523.66406250]
[209.84133911 509.08767700]
[206.08503723 494.56561279]
[201.36668396 488.87713623]
[202.38262939 479.79937744]
[198.84295654 465.22299194]
[195.30328369 450.64660645]
[191.76361084 436.07025146]
[188.22393799 421.49386597]
[172.01745605 422.14367676]
[156.01960754 419.43936157]
[140.91731262 413.49484253]
[127.35949707 404.56317139]
[115.92919922 393.02584839]
[107.11852264 379.37649536]
[101.30741882 364.19961548]
[98.74729919 348.14584351]
[99.55020142 331.90371704]
[103.68386078 316.17044067]
[110.97297668 301.62173462]
[121.10668945 288.88296509]
[133.65182495 278.50216675]
[148.07139587 270.92654419]
[143.88438416 256.52276611]
[139.69737244 242.11898804]
[135.51036072 227.71519470]
[131.32334900 213.31141663]
[127.13633728 198.90763855]
[122.94932556 184.50386047]
[118.22919464 170.26586914]
[112.98247528 156.21339417]
[107.73575592 142.16091919]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[69.35797119 70.51911163]
[64.23723602 56.19316864]
[70.63448334 42.79127121]
[65.38776398 28.73880196]
[60.14104843 14.68632984]
[54.83913040 28.71806908]
[42.36583328 37.04974365]
[27.37338448 36.57384872]
[15.45359802 27.46788025]
[11.05225849 13.12813854]
[15.81095791 -1.09700751]
[27.95481873 -9.90192986]
[42.95447922 -10.00260925]
[55.21614456 -1.36056268]
[51.67647171 -15.93693829]
[48.13679886 -30.51331329]
[44.48871231 -45.06293488]
[40.73241043 -59.58499146]
[36.97611237 -74.10705566]
[33.05377197 -59.62895584]
[24.22502136 -47.50240707]
[11.65143776 -39.32286072]
[-3.01271033 -36.16647720]
[-17.83810234 -38.44853210]
[-30.87420082 -45.86878586]
[-40.40588379 -57.45096970]
[-45.17909622 -71.67124939]
[-44.56583786 -86.65871429]
[-38.64679337 -100.44149017]
[-28.20071602 -111.20622253]
[-14.60196590 -117.53662109]
[0.36030650 -118.59982300]
[14.71755791 -114.25593567]
[26.58084488 -105.07648468]
[34.39019775 -92.26694489]
[33.94359207 -107.26029205]
[33.49698639 -122.25364685]
[32.71566391 -137.23327637]
[31.60001373 -152.19174194]
[30.48436546 -167.15019226]
[29.36871719 -182.10864258]
[28.25306892 -197.06709290]
[27.13741875 -212.02554321]
[26.02177048 -226.98400879]
[11.17394924 -229.62843323]
[-2.54941607 -235.88304138]
[-14.28566265 -245.35464478]
[-23.29704094 -257.44784546]
[-29.01708794 -271.40249634]
[-31.08623505 -286.34133911]
[-29.37441635 -301.32534790]
[-23.98923683 -315.41259766]
[-15.26921463 -327.71755981]
[-3.76249552 -337.46673584]
[9.80759716 -344.04727173]
[24.58803558 -347.04550171]
[39.64970779 -346.27297974]
[54.04582977 -341.77825928]
[66.87144470 -333.84387207]
[77.32032013 -322.96859741]
[84.73564148 -309.83605957]
[88.65126801 -295.27175903]
[88.82106018 -280.19122314]
[85.23434448 -265.54248047]
[78.11658478 -252.24629211]
[67.91521454 -241.13850403]
[55.27149582 -232.91737366]
[40.98022461 -228.09965515]
[42.09587097 -213.14120483]
[43.21152115 -198.18273926]
[44.32717133 -183.22428894]
[45.44281769 -168.26583862]
[46.55846786 -153.30738831]
[47.67411804 -138.34893799]
[50.09289551 -135.78341675]
[51.38922119 -131.91888428]
[50.96607590 -127.29566193]
[48.49033356 -122.70024872]
[48.93693924 -107.70690155]
[49.38354874 -92.71355438]
[51.49817276 -77.86334991]
[55.25447083 -63.34129333]
[59.01077271 -48.81923294]
[63.72912598 -43.13074112]
[62.71317673 -34.05298615]
[66.25284576 -19.47661018]
[69.79251862 -4.90023518]
[74.19351959 9.43961239]
[79.44023895 23.49208260]
[84.68695831 37.54455566]
[98.30206299 43.47451401]
[103.82316589 57.65097809]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.78822327 136.91419983]
[127.03494263 150.96667480]
[132.28166199 165.01914978]
[140.78825378 152.66447449]
[155.73979187 151.45985413]
[166.11459351 162.29331970]
[164.26470947 177.17880249]
[151.55383301 185.14331055]
[137.35310364 180.31684875]
[141.54011536 194.72062683]
[145.72712708 209.12440491]
[149.91413879 223.52818298]
[154.10115051 237.93197632]
[158.28816223 252.33575439]
[162.47517395 266.73953247]
[176.24290466 265.38906860]
[190.03053284 266.47210693]
[203.41139221 269.95376587]
[215.97158813 275.72506714]
[227.32290649 283.60614014]
[237.11471558 293.35198975]
[245.04484558 304.66006470]
[250.86888123 317.17953491]
[254.40773010 330.52233887]
[255.55311584 344.27514648]
[254.27087402 358.01214600]
[250.60198975 371.30822754]
[244.66128540 383.75219727]
[236.63381958 394.95944214]
[226.76913452 404.58377075]
[215.37347412 412.32824707]
[202.80032349 417.95419312]
[206.33999634 432.53057861]
[209.87966919 447.10693359]
[213.41934204 461.68331909]
[216.95901489 476.25970459]
[220.60710144 490.80932617]
[224.36340332 505.33139038]
[228.71759033 510.30657959]
[229.75051880 515.89495850]
[228.00846863 520.34179688]
[231.33073425 534.96923828]
[234.65298462 549.59674072]
[237.97525024 564.22418213]
[242.92762756 571.89959717]
[241.23637390 579.09411621]
[244.34046936 593.76940918]
[247.44458008 608.44470215]
[250.54869080 623.11999512]
[253.65280151 637.79534912]
[256.75692749 652.47064209]
[259.86102295 667.14593506]
[274.84680176 669.55230713]
[287.94937134 677.21307373]
[297.39669800 689.09216309]
[301.91110229 703.58300781]
[300.88208008 718.72583008]
[294.44879150 732.47271729]
[283.48123169 742.96453857]
[269.46276855 748.78228760]
[254.28918457 749.13922119]
[240.01264954 743.98699951]
[228.56393433 734.02252197]
[221.49136353 720.59332275]
[219.75146484 705.51562500]
[223.57952881 690.82855225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 188]
[9 187]
[10 186]
[11 185]
[12 182]
[13 181]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[46 141]
[47 140]
[50 137]
[51 136]
[52 135]
[61 134]
[62 133]
[63 132]
[64 130]
[65 129]
[66 128]
[82 127]
[83 126]
[84 125]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
