%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[71.87550354 785.15106201]
[56.92314911 783.88153076]
[42.09577560 781.57208252]
[27.46562004 778.23388672]
[13.10396481 773.88330078]
[-0.91922456 768.54150391]
[-14.53562641 762.23449707]
[-27.67890167 754.99304199]
[-40.28501892 746.85235596]
[-52.29256058 737.85211182]
[-63.64302444 728.03625488]
[-74.28112030 717.45251465]
[-84.15500641 706.15246582]
[-93.21659088 694.19116211]
[-101.42171478 681.62689209]
[-108.73041534 668.52087402]
[-115.10707092 654.93695068]
[-120.52062988 640.94134521]
[-124.94470215 626.60211182]
[-128.35774231 611.98925781]
[-130.74313354 597.17388916]
[-132.08923340 582.22827148]
[-132.38949585 567.22509766]
[-131.64245605 552.23754883]
[-129.85174561 537.33862305]
[-127.02610016 522.60089111]
[-123.17928314 508.09619141]
[-118.33003235 493.89514160]
[-112.50197601 480.06698608]
[-105.72351074 466.67901611]
[-98.02764893 453.79653931]
[-89.45190430 441.48226929]
[-80.03804016 429.79620361]
[-69.83192444 418.79531860]
[-58.88328171 408.53314209]
[-47.24545670 399.05972290]
[-34.97514725 390.42120361]
[-22.13212967 382.65963745]
[-8.77897644 375.81289673]
[5.01925659 369.91427612]
[19.19534492 364.99258423]
[33.68022156 361.07171631]
[48.40332031 358.17086792]
[63.29291153 356.30407715]
[78.27645111 355.48049927]
[78.49977875 340.48217773]
[70.95282745 327.64111328]
[78.89472961 313.95767212]
[79.11805725 298.95932007]
[79.34138489 283.96099854]
[77.48796844 281.85791016]
[76.35592651 278.89395142]
[76.27734375 275.34017944]
[77.48011017 271.58279419]
[80.05105591 268.08361816]
[81.16670990 253.12518311]
[82.28235626 238.16671753]
[83.39800262 223.20826721]
[71.35477448 232.15034485]
[56.49639511 230.09399414]
[47.33441925 218.21720886]
[49.11724091 203.32353210]
[60.82358170 193.94474792]
[75.74752045 195.45344543]
[85.33965302 206.98448181]
[87.78537750 192.18521118]
[90.23110962 177.38592529]
[91.56934357 162.44575500]
[91.79267120 147.44740295]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[92.98566437 67.32759857]
[93.20899200 52.32926178]
[93.43231964 37.33092499]
[93.65564728 22.33258629]
[93.65564728 7.33258724]
[93.43231964 -7.66575050]
[85.49041748 -21.34919548]
[93.03736877 -34.19025421]
[83.22956085 -49.77513123]
[92.36824036 -64.75683594]
[91.92163849 -79.75018311]
[88.77751160 -85.56620026]
[89.00797272 -91.24456787]
[91.69165802 -95.19512939]
[83.95436096 -108.99530029]
[91.69165802 -121.72257233]
[91.69165802 -136.72256470]
[91.69165802 -151.72256470]
[91.69165802 -166.72256470]
[91.69165802 -181.72256470]
[91.69165802 -196.72256470]
[77.19413757 -200.96504211]
[64.47985840 -209.12126160]
[54.57950974 -220.53001404]
[48.29566956 -234.26646423]
[46.13773727 -249.21705627]
[48.28064728 -264.16979980]
[54.55068970 -277.91256714]
[64.43956757 -289.33123779]
[77.14565277 -297.50024414]
[91.63890076 -301.75726318]
[106.74441528 -301.75726318]
[121.23766327 -297.50024414]
[133.94374084 -289.33123779]
[143.83262634 -277.91256714]
[150.10266113 -264.16979980]
[152.24557495 -249.21705627]
[150.08764648 -234.26646423]
[143.80380249 -220.53001404]
[133.90345764 -209.12126160]
[121.18917847 -200.96504211]
[106.69165802 -196.72256470]
[106.69165802 -181.72256470]
[106.69165802 -166.72256470]
[106.69165802 -151.72256470]
[106.69165802 -136.72256470]
[106.69165802 -121.72257233]
[114.42895508 -108.99530029]
[106.69165802 -95.19512939]
[106.91498566 -80.19679260]
[107.36159515 -65.20343781]
[115.94804382 -56.68291092]
[116.44282532 -44.19535828]
[108.03570557 -34.41358185]
[115.96163940 -21.80291748]
[108.43065643 -7.88907814]
[108.65398407 7.10925913]
[111.39618683 11.01942062]
[111.71116638 16.69373322]
[108.65398407 22.55591393]
[108.43065643 37.55425262]
[108.20732880 52.55258942]
[107.98400116 67.55092621]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[106.79100800 147.67073059]
[106.56768036 162.66908264]
[115.59637451 150.69064331]
[129.36575317 144.74052429]
[144.27655029 146.37403870]
[156.43109131 155.16418457]
[162.65223694 168.81327820]
[161.31378174 183.75343323]
[152.76557922 196.07936096]
[139.24214172 202.56907654]
[124.27844238 201.52619934]
[111.78595734 193.22331238]
[105.03038025 179.83166504]
[102.58464813 194.63093567]
[100.13892365 209.43020630]
[98.35646057 224.32391357]
[97.24080658 239.28237915]
[96.12516022 254.24082947]
[95.00951385 269.19927979]
[94.33972931 284.18432617]
[94.11640167 299.18264771]
[93.89307404 314.18099976]
[101.42404938 328.09481812]
[93.49811554 340.70550537]
[93.27478790 355.70382690]
[108.22716522 356.97317505]
[123.05457306 359.28240967]
[137.68476868 362.62036133]
[152.04649353 366.97076416]
[166.06976318 372.31234741]
[179.68624878 378.61917114]
[192.82963562 385.86047363]
[205.43586731 394.00094604]
[217.44352722 403.00097656]
[228.79414368 412.81671143]
[239.43238831 423.40029907]
[249.30642700 434.70019531]
[258.36819458 446.66137695]
[266.57348633 459.22552490]
[273.88238525 472.33142090]
[280.25924683 485.91525269]
[285.67300415 499.91082764]
[290.09725952 514.24993896]
[293.51052856 528.86279297]
[295.89611816 543.67810059]
[297.24243164 558.62371826]
[297.54290771 573.62689209]
[296.79608154 588.61444092]
[295.00558472 603.51336670]
[292.18014526 618.25115967]
[288.33355713 632.75592041]
[283.48449707 646.95703125]
[277.65664673 660.78527832]
[270.87835693 674.17333984]
[263.18270874 687.05590820]
[254.60711670 699.37030029]
[245.19342041 711.05651855]
[234.98747253 722.05755615]
[224.03897095 732.31988525]
[212.40129089 741.79345703]
[200.13110352 750.43218994]
[187.28819275 758.19390869]
[173.93513489 765.04083252]
[160.13699341 770.93963623]
[145.96096802 775.86157227]
[131.47615051 779.78265381]
[116.75308990 782.68371582]
[101.86352539 784.55072021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 167]
[46 166]
[48 164]
[49 163]
[50 162]
[55 161]
[56 160]
[57 159]
[58 158]
[65 157]
[66 156]
[67 155]
[68 144]
[69 143]
[70 142]
[71 141]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 131]
[80 130]
[82 128]
[84 125]
[85 124]
[88 123]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
