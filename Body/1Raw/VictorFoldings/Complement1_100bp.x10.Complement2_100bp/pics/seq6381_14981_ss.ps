%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[121.67930603 774.46728516]
[106.97786713 777.60003662]
[91.96735382 778.39434814]
[77.01740265 776.83050537]
[62.49617386 772.94714355]
[48.76126862 766.83990479]
[36.15091705 758.65905762]
[24.97566605 748.60620117]
[15.51071072 736.92883301]
[7.98913717 723.91448975]
[2.59616971 709.88372803]
[-0.53538454 695.18206787]
[-1.32840848 680.17144775]
[0.23662683 665.22161865]
[4.12118101 650.70074463]
[10.22959328 636.96636963]
[18.41143990 624.35668945]
[28.46523285 613.18225098]
[40.14339066 603.71826172]
[53.15832520 596.19775391]
[67.18953705 590.80596924]
[81.89149475 587.67559814]
[96.90213776 586.88378906]
[98.46266174 571.96520996]
[100.02318573 557.04663086]
[93.65195465 543.58343506]
[102.78296661 530.66308594]
[104.34349060 515.74450684]
[105.90401459 500.82589722]
[107.13098907 485.87615967]
[108.02380371 470.90277100]
[108.91661835 455.92935181]
[109.80943298 440.95593262]
[110.70224762 425.98254395]
[111.59506989 411.00912476]
[109.15128326 406.90585327]
[109.25921631 401.22381592]
[112.74393463 395.60525513]
[106.17295837 382.23846436]
[115.11059570 369.18359375]
[116.44882965 354.24340820]
[117.78706360 339.30322266]
[119.12529755 324.36303711]
[116.59107971 317.42047119]
[120.59629822 309.21093750]
[122.15682220 294.29235840]
[123.71734619 279.37374878]
[123.04756165 264.38870239]
[120.16228485 249.66880798]
[117.27701569 234.94891357]
[114.39173889 220.22903442]
[102.79749298 214.60737610]
[96.46353912 203.16346741]
[97.89834595 189.96681213]
[106.80084991 179.85939026]
[104.13505554 165.09815979]
[101.46925354 150.33694458]
[98.80345917 135.57572937]
[96.13766479 120.81451416]
[84.93927765 114.87737274]
[79.13973999 103.60710144]
[80.81803131 91.04378510]
[89.37253571 81.69102478]
[79.48867798 69.33708191]
[85.04727173 55.51856995]
[82.60154724 40.71929932]
[72.71768951 28.36535454]
[78.27628326 14.54684258]
[75.83055878 -0.25242844]
[65.81885529 -8.38437939]
[64.08647919 -20.76107597]
[71.02197266 -30.67194939]
[68.79685974 -45.50599289]
[59.09803009 -58.00572586]
[64.86174774 -71.73994446]
[52.43622971 -81.13378143]
[50.39096069 -96.20931244]
[59.42312622 -107.99725342]
[57.19800949 -122.83129883]
[54.97288895 -137.66534424]
[43.29183578 -144.37112427]
[37.68751526 -156.40449524]
[40.00281143 -169.27778625]
[49.17192841 -178.33079529]
[47.16791153 -193.19631958]
[39.50569153 -180.30094910]
[26.13599396 -173.50013733]
[11.20156670 -174.90115356]
[-0.66999584 -184.06991577]
[-5.80016088 -198.16534424]
[-2.59929037 -212.81985474]
[7.94079065 -223.49255371]
[22.55412292 -226.87641907]
[36.71260834 -221.92289734]
[46.02918243 -210.16667175]
[46.02918243 -225.16667175]
[46.02918243 -240.16667175]
[46.02918243 -255.16667175]
[46.02918243 -270.16668701]
[32.25531387 -276.74264526]
[22.70538521 -288.64901733]
[19.27554703 -303.52175903]
[22.64679146 -318.40792847]
[32.14975739 -330.35180664]
[45.89762115 -336.98196411]
[61.16073990 -336.98196411]
[74.90860748 -330.35180664]
[84.41157532 -318.40792847]
[87.78281403 -303.52175903]
[84.35297394 -288.64901733]
[74.80304718 -276.74264526]
[61.02918243 -270.16668701]
[61.02918243 -255.16667175]
[61.02918243 -240.16667175]
[61.02918243 -225.16667175]
[61.02918243 -210.16667175]
[62.03343964 -195.20033264]
[64.03745270 -180.33480835]
[77.83509064 -170.71897888]
[80.46071625 -153.76548767]
[69.80693817 -139.89045715]
[72.03205109 -125.05641174]
[74.25717163 -110.22237396]
[86.35041046 -101.60325623]
[88.81830597 -86.59112549]
[79.69579315 -73.96506500]
[89.23546600 -62.52635956]
[83.63090515 -47.73110962]
[85.85601807 -32.89706802]
[97.51177216 -19.77798080]
[90.62982941 -2.69815588]
[93.07555389 12.10111523]
[102.78447723 23.39651680]
[97.40081787 38.27357101]
[99.84654236 53.07284164]
[109.55546570 64.36824036]
[104.17180634 79.24530029]
[117.80428314 88.54708862]
[120.61630249 104.80932617]
[110.89888000 118.14871979]
[113.56467438 132.90994263]
[116.23047638 147.67115784]
[118.89627075 162.43237305]
[121.56206512 177.19358826]
[136.11344910 186.90321350]
[139.08192444 203.80004883]
[129.11163330 217.34375000]
[131.99690247 232.06364441]
[134.88217163 246.78353882]
[137.76745605 261.50341797]
[141.90277100 247.08471680]
[149.88409424 234.38438416]
[161.08195496 224.40400696]
[174.61326599 217.93070984]
[189.41087341 215.47497559]
[204.30780029 217.23048401]
[218.12918091 223.05879211]
[229.78503418 232.50025940]
[238.35610962 244.81027222]
[243.16647339 259.01803589]
[243.83674622 274.00305176]
[240.31407166 288.58355713]
[232.87626648 301.60964966]
[222.10989380 312.05401611]
[208.86405945 319.09304810]
[194.18336487 322.17153931]
[179.22558594 321.04675293]
[165.17037964 315.80737305]
[153.12617493 306.86660767]
[144.04284668 294.92956543]
[138.63595581 280.93426514]
[137.07542419 295.85287476]
[135.51490784 310.77148438]
[134.06549072 325.70129395]
[132.72724915 340.64147949]
[131.38902283 355.58166504]
[130.05078125 370.52185059]
[136.52603149 384.95727539]
[127.68412018 396.94351196]
[126.56847382 411.90194702]
[125.67565918 426.87536621]
[124.78283691 441.84875488]
[123.89002228 456.82217407]
[122.99720764 471.79556274]
[122.10439301 486.76898193]
[124.44221497 491.43606567]
[124.72751617 496.06985474]
[123.31671143 499.89407349]
[120.82261658 502.38641357]
[119.26209259 517.30505371]
[117.70156860 532.22363281]
[123.96118927 546.75384521]
[114.94178772 558.60711670]
[113.38127136 573.52575684]
[111.82074738 588.44433594]
[126.34261322 592.32531738]
[140.07852173 598.43029785]
[152.69023132 606.60900879]
[163.86714172 616.66003418]
[173.33401489 628.33587646]
[180.85774231 641.34893799]
[186.25302124 655.37884521]
[189.38700867 670.08001709]
[190.18251038 685.09045410]
[188.61993408 700.04052734]
[184.73777771 714.56207275]
[178.63163757 728.29748535]
[170.45187378 740.90850830]
[160.39991760 752.08459473]
[148.72332764 761.55053711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 195]
[24 194]
[25 193]
[27 191]
[28 190]
[29 189]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[38 179]
[40 177]
[41 176]
[42 175]
[43 174]
[45 173]
[46 172]
[47 171]
[48 150]
[49 149]
[50 148]
[51 147]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[63 137]
[65 135]
[66 134]
[68 132]
[69 131]
[72 129]
[73 128]
[75 126]
[78 123]
[79 122]
[80 121]
[84 118]
[85 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
