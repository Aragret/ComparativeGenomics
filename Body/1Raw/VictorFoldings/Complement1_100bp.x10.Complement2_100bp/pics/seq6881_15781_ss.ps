%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-18.83426666 472.48065186]
[-23.21050453 486.83874512]
[-28.85618782 500.74673462]
[-35.72585678 514.09265137]
[-43.76420593 526.76910400]
[-52.90650558 538.67388916]
[-63.07915115 549.71124268]
[-74.20023346 559.79229736]
[-86.18021393 568.83587646]
[-98.92263794 576.76916504]
[-112.32489777 583.52832031]
[-126.27909088 589.05883789]
[-140.67286682 593.31622314]
[-155.39033508 596.26623535]
[-170.31298828 597.88507080]
[-185.32067871 598.15972900]
[-200.29257202 597.08795166]
[-215.10812378 594.67846680]
[-229.64804077 590.95062256]
[-243.79525757 585.93438721]
[-257.43585205 579.67016602]
[-270.46002197 572.20843506]
[-282.76290894 563.60931396]
[-294.24539185 553.94189453]
[-304.81509399 543.28411865]
[-314.38687134 531.72180176]
[-322.88366699 519.34802246]
[-330.23709106 506.26239014]
[-336.38787842 492.57028198]
[-341.28656006 478.38195801]
[-344.89367676 463.81158447]
[-347.18017578 448.97656250]
[-348.12765503 433.99630737]
[-347.72848511 418.99139404]
[-345.98587036 404.08270264]
[-342.91384888 389.39019775]
[-338.53717041 375.03225708]
[-332.89108276 361.12442017]
[-326.02099609 347.77871704]
[-317.98226929 335.10253906]
[-308.83959961 323.19799805]
[-298.66662598 312.16094971]
[-287.54522705 302.08023071]
[-275.56497192 293.03701782]
[-262.82229614 285.10412598]
[-249.41983032 278.34542847]
[-235.46546936 272.81533813]
[-221.07156372 268.55838013]
[-206.35401917 265.60882568]
[-191.43130493 263.99041748]
[-176.42361450 263.71621704]
[-161.45175171 264.78842163]
[-146.63627625 267.19839478]
[-132.09646606 270.92669678]
[-117.94940948 275.94335938]
[-104.30899048 282.20797729]
[-91.28504944 289.67007446]
[-78.98244476 298.26962280]
[-69.32163239 286.79492188]
[-59.66082382 275.32022095]
[-57.38265610 260.60089111]
[-42.57571793 255.02726746]
[-32.91490936 243.55256653]
[-23.25409698 232.07786560]
[-13.59328651 220.60316467]
[-3.93247652 209.12846375]
[5.72833395 197.65376282]
[2.84117579 185.09614563]
[7.78776360 172.98774719]
[18.96958160 165.83390808]
[32.42518234 166.43505859]
[42.25576401 155.10545349]
[52.08634567 143.77586365]
[61.91692734 132.44627380]
[54.31932831 120.40483856]
[50.42131805 106.71085358]
[50.53858948 92.47337341]
[54.66164398 78.84545135]
[62.45656586 66.93080139]
[73.29205322 57.69436264]
[86.29057312 51.88417435]
[100.39938354 49.97079086]
[114.47585297 52.10917664]
[127.37995148 58.12614822]
[137.37812805 46.94417572]
[147.37629700 35.76219940]
[157.37446594 24.58022690]
[167.37265015 13.39825153]
[177.37081909 2.21627688]
[187.36898804 -8.96569729]
[197.28364563 -20.22179413]
[200.48385620 -35.71596146]
[214.66899109 -40.25813675]
[224.49955750 -51.58773041]
[234.33013916 -62.91732407]
[244.16072083 -74.24691772]
[253.99130249 -85.57650757]
[243.63916016 -96.44747925]
[234.36726379 -108.25326538]
[226.25956726 -120.88694763]
[219.38951111 -134.23413086]
[213.81930542 -148.17390442]
[209.59939575 -162.58006287]
[206.76802063 -177.32211304]
[205.35078430 -192.26654053]
[205.36054993 -207.27803040]
[206.79721069 -222.22061157]
[209.64776611 -236.95896912]
[213.88641357 -251.35961914]
[219.47473145 -265.29214478]
[226.36215210 -278.63037109]
[234.48626709 -291.25350952]
[243.77351379 -303.04721069]
[254.13978577 -313.90472412]
[265.49118042 -323.72766113]
[277.72494507 -332.42709351]
[290.73025513 -339.92422485]
[304.38931274 -346.15115356]
[318.57843018 -351.05148315]
[333.16912842 -354.58087158]
[348.02923584 -356.70733643]
[363.02420044 -357.41159058]
[378.01818848 -356.68728638]
[392.87545776 -354.54095459]
[407.46142578 -350.99206543]
[421.64398193 -346.07275391]
[435.29470825 -339.82757568]
[448.28997803 -332.31304932]
[460.51208496 -323.59729004]
[471.85034180 -313.75918579]
[482.20208740 -302.88781738]
[491.47357178 -291.08169556]
[499.58081055 -278.44772339]
[506.45037842 -265.10031128]
[512.02008057 -251.16030884]
[516.23944092 -236.75401306]
[519.07031250 -222.01185608]
[520.48699951 -207.06736755]
[520.47668457 -192.05587769]
[519.03948975 -177.11335754]
[516.18835449 -162.37510681]
[511.94921875 -147.97460938]
[506.36038208 -134.04228210]
[499.47247314 -120.70430756]
[491.34790039 -108.08147430]
[482.06021118 -96.28809357]
[471.69354248 -85.43097687]
[460.34179688 -75.60845184]
[448.10772705 -66.90946960]
[435.10214233 -59.41281128]
[421.44284058 -53.18637466]
[407.25354004 -48.28654099]
[392.66271973 -44.75769424]
[377.80252075 -42.63178635]
[362.80755615 -41.92807388]
[347.81356812 -42.65292740]
[332.95639038 -44.79978561]
[318.37057495 -48.34920120]
[304.18817139 -53.26903152]
[290.53768921 -59.51472092]
[277.54269409 -67.02970886]
[265.32089233 -75.74592590]
[255.49032593 -64.41633606]
[245.65974426 -53.08674240]
[235.82916260 -41.75714874]
[225.99858093 -30.42755508]
[223.50151062 -15.74375820]
[208.61323547 -10.39121246]
[206.60388184 -3.27894950]
[198.55096436 1.03247440]
[188.55279541 12.21444893]
[178.55461121 23.39642334]
[168.55644226 34.57839966]
[158.55827332 45.76037216]
[148.56010437 56.94234848]
[138.56193542 68.12432098]
[146.52127075 81.59204102]
[149.93214417 96.85953522]
[148.46107483 112.43407440]
[142.25187683 126.79291534]
[131.91165161 138.53216553]
[118.45136261 146.50407410]
[103.18705750 149.92918396]
[87.61115265 148.47264099]
[73.24652100 142.27685547]
[63.41593933 153.60644531]
[53.58535767 164.93603516]
[43.75477600 176.26564026]
[45.31026077 193.68974304]
[34.00539398 206.59381104]
[17.20303345 207.31457520]
[7.54222345 218.78927612]
[-2.11858678 230.26397705]
[-11.77939701 241.73867798]
[-21.44020844 253.21337891]
[-31.10101891 264.68807983]
[-34.07019424 280.22817993]
[-48.18612671 284.98104858]
[-57.84693527 296.45574951]
[-67.50774384 307.93045044]
[-56.93772507 318.58789062]
[-47.36559296 330.14990234]
[-38.86841965 342.52343750]
[-31.51461601 355.60885620]
[-25.36339760 369.30075073]
[-20.46428871 383.48895264]
[-16.85673523 398.05920410]
[-14.56978321 412.89416504]
[-13.62184620 427.87442017]
[-14.02055740 442.87930298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 200]
[59 199]
[60 198]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[71 188]
[72 187]
[73 186]
[74 185]
[84 176]
[85 175]
[86 174]
[87 173]
[88 172]
[89 171]
[90 170]
[91 168]
[93 166]
[94 165]
[95 164]
[96 163]
[97 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
