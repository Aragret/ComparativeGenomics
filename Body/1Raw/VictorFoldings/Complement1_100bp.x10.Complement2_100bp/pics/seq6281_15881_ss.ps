%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[45.46291351 800.85723877]
[30.53821373 802.39813232]
[15.55023670 803.09222412]
[0.54699755 802.93731689]
[-14.42344475 801.93377686]
[-29.31313515 800.08489990]
[-44.07437897 797.39660645]
[-58.65988541 793.87750244]
[-73.02294159 789.53881836]
[-87.11753082 784.39453125]
[-100.89850616 778.46112061]
[-114.32172394 771.75744629]
[-127.34417725 764.30517578]
[-139.92416382 756.12805176]
[-152.02137756 747.25231934]
[-163.59707642 737.70642090]
[-174.61416626 727.52087402]
[-185.03735352 716.72839355]
[-194.83326721 705.36346436]
[-203.97052002 693.46252441]
[-212.41984558 681.06378174]
[-220.15417480 668.20678711]
[-227.14872742 654.93286133]
[-233.38110352 641.28448486]
[-238.83132935 627.30529785]
[-243.48194885 613.04022217]
[-247.31808472 598.53485107]
[-250.32742310 583.83575439]
[-252.50035095 568.98986816]
[-253.82986450 554.04486084]
[-254.31175232 539.04852295]
[-253.94444275 524.04901123]
[-252.72912598 509.09426880]
[-250.66967773 494.23223877]
[-247.77270508 479.51052856]
[-244.04750061 464.97628784]
[-239.50598145 450.67608643]
[-234.16268921 436.65573120]
[-228.03475952 422.96011353]
[-221.14181519 409.63314819]
[-213.50593567 396.71746826]
[-205.15158081 384.25448608]
[-196.10549927 372.28411865]
[-186.39668274 360.84469604]
[-176.05624390 349.97290039]
[-165.11727905 339.70349121]
[-153.61485291 330.06942749]
[-141.58578491 321.10156250]
[-129.06863403 312.82858276]
[-116.10348511 305.27700806]
[-102.73187256 298.47103882]
[-88.99662018 292.43249512]
[-74.94174194 287.18066406]
[-60.61225128 282.73242188]
[-46.05405045 279.10198975]
[-31.31377602 276.30102539]
[-16.43864250 274.33847046]
[-1.47630322 273.22061157]
[13.52531433 272.95104980]
[28.51815605 273.53063965]
[43.45419312 274.95751953]
[58.28558350 277.22711182]
[61.38969421 262.55181885]
[56.45366669 248.49888611]
[66.87930298 236.59860229]
[69.98341370 221.92329407]
[73.08751678 207.24800110]
[76.19162750 192.57269287]
[79.29573822 177.89738464]
[82.07135010 163.15643311]
[84.51708221 148.35716248]
[86.96280670 133.55789185]
[89.40853119 118.75861359]
[91.85426331 103.95934296]
[90.07540894 100.53764343]
[89.81342316 96.34845734]
[91.37726593 92.08683777]
[94.75383759 88.55999756]
[97.85794830 73.88469696]
[100.85272217 59.18669128]
[95.91439056 44.15594101]
[105.95532227 33.15462112]
[108.84059143 18.43472862]
[111.72586060 3.71483707]
[114.61113739 -11.00505447]
[117.49640656 -25.72494507]
[103.20376587 -30.33545113]
[89.55676270 -36.60406876]
[76.74697113 -44.44279480]
[64.95422363 -53.74158859]
[54.34408188 -64.36990356]
[45.06548309 -76.17855072]
[37.24869156 -89.00173187]
[31.00344086 -102.65944672]
[26.41740417 -116.95996094]
[23.55496216 -131.70251465]
[22.45629883 -146.68014526]
[23.13683891 -161.68257141]
[25.58702850 -176.49922180]
[29.77246857 -190.92207336]
[35.63440704 -204.74864197]
[43.09054565 -217.78483582]
[52.03621292 -229.84764099]
[62.34582901 -240.76771545]
[73.87466431 -250.39176941]
[86.46086121 -258.58468628]
[99.92774200 -265.23144531]
[114.08625031 -270.23876953]
[128.73760986 -273.53631592]
[143.67616272 -275.07781982]
[158.69216919 -274.84161377]
[173.57484436 -272.83105469]
[188.11524963 -269.07434082]
[202.10926819 -263.62423706]
[215.36044312 -256.55722046]
[227.68275452 -247.97250366]
[238.90319824 -237.99063110]
[248.86427307 -226.75170898]
[257.42614746 -214.41351318]
[264.46859741 -201.14927673]
[269.89276123 -187.14518738]
[273.62252808 -172.59783936]
[275.60552979 -157.71145630]
[275.81390381 -142.69503784]
[274.24472046 -127.75937653]
[270.92004395 -113.11414337]
[265.88650513 -98.96494293]
[259.21481323 -85.51039886]
[250.99858093 -72.93939972]
[241.35319519 -61.42841339]
[230.41403198 -51.13904572]
[218.33467102 -42.21574020]
[205.28468323 -34.78376770]
[191.44726562 -28.94745636]
[177.01669312 -24.78874207]
[162.19554138 -22.36600876]
[147.19186401 -21.71326447]
[132.21629333 -22.83967400]
[129.33102417 -8.11978149]
[126.44575500 6.60010958]
[123.56048584 21.32000160]
[120.67520905 36.03989410]
[125.81991577 50.01777649]
[115.57261658 62.07196426]
[117.37081146 69.24052429]
[112.53325653 76.98880768]
[109.42914581 91.66410828]
[106.65353394 106.40507507]
[104.20780182 121.20434570]
[101.76207733 136.00361633]
[99.31635284 150.80288696]
[96.87062073 165.60215759]
[98.71021271 170.48713684]
[98.51190186 175.12544250]
[96.71089172 178.78213501]
[93.97104645 181.00149536]
[90.86693573 195.67680359]
[87.76282501 210.35211182]
[84.65871429 225.02740479]
[81.55460358 239.70271301]
[86.26860046 254.80531311]
[76.06499481 265.65591431]
[72.96088409 280.33123779]
[87.44099426 284.26156616]
[101.67555237 289.00485229]
[115.61896515 294.54583740]
[129.22656250 300.86679077]
[142.45474243 307.94747925]
[155.26115417 315.76522827]
[167.60476685 324.29498291]
[179.44602966 333.50939941]
[190.74702454 343.37899780]
[201.47154236 353.87213135]
[211.58523560 364.95520020]
[221.05569458 376.59268188]
[229.85260010 388.74734497]
[237.94775391 401.38021851]
[245.31524658 414.45086670]
[251.93145752 427.91735840]
[257.77520752 441.73663330]
[262.82775879 455.86434937]
[267.07296753 470.25531006]
[270.49719238 484.86340332]
[273.08944702 499.64178467]
[274.84149170 514.54321289]
[275.74768066 529.51983643]
[275.80511475 544.52374268]
[275.01358032 559.50689697]
[273.37567139 574.42126465]
[270.89657593 589.21911621]
[267.58425903 603.85296631]
[263.44934082 618.27600098]
[258.50509644 632.44195557]
[252.76728821 646.30554199]
[246.25433350 659.82232666]
[238.98710632 672.94897461]
[230.98889160 685.64343262]
[222.28527832 697.86505127]
[212.90415955 709.57470703]
[202.87561035 720.73486328]
[192.23171997 731.30981445]
[181.00659180 741.26562500]
[169.23620605 750.57037354]
[156.95825195 759.19433594]
[144.21205139 767.10992432]
[131.03845215 774.29162598]
[117.47964478 780.71655273]
[103.57905579 786.36413574]
[89.38121796 791.21618652]
[74.93161774 795.25726318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 163]
[63 162]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[78 147]
[79 146]
[80 144]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
