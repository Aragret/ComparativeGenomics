%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[179.81222534 316.95352173]
[177.72578430 302.09341431]
[176.65830994 287.12551880]
[176.61476135 272.11968994]
[177.59535217 257.14587402]
[179.59550476 242.27389526]
[182.60591125 227.57307434]
[186.61251831 213.11195374]
[191.59664917 198.95797729]
[197.53507996 185.17712402]
[204.40010071 171.83364868]
[191.56115723 164.07725525]
[178.72221375 156.32087708]
[165.88327026 148.56448364]
[153.04432678 140.80809021]
[140.20539856 133.05169678]
[127.36645508 125.29530334]
[114.52751160 117.53890991]
[104.33958435 122.35688019]
[93.08900452 121.70023346]
[83.53074646 115.72976685]
[78.00537872 105.90750122]
[77.86591339 94.63863373]
[65.26360321 86.50341797]
[52.66128922 78.36820221]
[40.05897522 70.23298645]
[31.08824921 82.26207733]
[21.32590294 93.65811157]
[10.81648159 104.36908722]
[-0.39206126 114.34613800]
[-12.24858379 123.54373169]
[-24.69898605 131.91992188]
[-37.68646240 139.43646240]
[-51.15174866 146.05906677]
[-65.03340912 151.75753784]
[-79.26810455 156.50584412]
[-93.79087830 160.28233337]
[-108.53547668 163.06977844]
[-123.43461609 164.85545349]
[-138.42031860 165.63121033]
[-153.42419434 165.39350891]
[-168.37779236 164.14344788]
[-183.21289062 161.88671875]
[-197.86180115 158.63362122]
[-212.25765991 154.39900208]
[-226.33479309 149.20216370]
[-240.02899170 143.06684875]
[-253.27774048 136.02102661]
[-266.02059937 128.09684753]
[-278.19943237 119.33049011]
[-289.75863647 109.76194000]
[-300.64553833 99.43484497]
[-310.81039429 88.39634705]
[-320.20684814 76.69680023]
[-328.79205322 64.38958740]
[-336.52679443 51.53086090]
[-343.37579346 38.17930222]
[-349.30780029 24.39583015]
[-354.29574585 10.24333096]
[-358.31689453 -4.21361780]
[-361.35287476 -18.90905190]
[-363.38983154 -33.77591705]
[-364.41848755 -48.74638367]
[-364.43414307 -63.75214005]
[-363.43673706 -78.72471619]
[-361.43078613 -93.59580231]
[-358.42544556 -108.29753113]
[-354.43447876 -122.76284027]
[-349.47607422 -136.92572021]
[-343.57281494 -150.72152710]
[-336.75167847 -164.08734131]
[-329.04376221 -176.96217346]
[-320.48428345 -189.28727722]
[-311.11224365 -201.00639343]
[-300.97042847 -212.06607056]
[-290.10510254 -222.41584778]
[-278.56588745 -232.00849915]
[-266.40536499 -240.80024719]
[-253.67906189 -248.75097656]
[-240.44503784 -255.82441711]
[-226.76367188 -261.98831177]
[-212.69740295 -267.21447754]
[-198.31040955 -271.47912598]
[-183.66831970 -274.76278687]
[-168.83796692 -277.05044556]
[-153.88700867 -278.33169556]
[-138.88365173 -278.60070801]
[-123.89636230 -277.85620117]
[-108.99353790 -276.10162354]
[-94.24315643 -273.34494019]
[-79.71253204 -269.59875488]
[-65.46796417 -264.88012695]
[-51.57444763 -259.21063232]
[-38.09537506 -252.61613464]
[-25.09224892 -245.12669373]
[-12.62440014 -236.77650452]
[-0.74871719 -227.60366821]
[10.48061371 -217.65002441]
[21.01235390 -206.96098328]
[30.79845238 -195.58534241]
[39.79425430 -183.57499695]
[47.95871353 -170.98474121]
[55.25457764 -157.87202454]
[61.64855576 -144.29667664]
[67.11148071 -130.32064819]
[71.61841583 -116.00769806]
[75.14879608 -101.42314148]
[77.68652344 -86.63352203]
[79.22001648 -71.70632172]
[79.74227142 -56.70964813]
[79.25091553 -41.71192932]
[77.74817657 -26.78160095]
[75.24092102 -11.98678493]
[71.74058533 2.60501480]
[67.26314545 16.92721748]
[61.82902908 30.91447258]
[55.46302795 44.50296021]
[48.19419098 57.63067627]
[60.79650497 65.76589203]
[73.39881897 73.90110779]
[86.00112915 82.03632355]
[103.43857574 77.48693085]
[118.72295380 87.03415680]
[122.28390503 104.69997406]
[135.12284851 112.45636749]
[147.96177673 120.21275330]
[160.80072021 127.96914673]
[173.63966370 135.72554016]
[186.47860718 143.48193359]
[199.31755066 151.23832703]
[212.15647888 158.99470520]
[220.77416992 146.71008301]
[230.21011353 135.04219055]
[240.42030334 124.04542542]
[251.35713196 113.77106476]
[262.96963501 104.26702118]
[275.20361328 95.57760620]
[288.00210571 87.74332428]
[301.30535889 80.80070496]
[315.05139160 74.78212738]
[329.17611694 69.71564484]
[343.61364746 65.62487793]
[358.29669189 62.52890778]
[373.15676880 60.44216919]
[388.12463379 59.37438202]
[403.13043213 59.33053207]
[418.10427856 60.31082535]
[432.97631836 62.31068802]
[447.67718506 65.32079315]
[462.13839722 69.32711029]
[476.29248047 74.31095886]
[490.07345581 80.24909973]
[503.41705322 87.11385345]
[516.26110840 94.87320709]
[528.54565430 103.49097443]
[540.21350098 112.92699432]
[551.21020508 123.13725281]
[561.48449707 134.07415771]
[570.98846436 145.68670654]
[579.67779541 157.92077637]
[587.51196289 170.71928406]
[594.45452881 184.02259827]
[600.47296143 197.76867676]
[605.53936768 211.89341736]
[609.63006592 226.33097839]
[612.72589111 241.01403809]
[614.81256104 255.87414551]
[615.88024902 270.84201050]
[615.92401123 285.84783936]
[614.94360352 300.82165527]
[612.94366455 315.69369507]
[609.93341064 330.39453125]
[605.92700195 344.85571289]
[600.94305420 359.00976562]
[595.00482178 372.79067993]
[588.14001465 386.13424683]
[580.38055420 398.97824097]
[571.76269531 411.26275635]
[562.32659912 422.93051147]
[552.11627197 433.92715454]
[541.17932129 444.20135498]
[529.56671143 453.70526123]
[517.33258057 462.39450073]
[504.53399658 470.22860718]
[491.23065186 477.17105103]
[477.48452759 483.18945312]
[463.35974121 488.25573730]
[448.92214966 492.34631348]
[434.23907471 495.44207764]
[419.37896729 497.52862549]
[404.41110229 498.59622192]
[389.40527344 498.63986206]
[374.43142700 497.65936279]
[359.55944824 495.65930176]
[344.85858154 492.64898682]
[330.39746094 488.64248657]
[316.24343872 483.65844727]
[302.46255493 477.72012329]
[289.11901855 470.85519409]
[276.27508545 463.09567261]
[263.99063110 454.47772217]
[252.32293701 445.04156494]
[241.32637024 434.83114624]
[231.05224609 423.89410400]
[221.54843140 412.28143311]
[212.85925293 400.04724121]
[205.02523804 387.24862671]
[198.08288574 373.94522095]
[192.06457520 360.19906616]
[186.99838257 346.07424927]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 131]
[12 130]
[13 129]
[14 128]
[15 127]
[16 126]
[17 125]
[18 124]
[23 121]
[24 120]
[25 119]
[26 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
