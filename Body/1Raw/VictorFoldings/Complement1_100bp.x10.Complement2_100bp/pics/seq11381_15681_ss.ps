%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[76.71907806 821.35540771]
[61.74946976 820.26348877]
[46.92914581 817.88873291]
[32.36783600 814.24871826]
[18.17333984 809.37042236]
[4.45075893 803.28997803]
[-8.69831181 796.05230713]
[-21.17651939 787.71112061]
[-32.89147949 778.32812500]
[-43.75645065 767.97271729]
[-53.69099808 756.72167969]
[-62.62156677 744.65826416]
[-70.48203278 731.87176514]
[-77.21420288 718.45684814]
[-82.76824188 704.51287842]
[-87.10301208 690.14306641]
[-90.18642426 675.45385742]
[-91.99565887 660.55389404]
[-92.51731110 645.55358887]
[-91.74752808 630.56396484]
[-89.69200134 615.69598389]
[-86.36595154 601.05981445]
[-81.79399872 586.76367188]
[-76.01000977 572.91351318]
[-69.05678558 559.61187744]
[-60.98582077 546.95715332]
[-51.85686874 535.04315186]
[-41.73751450 523.95800781]
[-30.70268440 513.78387451]
[-18.83407211 504.59594727]
[-6.21955585 496.46237183]
[7.04747295 489.44329834]
[20.86878586 483.59069824]
[35.14205551 478.94793701]
[49.76160431 475.54937744]
[64.61919403 473.42016602]
[79.60482025 472.57608032]
[80.05142212 457.58273315]
[80.49803162 442.58938599]
[70.12908936 431.95828247]
[70.36842346 416.74652100]
[81.58962250 405.94271851]
[82.03623199 390.94934082]
[82.48283386 375.95599365]
[82.92944336 360.96264648]
[83.37604523 345.96929932]
[83.82265472 330.97595215]
[84.26925659 315.98260498]
[76.91432953 303.03060913]
[85.05908203 289.46691895]
[85.50568390 274.47357178]
[82.94081116 270.44485474]
[82.87952423 264.76214600]
[86.19541168 259.04232788]
[87.08823395 244.06890869]
[87.98104858 229.09550476]
[88.76236725 214.11587524]
[89.43215179 199.13082886]
[89.99036407 184.14122009]
[90.43697357 169.14787292]
[90.88357544 154.15452576]
[91.33018494 139.16117859]
[91.77678680 124.16782379]
[92.22339630 109.17447662]
[92.44672394 94.17613983]
[92.44672394 79.17613983]
[92.44672394 64.17613983]
[92.44672394 49.17613602]
[84.70941925 35.37596512]
[92.44672394 22.64869308]
[92.44672394 7.64869261]
[92.44672394 -7.35130739]
[84.70941925 -21.15147972]
[92.44672394 -33.87874985]
[84.70941925 -47.67892456]
[92.44672394 -60.40619659]
[92.44672394 -75.40619659]
[92.44672394 -90.40619659]
[92.44672394 -105.40619659]
[92.44672394 -120.40619659]
[84.31765747 -107.79991913]
[71.56936646 -99.89542389]
[56.66334534 -98.21894073]
[42.47771454 -103.09417725]
[31.75149918 -113.57980347]
[26.55576134 -127.65119934]
[27.89371681 -142.59141541]
[35.50702667 -155.51571655]
[47.92568207 -163.92861938]
[62.75183105 -166.20573425]
[77.12277985 -161.90739441]
[88.26372528 -151.86351013]
[94.02373505 -138.01217651]
[96.68953705 -152.77339172]
[99.35533142 -167.53460693]
[102.02112579 -182.29582214]
[103.69266510 -197.20240784]
[104.36244965 -212.18743896]
[105.03223419 -227.17248535]
[91.12654877 -233.25494385]
[80.35987854 -243.95275879]
[74.18833160 -257.81912231]
[73.44655609 -272.97875977]
[78.23486328 -287.38140869]
[87.90568542 -299.07925415]
[101.15111542 -306.49026489]
[116.17982483 -308.61215210]
[130.95930481 -305.15792847]
[143.49073792 -296.59478760]
[152.07936096 -284.08078003]
[155.56364441 -269.30838013]
[153.47235107 -254.27539062]
[146.08830261 -241.01490784]
[134.41015625 -231.32029724]
[120.01727295 -226.50270081]
[119.34748840 -211.51765442]
[118.67770386 -196.53262329]
[128.50971985 -207.86097717]
[142.87521362 -212.17747498]
[157.32292175 -208.14460754]
[167.37603760 -197.01200867]
[169.91949463 -182.22921753]
[164.16517639 -168.37686157]
[151.89613342 -159.74722290]
[136.91404724 -159.01431274]
[123.86128998 -166.40521240]
[116.78234100 -179.63003540]
[114.11654663 -164.86882019]
[111.45075226 -150.10760498]
[108.78495789 -135.34637451]
[107.44672394 -120.40619659]
[107.44672394 -105.40619659]
[107.44672394 -90.40619659]
[107.44672394 -75.40619659]
[107.44672394 -60.40619659]
[115.18402100 -47.67892456]
[107.44672394 -33.87874985]
[115.18402100 -21.15147972]
[107.44672394 -7.35130739]
[107.44672394 7.64869261]
[107.44672394 22.64869308]
[115.18402100 35.37596512]
[107.44672394 49.17613602]
[107.44672394 64.17613983]
[107.44672394 79.17613983]
[107.44672394 94.17613983]
[110.21977997 98.62856293]
[110.30082703 104.31774139]
[107.21674347 109.62107849]
[106.77014160 124.61443329]
[106.32353210 139.60777283]
[105.87692261 154.60113525]
[105.43032074 169.59448242]
[104.98371124 184.58782959]
[107.85623169 193.25885010]
[104.41719055 199.80061340]
[103.74740601 214.78565979]
[106.49050140 223.49847412]
[102.95445251 229.98832703]
[102.06163788 244.96173096]
[101.16882324 259.93515015]
[100.49903870 274.92016602]
[100.05242920 289.91351318]
[107.37541962 303.93795776]
[99.26261139 316.42919922]
[98.81600189 331.42254639]
[98.36940002 346.41592407]
[97.92279053 361.40927124]
[97.47618103 376.40261841]
[97.02957916 391.39596558]
[96.58296967 406.38931274]
[107.14122009 417.84185791]
[106.47471619 433.04089355]
[95.49137878 443.03598022]
[95.04477692 458.02935791]
[94.59816742 473.02270508]
[109.50698090 474.75723267]
[124.21149445 477.76699829]
[138.60284424 482.02972412]
[152.57446289 487.51382446]
[166.02291870 494.17868042]
[178.84864807 501.97497559]
[190.95668030 510.84497070]
[202.25737000 520.72302246]
[212.66705322 531.53594971]
[222.10867310 543.20373535]
[230.51231384 555.64001465]
[237.81573486 568.75262451]
[243.96490479 582.44458008]
[248.91427612 596.61444092]
[252.62719727 611.15734863]
[255.07618713 625.96557617]
[256.24310303 640.92956543]
[256.11932373 655.93841553]
[254.70576477 670.88104248]
[252.01287842 685.64691162]
[248.06060791 700.12658691]
[242.87821960 714.21289062]
[236.50407410 727.80157471]
[228.98536682 740.79193115]
[220.37777710 753.08789062]
[210.74501038 764.59838867]
[200.15840149 775.23822021]
[188.69633484 784.92852783]
[176.44364929 793.59759521]
[163.49108887 801.18133545]
[149.93453979 807.62347412]
[135.87437439 812.87640381]
[121.41468811 816.90118408]
[106.66252899 819.66802979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 176]
[38 175]
[39 174]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[48 165]
[50 163]
[51 162]
[54 161]
[55 160]
[56 159]
[57 157]
[58 156]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 146]
[66 145]
[67 144]
[68 143]
[70 141]
[71 140]
[72 139]
[74 137]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
