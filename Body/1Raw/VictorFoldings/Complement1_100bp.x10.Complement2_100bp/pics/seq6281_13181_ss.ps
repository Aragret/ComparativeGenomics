%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[184.66767883 481.82833862]
[178.15007019 468.31192017]
[172.55982971 454.38632202]
[167.92245483 440.11508179]
[164.25910950 425.56335449]
[161.58651733 410.79751587]
[159.91685486 395.88494873]
[159.25776672 380.89364624]
[159.61222839 365.89208984]
[160.97863770 350.94863892]
[163.35076904 336.13156128]
[166.71778870 321.50842285]
[171.06433105 307.14596558]
[176.37057495 293.10971069]
[182.61230469 279.46368408]
[189.76103210 266.27017212]
[197.78413391 253.58937073]
[206.64501953 241.47914124]
[216.30326843 229.99475098]
[205.50109863 219.58737183]
[194.69894409 209.18000793]
[183.89678955 198.77262878]
[180.38365173 198.47235107]
[176.84140015 196.45553589]
[174.07525635 192.72703552]
[172.85778809 187.65113831]
[162.53111267 176.77180481]
[152.20445251 165.89245605]
[141.87777710 155.01312256]
[131.55110168 144.13378906]
[121.22444153 133.25445557]
[106.85063934 129.35021973]
[102.96176910 114.01439667]
[89.61100006 109.86124420]
[86.15889740 96.31227112]
[73.30906677 95.19668579]
[64.93193054 85.92266846]
[65.11361694 73.82747650]
[52.28181839 72.52069855]
[44.04368973 63.12298584]
[44.40543747 51.03184509]
[34.40726471 39.84987259]
[24.40909195 28.66789627]
[14.41091919 17.48592186]
[2.42466068 26.51898003]
[-10.27543259 34.51736450]
[-23.60027695 41.42497635]
[-37.45640564 47.19335556]
[-51.74663162 51.78204346]
[-66.37071228 55.15885162]
[-81.22606659 57.30009842]
[-96.20849609 58.19076157]
[-111.21291351 57.82459259]
[-126.13406372 56.20416260]
[-140.86729431 53.34083557]
[-155.30923462 49.25469589]
[-169.35862732 43.97440338]
[-182.91688538 37.53700256]
[-195.88891602 29.98764420]
[-208.18373108 21.37928009]
[-219.71510315 11.77229691]
[-230.40213013 1.23407924]
[-240.16984558 -10.16145325]
[-248.94975281 -22.33436775]
[-256.68026733 -35.19927979]
[-263.30712891 -48.66594696]
[-268.78387451 -62.63991165]
[-273.07211304 -77.02314758]
[-276.14172363 -91.71478271]
[-277.97122192 -106.61174774]
[-278.54772949 -121.60955048]
[-277.86721802 -136.60299683]
[-275.93447876 -151.48692322]
[-272.76303101 -166.15690613]
[-268.37515259 -180.51005554]
[-262.80163574 -194.44570923]
[-256.08154297 -207.86608887]
[-248.26199341 -220.67707825]
[-239.39788818 -232.78881836]
[-229.55137634 -244.11633301]
[-218.79151917 -254.58018494]
[-207.19381714 -264.10696411]
[-194.83958435 -272.62985229]
[-181.81550598 -280.08908081]
[-168.21293640 -286.43231201]
[-154.12727356 -291.61502075]
[-139.65733337 -295.60092163]
[-124.90460205 -298.36199951]
[-109.97257233 -299.87893677]
[-94.96598053 -300.14102173]
[-79.99008179 -299.14648438]
[-65.14993286 -296.90225220]
[-50.54962158 -293.42413330]
[-36.29156494 -288.73645020]
[-22.47577286 -282.87210083]
[-9.19915199 -275.87225342]
[3.44516754 -267.78598022]
[15.36849403 -258.67001343]
[26.48719406 -248.58830261]
[36.72327423 -237.61154175]
[46.00493622 -225.81674194]
[54.26707458 -213.28663635]
[61.45173264 -200.10911560]
[67.50852203 -186.37660217]
[72.39495087 -172.18542480]
[76.07674408 -157.63514709]
[78.52807617 -142.82778931]
[79.73175812 -127.86725616]
[79.67934418 -112.85846710]
[78.37120056 -97.90670013]
[75.81649780 -83.11683655]
[72.03317261 -68.59261322]
[67.04774475 -54.43592072]
[60.89518738 -40.74604797]
[53.61866379 -27.61902428]
[45.26921082 -15.14692879]
[35.90539169 -3.41724515]
[25.59289360 7.48775005]
[35.59106445 18.66972542]
[45.58923721 29.85169983]
[55.58740997 41.03367233]
[72.52967072 45.60826111]
[76.14549255 63.66393280]
[93.15398407 67.98576355]
[97.03823090 85.98560333]
[110.38899994 90.13875580]
[113.84110260 103.68772888]
[128.95353699 108.37014008]
[132.10377502 122.92778778]
[142.43045044 133.80712891]
[152.75711060 144.68646240]
[163.08378601 155.56579590]
[173.41044617 166.44512939]
[183.73712158 177.32446289]
[194.30416870 187.97047424]
[205.10632324 198.37783813]
[215.90847778 208.78521729]
[226.71063232 219.19259644]
[237.82765198 209.11366272]
[249.59974670 199.80824280]
[261.97317505 191.31878662]
[274.89151001 183.68402100]
[288.29580688 176.93881226]
[302.12487793 171.11389160]
[316.31564331 166.23587036]
[330.80337524 162.32699585]
[345.52191162 159.40510559]
[360.40411377 157.48353577]
[375.38211060 156.57104492]
[390.38754272 156.67179871]
[405.35192871 157.78533936]
[420.20700073 159.90658569]
[434.88497925 163.02586365]
[449.31890869 167.12893677]
[463.44287109 172.19706726]
[477.19250488 178.20716858]
[490.50500488 185.13177490]
[503.31964111 192.93931580]
[515.57794189 201.59417725]
[527.22406006 211.05683899]
[538.20471191 221.28413391]
[548.46990967 232.22941589]
[557.97271729 243.84272766]
[566.66986084 256.07107544]
[574.52166748 268.85867310]
[581.49224854 282.14715576]
[587.54980469 295.87591553]
[592.66668701 309.98233032]
[596.81958008 324.40197754]
[599.98956299 339.06909180]
[602.16210938 353.91674805]
[603.32733154 368.87719727]
[603.47998047 383.88217163]
[602.61920166 398.86322021]
[600.74908447 413.75201416]
[597.87805176 428.48056030]
[594.01922607 442.98168945]
[589.19030762 457.18920898]
[583.41320801 471.03833008]
[576.71429443 484.46585083]
[569.12426758 497.41049194]
[560.67761230 509.81317139]
[551.41290283 521.61737061]
[541.37243652 532.76910400]
[530.60205078 543.21765137]
[519.15081787 552.91516113]
[507.07104492 561.81756592]
[494.41781616 569.88409424]
[481.24890137 577.07800293]
[467.62435913 583.36651611]
[453.60638428 588.72082520]
[439.25891113 593.11657715]
[424.64739990 596.53375244]
[409.83853149 598.95666504]
[394.89990234 600.37432861]
[379.89962769 600.78021240]
[364.90615845 600.17254639]
[349.98794556 598.55401611]
[335.21301270 595.93206787]
[320.64880371 592.31866455]
[306.36178589 587.73022461]
[292.41708374 582.18780518]
[278.87838745 575.71655273]
[265.80746460 568.34613037]
[253.26393127 560.11004639]
[241.30502319 551.04595947]
[229.98532104 541.19519043]
[219.35646057 530.60272217]
[209.46696472 519.31689453]
[200.36192322 507.38912964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 138]
[20 137]
[21 136]
[22 135]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[33 127]
[35 125]
[38 123]
[41 121]
[42 120]
[43 119]
[44 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
