%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[186.65383911 835.51959229]
[172.08576965 831.93597412]
[157.68663025 827.72460938]
[143.48342896 822.89343262]
[129.50283813 817.45159912]
[115.77110291 811.40917969]
[102.31401062 804.77764893]
[89.15682220 797.56933594]
[76.32424164 789.79791260]
[63.84035110 781.47784424]
[51.72859955 772.62481689]
[40.01171875 763.25537109]
[28.71170616 753.38720703]
[17.84978104 743.03881836]
[7.44633007 732.22961426]
[-2.47911263 720.97985840]
[-11.90791321 709.31072998]
[-20.82237053 697.24414062]
[-29.20574760 684.80267334]
[-37.04230499 672.00970459]
[-44.31733322 658.88934326]
[-51.01717377 645.46612549]
[-57.12924576 631.76525879]
[-62.64207458 617.81250000]
[-67.54531097 603.63403320]
[-71.82975006 589.25646973]
[-75.48735046 574.70678711]
[-78.51124573 560.01232910]
[-80.89575195 545.20068359]
[-82.63639832 530.29962158]
[-83.72991943 515.33715820]
[-84.17425537 500.34140015]
[-83.96857452 485.34045410]
[-83.11325836 470.36248779]
[-81.60992432 455.43563843]
[-79.46138763 440.58792114]
[-76.67167664 425.84719849]
[-73.24604034 411.24118042]
[-69.19090271 396.79727173]
[-64.51388550 382.54257202]
[-59.22375107 368.50384521]
[-53.33044815 354.70748901]
[-46.84503555 341.17935181]
[-39.77968597 327.94485474]
[-32.14766693 315.02886963]
[-23.96330643 302.45559692]
[-15.24197006 290.24865723]
[-6.00003052 278.43099976]
[3.74516106 267.02474976]
[13.97530937 256.05139160]
[24.67120743 245.53146362]
[35.81277466 235.48475647]
[47.37909698 225.93011475]
[59.34845734 216.88548279]
[71.69837952 208.36784363]
[84.40569305 200.39318848]
[97.44651794 192.97647095]
[110.79639435 186.13163757]
[124.43024445 179.87152100]
[118.76746368 165.98150635]
[113.10467529 152.09147644]
[107.44188690 138.20144653]
[101.77909851 124.31141663]
[96.11631012 110.42139435]
[89.31562805 123.79116058]
[75.09626770 128.56712341]
[61.60372925 122.01338959]
[56.56715012 107.88423920]
[62.87171555 94.27349091]
[76.90587616 88.97799683]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[81.82758331 66.35088348]
[77.42658234 52.01103210]
[72.81257629 37.73830032]
[67.98657990 23.53584480]
[63.16057968 9.33338928]
[48.29782486 11.62896538]
[33.26224899 11.30858612]
[18.51077080 8.38198948]
[4.49166679 2.93810964]
[-8.36903858 -4.85761929]
[-19.68052101 -14.76829433]
[-29.09903908 -26.49274063]
[-36.33837128 -39.67466736]
[-41.17852783 -53.91348648]
[-43.47241974 -68.77650452]
[-43.15033722 -83.81204224]
[-40.22206497 -98.56318665]
[-34.77659607 -112.58167267]
[-26.97940826 -125.44149780]
[-17.06745148 -136.75184631]
[-5.34193611 -146.16903687]
[7.84081030 -153.40687561]
[22.08017921 -158.24542236]
[36.94345474 -160.53762817]
[51.97895432 -160.21383667]
[66.72976685 -157.28388977]
[80.74764252 -151.83683777]
[93.60657501 -144.03819275]
[104.91580963 -134.12495422]
[114.33166504 -122.39836884]
[121.56801605 -109.21479797]
[126.40493774 -94.97488403]
[128.69546509 -80.11134338]
[128.36996460 -65.07588196]
[125.43834686 -50.32540131]
[119.98970032 -36.30814743]
[112.18959808 -23.45009613]
[102.27507019 -12.14198589]
[90.54742432 -2.72745776]
[77.36303711 4.50739145]
[82.18903351 18.70984650]
[87.01502991 32.91230392]
[90.82704926 35.78937912]
[92.87217712 41.09168625]
[91.76643372 47.61003494]
[96.16742706 61.94988251]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[110.00634003 104.75860596]
[115.66912842 118.64863586]
[121.33191681 132.53866577]
[126.99469757 146.42868042]
[132.65748596 160.31871033]
[138.32026672 174.20874023]
[152.44477844 169.15213013]
[166.77507019 164.71211243]
[181.28424072 160.89703369]
[195.94505310 157.71406555]
[210.72999573 155.16917419]
[225.61129761 153.26712036]
[240.56101990 152.01150513]
[255.55110168 151.40467834]
[270.55340576 151.44776917]
[285.53976440 152.14070129]
[300.48202515 153.48216248]
[315.35214233 155.46966553]
[330.12222290 158.09944153]
[344.76452637 161.36657715]
[359.25152588 165.26493835]
[373.55609131 169.78718567]
[387.65130615 174.92485046]
[401.51074219 180.66828918]
[415.10836792 187.00669861]
[428.41864014 193.92820740]
[441.41662598 201.41978455]
[454.07785034 209.46740723]
[466.37857056 218.05592346]
[478.29571533 227.16925049]
[489.80691528 236.79023743]
[500.89050293 246.90086365]
[511.52572632 257.48211670]
[521.69262695 268.51412964]
[531.37200928 279.97622681]
[540.54583740 291.84686279]
[549.19683838 304.10375977]
[557.30877686 316.72387695]
[564.86639404 329.68356323]
[571.85546875 342.95846558]
[578.26300049 356.52368164]
[584.07684326 370.35369873]
[589.28619385 384.42260742]
[593.88116455 398.70397949]
[597.85314941 413.17095947]
[601.19470215 427.79644775]
[603.89959717 442.55294800]
[605.96270752 457.41278076]
[607.38018799 472.34802246]
[608.14935303 487.33065796]
[608.26873779 502.33255005]
[607.73815918 517.32556152]
[606.55865479 532.28143311]
[604.73229980 547.17224121]
[602.26263428 561.96990967]
[599.15429688 576.64672852]
[595.41308594 591.17517090]
[591.04602051 605.52783203]
[586.06134033 619.67785645]
[580.46838379 633.59869385]
[574.27758789 647.26416016]
[567.50067139 660.64868164]
[560.15026855 673.72698975]
[552.24029541 686.47467041]
[543.78552246 698.86767578]
[534.80181885 710.88287354]
[525.30603027 722.49755859]
[515.31604004 733.69000244]
[504.85061646 744.43920898]
[493.92935181 754.72497559]
[482.57278442 764.52801514]
[470.80221558 773.82983398]
[458.63973999 782.61309814]
[446.10821533 790.86120605]
[433.23114014 798.55877686]
[420.03271484 805.69128418]
[406.53771973 812.24530029]
[392.77145386 818.20861816]
[378.75982666 823.57000732]
[364.52905273 828.31939697]
[350.10592651 832.44787598]
[335.51748657 835.94763184]
[320.79116821 838.81219482]
[305.95455933 841.03613281]
[291.03552246 842.61529541]
[276.06210327 843.54669189]
[261.06237793 843.82855225]
[246.06454468 843.46044922]
[231.09672546 842.44293213]
[216.18702698 840.77801514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[64 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 114]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
