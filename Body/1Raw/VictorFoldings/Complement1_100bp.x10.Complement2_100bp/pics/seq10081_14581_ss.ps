%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[-49.87172699 615.64239502]
[-62.72580338 623.38018799]
[-75.96116638 630.44598389]
[-89.54271698 636.82104492]
[-103.43444061 642.48852539]
[-117.59950256 647.43334961]
[-132.00033569 651.64239502]
[-146.59875488 655.10455322]
[-161.35603333 657.81060791]
[-176.23306274 659.75335693]
[-191.19038391 660.92773438]
[-206.18830872 661.33050537]
[-221.18708801 660.96069336]
[-236.14695740 659.81927490]
[-251.02821350 657.90924072]
[-265.79141235 655.23565674]
[-280.39743042 651.80566406]
[-294.80746460 647.62823486]
[-308.98336792 642.71459961]
[-322.88754272 637.07769775]
[-336.48309326 630.73254395]
[-349.73394775 623.69586182]
[-362.60501099 615.98638916]
[-375.06213379 607.62451172]
[-387.07229614 598.63250732]
[-398.60360718 589.03411865]
[-409.62554932 578.85485840]
[-420.10882568 568.12170410]
[-430.02569580 556.86309814]
[-439.34982300 545.10888672]
[-448.05648804 532.89031982]
[-456.12261963 520.23974609]
[-463.52682495 507.19064331]
[-470.24945068 493.77774048]
[-476.27270508 480.03652954]
[-481.58056641 466.00344849]
[-486.15899658 451.71575928]
[-489.99581909 437.21130371]
[-493.08090210 422.52859497]
[-495.40603638 407.70651245]
[-496.96508789 392.78439331]
[-497.75387573 377.80178833]
[-497.77032471 362.79846191]
[-497.01440430 347.81417847]
[-495.48812866 332.88867188]
[-493.19552612 318.06152344]
[-490.14266968 303.37207031]
[-486.33764648 288.85922241]
[-481.79058838 274.56152344]
[-476.51351929 260.51684570]
[-470.52044678 246.76246643]
[-463.82727051 233.33482361]
[-456.45172119 220.26954651]
[-448.41336060 207.60127258]
[-439.73352051 195.36360168]
[-430.43518066 183.58898926]
[-420.54306030 172.30865479]
[-410.08334351 161.55250549]
[-399.08377075 151.34909058]
[-387.57354736 141.72543335]
[-375.58316040 132.70707703]
[-363.14440918 124.31792450]
[-350.29028320 116.58023071]
[-337.05490112 109.51451111]
[-323.47329712 103.13950348]
[-309.58154297 97.47210693]
[-295.41644287 92.52736664]
[-281.01559448 88.31838226]
[-266.41717529 84.85631561]
[-251.65985107 82.15035248]
[-236.78282166 80.20766449]
[-221.82550049 79.03340149]
[-206.82756042 78.63069153]
[-191.82878113 79.00057983]
[-176.86892700 80.14210510]
[-161.98768616 82.05223083]
[-147.22448730 84.72589874]
[-132.61851501 88.15600586]
[-118.20848083 92.33346558]
[-104.03260040 97.24720001]
[-90.12847137 102.88417816]
[-76.53296661 109.22944641]
[-63.28213501 116.26618958]
[-50.41111374 123.97573090]
[-37.95404053 132.33764648]
[-25.94394302 141.32974243]
[-14.41267300 150.92817688]
[-3.39080906 161.10751343]
[7.09242010 171.84074402]
[18.34851646 161.92608643]
[29.60461235 152.01144409]
[40.86070633 142.09678650]
[52.11680222 132.18212891]
[63.37289810 122.26748657]
[74.62899780 112.35282898]
[85.88509369 102.43817902]
[90.53220367 89.25122070]
[104.20025635 86.30572510]
[115.45635223 76.39107513]
[106.56909943 64.29502869]
[98.78568268 51.46084976]
[92.16702271 37.98899460]
[86.76491547 23.98488998]
[82.62164307 9.55814743]
[79.76963806 -5.17832708]
[78.23121643 -20.10919762]
[78.01840973 -35.11760712]
[79.13290405 -50.08609009]
[81.56596375 -64.89749908]
[85.29854584 -79.43591309]
[90.30143738 -93.58754730]
[96.53548431 -107.24163818]
[103.95190430 -120.29132843]
[112.49264526 -132.63447571]
[122.09085846 -144.17449951]
[132.67143250 -154.82104492]
[144.15155029 -164.49081421]
[156.44136047 -173.10812378]
[169.44470215 -180.60552979]
[183.05976868 -186.92433167]
[197.18002319 -192.01510620]
[211.69496155 -195.83801270]
[226.49095154 -198.36309814]
[241.45222473 -199.57061768]
[256.46166992 -199.45112610]
[271.40179443 -198.00555420]
[286.15573120 -195.24520874]
[300.60794067 -191.19171143]
[314.64535522 -185.87677002]
[328.15811157 -179.34197998]
[341.04043579 -171.63850403]
[353.19149780 -162.82662964]
[364.51620483 -152.97529602]
[374.92593384 -142.16163635]
[384.33917236 -130.47027588]
[392.68231201 -117.99270630]
[399.89004517 -104.82659149]
[405.90591431 -91.07497406]
[410.68286133 -76.84548187]
[414.18350220 -62.24948883]
[416.38043213 -47.40121841]
[417.25643921 -32.41688538]
[416.80471802 -17.41376877]
[415.02877808 -2.50928402]
[411.94250488 12.17991447]
[407.57006836 26.53886414]
[401.94567871 40.45518112]
[395.11337280 53.81995392]
[387.12661743 66.52857971]
[378.04791260 78.48159790]
[367.94830322 89.58545685]
[356.90686035 99.75325012]
[345.00994873 108.90539551]
[332.35076904 116.97027588]
[319.02832031 123.88475800]
[305.14691162 129.59474182]
[290.81515503 134.05551147]
[276.14523315 137.23219299]
[261.25198364 139.09988403]
[246.25192261 139.64399719]
[231.26248169 138.86026001]
[216.40095520 136.75480652]
[201.78367615 133.34411621]
[187.52503967 128.65489197]
[173.73663330 122.72382355]
[160.52638245 115.59732819]
[147.99768066 107.33119202]
[136.24856567 97.99010468]
[125.37100220 87.64717102]
[114.11490631 97.56182098]
[109.46779633 110.74877930]
[95.79974365 113.69427490]
[84.54364777 123.60892487]
[73.28755188 133.52357483]
[62.03145599 143.43823242]
[50.77536011 153.35287476]
[39.51926422 163.26753235]
[28.26316643 173.18218994]
[17.00707054 183.09683228]
[26.33127022 194.85096741]
[35.03801727 207.06950378]
[43.10422134 219.72006226]
[50.50849533 232.76908875]
[57.23120499 246.18197632]
[63.25451660 259.92315674]
[68.56246948 273.95617676]
[73.14096832 288.24386597]
[76.97789764 302.74826050]
[80.06305695 317.43099976]
[82.38828278 332.25305176]
[83.94740295 347.17517090]
[84.73627472 362.15774536]
[84.75282288 377.16107178]
[83.99699402 392.14538574]
[82.47079468 407.07089233]
[80.17826080 421.89804077]
[77.12548828 436.58752441]
[73.32057190 451.10037231]
[68.77359009 465.39810181]
[63.49660110 479.44281006]
[57.50360870 493.19723511]
[50.81050110 506.62490845]
[43.43502808 519.69024658]
[35.39674377 532.35858154]
[26.71696663 544.59625244]
[17.41871643 556.37097168]
[7.52664709 567.65130615]
[-2.93300700 578.40753174]
[-13.93250942 588.61102295]
[-25.44269180 598.23474121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 179]
[90 178]
[91 177]
[92 176]
[93 175]
[94 174]
[95 173]
[96 172]
[98 170]
[99 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
