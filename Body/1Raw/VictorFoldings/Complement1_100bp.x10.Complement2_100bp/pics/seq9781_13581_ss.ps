%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[184.00172424 481.77474976]
[176.91804504 468.54660034]
[170.71472168 454.88348389]
[165.41827393 440.84390259]
[161.05142212 426.48797607]
[157.63282776 411.87716675]
[155.17716980 397.07406616]
[153.69493103 382.14202881]
[153.19247437 367.14505005]
[153.67193604 352.14730835]
[155.13128662 337.21301270]
[157.56425476 322.40615845]
[160.96043396 307.79013062]
[165.30528259 293.42752075]
[170.58020020 279.37985229]
[176.76257324 265.70721436]
[183.82595825 252.46823120]
[191.74008179 239.71955872]
[200.47106934 227.51579285]
[209.98153687 215.90917969]
[199.02563477 205.66378784]
[191.99307251 203.39114380]
[187.98431396 195.18336487]
[177.18215942 184.77600098]
[166.38000488 174.36862183]
[155.57785034 163.96124268]
[144.77569580 153.55387878]
[133.97354126 143.14649963]
[123.17137909 132.73913574]
[112.36922455 122.33175659]
[101.56706238 111.92438507]
[90.61115265 101.67899323]
[79.50392151 91.59785461]
[61.42183304 88.11653900]
[56.72124863 71.20880890]
[45.46515274 61.29415512]
[29.99523926 57.97867966]
[25.55878830 43.76013184]
[14.30269241 33.84547806]
[3.04659700 23.93082809]
[-7.78132534 34.32422256]
[-19.44097519 43.77510071]
[-31.85056877 52.21717072]
[-44.92305756 59.59121704]
[-58.56674957 65.84551239]
[-72.68593597 70.93619537]
[-87.18158722 74.82754517]
[-101.95202637 77.49227905]
[-116.89363861 78.91168976]
[-131.90162659 79.07583618]
[-146.87071228 77.98356628]
[-161.69589233 75.64253235]
[-176.27319336 72.06915283]
[-190.50035095 67.28850555]
[-204.27755737 61.33412170]
[-217.50820923 54.24776077]
[-230.09948730 46.07913208]
[-241.96304321 36.88553238]
[-253.01570129 26.73145103]
[-263.17993164 15.68811321]
[-272.38439941 3.83298063]
[-280.56457520 -8.75079060]
[-287.66305542 -21.97493362]
[-293.63009644 -35.74668503]
[-298.42376709 -49.96945190]
[-302.01052856 -64.54346466]
[-304.36514282 -79.36649323]
[-305.47116089 -94.33457184]
[-305.32077026 -109.34269714]
[-303.91506958 -124.28560638]
[-301.26388550 -139.05848694]
[-297.38583374 -153.55769348]
[-292.30810547 -167.68154907]
[-286.06631470 -181.33097839]
[-278.70425415 -194.41021729]
[-270.27355957 -206.82754517]
[-260.83340454 -218.49586487]
[-250.44993591 -229.33331299]
[-239.19602966 -239.26388550]
[-227.15061951 -248.21791077]
[-214.39819336 -256.13259888]
[-201.02821350 -262.95242310]
[-187.13444519 -268.62954712]
[-172.81434631 -273.12414551]
[-158.16838074 -276.40469360]
[-143.29925537 -278.44821167]
[-128.31129456 -279.24029541]
[-113.30960846 -278.77545166]
[-98.39943695 -277.05691528]
[-83.68536377 -274.09677124]
[-69.27059937 -269.91574097]
[-55.25624847 -264.54315186]
[-41.74061966 -258.01672363]
[-28.81851768 -250.38220215]
[-16.58057785 -241.69316101]
[-5.11264610 -232.01054382]
[5.50483847 -221.40226746]
[15.19740105 -209.94273376]
[23.89705467 -197.71234131]
[31.54277420 -184.79687500]
[38.08093262 -171.28691101]
[43.46566391 -157.27722168]
[47.65920258 -142.86608887]
[50.63213348 -128.15458679]
[52.36360168 -113.24591827]
[52.84145737 -98.24464417]
[52.06235504 -83.25599670]
[50.03176117 -68.38511658]
[46.76391220 -53.73630142]
[42.28173447 -39.41231155]
[36.61666489 -25.51362419]
[29.80844307 -12.13772583]
[21.90482521 0.62155944]
[12.96124840 12.67473221]
[24.21734428 22.58938408]
[35.47343826 32.50403595]
[50.13824081 35.11034775]
[55.37980270 50.03805923]
[66.63590240 59.95270920]
[78.72401428 59.50096130]
[88.18279266 67.66889954]
[89.58506012 80.49061584]
[100.69229889 90.57175446]
[105.85294342 91.51072693]
[110.12014771 95.27427673]
[111.97444153 101.12222290]
[122.77659607 111.52960205]
[133.57875061 121.93697357]
[144.38090515 132.34434509]
[155.18305969 142.75172424]
[165.98521423 153.15908813]
[176.78738403 163.56646729]
[187.58953857 173.97383118]
[198.39169312 184.38121033]
[209.27102661 194.70788574]
[220.22692871 204.95327759]
[231.17076111 194.68707275]
[242.76260376 185.15861511]
[254.95281982 176.40872192]
[267.68920898 168.47482300]
[280.91723633 161.39093018]
[294.58026123 155.18734741]
[308.61975098 149.89067078]
[322.97558594 145.52354431]
[337.58633423 142.10470581]
[352.38940430 139.64877319]
[367.32141113 138.16627502]
[382.31838989 137.66354370]
[397.31613159 138.14274597]
[412.25042725 139.60183716]
[427.05734253 142.03454590]
[441.67343140 145.43046570]
[456.03610229 149.77505493]
[470.08389282 155.04971313]
[483.75662231 161.23185730]
[496.99572754 168.29499817]
[509.74453735 176.20890808]
[521.94848633 184.93968201]
[533.55523682 194.44995117]
[544.51519775 204.69895935]
[554.78131104 215.64285278]
[564.30969238 227.23475647]
[573.05950928 239.42503357]
[580.99334717 252.16146851]
[588.07714844 265.38952637]
[594.28063965 279.05258179]
[599.57727051 293.09210205]
[603.94427490 307.44799805]
[607.36303711 322.05874634]
[609.81890869 336.86181641]
[611.30133057 351.79382324]
[611.80395508 366.79080200]
[611.32464600 381.78857422]
[609.86547852 396.72283936]
[607.43267822 411.52972412]
[604.03668213 426.14581299]
[599.69201660 440.50845337]
[594.41723633 454.55621338]
[588.23504639 468.22891235]
[581.17181396 481.46798706]
[573.25781250 494.21673584]
[564.52697754 506.42062378]
[555.01666260 518.02734375]
[544.76757812 528.98718262]
[533.82360840 539.25329590]
[522.23162842 548.78155518]
[510.04132080 557.53137207]
[497.30484009 565.46508789]
[484.07675171 572.54882812]
[470.41366577 578.75225830]
[456.37408447 584.04876709]
[442.01818848 588.41571045]
[427.40740967 591.83441162]
[412.60430908 594.29016113]
[397.67230225 595.77246094]
[382.67532349 596.27502441]
[367.67758179 595.79565430]
[352.74328613 594.33636475]
[337.93643188 591.90350342]
[323.32037354 588.50738525]
[308.95773315 584.16265869]
[294.91000366 578.88781738]
[281.23736572 572.70550537]
[267.99832153 565.64221191]
[255.24960327 557.72814941]
[243.04579163 548.99725342]
[231.43911743 539.48681641]
[220.47932434 529.23767090]
[210.21331787 518.29364014]
[200.68507385 506.70166016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 136]
[21 135]
[23 134]
[24 133]
[25 132]
[26 131]
[27 130]
[28 129]
[29 128]
[30 127]
[31 126]
[32 123]
[33 122]
[35 119]
[36 118]
[38 116]
[39 115]
[40 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
