%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[170.37164307 438.94836426]
[167.34323120 424.24819946]
[165.55552673 409.34616089]
[165.02107239 394.34677124]
[165.74360657 379.35531616]
[167.71807861 364.47686768]
[170.93063354 349.81582642]
[175.35873413 335.47503662]
[180.97131348 321.55505371]
[187.72901917 308.15356445]
[195.58444214 295.36456299]
[204.48246765 283.27770996]
[214.36070251 271.97784424]
[225.14985657 261.54421997]
[215.66094971 249.92694092]
[206.17205811 238.30969238]
[189.82069397 239.76245117]
[175.68379211 231.09585571]
[169.43627930 215.55654907]
[173.72407532 199.19468689]
[164.06326294 187.71998596]
[154.40245056 176.24528503]
[144.74163818 164.77058411]
[135.08084106 153.29588318]
[125.42002106 141.82118225]
[115.75921631 130.34648132]
[101.64328003 125.59361267]
[98.67410278 110.05352020]
[91.48620605 106.40568542]
[88.95642090 98.33530426]
[79.46752167 86.71804047]
[69.97863007 75.10077667]
[60.48972702 63.48351288]
[51.00083160 51.86624908]
[41.51193237 40.24898529]
[32.02303314 28.63172340]
[35.17975998 43.29579926]
[34.13472748 58.25934982]
[28.97035789 72.34229279]
[20.09393120 84.43398285]
[8.20547867 93.58082581]
[-5.75742435 99.06146240]
[-20.69360542 100.44365692]
[-35.42513657 97.61841583]
[-48.79022598 90.80854797]
[-59.73484802 80.55109406]
[-67.39586639 67.65502167]
[-71.16909790 53.13734818]
[-70.75696564 38.14301300]
[-66.19198608 23.85452271]
[-57.83415604 11.39873219]
[-46.34262085 1.75795496]
[-32.62364197 -4.30749607]
[-17.75916481 -6.31927490]
[-2.92145610 -4.11872387]
[10.71931648 2.12061238]
[22.08967209 11.90928459]
[16.42688560 -1.98074245]
[10.76409912 -15.87076950]
[5.10131216 -29.76079559]
[-7.27327061 -39.61880112]
[-4.91330481 -54.32525635]
[-10.57609177 -68.21528625]
[-16.23887825 -82.10530853]
[-21.90166473 -95.99533844]
[-26.78345299 -81.81196594]
[-39.00315475 -73.11260223]
[-54.00312805 -73.14190674]
[-66.18875122 -81.88893890]
[-71.01508331 -96.09128571]
[-66.68202972 -110.45180511]
[-54.80570984 -119.61439514]
[-39.81569290 -120.16162109]
[-27.30215836 -111.88848114]
[-31.27425575 -126.35300446]
[-35.24635315 -140.81753540]
[-39.21844864 -155.28205872]
[-54.15732574 -153.61578369]
[-69.17293549 -154.30709839]
[-83.89550781 -157.33898926]
[-97.96248627 -162.63677979]
[-111.02745819 -170.07002258]
[-122.76868439 -179.45565796]
[-132.89703369 -190.56254578]
[-141.16307068 -203.11718750]
[-147.36325073 -216.81040955]
[-151.34489441 -231.30499268]
[-153.00993347 -246.24400330]
[-152.31736755 -261.25955200]
[-149.28427124 -275.98187256]
[-143.98532104 -290.04843140]
[-136.55099487 -303.11279297]
[-127.16439819 -314.85324097]
[-116.05667114 -324.98065186]
[-103.50134277 -333.24566650]
[-89.80761719 -339.44473267]
[-75.31269836 -343.42517090]
[-60.37355042 -345.08898926]
[-45.35805130 -344.39517212]
[-30.63598061 -341.36087036]
[-16.56987762 -336.06072998]
[-3.50613356 -328.62533569]
[8.23354435 -319.23779297]
[18.36005592 -308.12921143]
[26.62402725 -295.57321167]
[32.82195282 -281.87896729]
[36.80119705 -267.38372803]
[38.46377182 -252.44444275]
[37.76873779 -237.42900085]
[34.73320389 -222.70716858]
[29.43192673 -208.64151001]
[21.99545479 -195.57838440]
[12.60691738 -183.83947754]
[1.49751520 -173.71388245]
[-11.05917168 -165.45094299]
[-24.75392342 -159.25415039]
[-20.78182793 -144.78962708]
[-16.80973053 -130.32510376]
[-12.83763504 -115.86058044]
[-8.01163769 -101.65812683]
[-2.34885097 -87.76809692]
[3.31393552 -73.87807465]
[8.97672176 -59.98804474]
[20.94626427 -51.12354660]
[18.99133873 -35.42358398]
[24.65412521 -21.53355598]
[30.31691170 -7.64352894]
[35.97969818 6.24649763]
[43.64029694 19.14282417]
[53.12919617 30.76008797]
[62.61809158 42.37734985]
[72.10699463 53.99461365]
[81.59588623 65.61187744]
[91.08478546 77.22914124]
[100.57368469 88.84640503]
[110.14880371 100.39270782]
[124.95574188 105.96632385]
[127.23391724 120.68566895]
[136.89472961 132.16036987]
[146.55554199 143.63507080]
[156.21633911 155.10977173]
[165.87715149 166.58447266]
[175.53796387 178.05917358]
[185.19877625 189.53387451]
[198.83596802 187.52937317]
[211.58169556 192.48567200]
[220.14555359 203.00849915]
[222.37359619 216.28178406]
[217.78932190 228.82078552]
[227.27821350 240.43804932]
[236.76712036 252.05531311]
[249.14476013 243.56648254]
[262.18933105 236.14315796]
[275.80932617 229.83743286]
[289.90921021 224.69351196]
[304.39007568 220.74748230]
[319.15036011 218.02705383]
[334.08651733 216.55126953]
[349.09378052 216.33049011]
[364.06686401 217.36627197]
[378.90078735 219.65135193]
[393.49145508 223.16969299]
[407.73654175 227.89663696]
[421.53613281 233.79899597]
[434.79342651 240.83537292]
[447.41543579 248.95643616]
[459.31359863 258.10522461]
[470.40447998 268.21752930]
[480.61029053 279.22241211]
[489.85943604 291.04275513]
[498.08703613 303.59555054]
[505.23538208 316.79281616]
[511.25433350 330.54196167]
[516.10162354 344.74655151]
[519.74334717 359.30691528]
[522.15386963 374.12094116]
[523.31634521 389.08474731]
[523.22259521 404.09335327]
[521.87329102 419.04144287]
[519.27789307 433.82421875]
[515.45458984 448.33795166]
[510.43017578 462.48086548]
[504.23992920 476.15374756]
[496.92727661 489.26068115]
[488.54351807 501.70974731]
[479.14743042 513.41357422]
[468.80493164 524.29016113]
[457.58856201 534.26312256]
[445.57702637 543.26251221]
[432.85455322 551.22528076]
[419.51040649 558.09545898]
[405.63815308 563.82501221]
[391.33511353 568.37359619]
[376.70162964 571.70941162]
[361.84033203 573.80895996]
[346.85546875 574.65765381]
[331.85214233 574.24938965]
[316.93557739 572.58715820]
[302.21044922 569.68249512]
[287.77999878 565.55590820]
[273.74548340 560.23620605]
[260.20532227 553.76086426]
[247.25450134 546.17510986]
[234.98387146 537.53234863]
[223.47949219 527.89306641]
[212.82205200 517.32495117]
[203.08631897 505.90203857]
[194.34057617 493.70455933]
[186.64617920 480.81802368]
[180.05709839 467.33282471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 151]
[15 150]
[16 149]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[25 139]
[26 138]
[28 136]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[57 128]
[58 127]
[59 126]
[60 125]
[62 123]
[63 122]
[64 121]
[65 120]
[74 119]
[75 118]
[76 117]
[77 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
