%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[89.05596161 795.75842285]
[74.32283783 792.91564941]
[59.79494476 789.16235352]
[45.52849960 784.51318359]
[31.57868767 778.98602295]
[17.99948311 772.60235596]
[4.84342098 765.38677979]
[-7.83860159 757.36724854]
[-19.99751854 748.57476807]
[-31.58629036 739.04339600]
[-42.56008148 728.80999756]
[-52.87643433 717.91418457]
[-62.49543762 706.39801025]
[-71.37988281 694.30615234]
[-79.49538422 681.68536377]
[-86.81056213 668.58441162]
[-93.29710388 655.05401611]
[-98.92990875 641.14654541]
[-103.68719482 626.91577148]
[-107.55056000 612.41680908]
[-110.50504303 597.70562744]
[-112.53923035 582.83929443]
[-113.64524078 567.87524414]
[-113.81879425 552.87133789]
[-113.05922699 537.88568115]
[-111.36946869 522.97625732]
[-108.75606537 508.20071411]
[-105.22912598 493.61624146]
[-100.80229187 479.27923584]
[-95.49269104 465.24517822]
[-89.32086945 451.56835938]
[-82.31069946 438.30172729]
[-74.48931122 425.49655151]
[-65.88694763 413.20239258]
[-56.53690720 401.46685791]
[-46.47535324 390.33529663]
[-35.74121475 379.85079956]
[-24.37601852 370.05389404]
[-12.42374039 360.98254395]
[0.06938348 352.67181396]
[13.05501747 345.15383911]
[26.48292160 338.45773315]
[40.30114746 332.60937500]
[54.45623398 327.63143921]
[68.89341736 323.54312134]
[83.55684662 320.36029053]
[98.38977814 318.09521484]
[97.05154419 303.15502930]
[95.71331024 288.21484375]
[94.37507629 273.27465820]
[93.03684235 258.33447266]
[91.69860840 243.39430237]
[87.97090149 237.01260376]
[90.45336914 228.22198486]
[78.83628845 237.71110535]
[64.14278412 234.69435120]
[57.20434952 221.39553833]
[63.13574600 207.61807251]
[77.56456757 203.51818848]
[89.85360718 212.11671448]
[89.85360718 197.11671448]
[89.85360718 182.11671448]
[89.85360718 167.11671448]
[87.63233948 164.37841797]
[86.62703705 160.42817688]
[87.39287567 155.84922791]
[90.20354462 151.45066833]
[90.87332916 136.46563721]
[91.54311371 121.48059845]
[92.21289825 106.49555969]
[89.39816284 98.94242859]
[93.00585938 91.29289246]
[93.89867401 76.31948853]
[94.79148865 61.34608078]
[86.16999054 45.07489777]
[96.39765167 30.81439590]
[97.06743622 15.82935619]
[97.73722076 0.84431779]
[98.40700531 -14.14072132]
[99.07678986 -29.12575912]
[99.30012512 -44.12409592]
[99.07678986 -59.12243271]
[98.85346222 -74.12077332]
[98.63013458 -89.11911011]
[98.40680695 -104.11744690]
[98.18347931 -119.11578369]
[95.50502014 -123.59606171]
[94.87585449 -128.19578552]
[95.99832153 -132.11434937]
[98.30014038 -134.78530884]
[98.74674225 -149.77865601]
[99.19335175 -164.77200317]
[99.63995361 -179.76535034]
[100.08656311 -194.75869751]
[100.53316498 -209.75204468]
[100.97977448 -224.74540710]
[101.42637634 -239.73875427]
[101.87298584 -254.73210144]
[102.31958771 -269.72546387]
[88.44087219 -275.92620850]
[77.99517059 -286.96957397]
[72.57537842 -301.17147827]
[73.00798035 -316.36627197]
[79.22700500 -330.23681641]
[90.28408813 -340.66799927]
[104.49311829 -346.06909180]
[119.68731689 -345.61651611]
[133.54968262 -339.37924194]
[143.96629333 -328.30844116]
[149.34869385 -314.09231567]
[148.87611389 -298.89874268]
[142.62062073 -285.04458618]
[131.53613281 -274.64254761]
[117.31294250 -269.27883911]
[116.86633301 -254.28549194]
[116.41973114 -239.29214478]
[115.97312164 -224.29879761]
[115.52651978 -209.30545044]
[115.07991028 -194.31210327]
[114.63330841 -179.31874084]
[114.18669891 -164.32539368]
[113.74008942 -149.33204651]
[113.29348755 -134.33869934]
[113.18182373 -119.33911133]
[113.40515137 -104.34077454]
[113.62847900 -89.34243774]
[113.85180664 -74.34410095]
[114.07513428 -59.34576416]
[114.29846191 -44.34742355]
[116.21367645 -42.30045700]
[117.43346405 -39.37150955]
[117.61782074 -35.82166290]
[116.52745819 -32.03013992]
[114.06183624 -28.45597458]
[113.39204407 -13.47093582]
[112.72225952 1.51410294]
[112.05247498 16.49914169]
[111.38269043 31.48418045]
[119.31163025 40.61973953]
[118.87625885 53.10950470]
[109.76489258 62.23889542]
[108.87207794 77.21230316]
[107.97926331 92.18570709]
[107.19793701 107.16534424]
[106.52815247 122.15038300]
[105.85836792 137.13542175]
[105.18858337 152.12045288]
[104.85360718 167.11671448]
[104.85360718 182.11671448]
[104.85360718 197.11671448]
[104.85360718 212.11671448]
[105.41181946 227.10632324]
[106.63879395 242.05606079]
[107.97702789 256.99624634]
[109.31526184 271.93643188]
[110.65349579 286.87661743]
[111.99172974 301.81680298]
[113.32996368 316.75698853]
[128.32933044 316.34988403]
[143.32498169 316.87606812]
[158.25891113 318.33352661]
[173.07334900 320.71661377]
[187.71096802 324.01608276]
[202.11514282 328.21920776]
[216.23014832 333.30969238]
[230.00138855 339.26785278]
[243.37554932 346.07064819]
[256.30093384 353.69174194]
[268.72750854 362.10168457]
[280.60717773 371.26791382]
[291.89401245 381.15496826]
[302.54434204 391.72457886]
[312.51696777 402.93588257]
[321.77328491 414.74551392]
[330.27749634 427.10775757]
[337.99670410 439.97476196]
[344.90103149 453.29681396]
[350.96377563 467.02233887]
[356.16149902 481.09820557]
[360.47402954 495.47000122]
[363.88476562 510.08209229]
[366.38046265 524.87799072]
[367.95147705 539.80041504]
[368.59170532 554.79162598]
[368.29870605 569.79364014]
[367.07360840 584.74841309]
[364.92114258 599.59808350]
[361.84963989 614.28527832]
[357.87097168 628.75305176]
[353.00054932 642.94549561]
[347.25717163 656.80767822]
[340.66314697 670.28601074]
[333.24389648 683.32830811]
[325.02816772 695.88409424]
[316.04776001 707.90484619]
[306.33737183 719.34405518]
[295.93460083 730.15740967]
[284.87969971 740.30310059]
[273.21539307 749.74194336]
[260.98687744 758.43731689]
[248.24140930 766.35559082]
[235.02832031 773.46624756]
[221.39872742 779.74163818]
[207.40536499 785.15753174]
[193.10235596 789.69299316]
[178.54504395 793.33050537]
[163.78974915 796.05590820]
[148.89356995 797.85870361]
[133.91410828 798.73193359]
[118.90934753 798.67224121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[52 153]
[54 152]
[60 151]
[61 150]
[62 149]
[63 148]
[67 147]
[68 146]
[69 145]
[70 144]
[72 143]
[73 142]
[74 141]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
