%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-10.46816635 350.80487061]
[-4.33190775 364.52215576]
[-0.25838408 378.98675537]
[1.66557693 393.89031982]
[1.39896595 408.91519165]
[-1.05253422 423.74111938]
[-5.63666964 438.05206299]
[-12.25572968 451.54302979]
[-20.76862717 463.92642212]
[-30.99391174 474.93829346]
[-42.71362686 484.34393311]
[-55.67797089 491.94287109]
[-69.61060333 497.57308960]
[-84.21455383 501.11462402]
[-99.17853546 502.49197388]
[-114.18359375 501.67581177]
[-128.90988159 498.68347168]
[-143.04353333 493.57876587]
[-156.28326416 486.47048950]
[-168.34687805 477.51019287]
[-178.97723389 466.88882446]
[-187.94775391 454.83282471]
[-195.06723022 441.59912109]
[-200.18391418 427.46978760]
[-203.18872070 412.74603271]
[-204.01762390 397.74166870]
[-202.65293884 382.77655029]
[-199.12377930 368.16958618]
[-193.50534058 354.23220825]
[-185.91740417 341.26141357]
[-176.52169800 329.53375244]
[-165.51847839 319.29913330]
[-153.14230347 310.77575684]
[-139.65696716 304.14526367]
[-125.34989166 299.54901123]
[-110.52605438 297.08493042]
[-95.50141144 296.80560303]
[-80.59622192 298.71694946]
[-66.12818909 302.77819824]
[-52.40570068 308.90283203]
[-44.36452866 296.24032593]
[-36.32335663 283.57778931]
[-35.39127350 276.24615479]
[-28.06701469 270.78784180]
[-19.83820724 258.24645996]
[-11.60939980 245.70504761]
[-3.47418380 233.10273743]
[-3.18295455 218.21098328]
[10.74660110 210.70910645]
[18.78777313 198.04658508]
[26.82894707 185.38404846]
[34.87012100 172.72152710]
[19.88509369 173.39161682]
[9.90366077 162.19468689]
[12.28376198 147.38471985]
[25.27087402 139.87907410]
[39.29138184 145.21061707]
[44.01009369 159.44749451]
[52.97079086 147.41812134]
[61.93148422 135.38874817]
[61.78593063 131.86579895]
[63.33951569 128.09732056]
[66.68905640 124.88268280]
[71.57070160 123.03427124]
[81.05959320 111.41700745]
[90.54849243 99.79974365]
[91.21738434 94.59719086]
[94.75354767 90.13973999]
[100.49697876 87.98336029]
[110.32756042 76.65377045]
[120.15813446 65.32417297]
[128.93873596 53.16271973]
[129.33439636 37.34646225]
[142.48648071 30.35561371]
[150.14707947 17.45928574]
[157.80767822 4.56295967]
[162.84458923 -9.56606960]
[165.06970215 -24.40011406]
[167.29483032 -39.23415756]
[169.51994324 -54.06819916]
[162.49504089 -64.88548279]
[164.65373230 -77.19498444]
[174.30155945 -84.49197388]
[176.74729919 -99.29124451]
[179.19302368 -114.09051514]
[181.63874817 -128.88978577]
[184.08447266 -143.68905640]
[186.53019714 -158.48832703]
[174.77366638 -168.27255249]
[169.52766418 -182.53355408]
[172.10707092 -197.40679932]
[181.72050476 -208.91496277]
[195.70927429 -214.03157043]
[198.15499878 -228.83084106]
[200.60073853 -243.63011169]
[195.21707153 -258.50717163]
[204.92599487 -269.80258179]
[207.37171936 -284.60183716]
[193.46815491 -290.41455078]
[181.28022766 -299.27746582]
[171.46520996 -310.71258545]
[164.55241394 -324.10324097]
[160.91462708 -338.72732544]
[160.74806213 -353.79611206]
[164.06167603 -368.49703979]
[170.67677307 -382.03723145]
[180.23661804 -393.68655396]
[192.22564697 -402.81671143]
[205.99731445 -408.93533325]
[220.80894470 -411.71249390]
[235.86174011 -410.99838257]
[250.34393311 -406.83154297]
[263.47451782 -399.43664551]
[274.54541016 -389.21252441]
[282.95950317 -376.71054077]
[288.26309204 -362.60491943]
[290.17013550 -347.65634155]
[288.57778931 -332.67098999]
[283.57192993 -318.45697021]
[275.42251587 -305.78085327]
[264.56906128 -295.32623291]
[251.59684753 -287.65692139]
[237.20544434 -283.18652344]
[222.17098999 -282.15612793]
[219.72526550 -267.35684204]
[225.28385925 -253.53833008]
[215.40000916 -241.18438721]
[212.95426941 -226.38511658]
[210.50854492 -211.58584595]
[222.10736084 -202.24063110]
[227.50709534 -188.25138855]
[225.16413879 -173.33908081]
[215.60882568 -161.52413940]
[201.32946777 -156.04260254]
[198.88374329 -141.24333191]
[196.43801880 -126.44405365]
[193.99229431 -111.64478302]
[191.54656982 -96.84551239]
[189.10083008 -82.04624176]
[196.15602112 -65.97791290]
[184.35398865 -51.84308243]
[182.12886047 -37.00904083]
[179.90374756 -22.17499542]
[177.67863464 -7.34095240]
[186.23046875 -19.66434860]
[197.27912903 -29.80964661]
[210.28552246 -37.28183746]
[224.61505127 -41.71633148]
[239.56852722 -42.89676285]
[254.41635132 -40.76553345]
[268.43405151 -35.42663574]
[280.93771362 -27.14056015]
[291.31719971 -16.31160736]
[299.06610107 -3.46814346]
[303.80630493 10.76316929]
[305.30657959 25.68795395]
[303.49368286 40.57799911]
[298.45608521 54.70678329]
[290.43957520 67.38493347]
[279.83526611 77.99385071]
[267.16064453 86.01591492]
[253.03405762 91.05969238]
[238.14480591 92.87910461]
[223.21936035 91.38536835]
[208.98597717 86.65136719]
[196.13912964 78.90808105]
[185.30563354 68.53333282]
[177.01409912 56.03331757]
[171.66906738 42.01794434]
[169.53135681 27.17105293]
[170.70399475 12.22355747]
[163.04339600 25.11988449]
[155.38281250 38.01621246]
[155.53509521 52.91003799]
[141.83506775 60.82331848]
[155.26217651 54.13657379]
[170.25947571 53.85127640]
[183.93118286 60.02251434]
[193.63754272 71.45871735]
[197.50437927 85.95173645]
[194.78507996 100.70318604]
[186.00471497 112.86480713]
[172.85861206 120.08837128]
[157.88507080 120.97912598]
[143.97528076 115.36508179]
[133.81497192 104.33021545]
[129.36596680 90.00519562]
[131.48773193 75.15475464]
[121.65715027 86.48435211]
[111.82656860 97.81394196]
[102.16575623 109.28864288]
[92.67685699 120.90590668]
[83.18796539 132.52316284]
[73.96086121 144.34944153]
[65.00016785 156.37881470]
[56.03947067 168.40818787]
[47.53264618 180.76271057]
[39.49147034 193.42523193]
[31.45029831 206.08775330]
[23.40912628 218.75027466]
[22.54273796 234.54774475]
[9.18834114 241.14390564]
[7.22965670 250.06587219]
[0.93200076 253.93385315]
[-7.29680729 266.47525024]
[-15.52561474 279.01666260]
[-23.66083145 291.61895752]
[-31.70200348 304.28149414]
[-39.74317551 316.94403076]
[-28.36453247 326.75952148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 209]
[41 208]
[42 207]
[44 206]
[45 205]
[46 204]
[47 202]
[49 200]
[50 199]
[51 198]
[52 197]
[58 196]
[59 195]
[60 194]
[64 193]
[65 192]
[66 191]
[69 190]
[70 189]
[71 188]
[72 175]
[74 173]
[75 172]
[76 171]
[77 144]
[78 143]
[79 142]
[80 141]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[93 129]
[94 128]
[95 127]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
