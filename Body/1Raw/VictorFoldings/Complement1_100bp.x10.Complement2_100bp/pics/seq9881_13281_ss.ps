%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[121.31700897 792.73504639]
[108.46485138 784.97271729]
[96.51061249 775.88818359]
[85.58973694 765.58447266]
[75.82596588 754.17828369]
[67.32993317 741.79888916]
[60.19790649 728.58654785]
[54.51069260 714.69091797]
[50.33273697 700.26953125]
[47.71137619 685.48577881]
[46.67631149 670.50708008]
[47.23927307 655.50323486]
[49.39388275 640.64422607]
[53.11572647 626.09844971]
[58.36262894 612.03070068]
[65.07514191 598.60034180]
[73.17720795 585.95959473]
[82.57702637 574.25164795]
[93.16809082 563.60919189]
[104.83039093 554.15283203]
[117.43177795 545.98968506]
[130.82948303 539.21228027]
[144.87168884 533.89733887]
[159.39930725 530.10516357]
[157.17417908 515.27111816]
[154.94906616 500.43707275]
[152.72395325 485.60302734]
[150.49884033 470.76898193]
[148.27371216 455.93493652]
[146.04859924 441.10089111]
[143.82348633 426.26684570]
[141.59837341 411.43280029]
[139.37324524 396.59875488]
[137.14813232 381.76470947]
[125.05489349 373.14559937]
[122.58699036 358.13345337]
[131.70950317 345.50741577]
[122.16983795 334.06869507]
[127.77439880 319.27343750]
[125.54927826 304.43942261]
[123.32416534 289.60537720]
[113.78604889 282.16555786]
[111.81085968 269.82525635]
[118.99603271 259.11376953]
[116.99201965 244.24824524]
[114.98800659 229.38272095]
[112.98399353 214.51719666]
[110.97998047 199.65165710]
[108.64449310 184.83459473]
[105.97869873 170.07337952]
[103.20308685 155.33241272]
[100.31781769 140.61251831]
[97.43254089 125.89263153]
[82.56481934 119.31410980]
[74.50424194 105.19485474]
[76.39786530 89.04740143]
[87.50637054 77.17612457]
[84.40225983 62.50082016]
[81.18898773 47.84903336]
[77.86672211 33.22157288]
[74.54446411 18.59411240]
[71.22220612 3.96665239]
[67.89994812 -10.66080761]
[64.57769012 -25.28826714]
[61.25542831 -39.91572952]
[57.93316650 -54.54319000]
[54.61090851 -69.17064667]
[51.28864670 -83.79811096]
[47.96638870 -98.42556763]
[37.36473465 -110.16931152]
[42.09098434 -124.29417419]
[34.17140961 -111.55525208]
[19.95587540 -106.76791382]
[5.94353151 -112.12088013]
[-1.45936501 -125.16683960]
[1.13168931 -139.94136047]
[12.53209972 -149.68972778]
[27.52975082 -149.95512390]
[39.26889420 -140.61462402]
[37.48643112 -155.50834656]
[35.70396423 -170.40205383]
[31.57696342 -178.55102539]
[34.00753403 -185.53057861]
[32.44701385 -200.44918823]
[30.88648987 -215.36778259]
[27.81899452 -219.59123230]
[26.78197479 -224.11648560]
[27.55037117 -228.11956787]
[29.60471344 -230.98522949]
[28.71189690 -245.95863342]
[27.81908226 -260.93203735]
[24.94323158 -265.28823853]
[24.10931015 -269.85528564]
[25.05568695 -273.82006836]
[27.23593903 -276.59112549]
[27.01261139 -291.58947754]
[26.78928375 -306.58779907]
[26.56595612 -321.58615112]
[12.54643440 -327.53366089]
[2.16278338 -338.67367554]
[-2.78596640 -353.07608032]
[-1.44241452 -368.24560547]
[5.96066093 -381.55404663]
[18.14063263 -390.69561768]
[32.98724365 -394.08648682]
[47.92823410 -391.13916016]
[60.37498474 -382.36428833]
[68.17102051 -369.28216553]
[69.96562958 -354.15936279]
[65.44789124 -339.61599731]
[55.40052032 -328.17175293]
[41.56429291 -321.80947876]
[41.78762054 -306.81112671]
[42.01094818 -291.81280518]
[42.23427582 -276.81445312]
[42.79248810 -261.82485962]
[43.68530273 -246.85145569]
[44.57811737 -231.87803650]
[45.80509567 -216.92831421]
[47.36561584 -202.00970459]
[48.92613983 -187.09109497]
[50.59768295 -172.18452454]
[52.38014603 -157.29080200]
[54.16261292 -142.39709473]
[56.71844482 -127.61643982]
[67.08246613 -116.91894531]
[62.59384918 -101.74782562]
[65.91610718 -87.12036896]
[69.23836517 -72.49290466]
[72.56063080 -57.86544800]
[75.88288879 -43.23798752]
[79.20514679 -28.61052704]
[82.52740479 -13.98306751]
[85.84966278 0.64439297]
[89.17192841 15.27185345]
[92.49418640 29.89931297]
[95.81644440 44.52677536]
[100.36333466 50.35322571]
[99.07756042 59.39670944]
[102.18167114 74.07201385]
[114.65493011 78.49992371]
[123.33601379 88.49127960]
[125.97857666 101.46068573]
[121.89881897 114.05210876]
[112.15243530 123.00736237]
[115.03770447 137.72724915]
[117.92298126 152.44714355]
[122.64463806 160.26658630]
[120.73991394 167.40757751]
[123.40570831 182.16879272]
[126.77883911 186.15240479]
[128.14955139 190.58799744]
[127.68102264 194.63713074]
[125.84551239 197.64764404]
[127.84952545 212.51318359]
[129.85353088 227.37870789]
[131.85754395 242.24423218]
[133.86155701 257.10977173]
[145.45184326 271.41873169]
[138.15820312 287.38024902]
[140.38333130 302.21429443]
[142.60844421 317.04833984]
[152.30726624 329.54806519]
[146.54354858 343.28228760]
[158.96907043 352.67611694]
[161.01434326 367.75164795]
[151.98217773 379.53958130]
[154.20729065 394.37362671]
[156.43240356 409.20767212]
[158.65753174 424.04171753]
[160.88264465 438.87576294]
[163.10775757 453.70980835]
[165.33288574 468.54385376]
[167.55799866 483.37789917]
[169.78311157 498.21194458]
[172.00822449 513.04595947]
[174.23335266 527.88000488]
[189.23422241 527.24291992]
[204.21783447 528.20397949]
[219.01438904 530.75225830]
[233.45626831 534.85888672]
[247.37980652 540.47735596]
[260.62722778 547.54400635]
[273.04846191 555.97875977]
[284.50274658 565.68603516]
[294.86032104 576.55584717]
[304.00378418 588.46508789]
[311.82955933 601.27868652]
[318.24896240 614.85156250]
[323.18927002 629.02990723]
[326.59451294 643.65307617]
[328.42608643 658.55535889]
[328.66323853 673.56787109]
[327.30328369 688.52056885]
[324.36163330 703.24395752]
[319.87164307 717.57128906]
[313.88415527 731.34014893]
[306.46701050 744.39459229]
[297.70425415 756.58666992]
[287.69522095 767.77819824]
[276.55325317 777.84246826]
[264.40463257 786.66534424]
[251.38702393 794.14691162]
[237.64790344 800.20233154]
[223.34295654 804.76312256]
[208.63426208 807.77746582]
[193.68847656 809.21130371]
[178.67497253 809.04833984]
[163.76383972 807.29040527]
[149.12403870 803.95751953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[37 164]
[39 162]
[40 161]
[41 160]
[44 158]
[45 157]
[46 156]
[47 155]
[48 154]
[49 150]
[50 149]
[51 147]
[52 146]
[53 145]
[57 140]
[58 139]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[71 125]
[79 124]
[80 123]
[81 122]
[83 121]
[84 120]
[85 119]
[89 118]
[90 117]
[91 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
