%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[220.35493469 247.10211182]
[229.56457520 235.24400330]
[218.76242065 224.83662415]
[207.96025085 214.42926025]
[197.15809631 204.02188110]
[182.62429810 200.76335144]
[178.05453491 185.61648560]
[167.25236511 175.20910645]
[156.45021057 164.80172729]
[145.64805603 154.39436340]
[134.84590149 143.98698425]
[124.04374695 133.57962036]
[113.24159241 123.17224121]
[102.43943024 112.76486969]
[91.33219910 102.68373108]
[79.92974091 92.93775940]
[68.52727509 83.19179535]
[57.12481308 73.44583130]
[41.60725021 70.36104584]
[36.95959854 56.21012878]
[25.55713654 46.46416092]
[14.15467453 36.71819687]
[3.77088642 47.54872513]
[-7.21427011 57.76879120]
[-18.76496315 67.34506226]
[-30.84351730 76.24629211]
[-43.41053772 84.44345856]
[-56.42502594 91.90981293]
[-69.84453583 98.62100983]
[-83.62529755 104.55516052]
[-97.72235870 109.69289398]
[-112.08972931 114.01747131]
[-126.68056488 117.51477051]
[-141.44725037 120.17339325]
[-156.34164429 121.98466492]
[-171.31513977 122.94267273]
[-186.31890869 123.04430389]
[-201.30400085 122.28921509]
[-216.22155762 120.67987823]
[-231.02291870 118.22153473]
[-245.65977478 114.92221069]
[-260.08441162 110.79266357]
[-274.24978638 105.84635925]
[-288.10968018 100.09944153]
[-301.61886597 93.57064819]
[-314.73330688 86.28128052]
[-327.41021729 78.25510406]
[-339.60824585 69.51831055]
[-351.28759766 60.09939194]
[-362.41018677 50.02907562]
[-372.93972778 39.34020233]
[-382.84188843 28.06764030]
[-392.08438110 16.24816132]
[-400.63702393 3.92031360]
[-408.47192383 -8.87568951]
[-415.56353760 -22.09811020]
[-421.88873291 -35.70381927]
[-427.42687988 -49.64843750]
[-432.15991211 -63.88647842]
[-436.07238770 -78.37150574]
[-439.15155029 -93.05626678]
[-441.38732910 -107.89286041]
[-442.77249146 -122.83290100]
[-443.30245972 -137.82765198]
[-442.97555542 -152.82820129]
[-441.79278564 -167.78562927]
[-439.75805664 -182.65113831]
[-436.87799072 -197.37623596]
[-433.16198730 -211.91290283]
[-428.62216187 -226.21372986]
[-423.27331543 -240.23204041]
[-417.13290405 -253.92213440]
[-410.22094727 -267.23934937]
[-402.55999756 -280.14025879]
[-394.17504883 -292.58276367]
[-385.09344482 -304.52630615]
[-375.34478760 -315.93188477]
[-364.96093750 -326.76232910]
[-353.97567749 -336.98233032]
[-342.42492676 -346.55850220]
[-330.34631348 -355.45962524]
[-317.77920532 -363.65670776]
[-304.76467896 -371.12295532]
[-291.34509277 -377.83404541]
[-277.56430054 -383.76809692]
[-263.46719360 -388.90570068]
[-249.09979248 -393.23016357]
[-234.50892639 -396.72735596]
[-219.74221802 -399.38586426]
[-204.84782410 -401.19702148]
[-189.87431335 -402.15490723]
[-174.87054443 -402.25643921]
[-159.88545227 -401.50122070]
[-144.96791077 -399.89175415]
[-130.16658020 -397.43331909]
[-115.52973175 -394.13388062]
[-101.10512543 -390.00421143]
[-86.93979645 -385.05780029]
[-73.07996368 -379.31076050]
[-59.57081985 -372.78186035]
[-46.45643997 -365.49240112]
[-33.77959442 -357.46612549]
[-21.58163643 -348.72921753]
[-9.90235233 -339.31021118]
[1.22016358 -329.23980713]
[11.74963093 -318.55087280]
[21.65170288 -307.27822876]
[30.89408493 -295.45867920]
[39.44662476 -283.13076782]
[47.28142929 -270.33468628]
[54.37294388 -257.11221313]
[60.69803619 -243.50645447]
[66.23606873 -229.56179810]
[70.96899414 -215.32371521]
[74.88135529 -200.83865356]
[77.96039581 -186.15386963]
[80.19608307 -171.31726074]
[81.58111572 -156.37721252]
[82.11097717 -141.38246155]
[81.78393555 -126.38190460]
[80.60106659 -111.42449188]
[78.56622314 -96.55899811]
[75.68604279 -81.83392334]
[71.96991730 -67.29727936]
[67.42996979 -52.99650192]
[62.08101654 -38.97822189]
[55.94049454 -25.28817558]
[49.02843475 -11.97101021]
[41.36738968 0.92983395]
[32.98233795 13.37227631]
[23.90064049 25.31573296]
[35.30310440 35.06169891]
[46.70556641 44.80766296]
[61.40754700 47.19535065]
[66.87078094 62.04336929]
[78.27323914 71.78933716]
[89.67570496 81.53530121]
[101.07816315 91.28126526]
[104.12596893 91.30165863]
[107.23370361 92.43147278]
[109.99046326 94.69504547]
[111.98207092 97.96456146]
[112.84680939 101.96270752]
[123.64896393 112.37008667]
[134.45112610 122.77745819]
[145.25328064 133.18482971]
[156.05543518 143.59220886]
[166.85758972 153.99957275]
[177.65974426 164.40695190]
[188.46189880 174.81433105]
[203.76834106 178.81726074]
[207.56547546 193.21972656]
[218.36763000 203.62709045]
[229.16978455 214.03446960]
[239.97193909 224.44184875]
[251.47911072 214.79730225]
[263.94625854 206.43055725]
[277.23211670 199.43641663]
[291.18615723 193.89411926]
[305.65023804 189.86647034]
[320.46051025 187.39910889]
[335.44915771 186.51997375]
[350.44631958 187.23905945]
[365.28210449 189.54817200]
[379.78836060 193.42118835]
[393.80078125 198.81420898]
[407.16052246 205.66613770]
[419.71627808 213.89930725]
[431.32574463 223.42045593]
[441.85739136 234.12170410]
[451.19189453 245.88177490]
[459.22344971 258.56744385]
[465.86108398 272.03494263]
[471.02960205 286.13171387]
[474.67041016 300.69799805]
[476.74224854 315.56875610]
[477.22167969 330.57550049]
[476.10321045 345.54818726]
[473.39959717 360.31716919]
[469.14141846 374.71505737]
[463.37692261 388.57879639]
[456.17144775 401.75122070]
[447.60662842 414.08312988]
[437.77951050 425.43478394]
[426.80142212 435.67755127]
[414.79681396 444.69534302]
[401.90164185 452.38604736]
[388.26202393 458.66244507]
[374.03256226 463.45349121]
[359.37442017 466.70486450]
[344.45373535 468.37973022]
[329.43954468 468.45907593]
[314.50198364 466.94207764]
[299.81030273 463.84585571]
[285.53097534 459.20553589]
[271.82577515 453.07369995]
[258.85000610 445.51977539]
[246.75070190 436.62939453]
[235.66494751 426.50326538]
[225.71835327 415.25616455]
[217.02363586 403.01550293]
[209.67929077 389.91998291]
[203.76853943 376.11798096]
[199.35838318 361.76589966]
[196.49874878 347.02633667]
[195.22207642 332.06631470]
[195.54280090 317.05532837]
[197.45730591 302.16351318]
[200.94389343 287.55953979]
[205.96307373 273.40890503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[5 152]
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[13 144]
[14 143]
[15 138]
[16 137]
[17 136]
[18 135]
[20 133]
[21 132]
[22 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
