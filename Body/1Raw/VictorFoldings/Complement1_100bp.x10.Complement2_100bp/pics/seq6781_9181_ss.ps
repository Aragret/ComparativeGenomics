%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[61.17015457 421.86886597]
[54.05506897 435.08285522]
[45.92515182 447.69787598]
[36.83053207 459.63613892]
[26.82727242 470.82403564]
[15.97705555 481.19256592]
[4.34677315 490.67785645]
[-7.99186850 499.22140503]
[-20.96279526 506.77050781]
[-34.48603821 513.27868652]
[-48.47821808 518.70568848]
[-62.85307312 523.01824951]
[-77.52196503 526.18957520]
[-92.39447021 528.20025635]
[-107.37887573 529.03784180]
[-122.38281250 528.69720459]
[-137.31376648 527.18035889]
[-152.07968140 524.49676514]
[-166.58952332 520.66290283]
[-180.75382996 515.70239258]
[-194.48527527 509.64584351]
[-207.69920349 502.53063965]
[-220.31413269 494.40060425]
[-232.25228882 485.30584717]
[-243.44007874 475.30245972]
[-253.80851746 464.45214844]
[-263.29367065 452.82177734]
[-271.83709717 440.48303223]
[-279.38607788 427.51202393]
[-285.89410400 413.98873901]
[-291.32101440 399.99649048]
[-295.63336182 385.62158203]
[-298.80459595 370.95266724]
[-300.81509399 356.08013916]
[-301.65252686 341.09573364]
[-301.31170654 326.09179688]
[-299.79473877 311.16085815]
[-297.11099243 296.39495850]
[-293.27694702 281.88516235]
[-288.31631470 267.72091675]
[-282.25964355 253.98953247]
[-275.14428711 240.77568054]
[-267.01412964 228.16082764]
[-257.91925049 216.22276306]
[-247.91577148 205.03507996]
[-237.06533813 194.66674805]
[-225.43486023 185.18170166]
[-213.09605408 176.63841248]
[-200.12496948 169.08956909]
[-186.60159302 162.58169556]
[-172.60929871 157.15492249]
[-158.23435974 152.84271240]
[-143.56539917 149.67163086]
[-128.69285583 147.66127014]
[-113.70842743 146.82398987]
[-98.70450592 147.16496277]
[-83.77358246 148.68208313]
[-69.00772095 151.36599731]
[-54.49795914 155.20018005]
[-40.33375168 160.16094971]
[-26.60243034 166.21775818]
[-13.38865376 173.33325195]
[-0.77388924 181.46356201]
[11.16408730 190.55854797]
[21.16225815 179.37657166]
[31.16043091 168.19459534]
[41.15860367 157.01261902]
[36.62842178 139.94366455]
[43.31014252 123.42684174]
[58.70338058 114.14633179]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[121.44398499 62.88476181]
[131.10479736 51.41006088]
[116.10613251 51.61018372]
[105.26322174 41.24526978]
[104.78738403 26.25282097]
[114.95119476 15.22118664]
[129.93235779 14.46979046]
[141.14900208 24.42906570]
[142.17599487 39.39298630]
[146.51974487 24.17975616]
[161.00341797 20.70520210]
[171.64942932 10.13815403]
[182.29544067 -0.42889419]
[192.94145203 -10.99594212]
[203.58744812 -21.56299019]
[193.83082581 -32.96541595]
[184.94293213 -45.05725479]
[176.97233582 -57.77247620]
[169.96255493 -71.04161835]
[163.95188904 -84.79222107]
[158.97315979 -98.94918060]
[155.05354309 -113.43517303]
[152.21447754 -128.17108154]
[150.47146606 -143.07641602]
[149.83399963 -158.06977844]
[150.30558777 -173.06927490]
[151.88363647 -187.99298096]
[154.55953979 -202.75938416]
[158.31866455 -217.28784180]
[163.14051819 -231.49900818]
[168.99871826 -245.31524658]
[175.86129761 -258.66110229]
[183.69076538 -271.46371460]
[192.44436646 -283.65313721]
[202.07429504 -295.16278076]
[212.52792358 -305.92977905]
[223.74819946 -315.89535522]
[235.67381287 -325.00506592]
[248.23963928 -333.20916748]
[261.37704468 -340.46286011]
[275.01428223 -346.72647095]
[289.07687378 -351.96585083]
[303.48800659 -356.15234375]
[318.16894531 -359.26309204]
[333.03955078 -361.28112793]
[348.01858521 -362.19543457]
[363.02423096 -362.00097656]
[377.97451782 -360.69882202]
[392.78784180 -358.29614258]
[407.38327026 -354.80596924]
[421.68106079 -350.24743652]
[435.60314941 -344.64544678]
[449.07348633 -338.03051758]
[462.01852417 -330.43887329]
[474.36755371 -321.91189575]
[486.05310059 -312.49621582]
[497.01135254 -302.24322510]
[507.18246460 -291.20895386]
[516.51092529 -279.45361328]
[524.94567871 -267.04147339]
[532.44079590 -254.04028320]
[538.95520020 -240.52107239]
[544.45343018 -226.55766296]
[548.90539551 -212.22631836]
[552.28680420 -197.60533142]
[554.57916260 -182.77453613]
[555.76995850 -167.81495667]
[555.85272217 -152.80827332]
[554.82690430 -137.83647156]
[552.69824219 -122.98130035]
[549.47827148 -108.32391357]
[545.18463135 -93.94435883]
[539.84069824 -79.92116547]
[533.47570801 -66.33094025]
[526.12445068 -53.24789429]
[517.82702637 -40.74348831]
[508.62881470 -28.88602066]
[498.57998657 -17.74025154]
[487.73544312 -7.36705351]
[476.15441895 2.17691493]
[463.90017700 10.83952808]
[451.03964233 18.57347488]
[437.64306641 25.33651161]
[423.78359985 31.09170341]
[409.53692627 35.80761337]
[394.98089600 39.45849228]
[380.19497681 42.02439117]
[365.25991821 43.49129868]
[350.25735474 43.85120773]
[335.26913452 43.10214615]
[320.37719727 41.24820709]
[305.66284180 38.29951859]
[291.20642090 34.27218246]
[277.08691406 29.18819809]
[263.38143921 23.07533073]
[250.16485596 15.96696568]
[237.50932312 7.90192938]
[225.48397827 -1.07573092]
[214.15451050 -10.91698074]
[203.50849915 -0.34993318]
[192.86248779 10.21711445]
[182.21647644 20.78416252]
[171.57046509 31.35120964]
[167.98818970 45.80861282]
[152.74304199 50.03899384]
[142.57949829 61.07087326]
[132.91868591 72.54557037]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[92.79437256 137.27299500]
[91.99645233 149.67588806]
[86.03573608 160.49943542]
[76.09715271 167.71923828]
[64.10285187 170.01481628]
[52.34057617 167.01078796]
[42.34240723 178.19276428]
[32.34423447 189.37474060]
[22.34606171 200.55671692]
[32.71472549 211.40682983]
[42.20012665 223.03701782]
[50.74378967 235.37556458]
[58.29303741 248.34642029]
[64.80132294 261.86959839]
[70.22852325 275.86172485]
[74.54117584 290.23654175]
[77.71269989 304.90539551]
[79.72352600 319.77786255]
[80.56126404 334.76226807]
[80.22074890 349.76620483]
[78.70408630 364.69717407]
[76.02061462 379.46313477]
[72.18688965 393.97299194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 196]
[65 195]
[66 194]
[67 193]
[71 187]
[72 186]
[74 184]
[75 183]
[76 182]
[77 181]
[84 180]
[86 178]
[87 177]
[88 176]
[89 175]
[90 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
