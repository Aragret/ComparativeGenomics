%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[254.14131165 373.31295776]
[264.30358887 362.24288940]
[275.96942139 352.77053833]
[268.30883789 339.87420654]
[260.55242920 327.03524780]
[252.70068359 314.25442505]
[244.84893799 301.47357178]
[236.99717712 288.69271851]
[229.14541626 275.91189575]
[221.29367065 263.13104248]
[213.44190979 250.35020447]
[205.30668640 237.74789429]
[196.89207458 225.33039856]
[188.47746277 212.91290283]
[179.25035095 201.08662415]
[169.25218201 189.90466309]
[159.25401306 178.72268677]
[149.25584412 167.54071045]
[139.25767517 156.35873413]
[127.20152283 155.37083435]
[118.78037262 146.13677979]
[118.91165924 133.23927307]
[109.08107758 121.90968323]
[99.25049591 110.58008575]
[89.00510406 99.62417603]
[80.70984650 95.79971313]
[78.28072357 88.81966400]
[67.79322052 78.09528351]
[57.22617340 67.44927216]
[46.58016586 56.88222504]
[31.33502007 52.65184402]
[27.75273895 38.19443893]
[17.10672951 27.62739372]
[1.86158442 23.39701271]
[-1.72069728 8.93960857]
[-12.36670589 -1.62743950]
[-23.01271439 -12.19448757]
[-33.65872192 -22.76153564]
[-44.30473328 -33.32858276]
[-54.95074081 -43.89562988]
[-66.33608246 -34.11738205]
[-78.46231842 -25.27461624]
[-91.25278473 -17.42324257]
[-104.62660980 -10.61289978]
[-118.49925232 -4.88664675]
[-132.78298950 -0.28068662]
[-147.38752747 3.17586017]
[-162.22050476 5.46113968]
[-177.18818665 6.56070375]
[-192.19589233 6.46759987]
[-207.14875793 5.18241739]
[-221.95225525 2.71328139]
[-236.51278687 -0.92419732]
[-250.73828125 -5.70702124]
[-264.53878784 -11.60495090]
[-277.82711792 -18.58069801]
[-290.51916504 -26.59015656]
[-302.53475952 -35.58269119]
[-313.79791260 -45.50144577]
[-324.23739624 -56.28371048]
[-333.78723145 -67.86131287]
[-342.38702393 -80.16105652]
[-349.98239136 -93.10517883]
[-356.52532959 -106.61183929]
[-361.97448730 -120.59564972]
[-366.29541016 -134.96818542]
[-369.46072388 -149.63859558]
[-371.45050049 -164.51409912]
[-372.25207520 -179.50068665]
[-371.86044312 -194.50357056]
[-370.27807617 -209.42791748]
[-367.51492310 -224.17936707]
[-363.58853149 -238.66464233]
[-358.52365112 -252.79219055]
[-352.35235596 -266.47265625]
[-345.11364746 -279.61956787]
[-336.85330200 -292.14978027]
[-327.62353516 -303.98410034]
[-317.48266602 -315.04769897]
[-306.49487305 -325.27062988]
[-294.72958374 -334.58825684]
[-282.26119995 -342.94168091]
[-269.16854858 -350.27804565]
[-255.53439331 -356.55102539]
[-241.44496155 -361.72091675]
[-226.98930359 -365.75506592]
[-212.25883484 -368.62792969]
[-197.34667969 -370.32138062]
[-182.34712219 -370.82467651]
[-167.35499573 -370.13467407]
[-152.46507263 -368.25570679]
[-137.77151489 -365.19967651]
[-123.36721039 -360.98590088]
[-109.34322357 -355.64099121]
[-95.78823090 -349.19879150]
[-82.78792572 -341.69998169]
[-70.42449951 -333.19198608]
[-58.77612305 -323.72860718]
[-47.91644287 -313.36968994]
[-37.91411591 -302.18069458]
[-28.83238029 -290.23239136]
[-20.72865677 -277.60028076]
[-13.65417862 -264.36428833]
[-7.65367508 -250.60804749]
[-2.76508284 -236.41854858]
[0.98069024 -221.88551331]
[3.55996203 -207.10079956]
[4.95642519 -192.15791321]
[5.16125059 -177.15130615]
[4.17314339 -162.17587280]
[1.99835074 -147.32627869]
[-1.34937739 -132.69642639]
[-5.84887552 -118.37879181]
[-11.47169590 -104.46390533]
[-18.18228722 -91.03974915]
[-25.93822479 -78.19118500]
[-34.69047165 -65.99945831]
[-44.38369370 -54.54163742]
[-33.73768616 -43.97459030]
[-23.09167671 -33.40754318]
[-12.44566727 -22.84049606]
[-1.79965830 -12.27344799]
[8.84635067 -1.70640051]
[23.33002090 1.76815438]
[27.67377663 16.98138428]
[38.31978607 27.54843140]
[52.80345917 31.02298737]
[57.14721298 46.23621750]
[67.79322052 56.80326462]
[74.75499725 59.28428268]
[78.51760101 67.60778046]
[89.00510406 78.33216095]
[99.57215118 88.97817230]
[102.12769318 74.19746399]
[115.20288849 66.84632874]
[129.15919495 72.34374237]
[133.70854187 86.63721466]
[125.49731445 99.19013977]
[110.58008575 100.74950409]
[120.41066742 112.07910156]
[130.24124146 123.40869141]
[147.78152466 129.01405334]
[150.43965149 146.36056519]
[160.43782043 157.54254150]
[170.43598938 168.72451782]
[180.43415833 179.90647888]
[190.43232727 191.08845520]
[189.54139709 176.11494446]
[196.79418945 162.98493958]
[209.94334412 155.76692200]
[224.91445923 156.69746399]
[237.06855774 165.48825073]
[242.63957214 179.41532898]
[239.90126038 194.16326904]
[229.70211792 205.16224670]
[215.20246887 209.00411987]
[200.89495850 204.49827576]
[209.30957031 216.91577148]
[217.72418213 229.33326721]
[222.42146301 231.60983276]
[225.47084045 235.11048889]
[226.68203735 239.00253296]
[226.22274780 242.49844360]
[234.07450867 255.27929688]
[241.92626953 268.06011963]
[249.77801514 280.84097290]
[257.62976074 293.62182617]
[265.48153687 306.40264893]
[273.33328247 319.18350220]
[280.49179077 324.85745239]
[281.20516968 332.21359253]
[288.86575317 345.10992432]
[302.76452637 339.39657593]
[317.34704590 335.76788330]
[332.30255127 334.30117798]
[347.31219482 335.02774048]
[362.05612183 337.93206787]
[376.22000122 342.95223999]
[389.50195312 349.98129272]
[401.61886597 358.86938477]
[412.31246948 369.42706299]
[421.35482788 381.42929077]
[428.55322266 394.62023926]
[433.75418091 408.71875000]
[436.84689331 423.42428589]
[437.76541138 438.42343140]
[436.49014282 453.39645386]
[433.04827881 468.02423096]
[427.51318359 481.99493408]
[420.00283813 495.01080322]
[410.67733765 506.79437256]
[399.73547363 517.09454346]
[387.41043091 525.69171143]
[373.96490479 532.40258789]
[359.68554688 537.08422852]
[344.87667847 539.63677979]
[329.85397339 540.00585938]
[314.93765259 538.18359375]
[300.44561768 534.20880127]
[286.68679810 528.16619873]
[273.95443726 520.18469238]
[262.51995850 510.43426514]
[252.62707520 499.12283325]
[244.48664856 486.49145508]
[238.27220154 472.80941772]
[234.11619568 458.36831665]
[232.10720825 443.47595215]
[232.28805542 428.44982910]
[234.65490723 413.61013794]
[239.15728760 399.27325439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 159]
[13 158]
[14 157]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[22 141]
[23 140]
[24 139]
[25 133]
[27 132]
[28 131]
[29 129]
[30 128]
[32 126]
[33 125]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
