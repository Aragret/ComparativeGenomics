%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[53.11380768 960.06347656]
[38.12126160 959.54071045]
[23.15758514 958.47387695]
[8.24251556 956.86437988]
[-6.60427666 954.71441650]
[-21.36320877 952.02667236]
[-36.01481628 948.80487061]
[-50.53977203 945.05316162]
[-64.91892242 940.77648926]
[-79.13330078 935.98052979]
[-93.16415405 930.67156982]
[-106.99298859 924.85668945]
[-120.60155487 918.54345703]
[-133.97190857 911.74029541]
[-147.08641052 904.45605469]
[-159.92776489 896.70050049]
[-172.47904968 888.48370361]
[-184.72367859 879.81665039]
[-196.64553833 870.71063232]
[-208.22888184 861.17773438]
[-219.45843506 851.23052979]
[-230.31939697 840.88214111]
[-240.79743958 830.14617920]
[-250.87872314 819.03686523]
[-260.54998779 807.56878662]
[-269.79843140 795.75714111]
[-278.61190796 783.61743164]
[-286.97872925 771.16571045]
[-294.88793945 758.41833496]
[-302.32904053 745.39221191]
[-309.29226685 732.10449219]
[-315.76837158 718.57269287]
[-321.74887085 704.81469727]
[-327.22589111 690.84857178]
[-332.19213867 676.69281006]
[-336.64111328 662.36602783]
[-340.56692505 647.88714600]
[-343.96438599 633.27526855]
[-346.82907104 618.54968262]
[-349.15716553 603.72979736]
[-350.94555664 588.83508301]
[-352.19195557 573.88531494]
[-352.89471436 558.90008545]
[-353.05285645 543.89929199]
[-352.66619873 528.90258789]
[-351.73522949 513.92987061]
[-350.26123047 499.00079346]
[-348.24609375 484.13510132]
[-345.69253540 469.35238647]
[-342.60385132 454.67211914]
[-338.98416138 440.11370850]
[-334.83819580 425.69631958]
[-330.17147827 411.43899536]
[-324.99014282 397.36053467]
[-319.30102539 383.47946167]
[-313.11163330 369.81414795]
[-306.43008423 356.38256836]
[-299.26525879 343.20248413]
[-291.62655640 330.29125977]
[-283.52407837 317.66589355]
[-274.96850586 305.34307861]
[-265.97113037 293.33905029]
[-256.54379272 281.66961670]
[-246.69895935 270.35021973]
[-236.44960022 259.39575195]
[-225.80921936 248.82069397]
[-214.79187012 238.63896179]
[-203.41206360 228.86399841]
[-191.68484497 219.50868225]
[-179.62564087 210.58537292]
[-167.25038147 202.10581970]
[-154.57537842 194.08122253]
[-141.61735535 186.52217102]
[-128.39340210 179.43861389]
[-114.92095947 172.83990479]
[-101.21779633 166.73474121]
[-87.30197906 161.13117981]
[-73.19187164 156.03662109]
[-58.90608215 151.45776367]
[-44.46344757 147.40066528]
[-29.88302040 143.87066650]
[-15.18403149 140.87242126]
[-0.38586581 138.40989685]
[14.49195766 136.48632812]
[29.42981720 135.10424805]
[44.40800858 134.26550293]
[59.40678024 133.97117615]
[74.40634918 134.22166443]
[89.38692474 135.01664734]
[90.72515869 120.07646179]
[92.06339264 105.13627625]
[89.69862366 100.45420074]
[90.12546539 94.78047943]
[93.67038727 89.77343750]
[95.45285034 74.87972260]
[97.23531342 59.98600388]
[99.01778412 45.09228897]
[100.80024719 30.19857025]
[102.58271027 15.30485249]
[88.69205475 9.36967945]
[77.03707123 -0.23959295]
[68.56259155 -12.74398327]
[63.95558929 -27.12981796]
[63.58954239 -42.23089981]
[67.49411774 -56.82305527]
[75.35279846 -69.72335815]
[86.52851105 -79.88603973]
[100.11528778 -86.48726654]
[115.01171112 -88.99188995]
[130.01020813 -87.19689178]
[143.89489746 -81.24776459]
[155.54020691 -71.62678528]
[164.00213623 -59.11389160]
[168.59468079 -44.72343445]
[168.94555664 -29.62199211]
[165.02632141 -15.03376865]
[157.15467834 -2.14136624]
[145.96876526 8.01008701]
[132.37536621 14.59765625]
[117.47643280 17.08731842]
[115.69396210 31.98103523]
[113.91149902 46.87475204]
[112.12903595 61.76847076]
[110.34656525 76.66218567]
[108.56410217 91.55590820]
[107.00357819 106.47451019]
[105.66534424 121.41469574]
[104.32711029 136.35487366]
[119.21050262 138.23490906]
[134.01580811 140.65411377]
[148.72351074 143.60932922]
[163.31420898 147.09664917]
[177.76864624 151.11146545]
[192.06777954 155.64849854]
[206.19273376 160.70175171]
[220.12487793 166.26457214]
[233.84585571 172.32960510]
[247.33755493 178.88885498]
[260.58218384 185.93368530]
[273.56225586 193.45480347]
[286.26068115 201.44227600]
[298.66070557 209.88557434]
[310.74597168 218.77355957]
[322.50051880 228.09449768]
[333.90887451 237.83613586]
[344.95596313 247.98558044]
[355.62725830 258.52947998]
[365.90863037 269.45388794]
[375.78656006 280.74444580]
[385.24798584 292.38619995]
[394.28045654 304.36386108]
[402.87207031 316.66159058]
[411.01144409 329.26318359]
[418.68789673 342.15200806]
[425.89126587 355.31109619]
[432.61206055 368.72305298]
[438.84143066 382.37020874]
[444.57116699 396.23452759]
[449.79367065 410.29779053]
[454.50210571 424.54141235]
[458.69021606 438.94659424]
[462.35247803 453.49435425]
[465.48410034 468.16549683]
[468.08093262 482.94070435]
[470.13955688 497.80044556]
[471.65725708 512.72515869]
[472.63201904 527.69506836]
[473.06256104 542.69055176]
[472.94830322 557.69177246]
[472.28942871 572.67895508]
[471.08676147 587.63232422]
[469.34194946 602.53216553]
[467.05725098 617.35882568]
[464.23568726 632.09277344]
[460.88098145 646.71453857]
[456.99752808 661.20483398]
[452.59051514 675.54455566]
[447.66571045 689.71478271]
[442.22961426 703.69689941]
[436.28939819 717.47235107]
[429.85287476 731.02307129]
[422.92858887 744.33105469]
[415.52563477 757.37890625]
[407.65377808 770.14935303]
[399.32339478 782.62548828]
[390.54550171 794.79095459]
[381.33163452 806.62963867]
[371.69400024 818.12597656]
[361.64526367 829.26477051]
[351.19866943 840.03131104]
[340.36804199 850.41143799]
[329.16766357 860.39147949]
[317.61224365 869.95819092]
[305.71710205 879.09906006]
[293.49786377 887.80194092]
[280.97070312 896.05535889]
[268.15206909 903.84851074]
[255.05894470 911.17108154]
[241.70855713 918.01336670]
[228.11853027 924.36639404]
[214.30677795 930.22174072]
[200.29151917 935.57171631]
[186.09123230 940.40924072]
[171.72465515 944.72796631]
[157.21073914 948.52215576]
[142.56863403 951.78686523]
[127.81762695 954.51770020]
[112.97718811 956.71112061]
[98.06689453 958.36425781]
[83.10639954 959.47491455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 128]
[90 127]
[91 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
