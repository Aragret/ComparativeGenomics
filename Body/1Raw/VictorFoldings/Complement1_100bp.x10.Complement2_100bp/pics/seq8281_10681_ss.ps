%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[229.76965332 510.09762573]
[236.32867432 496.58987427]
[244.35885620 483.90145874]
[253.75923157 472.19192505]
[264.41159058 461.60858154]
[255.09669495 449.85131836]
[245.78181458 438.09405518]
[236.46693420 426.33682251]
[227.15205383 414.57955933]
[220.53442383 411.28884888]
[217.78756714 402.57720947]
[208.64877319 390.68258667]
[199.50996399 378.78793335]
[184.65069580 379.37124634]
[172.14935303 370.99386597]
[166.91687012 356.69442749]
[171.15666199 341.88461304]
[162.01785278 329.98999023]
[152.87904358 318.09536743]
[155.82200623 332.80383301]
[155.57872009 347.80184937]
[152.16024780 362.40713501]
[145.72212219 375.95520020]
[136.55723572 387.82974243]
[125.08251953 397.49053955]
[111.81999969 404.49807739]
[97.37303162 408.53356934]
[82.39885712 409.41342163]
[67.57870483 407.09759521]
[53.58678818 401.69146729]
[41.05964661 393.44094849]
[30.56718063 382.72143555]
[22.58672905 370.02056885]
[17.48134995 355.91610718]
[15.48330402 341.04980469]
[16.68348694 326.09786987]
[21.02729988 311.74060059]
[28.31712723 298.63113403]
[38.22133255 287.36584473]
[50.28933716 278.45724487]
[63.97212982 272.31060791]
[78.64723969 269.20556641]
[93.64703369 269.28338623]
[108.28913879 272.54049683]
[121.90741730 278.82876587]
[133.88233948 287.86212158]
[143.67160034 299.23312378]
[139.91529846 284.71105957]
[136.15899658 270.18899536]
[132.40269470 255.66694641]
[128.64639282 241.14488220]
[124.89009094 226.62281799]
[121.13378906 212.10076904]
[117.37749481 197.57870483]
[113.62119293 183.05664062]
[109.86489105 168.53459167]
[106.10858917 154.01252747]
[102.35228729 139.49046326]
[98.59598541 124.96840668]
[94.83969116 110.44635010]
[90.12649536 124.68663788]
[79.76384735 135.53170776]
[65.75260162 140.88752747]
[50.79810715 139.72000122]
[37.78784561 132.25453186]
[29.23389816 119.93260956]
[26.78789330 105.13337708]
[30.92211914 90.71436310]
[40.83832169 79.45962524]
[54.62183380 73.54230499]
[69.61128235 74.10491943]
[82.91242981 81.03884888]
[91.95756531 93.00642395]
[90.84191895 78.04797363]
[81.59563446 69.05525208]
[80.97435760 56.57334900]
[88.76640320 47.32075119]
[87.87358856 32.34734726]
[86.98077393 17.37394142]
[86.08795929 2.40053582]
[77.54297638 -10.91463757]
[84.50901794 -24.07987595]
[72.97112274 -34.54480743]
[72.27898407 -49.74268723]
[82.32679749 -60.67781448]
[73.78181458 -73.99298859]
[80.74785614 -87.15822601]
[79.85504150 -102.13162994]
[78.96222687 -117.10504150]
[78.06941223 -132.07844543]
[63.20773315 -134.54385376]
[49.26747131 -140.25495911]
[36.94786072 -148.92532349]
[26.86685181 -160.12001038]
[19.53010178 -173.27751160]
[15.30562115 -187.73785400]
[14.40530491 -202.77571106]
[16.87431526 -217.63677979]
[22.58880615 -231.57566833]
[31.26214027 -243.89317322]
[42.45927048 -253.97146606]
[55.61854935 -261.30502319]
[70.07991028 -265.52600098]
[85.11798859 -266.42266846]
[99.97846985 -263.95007324]
[113.91596222 -258.23220825]
[126.23136902 -249.55587769]
[136.30696106 -238.35630798]
[143.63732910 -225.19525146]
[147.85479736 -210.73286438]
[148.74783325 -195.69458008]
[146.27162170 -180.83468628]
[140.55036926 -166.89859009]
[131.87106323 -154.58528137]
[120.66905975 -144.51240540]
[107.50622559 -137.18522644]
[93.04281616 -132.97126770]
[93.93563080 -117.99785614]
[94.82844543 -103.02445221]
[95.72126770 -88.05104065]
[104.20238495 -75.80686951]
[97.30020905 -61.57062912]
[108.57626343 -51.90697861]
[109.69500732 -36.73453522]
[99.48242188 -24.97269249]
[107.96354675 -12.72851753]
[101.06136322 1.50771987]
[101.95417786 16.48112488]
[102.84700012 31.45453072]
[103.73981476 46.42793655]
[114.17865753 60.53458405]
[105.80036926 76.93231964]
[106.91602325 91.89077759]
[109.36174774 106.69004822]
[113.11804962 121.21210480]
[116.87435150 135.73416138]
[120.63064575 150.25622559]
[124.38694763 164.77828979]
[128.14324951 179.30033875]
[131.89955139 193.82240295]
[135.65585327 208.34446716]
[139.41215515 222.86651611]
[143.16845703 237.38858032]
[146.92475891 251.91064453]
[150.68106079 266.43270874]
[154.43734741 280.95477295]
[158.19364929 295.47680664]
[164.77368164 308.95654297]
[173.91249084 320.85119629]
[183.05128479 332.74581909]
[198.45346069 332.46444702]
[210.92225647 341.20416260]
[215.79626465 355.44171143]
[211.40460205 369.64913940]
[220.54339600 381.54379272]
[229.68220520 393.43841553]
[238.90930176 405.26467896]
[248.22418213 417.02194214]
[257.53906250 428.77917480]
[266.85394287 440.53643799]
[276.16882324 452.29367065]
[288.90820312 444.34457397]
[302.45748901 437.87182617]
[316.64633179 432.95684814]
[331.29626465 429.66143799]
[346.22305298 428.02706909]
[361.23895264 428.07427979]
[376.15518188 429.80245972]
[390.78408813 433.18988037]
[404.94174194 438.19396973]
[418.45007324 444.75180054]
[431.13922119 452.78085327]
[442.84957886 462.18017578]
[453.43389893 472.83157349]
[462.75906372 484.60107422]
[470.70782471 497.34066772]
[477.18014526 510.89016724]
[482.09472656 525.07916260]
[485.38967896 539.72918701]
[487.02359009 554.65600586]
[486.97595215 569.67193604]
[485.24731445 584.58807373]
[481.85943604 599.21691895]
[476.85491943 613.37438965]
[470.29672241 626.88256836]
[462.26727295 639.57147217]
[452.86761475 651.28155518]
[442.21591187 661.86553955]
[430.44610596 671.19036865]
[417.70626831 679.13867188]
[404.15658569 685.61065674]
[389.96746826 690.52478027]
[375.31732178 693.81927490]
[360.39044189 695.45275879]
[345.37454224 695.40466309]
[330.45843506 693.67559814]
[315.82971191 690.28729248]
[301.67236328 685.28234863]
[288.16442871 678.72375488]
[275.47573853 670.69390869]
[263.76596069 661.29388428]
[253.18226624 650.64184570]
[243.85780334 638.87182617]
[235.90983582 626.13171387]
[229.43829346 612.58184814]
[224.52458191 598.39257812]
[221.23049927 583.74237061]
[219.59747314 568.81542969]
[219.64601135 553.79949951]
[221.37554932 538.88342285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 161]
[6 160]
[7 159]
[8 158]
[9 157]
[11 156]
[12 155]
[13 154]
[17 150]
[18 149]
[19 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[73 133]
[74 132]
[77 130]
[78 129]
[79 128]
[80 127]
[82 125]
[85 122]
[87 120]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
