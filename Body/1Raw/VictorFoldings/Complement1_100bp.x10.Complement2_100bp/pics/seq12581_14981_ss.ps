%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[86.55995941 453.63873291]
[79.58548737 440.30633545]
[75.26047516 425.89486694]
[73.74128723 410.92526245]
[75.08283234 395.93872070]
[79.23661804 381.47695923]
[86.05248260 368.06277466]
[95.28404236 356.18106079]
[106.59757996 346.26135254]
[119.58411407 338.66226196]
[133.77420044 333.65844727]
[131.54908752 318.82440186]
[129.32395935 303.99035645]
[127.09884644 289.15631104]
[124.87372589 274.32229614]
[122.64861298 259.48825073]
[120.42349243 244.65419006]
[118.19837952 229.82014465]
[115.97325897 214.98611450]
[113.74814606 200.15206909]
[110.97253418 185.41110229]
[107.65027618 170.78364563]
[104.32801056 156.15617371]
[99.78112030 150.32972717]
[101.06689453 141.28623962]
[97.96279144 126.61093903]
[94.85868073 111.93563843]
[91.31900787 97.35926056]
[87.34690857 82.89473724]
[83.37480927 68.43021393]
[79.40271759 53.96569061]
[75.43061829 39.50116730]
[68.45217133 26.22332191]
[58.79135895 14.74862194]
[49.13054657 3.27392149]
[39.46973801 -8.20077801]
[29.80892563 -19.67547798]
[17.04827309 -21.55392265]
[9.23799229 -31.31011581]
[10.13927555 -43.37304306]
[0.65037757 -54.99030685]
[-8.83852100 -66.60756683]
[-21.11712074 -64.26155090]
[-33.15818024 -67.34072876]
[-42.69184875 -75.20130920]
[-47.94792938 -86.30422211]
[-47.98442841 -98.51616669]
[-42.85577774 -109.51944733]
[-51.99457932 -121.41408539]
[-61.13338470 -133.30871582]
[-73.82939148 -125.30021667]
[-87.21017456 -118.49732971]
[-101.16157532 -112.95809937]
[-115.56455994 -108.72978973]
[-130.29624939 -105.84846497]
[-145.23095703 -104.33872223]
[-160.24124146 -104.21342468]
[-175.19906616 -105.47366333]
[-189.97680664 -108.10866547]
[-204.44836426 -112.09596252]
[-218.49028015 -117.40153503]
[-231.98275757 -123.98010254]
[-244.81068420 -131.77555847]
[-256.86459351 -140.72137451]
[-268.04168701 -150.74124146]
[-278.24655151 -161.74966431]
[-287.39212036 -173.65272522]
[-295.40042114 -186.34886169]
[-302.20309448 -199.72976685]
[-307.74206543 -213.68125916]
[-311.97015381 -228.08432007]
[-314.85122681 -242.81605530]
[-316.36071777 -257.75076294]
[-316.48577881 -272.76107788]
[-315.22528076 -287.71887207]
[-312.59002686 -302.49655151]
[-308.60250854 -316.96804810]
[-303.29669189 -331.00988770]
[-296.71789551 -344.50225830]
[-288.92221069 -357.33004761]
[-279.97619629 -369.38381958]
[-269.95614624 -380.56072998]
[-258.94757080 -390.76541138]
[-247.04434204 -399.91079712]
[-234.34806824 -407.91888428]
[-220.96705627 -414.72131348]
[-207.01547241 -420.26007080]
[-192.61235046 -424.48791504]
[-177.88056946 -427.36874390]
[-162.94581604 -428.87799072]
[-147.93551636 -429.00277710]
[-132.97773743 -427.74206543]
[-118.20008850 -425.10656738]
[-103.72866058 -421.11877441]
[-89.68691254 -415.81274414]
[-76.19465637 -409.23373413]
[-63.36699295 -401.43783569]
[-51.31337357 -392.49160767]
[-40.13663483 -382.47137451]
[-29.93213844 -371.46261597]
[-20.78694344 -359.55926514]
[-12.77907753 -346.86285400]
[-5.97686052 -333.48171997]
[-0.43832892 -319.53002930]
[3.78926396 -305.12683105]
[6.66984892 -290.39501953]
[8.17884922 -275.46023560]
[8.30338955 -260.44992065]
[7.04240894 -245.49217224]
[4.40666485 -230.71456909]
[0.41864514 -216.24320984]
[-4.88762522 -202.20155334]
[-11.46687317 -188.70939636]
[-19.26296806 -175.88186646]
[-28.20939064 -163.82839966]
[-38.22981644 -152.65182495]
[-49.23875046 -142.44750977]
[-40.09994888 -130.55288696]
[-30.96114540 -118.65824890]
[-13.34869194 -119.95175171]
[1.64650893 -110.32913208]
[7.91837692 -93.48445129]
[2.77874255 -76.09646606]
[12.26764107 -64.47920227]
[21.75653839 -52.86194229]
[38.47763062 -47.53540802]
[41.28362656 -29.33628845]
[50.94443512 -17.86158943]
[60.60524750 -6.38688898]
[70.26605988 5.08781147]
[79.92686462 16.56251144]
[76.34799194 1.99571109]
[75.73303223 -12.99167728]
[78.10647583 -27.80271339]
[83.37378693 -41.84747696]
[91.32518005 -54.56657410]
[101.64394379 -65.45339966]
[113.91909790 -74.07434845]
[127.66171265 -80.08604431]
[142.32443237 -83.24903870]
[157.32325745 -83.43736267]
[172.06077576 -80.64350128]
[185.94999695 -74.97874451]
[198.43772888 -66.66871643]
[209.02658081 -56.04439545]
[217.29479980 -43.52894592]
[222.91308594 -29.62085915]
[225.65765381 -14.87408447]
[225.41917419 0.12401973]
[222.20716858 14.77608395]
[216.14955139 28.49852371]
[207.48760986 40.74477768]
[196.56632996 51.02708054]
[183.82072449 58.93589401]
[169.75842285 64.15621948]
[154.93952942 66.48011780]
[139.95428467 65.81504822]
[125.39952850 62.18748474]
[111.85498810 55.74192047]
[99.86012268 46.73507309]
[89.89514160 35.52907181]
[93.86724091 49.99359512]
[97.83934021 64.45812225]
[101.81143188 78.92264557]
[105.78353119 93.38716888]
[108.29515839 95.11379242]
[110.23405457 97.79244995]
[111.24637604 101.21277618]
[111.06098175 105.03663635]
[109.53398132 108.83152771]
[112.63809204 123.50682831]
[115.74220276 138.18212891]
[118.95547485 152.83392334]
[122.27773285 167.46138000]
[125.59999084 182.08883667]
[135.68090820 170.98141479]
[150.65936279 171.78514099]
[159.49378967 183.90754700]
[155.67178345 198.41246033]
[142.01077271 204.60737610]
[128.58218384 197.92694092]
[130.80731201 212.76098633]
[133.03242493 227.59503174]
[135.25753784 242.42907715]
[137.48265076 257.26312256]
[139.70777893 272.09716797]
[141.93289185 286.93121338]
[144.15800476 301.76525879]
[146.38311768 316.59930420]
[148.60824585 331.43334961]
[163.64193726 332.05355835]
[178.28649902 335.50796509]
[192.01257324 341.67172241]
[204.32392883 350.32196045]
[214.77555847 361.14602661]
[222.98960876 373.75259399]
[228.66915894 387.68597412]
[231.60891724 402.44247437]
[231.70257568 417.48867798]
[228.94677734 432.28060913]
[223.44113159 446.28363037]
[215.38465881 458.99148560]
[205.06860352 469.94482422]
[192.86589050 478.74768066]
[179.21762085 485.08184814]
[164.61718750 488.71829224]
[149.59239197 489.52563477]
[134.68635559 487.47467041]
[120.43791962 482.63949585]
[107.36217499 475.19494629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[21 175]
[22 174]
[23 173]
[25 172]
[26 171]
[27 170]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 131]
[34 130]
[35 129]
[36 128]
[37 127]
[40 125]
[41 124]
[42 123]
[48 119]
[49 118]
[50 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
