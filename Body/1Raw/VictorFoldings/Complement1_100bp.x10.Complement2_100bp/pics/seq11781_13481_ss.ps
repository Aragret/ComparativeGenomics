%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[26.28428650 601.66687012]
[13.34728622 594.00250244]
[1.89176118 584.26190186]
[-7.75268936 572.72534180]
[-15.30857563 559.72473145]
[-20.55850029 545.63409424]
[-23.35141182 530.85882568]
[-23.60695267 515.82409668]
[-21.31777000 500.96249390]
[-16.54972839 486.70156860]
[-9.44001579 473.45166016]
[-0.19319040 461.59399414]
[10.92469692 451.46975708]
[23.59376335 443.37020874]
[37.44949341 437.52838135]
[52.09323120 434.11239624]
[51.20041656 419.13900757]
[50.30759811 404.16558838]
[49.41478348 389.19216919]
[48.52196884 374.21878052]
[47.62915039 359.24536133]
[44.09309769 352.75552368]
[46.83619690 344.04269409]
[46.16641235 329.05767822]
[39.76105118 342.62127686]
[29.52366257 353.58465576]
[16.43000793 360.90286255]
[1.72809136 363.87838745]
[-13.18079376 362.22756958]
[-26.87562752 356.10781860]
[-38.05110550 346.10238647]
[-45.64205551 333.16494751]
[-48.92495346 318.52859497]
[-47.58689117 303.58837891]
[-41.75541306 289.76834106]
[-31.98633003 278.38568115]
[-19.21077347 270.52532959]
[-4.64642572 266.93649292]
[10.31853104 267.96121216]
[24.25773239 273.50186157]
[35.84258270 283.03030396]
[43.96888733 295.63836670]
[47.86222458 310.12542725]
[51.18448257 295.49798584]
[54.50674438 280.87051392]
[49.78049469 266.74563599]
[60.38214493 255.00190735]
[63.70440674 240.37445068]
[67.02666473 225.74697876]
[70.23993683 211.09519958]
[73.34404755 196.41989136]
[76.33882141 181.72189331]
[79.22409821 167.00199890]
[82.10936737 152.28210449]
[84.99464417 137.56222534]
[71.74252319 128.94125366]
[62.80722809 115.89901733]
[59.55376434 100.42792511]
[62.47916412 84.89146423]
[71.13651276 71.66309357]
[84.20326233 62.76367188]
[99.68323517 59.55274200]
[102.34902954 44.79152298]
[105.01482391 30.03030777]
[96.11231995 19.92288208]
[94.67751312 6.72622395]
[101.01147461 -4.71768665]
[112.60572052 -10.33933640]
[115.49098969 -25.05922699]
[118.37626648 -39.77911758]
[121.26153564 -54.49901199]
[116.32320404 -69.52976227]
[126.36412811 -80.53108215]
[129.24940491 -95.25097656]
[132.13467407 -109.97086334]
[135.01994324 -124.69075775]
[130.08161926 -139.72151184]
[140.12254333 -150.72282410]
[135.18420410 -165.75358582]
[145.22512817 -176.75489807]
[148.11041260 -191.47479248]
[150.99568176 -206.19468689]
[153.88095093 -220.91458130]
[156.76622009 -235.63447571]
[158.54869080 -250.52818298]
[159.21847534 -265.51321411]
[159.88825989 -280.49826050]
[145.15126038 -283.45141602]
[131.03779602 -288.61962891]
[117.87871552 -295.88180542]
[105.98248291 -305.06765747]
[95.62797546 -315.96191406]
[87.05790710 -328.30917358]
[80.47317505 -341.81994629]
[76.02813721 -356.17761230]
[73.82698822 -371.04553223]
[73.92132568 -386.07522583]
[76.30893707 -400.91436768]
[80.93385315 -415.21508789]
[87.68766785 -428.64215088]
[96.41205597 -440.88082886]
[106.90250397 -451.64425659]
[118.91310120 -460.68005371]
[132.16230774 -467.77645874]
[146.33953857 -472.76712036]
[161.11245728 -475.53503418]
[176.13476562 -476.01531982]
[191.05432129 -474.19674683]
[205.52137756 -470.12188721]
[219.19683838 -463.88629150]
[231.76008606 -455.63613892]
[242.91665649 -445.56481934]
[252.40501404 -433.90844727]
[260.00271606 -420.94018555]
[265.53170776 -406.96411133]
[268.86233521 -392.30780029]
[269.91653442 -377.31484985]
[268.66961670 -362.33666992]
[265.15078735 -347.72439575]
[259.44256592 -333.82058716]
[251.67871094 -320.95111084]
[242.04124451 -309.41769409]
[230.75608826 -299.49066162]
[218.08778381 -291.40277100]
[204.33328247 -285.34353638]
[189.81500244 -281.45507812]
[174.87330627 -279.82849121]
[174.20352173 -264.84344482]
[173.53373718 -249.85839844]
[182.91506958 -261.56271362]
[196.85549927 -267.10021973]
[211.71104431 -265.02349854]
[223.59849548 -255.87533569]
[229.41049194 -242.04708862]
[227.62779236 -227.15339661]
[218.71641541 -215.08744812]
[205.00573730 -209.00325012]
[190.07971191 -210.49119568]
[177.83998108 -219.16233826]
[171.48611450 -232.74919128]
[168.60084534 -218.02931213]
[165.71557617 -203.30941772]
[162.83029175 -188.58952332]
[159.94502258 -173.86962891]
[165.08973694 -159.89173889]
[154.84243774 -147.83755493]
[159.98713684 -133.85968018]
[149.73983765 -121.80548859]
[146.85456848 -107.08559418]
[143.96929932 -92.36569977]
[141.08401489 -77.64581299]
[146.22872925 -63.66792679]
[135.98143005 -51.61373901]
[133.09616089 -36.89384460]
[130.21087646 -22.17395592]
[127.32560730 -7.45406342]
[137.29589844 6.08964872]
[134.32742310 22.98648262]
[119.77603912 32.69610214]
[117.11024475 47.45732117]
[114.44445038 62.21853638]
[126.46079254 69.40739441]
[135.30599976 80.26254272]
[139.92005920 93.48307800]
[139.74998474 107.48461914]
[134.81617737 120.58918762]
[125.70991516 131.22628784]
[113.52251434 138.12115479]
[99.71453094 140.44749451]
[96.82926178 155.16738892]
[93.94398499 169.88726807]
[91.05871582 184.60716248]
[92.47899628 193.63050842]
[88.01935577 199.52400208]
[84.91524506 214.19931030]
[86.20101929 223.24279785]
[81.65412903 229.06924438]
[78.33186340 243.69670105]
[75.00960541 258.32415771]
[79.49822998 273.49530029]
[69.13420105 284.19277954]
[65.81194305 298.82022095]
[62.48968506 313.44769287]
[61.15145111 328.38787842]
[61.82123566 343.37292480]
[62.60255814 358.35256958]
[63.49537277 373.32595825]
[64.38819122 388.29937744]
[65.28100586 403.27276611]
[66.17382050 418.24618530]
[67.06663513 433.21957397]
[82.01254272 434.87124634]
[96.46428680 439.02517700]
[110.00606537 445.56185913]
[122.24825287 454.29321289]
[132.83862305 464.96804810]
[141.47245789 477.27923584]
[147.90135193 490.87249756]
[151.94033813 505.35681152]
[153.47319031 520.31536865]
[152.45582581 535.31781006]
[148.91751099 549.93243408]
[142.96003723 563.73883057]
[134.75483704 576.33972168]
[124.53795624 587.37255859]
[112.60338593 596.51989746]
[99.29448700 603.51861572]
[84.99420166 608.16723633]
[70.11396027 610.33203125]
[55.08190536 609.95080566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[23 185]
[24 184]
[43 183]
[44 182]
[45 181]
[47 179]
[48 178]
[49 177]
[50 175]
[51 174]
[52 172]
[53 171]
[54 170]
[55 169]
[62 161]
[63 160]
[64 159]
[68 156]
[69 155]
[70 154]
[71 153]
[73 151]
[74 150]
[75 149]
[76 148]
[78 146]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 129]
[86 128]
[87 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
