%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[-72.08860016 495.15298462]
[-67.69773102 509.51535034]
[-65.07011414 524.30230713]
[-64.24406433 539.29809570]
[-65.23162842 554.28417969]
[-68.01840210 569.04193115]
[-72.56375122 583.35614014]
[-78.80139160 597.01812744]
[-86.64035797 609.82861328]
[-95.96632385 621.60076904]
[-106.64331055 632.16290283]
[-118.51560211 641.36108398]
[-131.41006470 649.06109619]
[-145.13867188 655.15063477]
[-159.50120544 659.54095459]
[-174.28822327 662.16802979]
[-189.28408813 662.99353027]
[-204.27011108 662.00543213]
[-219.02775574 659.21807861]
[-233.34181213 654.67218018]
[-247.00354004 648.43402100]
[-259.81372070 640.59460449]
[-271.58551025 631.26818848]
[-282.14727783 620.59082031]
[-291.34500122 608.71820068]
[-299.04452515 595.82342529]
[-305.13357544 582.09460449]
[-309.52337646 567.73187256]
[-312.14990234 552.94476318]
[-312.97482300 537.94891357]
[-311.98614502 522.96289062]
[-309.19824219 508.20535278]
[-304.65182495 493.89144897]
[-298.41317749 480.22998047]
[-290.57324219 467.42007446]
[-281.24639893 455.64862061]
[-270.56863403 445.08724976]
[-258.69564819 435.88998413]
[-245.80061340 428.19094849]
[-232.07154846 422.10241699]
[-217.70869446 417.71316528]
[-202.92147827 415.08718872]
[-187.92555237 414.26281738]
[-172.93959045 415.25207520]
[-158.18215942 418.04049683]
[-143.86843872 422.58746338]
[-130.20716858 428.82662964]
[-117.39759064 436.66702271]
[-108.08271027 424.90979004]
[-98.76782227 413.15252686]
[-89.45294189 401.39526367]
[-80.13806152 389.63803101]
[-70.82317352 377.88076782]
[-61.77317429 365.91842651]
[-52.99257278 353.75698853]
[-44.30274963 341.53048706]
[-35.70418549 329.23965454]
[-27.10562134 316.94882202]
[-18.50705719 304.65798950]
[-9.90849209 292.36712646]
[-1.30992854 280.07629395]
[7.28863525 267.78546143]
[15.42385101 255.18315125]
[23.08444786 242.28681946]
[29.86444092 228.90655518]
[35.73340225 215.10237122]
[41.60236359 201.29820251]
[47.47132111 187.49401855]
[53.34028244 173.68984985]
[59.20924377 159.88566589]
[45.33130646 165.57801819]
[31.00348854 161.13801575]
[22.77627373 148.59558105]
[24.41103363 133.68492126]
[35.16038132 123.22301483]
[50.10985565 121.99288940]
[62.42475891 130.55694580]
[66.47475433 145.00166321]
[73.74798584 131.88296509]
[81.02120972 118.76427460]
[88.29444122 105.64558411]
[95.17385864 92.31615448]
[101.65335083 78.78781128]
[108.03195953 65.21160126]
[114.30931854 51.58828354]
[120.58667755 37.96496964]
[119.33473969 22.19337273]
[131.68817139 13.87218475]
[130.43623352 -1.89941061]
[142.78965759 -10.22059917]
[149.06701660 -23.84391594]
[155.34437561 -37.46723175]
[160.48634338 -51.55837250]
[159.74111938 -60.66235352]
[164.62673950 -66.20783997]
[168.81375122 -80.61162567]
[173.00076294 -95.01540375]
[177.18777466 -109.41918945]
[181.37478638 -123.82296753]
[167.98043823 -130.67771912]
[156.12556458 -139.94371033]
[146.23872375 -151.28598022]
[138.67733765 -164.29450989]
[133.71472168 -178.49905396]
[131.53027344 -193.38610840]
[132.20297241 -208.41754150]
[135.70849609 -223.04997253]
[141.92012024 -236.75444031]
[150.61329651 -249.03552246]
[161.47377014 -259.44927979]
[174.10894775 -267.61929321]
[188.06207275 -273.25015259]
[202.82875061 -276.13836670]
[217.87516785 -276.17950439]
[232.65742493 -273.37207031]
[246.64112854 -267.81759644]
[259.32080078 -259.71679688]
[270.23803711 -249.36256409]
[278.99822998 -237.12919617]
[285.28469849 -223.45890808]
[288.87017822 -208.84587097]
[289.62506104 -193.81832886]
[287.52203369 -178.91954041]
[282.63717651 -164.68807983]
[275.14700317 -151.63841248]
[265.32235718 -140.24224854]
[253.51832581 -130.91157532]
[240.16163635 -123.98368835]
[225.73515320 -119.70902252]
[210.76034546 -118.24209595]
[195.77857971 -119.63595581]
[191.59156799 -105.23217773]
[187.40455627 -90.82839203]
[183.21754456 -76.42461395]
[179.03053284 -62.02082825]
[174.95086670 -47.58627701]
[186.38726807 -57.29237747]
[201.00390625 -60.66194153]
[215.53536987 -56.94219208]
[226.73530579 -46.96413422]
[232.10159302 -32.95689011]
[230.43542480 -18.04971504]
[222.10899353 -5.57291031]
[208.98246765 1.68617511]
[193.98834229 2.10584259]
[180.47633362 -4.40766287]
[171.46507263 -16.39920616]
[168.96769714 -31.18987083]
[162.69033813 -17.56655502]
[156.41297913 -3.94323826]
[158.11390686 10.85392666]
[145.31147766 20.14954567]
[147.01242065 34.94671249]
[134.20999146 44.24232864]
[127.93263245 57.86564636]
[121.65527344 71.48896027]
[121.71105957 78.87940979]
[115.18169403 85.26730347]
[108.70220184 98.79564667]
[109.46767426 101.74582672]
[109.17660522 105.03973389]
[107.69963837 108.28658295]
[105.05355835 111.05326080]
[101.41313934 112.91881561]
[94.13990784 126.03750610]
[86.86667633 139.15620422]
[79.59344482 152.27490234]
[73.01342010 165.75462341]
[67.14446259 179.55880737]
[61.27550125 193.36297607]
[55.40653992 207.16716003]
[49.53757858 220.97134399]
[43.66861725 234.77551270]
[56.84199524 227.60180664]
[71.80988312 228.58274841]
[83.93432617 237.41439819]
[89.45841980 251.36016846]
[86.67047119 266.09881592]
[76.43435669 277.06338501]
[61.92184830 280.85641479]
[47.62980270 276.30258179]
[37.98676682 264.81292725]
[35.98077393 249.94741821]
[28.32017899 262.84375000]
[43.27861023 261.72781372]
[53.58899307 272.62258911]
[51.65089417 287.49685669]
[38.89300919 295.38583374]
[24.71997833 290.47412109]
[19.57947350 276.38403320]
[10.98090935 288.67486572]
[2.38234544 300.96569824]
[-6.21621847 313.25653076]
[-14.81478214 325.54739380]
[-23.41334724 337.83822632]
[-32.01190948 350.12905884]
[-34.36702728 358.95465088]
[-40.83111572 362.53756714]
[-49.61172104 374.69903564]
[-50.14012909 379.89208984]
[-52.38335037 383.95672607]
[-55.62439346 386.42871094]
[-59.06592560 387.19564819]
[-68.38080597 398.95291138]
[-77.69569397 410.71014404]
[-87.01057434 422.46740723]
[-96.32545471 434.22467041]
[-105.64033508 445.98190308]
[-95.07777405 456.65850830]
[-85.87917328 468.53045654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 208]
[49 207]
[50 206]
[51 205]
[52 204]
[53 203]
[54 199]
[55 198]
[56 196]
[57 195]
[58 194]
[59 193]
[60 192]
[61 191]
[62 190]
[63 184]
[64 183]
[65 173]
[66 172]
[67 171]
[68 170]
[69 169]
[70 168]
[78 167]
[79 166]
[80 165]
[81 164]
[82 159]
[83 158]
[84 156]
[85 155]
[86 154]
[88 152]
[90 150]
[91 149]
[92 148]
[93 136]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
