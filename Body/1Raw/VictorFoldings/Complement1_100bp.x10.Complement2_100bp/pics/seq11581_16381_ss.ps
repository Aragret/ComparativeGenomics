%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[31.44890213 753.34869385]
[17.57773781 759.07653809]
[3.31310892 763.73889160]
[-11.26327801 767.30908203]
[-26.06793022 769.76666260]
[-41.01604462 771.09753418]
[-56.02200317 771.29406738]
[-70.99984741 770.35516357]
[-85.86378479 768.28619385]
[-100.52868652 765.09899902]
[-114.91053009 760.81182861]
[-128.92695618 755.44927979]
[-142.49768066 749.04199219]
[-155.54495239 741.62677002]
[-167.99403381 733.24597168]
[-179.77365112 723.94769287]
[-190.81629944 713.78515625]
[-201.05874634 702.81652832]
[-210.44230652 691.10473633]
[-218.91323853 678.71685791]
[-226.42301941 665.72375488]
[-232.92863464 652.19989014]
[-238.39283752 638.22277832]
[-242.78428650 623.87243652]
[-246.07786560 609.23107910]
[-248.25469971 594.38250732]
[-249.30232239 579.41186523]
[-249.21472168 564.40490723]
[-247.99240112 549.44750977]
[-245.64236450 534.62542725]
[-242.17808533 520.02349854]
[-237.61938477 505.72540283]
[-231.99240112 491.81301880]
[-225.32934570 478.36602783]
[-217.66838074 465.46151733]
[-209.05340576 453.17330933]
[-199.53375244 441.57186890]
[-189.16395569 430.72360229]
[-178.00341797 420.69067383]
[-166.11605835 411.53054810]
[-153.56997681 403.29565430]
[-140.43702698 396.03323364]
[-126.79243469 389.78482056]
[-112.71435547 384.58624268]
[-98.28343964 380.46728516]
[-83.58233643 377.45150757]
[-68.69525146 375.55618286]
[-53.70746613 374.79220581]
[-38.70482635 375.16394043]
[-23.77326775 376.66921997]
[-8.99831486 379.29946899]
[5.53539896 383.03958130]
[10.36139679 368.83712769]
[15.18739414 354.63467407]
[11.95626926 340.09475708]
[23.72215271 329.51770020]
[20.49102783 314.97778320]
[32.25691223 304.40069580]
[36.65790939 290.06085205]
[40.63000488 275.59631348]
[44.60210419 261.13180542]
[48.57419968 246.66728210]
[44.48337173 232.34545898]
[55.59883499 221.08682251]
[59.57093430 206.62229919]
[63.54302979 192.15777588]
[55.66560364 181.96092224]
[55.09094620 168.89372253]
[62.25269318 157.71696472]
[74.72492981 152.63189697]
[78.91194153 138.22811890]
[77.68159485 135.70930481]
[77.37483978 132.55137634]
[78.24011993 129.10366821]
[80.39492798 125.79892731]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[101.11302185 71.55208588]
[104.21713257 56.87678146]
[107.32123566 42.20147705]
[102.60723877 27.09886742]
[112.81084442 16.24826050]
[115.91495514 1.57295716]
[117.80825043 -13.30707836]
[118.47803497 -28.29211617]
[111.36466217 -42.42401505]
[119.66254425 -54.79310226]
[120.33232880 -69.77813721]
[120.77893829 -84.77149200]
[121.00226593 -99.76982880]
[121.22559357 -114.76816559]
[121.44892120 -129.76651001]
[121.67224884 -144.76484680]
[121.56058502 -159.76441956]
[121.11397552 -174.75778198]
[120.66736603 -189.75112915]
[106.70381927 -195.91407776]
[96.80362701 -207.53082275]
[92.93248749 -222.29487610]
[95.85902405 -237.27479553]
[105.00215912 -249.49632263]
[118.54653168 -256.53286743]
[133.80288696 -256.98730469]
[147.74205017 -250.76942444]
[157.59642029 -239.11376953]
[161.40939331 -224.33459473]
[158.42388916 -209.36630249]
[149.23269653 -197.18087769]
[135.66072083 -190.19772339]
[136.10733032 -175.20437622]
[136.55392456 -160.21102905]
[138.85574341 -157.54006958]
[139.97821045 -153.62152100]
[139.34904480 -149.02178955]
[136.67059326 -144.54151917]
[136.44726562 -129.54318237]
[136.22392273 -114.54483795]
[136.00059509 -99.54650116]
[135.77726746 -84.54816437]
[138.40184021 -80.55809021]
[138.54772949 -74.87691498]
[135.31736755 -69.10835266]
[134.64758301 -54.12331772]
[141.80886841 -41.06325150]
[133.46307373 -27.62233162]
[132.79328918 -12.63729286]
[141.79591370 -24.63531685]
[155.30323792 -31.15854263]
[170.29766846 -30.74966431]
[183.42941284 -23.50002480]
[191.76480103 -11.02921391]
[193.44171143 3.87675762]
[188.08549500 17.88785744]
[176.89274597 27.87397194]
[162.36396790 31.60417557]
[147.74490356 28.24513245]
[136.30151367 18.54726028]
[130.59025574 4.67706728]
[127.48614502 19.35236931]
[132.42218018 33.40530396]
[121.99654388 45.30558777]
[118.89243317 59.98088837]
[115.78832245 74.65618896]
[127.33583069 65.08252716]
[142.21289062 63.16606140]
[155.80970764 69.50063324]
[163.91313171 82.12341309]
[164.01225281 97.12308502]
[156.07633972 109.85183716]
[142.56442261 116.36553955]
[127.66333008 114.64584351]
[115.99031830 105.22560883]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[93.31571960 142.41513062]
[89.12870789 156.81890869]
[97.83326721 171.99290466]
[92.96617889 188.44361877]
[78.00755310 196.12986755]
[74.03545380 210.59439087]
[70.06336212 225.05891418]
[73.87007904 240.41532898]
[63.03872299 250.63937378]
[59.06662750 265.10391235]
[55.09453201 279.56842041]
[51.12243271 294.03295898]
[52.36909866 298.19226074]
[52.24032211 302.13534546]
[50.97296906 305.45635986]
[48.91137695 307.86810303]
[46.45936966 309.22668457]
[49.34530640 324.78247070]
[37.92461014 334.34368896]
[40.81054688 349.89944458]
[29.38985062 359.46066284]
[24.56385231 373.66314697]
[19.73785400 387.86560059]
[33.54141998 393.75448608]
[46.86008072 400.67044067]
[59.61754608 408.57388306]
[71.74074554 417.41952515]
[83.16023254 427.15670776]
[93.81060028 437.72967529]
[103.63083649 449.07778931]
[112.56470490 461.13613892]
[120.56102753 473.83560181]
[127.57398987 487.10342407]
[133.56343079 500.86367798]
[138.49505615 515.03747559]
[142.34059143 529.54364014]
[145.07803345 544.29913330]
[146.69168091 559.21936035]
[147.17230225 574.21887207]
[146.51715088 589.21185303]
[144.72996521 604.11230469]
[141.82099915 618.83489990]
[137.80690002 633.29534912]
[132.71066284 647.41076660]
[126.56148529 661.10034180]
[119.39458466 674.28570557]
[111.25101471 686.89123535]
[102.17742157 698.84478760]
[92.22577667 710.07788086]
[81.45307922 720.52612305]
[69.92105103 730.12976074]
[57.69572830 738.83374023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 181]
[53 180]
[54 179]
[56 177]
[58 175]
[59 170]
[60 169]
[61 168]
[62 167]
[64 165]
[65 164]
[66 163]
[70 160]
[71 159]
[76 158]
[77 157]
[79 155]
[80 145]
[81 144]
[82 143]
[84 141]
[85 140]
[86 128]
[87 127]
[89 125]
[90 124]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
