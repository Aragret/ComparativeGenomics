%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[90.53686523 788.68920898]
[75.59254456 787.36578369]
[60.72739029 785.33807373]
[45.97457886 782.61065674]
[31.36703110 779.18957520]
[16.93733597 775.08245850]
[2.71769810 770.29852295]
[-11.26015568 764.84838867]
[-24.96503639 758.74426270]
[-38.36635971 751.99969482]
[-51.43422318 744.62982178]
[-64.13947296 736.65106201]
[-76.45374298 728.08117676]
[-88.34957886 718.93927002]
[-99.80041504 709.24584961]
[-110.78070831 699.02246094]
[-121.26595306 688.29199219]
[-131.23275757 677.07824707]
[-140.65888977 665.40643311]
[-149.52330017 653.30242920]
[-157.80622864 640.79333496]
[-165.48916626 627.90704346]
[-172.55497742 614.67230225]
[-178.98791504 601.11859131]
[-184.77360535 587.27630615]
[-189.89913940 573.17614746]
[-194.35308838 558.84973145]
[-198.12551880 544.32897949]
[-201.20799255 529.64624023]
[-203.59364319 514.83428955]
[-205.27714539 499.92623901]
[-206.25476074 484.95532227]
[-206.52427673 469.95492554]
[-206.08509827 454.95855713]
[-204.93823242 439.99966431]
[-203.08619690 425.11160278]
[-200.53315735 410.32760620]
[-197.28480530 395.68066406]
[-193.34838867 381.20349121]
[-188.73266602 366.92834473]
[-183.44796753 352.88711548]
[-177.50608826 339.11111450]
[-170.92025757 325.63107300]
[-163.70518494 312.47711182]
[-155.87698364 299.67852783]
[-147.45310974 287.26391602]
[-138.45234680 275.26098633]
[-128.89480591 263.69647217]
[-118.80179596 252.59623718]
[-108.19584656 241.98500061]
[-97.10061646 231.88647461]
[-85.54087067 222.32319641]
[-73.54239655 213.31646729]
[-61.13197327 204.88642883]
[-48.33729172 197.05184937]
[-35.18690491 189.83024597]
[-21.71014977 183.23773193]
[-7.93710232 177.28898621]
[6.10150385 171.99731445]
[20.37434387 167.37451172]
[34.84957123 163.43089294]
[49.49488068 160.17524719]
[64.27759552 157.61486816]
[79.16473389 155.75544739]
[94.12307739 154.60113525]
[93.67646790 139.60777283]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[90.32784271 64.68923187]
[89.43502045 49.71582413]
[88.54220581 34.74242020]
[87.64939117 19.76901245]
[72.65074921 19.09186745]
[57.80506134 16.85062027]
[43.27497864 13.06983280]
[29.21969795 7.79092550]
[15.79322338 1.07173872]
[3.14265943 -7.01410913]
[-8.59338760 -16.37802505]
[-19.28632927 -26.91741180]
[-28.81900978 -38.51679611]
[-37.08698273 -51.04908752]
[-43.99966049 -64.37697601]
[-49.48130417 -78.35443115]
[-53.47185516 -92.82831573]
[-55.92758560 -107.64003754]
[-56.82159424 -122.62731171]
[-56.14408493 -137.62593079]
[-53.90247726 -152.47157288]
[-50.12133789 -167.00155640]
[-44.84208679 -181.05671692]
[-38.12257385 -194.48303223]
[-30.03642082 -207.13339233]
[-20.67221832 -218.86921692]
[-10.13257217 -229.56190491]
[1.46704352 -239.09429932]
[13.99953556 -247.36196899]
[27.32759094 -254.27432251]
[41.30517960 -259.75561523]
[55.77915955 -263.74581909]
[70.59094238 -266.20120239]
[85.57823944 -267.09484863]
[100.57684326 -266.41696167]
[115.42242432 -264.17498779]
[129.95233154 -260.39349365]
[144.00735474 -255.11390686]
[157.43350220 -248.39407349]
[170.08366394 -240.30761719]
[181.81925964 -230.94313049]
[192.51168823 -220.40321350]
[202.04380798 -208.80337524]
[210.31117249 -196.27067566]
[217.22320557 -182.94245911]
[222.70416260 -168.96473694]
[226.69401550 -154.49066162]
[229.14903259 -139.67881775]
[230.04231262 -124.69149780]
[229.36407471 -109.69290924]
[227.12173462 -94.84738159]
[223.33988953 -80.31757355]
[218.05996704 -66.26268005]
[211.33979797 -52.83669281]
[203.25302124 -40.18671799]
[193.88825989 -28.45135117]
[183.34808350 -17.75917816]
[171.74801636 -8.22734165]
[159.21511841 0.03971842]
[145.88671875 6.95142508]
[131.90887451 12.43204975]
[117.43470001 16.42154503]
[102.62279510 18.87619591]
[103.51560974 33.84960175]
[104.40843201 48.82300949]
[105.30124664 63.79641342]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[108.66981506 139.16117859]
[109.11642456 154.15452576]
[124.11694336 154.41645813]
[139.08836365 155.38647461]
[153.99726868 157.06243896]
[168.81039429 159.44059753]
[183.49468994 162.51565552]
[198.01737976 166.28073120]
[212.34605408 170.72743225]
[226.44876099 175.84584045]
[240.29402161 181.62452698]
[253.85092163 188.05059814]
[267.08923340 195.10972595]
[279.97943115 202.78613281]
[292.49270630 211.06272888]
[304.60119629 219.92102051]
[316.27783203 229.34123230]
[327.49655151 239.30236816]
[338.23236084 249.78219604]
[348.46130371 260.75732422]
[358.16052246 272.20324707]
[367.30841064 284.09445190]
[375.88452148 296.40438843]
[383.86972046 309.10559082]
[391.24621582 322.16973877]
[397.99755859 335.56762695]
[404.10861206 349.26943970]
[409.56582642 363.24453735]
[414.35696411 377.46173096]
[418.47137451 391.88934326]
[421.89984131 406.49517822]
[424.63473511 421.24661255]
[426.66992188 436.11071777]
[428.00091553 451.05438232]
[428.62472534 466.04421997]
[428.53994751 481.04678345]
[427.74676514 496.02862549]
[426.24697876 510.95626831]
[424.04388428 525.79644775]
[421.14245605 540.51599121]
[417.54910278 555.08215332]
[413.27191162 569.46234131]
[408.32040405 583.62451172]
[402.70559692 597.53704834]
[396.44006348 611.16888428]
[389.53775024 624.48962402]
[382.01406860 637.46954346]
[373.88580322 650.07971191]
[365.17111206 662.29193115]
[355.88943481 674.07897949]
[346.06146240 685.41455078]
[335.70913696 696.27337646]
[324.85556030 706.63116455]
[313.52496338 716.46490479]
[301.74261475 725.75250244]
[289.53479004 734.47338867]
[276.92874146 742.60803223]
[263.95263672 750.13830566]
[250.63537598 757.04730225]
[237.00669861 763.31976318]
[223.09701538 768.94158936]
[208.93736267 773.90026855]
[194.55934143 778.18475342]
[179.99502563 781.78546143]
[165.27691650 784.69433594]
[150.43786621 786.90490723]
[135.51097107 788.41229248]
[120.52954102 789.21307373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 144]
[66 143]
[67 142]
[68 141]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
