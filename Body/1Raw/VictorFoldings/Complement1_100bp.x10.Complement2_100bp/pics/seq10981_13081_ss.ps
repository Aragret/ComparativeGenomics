%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[82.07798767 983.81170654]
[67.09840393 982.99218750]
[52.16323853 981.57775879]
[37.29611969 979.57067871]
[22.52054787 976.97412109]
[7.85988665 973.79217529]
[-6.66268063 970.02990723]
[-21.02419090 965.69323730]
[-35.20193481 960.78900146]
[-49.17349625 955.32501221]
[-62.91678238 949.30987549]
[-76.41006470 942.75311279]
[-89.63200378 935.66510010]
[-102.56169128 928.05706787]
[-115.17868805 919.94097900]
[-127.46304321 911.32965088]
[-139.39532471 902.23681641]
[-150.95668030 892.67675781]
[-162.12881470 882.66461182]
[-172.89407349 872.21618652]
[-183.23542786 861.34808350]
[-193.13652039 850.07739258]
[-202.58171082 838.42199707]
[-211.55604553 826.40032959]
[-220.04536438 814.03137207]
[-228.03620911 801.33465576]
[-235.51596069 788.33032227]
[-242.47279358 775.03887939]
[-248.89569092 761.48138428]
[-254.77452087 747.67926025]
[-260.09997559 733.65429688]
[-264.86364746 719.42871094]
[-269.05798340 705.02496338]
[-272.67636108 690.46588135]
[-275.71307373 675.77447510]
[-278.16329956 660.97393799]
[-280.02316284 646.08770752]
[-281.28970337 631.13922119]
[-281.96096802 616.15228271]
[-282.03588867 601.15051270]
[-281.51431274 586.15759277]
[-280.39709473 571.19726562]
[-278.68597412 556.29315186]
[-276.38366699 541.46887207]
[-273.49383545 526.74786377]
[-270.02102661 512.15338135]
[-265.97073364 497.70846558]
[-261.34936523 483.43603516]
[-256.16421509 469.35861206]
[-250.42352295 455.49844360]
[-244.13632202 441.87747192]
[-237.31256104 428.51724243]
[-229.96304321 415.43884277]
[-222.09939575 402.66299438]
[-213.73402405 390.20986938]
[-204.88018799 378.09915161]
[-195.55186462 366.35003662]
[-185.76380920 354.98104858]
[-175.53149414 344.01019287]
[-164.87112427 333.45483398]
[-153.79951477 323.33160400]
[-142.33421326 313.65658569]
[-130.49331665 304.44500732]
[-118.29557800 295.71145630]
[-105.76025391 287.46978760]
[-92.90718842 279.73297119]
[-79.75669098 272.51327515]
[-66.32955933 265.82208252]
[-52.64702225 259.67001343]
[-38.73072052 254.06678772]
[-24.60265732 249.02125549]
[-10.28516960 244.54138184]
[4.19910240 240.63427734]
[18.82725716 237.30609131]
[33.57616425 234.56210327]
[48.42250061 232.40666199]
[63.34279251 230.84315491]
[78.31344604 229.87406921]
[93.31079865 229.50093079]
[93.53412628 214.50259399]
[93.75745392 199.50425720]
[93.75745392 184.50425720]
[93.53412628 169.50592041]
[93.31079865 154.50758362]
[93.08747101 139.50924683]
[92.86414337 124.51090240]
[92.64081573 109.51256561]
[92.19420624 94.51921844]
[91.52442169 79.53417969]
[81.25694275 64.24822235]
[89.94551086 49.00107193]
[81.40052795 35.68590164]
[88.36656952 22.52066040]
[87.47375488 7.54725504]
[86.58094025 -7.42615080]
[72.04634094 -11.72978973]
[59.86206436 -20.74750710]
[51.49942017 -33.39036942]
[47.96823883 -48.13169098]
[49.69492340 -63.19138336]
[56.47097397 -76.75091553]
[67.47814178 -87.17291260]
[81.38726807 -93.19886017]
[96.51875305 -94.10110474]
[111.04539490 -89.77069092]
[123.21302795 -80.73052979]
[131.55235291 -68.07228088]
[135.05636597 -53.32447433]
[133.30194092 -38.26799011]
[126.50090790 -24.72096634]
[115.47454834 -14.31927299]
[101.55434418 -8.31896687]
[102.44715881 6.65443897]
[103.33997345 21.62784576]
[111.82109833 33.87202072]
[104.91891479 48.10825729]
[113.75524902 56.36935806]
[114.62161255 68.83663940]
[106.50946045 78.86439514]
[107.17924500 93.84943390]
[110.14834595 98.17359924]
[110.48334503 103.85348511]
[107.63915253 109.28923798]
[107.86248016 124.28757477]
[108.08580780 139.28591919]
[108.30913544 154.28425598]
[108.53246307 169.28259277]
[108.75579071 184.28092957]
[111.81296539 190.14311218]
[111.49799347 195.81741333]
[108.75579071 199.72758484]
[108.53246307 214.72592163]
[108.30913544 229.72425842]
[123.28871918 230.54376221]
[138.22389221 231.95814514]
[153.09101868 233.96519470]
[167.86659241 236.56172180]
[182.52726746 239.74360657]
[197.04983521 243.50584412]
[211.41136169 247.84248352]
[225.58911133 252.74664307]
[239.56069946 258.21060181]
[253.30400085 264.22567749]
[266.79730225 270.78240967]
[280.01925659 277.87039185]
[292.94897461 285.47842407]
[305.56597900 293.59448242]
[317.85034180 302.20574951]
[329.78265381 311.29858398]
[341.34405518 320.85861206]
[352.51620483 330.87072754]
[363.28149414 341.31909180]
[373.62286377 352.18719482]
[383.52398682 363.45782471]
[392.96920776 375.11318970]
[401.94360352 387.13485718]
[410.43292236 399.50381470]
[418.42379761 412.20046997]
[425.90359497 425.20480347]
[432.86044312 438.49621582]
[439.28341675 452.05371094]
[445.16226196 465.85583496]
[450.48776245 479.88076782]
[455.25146484 494.10632324]
[459.44583130 508.51004028]
[463.06427002 523.06909180]
[466.10101318 537.76055908]
[468.55126953 552.56109619]
[470.41116333 567.44732666]
[471.67776489 582.39575195]
[472.34906006 597.38269043]
[472.42401123 612.38452148]
[471.90249634 627.37744141]
[470.78530884 642.33776855]
[469.07421875 657.24188232]
[466.77197266 672.06616211]
[463.88217163 686.78717041]
[460.40939331 701.38165283]
[456.35913086 715.82659912]
[451.73782349 730.09899902]
[446.55270386 744.17645264]
[440.81204224 758.03662109]
[434.52487183 771.65765381]
[427.70114136 785.01788330]
[420.35165405 798.09631348]
[412.48803711 810.87219238]
[404.12271118 823.32531738]
[395.26889038 835.43603516]
[385.94061279 847.18518066]
[376.15258789 858.55419922]
[365.92031860 869.52508545]
[355.25994873 880.08050537]
[344.18838501 890.20373535]
[332.72311401 899.87878418]
[320.88223267 909.09039307]
[308.68450928 917.82397461]
[296.14920044 926.06567383]
[283.29617310 933.80255127]
[270.14569092 941.02227783]
[256.71856689 947.71350098]
[243.03605652 953.86560059]
[229.11976624 959.46887207]
[214.99171448 964.51440430]
[200.67424011 968.99432373]
[186.18997192 972.90148926]
[171.56182861 976.22967529]
[156.81292725 978.97375488]
[141.96659851 981.12921143]
[127.04631805 982.69274902]
[112.07566071 983.66186523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 133]
[80 132]
[81 131]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 120]
[89 119]
[91 116]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
