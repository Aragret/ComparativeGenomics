%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[75.11319733 891.95129395]
[60.11406708 892.39331055]
[45.11890793 891.83251953]
[30.19469261 890.27142334]
[15.40807724 887.71697998]
[0.82510048 884.18054199]
[-13.48910427 879.67803955]
[-27.47060585 874.22943115]
[-41.05696106 867.85919189]
[-54.18748474 860.59570312]
[-66.80353546 852.47137451]
[-78.84877014 843.52252197]
[-90.26937866 833.78912354]
[-101.01437378 823.31469727]
[-111.03574371 812.14593506]
[-120.28874969 800.33276367]
[-128.73204041 787.92791748]
[-136.32794189 774.98681641]
[-143.04249573 761.56726074]
[-148.84571838 747.72924805]
[-153.71171570 733.53442383]
[-157.61872864 719.04638672]
[-160.54931641 704.32965088]
[-162.49038696 689.45013428]
[-163.43327332 674.47412109]
[-163.37376404 659.46862793]
[-162.31211853 644.50054932]
[-160.25309753 629.63684082]
[-157.20587158 614.94384766]
[-153.18408203 600.48724365]
[-148.20565796 586.33148193]
[-142.29286194 572.53991699]
[-135.47207642 559.17407227]
[-127.77378082 546.29364014]
[-119.23236084 533.95617676]
[-109.88595581 522.21673584]
[-99.77631378 511.12780762]
[-88.94858551 500.73889160]
[-77.45112610 491.09637451]
[-65.33529663 482.24337769]
[-52.65520859 474.21936035]
[-39.46748734 467.06024170]
[-25.83103561 460.79791260]
[-11.80675793 455.46041870]
[2.54270768 451.07156372]
[17.15327454 447.65093994]
[31.95968628 445.21383667]
[46.89581299 443.77114868]
[61.89494705 443.32931519]
[76.89009857 443.89028931]
[78.45062256 428.97167969]
[80.01114655 414.05307007]
[81.57167053 399.13449097]
[83.13219452 384.21588135]
[84.69271088 369.29727173]
[86.25323486 354.37866211]
[87.81375885 339.46005249]
[89.37428284 324.54144287]
[90.60125732 309.59173584]
[91.49407196 294.61831665]
[92.38689423 279.64489746]
[93.27970886 264.67150879]
[94.17252350 249.69810486]
[95.06533813 234.72468567]
[95.28866577 219.72634888]
[94.84205627 204.73300171]
[94.39545441 189.73965454]
[93.94884491 174.74630737]
[93.50224304 159.75296021]
[90.16098785 153.16070557]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[84.86257172 105.93611145]
[84.77587128 94.28992462]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[92.27667236 55.57498550]
[91.83006287 40.58163452]
[91.38346100 25.58828354]
[90.93685150 10.59493351]
[90.49024963 -4.39841604]
[77.84598541 -10.38051319]
[69.05465698 -21.17535973]
[65.78770447 -34.64032364]
[68.62727356 -48.13424683]
[76.96343231 -59.03549576]
[89.12406158 -65.25128937]
[88.90073395 -80.24962616]
[88.67740631 -95.24796295]
[88.45407867 -110.24629974]
[88.23075104 -125.24463654]
[87.78414917 -140.23799133]
[87.11436462 -155.22302246]
[86.44458008 -170.20806885]
[85.77479553 -185.19309998]
[71.38191223 -190.01071167]
[59.70376205 -199.70530701]
[52.31972504 -212.96578979]
[50.22842789 -227.99879456]
[53.71270370 -242.77120972]
[62.30133057 -255.28518677]
[74.83276367 -263.84832764]
[89.61224365 -267.30255127]
[104.64095306 -265.18066406]
[117.88638306 -257.76968384]
[127.55720520 -246.07182312]
[132.34552002 -231.66917419]
[131.60372925 -216.50955200]
[125.43218231 -202.64317322]
[114.66551971 -191.94535828]
[100.75983429 -185.86288452]
[101.42961884 -170.87785339]
[102.09940338 -155.89280701]
[102.76918793 -140.90777588]
[105.62659454 -137.08099365]
[106.11037445 -131.41857910]
[103.22909546 -125.46796417]
[103.45242310 -110.46962738]
[103.67575073 -95.47129059]
[103.89907837 -80.47295380]
[104.12240601 -65.47461700]
[118.42340088 -57.95171738]
[127.02870178 -44.16387558]
[127.50926971 -27.82416916]
[119.63927460 -13.38953018]
[105.48359680 -4.84502172]
[105.93020630 10.14832783]
[106.37680817 25.14167786]
[106.82341766 40.13502884]
[107.27001953 55.12837601]
[110.07013702 58.99728012]
[110.46956635 64.66627502]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[116.25928497 99.87895203]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[108.49559021 159.30635071]
[108.94219971 174.29969788]
[109.38880157 189.29304504]
[109.83541107 204.28639221]
[110.28201294 219.27975464]
[121.32960510 209.13328552]
[136.32128906 209.63267517]
[146.66915894 220.49185181]
[146.44546509 235.49018860]
[135.77836609 246.03594971]
[120.77845764 246.08804321]
[110.03874207 235.61750793]
[109.14592743 250.59091187]
[108.25311279 265.56433105]
[107.36029816 280.53771973]
[106.46748352 295.51113892]
[105.57466125 310.48452759]
[107.91248322 315.15161133]
[108.19779205 319.78540039]
[106.78697968 323.60961914]
[104.29288483 326.10198975]
[102.73236847 341.02056885]
[101.17184448 355.93917847]
[99.61132050 370.85778809]
[98.05079651 385.77639771]
[96.49027252 400.69500732]
[94.92974854 415.61361694]
[93.36922455 430.53222656]
[91.80870056 445.45080566]
[106.59535217 448.00509644]
[121.17837524 451.54129028]
[135.49263000 456.04364014]
[149.47419739 461.49203491]
[163.06063843 467.86212158]
[176.19125366 475.12548828]
[188.80740356 483.24963379]
[200.85275269 492.19833374]
[212.27348328 501.93154907]
[223.01861572 512.40588379]
[233.04013062 523.57452393]
[242.29327393 535.38757324]
[250.73672485 547.79235840]
[258.33279419 560.73333740]
[265.04751587 574.15277100]
[270.85092163 587.99078369]
[275.71707153 602.18548584]
[279.62426758 616.67352295]
[282.55505371 631.39013672]
[284.49630737 646.26971436]
[285.43939209 661.24566650]
[285.38006592 676.25122070]
[284.31860352 691.21923828]
[282.25976562 706.08294678]
[279.21273804 720.77600098]
[275.19113159 735.23266602]
[270.21289062 749.38848877]
[264.30026245 763.18011475]
[257.47964478 776.54608154]
[249.78150940 789.42663574]
[241.24023438 801.76422119]
[231.89398193 813.50372314]
[221.78446960 824.59277344]
[210.95687866 834.98187256]
[199.45954895 844.62451172]
[187.34382629 853.47766113]
[174.66383362 861.50183105]
[161.47619629 868.66113281]
[147.83982849 874.92358398]
[133.81562805 880.26129150]
[119.46620941 884.65032959]
[104.85569000 888.07110596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[71 139]
[72 138]
[73 137]
[76 135]
[77 134]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
