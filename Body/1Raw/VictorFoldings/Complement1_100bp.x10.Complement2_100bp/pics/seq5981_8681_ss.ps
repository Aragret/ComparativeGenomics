%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[-31.23392296 362.56515503]
[-23.48856735 375.44409180]
[-17.74932289 389.33361816]
[-14.14440536 403.92343140]
[-12.75435066 418.88754272]
[-13.61021137 433.89172363]
[-16.69286919 448.60073853]
[-21.93345451 462.68597412]
[-29.21489143 475.83276367]
[-38.37451172 487.74743652]
[-49.20768356 498.16375732]
[-61.47239304 506.84906006]
[-74.89463806 513.60931396]
[-89.17456055 518.29351807]
[-103.99314880 520.79693604]
[-119.01934052 521.06372070]
[-133.91744995 519.08782959]
[-148.35464478 514.91351318]
[-162.00840759 508.63400269]
[-174.57368469 500.38952637]
[-185.76977539 490.36428833]
[-195.34655762 478.78228760]
[-203.09007263 465.90225220]
[-208.82734680 452.01190186]
[-212.43019104 437.42160034]
[-213.81811523 422.45724487]
[-212.96011353 407.45321655]
[-209.87535095 392.74462891]
[-204.63276672 378.66015625]
[-197.34945679 365.51437378]
[-188.18814087 353.60104370]
[-177.35348511 343.18624878]
[-165.08753967 334.50268555]
[-151.66433716 327.74435425]
[-137.38374329 323.06219482]
[-122.56479645 320.56088257]
[-107.53856659 320.29623413]
[-92.64073944 322.27420044]
[-78.20413208 326.45059204]
[-64.55127716 332.73208618]
[-56.32246780 320.19067383]
[-48.09365845 307.64926147]
[-52.45259476 295.52371216]
[-48.97990799 282.91329956]
[-38.72741699 274.48141479]
[-25.29572105 273.47933960]
[-16.88110352 261.06185913]
[-8.46648502 248.64434814]
[-0.05186607 236.22686768]
[8.36275291 223.80937195]
[16.77737045 211.39187622]
[25.19198990 198.97438049]
[21.31571770 182.60937500]
[30.65866852 168.22103882]
[47.84901428 164.97891235]
[56.07781982 152.43751526]
[64.30662537 139.89611816]
[72.53543854 127.35471344]
[80.76424408 114.81331635]
[80.68766022 110.03804779]
[83.61005402 105.16397095]
[89.42942810 102.02606201]
[95.09220886 88.13603210]
[97.53794098 73.33676147]
[95.84963226 64.35971069]
[100.13182831 58.33604431]
[102.79762268 43.57482529]
[105.46341705 28.81360817]
[108.12921143 14.05239105]
[101.42949677 3.03074622]
[103.95373535 -9.20902443]
[113.81454468 -16.21552467]
[116.69981384 -30.93541527]
[111.76148224 -45.96616745]
[121.80240631 -56.96748734]
[124.68768311 -71.68737793]
[108.85283661 -78.71508789]
[95.13114929 -89.27825928]
[84.29634857 -102.77666473]
[76.95833588 -118.44471741]
[73.52878571 -135.39485168]
[74.19808197 -152.66783142]
[78.92476654 -169.28701782]
[87.43805695 -184.31358337]
[99.25338745 -196.89956665]
[113.69995117 -206.33572388]
[129.95883179 -212.09146118]
[147.10937500 -213.84471130]
[148.89184570 -228.73843384]
[150.67431641 -243.63215637]
[152.45677185 -258.52587891]
[154.23924255 -273.41958618]
[156.02171326 -288.31329346]
[141.66621399 -292.81158447]
[128.38182068 -299.87130737]
[116.62099457 -309.25198364]
[106.78429413 -320.63418579]
[99.20675659 -333.63015747]
[94.14646912 -347.79730225]
[91.77578735 -362.65310669]
[92.17545319 -377.69155884]
[95.33185577 -392.40045166]
[101.13748932 -406.27880859]
[109.39460754 -418.85397339]
[119.82199097 -429.69760132]
[132.06448364 -438.44039917]
[145.70509338 -444.78454590]
[160.27925110 -448.51397705]
[175.29054260 -449.50167847]
[190.22770691 -447.71401978]
[204.58198547 -443.21188354]
[217.86447144 -436.14855957]
[229.62277222 -426.76470947]
[239.45640564 -415.37988281]
[247.03044128 -402.38186646]
[252.08691406 -388.21334839]
[254.45359802 -373.35690308]
[254.04986572 -358.31857300]
[250.88951111 -343.61053467]
[245.08013916 -329.73370361]
[236.81962585 -317.16076660]
[226.38931274 -306.31994629]
[214.14447021 -297.58047485]
[200.50215149 -291.24002075]
[185.92698669 -287.51449585]
[170.91542053 -286.53082275]
[169.13296509 -271.63711548]
[167.35049438 -256.74340820]
[165.56802368 -241.84968567]
[163.78556824 -226.95596313]
[162.00309753 -212.06225586]
[174.20971680 -208.15870667]
[185.54174805 -202.16476440]
[195.64437866 -194.26652527]
[204.20100403 -184.70970154]
[210.94314575 -173.79202271]
[215.65887451 -161.85397339]
[218.19949341 -149.26811218]
[218.48420715 -136.42750549]
[216.50271606 -123.73345184]
[212.31553650 -111.58288574]
[206.05220032 -100.35600281]
[197.90719604 -90.40438080]
[188.13400269 -82.03993225]
[177.03713989 -75.52514648]
[164.96269226 -71.06484985]
[152.28755188 -68.79977417]
[139.40757751 -68.80210876]
[136.52230835 -54.08221817]
[141.66700745 -40.10433197]
[131.41970825 -28.05014420]
[128.53443909 -13.33025169]
[135.10807800 2.94101405]
[122.89042664 16.71818733]
[120.22463226 31.47940445]
[117.55883789 46.24061966]
[114.89304352 61.00183868]
[112.33721161 75.78249359]
[109.89147949 90.58176422]
[118.65457916 78.40768433]
[129.59675598 68.14762115]
[142.30891418 60.18515015]
[156.31581116 54.81795120]
[171.09378052 52.24668121]
[186.09034729 52.56747055]
[200.74485779 55.76832581]
[214.50942993 61.72958374]
[226.86946106 70.22837067]
[237.36288452 80.94696045]
[245.59738159 93.48463440]
[251.26509094 107.37265015]
[254.15414429 122.09179688]
[254.15650940 137.09179688]
[251.27210999 151.81185913]
[245.60876465 165.70166016]
[237.37823486 178.24192810]
[226.88819885 188.96383667]
[214.53083801 197.46652222]
[200.76815796 203.43211365]
[186.11465454 206.63760376]
[171.11819458 206.96311951]
[156.33940125 204.39651489]
[142.33081055 199.03373718]
[129.61613464 191.07527161]
[118.67073822 180.81864929]
[109.90379333 168.64733887]
[103.64308167 155.01637268]
[100.12265778 140.43533325]
[99.47413635 125.44936371]
[101.72026062 110.62462616]
[93.30564117 123.04212189]
[85.07683563 135.58352661]
[76.84803009 148.12492371]
[68.61921692 160.66632080]
[60.39041138 173.20771790]
[64.62852478 185.99259949]
[60.78556442 198.69859314]
[50.47896957 206.75192261]
[37.60948563 207.38899231]
[29.19486618 219.80648804]
[20.78024864 232.22398376]
[12.36562920 244.64147949]
[3.95101094 257.05895996]
[-4.46360779 269.47647095]
[-12.87822628 281.89395142]
[-9.26323605 299.00979614]
[-18.95460129 313.16577148]
[-35.55225754 315.87808228]
[-43.78106689 328.41949463]
[-52.00987244 340.96087646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 210]
[41 209]
[42 208]
[46 205]
[47 204]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[55 195]
[56 194]
[57 193]
[58 192]
[59 191]
[62 190]
[63 159]
[64 158]
[66 157]
[67 156]
[68 155]
[69 154]
[72 152]
[73 151]
[75 149]
[76 148]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
