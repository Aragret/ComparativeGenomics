%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[190.54222107 792.13525391]
[176.42195129 787.06524658]
[162.56100464 781.32409668]
[148.99127197 774.92492676]
[135.74394226 767.88256836]
[122.84948730 760.21313477]
[110.33757019 751.93432617]
[98.23697662 743.06512451]
[86.57553101 733.62597656]
[75.38005829 723.63854980]
[64.67630005 713.12585449]
[54.48888779 702.11206055]
[44.84124374 690.62255859]
[35.75556183 678.68365479]
[27.25273514 666.32287598]
[19.35232544 653.56860352]
[12.07250118 640.45025635]
[5.43000746 626.99798584]
[-0.55987811 613.24267578]
[-5.88337851 599.21600342]
[-10.52824879 584.95025635]
[-14.48380661 570.47821045]
[-17.74095345 555.83312988]
[-20.29219818 541.04876709]
[-22.13167381 526.15905762]
[-23.25514603 511.19827271]
[-23.66003418 496.20083618]
[-23.34540558 481.20123291]
[-22.31198502 466.23397827]
[-20.56214714 451.33349609]
[-18.09991837 436.53399658]
[-14.93096256 421.86959839]
[-11.06256676 407.37402344]
[-6.50362968 393.08056641]
[-1.26463604 379.02209473]
[4.64236355 365.23101807]
[11.20378304 351.73898315]
[18.40453148 338.57705688]
[26.22804451 325.77551270]
[34.65633011 313.36380005]
[43.67000580 301.37045288]
[53.24833298 289.82302856]
[63.36928177 278.74813843]
[74.00958252 268.17123413]
[85.14475250 258.11663818]
[96.74918365 248.60748291]
[108.79618073 239.66563416]
[121.25804901 231.31166077]
[134.10610962 223.56478882]
[147.31082153 216.44281006]
[140.83132935 202.91445923]
[134.35183716 189.38612366]
[127.87233734 175.85777283]
[121.39283752 162.32942200]
[114.91334534 148.80108643]
[108.43384552 135.27273560]
[95.95790100 127.13639069]
[96.97488403 111.34790802]
[95.41368103 126.26644135]
[87.99022675 139.30072021]
[75.95549774 148.25422668]
[61.33756256 151.61814880]
[46.59980011 148.82560730]
[34.22577667 140.34718323]
[26.30073738 127.61165619]
[24.16019058 112.76516724]
[28.16485405 98.30963135]
[37.63986969 86.68103790]
[50.98853683 79.83902740]
[65.96136475 78.93659210]
[80.03517151 84.12580872]
[90.83921051 94.53356934]
[79.89260101 83.11067963]
[84.19620514 68.85136414]
[80.43990326 54.32930374]
[76.68360138 39.80724335]
[65.73699188 28.38435745]
[70.04059601 14.12503529]
[66.28430176 -0.39702398]
[62.52799988 -14.91908360]
[58.77169800 -29.44114304]
[43.75506210 -28.49396706]
[28.83057594 -30.40609169]
[14.53775120 -35.10839462]
[1.39326358 -42.43088913]
[-10.12772083 -52.10887527]
[-19.60872650 -63.79249954]
[-26.70702171 -77.05940247]
[-31.16600609 -91.42999268]
[-32.82448959 -106.38478851]
[-31.62252045 -121.38318634]
[-27.60354996 -135.88299561]
[-20.91286087 -149.36004639]
[-11.79231548 -161.32717896]
[-0.57161707 -171.35177612]
[12.34361267 -179.07144165]
[26.48649788 -184.20713806]
[41.34577942 -186.57319641]
[56.38430405 -186.08409119]
[71.05844116 -182.75749207]
[84.83773041 -176.71368408]
[97.22405243 -168.17111206]
[107.76966095 -157.43859863]
[116.09332275 -144.90412903]
[121.89415741 -131.02079773]
[124.96246338 -116.29048920]
[125.18732452 -101.24568939]
[122.56060791 -86.43026733]
[117.17726898 -72.37978363]
[109.23191833 -59.60214996]
[99.01176453 -48.55927658]
[86.88626862 -39.65036011]
[73.29375458 -33.19744492]
[77.05005646 -18.67538452]
[80.80635834 -4.15332460]
[84.56266022 10.36873436]
[95.24059296 20.75290680]
[91.20566559 36.05094147]
[94.96195984 50.57300186]
[98.71826172 65.09506226]
[109.39619446 75.47923279]
[105.36126709 90.77726746]
[110.50322723 104.86840820]
[123.44262695 113.97238922]
[121.96218872 128.79324341]
[128.44168091 142.32157898]
[134.92118835 155.84992981]
[141.40068054 169.37828064]
[147.88017273 182.90661621]
[154.35966492 196.43496704]
[160.83917236 209.96331787]
[174.66525269 204.13868713]
[188.75469971 198.98367310]
[203.07510376 194.51008606]
[217.59353638 190.72824097]
[232.27658081 187.64682007]
[247.09046936 185.27293396]
[262.00115967 183.61203003]
[276.97430420 182.66790771]
[291.97552490 182.44277954]
[306.97027588 182.93713379]
[321.92407227 184.14984131]
[336.80252075 186.07810974]
[351.57144165 188.71751404]
[366.19680786 192.06198120]
[380.64501953 196.10380554]
[394.88281250 200.83370972]
[408.87747192 206.24079895]
[422.59677124 212.31263733]
[436.00921631 219.03526306]
[449.08389282 226.39321899]
[461.79077148 234.36958313]
[474.10058594 242.94599915]
[485.98507690 252.10275269]
[497.41687012 261.81875610]
[508.36968994 272.07171631]
[518.81829834 282.83798218]
[528.73876953 294.09286499]
[538.10815430 305.81039429]
[546.90502930 317.96371460]
[555.10906982 330.52478027]
[562.70141602 343.46475220]
[569.66461182 356.75387573]
[575.98266602 370.36154175]
[581.64105225 384.25650024]
[586.62677002 398.40673828]
[590.92828369 412.77978516]
[594.53570557 427.34249878]
[597.44085693 442.06146240]
[599.63690186 456.90274048]
[601.11883545 471.83227539]
[601.88336182 486.81567383]
[601.92852783 501.81851196]
[601.25439453 516.80627441]
[599.86242676 531.74444580]
[597.75585938 546.59869385]
[594.93951416 561.33489990]
[591.41992188 575.91912842]
[587.20507812 590.31781006]
[582.30480957 604.49786377]
[576.73028564 618.42663574]
[570.49432373 632.07214355]
[563.61132812 645.40301514]
[556.09710693 658.38848877]
[547.96893311 670.99877930]
[539.24548340 683.20489502]
[529.94683838 694.97869873]
[520.09442139 706.29315186]
[509.71087646 717.12219238]
[498.82006836 727.44097900]
[487.44702148 737.22570801]
[475.61795044 746.45391846]
[463.36004639 755.10437012]
[450.70147705 763.15716553]
[437.67138672 770.59381104]
[424.29971313 777.39715576]
[410.61724854 783.55157471]
[396.65542603 789.04290771]
[382.44638062 793.85852051]
[368.02282715 797.98736572]
[353.41787720 801.41992188]
[338.66513062 804.14831543]
[323.79858398 806.16619873]
[308.85235596 807.46899414]
[293.86083984 808.05371094]
[278.85855103 807.91900635]
[263.87997437 807.06518555]
[248.95956421 805.49414062]
[234.13162231 803.20959473]
[219.43026733 800.21673584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 131]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[56 125]
[58 123]
[72 122]
[74 120]
[75 119]
[76 118]
[78 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
