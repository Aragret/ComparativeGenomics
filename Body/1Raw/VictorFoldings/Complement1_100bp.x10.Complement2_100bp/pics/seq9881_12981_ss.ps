%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[68.46798706 698.12170410]
[57.21889496 708.09997559]
[44.44518280 716.03350830]
[30.51437759 721.69390869]
[15.82729721 724.91845703]
[0.80651867 725.61431885]
[-14.11577988 723.76147461]
[-28.51025581 719.41326904]
[-41.96274948 712.69476318]
[-54.08620834 703.79925537]
[-64.53181458 692.98272705]
[-72.99902344 680.55639648]
[-79.24422455 666.87774658]
[-83.08772278 652.34033203]
[-84.41893768 637.36248779]
[-83.19956970 622.37512207]
[-79.46469879 607.80944824]
[-73.32178497 594.08459473]
[-64.94757843 581.59533691]
[-54.58300781 570.70117188]
[-42.52629471 561.71539307]
[-29.12432861 554.89666748]
[-14.76271439 550.44110107]
[0.14533736 548.47692871]
[15.17089176 549.06060791]
[18.27500153 534.38531494]
[21.37911224 519.71002197]
[24.48322296 505.03472900]
[16.16870117 492.73007202]
[19.10765457 477.80300903]
[32.07027435 469.16540527]
[35.17438507 454.49011230]
[37.84017944 439.72888184]
[40.06529999 424.89483643]
[42.29041672 410.06079102]
[36.52669525 396.32656860]
[46.22552872 383.82684326]
[39.29002762 373.91598511]
[41.02240753 361.53927612]
[51.03411102 353.40731812]
[53.47983551 338.60806274]
[55.92556381 323.80877686]
[58.37129211 309.00952148]
[49.51563263 297.08840942]
[51.78512573 282.04498291]
[64.34912872 272.83718872]
[66.79485321 258.03793335]
[64.78401947 250.92607117]
[69.38874054 243.03720093]
[72.05453491 228.27598572]
[74.72032928 213.51477051]
[77.38613129 198.75355530]
[62.68572998 188.90397644]
[53.74956512 173.56971741]
[52.41899109 155.81845093]
[59.00846481 139.22486877]
[72.23281860 127.15094757]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[90.87727356 47.90988541]
[100.07214355 36.19222641]
[101.85461426 21.29850960]
[103.63707733 6.40479136]
[105.41954803 -8.48892593]
[106.31236267 -23.46233177]
[106.31236267 -38.46232986]
[98.57505798 -52.26250458]
[106.31236267 -64.98977661]
[106.31236267 -79.98977661]
[106.31236267 -94.98977661]
[106.31236267 -109.98977661]
[106.20069122 -124.98935699]
[105.97736359 -139.98770142]
[105.75403595 -154.98603821]
[105.53070831 -169.98437500]
[105.08410645 -184.97772217]
[104.41432190 -199.96276855]
[103.74453735 -214.94779968]
[94.77009583 -224.21183777]
[94.52072906 -236.70669556]
[102.58480835 -245.72319031]
[102.13819885 -260.71655273]
[98.75466919 -269.20120239]
[101.79824066 -275.93606567]
[101.57491302 -290.93441772]
[93.63300323 -304.61785889]
[101.17995453 -317.45892334]
[86.39093781 -320.26422119]
[72.46948242 -325.98944092]
[59.98566818 -334.40008545]
[49.45070267 -345.15182495]
[41.29598236 -357.80429077]
[35.85543823 -371.83944702]
[33.35186005 -386.68252563]
[33.88776398 -401.72570801]
[37.44120789 -416.35302734]
[43.86668015 -429.96545410]
[52.90106201 -442.00558472]
[64.17440033 -451.98037720]
[77.22505951 -459.48141479]
[91.51861572 -464.20147705]
[106.46977234 -465.94729614]
[121.46627808 -464.64739990]
[135.89402771 -460.35501099]
[149.16223145 -453.24588013]
[160.72756958 -443.61114502]
[170.11642456 -431.84533691]
[176.94433594 -418.43023682]
[180.93171692 -403.91522217]
[181.91526794 -388.89465332]
[179.85473633 -373.98361206]
[174.83448792 -359.79272461]
[167.06008911 -346.90304565]
[156.84991455 -335.84240723]
[144.62205505 -327.06378174]
[130.87722778 -320.92663574]
[116.17829132 -317.68225098]
[124.10422516 -305.07159424]
[116.57324982 -291.15774536]
[116.79657745 -276.15939331]
[117.13155365 -261.16314697]
[117.57815552 -246.16979980]
[127.59236145 -231.75860596]
[118.72957611 -215.61758423]
[119.39936066 -200.63255310]
[120.06914520 -185.64750671]
[122.92655182 -181.82072449]
[123.41033173 -176.15830994]
[120.52904510 -170.20770264]
[120.75237274 -155.20936584]
[120.97570038 -140.21102905]
[121.19902802 -125.21268463]
[124.44177246 -118.57141876]
[121.31236267 -109.98977661]
[121.31236267 -94.98977661]
[121.31236267 -79.98977661]
[121.31236267 -64.98977661]
[129.04966736 -52.26250458]
[121.31236267 -38.46232986]
[121.31236267 -23.46233177]
[131.18739319 -34.75319672]
[145.78704834 -38.19564438]
[159.66598511 -32.50573730]
[167.64772034 -19.80566025]
[166.75524902 -4.83223295]
[157.32147217 6.82982731]
[142.86491394 10.83086014]
[128.77754211 5.67858028]
[120.31326294 -6.70646000]
[118.53079224 8.18725777]
[116.74832916 23.08097458]
[114.96586609 37.97469330]
[121.13594818 51.53121567]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[115.32182312 129.85743713]
[123.99716187 138.72377014]
[129.52320862 149.80213928]
[131.38046265 162.01744080]
[129.40461731 174.18936157]
[123.80103302 185.14642334]
[115.12347412 193.83876038]
[104.21942902 199.43862915]
[92.14734650 201.41934204]
[89.48155212 216.18055725]
[86.81575775 230.94177246]
[84.14995575 245.70300293]
[81.59412384 260.48364258]
[79.14839935 275.28292847]
[88.08192444 288.04339600]
[85.39078522 303.01712036]
[73.17056274 311.45523071]
[70.72483826 326.25451660]
[68.27910614 341.05377197]
[65.83338165 355.85305786]
[72.71532440 372.93286133]
[61.05957031 386.05197144]
[66.66413116 400.84719849]
[57.12445831 412.28591919]
[54.89934158 427.11996460]
[52.67422485 441.95401001]
[54.40631104 445.93569946]
[54.74700928 449.86614990]
[53.88327408 453.31423950]
[52.12287903 455.95385742]
[49.84968948 457.59420776]
[46.74557877 472.26950073]
[55.10040665 485.41616821]
[51.74333954 500.25479126]
[39.15852356 508.13882446]
[36.05441284 522.81414795]
[32.95030594 537.48944092]
[29.84619331 552.16473389]
[43.82118607 557.71520996]
[56.65703964 565.54772949]
[67.98444366 575.43701172]
[77.47747803 587.09851074]
[84.86302185 600.19665527]
[89.92856598 614.35467529]
[92.52837372 629.16510010]
[92.58763885 644.20184326]
[90.10466003 659.03234863]
[85.15087128 673.22979736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 200]
[26 199]
[27 198]
[28 197]
[31 194]
[32 193]
[33 188]
[34 187]
[35 186]
[37 184]
[40 182]
[41 181]
[42 180]
[43 179]
[46 176]
[47 175]
[49 174]
[50 173]
[51 172]
[52 171]
[58 162]
[59 161]
[60 159]
[61 158]
[62 157]
[64 155]
[65 154]
[66 153]
[67 152]
[68 143]
[69 142]
[71 140]
[72 139]
[73 138]
[74 137]
[75 135]
[76 134]
[77 133]
[78 132]
[79 129]
[80 128]
[81 127]
[84 125]
[85 124]
[87 123]
[88 122]
[90 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
