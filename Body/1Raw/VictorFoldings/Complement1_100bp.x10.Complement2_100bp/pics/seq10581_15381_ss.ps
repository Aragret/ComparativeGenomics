%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[42.88408661 708.97174072]
[28.24172974 712.24700928]
[13.43500042 714.67321777]
[-1.48691463 716.24230957]
[-16.47444534 716.94915771]
[-31.47780609 716.79138184]
[-46.44715500 715.76947021]
[-61.33276749 713.88684082]
[-76.08518982 711.14971924]
[-90.65541840 707.56726074]
[-104.99505615 703.15130615]
[-119.05646515 697.91656494]
[-132.79293823 691.88043213]
[-146.15882874 685.06292725]
[-159.10975647 677.48669434]
[-171.60269165 669.17687988]
[-183.59611511 660.16119385]
[-195.05021667 650.46948242]
[-205.92694092 640.13397217]
[-216.19013977 629.18896484]
[-225.80572510 617.67089844]
[-234.74176025 605.61798096]
[-242.96856689 593.07025146]
[-250.45880127 580.06939697]
[-257.18759155 566.65863037]
[-263.13256836 552.88244629]
[-268.27401733 538.78668213]
[-272.59481812 524.41809082]
[-276.08065796 509.82443237]
[-278.71990967 495.05416870]
[-280.50384521 480.15643311]
[-281.42654419 465.18063354]
[-281.48489380 450.17654419]
[-280.67874146 435.19403076]
[-279.01077271 420.28283691]
[-276.48648071 405.49252319]
[-273.11428833 390.87219238]
[-268.90539551 376.47042847]
[-263.87377930 362.33505249]
[-258.03613281 348.51306152]
[-251.41189575 335.05032349]
[-244.02302551 321.99160767]
[-235.89408875 309.38024902]
[-227.05209351 297.25817871]
[-217.52639771 285.66564941]
[-207.34864807 274.64114380]
[-196.55267334 264.22134399]
[-185.17431641 254.44081116]
[-173.25138855 245.33206177]
[-160.82347107 236.92535400]
[-147.93188477 229.24859619]
[-134.61943054 222.32730103]
[-120.93033600 216.18446350]
[-106.91007996 210.84049988]
[-92.60522461 206.31312561]
[-78.06330872 202.61741638]
[-63.33262253 199.76564026]
[-48.46210861 197.76725769]
[-33.50116348 196.62892151]
[-18.49948502 196.35441589]
[-3.50690794 196.94462585]
[11.42676258 198.39762878]
[26.25191879 200.70857239]
[40.91931152 203.86978149]
[55.38022232 207.87075806]
[60.20621872 193.66830444]
[65.03221893 179.46585083]
[61.80109024 164.92593384]
[73.56697845 154.34886169]
[66.77354431 141.14337158]
[71.46546936 126.67131805]
[85.36265564 119.63527679]
[90.18865967 105.43282318]
[76.77253723 112.14160156]
[62.15417099 108.77954865]
[53.01688004 96.88375854]
[53.53810883 81.89281464]
[63.47956085 70.66038513]
[78.29613495 68.32177734]
[91.21389771 75.94617462]
[96.32701874 90.04965973]
[102.60438538 76.42634583]
[108.88174438 62.80302811]
[115.15910339 49.17971420]
[121.43646240 35.55639648]
[127.71382904 21.93308067]
[133.99118042 8.30976391]
[137.09529114 -6.36553812]
[136.87196350 -21.36387634]
[136.64863586 -36.36221313]
[123.87512970 -48.31447983]
[123.70137787 -65.46920776]
[135.74652100 -77.20603943]
[135.29991150 -92.19938660]
[127.15516663 -105.76307678]
[134.51010132 -118.71507263]
[134.06349182 -133.70841980]
[119.84030151 -139.07212830]
[108.75580597 -149.47416687]
[102.50031281 -163.32830811]
[102.02774048 -178.52189636]
[107.41014099 -192.73802185]
[117.82675934 -203.80882263]
[131.68911743 -210.04608154]
[146.88331604 -210.49867249]
[161.09234619 -205.09756470]
[172.14942932 -194.66639709]
[178.36845398 -180.79585266]
[178.80105591 -165.60107422]
[173.38125610 -151.39915466]
[162.93556213 -140.35580444]
[149.05683899 -134.15502930]
[149.50344849 -119.16167450]
[157.61625671 -106.67041779]
[150.29327393 -92.64599609]
[150.73986816 -77.65264130]
[161.26235962 -70.21579742]
[165.64564514 -57.89228821]
[162.07835388 -45.10617065]
[151.64697266 -36.58554077]
[151.87030029 -21.58720398]
[152.09362793 -6.58886576]
[158.55366516 -20.12651825]
[167.49822998 -32.16789246]
[178.59294128 -42.26281738]
[191.42300415 -50.03387833]
[205.50875854 -55.19055176]
[220.32362366 -57.54005432]
[235.31369019 -56.99454880]
[249.91857910 -53.57442474]
[263.59225464 -47.40754700]
[275.82354736 -38.72447205]
[286.15515137 -27.84981918]
[294.20080566 -15.19014835]
[299.65975952 -1.21874857]
[302.32788086 13.54204750]
[302.10543823 28.54039764]
[299.00073242 43.21557999]
[293.12988281 57.01894760]
[284.71234131 69.43445587]
[274.06277466 79.99793243]
[261.57937622 88.31446838]
[247.72883606 94.07313538]
[233.02894592 97.05863953]
[218.02928162 97.15937042]
[203.29061890 94.37156677]
[189.36396790 88.79943848]
[176.77000427 80.65131378]
[165.97953796 70.23181152]
[157.39599609 57.93048096]
[151.34028625 44.20720673]
[148.03877258 29.57504845]
[147.61450195 14.58712482]
[141.33714294 28.21044159]
[135.05978394 41.83375549]
[128.78242493 55.45707321]
[122.50505829 69.08039093]
[116.22769928 82.70370483]
[109.95034027 96.32701874]
[104.39111328 110.25881958]
[99.56511688 124.46127319]
[106.29851532 138.50759888]
[101.20194244 152.84216309]
[87.76943207 159.17486572]
[90.65536499 174.73063660]
[79.23467255 184.29185486]
[74.40867615 198.49430847]
[69.58267975 212.69676208]
[83.48743439 218.33444214]
[97.04429626 224.76383972]
[110.20823669 231.96359253]
[122.93551636 239.90979004]
[135.18385315 248.57604980]
[146.91256714 257.93356323]
[158.08270264 267.95123291]
[168.65713501 278.59582520]
[178.60075378 289.83193970]
[187.88050842 301.62225342]
[196.46559143 313.92761230]
[204.32748413 326.70715332]
[211.44004822 339.91839600]
[217.77967834 353.51745605]
[223.32530212 367.45919800]
[228.05851746 381.69726562]
[231.96357727 396.18435669]
[235.02751160 410.87237549]
[237.24015808 425.71252441]
[238.59414673 440.65551758]
[239.08499146 455.65167236]
[238.71105957 470.65118408]
[237.47360229 485.60427856]
[235.37672424 500.46121216]
[232.42738342 515.17266846]
[228.63537598 529.68975830]
[224.01330566 543.96429443]
[218.57653809 557.94885254]
[212.34310913 571.59692383]
[205.33375549 584.86322021]
[197.57173157 597.70367432]
[189.08283997 610.07556152]
[179.89526367 621.93786621]
[170.03955078 633.25115967]
[159.54841614 643.97784424]
[148.45672607 654.08233643]
[136.80131531 663.53094482]
[124.62090302 672.29241943]
[111.95595551 680.33764648]
[98.84854889 687.63977051]
[85.34221649 694.17468262]
[71.48182678 699.92059326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 168]
[66 167]
[67 166]
[69 164]
[72 161]
[73 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 122]
[89 121]
[90 120]
[93 116]
[94 115]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
