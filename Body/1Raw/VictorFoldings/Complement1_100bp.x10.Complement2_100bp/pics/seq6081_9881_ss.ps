%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[92.74745941 638.09063721]
[77.78910828 636.75500488]
[63.09371948 633.65954590]
[48.86760712 628.84765625]
[35.31047440 622.38696289]
[22.61264801 614.36816406]
[10.95238304 604.90374756]
[0.49337152 594.12670898]
[-8.61755753 582.18823242]
[-16.25250244 569.25592041]
[-22.30427742 555.51141357]
[-26.68792725 541.14752197]
[-29.34191322 526.36602783]
[-30.22897720 511.37438965]
[-29.33666420 496.38305664]
[-26.67750168 481.60250854]
[-22.28882027 467.24017334]
[-16.23223305 453.49777222]
[-8.59276009 440.56814575]
[0.52234966 428.63287354]
[10.98513412 417.85946655]
[22.64871216 408.39913940]
[35.34934616 400.38476562]
[48.90874100 393.92883301]
[63.13653946 389.12194824]
[77.83300781 386.03161621]
[92.79183197 384.70120239]
[93.23843384 369.70785522]
[93.68504333 354.71450806]
[94.13164520 339.72116089]
[94.57825470 324.72781372]
[87.22332001 311.77581787]
[95.36807251 298.21212769]
[88.01314545 285.26013184]
[96.15789795 271.69644165]
[96.60449982 256.70309448]
[97.05110931 241.70973206]
[97.38608551 226.71347046]
[97.60941315 211.71513367]
[97.83274078 196.71679688]
[98.05606842 181.71846008]
[95.01249695 174.98359680]
[98.39602661 166.49893188]
[98.84263611 151.50558472]
[97.94982147 136.53216553]
[95.72470093 121.69812775]
[93.49958801 106.86408234]
[90.09673309 102.87227631]
[89.17264557 97.25806427]
[91.43589783 91.55590820]
[89.65343475 76.66218567]
[87.87096405 61.76847076]
[86.08850098 46.87475204]
[82.95846558 42.69743729]
[81.85418701 38.18812943]
[82.56289673 34.17405701]
[84.57434845 31.27812767]
[83.45869446 16.31967354]
[82.34304810 1.36122048]
[81.22740173 -13.59723282]
[80.11174774 -28.55568695]
[78.99610138 -43.51414108]
[77.88045502 -58.47259140]
[71.88177490 -44.72428894]
[61.97534180 -33.46095657]
[49.10538483 -25.75614548]
[34.49857712 -22.34422302]
[19.54715157 -23.55039787]
[5.67617989 -29.25970268]
[-5.79224396 -38.92796326]
[-13.76502228 -51.63366318]
[-17.48224258 -66.16577148]
[-16.58960152 -81.13919067]
[-11.17218113 -95.12673950]
[-1.74633396 -106.79521942]
[10.78952694 -115.03246307]
[25.24056435 -119.05335236]
[40.22939682 -118.47463226]
[54.32738495 -113.35147858]
[66.19079590 -104.17218018]
[74.68888855 -91.81166077]
[79.01183319 -77.44692230]
[81.89710236 -92.16680908]
[84.78237915 -106.88670349]
[76.23274231 -119.90750885]
[79.36850739 -134.79447937]
[91.83454895 -142.86500549]
[94.71981812 -157.58489990]
[97.60509491 -172.30477905]
[86.44369507 -187.61286926]
[89.95574188 -205.90435791]
[105.45220184 -215.64988708]
[107.89793396 -230.44915771]
[110.34365845 -245.24842834]
[112.78938293 -260.04769897]
[115.23511505 -274.84698486]
[117.46022797 -289.68103027]
[119.46424103 -304.54653931]
[121.46825409 -319.41207886]
[107.60131073 -325.37951660]
[95.85931396 -334.86782837]
[87.11359406 -347.17291260]
[82.01315308 -361.38165283]
[80.93646240 -376.43963623]
[83.96342468 -391.22949219]
[90.86943054 -404.65371704]
[101.14199066 -415.71612549]
[114.01882935 -423.59582520]
[128.54438782 -427.70809937]
[143.64077759 -427.74777222]
[158.18774414 -423.71188354]
[171.10581970 -415.89996338]
[181.43637085 -404.89169312]
[188.41282654 -391.50396729]
[191.51747131 -376.73019409]
[190.51992798 -361.66674805]
[185.49421692 -347.43142700]
[176.81329346 -335.08053589]
[165.12130737 -325.53067017]
[151.28591919 -319.49041748]
[136.33378601 -317.40805054]
[134.32977295 -302.54254150]
[132.32575989 -287.67700195]
[134.45758057 -283.40332031]
[133.92733765 -277.74505615]
[130.03437805 -272.40124512]
[127.58865356 -257.60195923]
[125.14292908 -242.80270386]
[122.69720459 -228.00343323]
[120.25147247 -213.20416260]
[128.74786377 -205.58985901]
[132.55293274 -194.70698547]
[130.61219788 -183.22100830]
[123.29370117 -174.00468445]
[112.32498169 -169.41950989]
[109.43971252 -154.69961548]
[106.55444336 -139.97973633]
[115.05123901 -127.80023956]
[112.33485413 -112.83106995]
[99.50226593 -104.00142670]
[96.61699677 -89.28153992]
[93.73171997 -74.56164551]
[92.83890533 -59.58824158]
[93.95455933 -44.62978745]
[95.07020569 -29.67133522]
[96.18585205 -14.71288204]
[97.30149841 0.24557178]
[98.41715240 15.20402527]
[99.53279877 30.16247940]
[100.98221588 45.09228897]
[102.76468658 59.98600388]
[104.54714966 74.87972260]
[106.32961273 89.77343750]
[108.33362579 104.63896942]
[110.55874634 119.47301483]
[112.78386688 134.30705261]
[118.95296478 120.63437653]
[130.38764954 110.92623138]
[144.88006592 107.05712891]
[159.63194275 109.77410889]
[171.79493713 118.55258942]
[179.02055359 131.69755554]
[179.91365051 146.67094421]
[174.30177307 160.58161926]
[163.26849365 170.74365234]
[148.94416809 175.19490051]
[134.09460449 173.07591248]
[121.58699799 164.79582214]
[113.83598328 151.95217896]
[113.38938141 166.94552612]
[113.05440521 181.94178772]
[112.83107758 196.94012451]
[112.60774994 211.93846130]
[112.38442230 226.93679810]
[115.38571167 235.56408691]
[112.04445648 242.15634155]
[111.59785461 257.14968872]
[111.15124512 272.14303589]
[118.47423553 286.16744995]
[110.36142731 298.65872192]
[117.68441010 312.68313599]
[109.57160187 325.17440796]
[109.12500000 340.16775513]
[108.67839050 355.16110229]
[108.23178864 370.15444946]
[107.78517914 385.14779663]
[122.63829041 387.36621094]
[137.12477112 391.32583618]
[151.04122925 396.97103882]
[164.19232178 404.22262573]
[176.39340210 412.97872925]
[187.47322083 423.11648560]
[197.27621460 434.49356079]
[205.66476440 446.95022583]
[212.52110291 460.31161499]
[217.74899292 474.39016724]
[221.27502441 488.98825073]
[223.04972839 503.90087891]
[223.04815674 518.91876221]
[221.27033997 533.83099365]
[217.74125671 548.42834473]
[212.51042175 562.50579834]
[205.65129089 575.86578369]
[197.26013184 588.32067871]
[187.45477295 599.69567871]
[176.37283325 609.83111572]
[164.16992188 618.58471680]
[151.01731873 625.83355713]
[137.09967041 631.47583008]
[122.61237335 635.43243408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 186]
[28 185]
[29 184]
[30 183]
[31 182]
[33 180]
[35 178]
[36 177]
[37 176]
[38 174]
[39 173]
[40 172]
[41 171]
[43 170]
[44 169]
[45 156]
[46 155]
[47 154]
[50 153]
[51 152]
[52 151]
[53 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[82 142]
[83 141]
[84 140]
[87 137]
[88 136]
[89 135]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
