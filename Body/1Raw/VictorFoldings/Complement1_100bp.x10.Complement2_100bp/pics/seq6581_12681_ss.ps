%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[34.91694260 233.55332947]
[39.22152710 247.93478394]
[42.11798859 262.66455078]
[43.57928467 277.60510254]
[43.59177017 292.61694336]
[42.15532684 307.55990601]
[39.28337097 322.29446411]
[35.00271225 336.68304443]
[29.35332108 350.59130859]
[22.38794899 363.88940430]
[14.17162609 376.45315552]
[4.78107166 388.16525269]
[-5.69603634 398.91632080]
[-17.16187477 408.60601807]
[-29.50938416 417.14382935]
[-42.62327957 424.45007324]
[-56.38111877 430.45654297]
[-70.65444183 435.10711670]
[-85.30997467 438.35836792]
[-100.21089172 440.17999268]
[-115.21805573 440.55493164]
[-130.19134521 439.47970581]
[-144.99095154 436.96432495]
[-159.47869873 433.03234863]
[-173.51931763 427.72039795]
[-186.98170471 421.07815552]
[-199.74017334 413.16757202]
[-211.67558289 404.06253052]
[-222.67649841 393.84808350]
[-232.64019775 382.61953735]
[-241.47366333 370.48178101]
[-249.09442139 357.54809570]
[-255.43130493 343.93930054]
[-260.42514038 329.78244019]
[-264.02932739 315.20968628]
[-266.21017456 300.35708618]
[-266.94735718 285.36334229]
[-266.23397827 270.36846924]
[-264.07669067 255.51243591]
[-260.49563599 240.93397522]
[-255.52427673 226.76919556]
[-249.20899963 213.15034485]
[-241.60877991 200.20460510]
[-232.79458618 188.05284119]
[-222.84870911 176.80850220]
[-211.86402893 166.57658386]
[-199.94308472 157.45262146]
[-187.19718933 149.52182007]
[-173.74536133 142.85820007]
[-159.71319580 137.52398682]
[-145.23170471 133.56901550]
[-130.43609619 131.03016663]
[-115.46453094 129.93118286]
[-100.45679474 130.28230286]
[-85.55300903 132.08026123]
[-70.89232635 135.30827332]
[-56.61164474 139.93618774]
[-42.84429169 145.92079163]
[-29.71881866 153.20622253]
[-17.35777473 161.72444153]
[-5.87657356 171.39591980]
[4.61758327 182.13035583]
[16.30516434 172.72821045]
[27.99274635 163.32604980]
[39.68032837 153.92390442]
[51.36790848 144.52175903]
[63.05548859 135.11959839]
[73.38215637 124.24027252]
[82.16275787 112.07881165]
[90.94336700 99.91735840]
[90.87449646 96.06150055]
[92.50556183 92.19400787]
[95.80365753 89.07477570]
[100.39756775 87.42073822]
[109.71244812 75.66349030]
[119.02733612 63.90623856]
[128.34222412 52.14898682]
[137.65710449 40.39173508]
[146.97198486 28.63448524]
[156.28686523 16.87723351]
[165.60174561 5.11998272]
[156.56929016 -6.27904510]
[150.30970764 -19.39857674]
[147.13525391 -33.57634354]
[147.20256042 -48.09747314]
[150.50489807 -62.23056030]
[156.87266541 -75.26448059]
[165.98207092 -86.54419708]
[177.37171936 -95.50364685]
[190.46578979 -101.69419098]
[204.60334778 -104.80702972]
[219.07153320 -104.68865204]
[233.14163208 -101.34837341]
[246.10571289 -94.95769501]
[255.59460449 -106.57495880]
[265.08349609 -118.19222260]
[274.57238770 -129.80949402]
[284.06130981 -141.42675781]
[293.55020142 -153.04402161]
[282.97814941 -163.70465088]
[273.57833862 -175.41198730]
[265.45382690 -188.03775024]
[258.69357300 -201.44358826]
[253.37167358 -215.48265076]
[249.54643250 -230.00109863]
[247.25976562 -244.83985901]
[246.53672791 -259.83636475]
[247.38522339 -274.82626343]
[249.79597473 -289.64538574]
[253.74256897 -304.13131714]
[259.18173218 -318.12536621]
[266.05392456 -331.47415161]
[274.28381348 -344.03149414]
[283.78121948 -355.65979004]
[294.44213867 -366.23156738]
[306.14968872 -375.63107300]
[318.77563477 -383.75531006]
[332.18167114 -390.51522827]
[346.22085571 -395.83679199]
[360.73937988 -399.66165161]
[375.57821655 -401.94796753]
[390.57470703 -402.67065430]
[405.56460571 -401.82177734]
[420.38366699 -399.41067505]
[434.86950684 -395.46374512]
[448.86340332 -390.02423096]
[462.21206665 -383.15170288]
[474.76919556 -374.92150879]
[486.39721680 -365.42382812]
[496.96878052 -354.76266479]
[506.36798096 -343.05487061]
[514.49188232 -330.42871094]
[521.25152588 -317.02255249]
[526.57269287 -302.98321533]
[530.39727783 -288.46459961]
[532.68322754 -273.62573242]
[533.40551758 -258.62918091]
[532.55627441 -243.63931274]
[530.14483643 -228.82032776]
[526.19750977 -214.33457947]
[520.75769043 -200.34080505]
[513.88482666 -186.99232483]
[505.65432739 -174.43539429]
[496.15634155 -162.80758667]
[485.49493408 -152.23629761]
[473.78692627 -142.83735657]
[461.16058350 -134.71376038]
[447.75424194 -127.95449066]
[433.71478271 -122.63361359]
[419.19607544 -118.80943298]
[404.35714722 -116.52384949]
[389.36059570 -115.80189514]
[374.37072754 -116.65148926]
[359.55178833 -119.06331635]
[345.06616211 -123.01096344]
[331.07250977 -128.45115662]
[317.72418213 -135.32431030]
[305.16744995 -143.55511475]
[295.67855835 -131.93785095]
[286.18966675 -120.32058716]
[276.70077515 -108.70332336]
[267.21185303 -97.08606720]
[257.72296143 -85.46880341]
[267.11071777 -73.14254761]
[273.28631592 -58.92288208]
[275.88848877 -43.63117218]
[274.76254272 -28.15180969]
[269.96942139 -13.38103771]
[261.78265381 -0.17507844]
[250.67251587 10.69950962]
[237.27912903 18.61032677]
[222.37562561 23.09590340]
[206.82337952 23.89262199]
[191.52236938 20.95020485]
[177.35899353 14.43486595]
[168.04411316 26.19211769]
[158.72923279 37.94936752]
[149.41435242 49.70661926]
[140.09947205 61.46387100]
[130.78459167 73.22112274]
[121.46970367 84.97837067]
[112.15482330 96.73562622]
[103.10482025 108.69795990]
[94.32421875 120.85942078]
[85.54361725 133.02087402]
[98.98713684 126.36717224]
[113.81954956 124.13122559]
[128.62712097 126.52614594]
[141.99850464 133.32366943]
[152.65921021 143.87588501]
[159.59312439 157.17704773]
[162.13935852 171.95936584]
[160.05520630 186.81385803]
[153.53935242 200.32473755]
[143.21279907 211.20419312]
[130.05984497 218.41526794]
[115.33412933 221.27067566]
[100.43921661 219.49822998]
[86.79479980 213.26687622]
[75.70136261 203.17054749]
[68.21627808 190.17156982]
[65.05296326 175.50891113]
[66.51293945 160.58013916]
[72.45764160 146.80718994]
[60.77005768 156.20933533]
[49.08247757 165.61148071]
[37.39489746 175.01364136]
[25.70731544 184.41578674]
[14.01973438 193.81794739]
[22.25694275 206.36799622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 209]
[63 208]
[64 207]
[65 206]
[66 205]
[67 204]
[68 185]
[69 184]
[70 183]
[74 182]
[75 181]
[76 180]
[77 179]
[78 178]
[79 177]
[80 176]
[81 175]
[94 163]
[95 162]
[96 161]
[97 160]
[98 159]
[99 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
