%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[41.84461594 764.43194580]
[26.89610863 765.70880127]
[11.90336800 766.26196289]
[-3.09858942 766.09014893]
[-18.07472610 765.19372559]
[-32.99006653 763.57482910]
[-47.80977249 761.23718262]
[-62.49923325 758.18627930]
[-77.02413940 754.42926025]
[-91.35057068 749.97485352]
[-105.44506073 744.83349609]
[-119.27469635 739.01721191]
[-132.80717468 732.53948975]
[-146.01089478 725.41558838]
[-158.85502625 717.66210938]
[-171.30953979 709.29711914]
[-183.34538269 700.34014893]
[-194.93441772 690.81219482]
[-206.04959106 680.73541260]
[-216.66494751 670.13342285]
[-226.75569153 659.03094482]
[-236.29824829 647.45385742]
[-245.27032471 635.42932129]
[-253.65098572 622.98535156]
[-261.42065430 610.15100098]
[-268.56115723 596.95623779]
[-275.05584717 583.43194580]
[-280.88955688 569.60961914]
[-286.04864502 555.52160645]
[-290.52105713 541.20080566]
[-294.29635620 526.68060303]
[-297.36575317 511.99499512]
[-299.72204590 497.17825317]
[-301.35971069 482.26495361]
[-302.27499390 467.28994751]
[-302.46566772 452.28823853]
[-301.93136597 437.29479980]
[-300.67330933 422.34469604]
[-298.69439697 407.47283936]
[-295.99929810 392.71395874]
[-292.59432983 378.10250854]
[-288.48736572 363.67263794]
[-283.68804932 349.45803833]
[-278.20758057 335.49191284]
[-272.05877686 321.80688477]
[-265.25595093 308.43487549]
[-257.81506348 295.40719604]
[-249.75341797 282.75418091]
[-241.08988953 270.50546265]
[-231.84469604 258.68957520]
[-222.03944397 247.33418274]
[-211.69700623 236.46577454]
[-200.84156799 226.10972595]
[-189.49847412 216.29023743]
[-177.69419861 207.03024292]
[-165.45632935 198.35136414]
[-152.81344604 190.27388000]
[-139.79508972 182.81665039]
[-126.43163300 175.99708557]
[-112.75431061 169.83111572]
[-98.79506683 164.33314514]
[-84.58649445 159.51602173]
[-70.16178131 155.39099121]
[-55.55461502 151.96768188]
[-40.79911804 149.25408936]
[-25.92975044 147.25654602]
[-10.98123837 145.97973633]
[4.01150370 145.42663574]
[19.01346016 145.59852600]
[33.98959351 146.49502563]
[48.90492630 148.11401367]
[63.72462082 150.45172119]
[78.41407013 153.50268555]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[101.88675690 56.96805954]
[102.77957153 41.99465561]
[103.67239380 27.02124786]
[88.89731598 24.32782936]
[74.55463409 19.87306786]
[60.85351181 13.72192764]
[47.99374008 5.96411180]
[36.16286087 -3.28724861]
[25.53340340 -13.89724159]
[16.26037216 -25.71114159]
[8.47899723 -38.55667114]
[2.30275345 -52.24649811]
[-2.17829061 -66.58098602]
[-4.89878893 -81.35109711]
[-5.81906748 -96.34144592]
[-4.92570734 -111.33341980]
[-2.23173523 -126.10839081]
[2.22356224 -140.45091248]
[8.37521458 -154.15179443]
[16.13351059 -167.01127625]
[25.38531303 -178.84181213]
[35.99570465 -189.47087097]
[47.80995178 -198.74346924]
[60.65576935 -206.52435303]
[74.34582520 -212.70008850]
[88.68048859 -217.18060303]
[103.45069885 -219.90054321]
[118.44107819 -220.82026672]
[133.43301392 -219.92634583]
[148.20790100 -217.23181152]
[162.55024719 -212.77598572]
[176.25090027 -206.62382507]
[189.11009216 -198.86503601]
[200.94027710 -189.61279297]
[211.56895447 -179.00201416]
[220.84109497 -167.18740845]
[228.62150574 -154.34130859]
[234.79672241 -140.65101624]
[239.27670288 -126.31619263]
[241.99609375 -111.54587555]
[242.91525269 -96.55546570]
[242.02076721 -81.56355286]
[239.32569885 -66.78878021]
[234.86932373 -52.44660187]
[228.71664429 -38.74616623]
[220.95738220 -25.88726807]
[211.70469666 -14.05742741]
[201.09352112 -3.42915869]
[189.27857971 5.84254742]
[176.43217468 13.62248135]
[162.74165344 19.79718971]
[148.40666199 24.27662468]
[133.63624573 26.99546623]
[118.64579773 27.91406441]
[117.75298309 42.88747025]
[116.86016846 57.86087418]
[125.45928955 45.57043076]
[138.27177429 37.77042007]
[153.13850403 35.77528381]
[167.55415344 39.92123795]
[179.08944702 49.50961685]
[185.80047607 62.92460632]
[186.55632019 77.90554810]
[181.22961426 91.92789459]
[170.71798706 102.62863159]
[156.79283142 108.20449066]
[141.80079651 107.71584320]
[128.26829529 101.24504089]
[118.47578430 89.88253021]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[92.93612671 157.25898743]
[107.26258087 161.71331787]
[121.35709381 166.85461426]
[135.18675232 172.67085266]
[148.71926880 179.14845276]
[161.92301941 186.27230835]
[174.76718140 194.02574158]
[187.22174072 202.39068604]
[199.25761414 211.34756470]
[210.84671021 220.87550354]
[221.96192932 230.95220947]
[232.57733154 241.55415344]
[242.66812134 252.65660095]
[252.21073914 264.23361206]
[261.18286133 276.25811768]
[269.56359863 288.70205688]
[277.33331299 301.53637695]
[284.47387695 314.73107910]
[290.96865845 328.25537109]
[296.80242920 342.07766724]
[301.96157837 356.16564941]
[306.43405151 370.48645020]
[310.20944214 385.00659180]
[313.27890015 399.69216919]
[315.63525391 414.50891113]
[317.27301025 429.42221069]
[318.18832397 444.39721680]
[318.37908936 459.39892578]
[317.84484863 474.39236450]
[316.58685303 489.34246826]
[314.60803223 504.21432495]
[311.91302490 518.97320557]
[308.50808716 533.58471680]
[304.40121460 548.01458740]
[299.60195923 562.22918701]
[294.12155151 576.19537354]
[287.97280884 589.88043213]
[281.17007446 603.25244141]
[273.72921753 616.28021240]
[265.66763306 628.93322754]
[257.00418091 641.18200684]
[247.75903320 652.99792480]
[237.95382690 664.35333252]
[227.61145020 675.22180176]
[216.75605774 685.57794189]
[205.41300964 695.39746094]
[193.60877991 704.65753174]
[181.37095642 713.33642578]
[168.72811890 721.41400146]
[155.70977783 728.87127686]
[142.34635925 735.69091797]
[128.66906738 741.85693359]
[114.70984650 747.35498047]
[100.50129700 752.17218018]
[86.07660675 756.29730225]
[71.46945953 759.72064209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 155]
[74 154]
[75 153]
[76 152]
[78 150]
[79 149]
[80 135]
[81 134]
[82 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
