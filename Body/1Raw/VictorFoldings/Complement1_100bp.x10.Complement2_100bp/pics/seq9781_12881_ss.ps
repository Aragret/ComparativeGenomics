%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[100.46093750 427.66537476]
[93.24783325 440.89669800]
[83.17736053 452.10751343]
[70.79260254 460.69323730]
[56.76145172 466.19082642]
[41.84059906 468.30383301]
[26.83469963 466.91830444]
[12.55300522 462.10894775]
[-0.23429102 454.13513184]
[-10.83758545 443.42684937]
[-18.68505669 430.56164551]
[-23.35349846 416.23327637]
[-24.59115028 401.21444702]
[-22.33126640 386.31512451]
[-16.69571877 372.33880615]
[-7.98842430 360.03924561]
[3.32104087 350.07968140]
[16.62277412 342.99725342]
[31.19942665 339.17391968]
[46.26490021 338.81585693]
[49.36901093 324.14056396]
[52.47312164 309.46524048]
[55.57723236 294.78994751]
[58.68134308 280.11465454]
[45.37974930 266.98602295]
[42.65676880 248.34429932]
[51.79181290 231.69616699]
[69.25223541 223.85592651]
[71.69795990 209.05665588]
[74.14369202 194.25738525]
[76.58941650 179.45811462]
[79.03514099 164.65884399]
[81.48087311 149.85957336]
[79.95993042 147.50482178]
[79.28009033 144.40571594]
[79.72954559 140.87962341]
[81.47637939 137.34223938]
[84.53795624 134.26315308]
[87.86021423 119.63569641]
[91.18247223 105.00823975]
[89.75488281 97.07511139]
[94.66461945 90.18849945]
[98.20429230 75.61212158]
[93.94204712 60.37585831]
[104.46418762 49.83385849]
[108.00386047 35.25748444]
[111.54353333 20.68110847]
[115.08320618 6.10473347]
[102.51006317 -2.32980394]
[93.59799957 -14.53419209]
[89.40705109 -29.02405739]
[90.42450714 -44.04520416]
[96.50829315 -57.78598022]
[106.90650940 -68.59577942]
[120.35022736 -75.18330383]
[135.20838928 -76.77081299]
[138.74806213 -91.34719086]
[142.28773499 -105.92356110]
[145.82740784 -120.49993896]
[131.47291565 -124.86707306]
[117.39114380 -130.04656982]
[103.62802887 -136.02153015]
[90.22846985 -142.77247620]
[77.23616791 -150.27735901]
[64.69349670 -158.51173401]
[52.64137650 -167.44873047]
[41.11911392 -177.05918884]
[30.16429710 -187.31176758]
[19.81265259 -198.17301941]
[10.09794903 -209.60752869]
[1.05187392 -221.57798767]
[-7.29606724 -234.04536438]
[-14.91864491 -246.96897888]
[-21.79099464 -260.30667114]
[-27.89070129 -274.01495361]
[-33.19786835 -288.04910278]
[-37.69518661 -302.36334229]
[-41.36798096 -316.91101074]
[-44.20427704 -331.64459229]
[-46.19482422 -346.51608276]
[-47.33312607 -361.47695923]
[-47.61547089 -376.47842407]
[-47.04093552 -391.47152710]
[-45.61140060 -406.40737915]
[-43.33152008 -421.23727417]
[-40.20874023 -435.91281128]
[-36.25323868 -450.38613892]
[-31.47791862 -464.61007690]
[-25.89836121 -478.53814697]
[-19.53276062 -492.12500000]
[-12.40188408 -505.32629395]
[-4.52898979 -518.09893799]
[4.06024313 -530.40136719]
[13.33779812 -542.19329834]
[23.27341270 -553.43640137]
[33.83467865 -564.09393311]
[44.98714828 -574.13116455]
[56.69444275 -583.51531982]
[68.91838074 -592.21582031]
[81.61907959 -600.20428467]
[94.75511932 -607.45465088]
[108.28365326 -613.94329834]
[122.16055298 -619.64898682]
[136.34056091 -624.55316162]
[150.77740479 -628.63983154]
[165.42401123 -631.89569092]
[180.23260498 -634.30999756]
[195.15487671 -635.87500000]
[210.14215088 -636.58557129]
[225.14555359 -636.43939209]
[240.11613464 -635.43688965]
[255.00508118 -633.58135986]
[269.76379395 -630.87884521]
[284.34417725 -627.33819580]
[298.69863892 -622.97094727]
[312.78036499 -617.79138184]
[326.54342651 -611.81628418]
[339.94293213 -605.06524658]
[352.93518066 -597.56024170]
[365.47778320 -589.32574463]
[377.52984619 -580.38867188]
[389.05203247 -570.77813721]
[400.00677490 -560.52545166]
[410.35833740 -549.66412354]
[420.07293701 -538.22955322]
[429.11892700 -526.25903320]
[437.46676636 -513.79156494]
[445.08923340 -500.86791992]
[451.96148682 -487.53015137]
[458.06109619 -473.82183838]
[463.36813354 -459.78762817]
[467.86535645 -445.47335815]
[471.53802490 -430.92568970]
[474.37420654 -416.19207764]
[476.36462402 -401.32055664]
[477.50280762 -386.35968018]
[477.78503418 -371.35821533]
[477.21038818 -356.36511230]
[475.78073120 -341.42926025]
[473.50076294 -326.59939575]
[470.37783813 -311.92388916]
[466.42224121 -297.45056152]
[461.64682007 -283.22668457]
[456.06713867 -269.29864502]
[449.70144653 -255.71183777]
[442.57046509 -242.51060486]
[434.69744873 -229.73799133]
[426.10812378 -217.43568420]
[416.83047485 -205.64379883]
[406.89477539 -194.40078735]
[396.33343506 -183.74333191]
[385.18087769 -173.70619202]
[373.47351074 -164.32211304]
[361.24951172 -155.62170410]
[348.54873657 -147.63334656]
[335.41265869 -140.38307190]
[321.88406372 -133.89456177]
[308.00711060 -128.18894958]
[293.82708740 -123.28488159]
[279.39019775 -119.19832611]
[264.74356079 -115.94262695]
[249.93496704 -113.52839661]
[235.01268005 -111.96350861]
[220.02539062 -111.25306702]
[205.02198792 -111.39939880]
[190.05140686 -112.40202332]
[175.16249084 -114.25765991]
[160.40379333 -116.96026611]
[156.86412048 -102.38388824]
[153.32444763 -87.80751801]
[149.78477478 -73.23114014]
[162.26008606 -65.00606537]
[171.18533325 -52.98654556]
[175.46781921 -38.61174774]
[174.57215881 -23.61110497]
[168.58717346 -9.79625225]
[158.21752930 1.15777373]
[144.70074463 7.91562366]
[129.65957642 9.64440632]
[126.11991119 24.22078133]
[122.58023834 38.79715729]
[119.04056549 53.37353134]
[123.55599213 67.56719971]
[112.78067017 79.15179443]
[109.24099731 93.72817230]
[105.80993652 108.33049774]
[102.48767090 122.95795441]
[99.16541290 137.58541870]
[96.28014374 152.30531311]
[93.83441162 167.10458374]
[91.38868713 181.90385437]
[88.94296265 196.70312500]
[86.49723053 211.50239563]
[84.05150604 226.30166626]
[93.39981079 232.93667603]
[99.56916046 242.53770447]
[101.70050049 253.69697571]
[99.52352142 264.79513550]
[93.39029694 274.23626709]
[84.21901703 280.67718506]
[73.35664368 283.21875000]
[70.25253296 297.89407349]
[67.14842224 312.56936646]
[64.04431152 327.24465942]
[60.94020462 341.91998291]
[74.57035065 348.34771729]
[86.35037231 357.74600220]
[95.64499664 369.60797119]
[101.95297241 383.29397583]
[104.93412018 398.06588745]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[38 188]
[39 187]
[40 186]
[42 185]
[43 184]
[45 182]
[46 181]
[47 180]
[48 179]
[56 171]
[57 170]
[58 169]
[59 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
