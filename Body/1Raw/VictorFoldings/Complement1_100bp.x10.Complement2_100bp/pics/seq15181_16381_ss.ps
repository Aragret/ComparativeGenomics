%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[71.79667664 545.81042480]
[68.46050262 560.52545166]
[61.42861176 573.87518311]
[51.18045425 584.94934082]
[38.41476440 592.99298096]
[24.00192833 597.45758057]
[8.92464066 598.03875732]
[-5.78910828 594.69689941]
[-19.13610840 587.65985107]
[-30.20634079 577.40740967]
[-38.24501801 564.63861084]
[-42.70404816 550.22406006]
[-43.27940750 535.14654541]
[-39.93186951 520.43408203]
[-32.88967133 507.08981323]
[-22.63296509 496.02352905]
[-9.86106873 487.98977661]
[4.55520916 483.53631592]
[19.63294220 482.96676636]
[22.95520210 468.33932495]
[26.27746201 453.71185303]
[29.59972191 439.08441162]
[23.51344490 422.62463379]
[36.13587952 409.21731567]
[39.23999023 394.54202271]
[42.34410095 379.86672974]
[45.44820786 365.19140625]
[31.77909660 355.26089478]
[23.79973984 340.30551147]
[23.15818977 323.31134033]
[30.03187752 307.69558716]
[43.08219147 296.61944580]
[59.71487808 292.34820557]
[62.38067245 277.58697510]
[65.04647064 262.82577515]
[67.71226501 248.06454468]
[60.89709091 231.89295959]
[72.90827179 217.93540955]
[75.35399628 203.13613892]
[77.79972076 188.33686829]
[80.24545288 173.53759766]
[74.68685150 159.71908569]
[84.57070923 147.36514282]
[79.01211548 133.54663086]
[88.89597321 121.19268799]
[91.34169769 106.39341736]
[90.44888306 91.42001343]
[86.26187134 77.01622772]
[82.07485962 62.61244965]
[77.88784790 48.20866776]
[69.73313904 60.79837418]
[55.09407425 64.06910706]
[42.35656738 56.14724731]
[38.81724548 41.57078552]
[46.50358963 28.68978882]
[61.01251602 24.88307381]
[74.03206635 32.33055115]
[63.78476715 20.27636528]
[68.92947388 6.29847908]
[66.04419708 -8.42141247]
[63.15892792 -23.14130402]
[60.27365494 -37.86119461]
[57.38838196 -52.58108521]
[54.39360809 -67.27909088]
[51.28949738 -81.95439148]
[48.18538666 -96.62969208]
[36.12590790 -102.62832642]
[29.81528473 -114.30678558]
[31.36024475 -127.29505920]
[39.97425842 -136.87776184]
[37.08898544 -151.59765625]
[34.20371246 -166.31755066]
[21.37112999 -175.14718628]
[18.65474319 -190.11634827]
[27.15154076 -202.29585266]
[24.26626778 -217.01573181]
[21.38099670 -231.73562622]
[18.49572372 -246.45552063]
[10.20037365 -233.95803833]
[-4.15139580 -229.59606934]
[-17.99814987 -235.36386108]
[-25.00933647 -248.62445068]
[-21.97953796 -263.31527710]
[-10.29393768 -272.71987915]
[4.70496750 -272.53863525]
[16.16080475 -262.85275269]
[14.82257175 -277.79293823]
[13.48433781 -292.73312378]
[12.14610291 -307.67330933]
[-2.78239131 -309.69512939]
[-16.88651466 -314.98867798]
[-29.45881081 -323.28836060]
[-39.86865616 -334.17794800]
[-47.59390259 -347.11117554]
[-52.24705124 -361.43933105]
[-53.59469986 -376.44372559]
[-51.56925201 -391.37170410]
[-46.27230835 -405.47454834]
[-37.96955872 -418.04483032]
[-27.07746124 -428.45205688]
[-14.14236355 -436.17416382]
[0.18691625 -440.82382202]
[15.19162750 -442.16784668]
[30.11914062 -440.13879395]
[44.22069931 -434.83843994]
[56.78897095 -426.53262329]
[67.19353485 -415.63800049]
[74.91251373 -402.70104980]
[79.55871582 -388.37063599]
[80.89909363 -373.36560059]
[78.86641693 -358.43856812]
[73.56263733 -344.33831787]
[65.25379944 -331.77203369]
[54.35665894 -321.37011719]
[41.41781998 -313.65426636]
[27.08628845 -309.01153564]
[28.42452240 -294.07135010]
[29.76275635 -279.13116455]
[31.10099030 -264.19097900]
[33.21561432 -249.34078979]
[36.10088730 -234.62091064]
[38.98616028 -219.90101624]
[41.87143326 -205.18112183]
[54.33747482 -197.11059570]
[57.47323990 -182.22363281]
[48.92360306 -169.20281982]
[51.80887604 -154.48292542]
[54.69414902 -139.76303101]
[69.03966522 -130.98550415]
[72.66972351 -114.21835327]
[62.86069107 -99.73380280]
[65.96479797 -85.05850220]
[69.06890869 -70.38320160]
[73.52854919 -64.48970032]
[72.10827637 -55.46635818]
[74.99354553 -40.74646759]
[77.87882233 -26.02657700]
[80.76409149 -11.30668449]
[83.64936066 3.41320658]
[93.69029236 14.41452885]
[88.75196075 29.44528008]
[92.29163361 44.02165604]
[96.47864532 58.42543793]
[100.66564941 72.82921600]
[104.85266113 87.23300171]
[107.49722290 72.46796417]
[112.93384552 58.48786926]
[120.95928955 45.81536865]
[131.27351379 34.92423630]
[143.49092102 26.22164726]
[157.15473938 20.03295135]
[171.75415039 16.58951569]
[186.74334717 16.02007866]
[201.56192017 18.34592819]
[215.65589905 23.48011208]
[228.49835205 31.23068237]
[239.60916138 41.30788040]
[248.57295227 53.33496094]
[255.05458069 66.86228180]
[258.81173706 81.38411713]
[259.70394897 96.35755920]
[257.69790649 111.22281647]
[252.86854553 125.42412567]
[245.39645386 138.43057251]
[235.56095886 149.75590515]
[223.72978210 158.97671509]
[210.34523010 165.74827576]
[195.90771484 169.81741333]
[180.95697021 171.03201294]
[166.05194092 169.34666443]
[151.74989319 164.82438660]
[138.58547974 157.63423157]
[127.05088043 148.04501343]
[117.57733154 136.41522217]
[110.51899719 123.17967224]
[106.14096832 108.83914185]
[103.69524384 123.63842010]
[109.07890320 138.51547241]
[99.36997986 149.81086731]
[104.75364685 164.68792725]
[95.04472351 175.98332214]
[92.59899139 190.78259277]
[90.15326691 205.58186340]
[87.70754242 220.38113403]
[94.57060242 231.30181885]
[92.22888184 243.57780457]
[82.47348022 250.73034668]
[79.80768585 265.49157715]
[77.14189148 280.25277710]
[74.47609711 295.01400757]
[85.70100403 301.98559570]
[93.86894989 312.33175659]
[98.02478790 324.80758667]
[97.69444275 337.92132568]
[92.93893433 350.11257935]
[84.34451294 359.93823242]
[72.95047760 366.24301147]
[60.12351227 368.29553223]
[57.01940155 382.97082520]
[53.91529083 397.64611816]
[50.81118011 412.32144165]
[57.17976761 423.53765869]
[54.29222488 435.69686890]
[44.22718048 442.40664673]
[40.90492249 457.03411865]
[37.58266068 471.66159058]
[34.26040268 486.28903198]
[47.61283493 493.31576538]
[58.69097900 503.55966187]
[66.73950958 516.32226562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 207]
[20 206]
[21 205]
[22 204]
[24 201]
[25 200]
[26 199]
[27 198]
[33 190]
[34 189]
[35 188]
[36 187]
[38 184]
[39 183]
[40 182]
[41 181]
[43 179]
[45 177]
[46 176]
[47 145]
[48 144]
[49 143]
[50 142]
[57 141]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 133]
[65 132]
[66 131]
[70 128]
[71 127]
[72 126]
[75 123]
[76 122]
[77 121]
[78 120]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
