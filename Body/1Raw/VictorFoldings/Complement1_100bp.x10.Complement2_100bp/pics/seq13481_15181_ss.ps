%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[82.29042053 654.15795898]
[69.64594269 646.06500244]
[57.87009811 636.75329590]
[47.07993698 626.31536865]
[37.38269043 614.85491943]
[28.87474632 602.48583984]
[21.64065552 589.33111572]
[15.75231647 575.52148438]
[11.26825333 561.19415283]
[8.23303223 546.49157715]
[6.67681789 531.55987549]
[6.61507797 516.54736328]
[8.04842567 501.60333252]
[10.96261597 486.87628174]
[15.32868481 472.51257324]
[21.10323906 458.65496826]
[28.22888756 445.44119263]
[36.63481140 433.00259399]
[46.23746490 421.46276855]
[56.94141006 410.93640137]
[68.64026642 401.52813721]
[81.21775818 393.33148193]
[94.54888153 386.42785645]
[108.50114441 380.88595581]
[122.93587494 376.76077271]
[120.27008057 361.99954224]
[117.60428619 347.23834229]
[114.93849182 332.47711182]
[102.59399414 324.22189331]
[99.68021393 309.28988647]
[108.42276764 296.39779663]
[105.75697327 281.63659668]
[103.09117126 266.87536621]
[100.42537689 252.11415100]
[98.20203400 250.40686035]
[96.52101135 247.71598816]
[95.76032257 244.24369812]
[96.21789551 240.32513428]
[98.06776428 236.39678955]
[96.28529358 221.50306702]
[94.50283051 206.60934448]
[92.72036743 191.71563721]
[90.93789673 176.82191467]
[89.15543365 161.92819214]
[87.37296295 147.03448486]
[82.09455109 161.07507324]
[72.95965576 172.97270203]
[60.75853348 181.69810486]
[46.54670715 186.49645996]
[31.55364609 186.95262146]
[17.07639694 183.02717590]
[4.36738443 175.05967712]
[-5.47393274 163.73939514]
[-11.59618187 150.04568481]
[-13.46972847 135.16314697]
[-10.93249130 120.37928772]
[-4.20396662 106.97306061]
[6.13376093 96.10423279]
[19.18637466 88.71307373]
[33.82469177 85.43898010]
[48.78235245 86.56520844]
[62.76536942 91.99431610]
[74.56407166 101.25663757]
[83.15775299 113.55089569]
[87.80239105 127.81002808]
[90.24811554 113.01075745]
[84.04858398 103.15139771]
[86.03302002 91.67519379]
[95.18329620 84.47007751]
[90.02172852 69.51451874]
[99.89774323 58.36492157]
[102.56353760 43.60370636]
[105.22933960 28.84248734]
[107.89513397 14.08127022]
[110.56092834 -0.67994714]
[103.86121368 -11.70159245]
[106.38545227 -23.94136238]
[116.24626160 -30.94786263]
[119.13153076 -45.66775513]
[122.01680756 -60.38764572]
[117.07847595 -75.41839600]
[127.11940002 -86.41971588]
[130.00466919 -101.13961029]
[125.06633759 -116.17036438]
[135.10726929 -127.17168427]
[137.99253845 -141.89157104]
[140.87780762 -156.61146545]
[126.60535431 -161.28869629]
[113.01586914 -167.68444824]
[100.31536865 -175.70173645]
[88.69639587 -185.21903992]
[78.33509064 -196.09207153]
[69.38851929 -208.15602112]
[61.99232101 -221.22796631]
[56.25861359 -235.10975647]
[52.27432251 -249.59095764]
[50.09984207 -264.45202637]
[49.76813889 -279.46765137]
[51.28424835 -294.41024780]
[54.62517929 -309.05325317]
[59.74028397 -323.17471313]
[66.55202484 -336.56051636]
[74.95713043 -349.00775146]
[84.82818604 -360.32772827]
[96.01554871 -370.34884644]
[108.34961700 -378.91915894]
[121.64341736 -385.90875244]
[135.69541931 -391.21170044]
[150.29258728 -394.74755859]
[165.21362305 -396.46276855]
[180.23236084 -396.33126831]
[195.12109375 -394.35513306]
[209.65412903 -390.56427002]
[223.61112976 -385.01614380]
[236.78053284 -377.79489136]
[248.96267700 -369.00997925]
[259.97290039 -358.79455566]
[269.64425659 -347.30349731]
[277.83016968 -334.71102905]
[284.40652466 -321.20803833]
[289.27365112 -306.99920654]
[292.35772705 -292.29992676]
[293.61199951 -277.33309937]
[293.01748657 -262.32556152]
[290.58319092 -247.50483704]
[286.34597778 -233.09561157]
[280.37014771 -219.31631470]
[272.74621582 -206.37585449]
[263.58984375 -194.47038269]
[253.03976440 -183.78041077]
[241.25596619 -174.46797180]
[228.41705322 -166.67424011]
[214.71769714 -160.51737976]
[200.36553955 -156.09071350]
[185.57817078 -153.46136475]
[170.57977295 -152.66918945]
[155.59770203 -153.72619629]
[152.71243286 -139.00630188]
[149.82716370 -124.28640747]
[154.97186279 -110.30852509]
[144.72456360 -98.25434113]
[141.83929443 -83.53444672]
[146.98399353 -69.55656433]
[136.73669434 -57.50237274]
[133.85142517 -42.78248215]
[130.96615601 -28.06258965]
[137.53979492 -11.79132462]
[125.32214355 1.98584831]
[122.65634918 16.74706650]
[119.99055481 31.50828362]
[117.32476044 46.26950073]
[114.65896606 61.03071594]
[120.01120758 74.93045807]
[109.94451141 87.13587189]
[116.02197266 102.77047729]
[105.04738617 115.45648193]
[102.60166168 130.25575256]
[102.26668549 145.25201416]
[104.04914856 160.14573669]
[105.83161926 175.03944397]
[107.61408234 189.93316650]
[109.39654541 204.82688904]
[111.17901611 219.72059631]
[112.96147919 234.61431885]
[115.18659973 249.44836426]
[117.85239410 264.20959473]
[120.51818848 278.97079468]
[123.18398285 293.73202515]
[135.88368225 302.75173950]
[138.37689209 317.75967407]
[129.69970703 329.81130981]
[132.36550903 344.57254028]
[135.03129578 359.33377075]
[137.69709778 374.09497070]
[152.66291809 372.91055298]
[167.67230225 373.22216797]
[182.57606506 375.02670288]
[197.22608948 378.30624390]
[211.47677612 383.02816772]
[225.18649292 389.14553833]
[238.21897888 396.59759521]
[250.44470215 405.31024170]
[261.74215698 415.19689941]
[271.99908447 426.15930176]
[281.11349487 438.08850098]
[288.99484253 450.86593628]
[295.56478882 464.36462402]
[300.75805664 478.45037842]
[304.52297974 492.98324585]
[306.82217407 507.81875610]
[307.63278198 522.80944824]
[306.94674683 537.80639648]
[304.77090454 552.66046143]
[301.12686157 567.22412109]
[296.05084229 581.35253906]
[289.59326172 594.90533447]
[281.81835938 607.74786377]
[272.80337524 619.75238037]
[262.63787842 630.79962158]
[251.42295837 640.77978516]
[239.27005005 649.59375000]
[226.29994202 657.15380859]
[212.64152527 663.38488770]
[198.43055725 668.22503662]
[183.80828857 671.62615967]
[168.92002869 673.55450439]
[153.91375732 673.99078369]
[138.93861389 672.93078613]
[124.14343262 670.38494873]
[109.67525482 666.37866211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 174]
[26 173]
[27 172]
[28 171]
[31 168]
[32 167]
[33 166]
[34 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[45 158]
[65 157]
[66 156]
[69 154]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[78 146]
[79 145]
[80 144]
[82 142]
[83 141]
[85 139]
[86 138]
[87 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
