%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[171.10125732 242.48936462]
[182.12528992 232.28227234]
[173.52671814 219.99143982]
[164.92816162 207.70059204]
[151.29254150 201.70732117]
[149.72163391 185.96429443]
[141.12306213 173.67346191]
[127.48744965 167.68017578]
[125.91653442 151.93716431]
[117.31797028 139.64631653]
[112.85438538 137.94766235]
[109.41049194 133.42697144]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.57700348 68.82833862]
[71.29468536 83.81115723]
[66.29644775 97.95391846]
[56.32376099 109.15862274]
[42.85599899 115.76312256]
[27.89102936 116.78767395]
[13.64881706 112.08029938]
[2.24210978 102.33930206]
[-4.63697577 89.00970459]
[-5.96796799 74.06887054]
[-1.55342257 59.73318863]
[7.95178938 48.12926865]
[21.13762665 40.97848511]
[36.04804611 39.34161377]
[50.47117996 43.46147156]
[62.26618958 52.72546005]
[56.81083298 38.75266266]
[42.61333084 32.34417725]
[37.27986908 18.09606171]
[43.47687149 4.60040474]
[38.02151489 -9.37239361]
[32.56615829 -23.34519005]
[27.11079979 -37.31798935]
[21.65544319 -51.29078674]
[15.61927509 -58.14662170]
[16.22458458 -65.51245117]
[10.97786617 -79.56491852]
[-3.38104248 -75.20932007]
[-17.98510742 -71.76393127]
[-32.77669525 -69.24233246]
[-47.69742584 -67.65448761]
[-62.68841553 -67.00666046]
[-77.69050598 -67.30140686]
[-92.64447784 -68.53755951]
[-107.49132538 -70.71024323]
[-122.17245483 -73.81089020]
[-136.62991333 -77.82725525]
[-150.80667114 -82.74348450]
[-164.64674377 -88.54018402]
[-178.09553528 -95.19447327]
[-191.09994507 -102.68009186]
[-203.60868835 -110.96749878]
[-215.57235718 -120.02398682]
[-226.94377136 -129.81379700]
[-237.67802429 -140.29832458]
[-247.73277283 -151.43617249]
[-257.06832886 -163.18338013]
[-265.64782715 -175.49359131]
[-273.43743896 -188.31823730]
[-280.40643311 -201.60668945]
[-286.52725220 -215.30650330]
[-291.77578735 -229.36360168]
[-296.13131714 -243.72253418]
[-299.57662964 -258.32662964]
[-302.09814453 -273.11822510]
[-303.68591309 -288.03897095]
[-304.33367920 -303.02996826]
[-304.03884888 -318.03204346]
[-302.80261230 -332.98602295]
[-300.62985229 -347.83285522]
[-297.52914429 -362.51394653]
[-293.51269531 -376.97140503]
[-288.59637451 -391.14813232]
[-282.79962158 -404.98815918]
[-276.14526367 -418.43692017]
[-268.65957642 -431.44131470]
[-260.37210083 -443.94998169]
[-251.31555176 -455.91363525]
[-241.52566528 -467.28497314]
[-231.04109192 -478.01919556]
[-219.90319824 -488.07388306]
[-208.15592957 -497.40936279]
[-195.84567261 -505.98880005]
[-183.02099609 -513.77838135]
[-169.73251343 -520.74725342]
[-156.03266907 -526.86804199]
[-141.97552490 -532.11651611]
[-127.61657715 -536.47192383]
[-113.01247406 -539.91717529]
[-98.22086334 -542.43859863]
[-83.30010986 -544.02630615]
[-68.30911255 -544.67401123]
[-53.30702972 -544.37908936]
[-38.35306931 -543.14276123]
[-23.50624275 -540.96990967]
[-8.82514858 -537.86914062]
[5.63227510 -533.85260010]
[19.80896950 -528.93621826]
[33.64898682 -523.13940430]
[47.09770584 -516.48498535]
[60.10204697 -508.99920654]
[72.61069489 -500.71166992]
[84.57427979 -491.65505981]
[95.94557953 -481.86511230]
[106.67973328 -471.38049316]
[116.73435974 -460.24255371]
[126.06978607 -448.49523926]
[134.64916992 -436.18493652]
[142.43865967 -423.36019897]
[149.40748596 -410.07168579]
[155.52818298 -396.37179565]
[160.77656555 -382.31463623]
[165.13194275 -367.95565796]
[168.57710266 -353.35153198]
[171.09846497 -338.55990601]
[172.68608093 -323.63916016]
[173.33367920 -308.64816284]
[173.03869629 -293.64608765]
[171.80230713 -278.69213867]
[169.62939453 -263.84530640]
[166.52851868 -249.16423035]
[162.51193237 -234.70683289]
[157.59547424 -220.53016663]
[151.79855347 -206.69017029]
[145.14405823 -193.24148560]
[137.65823364 -180.23718262]
[129.37063599 -167.72857666]
[120.31395721 -155.76504517]
[110.52396393 -144.39379883]
[100.03927612 -133.65969849]
[88.90126801 -123.60512543]
[77.15391541 -114.26976013]
[64.84356689 -105.69043732]
[52.01880264 -97.90102386]
[38.73024750 -90.93225861]
[25.03033829 -84.81163788]
[30.27705574 -70.75916290]
[35.62824249 -56.74614334]
[41.08359909 -42.77334595]
[46.53895569 -28.80054855]
[51.99431229 -14.82775021]
[57.44966888 -0.85495234]
[71.15155792 4.87164164]
[76.88311005 18.96433258]
[70.78363037 33.29730225]
[76.23899078 47.27010345]
[83.11840057 60.59952927]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.60881042 131.04776001]
[138.20736694 143.33859253]
[152.45800781 150.21099854]
[153.41390991 165.07489014]
[162.01246643 177.36573792]
[176.26310730 184.23812866]
[177.21899414 199.10203552]
[185.81756592 211.39286804]
[194.41612244 223.68371582]
[207.78376770 216.82659912]
[221.96063232 211.85365295]
[236.68261719 208.85751343]
[251.67546082 207.89399719]
[266.65985107 208.98104858]
[281.35665894 212.09841919]
[295.49206543 217.18803406]
[308.80273438 224.15507507]
[321.04071045 232.86975098]
[331.97799683 243.16970825]
[341.41085815 254.86308289]
[349.16357422 267.73202515]
[355.09167480 281.53677368]
[359.08474731 296.02017212]
[361.06838989 310.91241455]
[361.00567627 325.93606567]
[358.89773560 340.81121826]
[354.78387451 355.26080322]
[348.74072266 369.01556396]
[340.88085938 381.81933594]
[331.35067749 393.43353271]
[320.32775879 403.64181519]
[308.01745605 412.25399780]
[294.64904785 419.10964966]
[280.47164917 424.08108521]
[265.74932861 427.07562256]
[250.75639343 428.03750610]
[235.77212524 426.94885254]
[221.07565308 423.82989502]
[206.94081116 418.73873901]
[193.63088989 411.77026367]
[181.39384460 403.05426025]
[170.45767212 392.75311279]
[161.02607727 381.05871582]
[153.27476501 368.18896484]
[147.34815979 354.38354492]
[143.35665894 339.89971924]
[141.37461853 325.00726318]
[141.43896484 309.98361206]
[143.54850769 295.10867310]
[147.66392517 280.65957642]
[153.70857239 266.90542603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[6 164]
[7 163]
[9 161]
[10 160]
[13 159]
[14 158]
[16 156]
[17 155]
[18 154]
[33 153]
[34 152]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[43 144]
[44 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
