%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[108.45890808 671.58081055]
[94.36935425 666.42108154]
[80.61704254 660.42010498]
[67.25215149 653.59973145]
[54.32344437 645.98480225]
[41.87810898 637.60314941]
[29.96155167 628.48541260]
[18.61725426 618.66473389]
[7.88661051 608.17706299]
[-2.19122267 597.06060791]
[-11.57947254 585.35595703]
[-20.24388313 573.10583496]
[-28.15283775 560.35485840]
[-35.27747726 547.14965820]
[-41.59180832 533.53839111]
[-47.07278061 519.57067871]
[-51.70040512 505.29748535]
[-55.45779419 490.77096558]
[-58.33123016 476.04406738]
[-60.31023788 461.17053223]
[-61.38758850 446.20465088]
[-61.55935287 431.20104980]
[-60.82490540 416.21441650]
[-59.18692780 401.29949951]
[-56.65139389 386.51065063]
[-53.22755432 371.90191650]
[-48.92790985 357.52655029]
[-43.76813889 343.43701172]
[-37.76707840 329.68472290]
[-30.94661903 316.31988525]
[-23.33165169 303.39120483]
[-14.94996071 290.94592285]
[-5.83213234 279.02938843]
[3.98856449 267.68515015]
[14.47629547 256.95455933]
[25.59279060 246.87677002]
[37.29748535 237.48857117]
[49.54767609 228.82421875]
[62.29865646 220.91531372]
[75.50390625 213.79074097]
[89.11522675 207.47647095]
[103.08296967 201.99555969]
[117.35615540 197.36801147]
[113.59985352 182.84594727]
[109.84355164 168.32388306]
[106.08725739 153.80183411]
[102.33095551 139.27976990]
[98.57465363 124.75770569]
[94.81835175 110.23564911]
[89.28392792 124.17732239]
[77.58172607 133.56126404]
[62.77066422 135.93453979]
[48.72232056 130.67677307]
[39.10889816 119.16233826]
[36.44332886 104.40108490]
[41.42237854 90.25155640]
[52.74453735 80.41241455]
[67.45021820 77.45558929]
[81.69540405 82.15397644]
[91.75601196 93.27865601]
[90.19548798 78.36004639]
[86.62750244 72.79399109]
[86.43498230 67.11420441]
[88.81740570 62.97499084]
[87.70175934 48.01653671]
[86.58610535 33.05808258]
[85.47045898 18.09963036]
[84.35481262 3.14117670]
[83.23915863 -11.81727695]
[68.23072052 -12.06620502]
[53.30710220 -13.67890644]
[38.59196472 -16.64201736]
[24.20725060 -20.93098259]
[10.27215672 -26.51026344]
[-3.09784555 -33.33362579]
[-15.79196453 -41.34453201]
[-27.70501137 -50.47659302]
[-38.73826599 -60.65414429]
[-48.80030823 -71.79283905]
[-57.80775070 -83.80039215]
[-65.68595886 -96.57728577]
[-72.36965179 -110.01765442]
[-77.80343628 -124.01012421]
[-81.94229126 -138.43875122]
[-84.75192261 -153.18395996]
[-86.20904541 -168.12356567]
[-86.30158997 -183.13378906]
[-85.02877808 -198.09022522]
[-82.40116882 -212.86895752]
[-78.44052887 -227.34751892]
[-73.17967987 -241.40591431]
[-66.66221619 -254.92767334]
[-58.94214249 -267.80075073]
[-50.08343506 -279.91842651]
[-40.15949631 -291.18035889]
[-29.25256729 -301.49316406]
[-17.45302391 -310.77142334]
[-4.85864305 -318.93823242]
[8.42621136 -325.92593384]
[22.29145432 -331.67660522]
[36.62219238 -336.14260864]
[51.29967499 -339.28692627]
[66.20227814 -341.08349609]
[81.20650482 -341.51745605]
[96.18803406 -340.58520508]
[111.02271271 -338.29446411]
[125.58761597 -334.66418457]
[139.76205444 -329.72448730]
[153.42857361 -323.51629639]
[166.47390747 -316.09106445]
[178.78997803 -307.51028442]
[190.27473450 -297.84509277]
[200.83297729 -287.17559814]
[210.37724304 -275.59014893]
[218.82843018 -263.18481445]
[226.11651611 -250.06234741]
[232.18110657 -236.33149719]
[236.97193909 -222.10606384]
[240.44932556 -207.50390625]
[242.58444214 -192.64602661]
[243.35958862 -177.65554810]
[242.76837158 -162.65669250]
[240.81565857 -147.77374268]
[237.51765442 -133.13003540]
[232.90167236 -118.84689331]
[227.00596619 -105.04269409]
[219.87939453 -91.83182526]
[211.58099365 -79.32374573]
[202.17956543 -67.62210846]
[191.75297546 -56.82389069]
[180.38764954 -47.01855469]
[168.17774963 -38.28736115]
[155.22447205 -30.70266151]
[141.63513184 -24.32730293]
[127.52236176 -19.21411514]
[113.00308228 -15.40546894]
[98.19761658 -12.93292522]
[99.31326294 2.02552795]
[100.42890930 16.98398209]
[101.54456329 31.94243431]
[102.66020966 46.90088654]
[103.77585602 61.85934067]
[105.11408997 76.79953003]
[106.67461395 91.71813202]
[109.34040833 106.47934723]
[113.09671021 121.00141144]
[116.85301208 135.52346802]
[120.60931396 150.04553223]
[124.36561584 164.56758118]
[128.12191772 179.08964539]
[131.87821960 193.61170959]
[146.60507202 190.73806763]
[161.47856140 188.75885010]
[176.44442749 187.68128967]
[191.44804382 187.50932312]
[206.43467712 188.24356079]
[221.34962463 189.88133240]
[236.13848877 192.41665649]
[250.74728394 195.84028625]
[265.12271118 200.13973999]
[279.21231079 205.29930115]
[292.96469116 211.30018616]
[306.32965088 218.12045288]
[319.25842285 225.73524475]
[331.70382690 234.11676025]
[343.62045288 243.23442078]
[354.96484375 253.05496216]
[365.69558716 263.54254150]
[375.77352905 274.65890503]
[385.16189575 286.36346436]
[393.82641602 298.61352539]
[401.73550415 311.36441040]
[408.86026001 324.56954956]
[415.17471313 338.18078613]
[420.65582275 352.14843750]
[425.28356934 366.42156982]
[429.04107666 380.94805908]
[431.91467285 395.67495728]
[433.89379883 410.54846191]
[434.97128296 425.51431274]
[435.14318848 440.51794434]
[434.40890503 455.50454712]
[432.77105713 470.41949463]
[430.23565674 485.20834351]
[426.81195068 499.81713867]
[422.51245117 514.19250488]
[417.35281372 528.28210449]
[411.35186768 542.03448486]
[404.53152466 555.39935303]
[396.91668701 568.32812500]
[388.53509521 580.77349854]
[379.41738892 592.69012451]
[369.59680176 604.03442383]
[359.10916138 614.76513672]
[347.99276733 624.84301758]
[336.28814697 634.23132324]
[324.03805542 642.89581299]
[311.28713989 650.80480957]
[298.08197021 657.92950439]
[284.47070312 664.24389648]
[270.50299072 669.72491455]
[256.22985840 674.35260010]
[241.70333862 678.11010742]
[226.97645569 680.98358154]
[212.10295105 682.96264648]
[197.13706970 684.04010010]
[182.13345337 684.21191406]
[167.14683533 683.47753906]
[152.23188782 681.83959961]
[137.44305420 679.30413818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[60 144]
[61 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
