%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[112.56252289 129.55426025]
[117.28007507 115.30796814]
[103.43259430 109.54193115]
[95.37222290 109.59693146]
[89.42288971 103.58559418]
[75.66278076 97.61402893]
[61.90267944 91.64246368]
[48.14257812 85.67089844]
[34.38247299 79.69934082]
[18.64276886 81.30316925]
[10.04778290 69.13864899]
[-3.71232057 63.16709137]
[-10.46144009 76.56756592]
[-17.96457100 89.56089020]
[-26.19724083 102.10467529]
[-35.13259506 114.15801239]
[-44.74148941 125.68157959]
[-54.99258041 136.63778687]
[-65.85243225 146.99090576]
[-77.28562164 156.70716858]
[-89.25485229 165.75486755]
[-101.72109222 174.10449219]
[-114.64366913 181.72883606]
[-127.98043060 188.60299683]
[-141.68788147 194.70455933]
[-155.72131348 200.01362610]
[-170.03495789 204.51289368]
[-184.58209229 208.18766785]
[-199.31530762 211.02595520]
[-214.18652344 213.01852417]
[-229.14724731 214.15885925]
[-244.14866638 214.44323730]
[-259.14184570 213.87074280]
[-274.07791138 212.44323730]
[-288.90811157 210.16537476]
[-303.58407593 207.04458618]
[-318.05795288 203.09104919]
[-332.28250122 198.31765747]
[-346.21136475 192.73999023]
[-359.79907227 186.37623596]
[-373.00134277 179.24714661]
[-385.77505493 171.37599182]
[-398.07861328 162.78842163]
[-409.87182617 153.51248169]
[-421.11627197 143.57838440]
[-431.77523804 133.01856995]
[-441.81399536 121.86746216]
[-451.19973755 110.16143799]
[-459.90191650 97.93868256]
[-467.89208984 85.23906708]
[-475.14425659 72.10401154]
[-481.63470459 58.57635880]
[-487.34231567 44.70023727]
[-492.24841309 30.52090263]
[-496.33703613 16.08460999]
[-499.59484863 1.43844557]
[-502.01119995 -13.36981678]
[-503.57824707 -28.29187584]
[-504.29083252 -43.27906036]
[-504.14663696 -58.28247833]
[-503.14617920 -73.25320435]
[-501.29269409 -88.14238739]
[-498.59219360 -102.90148163]
[-495.05352783 -117.48233795]
[-490.68823242 -131.83738708]
[-485.51052856 -145.91983032]
[-479.53735352 -159.68370056]
[-472.78811646 -173.08412170]
[-465.28488159 -186.07739258]
[-457.05212402 -198.62110901]
[-448.11666870 -210.67437744]
[-438.50769043 -222.19787598]
[-428.25650024 -233.15399170]
[-417.39657593 -243.50703430]
[-405.96331787 -253.22320557]
[-393.99398804 -262.27081299]
[-381.52770996 -270.62033081]
[-368.60507202 -278.24456787]
[-355.26824951 -285.11862183]
[-341.56072998 -291.22009277]
[-327.52728271 -296.52905273]
[-313.21359253 -301.02819824]
[-298.66641235 -304.70285034]
[-283.93319702 -307.54104614]
[-269.06195068 -309.53347778]
[-254.10122681 -310.67370605]
[-239.09980774 -310.95797729]
[-224.10662842 -310.38534546]
[-209.17059326 -308.95773315]
[-194.34040833 -306.67974854]
[-179.66445923 -303.55883789]
[-165.19062805 -299.60519409]
[-150.96609497 -294.83169556]
[-137.03727722 -289.25390625]
[-123.44961548 -282.89004517]
[-110.24741364 -275.76086426]
[-97.47373962 -267.88961792]
[-85.17026520 -259.30194092]
[-73.37711334 -250.02590942]
[-62.13275528 -240.09173584]
[-51.47386932 -229.53182983]
[-41.43521881 -218.38064575]
[-32.04954910 -206.67454529]
[-23.34747887 -194.45172119]
[-15.35738564 -181.75204468]
[-8.10533619 -168.61692810]
[-1.61498368 -155.08923340]
[4.09250116 -141.21305847]
[8.99850178 -127.03369141]
[13.08701611 -112.59736633]
[16.34470749 -97.95117188]
[18.76095009 -83.14289093]
[20.32786179 -68.22081757]
[21.04033470 -53.23363113]
[20.89604187 -38.23021317]
[19.89545441 -23.25949860]
[18.04183578 -8.37032318]
[15.34123421 6.38874769]
[11.80245590 20.96957397]
[7.43704605 35.32459259]
[2.25924230 49.40698624]
[16.01934624 55.37854767]
[30.77483559 53.34759140]
[40.35403824 65.93923950]
[54.11413956 71.91079712]
[67.87424469 77.88236237]
[81.63434601 83.85392761]
[95.39444733 89.82548523]
[109.19862366 95.69445038]
[123.04611206 101.46047974]
[129.83381653 88.07618713]
[137.60275269 75.23657227]
[146.30947876 63.01343155]
[155.90530396 51.47512817]
[166.33654785 40.68618774]
[177.54489136 30.70695114]
[189.46765137 21.59322357]
[202.03814697 13.39597416]
[215.18608093 6.16104555]
[228.83790588 -0.07110129]
[242.91729736 -5.26561308]
[257.34552002 -9.39343929]
[272.04183960 -12.43149567]
[286.92413330 -14.36279202]
[301.90911865 -15.17652798]
[316.91302490 -14.86815166]
[331.85192871 -13.43938828]
[346.64230347 -10.89822769]
[361.20138550 -7.25888252]
[375.44781494 -2.54170442]
[389.30187988 3.22692537]
[402.68612671 10.01474667]
[415.52566528 17.78379822]
[427.74871826 26.49063110]
[439.28695679 36.08655167]
[450.07580566 46.51789856]
[460.05493164 57.72633362]
[469.16854858 69.64917755]
[477.36569214 82.21974182]
[484.60049438 95.36772919]
[490.83251953 109.01962280]
[496.02691650 123.09906006]
[500.15460205 137.52729797]
[503.19253540 152.22367859]
[505.12371826 167.10597229]
[505.93731689 182.09097290]
[505.62881470 197.09487915]
[504.19992065 212.03376770]
[501.65863037 226.82409668]
[498.01913452 241.38316345]
[493.30184937 255.62954712]
[487.53308105 269.48355103]
[480.74514771 282.86773682]
[472.97598267 295.70721436]
[464.26904297 307.93020630]
[454.67303467 319.46832275]
[444.24157715 330.25708008]
[433.03305054 340.23611450]
[421.11013794 349.34963989]
[408.53948975 357.54666138]
[395.39144897 364.78137207]
[381.73950195 371.01327515]
[367.66000366 376.20755005]
[353.23171997 380.33511353]
[338.53533936 383.37292480]
[323.65301514 385.30395508]
[308.66799927 386.11740112]
[293.66412354 385.80877686]
[278.72525024 384.37976074]
[263.93493652 381.83831787]
[249.37588501 378.19873047]
[235.12954712 373.48129272]
[221.27558899 367.71243286]
[207.89147949 360.92437744]
[195.05206299 353.15509033]
[182.82914734 344.44802856]
[171.29110718 334.85189819]
[160.50244141 324.42037964]
[150.52349854 313.21176147]
[141.41007996 301.28875732]
[133.21316528 288.71804810]
[125.97859192 275.56994629]
[119.74680328 261.91793823]
[114.55266571 247.83840942]
[110.42521667 233.41007996]
[107.38755035 218.71366882]
[105.45664978 203.83132935]
[104.64331055 188.84631348]
[104.95207977 173.84242249]
[106.38124084 158.90354919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[5 128]
[6 127]
[7 126]
[8 125]
[9 124]
[11 122]
[12 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
