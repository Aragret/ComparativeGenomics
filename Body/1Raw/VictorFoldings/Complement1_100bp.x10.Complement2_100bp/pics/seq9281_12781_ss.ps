%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[127.68946838 495.61019897]
[125.58120728 480.74172974]
[125.21335602 465.72903442]
[126.59090424 450.77514648]
[129.69522095 436.08227539]
[134.48431396 421.84918213]
[140.89341736 408.26831055]
[148.83584595 395.52334595]
[158.20422363 383.78665161]
[168.87181091 373.21694946]
[180.69436646 363.95715332]
[193.51200867 356.13250732]
[187.23464966 342.50921631]
[180.95729065 328.88589478]
[174.67991638 315.26257324]
[168.40255737 301.63925171]
[164.31192017 299.17437744]
[161.72625732 294.11361694]
[162.14787292 287.51559448]
[156.27890015 273.71142578]
[152.26345825 271.12582397]
[149.82963562 265.99032593]
[150.44749451 259.40777588]
[144.99214172 245.43498230]
[139.53678894 231.46218872]
[134.08142090 217.48939514]
[130.14474487 214.78540039]
[127.86489868 209.57969666]
[128.67848206 203.01847839]
[123.64156342 188.88945007]
[112.07978058 179.49932861]
[114.73379517 163.90231323]
[109.69687653 149.77328491]
[98.13509369 140.38316345]
[100.78910828 124.78614807]
[95.75219727 110.65711975]
[91.48365784 125.03694916]
[80.66531372 135.42749023]
[66.12504578 139.11268616]
[51.66364670 135.12921143]
[41.06129456 124.51836395]
[37.08941650 110.05377960]
[40.78625107 95.51647186]
[51.18545914 84.70645142]
[65.56870270 80.44944000]
[80.17624664 83.85820007]
[91.18923950 94.04094696]
[88.30396271 79.32106018]
[85.41869354 64.60116577]
[82.53341675 49.88127518]
[79.64814758 35.16138458]
[72.12932587 48.14088058]
[58.46447754 54.32731247]
[43.75025177 51.41328812]
[33.47468948 40.48567200]
[31.47032166 25.62019157]
[38.48472977 12.36130333]
[51.90171051 5.65424681]
[66.71706390 8.00058651]
[77.40557098 18.52623177]
[76.28992462 3.56777835]
[75.17427063 -11.39067554]
[74.05862427 -26.34912872]
[65.31634521 -39.53560257]
[72.08560181 -52.80309677]
[70.96995544 -67.76155090]
[69.85430908 -82.72000122]
[60.60802460 -91.71273041]
[59.98674774 -104.19462585]
[67.77879333 -113.44721985]
[66.88597870 -128.42062378]
[65.99316406 -143.39402771]
[65.10034943 -158.36744690]
[64.20753479 -173.34085083]
[63.31471634 -188.31425476]
[57.11200714 -174.65678406]
[47.03898239 -163.54219055]
[34.05573654 -156.02984619]
[19.39974976 -152.83578491]
[4.46793938 -154.26441956]
[-9.31649113 -160.17961121]
[-20.63969803 -170.01754761]
[-28.42242432 -182.84054565]
[-31.92287064 -197.42639160]
[-30.80739594 -212.38485718]
[-25.18232155 -226.29019165]
[-15.58379364 -237.81704712]
[-2.92668176 -245.86674500]
[11.58261871 -249.67202759]
[26.56117249 -248.87020874]
[40.58132172 -243.53771973]
[52.30675125 -234.18281555]
[60.61987305 -221.69714355]
[64.72846985 -207.26963806]
[67.83258057 -221.94493103]
[70.93669128 -236.62023926]
[74.04080200 -251.29553223]
[77.14490509 -265.97085571]
[80.13967896 -280.66885376]
[83.02495575 -295.38873291]
[69.40744019 -301.87057495]
[57.83023453 -311.53591919]
[49.02109528 -323.77725220]
[43.53377151 -337.82501221]
[41.71319962 -352.79620361]
[43.67382050 -367.74969482]
[49.29239273 -381.74548340]
[58.21572495 -393.90380859]
[69.88288879 -403.46038818]
[83.56047821 -409.81448364]
[98.38870239 -412.56665039]
[113.43546295 -411.54391479]
[127.75489044 -406.81051636]
[140.44685364 -398.66406250]
[150.71354675 -387.61663818]
[157.90956116 -374.36264038]
[161.58258057 -359.73529053]
[161.50170898 -344.65402222]
[157.67202759 -330.06689453]
[150.33425903 -316.89086914]
[139.94969177 -305.95416260]
[127.17107391 -297.94430542]
[112.80170441 -293.36477661]
[97.74485016 -292.50347900]
[94.85957336 -277.78356934]
[96.65776825 -270.61502075]
[91.82021332 -262.86672974]
[88.71610260 -248.19142151]
[85.61199188 -233.51612854]
[82.50788116 -218.84082031]
[79.40377045 -204.16552734]
[78.28812408 -189.20706177]
[79.18093872 -174.23365784]
[80.07375336 -159.26025391]
[80.96656799 -144.28684998]
[81.85938263 -129.31344604]
[82.75219727 -114.34004211]
[93.19104767 -100.23339081]
[84.81275940 -83.83565521]
[85.92840576 -68.87719727]
[87.04405975 -53.91874695]
[95.70653534 -41.80220032]
[89.01707458 -27.46477699]
[90.13272858 -12.50632381]
[91.24837494 2.45212960]
[92.36402130 17.41058350]
[94.36803436 32.27611160]
[97.25331116 46.99600220]
[100.13858032 61.71589279]
[103.02385712 76.43578339]
[105.90912628 91.15567780]
[109.88122559 105.62020111]
[114.91813660 119.74922943]
[126.84019470 130.14996338]
[123.82590485 144.73637390]
[128.86282349 158.86540222]
[140.78488159 169.26612854]
[137.77058411 183.85253906]
[142.80751038 197.98156738]
[148.05422974 212.03402710]
[153.50958252 226.00683594]
[158.96493530 239.97962952]
[164.42030334 253.95242310]
[170.08308411 267.84246826]
[175.95204163 281.64663696]
[182.02587891 295.36190796]
[188.30323792 308.98519897]
[194.58059692 322.60852051]
[200.85795593 336.23184204]
[207.13531494 349.85516357]
[221.41133118 345.19555664]
[236.13177490 342.22485352]
[251.09756470 340.98318481]
[266.10629272 341.48739624]
[280.95501709 343.73065186]
[295.44290161 347.68258667]
[309.37402344 353.28976440]
[322.55996704 360.47637939]
[334.82241821 369.14523315]
[345.99551392 379.17907715]
[355.92822266 390.44219971]
[364.48614502 402.78231812]
[371.55355835 416.03253174]
[377.03491211 430.01364136]
[380.85604858 444.53659058]
[382.96530151 459.40490723]
[383.33413696 474.41760254]
[381.95758057 489.37158203]
[378.85424805 504.06463623]
[374.06613159 518.29803467]
[367.65792847 531.87933350]
[359.71633911 544.62481689]
[350.34875488 556.36218262]
[339.68185425 566.93261719]
[327.85992432 576.19317627]
[315.04281616 584.01867676]
[301.40386963 590.30322266]
[287.12753296 594.96185303]
[272.40689087 597.93157959]
[257.44104004 599.17224121]
[242.43231201 598.66705322]
[227.58375549 596.42279053]
[213.09613037 592.46990967]
[199.16539001 586.86181641]
[185.97993469 579.67431641]
[173.71806335 571.00463867]
[162.54560852 560.97003174]
[152.61367798 549.70623779]
[144.05657959 537.36553955]
[136.99005127 524.11486816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 170]
[13 169]
[14 168]
[15 167]
[16 166]
[19 165]
[20 164]
[23 163]
[24 162]
[25 161]
[26 160]
[29 159]
[30 158]
[32 156]
[33 155]
[35 153]
[36 152]
[47 151]
[48 150]
[49 149]
[50 148]
[51 147]
[60 146]
[61 145]
[62 144]
[63 143]
[65 141]
[66 140]
[67 139]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 125]
[100 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
