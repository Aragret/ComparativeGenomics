%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[95.20980072 437.16839600]
[87.36074066 423.96658325]
[87.18021393 408.60876465]
[94.71676636 395.22610474]
[107.94311523 387.41845703]
[107.71978760 372.42010498]
[107.49645996 357.42178345]
[107.27313232 342.42343140]
[107.04980469 327.42510986]
[106.71482849 312.42883301]
[106.26822662 297.43548584]
[105.82161713 282.44213867]
[94.83828735 272.44705200]
[94.17177582 257.24801636]
[104.73002625 245.79545593]
[104.28342438 230.80210876]
[96.17060852 218.31085205]
[103.49359894 204.28642273]
[103.04699707 189.29307556]
[93.03278351 174.88188171]
[101.89557648 158.74085999]
[101.22579193 143.75582886]
[100.55600739 128.77078247]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[72.20923615 49.44148254]
[66.75387573 35.46868515]
[59.97388458 22.08841133]
[51.93271255 9.42588711]
[43.89154053 -3.23663807]
[35.85036469 -15.89916325]
[20.68530464 -19.45706177]
[12.71079350 -32.41321182]
[16.19616318 -46.84885406]
[8.15499115 -59.51137924]
[0.01977490 -72.11369324]
[-8.20903301 -84.65509033]
[-16.43784142 -97.19649506]
[-25.03640556 -109.48732758]
[-39.48534012 -115.93238831]
[-40.88336182 -130.76124573]
[-49.84405899 -142.79061890]
[-58.80475616 -154.81999207]
[-67.76544952 -166.84938049]
[-76.72614288 -178.87875366]
[-89.48906708 -170.98005676]
[-102.88375092 -164.20777893]
[-116.81103516 -158.61204529]
[-131.16780090 -154.23429871]
[-145.84776306 -151.10694885]
[-160.74221802 -149.25314331]
[-175.74090576 -148.68661499]
[-190.73275757 -149.41154480]
[-205.60681152 -151.42257690]
[-220.25291443 -154.70481873]
[-234.56263733 -159.23397827]
[-248.43003845 -164.97650146]
[-261.75244141 -171.88989258]
[-274.43121338 -179.92295837]
[-286.37249756 -189.01622009]
[-297.48785400 -199.10235596]
[-307.69500732 -210.10670471]
[-316.91836548 -221.94776917]
[-325.08966064 -234.53788757]
[-332.14840698 -247.78385925]
[-338.04232788 -261.58758545]
[-342.72775269 -275.84692383]
[-346.17004395 -290.45623779]
[-348.34371948 -305.30737305]
[-349.23263550 -320.29040527]
[-348.83023071 -335.29440308]
[-347.13949585 -350.20825195]
[-344.17294312 -364.92153931]
[-339.95254517 -379.32534790]
[-334.50952148 -393.31301880]
[-327.88421631 -406.78100586]
[-320.12561035 -419.62957764]
[-311.29122925 -431.76361084]
[-301.44644165 -443.09329224]
[-290.66412354 -453.53469849]
[-279.02410889 -463.01055908]
[-266.61260986 -471.45068359]
[-253.52149963 -478.79263306]
[-239.84768677 -484.98199463]
[-225.69241333 -489.97296143]
[-211.16049194 -493.72860718]
[-196.35951233 -496.22109985]
[-181.39906311 -497.43200684]
[-166.38989258 -497.35232544]
[-151.44314575 -495.98266602]
[-136.66946411 -493.33316040]
[-122.17823792 -489.42346191]
[-108.07675171 -484.28250122]
[-94.46942139 -477.94830322]
[-81.45698547 -470.46780396]
[-69.13578033 -461.89636230]
[-57.59704208 -452.29745483]
[-46.92618942 -441.74215698]
[-37.20223236 -430.30859375]
[-28.49716377 -418.08145142]
[-20.87543488 -405.15124512]
[-14.39347267 -391.61367798]
[-9.09926987 -377.56900024]
[-5.03202343 -363.12118530]
[-2.22184682 -348.37722778]
[-0.68954533 -333.44628906]
[-0.44646400 -318.43887329]
[-1.49440253 -303.46612549]
[-3.82560229 -288.63888550]
[-7.42280340 -274.06692505]
[-12.25937271 -259.85818481]
[-18.29950333 -246.11778259]
[-25.49847221 -232.94750977]
[-33.80298233 -220.44483948]
[-43.15154648 -208.70236206]
[-53.47495270 -197.80700684]
[-64.69676971 -187.83944702]
[-55.73607254 -175.81007385]
[-46.77537537 -163.78068542]
[-37.81468201 -151.75131226]
[-28.85398483 -139.72193909]
[-15.04597664 -134.13729858]
[-13.00702667 -118.44802856]
[-10.25599670 -117.90953827]
[-7.55251026 -116.24888611]
[-5.32505274 -113.47871399]
[-3.98962259 -109.76641846]
[-3.89644051 -105.42530060]
[4.33236742 -92.88390350]
[12.56117535 -80.34249878]
[18.85883141 -76.47451019]
[20.81751633 -67.55255127]
[28.85868835 -54.89002991]
[43.40622711 -51.90595245]
[51.74150085 -39.17889786]
[48.51288986 -23.94033623]
[56.55406570 -11.27781105]
[64.59523773 1.38471401]
[72.63641357 14.04723930]
[72.41376495 -0.95110863]
[78.23574829 -14.77516556]
[89.12124634 -25.09533501]
[103.23586273 -30.17248917]
[118.20104218 -29.15103531]
[131.49488831 -22.20310783]
[140.87715149 -10.49955463]
[144.76675415 3.98736978]
[142.50823975 18.81636429]
[134.48219299 31.48848343]
[122.04115295 39.86825180]
[107.28164673 42.54353333]
[92.69092560 39.06349182]
[80.72667694 30.01332855]
[86.18202972 43.98612595]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[112.80697632 93.70394897]
[117.95804596 79.61613464]
[126.53623962 67.31107330]
[137.97261047 57.60491562]
[151.50862122 51.14143753]
[166.24645996 48.34933853]
[181.20864868 49.41380692]
[195.40277100 54.26424026]
[207.88740540 62.57892609]
[217.83447266 73.80638123]
[224.58422852 87.20193481]
[227.68899536 101.87709808]
[226.94282532 116.85852814]
[222.39521790 131.15255737]
[214.34779358 143.81111145]
[203.33432007 153.99459839]
[190.08528137 161.02758789]
[175.47943115 164.44360352]
[160.48551941 164.01605225]
[146.09805298 159.77333069]
[133.27128601 151.99682617]
[122.85598755 141.20231628]
[115.54104614 128.10099792]
[116.21083069 143.08602905]
[116.88061523 158.07107544]
[125.85504913 167.33511353]
[126.10442352 179.82997131]
[118.04034424 188.84646606]
[118.48694611 203.83981323]
[126.63169861 217.40350342]
[119.27677155 230.35549927]
[119.72337341 245.34884644]
[130.94458008 256.15267944]
[131.18391418 271.36441040]
[120.81497192 281.99554443]
[121.26157379 296.98889160]
[121.70818329 311.98223877]
[125.09171295 320.46688843]
[122.04814148 327.20178223]
[122.27146912 342.20010376]
[122.49479675 357.19845581]
[122.71812439 372.19677734]
[122.94145203 387.19512939]
[136.39440918 394.60549927]
[144.32606506 407.75784302]
[144.60287476 423.11425781]
[137.15036011 436.54391479]
[123.97322083 444.43429565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 199]
[11 198]
[12 197]
[15 194]
[16 193]
[18 191]
[19 190]
[21 187]
[22 186]
[23 185]
[24 162]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 142]
[32 141]
[33 140]
[34 139]
[37 136]
[38 135]
[39 133]
[40 132]
[41 131]
[42 126]
[44 124]
[45 123]
[46 122]
[47 121]
[48 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
