%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[115.59772491 790.98797607]
[101.23777771 786.63433838]
[87.19332123 781.35083008]
[73.52449036 775.16009521]
[60.28982162 768.08862305]
[47.54598999 760.16668701]
[35.34756470 751.42822266]
[23.74678040 741.91064453]
[12.79331779 731.65472412]
[2.53407836 720.70440674]
[-6.98700476 709.10650635]
[-15.72916031 696.91070557]
[-23.65495300 684.16925049]
[-30.73044395 670.93676758]
[-36.92533493 657.26977539]
[-42.21309662 643.22692871]
[-46.57108307 628.86828613]
[-49.98064041 614.25543213]
[-52.42716217 599.45080566]
[-53.90017319 584.51782227]
[-54.39336777 569.52056885]
[-53.90462875 554.52313232]
[-52.43605423 539.58972168]
[-49.99393463 524.78436279]
[-46.58872223 510.17047119]
[-42.23499680 495.81054688]
[-36.95141220 481.76611328]
[-30.76058197 468.09732056]
[-23.68902397 454.86270142]
[-15.76701736 442.11889648]
[-7.02848625 429.92053223]
[2.48914981 418.31979370]
[12.74513435 407.36639404]
[23.69554901 397.10723877]
[35.29350281 387.58621216]
[47.48933029 378.84414673]
[60.23080826 370.91842651]
[73.46337128 363.84298706]
[87.13036346 357.64819336]
[101.17324829 352.36050415]
[115.53190613 348.00259399]
[130.14483643 344.59313965]
[127.69911194 329.79385376]
[123.50707245 323.70712280]
[125.32884979 314.75619507]
[123.10372925 299.92214966]
[120.87861633 285.08810425]
[118.65349579 270.25405884]
[116.42838287 255.42001343]
[114.20326233 240.58596802]
[111.97814941 225.75192261]
[109.75302887 210.91787720]
[107.52791595 196.08384705]
[97.98823547 184.64514160]
[103.59280396 169.84988403]
[91.93704987 156.73080444]
[98.81899261 139.65098572]
[96.37326050 124.85170746]
[93.92753601 110.05243683]
[88.26411438 123.94220734]
[77.49742126 134.38626099]
[63.44181824 139.62458801]
[48.46592712 138.77442932]
[35.09345245 131.97908020]
[25.57788849 120.38364410]
[21.52277374 105.94216919]
[23.61146736 91.08830261]
[31.49198723 78.32518005]
[43.83633041 69.80360413]
[58.56425095 66.95961761]
[73.19384766 70.27247620]
[85.25975800 79.18390656]
[92.72919464 92.19375610]
[93.17580414 77.20040894]
[93.62240601 62.20705795]
[94.06901550 47.21371078]
[83.51076508 35.76115036]
[84.17727661 20.56212234]
[95.16060638 10.56702423]
[87.83762360 -3.45739865]
[95.95043182 -15.94865990]
[96.39703369 -30.94200897]
[89.07404327 -44.96643066]
[97.18685913 -57.45769501]
[97.63346100 -72.45104218]
[97.96843719 -87.44730377]
[98.19176483 -102.44564056]
[83.39037323 -105.07528687]
[69.20252991 -110.04531860]
[55.99572754 -117.22699738]
[44.11205673 -126.43430328]
[33.85933304 -137.42875671]
[25.50312614 -149.92555237]
[19.25988388 -163.60099792]
[15.29131889 -178.10089111]
[13.70022678 -193.04962158]
[14.52782154 -208.05999756]
[17.75266647 -222.74319458]
[23.29123116 -236.71891785]
[31.00005150 -249.62512207]
[40.67945099 -261.12753296]
[52.07870865 -270.92819214]
[64.90256500 -278.77325439]
[78.81883240 -284.45950317]
[93.46707153 -287.83966064]
[108.46783447 -288.82617188]
[123.43257904 -287.39346313]
[137.97367859 -283.57867432]
[151.71447754 -277.48062134]
[164.29907227 -269.25720215]
[175.40147400 -259.12149048]
[184.73411560 -247.33599854]
[192.05525208 -234.20599365]
[197.17524719 -220.07156372]
[199.96148682 -205.29885864]
[200.34179688 -190.27049255]
[198.30633545 -175.37576294]
[193.90782166 -161.00047302]
[187.26016235 -147.51696777]
[178.53559875 -135.27449036]
[167.96006775 -124.59018707]
[155.80752563 -115.74078369]
[142.39276123 -108.95549774]
[128.06321716 -104.41009521]
[113.19010162 -102.22231293]
[112.96677399 -87.22397614]
[116.01033783 -80.48910522]
[112.62680817 -72.00444031]
[112.18020630 -57.01108932]
[119.53514099 -44.05908966]
[111.39038086 -30.49540329]
[110.94377899 -15.50205421]
[118.29871368 -2.55005598]
[110.15396118 11.01362991]
[120.52289581 21.64474678]
[120.28356171 36.85649872]
[109.06236267 47.66031647]
[108.61576080 62.65366364]
[108.16915131 77.64701843]
[107.72254944 92.64036560]
[108.72680664 107.60671234]
[111.17253876 122.40598297]
[113.61826324 137.20524597]
[123.62996674 145.33720398]
[125.36234283 157.71389771]
[118.42684174 167.62477112]
[128.12567139 180.12449646]
[122.36195374 193.85871887]
[124.58707428 208.69276428]
[126.81218719 223.52680969]
[129.03730774 238.36085510]
[131.26242065 253.19490051]
[133.48754883 268.02893066]
[135.71266174 282.86297607]
[137.93777466 297.69702148]
[140.16288757 312.53106689]
[142.49838257 327.34814453]
[144.94410706 342.14739990]
[159.87701416 340.67413330]
[174.87431335 340.18066406]
[189.87176514 340.66915894]
[204.80516052 342.13745117]
[219.61054993 344.57931519]
[234.22453308 347.98428345]
[248.58453369 352.33773804]
[262.62905884 357.62109375]
[276.29794312 363.81167603]
[289.53271484 370.88299561]
[302.27664185 378.80477905]
[314.47515869 387.54309082]
[326.07604980 397.06051636]
[337.02963257 407.31631470]
[347.28900146 418.26654053]
[356.81024170 429.86431885]
[365.55252075 442.05999756]
[373.47848511 454.80133057]
[380.55410767 468.03378296]
[386.74917603 481.70065308]
[392.03710938 495.74343872]
[396.39526367 510.10202026]
[399.80499268 524.71490479]
[402.25167847 539.51947021]
[403.72485352 554.45239258]
[404.21823120 569.44970703]
[403.72967529 584.44714355]
[402.26129150 599.38055420]
[399.81933594 614.18591309]
[396.41427612 628.79986572]
[392.06072998 643.15985107]
[386.77731323 657.20434570]
[380.58663940 670.87322998]
[373.51525879 684.10791016]
[365.59338379 696.85180664]
[356.85501099 709.05029297]
[347.33749390 720.65112305]
[337.08163452 731.60461426]
[326.13134766 741.86395264]
[314.53350830 751.38507080]
[302.33779907 760.12731934]
[289.59640503 768.05316162]
[276.36392212 775.12878418]
[262.69699097 781.32373047]
[248.65417480 786.61157227]
[234.29557800 790.96966553]
[219.68267822 794.37927246]
[204.87808228 796.82592773]
[189.94515991 798.29901123]
[174.94786072 798.79229736]
[159.95040894 798.30364990]
[145.01702881 796.83514404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 158]
[43 157]
[45 156]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[55 146]
[57 143]
[58 142]
[59 141]
[73 140]
[74 139]
[75 138]
[76 137]
[79 134]
[81 132]
[82 131]
[84 129]
[85 128]
[86 126]
[87 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
