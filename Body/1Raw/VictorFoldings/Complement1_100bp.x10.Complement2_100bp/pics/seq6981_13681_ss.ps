%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[49.73749924 859.22680664]
[34.74928284 859.91253662]
[19.74611855 859.76428223]
[4.77438068 858.78247070]
[-10.11965370 856.97009277]
[-24.88994789 854.33276367]
[-39.49084473 850.87872314]
[-53.87722015 846.61853027]
[-68.00460052 841.56536865]
[-81.82931519 835.73492432]
[-95.30864716 829.14520264]
[-108.40091705 821.81652832]
[-121.06566620 813.77160645]
[-133.26374817 805.03527832]
[-144.95744324 795.63452148]
[-156.11062622 785.59838867]
[-166.68882751 774.95794678]
[-176.65933228 763.74609375]
[-185.99131775 751.99743652]
[-194.65596008 739.74829102]
[-202.62648010 727.03662109]
[-209.87821960 713.90155029]
[-216.38876343 700.38378906]
[-222.13801575 686.52514648]
[-227.10816956 672.36834717]
[-231.28388977 657.95721436]
[-234.65226746 643.33630371]
[-237.20288086 628.55078125]
[-238.92784119 613.64642334]
[-239.82182312 598.66912842]
[-239.88208008 583.66540527]
[-239.10839844 568.68145752]
[-237.50318909 553.76367188]
[-235.07139587 538.95812988]
[-231.82055664 524.31066895]
[-227.76069641 509.86645508]
[-222.90438843 495.67022705]
[-217.26663208 481.76580811]
[-210.86483765 468.19622803]
[-203.71882629 455.00335693]
[-195.85066223 442.22802734]
[-187.28466797 429.90972900]
[-178.04731750 418.08651733]
[-168.16717529 406.79495239]
[-157.67477417 396.06991577]
[-146.60255432 385.94454956]
[-134.98472595 376.45019531]
[-122.85720062 367.61614990]
[-110.25746918 359.46975708]
[-97.22447205 352.03619385]
[-83.79850006 345.33840942]
[-70.02104950 339.39712524]
[-55.93470764 334.23071289]
[-41.58301163 329.85513306]
[-27.01032257 326.28390503]
[-12.26168537 323.52807617]
[2.61731386 321.59613037]
[17.58068466 320.49411011]
[32.58217621 320.22534180]
[47.57541656 320.79074097]
[62.51406479 322.18847656]
[64.73918152 307.35443115]
[66.96430206 292.52038574]
[69.18941498 277.68634033]
[71.41453552 262.85229492]
[62.38237000 251.06436157]
[64.42763519 235.98883057]
[76.85315704 226.59500122]
[79.07826996 211.76095581]
[81.30339050 196.92691040]
[83.52851105 182.09286499]
[85.75362396 167.25881958]
[87.97874451 152.42477417]
[89.65028381 137.51820374]
[90.76593018 122.55975342]
[91.88157654 107.60129547]
[79.83834839 116.54336548]
[64.97997284 114.48702240]
[55.81799316 102.61023712]
[57.60081863 87.71656036]
[69.30715942 78.33777618]
[84.23109436 79.84647369]
[93.82322693 91.37750244]
[96.26895905 76.57823181]
[98.71468353 61.77895737]
[101.16040802 46.97968674]
[103.60614014 32.18041611]
[96.72419739 15.10059261]
[108.37994385 1.98150611]
[110.60506439 -12.85253716]
[111.49787903 -27.82594299]
[111.05127716 -42.81929398]
[110.60466766 -57.81264496]
[102.45991516 -71.37632751]
[109.81484985 -84.32832336]
[109.36824036 -99.32167816]
[108.92163849 -114.31502533]
[94.69844818 -119.67872620]
[83.61395264 -130.08076477]
[77.35845947 -143.93490601]
[76.88587952 -159.12849426]
[82.26828766 -173.34461975]
[92.68489838 -184.41542053]
[106.54725647 -190.65267944]
[121.74145508 -191.10527039]
[135.95048523 -185.70416260]
[147.00756836 -175.27301025]
[153.22659302 -161.40245056]
[153.65919495 -146.20767212]
[148.23941040 -132.00576782]
[137.79370117 -120.96240234]
[123.91498566 -114.76163483]
[124.36159515 -99.76828003]
[124.80819702 -84.77493286]
[132.92100525 -72.28366852]
[125.59801483 -58.25925064]
[126.04462433 -43.26589966]
[126.49123383 -28.27254868]
[134.24136353 -41.11527252]
[146.74865723 -49.39582825]
[161.59814453 -51.51537323]
[175.92263794 -47.06465530]
[186.95629883 -36.90304184]
[192.56869507 -22.99257660]
[191.67614746 -8.01915359]
[184.45101929 5.12609291]
[172.28836060 13.90502167]
[157.53657532 16.62255859]
[143.04402161 12.75399208]
[131.60897827 3.04627943]
[125.43910980 -10.62742043]
[123.21398926 4.20662355]
[130.14949036 14.11749649]
[128.41711426 26.49419403]
[118.40541077 34.62614441]
[115.95967865 49.42541504]
[113.51395416 64.22468567]
[111.06822968 79.02395630]
[108.62249756 93.82322693]
[106.84003448 108.71694183]
[105.72438812 123.67539978]
[104.60873413 138.63385010]
[117.50491333 130.97300720]
[131.58834839 136.13603210]
[136.47724915 150.31695557]
[128.56771851 163.06211853]
[113.69034576 164.97625732]
[102.81278229 154.64988708]
[100.58766937 169.48393250]
[98.36254883 184.31797791]
[96.13743591 199.15202332]
[93.91231537 213.98606873]
[91.68720245 228.82011414]
[100.80971527 241.44616699]
[98.34181213 256.45831299]
[86.24858093 265.07742310]
[84.02346039 279.91146851]
[81.79833984 294.74551392]
[79.57322693 309.57955933]
[77.34810638 324.41360474]
[92.03940582 327.46035767]
[106.53867340 331.31887817]
[120.80109406 335.97723389]
[134.78257751 341.42102051]
[148.43992615 347.63342285]
[161.73091125 354.59521484]
[174.61445618 362.28491211]
[187.05073547 370.67871094]
[199.00131226 379.75067139]
[210.42924500 389.47277832]
[221.29920959 399.81497192]
[231.57760620 410.74526978]
[241.23266602 422.22988892]
[250.23455811 434.23336792]
[258.55545044 446.71853638]
[266.16958618 459.64685059]
[273.05349731 472.97836304]
[279.18588257 486.67181396]
[284.54776001 500.68493652]
[289.12255859 514.97436523]
[292.89617920 529.49597168]
[295.85690308 544.20483398]
[297.99563599 559.05554199]
[299.30572510 574.00213623]
[299.78314209 588.99841309]
[299.42639160 603.99804688]
[298.23657227 618.95471191]
[296.21740723 633.82214355]
[293.37509155 648.55432129]
[289.71844482 663.10583496]
[285.25875854 677.43164062]
[280.00979614 691.48742676]
[273.98779297 705.22979736]
[267.21136475 718.61621094]
[259.70144653 731.60540771]
[251.48129272 744.15710449]
[242.57626343 756.23260498]
[233.01391602 767.79455566]
[222.82379150 778.80718994]
[212.03738403 789.23645020]
[200.68803406 799.05023193]
[188.81083679 808.21801758]
[176.44248962 816.71160889]
[163.62123108 824.50469971]
[150.38668823 831.57318115]
[136.77975464 837.89526367]
[122.84251404 843.45135498]
[108.61803436 848.22430420]
[94.15027618 852.19934082]
[79.48397064 855.36425781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 160]
[62 159]
[63 158]
[64 157]
[65 156]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[74 142]
[75 141]
[76 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[89 132]
[90 131]
[91 118]
[92 117]
[93 116]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
