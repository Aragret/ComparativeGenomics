%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[252.31285095 546.56158447]
[264.67132568 537.97875977]
[258.59750366 524.26348877]
[246.36932373 515.75933838]
[247.85594177 500.00811768]
[241.78210449 486.29284668]
[235.70826721 472.57757568]
[229.63444519 458.86230469]
[215.62812805 459.73571777]
[202.13627625 455.76730347]
[190.78527832 447.41418457]
[182.95069885 435.66339111]
[179.59062195 421.91503906]
[181.12844849 407.81582642]
[187.39973450 395.06152344]
[197.66946411 385.19320679]
[191.80049133 371.38900757]
[187.78504944 368.80343628]
[185.35122681 363.66793823]
[185.96908569 357.08538818]
[180.51373291 343.11257935]
[175.05838013 329.13980103]
[169.60301208 315.16699219]
[164.14765930 301.19421387]
[158.69230652 287.22140503]
[145.41839600 289.24530029]
[132.00825500 288.44635010]
[119.05581665 284.85714722]
[107.13536072 278.63397217]
[96.77597046 270.04992676]
[88.43811035 259.48294067]
[82.49314880 247.39924622]
[79.20679474 234.33264160]
[78.72724152 220.86102295]
[81.07848358 207.58081055]
[86.15914154 195.08050537]
[93.74680328 183.91465759]
[103.50778961 174.57920837]
[115.01179504 167.48954773]
[103.59110260 157.92832947]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[73.92199707 91.81629181]
[59.14788055 88.84799194]
[45.65605927 82.16168976]
[34.36356354 72.21854401]
[26.03619003 59.70085144]
[21.23659325 45.46523285]
[20.28625107 30.48399734]
[23.24395180 15.77874660]
[29.90219116 2.35070443]
[39.80171585 -8.88745403]
[52.26320648 -17.17363167]
[47.43721008 -31.37608719]
[42.61121368 -45.57854462]
[37.78521347 -59.78099823]
[32.95921707 -73.98345184]
[28.13321877 -88.18591309]
[23.30722237 -102.38836670]
[19.28465843 -87.93779755]
[9.07476139 -76.94879913]
[-5.04154968 -71.87635040]
[-19.91065598 -73.85363770]
[-32.21076202 -82.43894196]
[-39.19398880 -95.71427917]
[-39.30027008 -110.71390533]
[-32.50585938 -124.08686066]
[-20.32864952 -132.84559631]
[-5.48905516 -135.03340149]
[8.69771767 -130.16148376]
[19.06231880 -119.31825256]
[16.61659241 -134.11752319]
[14.17086411 -148.91679382]
[9.68410873 -156.87335205]
[11.80060482 -163.95448303]
[9.57548714 -178.78851318]
[7.35036993 -193.62255859]
[5.12525320 -208.45660400]
[2.30116892 -211.75486755]
[0.82227314 -215.41238403]
[0.63632280 -218.96214294]
[1.54477596 -222.00209045]
[3.23664570 -224.23721313]
[1.89841163 -239.17739868]
[0.56017745 -254.11758423]
[-0.77805674 -269.05776978]
[-9.71569443 -282.11260986]
[-3.14471889 -295.47943115]
[-4.48295307 -310.41961670]
[-19.30115700 -313.35177612]
[-32.69239807 -320.34112549]
[-43.57110596 -330.82113647]
[-51.05539322 -343.94219971]
[-54.53854752 -358.64065552]
[-53.73820114 -373.72494507]
[-48.71923065 -387.97229004]
[-39.88850784 -400.22769165]
[-27.96189880 -409.49768066]
[-13.90623665 -415.03076172]
[1.13904560 -416.37841797]
[15.95429516 -413.43136597]
[29.33850670 -406.42855835]
[40.20668411 -395.93762207]
[47.67778778 -382.80905151]
[51.14617157 -368.10711670]
[50.33066940 -353.02362061]
[45.29739380 -338.78134155]
[36.45436096 -326.53482056]
[24.51844406 -317.27679443]
[10.45723152 -311.75784302]
[11.79546642 -296.81765747]
[20.63738441 -284.83142090]
[14.16212845 -270.39599609]
[15.50036240 -255.45581055]
[16.83859634 -240.51562500]
[18.17683029 -225.57543945]
[19.95929718 -210.68171692]
[22.18441391 -195.84768677]
[24.40953064 -181.01364136]
[26.63464737 -166.17959595]
[28.97013474 -151.36251831]
[31.41586304 -136.56324768]
[33.86159134 -121.76398468]
[37.50967789 -107.21436310]
[42.33567429 -93.01190948]
[47.16167450 -78.80944824]
[51.98767090 -64.60699463]
[56.81366730 -50.40454102]
[61.63966751 -36.20208359]
[66.46566010 -21.99962997]
[81.39570618 -23.02109909]
[96.09267426 -20.14083672]
[109.55357361 -13.54928303]
[120.85818481 -3.69036889]
[129.23194885 8.76838303]
[134.09909058 22.98105049]
[135.12213135 37.98075485]
[132.22535706 52.74541855]
[125.60033417 66.26743317]
[115.69326019 77.62240601]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[132.44537354 148.12362671]
[129.21424866 162.66354370]
[145.82423401 161.36430359]
[162.19921875 164.38005066]
[177.23782349 171.50253296]
[189.92999268 182.24746704]
[199.42477417 195.88746643]
[205.08735657 211.50126648]
[206.54159546 228.03599548]
[203.69488525 244.37808228]
[196.74411011 259.42837524]
[186.16203308 272.17593384]
[172.66510010 281.76605225]
[178.12045288 295.73883057]
[183.57582092 309.71163940]
[189.03117371 323.68444824]
[194.48652649 337.65722656]
[199.94189453 351.63003540]
[205.60467529 365.52005005]
[211.47363281 379.32424927]
[227.54983521 379.07119751]
[242.45649719 384.99249268]
[253.92196655 396.15399170]
[260.21121216 410.82534790]
[260.38836670 426.74841309]
[254.45593262 441.48458862]
[243.34970093 452.78848267]
[249.42353821 466.50375366]
[255.49737549 480.21902466]
[261.57119751 493.93426514]
[274.23382568 503.41946411]
[272.31274414 518.18969727]
[278.38659668 531.90496826]
[293.04785156 528.52197266]
[308.08438110 527.97509766]
[322.95263672 530.28405762]
[337.11514282 535.36541748]
[350.05993652 543.03540039]
[361.31906128 553.01678467]
[370.48553467 564.94879150]
[377.22793579 578.40008545]
[381.30258179 592.88433838]
[382.56216431 607.87799072]
[380.96115112 622.83905029]
[376.55740356 637.22668457]
[369.51013184 650.52075195]
[360.07409668 662.24066162]
[348.59036255 671.96289062]
[335.47412109 679.33581543]
[321.19946289 684.09301758]
[306.28244019 686.06243896]
[291.26226807 685.17297363]
[276.68194580 681.45672607]
[263.06851196 675.04803467]
[250.91410828 666.17858887]
[240.65811157 655.16900635]
[232.67123413 642.41729736]
[227.24224854 628.38439941]
[224.56736755 613.57757568]
[224.74330139 598.53210449]
[227.76368713 583.79193115]
[233.51933289 569.88977051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[5 178]
[6 177]
[7 176]
[8 175]
[16 168]
[17 167]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[39 150]
[41 148]
[42 147]
[43 146]
[45 144]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[74 126]
[75 125]
[76 124]
[78 123]
[79 122]
[80 121]
[81 120]
[86 119]
[87 118]
[88 117]
[89 116]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
