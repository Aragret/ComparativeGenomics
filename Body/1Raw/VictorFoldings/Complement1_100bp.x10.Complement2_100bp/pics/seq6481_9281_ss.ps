%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[116.68919373 752.16888428]
[105.17439270 742.53350830]
[94.74902344 731.72869873]
[85.53121948 719.87689209]
[77.62542725 707.11248779]
[71.12121582 693.58001709]
[66.09228516 679.43286133]
[62.59562683 664.83135986]
[60.67085266 649.94079590]
[60.33977127 634.93005371]
[61.60613632 619.96917725]
[64.45559692 605.22766113]
[68.85587311 590.87249756]
[74.75709534 577.06646729]
[82.09240723 563.96588135]
[90.77869415 551.71923828]
[100.71752930 540.46527100]
[111.79629517 530.33148193]
[123.88946533 521.43273926]
[136.86001587 513.86993408]
[150.56098938 507.72860718]
[164.83711243 503.07843018]
[161.73301697 488.40313721]
[151.52940369 477.55252075]
[156.24340820 462.44992065]
[153.13929749 447.77459717]
[150.03518677 433.09930420]
[146.93107605 418.42401123]
[143.82696533 403.74868774]
[131.41101074 391.34664917]
[137.26414490 373.88748169]
[133.94187927 359.26000977]
[123.87683868 352.55020142]
[120.98929596 340.39102173]
[127.35788727 329.17480469]
[124.25377655 314.49948120]
[112.57711792 309.05108643]
[106.07347870 297.70272827]
[107.31164551 284.48617554]
[116.06267548 274.24734497]
[113.17740631 259.52743530]
[110.29212952 244.80755615]
[107.40686035 230.08766174]
[104.52159119 215.36776733]
[101.63631439 200.64787292]
[98.75104523 185.92799377]
[91.86994934 199.25654602]
[78.92874908 206.84109497]
[63.93740845 206.33146667]
[51.54116058 197.88557434]
[45.58111572 184.12048340]
[47.90406036 169.30143738]
[57.79020309 158.02029419]
[72.17621613 153.77264404]
[86.60443878 157.87464905]
[96.60423279 169.05549622]
[95.71141815 154.08209229]
[87.23029327 141.83792114]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[81.78274536 64.16175079]
[81.34737396 51.67198563]
[89.27632141 42.53642273]
[80.93052673 29.09550476]
[88.09180450 16.03543854]
[87.42201996 1.05040038]
[83.91254425 -7.38294888]
[86.85549927 -14.16238880]
[86.40888977 -29.15573883]
[85.96228790 -44.14908981]
[85.51567841 -59.14243698]
[85.06907654 -74.13578796]
[76.92432404 -87.69947815]
[84.27925110 -100.65147400]
[72.25005341 -91.69053650]
[57.70590591 -95.36038971]
[51.36821747 -108.95574188]
[57.90889359 -122.45461273]
[72.50639343 -125.90613556]
[84.39923096 -116.76744843]
[85.06901550 -131.75248718]
[85.73880005 -146.73751831]
[86.40858459 -161.72256470]
[76.02201843 -173.33105469]
[76.91474152 -188.51846313]
[88.04566956 -198.34893799]
[88.71546173 -213.33396912]
[89.38524628 -228.31901550]
[90.05503082 -243.30404663]
[90.72481537 -258.28909302]
[91.39459991 -273.27413940]
[92.06438446 -288.25915527]
[92.73416901 -303.24420166]
[78.39012909 -307.95071411]
[65.84844971 -316.35360718]
[56.03980255 -327.82937622]
[49.69205475 -341.52639771]
[47.27624893 -356.42828369]
[48.97166061 -371.42922974]
[54.65246964 -385.41604614]
[63.89713287 -397.35083008]
[76.01962280 -406.34793091]
[90.12038422 -411.73968506]
[105.15303802 -413.12603760]
[120.00205994 -410.40408325]
[133.56555176 -403.77578735]
[144.83703613 -393.73306274]
[152.98005676 -381.02111816]
[157.39038086 -366.58325195]
[157.74070740 -351.49087524]
[154.00505066 -336.86392212]
[146.46063232 -323.78784180]
[135.66728210 -313.23294067]
[122.42594147 -305.98245239]
[107.71920776 -302.57443237]
[107.04942322 -287.58938599]
[106.37963867 -272.60433960]
[105.70985413 -257.61929321]
[105.04006958 -242.63426208]
[104.37028503 -227.64923096]
[103.70050049 -212.66418457]
[103.03070831 -197.67915344]
[113.24021912 -186.89483643]
[112.77442932 -171.68833923]
[101.39362335 -161.05278015]
[100.72383881 -146.06773376]
[100.05405426 -131.08270264]
[99.38426971 -116.09766388]
[99.27260590 -101.09807587]
[107.38541412 -88.60681915]
[100.06242371 -74.58239746]
[100.50903320 -59.58904266]
[100.95563507 -44.59569550]
[101.40224457 -29.60234451]
[101.84884644 -14.60899448]
[102.40705872 0.38061517]
[103.07684326 15.36565399]
[111.37473297 27.73474312]
[104.26136017 41.86663818]
[114.48901367 56.12714005]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[117.65086365 140.02403259]
[110.68482208 153.18927002]
[111.57764435 168.16267395]
[113.47093201 183.04270935]
[116.35620880 197.76260376]
[119.24147797 212.48249817]
[122.12675476 227.20239258]
[125.01202393 241.92228699]
[127.89729309 256.64218140]
[130.78256226 271.36206055]
[145.47689819 280.85394287]
[148.69660950 297.70471191]
[138.92907715 311.39538574]
[142.03318787 326.07067871]
[154.65562439 339.47796631]
[148.56935120 355.93774414]
[151.89160156 370.56521606]
[162.36958313 378.08685303]
[164.83555603 390.33847046]
[158.50225830 400.64459229]
[161.60636902 415.31988525]
[164.71047974 429.99520874]
[167.81459045 444.67050171]
[170.91870117 459.34579468]
[181.34432983 471.24609375]
[176.40830994 485.29901123]
[179.51242065 499.97433472]
[194.44877625 498.44549561]
[209.46302795 498.51296997]
[224.38504028 500.17602539]
[239.04573059 503.41577148]
[253.27899170 508.19555664]
[266.92355347 514.46118164]
[279.82482910 522.14166260]
[291.83657837 531.14996338]
[302.82275391 541.38397217]
[312.65887451 552.72784424]
[321.23345947 565.05297852]
[328.44934082 578.21972656]
[334.22482300 592.07885742]
[338.49438477 606.47338867]
[341.20971680 621.24023438]
[342.33999634 636.21203613]
[341.87246704 651.21911621]
[339.81240845 666.09155273]
[336.18313599 680.66070557]
[331.02578735 694.76153564]
[324.39880371 708.23431396]
[316.37728882 720.92633057]
[307.05212402 732.69378662]
[296.52896118 743.40338135]
[284.92703247 752.93371582]
[272.37780762 761.17681885]
[259.02346802 768.03930664]
[245.01533508 773.44342041]
[230.51213074 777.32794189]
[215.67819214 779.64880371]
[200.68159485 780.37976074]
[185.69227600 779.51251221]
[170.88005066 777.05682373]
[156.41276550 773.04064941]
[142.45434570 767.50939941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 175]
[23 174]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[31 165]
[32 164]
[35 162]
[36 161]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[56 151]
[57 150]
[59 148]
[60 147]
[62 145]
[63 144]
[66 142]
[68 140]
[69 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[77 132]
[83 131]
[84 130]
[85 129]
[86 128]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
