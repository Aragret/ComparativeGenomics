%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[241.72001648 316.41946411]
[248.62194824 303.08700562]
[256.83731079 290.52120972]
[266.28179932 278.85104370]
[255.63578796 268.28399658]
[244.91140747 257.79650879]
[234.10925293 247.38912964]
[223.30709839 236.98176575]
[211.80082703 240.85231018]
[199.66902161 239.45518494]
[189.22097778 232.99458313]
[182.47174072 222.64433289]
[180.75355530 210.33514404]
[184.45324707 198.39445496]
[173.96574402 187.67007446]
[163.47824097 176.94569397]
[152.99073792 166.22131348]
[142.50323486 155.49693298]
[130.41500854 155.04835510]
[121.58992767 146.19952393]
[121.14517975 133.30902100]
[110.81851196 122.42969513]
[100.49183655 111.55035400]
[102.88589478 126.35807800]
[98.21183777 140.61126709]
[87.51388550 151.12571716]
[73.18196869 155.55247498]
[58.41788483 152.90260315]
[46.51996613 143.76808167]
[40.14623642 130.18959045]
[40.72060394 115.20058441]
[48.11475372 102.14966583]
[60.67681122 93.95243073]
[75.60038757 92.44016266]
[89.55152893 97.95072937]
[81.13690948 85.53323364]
[66.99017334 78.44942474]
[66.25568390 63.57293701]
[57.84106827 51.15544128]
[49.42644882 38.73794556]
[41.01183319 26.32044983]
[32.59721375 13.90295506]
[18.45047569 6.81914473]
[17.71599197 -8.05733967]
[9.30137348 -20.47483635]
[0.88675451 -32.89233017]
[-15.59188557 -31.53354836]
[-30.42224312 -38.62974548]
[-39.59745026 -52.15869904]
[-40.69161987 -68.37469482]
[-33.50059891 -82.84541321]
[-42.09916306 -95.13625336]
[-50.69772339 -107.42708588]
[-59.29628754 -119.71792603]
[-67.89485168 -132.00875854]
[-76.49341583 -144.29960632]
[-85.09197998 -156.59043884]
[-98.26728058 -149.38803101]
[-112.15495300 -143.67875671]
[-126.58641052 -139.53192139]
[-141.38647461 -136.99786377]
[-156.37547302 -136.10734558]
[-171.37145996 -136.87118530]
[-186.19239807 -139.28007507]
[-200.65838623 -143.30482483]
[-214.59381104 -148.89653015]
[-227.82949829 -155.98735046]
[-240.20478821 -164.49119568]
[-251.56947327 -174.30482483]
[-261.78555298 -185.30911255]
[-270.72906494 -197.37049866]
[-278.29141235 -210.34254456]
[-284.38079834 -224.06781006]
[-288.92330933 -238.37963867]
[-291.86380005 -253.10433960]
[-293.16659546 -268.06314087]
[-292.81582642 -283.07449341]
[-290.81579590 -297.95611572]
[-287.19079590 -312.52740479]
[-281.98480225 -326.61148071]
[-275.26098633 -340.03732300]
[-267.10104370 -352.64202881]
[-257.60394287 -364.27252197]
[-246.88502502 -374.78765869]
[-235.07440186 -384.05978394]
[-222.31542969 -391.97631836]
[-208.76300049 -398.44122314]
[-194.58161926 -403.37597656]
[-179.94345093 -406.72067261]
[-165.02616882 -408.43472290]
[-150.01086426 -408.49731445]
[-135.07981873 -406.90768433]
[-120.41426086 -403.68511963]
[-106.19223785 -398.86877441]
[-92.58638000 -392.51708984]
[-79.76185608 -384.70718384]
[-67.87433624 -375.53384399]
[-57.06813431 -365.10845947]
[-47.47441864 -353.55752563]
[-39.20965195 -341.02130127]
[-32.37416077 -327.65194702]
[-27.05092430 -313.61178589]
[-23.30455589 -299.07122803]
[-21.18053818 -284.20678711]
[-20.70465279 -269.19888306]
[-21.88267708 -254.22975159]
[-24.70030975 -239.48104858]
[-29.12334633 -225.13183594]
[-35.09809875 -211.35629272]
[-42.55203629 -198.32165527]
[-51.39467621 -186.18612671]
[-61.51867676 -175.09704590]
[-72.80113983 -165.18901062]
[-64.20257568 -152.89816284]
[-55.60401535 -140.60733032]
[-47.00545120 -128.31649780]
[-38.40688705 -116.02565002]
[-29.80832291 -103.73481750]
[-21.20975876 -91.44397736]
[-7.71179819 -93.52294922]
[5.42815781 -89.56438446]
[15.62936306 -80.28620911]
[20.86266708 -67.45691681]
[20.05399704 -53.55863190]
[13.30424976 -41.30694962]
[21.71886826 -28.88945389]
[30.13348770 -16.47195816]
[43.67835617 -10.27633095]
[45.01470947 5.48833609]
[53.42932892 17.90583229]
[61.84394455 30.32332611]
[70.25856781 42.74082184]
[78.67317963 55.15831757]
[92.21804810 61.35394669]
[93.55440521 77.11861420]
[101.96902466 89.53610992]
[111.37117767 101.22368622]
[121.69784546 112.10302734]
[132.02450562 122.98236084]
[149.79759216 127.79891205]
[153.22761536 145.00942993]
[163.71511841 155.73381042]
[174.20262146 166.45819092]
[184.69012451 177.18257141]
[195.17762756 187.90695190]
[213.03004456 184.73696899]
[229.07089233 192.84687805]
[236.96257019 208.82099915]
[233.71447754 226.17961121]
[244.51663208 236.58697510]
[255.31878662 246.99435425]
[263.67007446 250.69488525]
[266.20285034 257.63800049]
[276.84884644 268.20504761]
[288.44836426 258.67395020]
[300.95266724 250.36526489]
[314.23336792 243.36427307]
[328.15420532 237.74281311]
[342.57235718 233.55854797]
[357.33984375 230.85444641]
[372.30514526 229.65823364]
[387.31466675 229.98220825]
[402.21441650 231.82301331]
[416.85150146 235.16178894]
[431.07568359 239.96424866]
[444.74099731 246.18113708]
[457.70727539 253.74864197]
[469.84140015 262.58911133]
[481.01889038 272.61181641]
[491.12503052 283.71392822]
[500.05609131 295.78152466]
[507.72048950 308.69076538]
[514.03955078 322.30914307]
[518.94836426 336.49697876]
[522.39666748 351.10861206]
[524.34899902 365.99417114]
[524.78533936 381.00085449]
[523.70123291 395.97470093]
[521.10778809 410.76202393]
[517.03161621 425.21109009]
[511.51458740 439.17364502]
[504.61322021 452.50640869]
[496.39843750 465.07254028]
[486.95443726 476.74313354]
[476.37823486 487.39837646]
[464.77828979 496.92898560]
[452.27362061 505.23709106]
[438.99261475 512.23748779]
[425.07153320 517.85839844]
[410.65319824 522.04199219]
[395.88558960 524.74542236]
[380.92022705 525.94097900]
[365.91070557 525.61639404]
[351.01104736 523.77490234]
[336.37414551 520.43548584]
[322.15017700 515.63238525]
[308.48510742 509.41491699]
[295.51916504 501.84683228]
[283.38543701 493.00582886]
[272.20840454 482.98263550]
[262.10275269 471.88006592]
[253.17218018 459.81207275]
[245.50836182 446.90252686]
[239.18992615 433.28384399]
[234.28169250 419.09579468]
[230.83404541 404.48400879]
[228.88237000 389.59838867]
[228.44668579 374.59167480]
[229.53144836 359.61788940]
[232.12553406 344.83065796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 154]
[5 153]
[6 151]
[7 150]
[8 149]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[21 139]
[22 138]
[23 137]
[35 136]
[36 135]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[44 127]
[45 126]
[46 125]
[51 119]
[52 118]
[53 117]
[54 116]
[55 115]
[56 114]
[57 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
