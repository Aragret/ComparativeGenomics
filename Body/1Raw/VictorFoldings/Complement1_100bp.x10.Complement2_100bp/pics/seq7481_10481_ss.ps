%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[56.14276505 905.90435791]
[41.14328003 905.59619141]
[26.17369843 904.60070801]
[11.26549435 902.91998291]
[-3.54997587 900.55749512]
[-18.24155617 897.51831055]
[-32.77835083 893.80871582]
[-47.12978745 889.43652344]
[-61.26568222 884.41101074]
[-75.15631104 878.74267578]
[-88.77246094 872.44348145]
[-102.08549500 865.52667236]
[-115.06742096 858.00677490]
[-127.69092560 849.89959717]
[-139.92947388 841.22216797]
[-151.75732422 831.99279785]
[-163.14959717 822.23083496]
[-174.08235168 811.95684814]
[-184.53256226 801.19244385]
[-194.47828674 789.96026611]
[-203.89859009 778.28393555]
[-212.77366638 766.18792725]
[-221.08485413 753.69781494]
[-228.81466675 740.83978271]
[-235.94685364 727.64086914]
[-242.46641541 714.12884521]
[-248.35964966 700.33209229]
[-253.61415100 686.27972412]
[-258.21887207 672.00122070]
[-262.16412354 657.52661133]
[-265.44161987 642.88635254]
[-268.04443359 628.11120605]
[-269.96716309 613.23223877]
[-271.20568848 598.28082275]
[-271.75744629 583.28833008]
[-271.62127686 568.28631592]
[-270.79745483 553.30627441]
[-269.28771973 538.37976074]
[-267.09524536 523.53820801]
[-264.22463989 508.81274414]
[-260.68191528 494.23440552]
[-256.47457886 479.83377075]
[-251.61143494 465.64120483]
[-246.10272217 451.68649292]
[-239.96002197 437.99905396]
[-233.19625854 424.60760498]
[-225.82565308 411.54031372]
[-217.86370850 398.82470703]
[-209.32716370 386.48748779]
[-200.23397827 374.55462646]
[-190.60328674 363.05117798]
[-180.45530701 352.00137329]
[-169.81141663 341.42843628]
[-158.69396973 331.35461426]
[-147.12637329 321.80108643]
[-135.13293457 312.78793335]
[-122.73889160 304.33410645]
[-109.97029877 296.45739746]
[-96.85401154 289.17437744]
[-83.41761017 282.50036621]
[-69.68936157 276.44937134]
[-55.69812775 271.03411865]
[-41.47333527 266.26602173]
[-27.04489899 262.15509033]
[-12.44316292 258.70999146]
[2.30116606 255.93795776]
[17.15707970 253.84480286]
[32.09333420 252.43495178]
[47.07852554 251.71136475]
[62.08112717 251.67555237]
[77.06960297 252.32759094]
[78.40783691 237.38740540]
[79.74607086 222.44723511]
[81.08430481 207.50704956]
[74.51332855 194.14022827]
[83.45096588 181.08538818]
[84.78919983 166.14520264]
[86.12743378 151.20501709]
[87.46566772 136.26483154]
[85.77379608 134.02970886]
[84.86534119 130.98976135]
[85.05129242 127.43999481]
[86.53018951 123.78248596]
[89.35427094 120.48422241]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[98.84111023 61.01396179]
[101.28683472 46.21469116]
[103.73255920 31.41542053]
[98.34889984 16.53836632]
[108.05782318 5.24296474]
[110.50354767 -9.55630589]
[112.94927979 -24.35557747]
[115.28475952 -39.17264557]
[117.50988007 -54.00668716]
[119.73500061 -68.84072876]
[121.96011353 -83.67477417]
[108.12203979 -89.68894196]
[96.31267548 -99.08049011]
[87.33719635 -111.20910645]
[81.80757141 -125.24782562]
[80.10081482 -140.23947144]
[82.33329010 -155.16188049]
[88.35279846 -168.99763489]
[97.74890900 -180.80337524]
[109.88098907 -189.77416992]
[123.92183685 -195.29837036]
[138.91413879 -196.99934387]
[153.83569336 -194.76109314]
[167.66911316 -188.73625183]
[179.47122192 -179.33558655]
[188.43733215 -167.20004272]
[193.95611572 -153.15705872]
[195.65130615 -138.16409302]
[193.40730286 -123.24341583]
[187.37710571 -109.41231537]
[177.97187805 -97.61383820]
[165.83288574 -88.65241241]
[151.78776550 -83.13905334]
[136.79415894 -81.44966125]
[134.56904602 -66.61561584]
[132.34391785 -51.78157043]
[130.11880493 -36.94752884]
[132.23530579 -29.86640930]
[127.74855042 -21.90984917]
[125.30281830 -7.11057854]
[122.85709381 7.68869209]
[128.41569519 21.50720406]
[118.53182983 33.86114883]
[116.08610535 48.66041946]
[113.64038086 63.45969009]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[104.18831635 122.70934296]
[102.40585327 137.60305786]
[101.06761932 152.54324341]
[99.72938538 167.48342896]
[98.39115143 182.42361450]
[104.86640930 196.85903931]
[96.02449036 208.84527588]
[94.68625641 223.78546143]
[93.34802246 238.72564697]
[92.00978851 253.66583252]
[106.87554169 255.68791199]
[121.63295746 258.38940430]
[136.25099182 261.76464844]
[150.69892883 265.80651855]
[164.94636536 270.50653076]
[178.96333313 275.85482788]
[192.72036743 281.84008789]
[206.18852234 288.44979858]
[219.33949280 295.67001343]
[232.14559937 303.48556519]
[244.57992554 311.88000488]
[256.61633301 320.83572388]
[268.22949219 330.33383179]
[279.39495850 340.35437012]
[290.08929443 350.87628174]
[300.29000854 361.87741089]
[309.97561646 373.33465576]
[319.12576294 385.22390747]
[327.72119141 397.52017212]
[335.74386597 410.19757080]
[343.17687988 423.22943115]
[350.00457764 436.58840942]
[356.21267700 450.24633789]
[361.78805542 464.17453003]
[366.71902466 478.34368896]
[370.99517822 492.72399902]
[374.60757446 507.28527832]
[377.54855347 521.99682617]
[379.81198120 536.82775879]
[381.39309692 551.74682617]
[382.28854370 566.72277832]
[382.49645996 581.72393799]
[382.01638794 596.71893311]
[380.84936523 611.67608643]
[378.99783325 626.56408691]
[376.46566772 641.35150146]
[373.25823975 656.00726318]
[369.38226318 670.50054932]
[364.84585571 684.80096436]
[359.65863037 698.87829590]
[353.83145142 712.70306396]
[347.37658691 726.24609375]
[340.30758667 739.47894287]
[332.63934326 752.37384033]
[324.38800049 764.90356445]
[315.57086182 777.04180908]
[306.20648193 788.76312256]
[296.31460571 800.04272461]
[285.91598511 810.85699463]
[275.03250122 821.18310547]
[263.68701172 830.99945068]
[251.90344238 840.28527832]
[239.70652771 849.02111816]
[227.12193298 857.18853760]
[214.17613220 864.77044678]
[200.89631653 871.75085449]
[187.31045532 878.11511230]
[173.44708252 883.84979248]
[159.33538818 888.94287109]
[145.00502014 893.38360596]
[130.48612976 897.16265869]
[115.80925751 900.27209473]
[101.00524902 902.70538330]
[86.10525513 904.45745850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 146]
[72 145]
[73 144]
[74 143]
[76 141]
[77 140]
[78 139]
[79 138]
[84 137]
[85 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[93 129]
[94 128]
[95 127]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
