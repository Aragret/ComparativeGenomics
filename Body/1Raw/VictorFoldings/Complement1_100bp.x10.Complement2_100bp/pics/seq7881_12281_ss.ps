%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[129.44314575 189.25006104]
[132.03146362 174.46804810]
[135.70440674 159.91755676]
[140.44190979 145.67805481]
[146.21810913 131.82733154]
[132.83782959 125.04734039]
[119.45755768 118.26734161]
[106.07728577 111.48735046]
[92.50107574 105.10874939]
[78.74097443 99.13718414]
[64.98087311 93.16562653]
[51.22076797 87.19406128]
[37.46066284 81.22249603]
[23.70056152 75.25093079]
[9.94045830 69.27937317]
[-3.81964469 63.30780792]
[-10.62900925 76.67852783]
[-18.24857521 89.60469818]
[-26.64943886 102.03728485]
[-35.79973221 113.92912292]
[-45.66474533 125.23509979]
[-56.20705414 135.91233826]
[-67.38667297 145.92031860]
[-79.16118622 155.22109985]
[-91.48593903 163.77938843]
[-104.31416321 171.56271362]
[-117.59721375 178.54154968]
[-131.28469849 184.68943787]
[-145.32469177 189.98304749]
[-159.66392517 194.40229797]
[-174.24803162 197.93043518]
[-189.02165222 200.55406189]
[-203.92878723 202.26322937]
[-218.91285706 203.05145264]
[-233.91702271 202.91575623]
[-248.88438416 201.85664368]
[-263.75814819 199.87811279]
[-278.48193359 196.98771667]
[-292.99981689 193.19636536]
[-307.25677490 188.51847839]
[-321.19873047 182.97180176]
[-334.77276611 176.57734680]
[-347.92742920 169.35939026]
[-360.61279297 161.34532166]
[-372.78073120 152.56552124]
[-384.38510132 143.05329895]
[-395.38186646 132.84474182]
[-405.72933960 121.97856903]
[-415.38824463 110.49600983]
[-424.32192993 98.44061279]
[-432.49655151 85.85811615]
[-439.88107300 72.79624939]
[-446.44747925 59.30455399]
[-452.17089844 45.43421173]
[-457.02954102 31.23783684]
[-461.00506592 16.76928520]
[-464.08233643 2.08343911]
[-466.24969482 -12.76399231]
[-467.49890137 -27.71668816]
[-467.82525635 -42.71792603]
[-467.22747803 -57.71080017]
[-465.70785522 -72.63844299]
[-463.27218628 -87.44422150]
[-459.92965698 -102.07196808]
[-455.69296265 -116.46620941]
[-450.57815552 -130.57232666]
[-444.60470581 -144.33682251]
[-437.79519653 -157.70747375]
[-430.17550659 -170.63357544]
[-421.77453613 -183.06607056]
[-412.62411499 -194.95782471]
[-402.75900269 -206.26370239]
[-392.21658325 -216.94084167]
[-381.03686523 -226.94871521]
[-369.26226807 -236.24937439]
[-356.93740845 -244.80754089]
[-344.10910034 -252.59072876]
[-330.82598877 -259.56945801]
[-317.13845825 -265.71719360]
[-303.09841919 -271.01068115]
[-288.75912476 -275.42977905]
[-274.17498779 -278.95776367]
[-259.40133667 -281.58126831]
[-244.49418640 -283.29028320]
[-229.51011658 -284.07836914]
[-214.50595093 -283.94250488]
[-199.53858948 -282.88323975]
[-184.66484070 -280.90457153]
[-169.94110107 -278.01403809]
[-155.42324829 -274.22253418]
[-141.16632080 -269.54452515]
[-127.22443390 -263.99768066]
[-113.65045166 -257.60311890]
[-100.49587250 -250.38502502]
[-87.81060028 -242.37083435]
[-75.64274597 -233.59091187]
[-64.03847504 -224.07856750]
[-53.04180145 -213.86990356]
[-42.69444275 -203.00363159]
[-33.03564835 -191.52098083]
[-24.10206223 -179.46549988]
[-15.92756557 -166.88291931]
[-8.54317093 -153.82098389]
[-1.97689056 -140.32922363]
[3.74636841 -126.45881653]
[8.60489559 -112.26239777]
[12.58025932 -97.79380798]
[15.65738201 -83.10793304]
[17.82458878 -68.26047516]
[19.07365990 -53.30776978]
[19.39985657 -38.30653000]
[18.80194283 -23.31365967]
[17.28218460 -8.38603497]
[14.84634686 6.41971922]
[11.50367165 21.04743767]
[7.26683855 35.44163513]
[2.15191817 49.54770660]
[15.91202164 55.51926804]
[29.67212486 61.49082947]
[43.43222809 67.46239471]
[57.19232941 73.43395996]
[70.95243073 79.40551758]
[84.71253967 85.37708282]
[98.47264099 91.34864807]
[101.39228821 90.47391510]
[104.69474792 90.64219666]
[107.99430847 91.99731445]
[110.85754395 94.53860474]
[112.85727692 98.10707855]
[126.23754883 104.88706970]
[139.61782837 111.66706085]
[152.99809265 118.44705200]
[160.75109863 105.59799957]
[169.43185425 93.35661316]
[178.99298096 81.78975677]
[189.38223267 70.96060181]
[200.54289246 60.92830276]
[212.41398621 51.74764252]
[224.93066406 43.46876907]
[238.02459717 36.13690186]
[251.62423706 29.79207802]
[265.65533447 24.46895409]
[280.04122925 20.19660568]
[294.70339966 16.99836540]
[309.56167603 14.89170170]
[324.53500366 13.88811970]
[339.54153442 13.99310112]
[354.49932861 15.20607281]
[369.32672119 17.52041054]
[383.94268799 20.92347145]
[398.26739502 25.39667130]
[412.22265625 30.91557884]
[425.73220825 37.45005035]
[438.72225952 44.96439743]
[451.12188721 53.41757965]
[462.86337280 62.76342392]
[473.88256836 72.95088959]
[484.11932373 83.92433929]
[493.51766968 95.62382507]
[502.02633667 107.98546600]
[509.59878540 120.94173431]
[516.19372559 134.42187500]
[521.77508545 148.35224915]
[526.31243896 162.65678406]
[529.78094482 177.25735474]
[532.16168213 192.07421875]
[533.44165039 207.02644348]
[533.61389160 222.03234863]
[532.67736816 237.01000977]
[530.63732910 251.87760925]
[527.50482178 266.55392456]
[523.29693604 280.95883179]
[518.03674316 295.01364136]
[511.75292969 308.64157104]
[504.47979736 321.76821899]
[496.25708008 334.32186890]
[487.12969971 346.23397827]
[477.14749146 357.43945312]
[466.36499023 367.87713623]
[454.84109497 377.48999023]
[442.63873291 386.22549438]
[429.82452393 394.03598022]
[416.46850586 400.87878418]
[402.64361572 406.71652222]
[388.42532349 411.51727295]
[373.89129639 415.25488281]
[359.12094116 417.90890503]
[344.19491577 419.46484375]
[329.19473267 419.91418457]
[314.20233154 419.25448608]
[299.29959106 417.48937988]
[284.56790161 414.62847900]
[270.08773804 410.68740845]
[255.93818665 405.68771362]
[242.19650269 399.65667725]
[228.93775940 392.62722778]
[216.23437500 384.63778687]
[204.15571594 375.73199463]
[192.76776123 365.95846558]
[182.13272095 355.37060547]
[172.30865479 344.02621460]
[163.34924316 331.98727417]
[155.30339050 319.31951904]
[148.21507263 306.09216309]
[142.12300110 292.37744141]
[137.06042480 278.25024414]
[133.05500793 263.78775024]
[130.12863159 249.06893921]
[128.29727173 234.17419434]
[127.57093811 219.18487549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 132]
[6 131]
[7 130]
[8 129]
[9 124]
[10 123]
[11 122]
[12 121]
[13 120]
[14 119]
[15 118]
[16 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
