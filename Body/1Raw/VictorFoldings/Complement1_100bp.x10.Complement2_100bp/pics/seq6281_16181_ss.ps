%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[298.64593506 127.46219635]
[296.03823853 142.23019409]
[292.33422852 156.76202393]
[287.55459595 170.97642517]
[281.72610474 184.79388428]
[274.88131714 198.13716125]
[267.05853271 210.93161011]
[258.30151367 223.10569763]
[248.65919495 234.59132385]
[238.18551636 245.32426453]
[226.93905640 255.24449158]
[214.98271179 264.29653931]
[202.38333130 272.42977905]
[189.21139526 279.59872437]
[175.54055786 285.76330566]
[161.44726562 290.88900757]
[147.01033020 294.94720459]
[132.31050110 297.91516113]
[117.42997742 299.77630615]
[102.45197296 300.52023315]
[87.46026611 300.14279175]
[72.53868103 298.64605713]
[57.77067184 296.03842163]
[43.23882675 292.33447266]
[29.02440834 287.55490112]
[15.20691299 281.72647095]
[1.86361253 274.88174438]
[-10.93087292 267.05902100]
[-23.10499191 258.30206299]
[-34.59066010 248.65979004]
[-45.32364655 238.18615723]
[-55.24393082 226.93974304]
[-64.29603577 214.98344421]
[-72.42932892 202.38409424]
[-79.59833527 189.21218872]
[-85.76296234 175.54138184]
[-90.88873291 161.44810486]
[-94.94698334 147.01118469]
[-97.91501617 132.31137085]
[-99.77622986 117.43085480]
[-100.52022552 102.45285797]
[-100.14283752 87.46115112]
[-98.64617157 72.53955841]
[-96.03860474 57.77153778]
[-92.33471680 43.23967361]
[-87.55522156 29.02523613]
[-81.72684479 15.20771599]
[-74.88218689 1.86438453]
[-67.05951691 -10.93013573]
[-58.30259323 -23.10429192]
[-48.66038132 -34.59000397]
[-38.18680191 -45.32304001]
[-26.94043159 -55.24337006]
[-14.98416424 -64.29552460]
[-2.38486123 -72.42887878]
[10.78701591 -79.59794617]
[24.45780563 -85.76262665]
[38.55105591 -90.88846588]
[52.98794937 -94.94677734]
[67.68775177 -97.91487122]
[82.56826019 -99.77615356]
[97.54624939 -100.52021790]
[112.53796387 -100.14289093]
[127.45956421 -98.64629364]
[142.22760010 -96.03879547]
[156.75947571 -92.33496857]
[170.97393799 -87.55553436]
[184.79148865 -81.72721863]
[198.13484192 -74.88262177]
[210.92939758 -67.06000519]
[223.10359192 -58.30313492]
[234.58934021 -48.66097260]
[245.32243347 -38.18744278]
[255.24281311 -26.94111824]
[264.29501343 -14.98488903]
[276.89733887 -23.12010574]
[289.49963379 -31.25532150]
[302.10195923 -39.39053726]
[314.70425415 -47.52575302]
[327.30657959 -55.66096878]
[339.90887451 -63.79618454]
[352.51119995 -71.93139648]
[365.11352539 -80.06661224]
[377.71582031 -88.20183563]
[390.31814575 -96.33705139]
[382.92031860 -109.39070129]
[376.28680420 -122.84887695]
[370.43969727 -136.66687012]
[365.39837646 -150.79876709]
[361.17959595 -165.19764709]
[357.79736328 -179.81565857]
[355.26293945 -194.60424805]
[353.58471680 -209.51428223]
[352.76828003 -224.49624634]
[352.81634521 -239.50036621]
[353.72875977 -254.47679138]
[355.50247192 -269.37576294]
[358.13159180 -284.14782715]
[361.60739136 -298.74386597]
[365.91833496 -313.11541748]
[371.05010986 -327.21472168]
[376.98562622 -340.99496460]
[383.70523071 -354.41036987]
[391.18652344 -367.41635132]
[399.40472412 -379.96972656]
[408.33248901 -392.02877808]
[417.94015503 -403.55346680]
[428.19583130 -414.50546265]
[439.06546021 -424.84844971]
[450.51290894 -434.54803467]
[462.50015259 -443.57196045]
[474.98736572 -451.89031982]
[487.93310547 -459.47543335]
[501.29431152 -466.30212402]
[515.02661133 -472.34771729]
[529.08447266 -477.59210205]
[543.42108154 -482.01788330]
[557.98883057 -485.61035156]
[572.73937988 -488.35757446]
[587.62365723 -490.25042725]
[602.59234619 -491.28259277]
[617.59558105 -491.45071411]
[632.58355713 -490.75415039]
[647.50659180 -489.19525146]
[662.31494141 -486.77920532]
[676.95959473 -483.51403809]
[691.39172363 -479.41058350]
[705.56353760 -474.48248291]
[719.42785645 -468.74609375]
[732.93865967 -462.22048950]
[746.05108643 -454.92730713]
[758.72155762 -446.89083862]
[770.90795898 -438.13772583]
[782.56982422 -428.69708252]
[793.66845703 -418.60021973]
[804.16699219 -407.88073730]
[814.03045654 -396.57421875]
[823.22613525 -384.71823120]
[831.72351074 -372.35214233]
[839.49438477 -359.51702881]
[846.51281738 -346.25555420]
[852.75561523 -332.61175537]
[858.20202637 -318.63095093]
[862.83386230 -304.35958862]
[866.63580322 -289.84509277]
[869.59527588 -275.13565063]
[871.70233154 -260.28015137]
[872.95007324 -245.32794189]
[873.33428955 -230.32867432]
[872.85375977 -215.33218384]
[871.51000977 -200.38829041]
[869.30755615 -185.54661560]
[866.25372314 -170.85650635]
[862.35858154 -156.36671448]
[857.63513184 -142.12541199]
[852.09912109 -128.17987061]
[845.76879883 -114.57645416]
[838.66528320 -101.36032867]
[830.81219482 -88.57540131]
[822.23553467 -76.26414490]
[812.96386719 -64.46746063]
[803.02795410 -53.22452164]
[792.46087646 -42.57268906]
[781.29760742 -32.54734421]
[769.57531738 -23.18178749]
[757.33294678 -14.50713348]
[744.61108398 -6.55219746]
[731.45208740 0.65659398]
[717.89965820 7.09529448]
[703.99877930 12.74251556]
[689.79565430 17.57949638]
[675.33740234 21.59016991]
[660.67211914 24.76121330]
[645.84851074 27.08209229]
[630.91583252 28.54509544]
[615.92364502 29.14536667]
[600.92181396 28.88090706]
[585.96008301 27.75259972]
[571.08825684 25.76419067]
[556.35565186 22.92228317]
[541.81127930 19.23632240]
[527.50335693 14.71854877]
[513.47955322 9.38397217]
[499.78634644 3.25031233]
[486.46923828 -3.66205430]
[473.57250977 -11.33016586]
[461.13897705 -19.72854996]
[449.20993042 -28.82930565]
[437.82504272 -38.60220337]
[427.02206421 -49.01477814]
[416.83694458 -60.03244019]
[407.30346680 -71.61859131]
[398.45333862 -83.73473358]
[385.85104370 -75.59951782]
[373.24871826 -67.46430206]
[360.64642334 -59.32909012]
[348.04409790 -51.19387436]
[335.44180298 -43.05865860]
[322.83947754 -34.92343903]
[310.23718262 -26.78822517]
[297.63485718 -18.65300941]
[285.03253174 -10.51779366]
[272.43023682 -2.38257766]
[279.59912109 10.78939438]
[285.76364136 24.46026611]
[290.88928223 38.55358505]
[294.94738770 52.99053192]
[297.91531372 67.69037628]
[299.77639771 82.57090759]
[300.52023315 97.54891205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 203]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[81 197]
[82 196]
[83 195]
[84 194]
[85 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
