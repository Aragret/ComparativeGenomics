%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[55.16223526 615.64776611]
[43.28140640 624.82391357]
[30.57040405 632.81048584]
[17.14791679 639.53302002]
[3.13926673 644.92871094]
[-11.32474804 648.94714355]
[-26.10907745 651.55078125]
[-41.07567978 652.71539307]
[-56.08481216 652.43011475]
[-70.99633789 650.69750977]
[-85.67102814 647.53375244]
[-99.97186279 642.96850586]
[-113.76531982 637.04431152]
[-126.92260742 629.81652832]
[-139.32087708 621.35253906]
[-150.84436035 611.73150635]
[-161.38548279 601.04315186]
[-170.84579468 589.38732910]
[-179.13699341 576.87292480]
[-186.18164062 563.61663818]
[-191.91397095 549.74237061]
[-196.28047180 535.37957764]
[-199.24035645 520.66241455]
[-200.76599121 505.72830200]
[-200.84313965 490.71667480]
[-199.47108459 475.76763916]
[-196.66261292 461.02084351]
[-192.44396973 446.61395264]
[-186.85455322 432.68148804]
[-179.94651794 419.35351562]
[-171.78439331 406.75448608]
[-162.44438171 395.00207520]
[-152.01367188 384.20596313]
[-140.58969116 374.46697998]
[-128.27906799 365.87603760]
[-115.19676208 358.51336670]
[-101.46492767 352.44772339]
[-87.21176910 347.73568726]
[-72.57037354 344.42132568]
[-57.67744446 342.53555298]
[-42.67203903 342.09597778]
[-27.69425583 343.10668945]
[-12.88394547 345.55825806]
[1.62060750 349.42782593]
[6.86732578 335.37536621]
[12.11404419 321.32287598]
[17.36076164 307.27041626]
[22.60748100 293.21795654]
[27.85419846 279.16546631]
[20.22561455 264.17736816]
[25.90937233 247.99064636]
[41.84916306 240.78353882]
[46.88608170 226.65451050]
[51.92299652 212.52548218]
[48.90870667 197.93907166]
[60.83076477 187.53834534]
[65.86768341 173.40931702]
[53.56562424 166.31584167]
[42.69230270 157.18190002]
[33.58227921 146.28854370]
[26.51586151 133.97093201]
[21.71047211 120.60806274]
[19.31396866 106.61110687]
[19.40008926 92.41073608]
[21.96618462 78.44388580]
[26.93329811 65.14028931]
[34.14859772 52.90928650]
[43.39007568 42.12721634]
[54.37338257 33.12583542]
[66.76056671 26.18209839]
[80.17050171 21.50966072]
[94.19056702 19.25228882]
[108.38937378 19.47943878]
[122.33006287 22.18412209]
[127.78541565 8.21132374]
[133.24076843 -5.76147413]
[138.69613647 -19.73427200]
[138.07826233 -26.31680679]
[140.51208496 -31.45232010]
[144.52754211 -34.03790283]
[150.39649963 -47.84207916]
[156.26545715 -61.64625549]
[162.03149414 -75.49374390]
[167.69427490 -89.38376617]
[173.35707092 -103.27379608]
[179.01985168 -117.16382599]
[184.68263245 -131.05384827]
[190.34542847 -144.94387817]
[177.08775330 -151.98838806]
[164.61079407 -160.33802795]
[153.04258728 -169.90711975]
[142.50183105 -180.59747314]
[133.09671021 -192.29937744]
[124.92371368 -204.89276123]
[118.06671906 -218.24838257]
[112.59609222 -232.22920227]
[108.56797028 -246.69174194]
[106.02368927 -261.48760986]
[104.98935699 -276.46496582]
[105.47558594 -291.47012329]
[107.47738647 -306.34909058]
[110.97422028 -320.94918823]
[115.93019867 -335.12063599]
[122.29446411 -348.71792603]
[130.00172424 -361.60162354]
[138.97286987 -373.63946533]
[149.11584473 -384.70791626]
[160.32658386 -394.69342041]
[172.49003601 -403.49353027]
[185.48136902 -411.01788330]
[199.16729736 -417.18933105]
[213.40736389 -421.94448853]
[228.05543518 -425.23458862]
[242.96121216 -427.02587891]
[257.97174072 -427.29992676]
[272.93298340 -426.05398560]
[287.69140625 -423.30081177]
[302.09558105 -419.06866455]
[315.99765015 -413.40097046]
[329.25503540 -406.35586548]
[341.73159790 -398.00567627]
[353.29940796 -388.43606567]
[363.83969116 -377.74526978]
[373.24429321 -366.04293823]
[381.41674805 -353.44921875]
[388.27313232 -340.09329224]
[393.74316406 -326.11221313]
[397.77062988 -311.64950562]
[400.31427002 -296.85351562]
[401.34793091 -281.87612915]
[400.86105347 -266.87100220]
[398.85858154 -251.99211121]
[395.36111450 -237.39215088]
[390.40451050 -223.22094727]
[384.03964233 -209.62390137]
[376.33181763 -196.74057007]
[367.36013794 -184.70312500]
[357.21667480 -173.63510132]
[346.00552368 -163.65008545]
[333.84167480 -154.85052490]
[320.85000610 -147.32673645]
[307.16381836 -141.15591431]
[292.92352295 -136.40136719]
[278.27529907 -133.11190796]
[263.36944580 -131.32128906]
[248.35891724 -131.04788208]
[233.39773560 -132.29447937]
[218.63943481 -135.04830933]
[204.23545837 -139.28109741]
[198.57266235 -125.39105988]
[192.90988159 -111.50103760]
[187.24708557 -97.61100769]
[181.58430481 -83.72098541]
[175.92152405 -69.83095551]
[176.30725098 -62.45037079]
[170.06964111 -55.77729416]
[164.20066833 -41.97311783]
[158.33171082 -28.16894150]
[152.66893005 -14.27891445]
[147.21357727 -0.30611700]
[141.75820923 13.66668129]
[136.30285645 27.63947868]
[149.64126587 36.04933929]
[161.09642029 46.88531494]
[170.23374939 59.73632050]
[176.70658875 74.11482239]
[180.26937866 89.47534180]
[180.78697205 105.23513031]
[178.23973083 120.79631805]
[172.72427368 135.56854248]
[164.44985962 148.99139404]
[153.73039246 160.55564880]
[140.97253418 169.82258606]
[126.66029358 176.44064331]
[111.33663177 180.15873718]
[95.58288574 180.83583069]
[79.99671173 178.44622803]
[74.95979309 192.57525635]
[77.61380768 208.17227173]
[66.05202484 217.56239319]
[61.01511002 231.69142151]
[55.97819138 245.82044983]
[63.11356354 257.24417114]
[62.37747192 270.49816895]
[54.26236343 280.75619507]
[41.90666962 284.41220093]
[36.65995026 298.46466064]
[31.41323280 312.51712036]
[26.16651535 326.56961060]
[20.91979599 340.62207031]
[15.67307854 354.67456055]
[29.16445541 361.25772095]
[41.95747375 369.11230469]
[53.93268204 378.16491699]
[64.97827148 388.33105469]
[74.99110413 399.51580811]
[83.87770081 411.61471558]
[91.55507660 424.51486206]
[97.95156097 438.09576416]
[103.00741577 452.23059082]
[106.67544556 466.78741455]
[108.92139435 481.63031006]
[109.72429657 496.62066650]
[109.07665253 511.61853027]
[106.98451996 526.48388672]
[103.46741486 541.07788086]
[98.55818939 555.26434326]
[92.30268097 568.91070557]
[84.75928497 581.88964844]
[75.99845123 594.07995605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 191]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[52 182]
[53 181]
[54 180]
[56 178]
[57 177]
[74 162]
[75 161]
[76 160]
[77 159]
[80 158]
[81 157]
[82 156]
[83 154]
[84 153]
[85 152]
[86 151]
[87 150]
[88 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
