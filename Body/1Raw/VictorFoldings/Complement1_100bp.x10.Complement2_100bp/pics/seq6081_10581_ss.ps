%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[-57.80710602 428.59075928]
[-54.73028946 443.29153442]
[-53.48339462 458.25900269]
[-54.08532333 473.26623535]
[-56.52695084 488.08575439]
[-60.77125931 502.49288940]
[-66.75390625 516.26922607]
[-74.38420868 529.20593262]
[-83.54647064 541.10687256]
[-94.10181427 551.79162598]
[-105.89022064 561.09826660]
[-118.73296356 568.88568115]
[-132.43537903 575.03576660]
[-146.78970337 579.45532227]
[-161.57836914 582.07739258]
[-176.57716370 582.86212158]
[-191.55870056 581.79772949]
[-206.29588318 578.90032959]
[-220.56529236 574.21380615]
[-234.15060425 567.80914307]
[-246.84587097 559.78356934]
[-258.45861816 550.25872803]
[-268.81283569 539.37890625]
[-277.75152588 527.30914307]
[-285.13922119 514.23236084]
[-290.86386108 500.34686279]
[-294.83871460 485.86306763]
[-297.00350952 471.00057983]
[-297.32540894 455.98471069]
[-295.79956055 441.04312134]
[-292.44906616 426.40228271]
[-287.32473755 412.28417969]
[-280.50427246 398.90283203]
[-272.09106445 386.46105957]
[-262.21261597 375.14752197]
[-251.01872253 365.13372803]
[-238.67906189 356.57147217]
[-225.38070679 349.59051514]
[-211.32525635 344.29675293]
[-196.72578430 340.77041626]
[-181.80361938 339.06497192]
[-166.78497314 339.20623779]
[-151.89753723 341.19207764]
[-137.36697388 344.99243164]
[-123.41359711 350.54965210]
[-110.24890900 357.77947998]
[-101.46830750 345.61804199]
[-92.68770599 333.45657349]
[-91.51062012 318.60855103]
[-77.15924072 311.94909668]
[-68.37863922 299.78762817]
[-59.59803391 287.62619019]
[-50.81742859 275.46472168]
[-51.01542282 271.94433594]
[-49.51811600 268.15313721]
[-46.21680832 264.88900757]
[-41.36322403 262.96810913]
[-32.04834366 251.21086121]
[-22.73345947 239.45361328]
[-13.41857719 227.69635010]
[-4.10369444 215.93910217]
[-5.18447685 203.89093018]
[2.47968316 194.01953125]
[15.21095371 191.95130920]
[24.69985199 180.33404541]
[34.18875122 168.71678162]
[43.67765045 157.09951782]
[53.16654587 145.48225403]
[62.65544510 133.86499023]
[72.14434052 122.24773407]
[65.77407837 109.97425079]
[64.55342865 96.20005035]
[68.66603851 82.99758148]
[77.49314117 72.35329437]
[89.70661163 65.86870575]
[103.46881104 64.51949310]
[116.70910645 68.50865173]
[126.36991119 57.03395081]
[136.03073120 45.55924988]
[145.69152832 34.08454895]
[155.35234070 22.60984993]
[162.91671753 9.65685177]
[160.49522400 -5.97794533]
[172.19552612 -15.19489098]
[177.44224548 -29.24736214]
[182.68896484 -43.29983521]
[187.93568420 -57.35230637]
[193.18240356 -71.40477753]
[195.40751648 -86.23882294]
[183.86962891 -96.70375061]
[183.17747498 -111.90163422]
[193.22529602 -122.83676147]
[192.33248901 -137.81016541]
[191.43966675 -152.78356934]
[190.54684448 -167.75697327]
[189.65403748 -182.73037720]
[175.27745056 -187.66822815]
[163.88816833 -197.73562622]
[157.22296143 -211.39738464]
[156.29821777 -226.57015991]
[161.25497437 -240.94023132]
[171.33734131 -252.31626892]
[185.00785828 -258.96350098]
[200.18183899 -259.86828613]
[214.54537964 -254.89262390]
[225.90814209 -244.79528809]
[232.53738403 -231.11605835]
[233.42219543 -215.94088745]
[228.42765808 -201.58390808]
[218.31538391 -190.23443604]
[204.62744141 -183.62319946]
[205.52026367 -168.64979553]
[206.41307068 -153.67639160]
[207.30589294 -138.70297241]
[208.19869995 -123.72957611]
[219.47476196 -114.06592560]
[220.59350586 -98.89347839]
[210.38092041 -87.13163757]
[216.20109558 -100.95645905]
[224.73307800 -113.29360199]
[235.61408997 -123.61849976]
[248.38146973 -131.49212646]
[262.49234009 -136.57968140]
[277.34671021 -138.66485596]
[292.31292725 -137.65898132]
[306.75466919 -133.60481262]
[320.05786133 -126.67476654]
[331.65679932 -117.16348267]
[341.05831909 -105.47539520]
[347.86267090 -92.10749817]
[351.78051758 -77.62818146]
[352.64526367 -62.65312958]
[350.42016602 -47.81908417]
[345.19982910 -33.75679398]
[337.20620728 -21.06419945]
[326.77920532 -10.28099060]
[314.36218262 -1.86567760]
[300.48312378 3.82391572]
[285.73214722 6.54586554]
[270.73651123 6.18443346]
[256.13378906 2.75498700]
[242.54495239 -3.59665155]
[230.54777527 -12.60040760]
[220.65237427 -23.87343597]
[213.27952576 -36.93640137]
[208.74272156 -51.23386383]
[207.23486328 -66.15805817]
[201.98815918 -52.10558701]
[196.74143982 -38.05311584]
[191.49472046 -24.00064468]
[186.24800110 -9.94817352]
[189.04478455 4.68149710]
[176.96919250 14.90357018]
[187.92684937 4.66004276]
[201.06311035 -2.58140445]
[215.57470703 -6.37795401]
[230.57421875 -6.49744558]
[245.14445496 -2.93257213]
[258.39440918 4.09867287]
[269.51388550 14.16632652]
[277.82287598 26.65474701]
[282.81329346 40.80026245]
[284.17999268 55.73787308]
[281.83938599 70.55413055]
[275.93460083 84.34302521]
[266.82672119 96.26135254]
[255.07269287 105.58029938]
[241.39129639 111.73001862]
[226.61912537 114.33444977]
[211.65951538 113.23432922]
[197.42726135 108.49692535]
[184.79266357 100.41194153]
[174.52833557 89.47377014]
[167.26194763 76.35128784]
[163.43783569 61.84693527]
[163.28985596 46.84766769]
[166.82704163 32.27066040]
[157.16622925 43.74536133]
[147.50543213 55.22006226]
[137.84461975 66.69476318]
[128.18380737 78.16946411]
[134.87696838 92.61786652]
[134.61189270 108.53907013]
[127.44145966 122.75666046]
[114.79621887 132.43409729]
[99.19901276 135.64067078]
[83.76160431 131.73663330]
[74.27271271 143.35389709]
[64.78381348 154.97116089]
[55.29491425 166.58842468]
[45.80601501 178.20568848]
[36.31711578 189.82295227]
[26.82821655 201.44021606]
[24.29349327 219.67909241]
[7.65355682 225.25398254]
[-1.66132605 237.01124573]
[-10.97620869 248.76849365]
[-20.29109192 260.52572632]
[-29.60597420 272.28298950]
[-38.65597534 284.24533081]
[-47.43657684 296.40679932]
[-56.21718216 308.56823730]
[-64.99778748 320.72970581]
[-66.80291748 336.44760132]
[-80.52624512 342.23718262]
[-89.30685425 354.39865112]
[-98.08745575 366.56008911]
[-87.08228302 376.78094482]
[-77.41658783 388.27676392]
[-69.23689270 400.87329102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 207]
[47 206]
[48 205]
[50 203]
[51 202]
[52 201]
[53 200]
[57 199]
[58 198]
[59 197]
[60 196]
[61 195]
[64 193]
[65 192]
[66 191]
[67 190]
[68 189]
[69 188]
[70 187]
[77 181]
[78 180]
[79 179]
[80 178]
[81 177]
[82 153]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 118]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
