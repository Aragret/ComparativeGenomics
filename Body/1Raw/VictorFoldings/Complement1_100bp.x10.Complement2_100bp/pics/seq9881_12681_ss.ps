%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[87.80916595 443.01690674]
[83.69308472 457.46942139]
[77.51647949 471.16860962]
[69.41099548 483.82241821]
[59.54941177 495.16116333]
[48.14192200 504.94314575]
[35.43168259 512.95983887]
[21.68961334 519.04040527]
[7.20862341 523.05523682]
[-7.70262194 524.91876221]
[-22.72628784 524.59118652]
[-37.54214859 522.07958984]
[-51.83439636 517.43743896]
[-65.29839325 510.76370239]
[-77.64715576 502.20065308]
[-88.61746979 491.93078613]
[-97.97550201 480.17303467]
[-105.52177429 467.17797852]
[-111.09545898 453.22259521]
[-114.57773590 438.60440063]
[-115.89437866 423.63497925]
[-115.01733398 408.63336182]
[-111.96529388 393.91931152]
[-106.80330658 379.80648804]
[-99.64141083 366.59570312]
[-90.63224792 354.56851196]
[-79.96785736 343.98132324]
[-67.87555695 335.05978394]
[-54.61307907 327.99404907]
[-40.46312714 322.93472290]
[-25.72730637 319.98965454]
[-10.71971035 319.22161865]
[4.23977518 320.64697266]
[18.83228493 324.23535156]
[24.49507332 310.34533691]
[30.15785980 296.45532227]
[35.19477463 282.32629395]
[39.59577179 267.98641968]
[43.99677277 253.64659119]
[48.39776993 239.30673218]
[43.00919342 228.47669983]
[46.55838013 216.49391174]
[57.66561890 209.93708801]
[62.27962494 195.66435242]
[66.89363861 181.39161682]
[65.96002960 174.06016541]
[71.68405151 166.94163513]
[76.51004791 152.73918152]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[92.58886719 60.80552673]
[92.53475952 47.53120804]
[100.02490997 36.80834961]
[112.14109039 32.42340851]
[116.54208374 18.08356285]
[115.37162018 12.99660873]
[116.18784332 8.42637062]
[118.46124268 5.04307222]
[121.47303772 3.20965528]
[126.50995636 -10.91937447]
[131.54687500 -25.04840279]
[136.16087341 -39.32113647]
[140.34788513 -53.72491837]
[144.53489685 -68.12870026]
[138.75411987 -77.34234619]
[138.99348450 -87.99706268]
[144.93255615 -96.58052063]
[154.41178894 -100.39588928]
[159.02580261 -114.66862488]
[163.63981628 -128.94136047]
[168.25381470 -143.21409607]
[156.38691711 -154.34561157]
[150.58317566 -169.48364258]
[151.95712280 -185.57937622]
[160.18312073 -199.41471863]
[173.57067871 -208.24572754]
[189.41165161 -210.34678650]
[193.81263733 -224.68663025]
[198.21363831 -239.02648926]
[202.61463928 -253.36633301]
[207.01564026 -267.70617676]
[193.18235779 -273.53979492]
[180.01023865 -280.74301147]
[167.63444519 -289.24188232]
[156.18197632 -298.94921875]
[145.77035522 -309.76535034]
[136.50642395 -321.57937622]
[128.48524475 -334.26998901]
[121.78913116 -347.70697021]
[116.48678589 -361.75247192]
[112.63262939 -376.26235962]
[110.26620483 -391.08770752]
[109.41180420 -406.07641602]
[110.07818604 -421.07464600]
[112.25851440 -435.92849731]
[115.93041992 -450.48556519]
[121.05621338 -464.59643555]
[127.58331299 -478.11636353]
[135.44471741 -490.90655518]
[144.55978394 -502.83581543]
[154.83494568 -513.78167725]
[166.16477966 -523.63183594]
[178.43302917 -532.28521729]
[191.51377869 -539.65307617]
[205.27282715 -545.65966797]
[219.56896973 -550.24353027]
[234.25549316 -553.35748291]
[249.18171692 -554.96960449]
[264.19445801 -555.06341553]
[279.13964844 -553.63793945]
[293.86395264 -550.70770264]
[308.21624756 -546.30291748]
[322.04928589 -540.46862793]
[335.22106934 -533.26489258]
[347.59649658 -524.76544189]
[359.04855347 -515.05761719]
[369.45968628 -504.24099731]
[378.72308350 -492.42660522]
[386.74371338 -479.73562622]
[393.43923950 -466.29833984]
[398.74096680 -452.25259399]
[402.59448242 -437.74255371]
[404.96026611 -422.91711426]
[405.81399536 -407.92837524]
[405.14694214 -392.93017578]
[402.96597290 -378.07638550]
[399.29342651 -363.51950073]
[394.16699219 -349.40884399]
[387.63931274 -335.88922119]
[379.77734375 -323.09936523]
[370.66177368 -311.17050171]
[360.38610840 -300.22509766]
[349.05584717 -290.37542725]
[336.78723145 -281.72259521]
[323.70614624 -274.35534668]
[309.94683838 -268.34930420]
[295.65048218 -263.76611328]
[280.96380615 -260.65280151]
[266.03753662 -259.04129028]
[251.02479553 -258.94815063]
[236.07965088 -260.37432861]
[221.35548401 -263.30517578]
[216.95448303 -248.96533203]
[212.55348206 -234.62548828]
[208.15249634 -220.28564453]
[203.75149536 -205.94578552]
[214.38580322 -197.03627014]
[220.84149170 -184.70759583]
[222.11463928 -170.80586243]
[217.98014832 -157.42689514]
[209.03070068 -146.60041809]
[196.59201050 -139.98200989]
[182.52655029 -138.60008240]
[177.91255188 -124.32734680]
[173.29853821 -110.05461884]
[168.68452454 -95.78188324]
[174.10511780 -77.22106171]
[158.93869019 -63.94168854]
[154.75167847 -49.53790665]
[150.56466675 -35.13412476]
[151.79501343 -32.61532211]
[152.10176086 -29.45739174]
[151.23648071 -26.00968170]
[149.08166504 -22.70493889]
[145.67590332 -20.01148796]
[140.63897705 -5.88245773]
[135.60206604 8.24657154]
[130.88192749 22.48456001]
[126.48093414 36.82440948]
[134.98809814 51.33188629]
[130.27787781 67.82820892]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[96.66752625 147.68847656]
[95.91944122 152.27035522]
[93.69667053 155.68711853]
[90.71250153 157.56518555]
[85.88650513 171.76763916]
[81.16636658 186.00563049]
[76.55236053 200.27835083]
[71.93834686 214.55108643]
[76.21051025 232.46282959]
[62.73761749 243.70773315]
[58.33662033 258.04757690]
[53.93561935 272.38742065]
[49.53462219 286.72726440]
[63.25926971 280.67468262]
[77.29318237 285.97082520]
[83.59709167 299.58187866]
[78.55983734 313.71078491]
[65.06698608 320.26388550]
[50.84785461 315.48724365]
[44.04788589 302.11810303]
[38.38509750 316.00811768]
[32.72231293 329.89816284]
[45.66423416 337.53521729]
[57.35621262 346.97531128]
[67.54904175 358.01724243]
[76.02545166 370.42562866]
[82.60476685 383.93600464]
[87.14675903 398.26040649]
[89.55461121 413.09347534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 203]
[35 202]
[36 201]
[37 194]
[38 193]
[39 192]
[40 191]
[43 189]
[44 188]
[45 187]
[47 186]
[48 185]
[49 181]
[50 180]
[51 179]
[53 177]
[54 176]
[58 173]
[59 172]
[63 171]
[64 170]
[65 169]
[66 164]
[67 163]
[68 162]
[72 160]
[73 159]
[74 158]
[75 157]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
