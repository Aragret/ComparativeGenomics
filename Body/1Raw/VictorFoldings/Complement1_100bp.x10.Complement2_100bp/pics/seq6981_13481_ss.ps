%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[111.35382080 760.25201416]
[96.43164825 761.87805176]
[81.42343903 762.14044189]
[66.45355225 761.03692627]
[51.64603806 758.57672119]
[37.12359619 754.78015137]
[23.00656891 749.67871094]
[9.41193485 743.31463623]
[-3.54765201 735.74072266]
[-15.76480389 727.01965332]
[-27.13828278 717.22381592]
[-37.57384109 706.43426514]
[-46.98500824 694.74041748]
[-55.29379654 682.23925781]
[-62.43135834 669.03430176]
[-68.33854675 655.23504639]
[-72.96640778 640.95574951]
[-76.27659607 626.31475830]
[-78.24167633 611.43347168]
[-78.84537506 596.43511963]
[-78.08268738 581.44396973]
[-75.95993042 566.58435059]
[-72.49468994 551.97930908]
[-67.71569061 537.74987793]
[-61.66252899 524.01397705]
[-54.38536072 510.88546753]
[-45.94449234 498.47311401]
[-36.40986633 486.87973022]
[-25.86049461 476.20144653]
[-14.38379192 466.52670288]
[-2.07485938 457.93569946]
[10.96430397 450.49960327]
[24.62565041 444.28002930]
[38.79597473 439.32855225]
[53.35785294 435.68618774]
[68.19062042 433.38308716]
[83.17136383 432.43838501]
[98.17595673 432.85986328]
[99.95841980 417.96615601]
[101.74088287 403.07241821]
[103.19029999 388.14260864]
[104.30595398 373.18417358]
[105.42160034 358.22570801]
[106.53724670 343.26724243]
[106.53724670 328.26724243]
[105.42160034 313.30880737]
[96.46324921 305.18017578]
[95.41136932 292.72717285]
[103.37332153 282.57974243]
[102.48050690 267.60635376]
[101.58769226 252.63294983]
[100.69487000 237.65953064]
[99.80205536 222.68612671]
[91.32093048 210.44195557]
[98.22311401 196.20571899]
[97.33029938 181.23231506]
[88.84917450 168.98814392]
[95.75135803 154.75190735]
[94.85854340 139.77850342]
[93.96572876 124.80509186]
[93.07291412 109.83168793]
[91.95726013 94.87322998]
[90.61902618 79.93304443]
[89.28079224 64.99285889]
[77.80628204 74.65390015]
[63.06948853 71.85623932]
[55.93382645 58.66221237]
[61.65944290 44.79796600]
[76.02561951 40.48370361]
[88.44132233 48.89831543]
[80.49941254 35.21487045]
[88.04636383 22.37381363]
[87.82303619 7.37547541]
[87.59970856 -7.62286186]
[87.37638092 -22.62119865]
[86.37212372 -37.58754349]
[84.58965302 -52.48126221]
[82.80718994 -67.37497711]
[81.02472687 -82.26869202]
[79.24225616 -97.16241455]
[72.31636047 -83.85707855]
[60.05339813 -75.21880341]
[45.19296265 -73.17739105]
[31.05490112 -78.18890381]
[20.79769897 -89.13375854]
[16.71283913 -103.56684113]
[19.71289062 -118.26376343]
[29.12763405 -129.94120789]
[42.85379028 -135.99038696]
[57.82490540 -135.05990601]
[70.69638824 -127.35764313]
[78.59272766 -114.60427094]
[79.26251221 -129.58930969]
[79.93229675 -144.57435608]
[80.60208130 -159.55938721]
[81.04869080 -174.55273438]
[81.27201843 -189.55107117]
[81.49534607 -204.54940796]
[67.41472626 -210.21516418]
[56.33431625 -220.58766174]
[49.75264740 -234.26414490]
[48.55983734 -249.39495850]
[52.91720581 -263.93380737]
[62.23545074 -275.91439819]
[75.25435638 -283.71649170]
[90.21322632 -286.28488159]
[105.08899689 -283.27224731]
[117.86983490 -275.08599854]
[126.82723999 -262.83328247]
[130.74980164 -248.17114258]
[129.10702515 -233.08255005]
[122.12107086 -219.60809326]
[110.73674774 -209.57008362]
[96.49368286 -204.32608032]
[96.27035522 -189.32774353]
[96.04702759 -174.32940674]
[98.67159271 -170.33934021]
[98.81748199 -164.65815735]
[95.58712006 -158.88960266]
[94.91733551 -143.90457153]
[94.24755096 -128.91952515]
[93.57776642 -113.93448639]
[94.13597870 -98.94487762]
[95.91844177 -84.05116272]
[97.70090485 -69.15744019]
[99.48337555 -54.26372528]
[101.26583862 -39.37001038]
[110.46773529 -51.21590042]
[125.10417938 -54.49834442]
[138.48359680 -47.71665573]
[144.48908997 -33.97132492]
[140.37501526 -19.54653740]
[128.02230835 -11.03710938]
[113.07842255 -12.33343792]
[102.37471771 -22.84452629]
[102.59804535 -7.84618950]
[102.82137299 7.15214777]
[103.04470062 22.15048599]
[110.97063446 34.76115036]
[103.43965912 48.67498779]
[104.22097778 63.65462494]
[105.55921173 78.59481049]
[106.89744568 93.53499603]
[110.05667114 97.72226715]
[110.64495850 103.38153076]
[108.04631805 108.93886566]
[108.93913269 123.91227722]
[109.83194733 138.88568115]
[110.72476196 153.85908508]
[119.26974487 167.17425537]
[112.30370331 180.33949280]
[113.19651794 195.31289673]
[121.74150848 208.62808228]
[114.77546692 221.79331970]
[115.66828156 236.76672363]
[116.56109619 251.74012756]
[117.45391083 266.71353149]
[118.34672546 281.68695068]
[128.84065247 296.81832886]
[120.38005066 312.19314575]
[121.49570465 327.15161133]
[129.41973877 314.41543579]
[142.60336304 307.26058960]
[157.60043335 307.55731201]
[170.49072266 315.22805786]
[177.90476990 328.26766968]
[177.90454102 343.26766968]
[170.49011230 356.30709839]
[157.59957886 363.97741699]
[142.60250854 364.27371216]
[129.41908264 357.11846924]
[121.49570465 344.38290405]
[120.38005066 359.34136963]
[119.26440430 374.29980469]
[118.14875793 389.25827026]
[120.41683197 393.95962524]
[120.63311768 398.59713745]
[119.16552734 402.39993286]
[116.63460541 404.85488892]
[114.85213470 419.74859619]
[113.06967163 434.64233398]
[127.74996185 437.77349854]
[142.08470154 442.22665405]
[155.95507812 447.96493530]
[169.24618530 454.94070435]
[181.84788513 463.09625244]
[193.65573120 472.36392212]
[204.57188416 482.66696167]
[214.50590515 493.92001343]
[223.37545776 506.02975464]
[231.10705566 518.89587402]
[237.63662720 532.41180420]
[242.91006470 546.46551514]
[246.88366699 560.94049072]
[249.52450562 575.71685791]
[250.81071472 590.67218018]
[250.73161316 605.68249512]
[249.28787231 620.62341309]
[246.49143982 635.37109375]
[242.36550903 649.80340576]
[236.94424438 663.80078125]
[230.27259827 677.24713135]
[222.40583801 690.03106689]
[213.40914917 702.04663086]
[203.35708618 713.19433594]
[192.33294678 723.38177490]
[180.42808533 732.52453613]
[167.74114990 740.54681396]
[154.37725830 747.38214111]
[140.44715881 752.97387695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 181]
[39 180]
[40 179]
[41 175]
[42 174]
[43 173]
[44 172]
[45 161]
[46 160]
[49 158]
[50 157]
[51 156]
[52 155]
[53 154]
[55 152]
[56 151]
[58 149]
[59 148]
[60 147]
[61 146]
[62 143]
[63 142]
[64 141]
[70 140]
[72 138]
[73 137]
[74 136]
[75 135]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
