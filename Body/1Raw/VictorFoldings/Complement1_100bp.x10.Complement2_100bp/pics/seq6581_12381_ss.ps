%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[105.27558899 693.62133789]
[90.88775635 689.33544922]
[76.99816895 683.63824463]
[63.74486923 676.58636475]
[51.25957489 668.24993896]
[39.66637421 658.71179199]
[29.08049393 648.06671143]
[19.60713768 636.42053223]
[11.34046268 623.88891602]
[4.36262655 610.59649658]
[-1.25701857 596.67535400]
[-5.46262121 582.26385498]
[-8.21238232 567.50524902]
[-9.47897434 552.54614258]
[-9.24980736 537.53527832]
[-7.52716017 522.62182617]
[-4.32815313 507.95401001]
[0.31541973 493.67758179]
[6.35740709 479.93447876]
[13.73775959 466.86126709]
[22.38312531 454.58786011]
[32.20758057 443.23626709]
[43.11348724 432.91931152]
[54.99244690 423.73950195]
[67.72640228 415.78808594]
[81.18879700 409.14410400]
[95.24582672 403.87356567]
[109.75778198 400.02886963]
[124.58043671 397.64822388]
[123.68762207 382.67480469]
[122.79480743 367.70138550]
[121.90199280 352.72799683]
[121.00917053 337.75457764]
[120.11635590 322.78118896]
[118.55583191 307.86257935]
[109.01615906 296.42388916]
[114.62071991 281.62863159]
[112.39560699 266.79458618]
[100.20886993 263.46267700]
[90.15043640 255.74069214]
[83.73609924 244.74778748]
[81.94925690 232.09921265]
[85.09036255 219.66906738]
[92.72702789 209.31260681]
[103.75321960 202.58930969]
[101.97074890 187.69558716]
[100.18828583 172.80186462]
[96.27221680 166.53399658]
[98.49185944 157.67335510]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[82.14009094 75.72264099]
[88.51132965 62.25948715]
[86.95080566 47.34088135]
[77.81979370 34.42054367]
[84.19102478 20.95738411]
[82.63050079 6.03877878]
[81.06998444 -8.87982559]
[64.85595703 -15.65762043]
[54.36154556 -29.64254379]
[52.40569305 -46.92776108]
[59.43757629 -62.74123383]
[73.43754578 -72.76316833]
[71.43353271 -87.62869263]
[61.92187881 -100.27143860]
[67.88944244 -113.91832733]
[65.88542938 -128.78385925]
[63.88141632 -143.64938354]
[48.87518692 -143.18339539]
[33.90058136 -144.26284790]
[19.11633873 -146.87631226]
[4.67917824 -150.99606323]
[-9.25785637 -156.57846069]
[-22.54702568 -163.56430054]
[-35.04745865 -171.87954712]
[-46.62663651 -181.43603516]
[-57.16182327 -192.13247681]
[-66.54133606 -203.85548401]
[-74.66574097 -216.48077393]
[-81.44892883 -229.87452698]
[-86.81897736 -243.89474487]
[-90.71897125 -258.39282227]
[-93.10756683 -273.21505737]
[-93.95944214 -288.20431519]
[-93.26556396 -303.20175171]
[-91.03330231 -318.04833984]
[-87.28630066 -332.58670044]
[-82.06428528 -346.66271973]
[-75.42262268 -360.12719727]
[-67.43170929 -372.83740234]
[-58.17625427 -384.65859985]
[-47.75437164 -395.46548462]
[-36.27653503 -405.14346313]
[-23.86442375 -413.58996582]
[-10.64960766 -420.71545410]
[3.22782731 -426.44439697]
[17.62077332 -430.71606445]
[32.37665558 -433.48516846]
[47.33905411 -434.72238159]
[62.34935760 -434.41455078]
[77.24845123 -432.56494141]
[91.87839508 -429.19317627]
[106.08410645 -424.33502197]
[119.71499634 -418.04193115]
[132.62655640 -410.38061523]
[144.68193054 -401.43234253]
[155.75332642 -391.29190063]
[165.72338867 -380.06683350]
[174.48640442 -367.87612915]
[181.94949341 -354.84899902]
[188.03353882 -341.12353516]
[192.67405701 -326.84524536]
[195.82185364 -312.16546631]
[197.44354248 -297.23983765]
[197.52195740 -282.22659302]
[196.05624390 -267.28485107]
[193.06196594 -252.57299805]
[188.57084656 -238.24702454]
[182.63049316 -224.45875549]
[175.30387878 -211.35437012]
[166.66868591 -199.07278442]
[156.81642151 -187.74418640]
[145.85156250 -177.48867798]
[133.89030457 -168.41494751]
[121.05947113 -160.61920166]
[107.49505615 -154.18408203]
[93.34087372 -149.17778015]
[78.74694061 -145.65339661]
[80.75095367 -130.78787231]
[82.75496674 -115.92234039]
[92.12328339 -104.34287262]
[86.29906464 -89.63270569]
[88.30307770 -74.76718140]
[100.43885803 -71.25419617]
[110.38120270 -63.38332367]
[116.63116455 -52.29613113]
[118.22948456 -39.62235641]
[114.90366364 -27.24035835]
[107.11365509 -16.99873543]
[95.98858643 -10.44034863]
[97.54911041 4.47825575]
[99.10963440 19.39686012]
[108.12902832 31.25012016]
[101.86940765 45.78035736]
[103.42993164 60.69896317]
[112.44932556 72.55222321]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[113.41046143 156.11283875]
[115.08200073 171.01940918]
[116.86446381 185.91311646]
[118.64693451 200.80683899]
[134.96006775 207.34248352]
[145.66152954 221.16960144]
[147.87452698 238.42378235]
[141.07885742 254.34019470]
[127.22965240 264.56945801]
[129.45477295 279.40350342]
[139.15359497 291.90322876]
[133.38987732 305.63745117]
[143.15347290 294.25009155]
[158.09828186 292.96447754]
[169.66322327 302.51705933]
[171.22338867 317.43569946]
[161.88504028 329.17431641]
[146.99760437 331.00851440]
[135.08976746 321.88836670]
[135.98257446 336.86175537]
[136.87539673 351.83517456]
[137.76820374 366.80859375]
[138.66102600 381.78198242]
[139.55384827 396.75540161]
[154.55436707 397.35778809]
[169.42036438 399.45077515]
[184.00410461 403.01354980]
[198.16061401 408.01071167]
[211.74922180 414.39260864]
[224.63485718 422.09576416]
[236.68946838 431.04367065]
[247.79322815 441.14739990]
[257.83581543 452.30648804]
[266.71737671 464.41006470]
[274.34963989 477.33779907]
[280.65679932 490.96127319]
[285.57614136 505.14501953]
[289.05874634 519.74810791]
[291.07006836 534.62536621]
[291.59005737 549.62896729]
[290.61355591 564.60980225]
[288.15029907 579.41894531]
[284.22473145 593.90924072]
[278.87588501 607.93664551]
[272.15692139 621.36181641]
[264.13461304 634.05120850]
[254.88870239 645.87878418]
[244.51107788 656.72698975]
[233.10487366 666.48797607]
[220.78346252 675.06475830]
[207.66929626 682.37213135]
[193.89270020 688.33740234]
[179.59062195 692.90124512]
[164.90519714 696.01843262]
[149.98236084 697.65789795]
[134.97045898 697.80334473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[35 166]
[37 164]
[38 163]
[45 158]
[46 157]
[47 156]
[49 155]
[50 154]
[51 153]
[52 152]
[54 150]
[56 148]
[57 147]
[59 145]
[60 144]
[61 143]
[66 136]
[67 135]
[69 133]
[70 132]
[71 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
