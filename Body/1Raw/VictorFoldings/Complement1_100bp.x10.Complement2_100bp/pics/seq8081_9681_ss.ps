%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[-18.99854279 319.45343018]
[-16.48202133 334.25363159]
[-15.45164967 349.23083496]
[-15.91766644 364.23620605]
[-17.87544060 379.12063599]
[-21.30551529 393.73614502]
[-26.17379761 407.93750000]
[-32.43190765 421.58355713]
[-40.01764297 434.53866577]
[-48.85560989 446.67410278]
[-58.85797882 457.86926270]
[-69.92533112 468.01284790]
[-81.94767761 477.00405884]
[-94.80551910 484.75354004]
[-108.37108612 491.18423462]
[-122.50953674 496.23229980]
[-137.08035278 499.84750366]
[-151.93873596 501.99395752]
[-166.93699646 502.65029907]
[-181.92607117 501.80999756]
[-196.75700378 499.48144531]
[-211.28237915 495.68774414]
[-225.35783386 490.46664429]
[-238.84349060 483.86999512]
[-251.60530090 475.96334839]
[-263.51641846 466.82531738]
[-274.45852661 456.54672241]
[-284.32278442 445.22973633]
[-293.01123047 432.98678589]
[-300.43743896 419.93957520]
[-306.52767944 406.21777344]
[-311.22137451 391.95776367]
[-314.47189331 377.30126953]
[-316.24691772 362.39395142]
[-316.52880859 347.38400269]
[-315.31478882 332.42056274]
[-312.61688232 317.65234375]
[-308.46194458 303.22613525]
[-302.89123535 289.28533936]
[-295.96014404 275.96850586]
[-287.73754883 263.40795898]
[-278.30517578 251.72853088]
[-267.75674438 241.04632568]
[-256.19711304 231.46751404]
[-243.74119568 223.08726501]
[-230.51274109 215.98890686]
[-216.64326477 210.24295044]
[-202.27056885 205.90652466]
[-187.53753662 203.02273560]
[-172.59057617 201.62022400]
[-157.57824707 201.71293640]
[-142.64974976 203.29997253]
[-127.95346069 206.36552429]
[-113.63543701 210.87913513]
[-99.83798218 216.79595947]
[-86.69821930 224.05717468]
[-74.34674835 232.59062195]
[-62.90632629 242.31149292]
[-52.10417175 231.90412903]
[-41.30201340 221.49674988]
[-30.49985695 211.08937073]
[-45.48244858 211.81181335]
[-58.09110260 203.68643188]
[-63.62310410 189.74378967]
[-60.01514816 175.18417358]
[-48.61291885 165.43794250]
[-33.66916275 164.14019775]
[-20.75753021 171.77496338]
[-14.69374466 185.49467468]
[-17.74002075 200.18322754]
[-5.77768469 191.13322449]
[6.18465233 182.08323669]
[17.44074821 172.16857910]
[27.92824936 161.44419861]
[38.41574860 150.71981812]
[40.84487152 143.73976135]
[49.14012909 139.91529846]
[52.72241211 125.45790100]
[67.96755981 121.22751617]
[78.61356354 110.66046906]
[89.25957489 100.09342194]
[97.94940186 87.86693573]
[96.93241882 72.07845306]
[109.40836334 63.94210815]
[115.88785553 50.41376495]
[122.36735535 36.88541794]
[121.35037231 21.09693146]
[133.82632446 12.96058941]
[140.30581665 -0.56775606]
[143.62806702 -15.19521618]
[143.62806702 -30.19521713]
[143.62806702 -45.19521713]
[143.62806702 -60.19521713]
[140.49867249 -68.77686310]
[143.74140930 -75.41812897]
[143.96473694 -90.41646576]
[144.18806458 -105.41480255]
[144.41139221 -120.41313934]
[130.33076477 -126.07888031]
[119.25035858 -136.45138550]
[112.66869354 -150.12786865]
[111.47588348 -165.25869751]
[115.83325195 -179.79753113]
[125.15149689 -191.77812195]
[138.17041016 -199.58020020]
[153.12927246 -202.14860535]
[168.00503540 -199.13597107]
[180.78587341 -190.94972229]
[189.74328613 -178.69699097]
[193.66584778 -164.03486633]
[192.02307129 -148.94627380]
[185.03710938 -135.47181702]
[173.65278625 -125.43381500]
[159.40972900 -120.18981171]
[159.18640137 -105.19147491]
[158.96307373 -90.19313812]
[158.73974609 -75.19480133]
[158.62806702 -60.19521713]
[158.62806702 -45.19521713]
[158.62806702 -30.19521713]
[158.62806702 -15.19521618]
[165.28894043 -28.63518906]
[174.41178894 -40.54205704]
[185.65557861 -50.47067642]
[198.59991455 -58.04985809]
[212.76089478 -62.99624252]
[227.60908508 -65.12491608]
[242.58937073 -64.35628510]
[257.14172363 -60.71909714]
[270.72207642 -54.34932327]
[282.82272339 -45.48510361]
[292.99127197 -34.45783615]
[300.84756470 -21.67978096]
[306.09786987 -7.62865400]
[308.54592896 7.17023087]
[308.10021973 22.16360664]
[304.77737427 36.79093552]
[298.70166016 50.50536728]
[290.10018921 62.79417038]
[279.29455566 73.19792938]
[266.68872070 81.32768250]
[252.75396729 86.87949371]
[238.01124573 89.64580536]
[223.01174927 89.52320862]
[208.31623840 86.51627350]
[194.47409058 80.73741150]
[182.00283813 72.40268707]
[171.36869812 61.82368851]
[162.96925354 49.39592361]
[157.11853027 35.58401108]
[154.03523254 20.90431976]
[153.83416748 5.91173983]
[147.35466003 19.44008446]
[148.83509827 34.26093292]
[135.89570618 43.36491394]
[129.41619873 56.89326096]
[122.93670654 70.42160797]
[124.41714478 85.24245453]
[111.47774506 94.34643555]
[123.30558014 85.12134552]
[137.03552246 79.08073425]
[151.82794189 76.59398651]
[166.77832031 77.81316376]
[180.97241211 82.66371155]
[193.54223633 90.84902191]
[203.71916199 101.86856079]
[210.88085938 115.04847717]
[214.58938599 129.58280945]
[214.61796570 144.58277893]
[210.96485901 159.13113403]
[203.85342407 172.33824158]
[193.71856689 183.39648438]
[181.18002319 191.62962341]
[167.00451660 196.53422546]
[152.05889893 197.81036377]
[137.25709534 195.38000488]
[123.50424194 189.39175415]
[111.64134216 180.21180725]
[102.39379883 168.40150452]
[96.32711029 154.68307495]
[93.81226349 139.89540100]
[95.00303650 124.94273376]
[99.82662201 110.73943329]
[89.18061066 121.30648041]
[78.53460693 131.87353516]
[74.19084930 147.08676147]
[59.70717621 150.56130981]
[49.14012909 161.20732117]
[38.65262985 171.93170166]
[28.16512680 182.65608215]
[42.96002197 180.18402100]
[57.04314041 185.34791565]
[66.73318481 196.79792786]
[69.49720764 211.54107666]
[64.61270142 225.72351074]
[53.35645294 235.63798523]
[38.67082977 238.69288635]
[24.39461327 234.08967590]
[14.25957298 223.03160095]
[10.91498470 208.40922546]
[15.23465252 194.04556274]
[3.27231526 203.09556580]
[-8.69002151 212.14556885]
[-20.09248352 221.89154053]
[-30.89463997 232.29890442]
[-41.69679642 242.70628357]
[-52.49895477 253.11364746]
[-43.21055984 264.90789795]
[-35.14266968 277.56838989]
[-28.37546349 290.96926880]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 207]
[59 206]
[60 205]
[61 204]
[70 203]
[71 202]
[72 201]
[73 190]
[74 189]
[75 188]
[77 187]
[79 185]
[80 184]
[81 183]
[82 159]
[84 157]
[85 156]
[86 155]
[88 153]
[89 152]
[90 121]
[91 120]
[92 119]
[93 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
