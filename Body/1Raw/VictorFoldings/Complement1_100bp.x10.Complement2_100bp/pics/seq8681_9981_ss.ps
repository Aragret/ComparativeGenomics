%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[65.36650085 482.63015747]
[59.23412704 496.34426880]
[51.32850266 509.11865234]
[41.79070663 520.72528076]
[30.79095459 530.95703125]
[18.52555275 539.63134766]
[5.21338797 546.59332275]
[-8.90796757 551.71887207]
[-23.58650017 554.91638184]
[-38.56025696 556.12884521]
[-53.56201172 555.33459473]
[-68.32404327 552.54785156]
[-82.58290100 547.81835938]
[-96.08412170 541.23040771]
[-108.58676147 532.90173340]
[-119.86769104 522.98083496]
[-129.72558594 511.64480591]
[-137.98454285 499.09597778]
[-144.49714661 485.55828857]
[-149.14718628 471.27328491]
[-151.85165405 456.49597168]
[-152.56231689 441.49002075]
[-151.26647949 426.52325439]
[-147.98725891 411.86276245]
[-142.78318787 397.77017212]
[-135.74713135 384.49697876]
[-127.00466156 372.28009033]
[-116.71179199 361.33749390]
[-105.05221558 351.86450195]
[-92.23401642 344.03015137]
[-78.48593903 337.97424316]
[-64.05333710 333.80490112]
[-49.19378662 331.59646606]
[-34.17246246 331.38842773]
[-19.25744438 333.18441772]
[-4.71490431 336.95245361]
[0.94788218 323.06240845]
[6.61066866 309.17239380]
[12.27345562 295.28234863]
[11.88772202 287.90176392]
[18.12533951 281.22869873]
[23.99429893 267.42453003]
[29.86326027 253.62034607]
[35.73221970 239.81617737]
[23.79130745 228.21141052]
[17.20907021 212.87661743]
[17.02123260 196.15312195]
[23.28485489 180.60614014]
[35.06525040 168.63125610]
[50.57534409 162.08531189]
[67.44674683 161.99851990]
[72.90210724 148.02572632]
[78.35746002 134.05293274]
[83.81282043 120.08013153]
[89.26817322 106.10733795]
[77.98973846 115.99655914]
[64.32209015 122.17681885]
[49.44763565 124.11344910]
[34.65315628 121.63891602]
[21.21851921 114.96729279]
[10.30595875 104.67573547]
[2.85952044 91.65457916]
[-0.47660458 77.03027344]
[0.58619159 62.06797409]
[5.95596647 48.06206512]
[15.16818142 36.22419739]
[27.42588615 27.57846642]
[41.66866684 22.87281418]
[56.66438293 22.51432800]
[71.11575317 26.53401756]
[83.77259064 34.58414078]
[93.53994751 45.96828461]
[99.57286072 59.70160294]
[101.34941101 74.59602356]
[98.71703339 89.35970306]
[107.85583496 77.46507263]
[116.99463654 65.57044220]
[126.13343811 53.67580795]
[128.40574646 38.01863098]
[142.29537964 32.64019394]
[151.16627502 20.54444122]
[159.76483154 8.25360298]
[168.36340332 -4.03723526]
[176.96195984 -16.32807350]
[185.56053162 -28.61891174]
[194.15908813 -40.90974808]
[195.73001099 -56.65277100]
[209.36561584 -62.64604950]
[217.96418762 -74.93688965]
[226.56274414 -87.22772980]
[235.16131592 -99.51856232]
[243.75987244 -111.80940247]
[232.29354858 -121.49642944]
[221.75561523 -132.18601990]
[212.23342896 -143.78959656]
[203.80586243 -156.21101379]
[196.54277039 -169.34732056]
[190.50431824 -183.08967590]
[185.74057007 -197.32421875]
[182.29098511 -211.93296814]
[180.18415833 -226.79487610]
[179.43753052 -241.78680420]
[180.05729675 -256.78451538]
[182.03833008 -271.66372681]
[185.36419678 -286.30111694]
[190.00735474 -300.57543945]
[195.92932129 -314.36840820]
[203.08103943 -327.56567383]
[211.40321350 -340.05795288]
[220.82690430 -351.74166870]
[231.27401733 -362.52001953]
[242.65798950 -372.30371094]
[254.88447571 -381.01165771]
[267.85217285 -388.57168579]
[281.45361328 -394.92117310]
[295.57611084 -400.00747681]
[310.10260010 -403.78848267]
[324.91275024 -406.23284912]
[339.88381958 -407.32031250]
[354.89172363 -407.04187012]
[369.81216431 -405.39981079]
[384.52142334 -402.40774536]
[398.89767456 -398.09051514]
[412.82177734 -392.48382568]
[426.17831421 -385.63418579]
[438.85665894 -377.59832764]
[450.75173950 -368.44284058]
[461.76495361 -358.24362183]
[471.80505371 -347.08514404]
[480.78884888 -335.05990601]
[488.64190674 -322.26751709]
[495.29916382 -308.81402588]
[500.70541382 -294.81091309]
[504.81588745 -280.37417603]
[507.59649658 -265.62347412]
[509.02423096 -250.68101501]
[509.08724976 -235.67063904]
[507.78503418 -220.71673584]
[505.12835693 -205.94320679]
[501.13922119 -191.47245789]
[495.85073853 -177.42443848]
[489.30670166 -163.91552734]
[481.56130981 -151.05767822]
[472.67880249 -138.95742798]
[462.73272705 -127.71504974]
[451.80554199 -117.42371368]
[439.98776245 -108.16868591]
[427.37734985 -100.02666473]
[414.07876587 -93.06511688]
[400.20223999 -87.34172058]
[385.86273193 -82.90392303]
[371.17910767 -79.78847504]
[356.27297974 -78.02120972]
[341.26794434 -77.61676025]
[326.28826904 -78.57848358]
[311.45812988 -80.89841461]
[296.90039062 -84.55731964]
[282.73568726 -89.52488708]
[269.08142090 -95.75994873]
[256.05072021 -103.21083832]
[247.45214844 -90.91999817]
[238.85359192 -78.62916565]
[230.25502014 -66.33832550]
[221.65646362 -54.04748535]
[220.70056152 -39.18358612]
[206.44993591 -32.31118393]
[197.85136414 -20.02034760]
[189.25280762 -7.72950888]
[180.65423584 4.56132889]
[172.05567932 16.85216713]
[163.45710754 29.14300537]
[163.70748901 32.66005707]
[162.26679993 36.47311783]
[159.01445007 39.78605652]
[154.19000244 41.77899551]
[152.57136536 56.58538818]
[138.02807617 62.81460953]
[128.88926697 74.70924377]
[119.75046539 86.60387421]
[110.61166382 98.49850464]
[103.24097443 111.56269073]
[97.78561401 125.53549194]
[92.33026123 139.50828552]
[86.87490082 153.48107910]
[81.41954803 167.45388794]
[91.62128448 176.20509338]
[98.61817932 187.65457153]
[101.74131012 200.68080139]
[100.70040131 214.01283264]
[95.61073303 226.35435486]
[86.98059082 236.50970459]
[75.66052246 243.49967957]
[62.75952148 246.65599060]
[49.53639984 245.68513489]
[43.66743851 259.48931885]
[37.79847717 273.29348755]
[31.92951584 287.09765625]
[26.16348267 300.94515991]
[20.50069618 314.83517456]
[14.83790874 328.72518921]
[9.17512226 342.61523438]
[22.20691109 350.08889771]
[34.12623978 359.23291016]
[44.72039795 369.88409424]
[53.80031204 381.85232544]
[61.20394516 394.92404175]
[66.79917145 408.86593628]
[70.48613739 423.42926025]
[72.19904327 438.35403442]
[71.90731812 453.37396240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 201]
[37 200]
[38 199]
[39 198]
[41 197]
[42 196]
[43 195]
[44 194]
[51 185]
[52 184]
[53 183]
[54 182]
[55 181]
[75 180]
[76 179]
[77 178]
[78 177]
[80 175]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
