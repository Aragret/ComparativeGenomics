%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[195.72418213 861.78771973]
[181.02314758 858.79742432]
[166.45536804 855.21386719]
[152.04478455 851.04290771]
[137.81507874 846.29132080]
[123.78961945 840.96697998]
[109.99144745 835.07867432]
[96.44324493 828.63598633]
[83.16726685 821.64953613]
[70.18531799 814.13085938]
[57.51873779 806.09216309]
[45.18833542 797.54681396]
[33.21436691 788.50878906]
[21.61650658 778.99291992]
[10.41381168 769.01489258]
[-0.37531450 758.59100342]
[-10.73314381 747.73846436]
[-20.64265823 736.47509766]
[-30.08757782 724.81939697]
[-39.05238342 712.79052734]
[-47.52234650 700.40820312]
[-55.48355103 687.69281006]
[-62.92291260 674.66522217]
[-69.82821655 661.34686279]
[-76.18811035 647.75958252]
[-81.99214935 633.92578125]
[-87.23079681 619.86804199]
[-91.89543915 605.60961914]
[-95.97841644 591.17388916]
[-99.47303009 576.58447266]
[-102.37351990 561.86547852]
[-104.67514038 547.04101562]
[-106.37409210 532.13549805]
[-107.46759033 517.17333984]
[-107.95384216 502.17913818]
[-107.83204651 487.17755127]
[-107.10240173 472.19323730]
[-105.76611328 457.25082397]
[-103.82536316 442.37481689]
[-101.28335571 427.58966064]
[-98.14425659 412.91970825]
[-94.41322327 398.38900757]
[-90.09638977 384.02142334]
[-85.20085144 369.84060669]
[-79.73464966 355.86981201]
[-73.70676422 342.13204956]
[-67.12709045 328.64984131]
[-60.00645447 315.44534302]
[-52.35654831 302.54028320]
[-44.18993759 289.95581055]
[-35.52004242 277.71267700]
[-26.36111069 265.83090210]
[-16.72818756 254.33009338]
[-6.63709879 243.22911072]
[3.89557385 232.54618835]
[14.85252571 222.29888916]
[26.21575546 212.50404358]
[37.96659088 203.17773438]
[50.08572769 194.33531189]
[62.55325699 185.99128723]
[75.34868622 178.15936279]
[88.45099640 170.85241699]
[101.83866882 164.08245850]
[115.48969269 157.86061096]
[109.82690430 143.97058105]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[84.98957062 106.25028229]
[87.45326996 89.65792084]
[81.58431244 75.85374451]
[75.71534729 62.04956436]
[69.84638977 48.24538803]
[55.27957535 51.94787216]
[40.31828690 53.38324356]
[25.31323814 52.51784897]
[10.61616516 49.37197495]
[-3.42840767 44.01936722]
[-16.49125671 36.58549881]
[-28.26617050 27.24463081]
[-38.47712708 16.21572304]
[-46.88476944 3.75731325]
[-53.29200745 -9.83855820]
[-57.54864883 -24.25318527]
[-59.55490875 -39.14866638]
[-59.26376343 -54.17583084]
[-56.68202972 -68.98242188]
[-51.87023163 -83.22134399]
[-44.94116592 -96.55883026]
[-36.05725479 -108.68222046]
[-25.42675591 -119.30732727]
[-13.29885960 -128.18508911]
[0.04213730 -135.10737610]
[14.28350353 -139.91195679]
[29.09140205 -142.48617554]
[44.11870956 -142.76969910]
[59.01317215 -140.75587463]
[73.42563629 -136.49192810]
[87.01825714 -130.07778931]
[99.47239685 -121.66383362]
[110.49612427 -111.44728088]
[119.83101654 -99.66762543]
[127.25825500 -86.60100555]
[132.60374451 -72.55371857]
[135.74215698 -57.85505676]
[136.59992981 -42.84956741]
[135.15698242 -27.88900948]
[131.44709778 -13.32407761]
[125.55727386 0.50380605]
[117.62555695 13.27049541]
[107.83789062 24.67672157]
[96.42370605 34.45510483]
[83.65056610 42.37642670]
[89.51952362 56.18060303]
[95.38848877 69.98477936]
[101.25744629 83.78895569]
[111.77629089 88.78848267]
[116.25323486 99.54014587]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[123.71693420 138.30778503]
[129.37971497 152.19781494]
[143.48976135 147.10183716]
[157.79470825 142.58187866]
[172.27110291 138.64533997]
[186.89511108 135.29869080]
[201.64274597 132.54745483]
[216.48976135 130.39611816]
[231.41175842 128.84825134]
[246.38423157 127.90636444]
[261.38256836 127.57202148]
[276.38214111 127.84577942]
[291.35830688 128.72717285]
[306.28643799 130.21475220]
[321.14199829 132.30609131]
[335.90063477 134.99774170]
[350.53805542 138.28529358]
[365.03021240 142.16333008]
[379.35333252 146.62547302]
[393.48382568 151.66441345]
[407.39852905 157.27185059]
[421.07452393 163.43859863]
[434.48937988 170.15449524]
[447.62106323 177.40852356]
[460.44799805 185.18876648]
[472.94906616 193.48243713]
[485.10379028 202.27590942]
[496.89215088 211.55473328]
[508.29479980 221.30366516]
[519.29296875 231.50668335]
[529.86865234 242.14703369]
[540.00445557 253.20722961]
[549.68371582 264.66909790]
[558.89050293 276.51379395]
[567.60968018 288.72189331]
[575.82696533 301.27328491]
[583.52886963 314.14739990]
[590.70275879 327.32305908]
[597.33673096 340.77862549]
[603.41998291 354.49197388]
[608.94250488 368.44058228]
[613.89520264 382.60156250]
[618.26995850 396.95159912]
[622.05957031 411.46713257]
[625.25781250 426.12432861]
[627.85943604 440.89907837]
[629.86016846 455.76712036]
[631.25671387 470.70404053]
[632.04681396 485.68530273]
[632.22912598 500.68624878]
[631.80334473 515.68231201]
[630.77020264 530.64874268]
[629.13140869 545.56103516]
[626.88958740 560.39465332]
[624.04852295 575.12524414]
[620.61279297 589.72857666]
[616.58807373 604.18072510]
[611.98095703 618.45782471]
[606.79907227 632.53656006]
[601.05090332 646.39367676]
[594.74584961 660.00646973]
[587.89434814 673.35260010]
[580.50756836 686.41009521]
[572.59771729 699.15747070]
[564.17779541 711.57385254]
[555.26159668 723.63885498]
[545.86376953 735.33251953]
[535.99975586 746.63580322]
[525.68579102 757.53002930]
[514.93878174 767.99731445]
[503.77642822 778.02044678]
[492.21704102 787.58300781]
[480.27963257 796.66931152]
[467.98379517 805.26434326]
[455.34976196 813.35400391]
[442.39825439 820.92498779]
[429.15054321 827.96496582]
[415.62844849 834.46221924]
[401.85415649 840.40618896]
[387.85028076 845.78704834]
[373.63983154 850.59594727]
[359.24621582 854.82507324]
[344.69299316 858.46734619]
[330.00415039 861.51684570]
[315.20379639 863.96862793]
[300.31622314 865.81854248]
[285.36590576 867.06365967]
[270.37741089 867.70184326]
[255.37538147 867.73211670]
[240.38444519 867.15435791]
[225.42922974 865.96960449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 121]
[65 120]
[66 119]
[67 118]
[69 115]
[70 114]
[71 113]
[72 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
