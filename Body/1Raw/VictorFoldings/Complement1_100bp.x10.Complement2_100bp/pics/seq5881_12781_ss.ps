%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[23.49373817 747.53393555]
[17.62166977 761.40234375]
[8.90521812 773.68395996]
[-2.24793124 783.80432129]
[-15.31612587 791.29003906]
[-29.68814278 795.79107666]
[-44.69177628 797.09686279]
[-59.62527847 795.14630127]
[-73.79018402 790.03070068]
[-86.52397156 781.98925781]
[-97.23106384 771.39813232]
[-105.41066742 758.75262451]
[-110.68020630 744.64428711]
[-112.79322052 729.73291016]
[-111.65087128 714.71594238]
[-107.30659485 700.29577637]
[-99.96357727 687.14685059]
[-89.96527100 675.88415527]
[-77.77931213 667.03448486]
[-63.97565460 661.01177979]
[-49.19992447 658.09771729]
[-34.14321136 658.42852783]
[-30.60353851 643.85217285]
[-27.06386757 629.27575684]
[-33.08750534 618.78570557]
[-30.25783920 606.61291504]
[-19.56056404 599.40655518]
[-15.80426216 584.88452148]
[-12.04796219 570.36242676]
[-8.29166126 555.84039307]
[-4.53536081 541.31835938]
[-0.77905989 526.79626465]
[2.76061249 512.21990967]
[6.08287191 497.59243774]
[1.35662186 483.46755981]
[11.95827579 471.72381592]
[15.28053474 457.09637451]
[18.60279465 442.46890259]
[21.92505455 427.84143066]
[7.89427948 421.44705200]
[-4.51028156 412.27908325]
[-14.74808598 400.73410034]
[-22.37240410 387.31234741]
[-27.04981613 372.59600830]
[-28.57479095 357.22406006]
[-26.87871552 341.86434937]
[-22.03297806 327.18475342]
[-14.24597168 313.82403564]
[-3.85412550 302.36404419]
[8.69262600 293.30450439]
[22.85032082 287.04107666]
[38.00455856 283.84811401]
[53.49715805 283.86666870]
[56.60126877 269.19137573]
[43.10844421 262.70816040]
[31.55247307 253.17823792]
[22.60785294 241.15219116]
[16.79800415 227.32650757]
[14.46464729 212.50317383]
[15.74770546 197.54315186]
[20.57692337 183.31643677]
[28.67569733 170.65139771]
[39.57691574 160.28657532]
[52.64989853 152.82759094]
[67.13687897 148.71182251]
[82.19695282 148.18267822]
[85.30105591 133.50737000]
[88.40516663 118.83206940]
[91.50927734 104.15676880]
[89.71763611 99.22686005]
[90.81566620 93.64405823]
[94.93046570 89.09374237]
[98.47013855 74.51737213]
[101.90119934 59.91504669]
[105.22345734 45.28758621]
[103.63596344 38.86953354]
[105.28105927 33.42980194]
[108.86853027 30.27717018]
[112.62483215 15.75511074]
[99.74485016 23.44315338]
[84.91691589 21.17767906]
[74.92016602 9.99443531]
[74.32497406 -4.99375153]
[83.40345764 -16.93448448]
[98.00505829 -20.36861992]
[111.45411682 -13.72611809]
[117.60205078 -0.04199338]
[122.84877014 -14.09446430]
[128.09548950 -28.14693642]
[133.34220886 -42.19940567]
[138.48416138 -56.29054642]
[143.52108765 -70.41957855]
[148.55799866 -84.54860687]
[152.42230225 -99.04229736]
[155.08810425 -113.80352020]
[157.75389099 -128.56472778]
[160.41969299 -143.32595825]
[163.08547974 -158.08717346]
[165.75128174 -172.84838867]
[151.98481750 -178.99230957]
[140.08914185 -188.25280762]
[130.75587463 -200.09144592]
[124.52763367 -213.81997681]
[121.76651001 -228.64021301]
[122.63303375 -243.69055176]
[127.07683563 -258.09597778]
[134.83955383 -271.01895142]
[145.46987915 -281.70819092]
[158.34976196 -289.54220581]
[172.73039246 -294.06555176]
[187.77571106 -295.01525879]
[202.61099243 -292.33609009]
[216.37373352 -286.18380737]
[228.26377869 -276.91613770]
[237.58987427 -265.07180786]
[243.80979919 -251.33952332]
[246.56193542 -236.51760864]
[245.68627930 -221.46780396]
[241.23374939 -207.06507874]
[233.46319580 -194.14680481]
[222.82640076 -183.46400452]
[209.94175720 -175.63780212]
[195.55838013 -171.12316895]
[180.51249695 -170.18258667]
[177.84669495 -155.42137146]
[175.18090820 -140.66015625]
[172.51510620 -125.89894104]
[169.84931946 -111.13771820]
[167.18351746 -96.37650299]
[177.70838928 -107.06420898]
[191.96612549 -111.72436523]
[206.77149963 -109.31588745]
[218.81697083 -100.37682343]
[225.41152954 -86.90419006]
[225.08195496 -71.90781403]
[217.90185547 -58.73791504]
[205.47529602 -50.33668518]
[190.57839966 -48.58098221]
[176.53916931 -53.86303329]
[166.49400330 -65.00281525]
[162.68702698 -79.51168823]
[157.65011597 -65.38265991]
[152.61318970 -51.25363159]
[153.32809448 -43.89763260]
[147.39466858 -36.95269012]
[142.14796448 -22.90021706]
[136.90124512 -8.84774685]
[131.65452576 5.20472479]
[127.14688873 19.51141167]
[123.39059448 34.03347015]
[119.85092163 48.60984802]
[116.52866364 63.23730469]
[118.11262512 70.45623016]
[113.04651642 78.05704498]
[109.50684357 92.63341522]
[106.18458557 107.26087952]
[103.08047485 121.93618011]
[99.97636414 136.61148071]
[96.87225342 151.28678894]
[110.42817688 157.86877441]
[122.00779724 167.49813843]
[130.94079590 179.61180115]
[136.71138000 193.50303650]
[138.98814392 208.36270142]
[137.64303589 223.32637024]
[132.75856018 237.52461243]
[124.62274933 250.13352966]
[113.71218109 260.42251587]
[100.66404724 267.79666138]
[86.23895264 271.83111572]
[71.27657318 272.29550171]
[68.17246246 286.97079468]
[81.57343292 292.79061890]
[93.57267761 301.11706543]
[103.70748901 311.62667847]
[111.58754730 323.91186523]
[116.90988922 337.49673462]
[119.47061157 351.85546875]
[119.17265320 366.43273926]
[116.02946472 380.66513062]
[110.16445923 394.00296021]
[101.80609131 405.93145752]
[91.27904510 415.99066162]
[78.99155426 423.79315186]
[65.41961670 429.03900146]
[51.08851242 431.52728271]
[36.55251312 431.16369629]
[33.23025513 445.79116821]
[29.90799522 460.41864014]
[26.58573532 475.04608154]
[31.07435608 490.21719360]
[20.71033287 500.91470337]
[17.38807297 515.54217529]
[18.97556686 521.96020508]
[17.33047104 527.39996338]
[13.74299908 530.55255127]
[9.98669910 545.07464600]
[6.23039818 559.59667969]
[2.47409725 574.11877441]
[-1.28220332 588.64080811]
[-5.03850412 603.16284180]
[0.29220665 620.78857422]
[-12.48749161 632.81542969]
[-16.02716446 647.39184570]
[-19.56683540 661.96820068]
[-6.03527832 668.57965088]
[5.75837517 677.94573975]
[15.26251411 689.62841797]
[22.03261375 703.08129883]
[25.75202179 717.67517090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 205]
[23 204]
[24 203]
[27 201]
[28 200]
[29 199]
[30 198]
[31 197]
[32 196]
[33 193]
[34 192]
[36 190]
[37 189]
[38 188]
[39 187]
[53 172]
[54 171]
[66 159]
[67 158]
[68 157]
[69 156]
[72 155]
[73 154]
[74 152]
[75 151]
[78 150]
[79 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 143]
[92 142]
[93 141]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
