%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[176.68399048 789.15899658]
[162.20193481 785.24200439]
[147.90589905 780.69268799]
[133.82348633 775.51977539]
[119.98188782 769.73333740]
[106.40780640 763.34454346]
[93.12745667 756.36560059]
[80.16646576 748.81011963]
[67.54985046 740.69262695]
[55.30197144 732.02874756]
[43.44646454 722.83526611]
[32.00621414 713.12994385]
[21.00330734 702.93145752]
[10.45898056 692.25952148]
[0.39358693 681.13476562]
[-9.17344379 669.57861328]
[-18.22364616 657.61334229]
[-26.73954964 645.26214600]
[-34.70471573 632.54882812]
[-42.10377121 619.49786377]
[-48.92243195 606.13458252]
[-55.14753723 592.48461914]
[-60.76707077 578.57440186]
[-65.77017975 564.43078613]
[-70.14722443 550.08105469]
[-73.88973236 535.55297852]
[-76.99049377 520.87445068]
[-79.44352722 506.07394409]
[-81.24407959 491.17993164]
[-82.38869476 476.22125244]
[-82.87515259 461.22671509]
[-82.70251465 446.22525024]
[-81.87111664 431.24588013]
[-80.38256836 416.31750488]
[-78.23973083 401.46887207]
[-75.44675446 386.72872925]
[-72.00901794 372.12548828]
[-67.93315887 357.68731689]
[-63.22705460 343.44213867]
[-57.89978027 329.41741943]
[-51.96162415 315.64019775]
[-45.42404175 302.13714600]
[-38.29965591 288.93426514]
[-30.60222244 276.05706787]
[-22.34659576 263.53039551]
[-13.54871082 251.37841797]
[-4.22555161 239.62463379]
[5.60488605 228.29170227]
[15.92362690 217.40150452]
[26.71075439 206.97505188]
[37.94544220 197.03248596]
[49.60601044 187.59298706]
[61.66994476 178.67478943]
[74.11396027 170.29508972]
[86.91403961 162.47007751]
[100.04547119 155.21484375]
[113.48291779 148.54341125]
[107.40908051 134.82814026]
[101.33525085 121.11286926]
[95.26141357 107.39760590]
[92.52144623 106.06266022]
[90.20664978 103.70125580]
[88.69814301 100.46894073]
[88.31425476 96.65988922]
[89.26142120 92.68046570]
[84.01470184 78.62799072]
[78.76798248 64.57552338]
[73.52127075 50.52304840]
[68.27455139 36.47057724]
[63.02783203 22.41810608]
[57.78111267 8.36563492]
[43.12224579 11.65672970]
[28.15176582 12.92105198]
[13.14856720 12.13504791]
[-1.60784972 9.31335926]
[-15.84258175 4.50855350]
[-29.29044533 -2.18985915]
[-41.70091248 -10.65709114]
[-52.84278870 -20.73540306]
[-62.50850296 -32.23704147]
[-70.51799011 -44.94774246]
[-76.72204590 -58.63070679]
[-81.00507355 -73.03102875]
[-83.28730011 -87.88044739]
[-83.52620697 -102.90232086]
[-81.71733856 -117.81680298]
[-77.89439392 -132.34603882]
[-72.12859344 -146.21937561]
[-64.52735138 -159.17834473]
[-55.23227310 -170.98153687]
[-44.41651535 -181.40905762]
[-32.28157806 -190.26664734]
[-19.05352211 -197.38931274]
[-4.97877979 -202.64434814]
[9.68044567 -205.93385315]
[24.65106201 -207.19654846]
[39.65417480 -206.40892029]
[54.41028595 -203.58564758]
[68.64450073 -198.77929688]
[82.09163666 -192.07942200]
[94.50119019 -183.61085510]
[105.64197540 -173.53132629]
[115.30644226 -162.02864075]
[123.31455231 -149.31707764]
[129.51712036 -135.63343811]
[133.79859924 -121.23265839]
[136.07922363 -106.38299561]
[136.31649780 -91.36109161]
[134.50601196 -76.44680786]
[130.68150330 -61.91798019]
[124.91419220 -48.04527283]
[117.31154633 -35.08712769]
[108.01519012 -23.28494644]
[97.19831085 -12.85859585]
[85.06240845 -4.00231218]
[71.83358765 3.11891675]
[77.08029938 17.17138863]
[82.32701874 31.22385979]
[87.57373810 45.27632904]
[92.82045746 59.32880020]
[98.06717682 73.38127136]
[103.31389618 87.43374634]
[108.97667694 101.32376862]
[115.05051422 115.03903961]
[121.12435150 128.75430298]
[127.19818115 142.46957397]
[141.16925049 137.00309753]
[155.36692810 132.15556335]
[169.76383972 127.93634033]
[184.33218384 124.35356140]
[199.04383850 121.41413879]
[213.87040710 119.12375641]
[228.78326416 117.48682404]
[243.75363159 116.50651550]
[258.75259399 116.18471527]
[273.75125122 116.52204132]
[288.72058105 117.51784515]
[303.63174438 119.17020416]
[318.45593262 121.47593689]
[333.16452026 124.43058014]
[347.72915649 128.02844238]
[362.12170410 132.26257324]
[376.31436157 137.12478638]
[390.27975464 142.60571289]
[403.99090576 148.69477844]
[417.42138672 155.38021851]
[430.54525757 162.64912415]
[443.33718872 170.48747253]
[455.77246094 178.88014221]
[467.82708740 187.81091309]
[479.47781372 197.26255798]
[490.70214844 207.21682739]
[501.47839355 217.65451050]
[511.78579712 228.55545044]
[521.60443115 239.89862061]
[530.91528320 251.66212463]
[539.70050049 263.82324219]
[547.94311523 276.35852051]
[555.62707520 289.24374390]
[562.73773193 302.45404053]
[569.26123047 315.96389771]
[575.18499756 329.74728394]
[580.49768066 343.77755737]
[585.18896484 358.02764893]
[589.24975586 372.47003174]
[592.67224121 387.07687378]
[595.44989014 401.81991577]
[597.57727051 416.67074585]
[599.05023193 431.60070801]
[599.86602783 446.58093262]
[600.02301025 461.58255005]
[599.52093506 476.57656860]
[598.36071777 491.53405762]
[596.54467773 506.42617798]
[594.07623291 521.22412109]
[590.96014404 535.89935303]
[587.20251465 550.42358398]
[582.81048584 564.76873779]
[577.79266357 578.90716553]
[572.15863037 592.81146240]
[565.91931152 606.45495605]
[559.08673096 619.81115723]
[551.67407227 632.85437012]
[543.69567871 645.55938721]
[535.16687012 657.90173340]
[526.10424805 669.85754395]
[516.52514648 681.40368652]
[506.44818115 692.51800537]
[495.89273071 703.17889404]
[484.87921143 713.36590576]
[473.42883301 723.05932617]
[461.56375122 732.24041748]
[449.30685425 740.89154053]
[436.68179321 748.99591064]
[423.71292114 756.53784180]
[410.42532349 763.50292969]
[396.84457397 769.87762451]
[382.99694824 775.64965820]
[368.90917969 780.80780029]
[354.60839844 785.34222412]
[340.12225342 789.24414062]
[325.47872925 792.50598145]
[310.70605469 795.12145996]
[295.83273315 797.08551025]
[280.88751221 798.39440918]
[265.89923096 799.04559326]
[250.89678955 799.03778076]
[235.90917969 798.37097168]
[220.96533203 797.04650879]
[206.09408569 795.06695557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 126]
[58 125]
[59 124]
[60 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
