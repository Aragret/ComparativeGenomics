%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[271.78164673 362.44116211]
[275.18603516 347.82348633]
[279.80166626 333.54196167]
[285.59619141 319.69671631]
[292.52890015 306.38494873]
[300.55123901 293.69995117]
[288.58889771 284.64996338]
[276.62655640 275.59994507]
[264.66424561 266.54995728]
[252.70190430 257.49996948]
[240.73956299 248.44996643]
[228.77722168 239.39996338]
[213.95919800 237.89158630]
[207.62187195 223.39506531]
[195.65954590 214.34506226]
[183.69720459 205.29507446]
[171.73486328 196.24507141]
[159.77252197 187.19506836]
[147.81019592 178.14506531]
[135.84785461 169.09506226]
[142.58064270 182.49916077]
[146.31762695 197.02619934]
[146.88876343 212.01531982]
[144.26808167 226.78462219]
[138.57482910 240.66218567]
[130.06797791 253.01667786]
[119.13454437 263.28604126]
[106.27193451 271.00311279]
[92.06529999 275.81683350]
[77.16095734 277.50814819]
[62.23695374 276.00015259]
[47.97222519 271.36145020]
[35.01572800 263.80307007]
[23.95689011 253.66886902]
[15.29881954 241.41987610]
[9.43540001 227.61334229]
[6.63337755 212.87738037]
[7.02022505 197.88237000]
[10.57834339 183.31048584]
[17.14586258 169.82464600]
[26.42400551 158.03837585]
[37.99067688 148.48788452]
[51.31966782 141.60762024]
[65.80460358 137.71061707]
[80.78651428 136.97415161]
[95.58382416 139.43173218]
[109.52334595 144.97155762]
[121.97425079 153.34437561]
[114.50650787 140.33541870]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[79.95227814 80.14126587]
[66.37158966 72.02489471]
[66.74560547 57.13498306]
[59.27786255 44.12603378]
[51.81012344 31.11708069]
[52.75978470 46.08698654]
[50.39980698 60.90017700]
[44.84534836 74.83387756]
[36.36741257 87.20822906]
[25.37966156 97.41946411]
[12.41821384 104.96935272]
[-1.88451624 109.48952484]
[-16.83066559 110.75942230]
[-31.69097710 108.71708679]
[-45.74038315 103.46217346]
[-58.29338455 95.25106812]
[-68.73749542 84.48442841]
[-76.56311035 71.68756866]
[-81.38842010 57.48487473]
[-82.97797394 42.56933594]
[-81.25421906 27.66870880]
[-76.30125427 13.51003075]
[-68.36075592 0.78413433]
[-57.82014847 -9.88805676]
[-45.19374084 -17.98582077]
[-31.09759712 -23.11405182]
[-16.21950150 -25.02253151]
[-1.28539014 -23.61814117]
[12.97606945 -18.96940422]
[25.86903000 -11.30314064]
[36.76441193 -0.99340689]
[45.12754822 11.45089722]
[43.12353516 -3.41463137]
[41.11952209 -18.28015900]
[39.11550903 -33.14568710]
[37.11149597 -48.01121521]
[22.13259888 -49.76720047]
[8.06128311 -55.19388580]
[-4.21791601 -63.95014572]
[-13.93311882 -75.48554993]
[-20.47361755 -89.07498169]
[-23.42827415 -103.86419678]
[-22.61135483 -118.92353058]
[-18.07421112 -133.30633545]
[-10.10205173 -146.10850525]
[0.80398524 -156.52528381]
[13.95833874 -163.90185547]
[28.53411293 -167.77452087]
[43.61506653 -167.89985657]
[58.25319290 -164.26997375]
[71.52832794 -157.11305237]
[82.60599518 -146.87898254]
[90.78982544 -134.21107483]
[95.56539154 -119.90567017]
[96.63249207 -104.86199188]
[93.92404175 -90.02571869]
[87.61030579 -76.32946014]
[78.08817291 -64.63417053]
[65.95619965 -55.67503357]
[51.97702408 -50.01522827]
[53.98103714 -35.14970016]
[55.98505020 -20.28417397]
[57.98906326 -5.41864491]
[59.99307632 9.44688320]
[64.81907654 23.64933968]
[72.28681946 36.65829086]
[79.75455475 49.66724396]
[92.80110168 56.85313034]
[92.96122742 72.67353058]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[127.51546478 132.86769104]
[134.98320007 145.87663269]
[144.89785767 157.13273621]
[156.86019897 166.18273926]
[168.82252502 175.23272705]
[180.78486633 184.28273010]
[192.74720764 193.33273315]
[204.70953369 202.38273621]
[216.67187500 211.43272400]
[232.34553528 213.58842468]
[237.82722473 227.43762207]
[249.78956604 236.48762512]
[261.75189209 245.53762817]
[273.71423340 254.58761597]
[285.67657471 263.63763428]
[297.63891602 272.68762207]
[309.60125732 281.73760986]
[319.62615967 270.56765747]
[330.55056763 260.27575684]
[342.29791260 250.93409729]
[354.78573608 242.60818481]
[367.92645264 235.35644531]
[381.62792969 229.22972107]
[395.79400635 224.27101135]
[410.32531738 220.51509094]
[425.11999512 217.98829651]
[440.07418823 216.70835876]
[455.08306885 216.68426514]
[470.04129028 217.91616821]
[484.84399414 220.39543152]
[499.38729858 224.10467529]
[513.56921387 229.01786804]
[527.29028320 235.10055542]
[540.45422363 242.31005859]
[552.96875000 250.59582520]
[564.74603271 259.89971924]
[575.70343018 270.15649414]
[585.76416016 281.29418945]
[594.85760498 293.23468018]
[602.92004395 305.89425659]
[609.89483643 319.18405151]
[615.73309326 333.01089478]
[620.39385986 347.27777100]
[623.84442139 361.88461304]
[626.06066895 376.72897339]
[627.02691650 391.70669556]
[626.73651123 406.71276855]
[625.19140625 421.64190674]
[622.40252686 436.38940430]
[618.38934326 450.85180664]
[613.18005371 464.92767334]
[606.81115723 478.51824951]
[599.32739258 491.52822876]
[590.78118896 503.86636353]
[581.23254395 515.44604492]
[570.74841309 526.18615723]
[559.40234375 536.01129150]
[547.27392578 544.85253906]
[534.44818115 552.64788818]
[521.01513672 559.34265137]
[507.06903076 564.88989258]
[492.70761108 569.25067139]
[478.03167725 572.39440918]
[463.14413452 574.29907227]
[448.14941406 574.95129395]
[433.15274048 574.34649658]
[418.25924683 572.48889160]
[403.57342529 569.39160156]
[389.19830322 565.07623291]
[375.23471069 559.57312012]
[361.78057861 552.92083740]
[348.93026733 545.16607666]
[336.77392578 536.36322021]
[325.39685059 526.57403564]
[314.87881470 515.86712646]
[305.29360962 504.31768799]
[296.70843506 492.00665283]
[289.18356323 479.02038574]
[282.77175903 465.45001221]
[277.51797485 451.39068604]
[273.45910645 436.94104004]
[270.62356567 422.20245361]
[269.03131104 407.27825928]
[268.69345093 392.27319336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[12 137]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[48 128]
[49 127]
[50 126]
[51 125]
[53 123]
[54 122]
[56 120]
[57 119]
[58 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
