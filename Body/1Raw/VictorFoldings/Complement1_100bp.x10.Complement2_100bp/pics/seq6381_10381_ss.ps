%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[146.68168640 875.03106689]
[132.22944641 871.00097656]
[118.01436615 866.20092773]
[104.07743073 860.64477539]
[90.45882416 854.34851074]
[77.19780731 847.33038330]
[64.33262634 839.61047363]
[51.90036774 831.21124268]
[39.93687820 822.15673828]
[28.47664833 812.47308350]
[17.55272675 802.18829346]
[7.19660854 791.33197021]
[-2.56184840 779.93542480]
[-11.69450760 768.03149414]
[-20.17503548 755.65454102]
[-27.97898293 742.84014893]
[-35.08384705 729.62542725]
[-41.46914291 716.04833984]
[-47.11645889 702.14807129]
[-52.00951385 687.96472168]
[-56.13420105 673.53918457]
[-59.47862625 658.91308594]
[-62.03314590 644.12854004]
[-63.79039764 629.22814941]
[-64.74530792 614.25494385]
[-64.89513397 599.25201416]
[-64.23943329 584.26275635]
[-62.78010178 569.33026123]
[-60.52134705 554.49761963]
[-57.46968460 539.80761719]
[-53.63390350 525.30255127]
[-49.02507401 511.02435303]
[-43.65647888 497.01409912]
[-37.54359818 483.31219482]
[-30.70405769 469.95819092]
[-23.15757751 456.99053955]
[-14.92591476 444.44665527]
[-6.03280592 432.36273193]
[3.49610901 420.77355957]
[13.63335609 409.71258545]
[24.34970474 399.21166992]
[35.61426163 389.30114746]
[47.39454269 380.00952148]
[59.65658188 371.36364746]
[72.36502838 363.38839722]
[85.48323822 356.10681152]
[98.97339630 349.53985596]
[112.79659271 343.70648193]
[126.91297150 338.62350464]
[141.28184509 334.30557251]
[137.74217224 319.72918701]
[134.20249939 305.15280151]
[130.66282654 290.57644653]
[117.84885406 283.07058716]
[114.05147552 268.33850098]
[122.01117706 254.94891357]
[118.47150421 240.37254333]
[114.93183136 225.79617310]
[111.39215851 211.21978760]
[107.85248566 196.64341736]
[104.31281281 182.06703186]
[100.77313995 167.49066162]
[94.49406433 181.11318970]
[81.90444183 189.26802063]
[66.90529633 189.42829895]
[54.14428329 181.54435730]
[47.57553864 168.05912781]
[49.23445892 153.15113831]
[58.60701370 141.43980408]
[72.78900909 136.55401611]
[87.38600159 140.00767517]
[97.87507629 150.73086548]
[96.31455994 135.81225586]
[94.75403595 120.89365387]
[93.19351196 105.97504425]
[90.57206726 103.14654541]
[89.21012115 99.17628479]
[89.58962250 94.65267944]
[91.91173553 90.35760498]
[83.36675262 77.04243469]
[90.33279419 63.87719345]
[89.43997955 48.90378952]
[80.89499664 35.58861542]
[87.86103821 22.42337608]
[86.96821594 7.44996977]
[86.07540131 -7.52343607]
[82.44075775 -15.90359974]
[85.28244781 -22.72610474]
[84.61266327 -37.71114349]
[83.94287872 -52.69618225]
[83.27309418 -67.68122101]
[82.60330963 -82.66625977]
[67.84080505 -85.75159454]
[54.30974579 -92.41201782]
[42.86070633 -102.22885895]
[34.21338272 -114.58501434]
[28.91135406 -128.70376587]
[27.28790855 -143.69761658]
[29.44509888 -158.62400818]
[35.24732208 -172.54467773]
[44.32984161 -184.58454895]
[56.12173080 -193.98680115]
[69.88172913 -200.16038513]
[84.74488831 -202.71722412]
[99.77688599 -201.49659729]
[114.03279877 -196.57524109]
[126.61648560 -188.26251221]
[136.73693848 -177.08094788]
[143.75796509 -163.73344421]
[147.23822021 -149.05902100]
[146.95892334 -133.98013306]
[142.93765259 -119.44465637]
[135.42718506 -106.36629486]
[124.89961243 -95.56716919]
[112.01672363 -87.72612000]
[97.58834839 -83.33604431]
[98.25813293 -68.35100555]
[98.92791748 -53.36596680]
[99.59770203 -38.38092804]
[100.26748657 -23.39588928]
[101.04881287 -8.41625214]
[101.94162750 6.55715370]
[102.83444214 21.53055954]
[111.31556702 33.77473450]
[104.41338348 48.01097107]
[105.30619812 62.98437881]
[113.78732300 75.22855377]
[106.88513947 89.46479034]
[108.11211395 104.41452026]
[109.67263794 119.33312988]
[111.23316193 134.25173950]
[112.79368591 149.17033386]
[115.34951782 163.95098877]
[118.88919067 178.52737427]
[122.42886353 193.10374451]
[125.96853638 207.68011475]
[129.50820923 222.25650024]
[133.04788208 236.83287048]
[136.58755493 251.40924072]
[149.80160522 259.65707397]
[153.18368530 274.49002075]
[145.23921204 287.03677368]
[148.77886963 301.61312866]
[152.31854248 316.18951416]
[155.85821533 330.76589966]
[170.60713196 328.01296997]
[185.48255920 326.05569458]
[200.44158936 324.89968872]
[215.44111633 324.54833984]
[230.43786621 325.00259399]
[245.38862610 326.26116943]
[260.25027466 328.32043457]
[274.97994995 331.17446899]
[289.53518677 334.81503296]
[303.87405396 339.23159790]
[317.95516968 344.41149902]
[331.73794556 350.33975220]
[345.18264771 356.99923706]
[358.25051880 364.37081909]
[370.90383911 372.43322754]
[383.10617065 381.16317749]
[394.82232666 390.53552246]
[406.01849365 400.52325439]
[416.66241455 411.09756470]
[426.72338867 422.22796631]
[436.17245483 433.88235474]
[444.98229980 446.02713013]
[453.12753296 458.62728882]
[460.58471680 471.64648438]
[467.33233643 485.04718018]
[473.35089111 498.79077148]
[478.62307739 512.83758545]
[483.13366699 527.14715576]
[486.86965942 541.67816162]
[489.82028198 556.38885498]
[491.97705078 571.23663330]
[493.33370972 586.17883301]
[493.88638306 601.17224121]
[493.63345337 616.17376709]
[492.57565308 631.14007568]
[490.71603394 646.02801514]
[488.05996704 660.79467773]
[484.61508179 675.39746094]
[480.39135742 689.79431152]
[475.40093994 703.94366455]
[469.65823364 717.80480957]
[463.17974854 731.33764648]
[455.98425293 744.50329590]
[448.09240723 757.26367188]
[439.52700806 769.58209229]
[430.31277466 781.42297363]
[420.47619629 792.75219727]
[410.04571533 803.53710938]
[399.05136108 813.74658203]
[387.52487183 823.35119629]
[375.49942017 832.32324219]
[363.00973511 840.63690186]
[350.09179688 848.26812744]
[336.78286743 855.19500732]
[323.12130737 861.39746094]
[309.14651489 866.85772705]
[294.89877319 871.55999756]
[280.41918945 875.49066162]
[265.74948120 878.63848877]
[250.93194580 880.99432373]
[236.00933838 882.55145264]
[221.02464294 883.30529785]
[206.02110291 883.25372314]
[191.04194641 882.39691162]
[176.13038635 880.73730469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 145]
[51 144]
[52 143]
[53 142]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[72 132]
[73 131]
[74 130]
[75 129]
[79 128]
[81 126]
[82 125]
[84 123]
[85 122]
[86 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
