%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[144.07868958 615.85949707]
[152.33244324 603.23699951]
[163.46652222 593.06433105]
[176.78102112 585.98095703]
[173.24134827 571.40454102]
[169.70167542 556.82818604]
[166.16200256 542.25183105]
[162.62234497 527.67541504]
[159.08267212 513.09906006]
[155.54299927 498.52267456]
[141.84992981 496.29367065]
[130.00329590 488.99102783]
[121.80898285 477.68911743]
[118.53091431 464.07498169]
[120.69609833 450.19631958]
[128.01026917 438.15359497]
[139.39735413 429.78216553]
[136.07508850 415.15469360]
[132.75283813 400.52722168]
[124.83325958 413.26617432]
[110.61772156 418.05349731]
[96.60537720 412.70053101]
[89.20248413 399.65457153]
[91.79353333 384.88006592]
[103.19394684 375.13168335]
[118.19159698 374.86630249]
[129.93074036 384.20678711]
[120.73587036 372.48913574]
[126.77845764 357.86730957]
[124.99599457 342.97357178]
[123.21352386 328.07986450]
[114.01865387 316.36221313]
[120.06124115 301.74038696]
[118.27877808 286.84667969]
[116.05365753 272.01263428]
[113.38786316 257.25140381]
[110.72206879 242.49018860]
[100.84604645 231.34059143]
[106.00762177 216.38502502]
[103.34181976 201.62380981]
[100.67602539 186.86259460]
[98.01023102 172.10137939]
[89.52973175 184.47398376]
[75.11460876 188.62178040]
[61.35526657 182.64846802]
[54.54228592 169.28495789]
[57.79047394 154.64086914]
[69.61479950 145.41128540]
[84.60934448 145.81584167]
[95.91970062 155.67120361]
[92.28742218 149.23471069]
[94.90048981 140.48202515]
[94.00767517 125.50861359]
[93.11486053 110.53520966]
[91.88788605 95.58547974]
[90.32736206 80.66687012]
[88.76683807 65.74826813]
[77.60772705 51.10054779]
[85.37336731 35.36327362]
[83.59089661 20.46955681]
[74.26853180 7.68659687]
[80.43861389 -5.86992741]
[78.65615082 -20.76364517]
[63.70334625 -22.63427734]
[49.64131927 -28.02610397]
[37.28592682 -36.62165070]
[27.35288429 -47.91770554]
[20.41632462 -61.25477982]
[16.87560844 -75.85560608]
[16.93233299 -90.87042999]
[20.57885933 -105.42649078]
[27.59900665 -118.67871094]
[37.58086777 -129.85879517]
[49.94097519 -138.31974792]
[63.95840073 -143.57333374]
[62.17593384 -158.46705627]
[60.39347076 -173.36077881]
[58.61100388 -188.25448608]
[56.82853699 -203.14820862]
[52.70153809 -211.29718018]
[55.13211060 -218.27673340]
[53.57158661 -233.19532776]
[50.50408936 -237.41877747]
[49.46707153 -241.94403076]
[50.23546982 -245.94711304]
[52.28981018 -248.81277466]
[43.74482727 -262.12796021]
[50.71086884 -275.29318237]
[49.81805420 -290.26660156]
[41.27307129 -303.58175659]
[48.23911285 -316.74700928]
[47.34629440 -331.72039795]
[44.03040314 -337.44024658]
[44.09169388 -343.12295532]
[46.65656662 -347.15167236]
[46.20996094 -362.14501953]
[45.76335526 -377.13836670]
[45.31674957 -392.13171387]
[31.35319519 -398.29464722]
[21.45300484 -409.91140747]
[17.58186913 -424.67544556]
[20.50840187 -439.65539551]
[29.65154076 -451.87692261]
[43.19590759 -458.91345215]
[58.45225906 -459.36788940]
[72.39143372 -453.14999390]
[82.24580383 -441.49435425]
[86.05876923 -426.71517944]
[83.07326508 -411.74688721]
[73.88207245 -399.56146240]
[60.31009674 -392.57830811]
[60.75670242 -377.58496094]
[61.20330811 -362.59161377]
[61.64991760 -347.59826660]
[62.31970215 -332.61322021]
[63.21251678 -317.63983154]
[71.69364166 -305.39562988]
[64.79145813 -291.15939331]
[65.68427277 -276.18600464]
[74.16539764 -263.94183350]
[67.26321411 -249.70558167]
[68.49018860 -234.75585938]
[70.05071259 -219.83724976]
[71.72225189 -204.93067932]
[73.50472260 -190.03695679]
[75.28718567 -175.14323425]
[77.06965637 -160.24952698]
[78.85211945 -145.35580444]
[93.71340179 -143.55839539]
[107.72103882 -138.25309753]
[120.05924988 -129.74426270]
[130.00837708 -118.52291107]
[136.98683167 -105.23844147]
[140.58512878 -90.66104126]
[140.58987427 -75.63703156]
[136.99647522 -61.03974533]
[130.00958252 -47.71872711]
[120.03148651 -36.45033264]
[107.63894653 -27.89244843]
[93.54986572 -22.54611015]
[95.33232880 -7.65239334]
[104.52720642 4.06526756]
[98.48461914 18.68708992]
[100.26708221 33.58080673]
[109.57946014 41.30131531]
[111.18634796 53.69492722]
[103.68544006 64.18774414]
[105.24596405 79.10634613]
[106.80648804 94.02495575]
[109.42793274 96.85345459]
[110.78987885 100.82371521]
[110.41037750 105.34732056]
[108.08826447 109.64239502]
[108.98107910 124.61579895]
[109.87389374 139.58920288]
[110.87815857 154.55555725]
[112.77144623 169.43557739]
[115.43724823 184.19680786]
[118.10304260 198.95802307]
[120.76883698 213.71923828]
[130.83552551 225.92465210]
[125.48328400 239.82440186]
[128.14907837 254.58561707]
[130.81488037 269.34683228]
[133.73591614 272.55953979]
[135.32304382 276.17138672]
[135.61460876 279.71405029]
[134.79707336 282.77972412]
[133.17250061 285.06420898]
[134.95495605 299.95791626]
[144.27732849 312.74087524]
[138.10723877 326.29739380]
[139.88970947 341.19113159]
[141.67218018 356.08483887]
[150.99453735 368.86779785]
[144.82446289 382.42431641]
[147.38029480 397.20498657]
[150.70254517 411.83242798]
[154.02481079 426.45989990]
[169.91236877 429.96975708]
[182.63327026 440.02075195]
[189.67221069 454.56082153]
[189.66566467 470.65692139]
[182.66569519 485.08651733]
[170.11936951 494.98300171]
[173.65904236 509.55938721]
[177.19871521 524.13574219]
[180.73838806 538.71215820]
[184.27806091 553.28851318]
[187.81773376 567.86486816]
[191.35740662 582.44128418]
[206.43769836 582.62939453]
[220.99722290 586.56274414]
[234.12074280 593.99401855]
[244.98332214 604.45611572]
[252.90209961 617.29132080]
[257.37933350 631.69293213]
[258.13351440 646.75555420]
[255.11732483 661.53228760]
[248.52029419 675.09436035]
[238.75714111 686.58923340]
[226.44158936 695.29431152]
[212.34779358 700.66235352]
[197.36172485 702.35595703]
[182.42538452 700.26861572]
[168.47772217 694.53161621]
[156.39547729 685.50555420]
[146.93814087 673.75781250]
[140.70022583 660.02685547]
[138.07385254 645.17578125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[17 179]
[18 178]
[19 177]
[27 176]
[29 174]
[30 173]
[31 172]
[33 170]
[34 169]
[35 164]
[36 163]
[37 162]
[39 160]
[40 159]
[41 158]
[42 157]
[50 156]
[52 155]
[53 154]
[54 153]
[55 149]
[56 148]
[57 147]
[59 144]
[60 143]
[62 141]
[63 140]
[75 128]
[76 127]
[77 126]
[78 125]
[79 124]
[81 123]
[82 122]
[86 121]
[88 119]
[89 118]
[91 116]
[92 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
