%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[66.63646698 665.23156738]
[55.94699860 675.79003906]
[43.89205551 684.75799561]
[30.70629120 691.96087646]
[16.64637375 697.25854492]
[1.98598230 700.54772949]
[-12.98951435 701.76458740]
[-27.98861313 700.88525391]
[-42.71935272 697.92700195]
[-56.89499664 692.94732666]
[-70.23960876 686.04315186]
[-82.49343109 677.34887695]
[-93.41794586 667.03381348]
[-102.80049896 655.29864502]
[-110.45845795 642.37188721]
[-116.24275970 628.50506592]
[-120.04080963 613.96820068]
[-121.77867126 599.04418945]
[-121.42253113 584.02355957]
[-118.97930908 569.19866943]
[-114.49656677 554.85815430]
[-108.06156158 541.28106689]
[-99.79955292 528.73175049]
[-89.87136841 517.45446777]
[-78.47026062 507.66873169]
[-65.81814575 499.56500244]
[-52.16131592 493.30105591]
[-37.76559448 488.99880981]
[-22.91120148 486.74200439]
[-7.88728476 486.57455444]
[7.01371336 488.49975586]
[10.98580933 474.03524780]
[14.95790577 459.57070923]
[18.93000221 445.10620117]
[14.83917427 430.78436279]
[25.95463943 419.52572632]
[29.92673492 405.06121826]
[33.89883041 390.59667969]
[29.80800438 376.27487183]
[40.92346954 365.01623535]
[44.89556503 350.55169678]
[37.32817078 337.77398682]
[41.15039062 323.04830933]
[54.60414886 315.19757080]
[58.57624435 300.73306274]
[62.54833984 286.26852417]
[65.32395172 271.52755737]
[66.88447571 256.60894775]
[68.44499969 241.69035339]
[70.00551605 226.77174377]
[67.57494354 219.79220581]
[71.70195007 211.64323425]
[73.48441315 196.74951172]
[75.26687622 181.85580444]
[77.04934692 166.96208191]
[65.90257263 176.99948120]
[50.99730301 178.68264771]
[37.89284515 171.38380432]
[31.47682762 157.82524109]
[34.14227295 143.06396484]
[44.89503098 132.60556030]
[59.72459412 130.35075378]
[73.09989929 137.14054871]
[80.03248596 150.44366455]
[83.57215881 135.86727905]
[79.05672455 121.67361450]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[86.21814728 71.60113525]
[90.34581757 54.94948959]
[104.94631195 46.60297394]
[108.26856995 31.97551346]
[102.41544342 14.51634979]
[114.83139038 2.11428523]
[117.93550110 -12.56101704]
[121.03960419 -27.23632050]
[116.32560730 -42.33892822]
[126.52921295 -53.18953705]
[120.16062927 -64.40576935]
[123.04817200 -76.56495667]
[133.11322021 -83.27475739]
[128.62458801 -98.44587708]
[138.98861694 -109.14337158]
[142.31088257 -123.77082825]
[145.63313293 -138.39828491]
[141.14451599 -153.56941223]
[151.50854492 -164.26690674]
[154.83079529 -178.89436340]
[158.15306091 -193.52182007]
[161.47532654 -208.14927673]
[164.79757690 -222.77673340]
[168.11984253 -237.40420532]
[163.63122559 -252.57531738]
[173.99523926 -263.27279663]
[176.10986328 -278.12301636]
[177.00268555 -293.09640503]
[177.89549255 -308.06982422]
[163.80505371 -313.57568359]
[152.10694885 -323.16784668]
[143.94723511 -335.90655518]
[140.12532043 -350.54376221]
[141.01562500 -365.64550781]
[146.53094482 -379.73223877]
[156.13093567 -391.42391968]
[168.87509155 -399.57510376]
[183.51487732 -403.38720703]
[198.61601257 -402.48678589]
[212.69906616 -396.96203613]
[224.38430786 -387.35418701]
[232.52694702 -374.60458374]
[236.32923889 -359.96224976]
[235.41868591 -344.86172485]
[229.88449097 -330.78237915]
[220.26884460 -319.10357666]
[207.51377869 -310.96948242]
[192.86889648 -307.17700195]
[191.97608948 -292.20358276]
[191.08326721 -277.23019409]
[200.26353455 -289.09283447]
[213.86648560 -295.41424561]
[228.85314941 -294.78216553]
[241.87550354 -287.33782959]
[250.02430725 -274.74429321]
[251.47909546 -259.81500244]
[245.91487122 -245.88520813]
[234.57469177 -236.06683350]
[219.99197388 -232.55335999]
[205.42456055 -236.12968445]
[194.12681580 -245.99685669]
[188.62269592 -259.95056152]
[193.34895325 -245.82568359]
[182.74729919 -234.08193970]
[179.42503357 -219.45448303]
[176.10278320 -204.82702637]
[172.78051758 -190.19955444]
[169.45826721 -175.57209778]
[166.13600159 -160.94464111]
[170.86225891 -146.81977844]
[160.26060486 -135.07603455]
[156.93833923 -120.44857025]
[153.61607361 -105.82111359]
[158.34233093 -91.69624329]
[147.74067688 -79.95249939]
[153.82695007 -63.49272537]
[141.20451355 -50.08542633]
[146.14054871 -36.03249359]
[135.71490479 -24.13220978]
[132.61079407 -9.45690727]
[129.50668335 5.21839523]
[135.83998108 15.52450562]
[133.37400818 27.77614594]
[122.89603424 35.29777145]
[119.57376862 49.92523193]
[127.89865112 59.76016235]
[129.05621338 72.78867340]
[122.40068054 84.27407074]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[108.67067719 128.86495972]
[98.14852905 139.40695190]
[94.60885620 153.98333740]
[91.94306183 168.74455261]
[90.16059875 183.63825989]
[88.37812805 198.53198242]
[86.59566498 213.42570496]
[84.92412567 228.33227539]
[83.36360168 243.25088501]
[81.80307770 258.16949463]
[80.24255371 273.08807373]
[89.94335938 261.64718628]
[103.81499481 255.93948364]
[118.75849915 257.24014282]
[131.43545532 265.25851440]
[139.01380920 278.20336914]
[139.80052185 293.18270874]
[133.61984253 306.85015869]
[121.85255432 316.15237427]
[107.12750244 319.01119995]
[92.73429871 314.78796387]
[81.88842010 304.42617798]
[77.01286316 290.24063110]
[73.04076385 304.70513916]
[69.06867218 319.16967773]
[76.62618256 332.79031372]
[72.39186096 347.40280151]
[59.36008835 354.52380371]
[55.38799286 368.98831177]
[59.19470978 384.34472656]
[48.36335754 394.56878662]
[44.39125824 409.03329468]
[40.41916275 423.49783325]
[44.22587967 438.85424805]
[33.39452744 449.07827759]
[29.42243004 463.54281616]
[25.45033455 478.00732422]
[21.47823715 492.47186279]
[35.27265549 498.42669678]
[48.10403824 506.24346924]
[59.72261047 515.77001953]
[69.90221405 526.82086182]
[78.44470978 539.18096924]
[85.18380737 552.60968018]
[89.98832703 566.84564209]
[92.76475525 581.61175537]
[93.45903778 596.62054443]
[92.05766296 611.57989502]
[88.58791351 626.19860840]
[83.11733246 640.19213867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 198]
[32 197]
[33 196]
[34 195]
[36 193]
[37 192]
[38 191]
[40 189]
[41 188]
[44 185]
[45 184]
[46 183]
[47 171]
[48 170]
[49 169]
[50 168]
[52 167]
[53 166]
[54 165]
[55 164]
[64 163]
[65 162]
[67 160]
[69 158]
[72 154]
[73 153]
[75 150]
[76 149]
[77 148]
[79 146]
[82 144]
[84 142]
[85 141]
[86 140]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[95 131]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
