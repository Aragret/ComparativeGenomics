%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[197.62861633 610.97009277]
[191.80432129 596.81610107]
[193.23641968 581.57769775]
[201.59580994 568.75665283]
[214.96157837 561.29913330]
[214.51496887 546.30578613]
[214.06835938 531.31243896]
[213.62174988 516.31909180]
[213.17515564 501.32574463]
[212.72854614 486.33239746]
[212.28193665 471.33905029]
[209.72610474 456.55838013]
[205.11209106 442.28564453]
[200.49809265 428.01290894]
[189.22100830 418.28271484]
[192.33822632 402.77163696]
[187.72422791 388.49890137]
[183.11021423 374.22616577]
[178.49620056 359.95343018]
[163.21983337 361.80969238]
[147.86953735 360.65878296]
[133.03179932 356.54287720]
[119.27385712 349.61746216]
[107.12206268 340.14544678]
[97.04168701 328.48721313]
[89.41914368 315.08688354]
[84.54717255 300.45547485]
[82.61357117 285.15124512]
[83.69400024 269.75857544]
[87.74899292 254.86557007]
[94.62540436 241.04156494]
[104.06217957 228.81541443]
[115.70029449 218.65522766]
[129.09638977 210.95046997]
[117.67568970 201.38923645]
[120.56163025 185.83348083]
[115.73562622 171.63101196]
[110.90962982 157.42855835]
[100.20114899 151.80229187]
[96.06430054 140.00949097]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[68.27470398 51.39863968]
[71.72195435 36.90844345]
[67.10794067 22.63570976]
[62.49393463 8.36297512]
[57.77379990 -5.87501335]
[52.94780350 -20.07746887]
[48.12180328 -34.27992630]
[43.29580688 -48.48237991]
[31.52992249 -59.05945587]
[34.76104736 -73.59937286]
[29.93505096 -87.80182648]
[24.89813423 -101.93085480]
[12.82254696 -112.15293121]
[15.61933231 -126.78260040]
[10.37261391 -140.83506775]
[5.12589598 -154.88754272]
[-9.94118881 -157.52006531]
[-21.59069252 -167.27639771]
[-26.75829315 -181.45956421]
[-24.15024948 -196.22621155]
[-14.56559944 -207.62797546]
[-19.81231689 -221.68045044]
[-25.05903625 -235.73291016]
[-30.30575371 -249.78538513]
[-35.55247116 -263.83786011]
[-50.21134186 -260.54675293]
[-65.18182373 -259.28244019]
[-80.18502045 -260.06845093]
[-94.94143677 -262.89013672]
[-109.17617035 -267.69494629]
[-122.62403107 -274.39334106]
[-135.03450012 -282.86059570]
[-146.17637634 -292.93890381]
[-155.84208679 -304.44052124]
[-163.85157776 -317.15124512]
[-170.05563354 -330.83419800]
[-174.33866882 -345.23452759]
[-176.62089539 -360.08395386]
[-176.85978699 -375.10580444]
[-175.05091858 -390.02029419]
[-171.22798157 -404.54953003]
[-165.46217346 -418.42288208]
[-157.86093140 -431.38183594]
[-148.56585693 -443.18502808]
[-137.75010681 -453.61254883]
[-125.61516571 -462.47015381]
[-112.38710785 -469.59280396]
[-98.31236267 -474.84783936]
[-83.65313721 -478.13732910]
[-68.68252563 -479.40005493]
[-53.67941284 -478.61242676]
[-38.92330170 -475.78912354]
[-24.68908882 -470.98278809]
[-11.24195004 -464.28292847]
[1.16760242 -455.81433105]
[12.30838680 -445.73483276]
[21.97285652 -434.23214722]
[29.98096848 -421.52056885]
[36.18353653 -407.83694458]
[40.46501160 -393.43615723]
[42.74563217 -378.58648682]
[42.98291016 -363.56457520]
[41.17242813 -348.65029907]
[37.34791183 -334.12145996]
[31.58061028 -320.24877930]
[23.97796440 -307.29061890]
[14.68160629 -295.48843384]
[3.86472297 -285.06207275]
[-8.27117443 -276.20581055]
[-21.50000191 -269.08456421]
[-16.25328255 -255.03210449]
[-11.00656509 -240.97962952]
[-5.75984621 -226.92715454]
[-0.51312828 -212.87469482]
[14.19861031 -210.54438782]
[25.84613609 -201.10028076]
[31.23826599 -187.00094604]
[28.83334541 -171.99717712]
[19.17836761 -160.13426208]
[24.42508507 -146.08178711]
[29.67180443 -132.02931213]
[41.37210846 -122.81237030]
[38.95060349 -107.17757416]
[42.84659576 -104.41526794]
[45.04868317 -99.17620087]
[44.13750458 -92.62782288]
[48.96350479 -78.42536926]
[60.38420105 -68.86414337]
[57.49826431 -53.30837631]
[62.32426071 -39.10592270]
[67.15026093 -24.90346718]
[71.97625732 -10.70101070]
[77.10462952 -5.37920952]
[76.76667023 3.74896622]
[81.38067627 18.02169991]
[85.99468231 32.29443359]
[97.27176666 42.02463150]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[129.45294189 135.59892273]
[125.11209106 152.60256958]
[129.93807983 166.80502319]
[134.76408386 181.00747681]
[146.52996826 191.58454895]
[143.29884338 206.12446594]
[157.79631042 204.10549927]
[172.41339111 204.79312134]
[186.64927673 208.16224670]
[200.01646423 214.09594727]
[212.05752563 222.38949585]
[222.36068726 232.75743103]
[230.57397461 244.84341431]
[236.41719055 258.23242188]
[239.69148254 272.46502686]
[240.28613281 287.05316162]
[238.18228149 301.49685669]
[233.45355225 315.30142212]
[226.26339722 327.99426270]
[216.85954285 339.14117432]
[205.56538391 348.36114502]
[192.76893616 355.33941650]
[197.38294983 369.61215210]
[201.99694824 383.88488770]
[206.61096191 398.15762329]
[218.21806335 408.90872192]
[214.77082825 423.39889526]
[219.38482666 437.67163086]
[223.99884033 451.94436646]
[226.47795105 437.15066528]
[233.15374756 423.71807861]
[243.44866943 412.80871582]
[256.47213745 405.36633301]
[271.09747314 402.03472900]
[286.05944824 403.10217285]
[300.06369019 408.47628784]
[311.89871216 417.69216919]
[320.54064941 429.95254517]
[325.24188232 444.19677734]
[325.59570312 459.19259644]
[321.57156372 473.64273071]
[313.51751709 486.29705811]
[302.13034058 496.06091309]
[288.39514160 502.08956909]
[273.50018311 503.86148071]
[258.73397827 501.22341919]
[245.37397766 494.40356445]
[234.57595825 483.99188232]
[227.27528381 470.89242554]
[227.72189331 485.88577271]
[228.16850281 500.87911987]
[228.61511230 515.87249756]
[229.06170654 530.86584473]
[229.50831604 545.85919189]
[229.95492554 560.85253906]
[243.74087524 567.50128174]
[252.84857178 579.80206299]
[255.18511963 594.92816162]
[250.21362305 609.40374756]
[239.07647705 619.90246582]
[224.33291626 624.01171875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[12 178]
[13 177]
[14 176]
[16 174]
[17 173]
[18 172]
[19 171]
[34 155]
[36 153]
[37 152]
[38 151]
[41 149]
[42 148]
[44 146]
[45 145]
[46 144]
[48 142]
[49 141]
[50 140]
[51 138]
[52 137]
[53 136]
[54 135]
[56 133]
[57 132]
[58 129]
[60 127]
[61 126]
[62 125]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
