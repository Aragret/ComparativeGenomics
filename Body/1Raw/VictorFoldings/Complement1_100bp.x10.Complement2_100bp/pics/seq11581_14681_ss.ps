%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[171.74145508 650.69592285]
[160.26094055 641.03552246]
[149.35604858 630.72973633]
[139.06301880 619.81280518]
[129.41603088 608.32098389]
[120.44712067 596.29254150]
[112.18610382 583.76727295]
[104.66041565 570.78692627]
[97.89505005 557.39459229]
[91.91248322 543.63470459]
[86.73258972 529.55297852]
[82.37258148 515.19622803]
[78.84693146 500.61215210]
[76.16735840 485.84915161]
[74.34276581 470.95632935]
[73.37921143 455.98312378]
[73.27989197 440.97924805]
[74.04514313 425.99459839]
[75.67242432 411.07888794]
[78.15632629 396.28173828]
[81.48860168 381.65225220]
[85.65817261 367.23907471]
[90.65119934 353.09002686]
[96.45108795 339.25213623]
[103.03856659 325.77136230]
[110.39176178 312.69253540]
[118.48624420 300.05905151]
[127.29512787 287.91287231]
[136.78913879 276.29437256]
[146.93675232 265.24215698]
[157.70425415 254.79292297]
[169.05587769 244.98136902]
[159.91708374 233.08673096]
[150.77827454 221.19210815]
[141.63946533 209.29747009]
[132.50067139 197.40283203]
[123.36186981 185.50820923]
[126.24463654 200.22859192]
[125.42704773 215.20628357]
[120.95910645 229.52542114]
[113.11401367 242.31036377]
[102.37151337 252.77929688]
[89.38851166 260.29205322]
[74.95892334 264.38925171]
[59.96511841 264.82028198]
[45.32397461 261.55886841]
[31.93080902 254.80436707]
[20.60461426 244.96986389]
[12.03799248 232.65675354]
[6.75479746 218.61795044]
[5.07809734 203.71195984]
[7.11042261 188.85026550]
[12.72749710 174.94169617]
[21.58583260 162.83674622]
[33.14374161 153.27563477]
[46.69445038 146.84303284]
[61.40932846 143.93231201]
[76.38855743 144.72143555]
[90.71614838 149.16217041]
[103.51596832 156.98295593]
[114.00531769 167.70556641]
[109.39130402 153.43283081]
[104.77729797 139.16009521]
[93.50021362 129.42990112]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[72.88871765 65.67137146]
[76.33596039 51.18117523]
[71.72195435 36.90844345]
[67.10794067 22.63570976]
[62.49393463 8.36297512]
[60.01481628 23.15669060]
[53.33903122 36.58925629]
[43.04409790 47.49862671]
[30.02063179 54.94102859]
[15.39529514 58.27262115]
[0.43332347 57.20518875]
[-13.57092190 51.83107376]
[-25.40593338 42.61519241]
[-34.04786682 30.35480690]
[-38.74910355 16.11056709]
[-39.10294342 1.11474204]
[-35.07877350 -13.33538151]
[-27.02472878 -25.98972130]
[-15.63755894 -35.75355148]
[-1.90237260 -41.78220367]
[12.99260139 -43.55413818]
[27.75879860 -40.91606522]
[41.11879349 -34.09620285]
[51.91681671 -23.68454170]
[59.21748352 -10.58508110]
[58.77087784 -25.57843208]
[58.32427216 -40.57178116]
[50.17951965 -54.13546753]
[57.53445053 -67.08746338]
[57.08784485 -82.08081818]
[43.12429428 -88.24376678]
[33.22410202 -99.86051941]
[29.35296631 -114.62456512]
[32.27949905 -129.60449219]
[41.42263794 -141.82601929]
[54.96700668 -148.86256409]
[70.22335815 -149.31700134]
[84.16252899 -143.09910583]
[94.01689911 -131.44345093]
[97.82986450 -116.66428375]
[94.84436035 -101.69599915]
[85.65316772 -89.51056671]
[72.08119965 -82.52742004]
[72.52780151 -67.53407288]
[80.64060974 -55.04280853]
[73.31762695 -41.01838684]
[73.76422882 -26.02503777]
[74.21083832 -11.03168774]
[76.76667023 3.74896622]
[81.38067627 18.02169991]
[85.99468231 32.29443359]
[90.60869598 46.56716537]
[101.88577271 56.29736710]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[122.49727631 120.05589294]
[119.05002594 134.54609680]
[123.66403961 148.81881714]
[128.27804565 163.09155273]
[135.25650024 176.36940002]
[144.39530945 188.26403809]
[153.53410339 200.15867615]
[162.67291260 212.05329895]
[171.81170654 223.94793701]
[180.95051575 235.84257507]
[193.35528564 227.40176392]
[206.22575378 219.68965149]
[219.51916504 212.73182678]
[233.19132996 206.55143738]
[247.19686890 201.16899109]
[261.48922729 196.60237122]
[276.02096558 192.86674500]
[290.74374390 189.97453308]
[305.60873413 187.93533325]
[320.56649780 186.75592041]
[335.56735229 186.44023132]
[350.56149292 186.98927307]
[365.49911499 188.40127563]
[380.33053589 190.67149353]
[395.00656128 193.79243469]
[409.47839355 197.75369263]
[423.69799805 202.54212952]
[437.61807251 208.14183044]
[451.19244385 214.53421021]
[464.37597656 221.69801331]
[477.12490845 229.60943604]
[489.39685059 238.24223328]
[501.15106201 247.56768799]
[512.34851074 257.55484009]
[522.95196533 268.17053223]
[532.92620850 279.37945557]
[542.23809814 291.14440918]
[550.85675049 303.42630005]
[558.75347900 316.18432617]
[565.90209961 329.37609863]
[572.27880859 342.95782471]
[577.86248779 356.88436890]
[582.63452148 371.10946655]
[586.57910156 385.58584595]
[589.68310547 400.26544189]
[591.93621826 415.09948730]
[593.33099365 430.03872681]
[593.86279297 445.03347778]
[593.52978516 460.03396606]
[592.33319092 474.99038696]
[590.27685547 489.85299683]
[587.36767578 504.57244873]
[583.61529541 519.09985352]
[579.03222656 533.38696289]
[573.63360596 547.38629150]
[567.43750000 561.05133057]
[560.46435547 574.33666992]
[552.73742676 587.19824219]
[544.28228760 599.59332275]
[535.12713623 611.48065186]
[525.30236816 622.82080078]
[514.84051514 633.57604980]
[503.77645874 643.71075439]
[492.14688110 653.19122314]
[479.99044800 661.98590088]
[467.34750366 670.06561279]
[454.26007080 677.40350342]
[440.77163696 683.97521973]
[426.92697144 689.75897217]
[412.77209473 694.73541260]
[398.35403442 698.88818359]
[383.72067261 702.20330811]
[368.92062378 704.66992188]
[354.00305176 706.27978516]
[339.01751709 707.02752686]
[324.01376343 706.91070557]
[309.04168701 705.92962646]
[294.15100098 704.08764648]
[279.39114380 701.39080811]
[264.81118774 697.84814453]
[250.45956421 693.47137451]
[236.38391113 688.27502441]
[222.63102722 682.27636719]
[209.24656677 675.49536133]
[196.27500916 667.95452881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 135]
[33 134]
[34 133]
[35 132]
[36 131]
[37 130]
[61 129]
[62 128]
[63 127]
[65 125]
[67 123]
[68 122]
[70 120]
[71 119]
[72 118]
[73 117]
[93 116]
[94 115]
[95 114]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
