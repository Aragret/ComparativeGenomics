%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[81.03572083 564.62579346]
[68.27442932 572.53570557]
[54.75621414 579.06835938]
[40.62920380 584.15222168]
[26.04816818 587.73144531]
[11.17287254 589.76696777]
[-3.83370423 590.23638916]
[-18.80714035 589.13464355]
[-33.58338165 586.47369385]
[-48.00052643 582.28283691]
[-61.90061569 576.60784912]
[-75.13135529 569.51098633]
[-87.54777527 561.07000732]
[-99.01383972 551.37738037]
[-109.40392303 540.53930664]
[-118.60417175 528.67456055]
[-126.51380157 515.91302490]
[-133.04614258 502.39468384]
[-138.12960815 488.26754761]
[-141.70852661 473.68643188]
[-143.74366760 458.81106567]
[-144.21273804 443.80450439]
[-143.11059570 428.83108521]
[-140.44932556 414.05490112]
[-136.25808716 399.63784790]
[-130.58277893 385.73791504]
[-123.48561096 372.50735474]
[-115.04432678 360.09112549]
[-105.35141754 348.62530518]
[-94.51309204 338.23547363]
[-82.64808655 329.03552246]
[-69.88640594 321.12619019]
[-56.36787796 314.59420776]
[-42.24061966 309.51104736]
[-27.65941048 305.93249512]
[-12.78401566 303.89770508]
[2.22258401 303.42901611]
[17.19596672 304.53152466]
[31.97207832 307.19314575]
[36.15908813 292.78936768]
[40.34609985 278.38558960]
[44.53311157 263.98181152]
[40.65596771 249.60066223]
[51.93782425 238.50875854]
[56.12483597 224.10498047]
[52.24769211 209.72384644]
[63.52954865 198.63194275]
[67.71656036 184.22816467]
[71.90357208 169.82438660]
[68.02642822 155.44325256]
[79.30828857 144.35134888]
[75.43114471 129.97021484]
[86.71299744 118.87831116]
[90.90000916 104.47452545]
[89.94713593 96.47048950]
[95.25807190 89.88832855]
[99.65906525 75.54848480]
[98.53679657 71.35390472]
[98.78291321 67.41639709]
[100.14859009 64.13458252]
[102.28106689 61.78529739]
[104.77243805 60.50030518]
[110.01915741 46.44783401]
[115.26587677 32.39536285]
[120.51259613 18.34289169]
[125.54951477 4.21386242]
[122.66357422 -11.34190655]
[134.08427429 -20.90312767]
[138.59190369 -35.20981598]
[142.77891541 -49.61359787]
[146.96592712 -64.01737976]
[151.15293884 -78.42115784]
[155.33995056 -92.82494354]
[159.52696228 -107.22872162]
[163.71397400 -121.63250732]
[167.90098572 -136.03628540]
[172.08798218 -150.44006348]
[161.56588745 -139.74963379]
[148.17224121 -132.99609375]
[133.32052612 -130.89215088]
[118.57807922 -133.65983582]
[105.50069427 -141.00708008]
[95.46846771 -152.15850830]
[89.54012299 -165.93728638]
[88.34129333 -180.88931274]
[91.99848938 -195.43664551]
[100.12575531 -208.04408264]
[111.86541748 -217.38111877]
[125.97854614 -222.46241760]
[140.97575378 -222.75172424]
[155.27435303 -218.21850586]
[167.36537170 -209.34115601]
[175.97282410 -197.05653381]
[180.18833923 -182.66107178]
[179.56700134 -167.67376709]
[187.22760010 -180.57008362]
[194.88819885 -193.46641541]
[202.54879761 -206.36274719]
[210.20939636 -219.25906372]
[198.35829163 -228.48698425]
[187.75723267 -239.12751770]
[178.57342529 -251.01283264]
[170.95169067 -263.95550537]
[165.01225281 -277.75137329]
[160.84878540 -292.18289185]
[158.52694702 -307.02246094]
[158.08335876 -322.03598022]
[159.52500916 -336.98672485]
[162.82916260 -351.63888550]
[167.94371033 -365.76138306]
[174.78800964 -379.13146973]
[183.25407410 -391.53826904]
[193.20841980 -402.78613281]
[204.49403381 -412.69766235]
[216.93292236 -421.11651611]
[230.32890320 -427.90994263]
[244.47073364 -432.97076416]
[259.13534546 -436.21923828]
[274.09146118 -437.60406494]
[289.10321045 -437.10339355]
[303.93383789 -434.72518921]
[318.34942627 -430.50689697]
[332.12261963 -424.51507568]
[345.03622437 -416.84420776]
[356.88656616 -407.61529541]
[367.48672485 -396.97387695]
[376.66952515 -385.08779907]
[384.29019165 -372.14447021]
[390.22845459 -358.34811401]
[394.39071655 -343.91622925]
[396.71130371 -329.07647705]
[397.15362549 -314.06289673]
[395.71072388 -299.11227417]
[392.40533447 -284.46038818]
[387.28958130 -270.33834839]
[380.44418335 -256.96884155]
[371.97705078 -244.56274414]
[362.02175903 -233.31571960]
[350.73532104 -223.40515137]
[338.29571533 -214.98733521]
[324.89916992 -208.19503784]
[310.75692749 -203.13539124]
[296.09204102 -199.88816833]
[281.13580322 -198.50460815]
[266.12408447 -199.00651550]
[251.29367065 -201.38598633]
[236.87843323 -205.60548401]
[223.10572815 -211.59846497]
[215.44512939 -198.70214844]
[207.78453064 -185.80581665]
[200.12393188 -172.90948486]
[192.46333313 -160.01316833]
[186.49177551 -146.25306702]
[182.30476379 -131.84927368]
[178.11775208 -117.44549561]
[173.93074036 -103.04170990]
[169.74372864 -88.63793182]
[165.55671692 -74.23414612]
[161.36970520 -59.83036804]
[157.18269348 -45.42658615]
[152.99568176 -31.02280235]
[154.36430359 -27.77330971]
[154.22700500 -23.69946671]
[152.21347046 -19.51628876]
[148.28672791 -16.07712936]
[151.51785278 -1.53721619]
[139.75196838 9.03985977]
[141.02194214 13.64379597]
[139.41322327 19.09439850]
[134.56506348 23.58960915]
[129.31834412 37.64208221]
[124.07163239 51.69455338]
[118.82491302 65.74702454]
[113.99891663 79.94947815]
[109.59791565 94.28932953]
[105.30379486 108.66153717]
[101.11678314 123.06532288]
[104.69444275 138.47671509]
[93.71206665 148.53836060]
[97.28972626 163.94975281]
[86.30735779 174.01139832]
[82.12034607 188.41517639]
[77.93333435 202.81895447]
[81.51099396 218.23034668]
[70.52861786 228.29199219]
[66.34160614 242.69577026]
[69.91926575 258.10714722]
[58.93689346 268.16879272]
[54.74988174 282.57260132]
[50.56287003 296.97637939]
[46.37585831 311.38015747]
[60.27622604 317.05444336]
[73.50730896 324.15063477]
[85.92414093 332.59103394]
[97.39067841 342.28311157]
[107.78128052 353.12066650]
[116.98210907 364.98501587]
[124.89235687 377.74612427]
[131.42535400 391.26416016]
[136.50950623 405.39105225]
[140.08912659 419.97201538]
[142.12500000 434.84725952]
[142.59480286 449.85382080]
[141.49339294 464.82727051]
[138.83283997 479.60357666]
[134.64228821 494.02081299]
[128.96766663 507.92105103]
[121.87113953 521.15197754]
[113.43045807 533.56860352]
[103.73810577 545.03491211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 191]
[40 190]
[41 189]
[42 188]
[44 186]
[45 185]
[47 183]
[48 182]
[49 181]
[51 179]
[53 177]
[54 176]
[56 175]
[57 174]
[62 173]
[63 172]
[64 171]
[65 170]
[66 167]
[68 165]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
