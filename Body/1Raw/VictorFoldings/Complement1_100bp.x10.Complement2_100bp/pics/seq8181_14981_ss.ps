%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[133.80574036 848.04461670]
[121.34694672 839.66931152]
[109.76908112 830.11315918]
[99.18364716 819.46820068]
[89.69258881 807.83691406]
[81.38731384 795.33135986]
[74.34780884 782.07196045]
[68.64186096 768.18640137]
[64.32444000 753.80841064]
[61.43710709 739.07647705]
[60.00768280 724.13244629]
[60.04993057 709.12030029]
[61.56344223 694.18457031]
[64.53364563 679.46911621]
[68.93192291 665.11560059]
[74.71593475 651.26239014]
[81.82995605 638.04278564]
[90.20549011 625.58416748]
[99.76186371 614.00653076]
[110.40704346 603.42132568]
[122.03850555 593.93048096]
[134.54423523 585.62542725]
[147.80380249 578.58618164]
[161.68948364 572.88055420]
[176.06755066 568.56341553]
[173.18228149 553.84350586]
[170.29701233 539.12359619]
[167.41174316 524.40374756]
[164.52645874 509.68383789]
[152.06042480 501.61331177]
[148.92465210 486.72634888]
[157.47428894 473.70553589]
[154.58901978 458.98562622]
[144.72821045 451.97912598]
[142.20397949 439.73937988]
[148.90368652 428.71771240]
[146.23789978 413.95651245]
[143.57209778 399.19528198]
[129.13526917 398.49838257]
[115.21020508 394.59741211]
[102.49921417 387.68557739]
[91.64416504 378.10809326]
[83.19403076 366.34487915]
[77.57716370 352.98651123]
[75.07958221 338.70449829]
[75.83038330 324.21768188]
[79.79510498 310.25595093]
[86.77726746 297.52340698]
[96.42812347 286.66305542]
[108.26405334 278.22415161]
[121.69084167 272.63446045]
[119.24511719 257.83520508]
[116.79938507 243.03593445]
[114.35366058 228.23666382]
[111.79782867 213.45600891]
[109.13203430 198.69479370]
[106.46623993 183.93357849]
[96.71083832 176.78103638]
[94.36911011 164.50503540]
[101.23217773 153.58436584]
[98.78645325 138.78509521]
[96.34072113 123.98582458]
[93.89499664 109.18655396]
[83.17082214 119.67426300]
[68.26676941 117.98042297]
[60.16954422 105.35366821]
[64.84812164 91.10197449]
[78.85363007 85.73115540]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[80.24668121 50.26380157]
[86.81765747 36.89699173]
[77.43851471 28.04292870]
[76.63146973 15.57166481]
[84.28489685 6.20408058]
[83.16925049 -8.75437260]
[82.05359650 -23.71282578]
[73.31131744 -36.89929962]
[80.08058167 -50.16679382]
[78.96492767 -65.12525177]
[70.22264862 -78.31172180]
[76.99191284 -91.57921600]
[68.24962616 -104.76569366]
[75.01889038 -118.03318787]
[73.56947327 -132.96299744]
[71.78700256 -147.85671997]
[70.00453949 -162.75042725]
[68.22206879 -177.64414978]
[66.43960571 -192.53787231]
[51.50294113 -194.67292786]
[37.62820816 -200.60202026]
[25.76140404 -209.92089844]
[16.71163368 -221.99417114]
[11.09592056 -235.99867249]
[9.29715538 -250.97955322]
[11.43797970 -265.91540527]
[17.37243080 -279.78784180]
[26.69588661 -291.65103149]
[38.77265930 -300.69616699]
[52.77933121 -306.30645752]
[67.76091003 -308.09942627]
[82.69591522 -305.95285034]
[96.56607056 -300.01303101]
[108.42567444 -290.68499756]
[117.46611786 -278.60473633]
[123.07101440 -264.59591675]
[124.85820770 -249.61363220]
[122.70585632 -234.67945862]
[116.76068878 -220.81159973]
[107.42807770 -208.95559692]
[95.34432220 -199.91981506]
[81.33332062 -194.32032776]
[83.11579132 -179.42662048]
[84.89825439 -164.53289795]
[86.68071747 -149.63917542]
[88.46318817 -134.74546814]
[90.99411011 -132.29051208]
[92.46170044 -128.48771667]
[92.24541473 -123.85021210]
[89.97734070 -119.14883423]
[98.63982391 -107.03228760]
[91.95036316 -92.69487000]
[100.61284637 -80.57832336]
[93.92338562 -66.24089813]
[95.03903198 -51.28244400]
[103.70151520 -39.16589737]
[97.01205444 -24.82847595]
[98.12770081 -9.87002182]
[99.24334717 5.08843184]
[109.89105988 19.03809547]
[101.75784302 35.55875778]
[110.59976196 47.54499054]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.69426727 106.74082184]
[111.13999176 121.54009247]
[113.58572388 136.33937073]
[116.03144836 151.13864136]
[128.04263306 165.09619141]
[121.22745514 181.26777649]
[123.89324951 196.02899170]
[126.55904388 210.79020691]
[131.16375732 218.67909241]
[129.15292358 225.79093933]
[131.59866333 240.59020996]
[134.04438782 255.38948059]
[136.49011230 270.18875122]
[152.03628540 271.35812378]
[166.84495544 276.20394897]
[180.06031799 284.44174194]
[190.91964722 295.59115601]
[198.79740906 309.00399780]
[203.24122620 323.90182495]
[203.99787903 339.42108154]
[201.02774048 354.66339111]
[194.50683594 368.74728394]
[184.81634521 380.85937500]
[172.52043152 390.30114746]
[158.33331299 396.52947998]
[160.99911499 411.29071045]
[163.66490173 426.05194092]
[175.88255310 439.82910156]
[169.30891418 456.10037231]
[172.19418335 470.82025146]
[185.02676392 479.64990234]
[187.74314880 494.61907959]
[179.24635315 506.79855347]
[182.13162231 521.51843262]
[185.01690674 536.23834229]
[187.90217590 550.95825195]
[190.78744507 565.67810059]
[205.73136902 564.24780273]
[220.74354553 564.28912354]
[235.67936707 565.80175781]
[250.39500427 568.77105713]
[264.74871826 573.16851807]
[278.60229492 578.95166016]
[291.82232666 586.06488037]
[304.28143311 594.43969727]
[315.85968018 603.99536133]
[326.44555664 614.63989258]
[335.93707275 626.27081299]
[344.24285889 638.77606201]
[351.28289795 652.03515625]
[356.98937988 665.92053223]
[361.30740356 680.29833984]
[364.19531250 695.03015137]
[365.62533569 709.97412109]
[365.58367920 724.98626709]
[364.07077026 739.92205811]
[361.10116577 754.63763428]
[356.70346069 768.99127197]
[350.91998291 782.84478760]
[343.80648804 796.06463623]
[335.43145752 808.52355957]
[325.87554932 820.10162354]
[315.23080444 830.68731689]
[303.59970093 840.17858887]
[291.09429932 848.48413086]
[277.83502197 855.52386475]
[263.94958496 861.23010254]
[249.57167053 865.54779053]
[234.83979797 868.43542480]
[219.89581299 869.86517334]
[204.88365173 869.82324219]
[189.94787598 868.30999756]
[175.23236084 865.34008789]
[160.87881470 860.94207764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[32 166]
[33 165]
[36 163]
[37 162]
[38 161]
[51 149]
[52 148]
[53 147]
[54 146]
[55 144]
[56 143]
[57 142]
[60 140]
[61 139]
[62 138]
[63 137]
[69 136]
[70 135]
[71 134]
[73 132]
[76 130]
[77 129]
[78 128]
[80 126]
[81 125]
[83 123]
[85 121]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
