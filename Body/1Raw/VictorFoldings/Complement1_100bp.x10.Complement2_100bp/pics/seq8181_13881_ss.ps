%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[15.71214867 524.28448486]
[9.46940613 538.49035645]
[-3.94804311 546.28472900]
[-19.38091660 544.67041016]
[-30.89496040 534.26812744]
[-34.06278992 519.07788086]
[-27.66630745 504.94052124]
[-14.16509438 497.29220581]
[-12.60457134 482.37359619]
[-11.04404831 467.45498657]
[-23.34817505 476.03454590]
[-38.13874435 473.53671265]
[-46.94304276 461.39239502]
[-44.71757126 446.55841064]
[-32.73717880 437.53231812]
[-17.86477852 439.48471069]
[-8.62021732 451.29620361]
[-5.73494482 436.57632446]
[-2.84967232 421.85641479]
[0.03560031 407.13653564]
[2.92087293 392.41662598]
[-5.69314003 382.83392334]
[-7.23810005 369.84567261]
[-0.92747658 358.16720581]
[11.13200283 352.16857910]
[14.23611259 337.49325562]
[12.62959480 334.35455322]
[12.46352005 330.28179932]
[14.16034698 325.96044922]
[17.82041740 322.23873901]
[21.57671738 307.71670532]
[25.33301735 293.19464111]
[29.08931923 278.67257690]
[32.08409500 263.97457886]
[34.30921173 249.14053345]
[36.53432846 234.30648804]
[38.75944519 219.47244263]
[40.98456192 204.63839722]
[43.20967865 189.80435181]
[34.65784454 202.12774658]
[23.60918236 212.27304077]
[10.60278320 219.74523926]
[-3.72674060 224.17973328]
[-18.68022156 225.36016846]
[-33.52804565 223.22892761]
[-47.54575348 217.89002991]
[-60.04939270 209.60395813]
[-70.42887878 198.77500916]
[-78.17778015 185.93154907]
[-82.91800690 171.70022583]
[-84.41826630 156.77545166]
[-82.60536957 141.88540649]
[-77.56776428 127.75661469]
[-69.55124664 115.07846832]
[-58.94696808 104.46955109]
[-46.27232361 96.44748688]
[-32.14574432 91.40370941]
[-17.25649452 89.58429718]
[-2.33105493 91.07803345]
[11.90232944 95.81203461]
[24.74917984 103.55532074]
[35.58267212 113.93006897]
[43.87421417 126.43008423]
[49.21924210 140.44544983]
[51.35696030 155.29234314]
[50.18431091 170.23983765]
[57.84490967 157.34352112]
[65.50550842 144.44718933]
[73.16610718 131.55085754]
[80.82669830 118.65453339]
[88.29444122 105.64558411]
[95.17385864 92.31615448]
[94.15687561 76.52766418]
[106.63282013 68.39132690]
[113.11231232 54.86297989]
[119.59181213 41.33463287]
[126.07130432 27.80628777]
[132.44990540 14.23008156]
[131.19798279 -1.54151428]
[143.55140686 -9.86270237]
[149.82876587 -23.48601913]
[148.57682800 -39.25761414]
[160.93025208 -47.57880402]
[167.20761108 -61.20211792]
[173.48497009 -74.82543182]
[179.45654297 -88.58554077]
[185.11932373 -102.47556305]
[190.78210449 -116.36559296]
[188.82717896 -132.06555176]
[200.79672241 -140.93005371]
[206.45951843 -154.82008362]
[212.12229919 -168.71011353]
[217.78507996 -182.60012817]
[204.66215515 -189.90397644]
[192.51531982 -198.73638916]
[181.52169800 -208.96858215]
[171.84162903 -220.45133972]
[163.61625671 -233.01719666]
[156.96556091 -246.48291016]
[151.98649597 -260.65209961]
[148.75167847 -275.31817627]
[147.30830383 -290.26721191]
[147.67738342 -305.28125000]
[149.85357666 -320.14132690]
[153.80511475 -334.63070679]
[159.47439575 -348.53814697]
[166.77873230 -361.66079712]
[175.61160278 -373.80731201]
[185.84420776 -384.80053711]
[197.32731628 -394.48019409]
[209.89347839 -402.70507812]
[223.35943604 -409.35528564]
[237.52882385 -414.33383179]
[252.19500732 -417.56808472]
[267.14410400 -419.01089478]
[282.15814209 -418.64126587]
[297.01812744 -416.46450806]
[311.50735474 -412.51242065]
[325.41458130 -406.84262085]
[338.53695679 -399.53781128]
[350.68313599 -390.70446777]
[361.67599487 -380.47146606]
[371.35522461 -368.98800659]
[379.57965088 -356.42150879]
[386.22933960 -342.95532227]
[391.20733643 -328.78573608]
[394.44107056 -314.11944580]
[395.88333130 -299.17028809]
[395.51312256 -284.15628052]
[393.33581543 -269.29635620]
[389.38317871 -254.80726624]
[383.71286011 -240.90025330]
[376.40756226 -227.77815247]
[367.57376099 -215.63230896]
[357.34033203 -204.63983154]
[345.85650635 -194.96104431]
[333.28973389 -186.73709106]
[319.82327271 -180.08789062]
[305.65350342 -175.11042786]
[290.98709106 -171.87725830]
[276.03787231 -170.43554688]
[261.02389526 -170.80632019]
[246.16406250 -172.98417664]
[231.67510986 -176.93734741]
[226.01232910 -163.04731750]
[220.34953308 -149.15728760]
[214.68675232 -135.26727295]
[217.04672241 -120.56081390]
[204.67213440 -110.70280457]
[199.00935364 -96.81277466]
[193.34655762 -82.92275238]
[194.36968994 -79.54850769]
[193.80931091 -75.51105499]
[191.37150574 -71.56005096]
[187.10829163 -68.54807281]
[180.83093262 -54.92475891]
[174.55357361 -41.30144119]
[176.25450134 -26.50427628]
[163.45207214 -17.20865822]
[157.17471313 -3.58534193]
[158.87565613 11.21182346]
[146.07322693 20.50744247]
[146.12901306 27.89788818]
[139.59965515 34.28578568]
[133.12016296 47.81412888]
[126.64066315 61.34247589]
[120.16116333 74.87081909]
[121.64160156 89.69167328]
[108.70220184 98.79564667]
[109.46767426 101.74582672]
[109.17660522 105.03973389]
[107.69963837 108.28658295]
[105.05355835 111.05326080]
[101.41313934 112.91881561]
[101.14603424 119.52488708]
[98.04791260 124.28919983]
[93.72303009 126.31513214]
[86.06243134 139.21145630]
[78.40183258 152.10778809]
[70.74123383 165.00411987]
[63.08063889 177.90043640]
[58.04372406 192.02946472]
[55.81860733 206.86351013]
[53.59348679 221.69755554]
[51.36837006 236.53160095]
[49.14325333 251.36564636]
[46.91813660 266.19967651]
[58.92840576 257.21340942]
[73.91156769 257.92395020]
[85.01751709 268.00650024]
[87.16876984 282.85144043]
[79.38180542 295.67184448]
[65.21670532 300.60644531]
[51.14957428 295.39913940]
[43.61137772 282.42886353]
[39.85507584 296.95092773]
[36.09877777 311.47299194]
[32.34247589 325.99505615]
[28.91141510 340.59738159]
[25.80730438 355.27267456]
[35.61634064 369.75723267]
[31.98627853 386.52438354]
[17.64076424 395.30191040]
[14.75549126 410.02178955]
[11.87021923 424.74169922]
[8.98494625 439.46157837]
[6.09967375 454.18148804]
[3.87455678 469.01553345]
[2.31403375 483.93411255]
[0.75351065 498.85272217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[25 200]
[26 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 174]
[72 169]
[74 167]
[75 166]
[76 165]
[77 164]
[78 162]
[80 160]
[81 159]
[83 157]
[84 156]
[85 155]
[86 151]
[87 150]
[88 149]
[90 147]
[91 146]
[92 145]
[93 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
