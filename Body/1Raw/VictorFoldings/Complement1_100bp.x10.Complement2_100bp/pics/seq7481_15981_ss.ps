%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[240.30213928 487.34356689]
[245.98544312 473.42950439]
[253.72619629 460.54614258]
[263.34295654 448.99545288]
[274.61029053 439.04821777]
[287.26409912 430.93759155]
[281.19024658 417.22235107]
[275.11642456 403.50708008]
[269.04257202 389.79180908]
[262.16317749 376.46237183]
[254.50257874 363.56604004]
[246.84197998 350.66970825]
[239.18138123 337.77340698]
[231.52078247 324.87707520]
[223.86018372 311.98074341]
[216.19958496 299.08441162]
[200.31019592 300.78082275]
[185.21678162 295.35836792]
[173.95826721 283.85491943]
[168.82489014 268.53799438]
[170.89247131 252.45791626]
[179.79743958 238.84043884]
[171.94569397 226.05960083]
[156.08612061 218.54685974]
[155.73670959 200.13600159]
[147.69552612 187.47348022]
[134.34114075 180.87731934]
[133.47474670 165.07984924]
[117.50508881 157.80407715]
[116.88159943 139.40046692]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[75.84233856 96.07408905]
[64.19930267 105.53134155]
[49.19972992 105.41777039]
[37.70122910 95.78529358]
[34.96076202 81.03775787]
[42.23122787 67.91753387]
[56.18867111 62.42300797]
[70.45339966 67.06734467]
[63.57398987 53.73791504]
[56.69457626 40.40848541]
[49.81516266 27.07905769]
[42.93574905 13.74962807]
[36.05633926 0.42019901]
[32.45939636 14.98254776]
[21.06453896 24.73740578]
[6.12176847 26.04645157]
[-6.79563284 18.42144394]
[-12.86979294 4.70632076]
[-9.83520031 -9.98351383]
[1.17631614 -20.16911697]
[16.05773354 -22.05150795]
[29.25946236 -14.92776203]
[24.01274300 -28.98023415]
[11.93715668 -39.20230484]
[14.73394203 -53.83197784]
[9.48722363 -67.88444519]
[4.24050570 -81.93692017]
[-1.00621235 -95.98938751]
[-6.25293064 -110.04186249]
[-11.49964905 -124.09432983]
[-16.74636650 -138.14680481]
[-21.99308586 -152.19927979]
[-25.43858147 -154.84172058]
[-27.64235306 -158.11401367]
[-28.55886841 -161.54846191]
[-28.29916954 -164.71060181]
[-27.10645866 -167.24745178]
[-31.50745583 -181.58729553]
[-35.90845490 -195.92713928]
[-40.81482697 -181.75225830]
[-52.08634567 -171.85514832]
[-66.77666473 -168.82289124]
[-81.04576874 -173.44812012]
[-91.16374207 -184.52180481]
[-94.48577881 -199.14930725]
[-90.14350891 -213.50704956]
[-79.27198029 -223.84193420]
[-64.71299744 -227.45245361]
[-50.27222824 -223.39483643]
[-39.72491074 -212.73048401]
[-41.95002747 -227.56452942]
[-44.17514420 -242.39857483]
[-46.40026093 -257.23260498]
[-48.62537766 -272.06665039]
[-63.61899185 -273.75604248]
[-77.66410828 -279.26940918]
[-89.80310059 -288.23083496]
[-99.20832825 -300.02932739]
[-105.23851776 -313.86041260]
[-107.48252106 -328.78109741]
[-105.78734589 -343.77404785]
[-100.26856232 -357.81704712]
[-91.30245209 -369.95257568]
[-79.50033569 -379.35324097]
[-65.66691589 -385.37811279]
[-50.74536514 -387.61633301]
[-35.75306320 -385.91537476]
[-21.71220779 -380.39117432]
[-9.58013344 -371.42037964]
[-0.18402115 -359.61462402]
[5.83548594 -345.77886963]
[8.06796741 -330.85647583]
[6.36120987 -315.86483765]
[0.83158171 -301.82611084]
[-8.14389706 -289.69750977]
[-19.95326424 -280.30593872]
[-33.79133606 -274.29177856]
[-31.56621933 -259.45773315]
[-29.34110069 -244.62368774]
[-27.11598396 -229.78964233]
[-24.89086723 -214.95559692]
[-21.56860733 -200.32814026]
[-17.16761017 -185.98829651]
[-12.76661110 -171.64845276]
[-7.94061375 -157.44599915]
[-2.69389558 -143.39352417]
[2.55282259 -129.34104919]
[7.79954100 -115.28858185]
[13.04625893 -101.23610687]
[18.29297638 -87.18363953]
[23.53969574 -73.13116455]
[28.78641319 -59.07869339]
[40.48672104 -49.86174774]
[38.06521606 -34.22695160]
[43.31193161 -20.17448044]
[49.38576889 -6.45921373]
[56.26517868 6.87021589]
[63.14459229 20.19964409]
[70.02400208 33.52907562]
[76.90341949 46.85850143]
[83.78282928 60.18793106]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.42300415 131.17166138]
[141.87002563 134.55316162]
[148.46562195 145.16831970]
[146.13726807 157.03868103]
[160.06683350 164.54055786]
[160.35806274 179.43231201]
[168.39923096 192.09483337]
[180.79452515 195.66127014]
[187.23135376 206.37345886]
[184.72653198 218.20783997]
[192.57829285 230.98867798]
[206.57261658 229.01245117]
[220.22181702 232.50866699]
[231.47332764 240.91752625]
[238.64820862 252.94299316]
[240.69151306 266.75256348]
[237.32743835 280.25643921]
[229.09591675 291.42382812]
[236.75651550 304.32012939]
[244.41711426 317.21646118]
[252.07769775 330.11279297]
[259.73831177 343.00912476]
[267.39889526 355.90545654]
[275.05950928 368.80178833]
[277.78329468 354.05114746]
[288.57733154 343.63534546]
[303.41567993 341.43920898]
[316.76403809 348.28186035]
[323.64376831 361.61111450]
[321.48892212 376.45553589]
[311.10317993 387.27850342]
[296.36019897 390.04330444]
[282.75784302 383.71795654]
[288.83169556 397.43322754]
[294.90551758 411.14849854]
[300.97933960 424.86376953]
[315.48941040 420.94482422]
[330.42767334 419.28686523]
[345.44396973 419.92874146]
[360.18624878 422.85546875]
[374.30895996 427.99838257]
[387.48101807 435.23693848]
[399.39370728 444.40145874]
[409.76773071 455.27709961]
[418.35992432 467.60894775]
[424.96887207 481.10794067]
[429.43966675 495.45758057]
[431.66748047 510.32153320]
[431.60009766 525.35137939]
[429.23910522 540.19476318]
[424.63983154 554.50372314]
[417.91009521 567.94293213]
[409.20767212 580.19726562]
[398.73654175 590.97943115]
[386.74215698 600.03680420]
[373.50570679 607.15692139]
[359.33746338 612.17303467]
[344.56951904 614.96740723]
[329.54809570 615.47460938]
[314.62530518 613.68280029]
[300.15097046 609.63391113]
[286.46435547 603.42285156]
[273.88632202 595.19525146]
[262.71170044 585.14392090]
[253.20246887 573.50457764]
[245.58151245 560.54998779]
[240.02748108 546.58386230]
[236.67056274 531.93353271]
[235.58947754 516.94250488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 177]
[7 176]
[8 175]
[9 174]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[15 160]
[16 159]
[22 152]
[23 151]
[25 148]
[26 147]
[28 145]
[30 142]
[31 141]
[32 140]
[34 138]
[35 137]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[57 130]
[58 129]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[72 119]
[73 118]
[74 117]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
