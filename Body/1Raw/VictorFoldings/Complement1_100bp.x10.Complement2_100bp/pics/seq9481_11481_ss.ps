%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[5.67014122 573.58264160]
[9.27461147 588.23425293]
[8.96317196 603.31951904]
[4.75705576 617.80993652]
[-3.05695653 630.71740723]
[-13.94609261 641.16198730]
[-27.16791153 648.43151855]
[-41.82093048 652.03033447]
[-56.90608215 651.71307373]
[-71.39482880 647.50134277]
[-84.29931641 639.68237305]
[-94.73968506 628.78918457]
[-102.00409698 615.56457520]
[-105.59725189 600.91015625]
[-105.27416229 585.82513428]
[-101.05686188 571.33801270]
[-93.23287964 558.43652344]
[-82.33568573 548.00036621]
[-69.10825348 540.74108887]
[-54.45246124 537.15356445]
[-39.36756134 537.48248291]
[-35.18054962 523.07873535]
[-30.99353790 508.67492676]
[-26.80652618 494.27114868]
[-22.61951447 479.86737061]
[-18.43250275 465.46359253]
[-22.30964661 451.08245850]
[-11.02779007 439.99053955]
[-6.84077883 425.58676147]
[-2.65376735 411.18298340]
[-14.32477283 403.17044067]
[-22.96375084 391.92813110]
[-27.71557045 378.54718018]
[-28.10316467 364.33135986]
[-24.07539368 350.67019653]
[-16.01334000 338.90307617]
[-4.69429493 330.18795776]
[8.78316975 325.38742065]
[23.10581970 324.98324585]
[27.50681686 310.64340210]
[31.90781593 296.30355835]
[36.30881500 281.96368408]
[23.20583344 274.71057129]
[11.89291668 264.88772583]
[2.86615014 252.92260742]
[-3.47795725 239.33680725]
[-6.85989666 224.72312927]
[-7.12947178 209.71981812]
[-4.27246761 194.98258972]
[1.58862174 181.15612793]
[10.19984341 168.84571838]
[21.18678856 158.59085083]
[34.07086563 150.84156799]
[48.29016495 145.93867493]
[63.22393417 144.09877014]
[78.21971130 145.40469360]
[82.62071228 131.06484985]
[87.02171326 116.72499847]
[78.95827484 102.32538605]
[83.68283081 86.51253510]
[98.32405853 78.89661407]
[102.51107025 64.49283600]
[106.69808197 50.08905029]
[108.70209503 35.22352219]
[108.47876740 20.22518539]
[108.25543976 5.22684765]
[108.03211212 -9.77149010]
[100.09020233 -23.45493507]
[107.63716125 -36.29599380]
[107.41383362 -51.29433060]
[107.19050598 -66.29267120]
[106.96717834 -81.29100800]
[90.68922424 -85.56207275]
[76.27404785 -94.22022247]
[64.87491608 -106.56396484]
[57.40132904 -121.59730530]
[54.44644165 -138.11010742]
[56.24002838 -154.77551270]
[62.63059616 -170.25653076]
[73.09817505 -183.31333923]
[86.79660797 -192.90254211]
[102.62194824 -198.26058960]
[101.72913361 -213.23399353]
[100.83631897 -228.20741272]
[99.94350433 -243.18081665]
[99.05068207 -258.15420532]
[98.15786743 -273.12762451]
[96.81963348 -288.06781006]
[95.03717041 -302.96151733]
[93.25470734 -317.85525513]
[91.47223663 -332.74896240]
[76.57330322 -335.23861694]
[62.97990036 -341.82620239]
[51.79398727 -351.97763062]
[43.92235184 -364.87005615]
[40.00311661 -379.45828247]
[40.35399246 -394.55972290]
[44.94654083 -408.95016479]
[53.40845871 -421.46307373]
[65.05377960 -431.08404541]
[78.93846893 -437.03317261]
[93.93695831 -438.82818604]
[108.83338165 -436.32354736]
[122.42015839 -429.72232056]
[133.59587097 -419.55963135]
[141.45454407 -406.65933228]
[145.35913086 -392.06716919]
[144.99307251 -376.96609497]
[140.38607788 -362.58026123]
[131.91159058 -350.07586670]
[120.25661469 -340.46661377]
[106.36595154 -334.53143311]
[108.14842224 -319.63769531]
[109.93088531 -304.74398804]
[111.71335602 -289.85028076]
[113.83113861 -288.01367188]
[115.34901428 -285.22750854]
[115.90167999 -281.71609497]
[115.21168518 -277.83172607]
[113.13127899 -274.02044678]
[114.02409363 -259.04702759]
[114.91690826 -244.07362366]
[115.80972290 -229.10021973]
[116.70253754 -214.12681580]
[117.59535217 -199.15341187]
[130.65687561 -196.80278015]
[142.86941528 -191.58734131]
[153.61289978 -183.76792908]
[162.34091187 -173.73767090]
[168.60853577 -162.00224304]
[172.09501648 -149.15441895]
[172.62020874 -135.84405518]
[170.15380859 -122.74530029]
[164.81715393 -110.52236938]
[156.87721252 -99.79592133]
[146.73323059 -91.11151123]
[134.89669800 -84.91188049]
[121.96551514 -81.51433563]
[122.18884277 -66.51599884]
[122.41217041 -51.51765823]
[122.63549805 -36.51932144]
[130.56143188 -23.90865707]
[123.03044891 -9.99481773]
[123.25377655 5.00352001]
[123.47710419 20.00185776]
[123.70043182 35.00019455]
[130.33241272 21.54594612]
[140.44377136 10.46621799]
[153.23709106 2.63480520]
[167.70343018 -1.33067453]
[182.70191956 -1.11748695]
[197.04969788 3.25755477]
[209.61526489 11.44941711]
[219.40763855 22.81205559]
[225.65454102 36.44936371]
[227.86332703 51.28584671]
[225.85978699 66.15144348]
[219.80195618 79.87377930]
[210.16755676 91.37066650]
[197.71640015 99.73540497]
[183.43045044 104.30831146]
[168.43634033 104.72875977]
[153.91658020 100.96358490]
[141.01625061 93.30973053]
[130.75273132 82.37079620]
[123.93544769 69.00949097]
[121.10186005 54.27606201]
[116.91485596 68.67984009]
[112.72784424 83.08362579]
[120.11032867 93.38665771]
[120.28382111 106.06039429]
[113.18611908 116.56163788]
[101.36155701 121.12599945]
[96.96055603 135.46585083]
[92.55956268 149.80569458]
[105.70615387 157.13685608]
[117.03668213 167.03746033]
[126.05748749 179.07289124]
[132.37620544 192.71565247]
[135.71884155 207.36836243]
[135.94166565 222.38999939]
[133.03736877 237.12393188]
[127.13529205 250.92658997]
[118.49564362 263.19561768]
[107.49806213 273.39611816]
[94.62491608 281.08401489]
[80.44013977 285.92532349]
[65.56455231 287.71075439]
[50.64866257 286.36468506]
[46.24766159 300.70452881]
[41.84666443 315.04440308]
[37.44566727 329.38424683]
[50.20991898 338.91909790]
[58.92289352 352.22583008]
[62.54650116 367.68551636]
[60.66052246 383.42477417]
[53.51123047 397.54278564]
[41.97941971 408.34091187]
[27.47192764 414.52700806]
[11.75001431 415.36999512]
[7.56300354 429.77377319]
[3.37599230 444.17755127]
[6.95365286 459.58895874]
[-4.02872181 469.65060425]
[-8.21573257 484.05438232]
[-12.40274429 498.45816040]
[-16.58975601 512.86193848]
[-20.77676582 527.26574707]
[-24.96377754 541.66949463]
[-12.05325890 549.47851562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 209]
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[28 202]
[29 201]
[30 200]
[39 192]
[40 191]
[41 190]
[42 189]
[56 175]
[57 174]
[58 173]
[61 169]
[62 168]
[63 167]
[64 146]
[65 145]
[66 144]
[67 143]
[69 141]
[70 140]
[71 139]
[72 138]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
