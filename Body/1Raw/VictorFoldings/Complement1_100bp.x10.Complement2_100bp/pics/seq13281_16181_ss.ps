%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[171.36067200 773.98132324]
[157.78257751 767.59735107]
[144.58380127 760.46215820]
[131.80586243 752.59808350]
[119.48897552 744.02996826]
[107.67188263 734.78466797]
[96.39176178 724.89135742]
[85.68412018 714.38110352]
[75.58263397 703.28698730]
[66.11909485 691.64392090]
[57.32327652 679.48858643]
[49.22285461 666.85919189]
[41.84331131 653.79541016]
[35.20787048 640.33843994]
[29.33740807 626.53057861]
[24.25039673 612.41534424]
[19.96283913 598.03698730]
[16.48822784 583.44091797]
[13.83749390 568.67297363]
[12.01897812 553.77960205]
[11.03840256 538.80767822]
[10.89885235 523.80438232]
[11.60076618 508.81683350]
[13.14193630 493.89224243]
[15.51751328 479.07751465]
[18.72002220 464.41931152]
[22.73938560 449.96374512]
[27.56295967 435.75625610]
[33.17556763 421.84161377]
[39.55954742 408.26354980]
[46.69481277 395.06478882]
[54.55891800 382.28689575]
[63.12711334 369.97003174]
[72.37244415 358.15298462]
[82.26581573 346.87289429]
[92.77610779 336.16528320]
[103.87024689 326.06384277]
[115.51332855 316.60034180]
[127.66870880 307.80456543]
[140.29815674 299.70419312]
[153.36192322 292.32470703]
[166.81892395 285.68930054]
[160.94996643 271.88513184]
[155.08099365 258.08096313]
[149.21203613 244.27677917]
[143.34307861 230.47261047]
[137.47412109 216.66842651]
[131.60516357 202.86424255]
[127.58970642 200.27867126]
[125.15587616 195.14315796]
[125.77375031 188.56062317]
[120.31838989 174.58781433]
[114.86303711 160.61502075]
[109.50214386 155.52752686]
[109.43217468 146.39335632]
[104.18545532 132.34089661]
[92.48515320 123.12394714]
[94.90665436 107.48914337]
[91.66043091 105.40722656]
[89.34764099 101.90453339]
[88.58225250 97.43002319]
[89.75479889 92.69029999]
[85.14079285 78.41757202]
[80.52677917 64.14483643]
[75.91277313 49.87210083]
[71.21798706 64.11846924]
[60.09506989 74.18230438]
[45.45152664 77.43293762]
[31.11514282 73.02066803]
[20.83341599 62.09885406]
[17.29396439 47.52242661]
[21.42199135 33.10162735]
[32.13844299 22.60602379]
[46.64205933 18.77913857]
[61.14163589 22.62131310]
[71.84656525 33.12744522]
[69.40083313 18.32817459]
[66.95510864 3.52890372]
[57.07125092 -8.82504082]
[62.62984848 -22.64355087]
[48.35049438 -28.12509537]
[38.79517365 -39.94002914]
[36.45222855 -54.85234070]
[41.85195923 -68.84158325]
[53.45077133 -78.18679810]
[51.00504303 -92.98606873]
[48.55931473 -107.78533936]
[46.11358643 -122.58460999]
[31.08905029 -123.89384460]
[16.86240005 -128.89916992]
[4.32793903 -137.28594971]
[-5.72640848 -148.52697754]
[-12.66861725 -161.91564941]
[-16.06229401 -176.61033630]
[-15.69410801 -191.68731689]
[-11.58720493 -206.19883728]
[-3.99974918 -219.23269653]
[6.59130669 -229.96955872]
[19.52020073 -237.73451233]
[33.97420883 -242.03944397]
[49.04474258 -242.61373901]
[63.78445435 -239.42129517]
[77.26679993 -232.66279602]
[88.64425659 -222.76309204]
[97.20162964 -210.34446716]
[102.40100098 -196.18757629]
[103.91553497 -181.18235779]
[101.65002441 -166.27200317]
[95.74687195 -152.39384460]
[86.57717133 -140.42022705]
[74.71732330 -131.10385132]
[60.91285706 -125.03034210]
[63.35858536 -110.23107147]
[65.80431366 -95.43180084]
[68.25003815 -80.63253021]
[82.23881531 -75.51591492]
[91.85224915 -64.00774384]
[94.43165588 -49.13451385]
[89.18564606 -34.87351227]
[77.42911530 -25.08927917]
[87.13803864 -13.79387856]
[81.75437927 1.08317626]
[84.20010376 15.88244724]
[86.64583588 30.68171883]
[90.18550873 45.25809479]
[94.79951477 59.53082657]
[99.41352081 73.80355835]
[104.02753448 88.07629395]
[108.95912933 102.24243164]
[121.03471375 112.46450043]
[118.23793030 127.09416962]
[123.48464966 141.14663696]
[128.83583069 155.15966797]
[134.29118347 169.13246155]
[139.74655151 183.10525513]
[145.40933228 196.99528503]
[151.27828979 210.79946899]
[157.14724731 224.60363770]
[163.01622009 238.40782166]
[168.88517761 252.21199036]
[174.75413513 266.01617432]
[180.62309265 279.82034302]
[194.73832703 274.73318481]
[209.11659241 270.44546509]
[223.71266174 266.97070312]
[238.48059082 264.31979370]
[253.37391663 262.50109863]
[268.34579468 261.52035522]
[283.34912109 261.38064575]
[298.33666992 262.08239746]
[313.26129150 263.62341309]
[328.07601929 265.99880981]
[342.73425293 269.20117188]
[357.18988037 273.22036743]
[371.39739990 278.04379272]
[385.31213379 283.65621948]
[398.89025879 290.04006958]
[412.08911133 297.17517090]
[424.86709595 305.03915405]
[437.18405151 313.60720825]
[449.00122070 322.85238647]
[460.28140259 332.74563599]
[470.98913574 343.25582886]
[481.09069824 354.34985352]
[490.55432129 365.99282837]
[499.35021973 378.14810181]
[507.45074463 390.77746582]
[514.83038330 403.84115601]
[521.46594238 417.29806519]
[527.33648682 431.10586548]
[532.42358398 445.22113037]
[536.71124268 459.59939575]
[540.18597412 474.19546509]
[542.83685303 488.96340942]
[544.65545654 503.85675049]
[545.63616943 518.82867432]
[545.77581787 533.83197021]
[545.07397461 548.81951904]
[543.53295898 563.74414062]
[541.15747070 578.55883789]
[537.95507812 593.21710205]
[533.93579102 607.67266846]
[529.11236572 621.88018799]
[523.49987793 635.79492188]
[517.11596680 649.37298584]
[509.98080444 662.57183838]
[502.11679077 675.34979248]
[493.54867554 687.66668701]
[484.30343628 699.48382568]
[474.41015625 710.76397705]
[463.89993286 721.47167969]
[452.80587769 731.57318115]
[441.16287231 741.03680420]
[429.00753784 749.83264160]
[416.37817383 757.93310547]
[403.31445312 765.31268311]
[389.85751343 771.94818115]
[376.04968262 777.81872559]
[361.93441772 782.90576172]
[347.55612183 787.19335938]
[332.96002197 790.66802979]
[318.19207764 793.31884766]
[303.29873657 795.13739014]
[288.32684326 796.11804199]
[273.32351685 796.25762939]
[258.33596802 795.55578613]
[243.41136169 794.01464844]
[228.59664917 791.63916016]
[213.93843079 788.43670654]
[199.48283386 784.41735840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[51 135]
[52 134]
[53 133]
[55 132]
[56 131]
[58 129]
[62 128]
[63 127]
[64 126]
[65 125]
[76 124]
[77 123]
[78 122]
[80 120]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
