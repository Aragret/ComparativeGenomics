%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[78.43886566 368.19696045]
[78.85057831 383.24407959]
[76.22456360 398.06597900]
[70.66835785 412.05575562]
[62.40947723 424.64047241]
[51.78611755 435.30487061]
[39.23330688 443.61221313]
[25.26506805 449.22232056]
[10.45339489 451.90542603]
[-4.59518576 451.55172729]
[-19.26444244 448.17568970]
[-32.95368195 441.91552734]
[-45.10233307 433.02758789]
[-55.21291733 421.87585449]
[-62.87141800 408.91699219]
[-67.76422119 394.68164062]
[-69.69096375 379.75271606]
[-68.57275391 364.74157715]
[-64.45538330 350.26290894]
[-57.50744629 336.90957642]
[-48.01346588 325.22842407]
[-36.36220932 315.69778442]
[-23.03079224 308.70794678]
[-8.56512356 304.54507446]
[6.44243383 303.37969971]
[21.37733078 305.25952148]
[26.20332909 291.05706787]
[31.02932549 276.85461426]
[35.85532379 262.65216064]
[30.79158783 251.66648865]
[34.69597244 239.79469299]
[45.99350739 233.57147217]
[51.03042221 219.44242859]
[56.06734085 205.31340027]
[51.98012161 188.24702454]
[66.10632324 176.43464661]
[70.93231964 162.23219299]
[75.75831604 148.02973938]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[104.18446350 62.63891983]
[108.79846954 48.36618805]
[113.41248322 34.09345245]
[102.95387268 44.84600830]
[90.56832123 53.30758286]
[76.74915314 59.14115524]
[62.04677582 62.11437988]
[47.04677582 62.10882950]
[32.34659958 59.12472916]
[18.53175163 53.28092957]
[6.15247059 44.81019592]
[-4.29818296 34.04990387]
[-12.40396214 21.42863846]
[-17.84201813 7.44909811]
[-20.39575386 -7.33191776]
[-19.96345520 -22.32568741]
[-16.56234169 -36.93501282]
[-10.32787609 -50.57801437]
[-1.50837660 -62.71129227]
[9.54487991 -72.85158539]
[22.39164543 -80.59500885]
[36.52024078 -85.63314056]
[51.36792755 -87.76531982]
[66.34333038 -86.90662384]
[80.84998322 -83.09124756]
[94.31008911 -76.47116089]
[106.18753815 -67.31004333]
[116.00926208 -55.97276688]
[123.38405609 -42.91090012]
[128.01818848 -28.64468956]
[129.72709656 -13.74235249]
[128.44268799 1.20255685]
[124.21772003 15.59091759]
[134.38125610 4.55904007]
[144.54481506 -6.47283745]
[148.20492554 -21.86485291]
[162.51901245 -25.98267174]
[172.68255615 -37.01454926]
[182.84609985 -48.04642487]
[193.00964355 -59.07830429]
[203.17318726 -70.11018372]
[213.33674622 -81.14205933]
[223.50028992 -92.17393494]
[208.58724976 -90.56100464]
[195.51731873 -97.92150116]
[189.16525269 -111.51013947]
[191.90020752 -126.25869751]
[202.70211792 -136.66633606]
[217.54212952 -138.85124207]
[230.88529968 -131.99851990]
[237.75494385 -118.66405487]
[235.58834839 -103.82022095]
[246.99081421 -113.56619263]
[258.39328003 -123.31215668]
[269.79574585 -133.05812073]
[261.04626465 -145.25321960]
[253.36251831 -158.14639282]
[246.79988098 -171.64474487]
[241.40563965 -185.65103149]
[237.21865845 -200.06433105]
[234.26910400 -214.78077698]
[232.57823181 -229.69436646]
[232.15821838 -244.69760132]
[233.01210022 -259.68243408]
[235.13371277 -274.54083252]
[238.50776672 -289.16580200]
[243.10995483 -303.45193481]
[248.90713501 -317.29632568]
[255.85752869 -330.59918213]
[263.91104126 -343.26464844]
[273.00967407 -355.20153809]
[283.08782959 -366.32379150]
[294.07293701 -376.55126953]
[305.88580322 -385.81030273]
[318.44137573 -394.03414917]
[331.64913940 -401.16357422]
[345.41394043 -407.14724731]
[359.63659668 -411.94198608]
[374.21466064 -415.51327515]
[389.04306030 -417.83538818]
[404.01498413 -418.89160156]
[419.02252197 -418.67428589]
[433.95758057 -417.18499756]
[448.71252441 -414.43450928]
[463.18106079 -410.44259644]
[477.25894165 -405.23803711]
[490.84472656 -398.85833740]
[503.84051514 -391.34945679]
[516.15264893 -382.76547241]
[527.69250488 -373.16830444]
[538.37683105 -362.62701416]
[548.12872314 -351.21762085]
[556.87792969 -339.02230835]
[564.56134033 -326.12893677]
[571.12359619 -312.63040161]
[576.51751709 -298.62396240]
[580.70410156 -284.21057129]
[583.65325928 -269.49404907]
[585.34375000 -254.58041382]
[585.76336670 -239.57716370]
[584.90911865 -224.59236145]
[582.78710938 -209.73400879]
[579.41271973 -195.10913086]
[574.81011963 -180.82310486]
[569.01257324 -166.97888184]
[562.06188965 -153.67620850]
[554.00799561 -141.01092529]
[544.90911865 -129.07429504]
[534.83062744 -117.95230103]
[523.84527588 -107.72510529]
[512.03216553 -98.46638489]
[499.47637939 -90.24284363]
[486.26843262 -83.11374664]
[472.50347900 -77.13045502]
[458.28070068 -72.33607483]
[443.70254517 -68.76515198]
[428.87408447 -66.44342041]
[413.90213013 -65.38760376]
[398.89459229 -65.60531616]
[383.95956421 -67.09497833]
[369.20468140 -69.84585571]
[354.73626709 -73.83814240]
[340.65850830 -79.04306793]
[327.07290649 -85.42311859]
[314.07733154 -92.93234253]
[301.76538086 -101.51662445]
[290.22579956 -111.11411285]
[279.54171753 -121.65565491]
[268.13925171 -111.90969086]
[256.73678589 -102.16372681]
[245.33432007 -92.41776276]
[234.53216553 -82.01039124]
[224.36862183 -70.97850800]
[214.20506287 -59.94663239]
[204.04151917 -48.91475677]
[193.87797546 -37.88287735]
[183.71443176 -26.85100174]
[173.55088806 -15.81912422]
[170.61773682 -1.21618330]
[155.57669067 3.69070959]
[145.41314697 14.72258663]
[135.24958801 25.75446320]
[127.68521118 38.70746231]
[123.07120514 52.98019409]
[118.45719910 67.25292969]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[89.96076965 152.85574341]
[85.13477325 167.05819702]
[80.30877686 181.26065063]
[85.29940033 193.15420532]
[80.98743439 204.88410950]
[70.19637299 210.35032654]
[65.15945435 224.47935486]
[60.12253571 238.60838318]
[63.85950470 256.63937378]
[50.05778122 267.47814941]
[45.23178101 281.68060303]
[40.40578461 295.88305664]
[35.57978821 310.08554077]
[48.56808472 317.69400024]
[59.75870132 327.76153564]
[68.69338989 339.87582397]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 207]
[27 206]
[28 205]
[29 204]
[32 202]
[33 201]
[34 200]
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
[41 192]
[42 190]
[43 189]
[44 188]
[45 187]
[46 186]
[76 185]
[77 184]
[78 183]
[80 181]
[81 180]
[82 179]
[83 178]
[84 177]
[85 176]
[86 175]
[95 174]
[96 173]
[97 172]
[98 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
