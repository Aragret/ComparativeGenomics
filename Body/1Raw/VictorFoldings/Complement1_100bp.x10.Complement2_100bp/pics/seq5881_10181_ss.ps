%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[124.71923828 500.55450439]
[114.38967133 489.67202759]
[104.71035004 478.20733643]
[95.71401215 466.19927979]
[87.43110657 453.68841553]
[79.88966370 440.71710205]
[73.11518860 427.32925415]
[67.13061523 413.57015991]
[61.95618439 399.48635864]
[57.60941315 385.12551880]
[54.10500717 370.53622437]
[51.45482254 355.76788330]
[49.66782761 340.87039185]
[48.75007248 325.89422607]
[48.70465469 310.89001465]
[49.53173447 295.90856934]
[51.22851181 281.00054932]
[53.78924561 266.21640015]
[57.20527267 251.60618591]
[61.46502686 237.21929932]
[66.55410004 223.10443115]
[72.45527649 209.30935669]
[79.14858246 195.88073730]
[86.61136627 182.86401367]
[94.81838226 170.30325317]
[103.74186707 158.24093628]
[113.35160828 146.71786499]
[123.61510468 135.77307129]
[113.28843689 124.89373016]
[102.96176910 114.01439667]
[89.61100006 109.86124420]
[86.15889740 96.31227112]
[75.83222961 85.43293762]
[65.50556183 74.55360413]
[50.39313126 69.87119293]
[47.24288940 55.31354141]
[35.65749741 64.85123444]
[23.42818642 73.54795074]
[10.61587620 81.36035156]
[-2.71559930 88.24952698]
[-16.49982262 94.18114471]
[-30.66812325 99.12565613]
[-45.14991379 103.05843353]
[-59.87304306 105.95987701]
[-74.76416016 107.81552887]
[-89.74908447 108.61615753]
[-104.75315857 108.35775757]
[-119.70162201 107.04162598]
[-134.52001953 104.67432404]
[-149.13450623 101.26763916]
[-163.47229004 96.83853912]
[-177.46194458 91.40910339]
[-191.03373718 85.00636292]
[-204.12010193 77.66223145]
[-216.65580750 69.41329193]
[-228.57841492 60.30064392]
[-239.82850647 50.36967850]
[-250.35006714 39.66987991]
[-260.09066772 28.25454712]
[-269.00177002 16.18055725]
[-277.03897095 3.50806236]
[-284.16226196 -9.69980526]
[-290.33612061 -23.37724304]
[-295.52981567 -37.45611191]
[-299.71743774 -51.86626816]
[-302.87817383 -66.53591919]
[-304.99624634 -81.39199066]
[-306.06109619 -96.36045837]
[-306.06741333 -111.36675262]
[-305.01519775 -126.33611298]
[-302.90969849 -141.19396973]
[-299.76135254 -155.86627197]
[-295.58587646 -170.27996826]
[-290.40408325 -184.36320496]
[-284.24176025 -198.04585266]
[-277.12960815 -211.25973511]
[-269.10311890 -223.93901062]
[-260.20220947 -236.02052307]
[-250.47125244 -247.44406128]
[-239.95872498 -258.15274048]
[-228.71701050 -268.09320068]
[-216.80210876 -277.21591187]
[-204.27336121 -285.47543335]
[-191.19320679 -292.83059692]
[-177.62681580 -299.24478149]
[-163.64176941 -304.68603516]
[-149.30772400 -309.12722778]
[-134.69610596 -312.54626465]
[-119.87972260 -314.92608643]
[-104.93236542 -316.25482178]
[-89.92852020 -316.52587891]
[-74.94292450 -315.73791504]
[-60.05024719 -313.89483643]
[-45.32467270 -311.00579834]
[-30.83956909 -307.08526611]
[-16.66710091 -302.15270996]
[-2.87787414 -296.23272705]
[10.45941162 -289.35482788]
[23.27831078 -281.55322266]
[35.51496124 -272.86685181]
[47.10839844 -263.33892822]
[58.00086212 -253.01695251]
[68.13809204 -241.95234680]
[77.46957397 -230.20022583]
[85.94882965 -217.81913757]
[93.53360748 -204.87078857]
[100.18612671 -191.41964722]
[105.87323761 -177.53276062]
[110.56661987 -163.27929688]
[114.24287415 -148.73028564]
[116.88368988 -133.95817566]
[118.47592163 -119.03659058]
[119.01162720 -104.03986359]
[118.48813629 -89.04270172]
[116.90805817 -74.11981964]
[114.27927399 -59.34557343]
[110.61486816 -44.79356003]
[105.93310547 -30.53628349]
[100.25730133 -16.64476776]
[93.61574554 -3.18822217]
[86.04151154 9.76631165]
[77.57234192 22.15429497]
[68.25043488 33.91400909]
[58.12222290 44.98686981]
[72.49602509 48.89111710]
[76.38489532 64.22693634]
[86.71156311 75.10626984]
[97.03823090 85.98560333]
[110.38899994 90.13875580]
[113.84110260 103.68772888]
[124.16777039 114.56706238]
[134.49443054 125.44639587]
[145.95898438 115.76692963]
[157.96696472 106.77044678]
[170.47770691 98.48738861]
[183.44891357 90.94577789]
[196.83668518 84.17113495]
[210.59571838 78.18639374]
[224.67944336 73.01178741]
[239.04023743 68.66484070]
[253.62947083 65.16024780]
[268.39779663 62.50988388]
[283.29525757 60.72270584]
[298.27142334 59.80475998]
[313.27560425 59.75915909]
[328.25708008 60.58605194]
[343.16513062 62.28264618]
[357.94927979 64.84319305]
[372.55957031 68.25904083]
[386.94650269 72.51861572]
[401.06143188 77.60751343]
[414.85659790 83.50852203]
[428.28527832 90.20166016]
[441.30209351 97.66428375]
[453.86297607 105.87114716]
[465.92538452 114.79447174]
[477.44857788 124.40407562]
[488.39349365 134.66743469]
[498.72314453 145.54981995]
[508.40258789 157.01441956]
[517.39898682 169.02241516]
[525.68200684 181.53320312]
[533.22357178 194.50444031]
[539.99816895 207.89224243]
[545.98284912 221.65129089]
[551.15740967 235.73504639]
[555.50427246 250.09585571]
[559.00878906 264.68511963]
[561.65911865 279.45346069]
[563.44622803 294.35092163]
[564.36413574 309.32708740]
[564.40966797 324.33126831]
[563.58270264 339.31274414]
[561.88604736 354.22076416]
[559.32543945 369.00491333]
[555.90954590 383.61517334]
[551.64990234 398.00210571]
[546.56091309 412.11700439]
[540.65985107 425.91213989]
[533.96667480 439.34082031]
[526.50402832 452.35757446]
[518.29711914 464.91842651]
[509.37371826 476.98083496]
[499.76406860 488.50396729]
[489.50067139 499.44885254]
[478.61822510 509.77844238]
[467.15359497 519.45782471]
[455.14553833 528.45422363]
[442.63473511 536.73718262]
[429.66345215 544.27868652]
[416.27563477 551.05322266]
[402.51657104 557.03784180]
[388.43276978 562.21234131]
[374.07196045 566.55914307]
[359.48269653 570.06359863]
[344.71432495 572.71386719]
[329.81686401 574.50091553]
[314.84069824 575.41876221]
[299.83651733 575.46423340]
[284.85504150 574.63720703]
[269.94702148 572.94049072]
[255.16287231 570.37982178]
[240.55262756 566.96386719]
[226.16572571 562.70416260]
[212.05084229 557.61511230]
[198.25573730 551.71398926]
[184.82708740 545.02075195]
[171.81034851 537.55804443]
[159.24954224 529.35107422]
[147.18717957 520.42761230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 132]
[29 131]
[30 130]
[32 128]
[33 127]
[34 126]
[36 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
