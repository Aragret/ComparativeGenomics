%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[96.01509094 390.20217896]
[88.40363312 403.16812134]
[78.76174927 414.70431519]
[67.35247040 424.49606323]
[54.48705292 432.27624512]
[40.51647186 437.83255005]
[25.82186127 441.01348877]
[10.80409431 441.73220825]
[-4.12712908 439.96914673]
[-18.56447601 435.77236938]
[-32.11408615 429.25637817]
[-44.40631485 420.59896851]
[-55.10581970 410.03628540]
[-63.92071152 397.85647583]
[-70.61051941 384.39184570]
[-74.99272919 370.00970459]
[-76.94779968 355.10238647]
[-76.42239380 340.07662964]
[-73.43083954 325.34228516]
[-68.05475616 311.30136108]
[-60.44079971 298.33691406]
[-50.79669189 286.80255127]
[-39.38552856 277.01300049]
[-26.51861000 269.23532104]
[-12.54696178 263.68170166]
[2.14826274 260.50360107]
[17.16616631 259.78778076]
[32.09704971 261.55371094]
[36.28406143 247.14993286]
[40.47107315 232.74615479]
[39.10245132 229.49665833]
[39.23975372 225.42282104]
[41.25328827 221.23963928]
[45.18002701 217.80047607]
[50.00602722 203.59802246]
[54.83202362 189.39556885]
[59.65802002 175.19311523]
[64.48401642 160.99066162]
[51.06789780 167.69943237]
[36.44953156 164.33738708]
[27.31224060 152.44160461]
[27.83347130 137.45065308]
[37.77492142 126.21822357]
[52.59149933 123.87961578]
[65.50926208 131.50401306]
[70.62238312 145.60749817]
[76.89974213 131.98417664]
[83.17710876 118.36087036]
[89.45446777 104.73754883]
[76.58853149 112.44907379]
[61.61808777 113.39032745]
[47.88758469 107.35102081]
[38.46443939 95.68035889]
[35.45381546 80.98559570]
[39.52828979 66.54957581]
[49.77761459 55.59734344]
[63.91206360 50.57565689]
[78.77396393 52.60637665]
[91.04313660 61.23583221]
[97.97860718 74.53617859]
[98.03097534 89.53610992]
[106.44559479 77.11861420]
[114.86021423 64.70111847]
[123.27483368 52.28362274]
[131.68945312 39.86612701]
[140.10406494 27.44863129]
[136.05677795 14.60207367]
[140.08848572 1.95470965]
[150.51383972 -5.94428301]
[163.39137268 -6.38967562]
[171.98994446 -18.68051338]
[180.58850098 -30.97135162]
[179.11614990 -43.78520966]
[186.53094482 -53.84525681]
[198.41888428 -56.08205414]
[207.19949341 -68.24350739]
[215.98008728 -80.40496063]
[204.39002991 -89.93491364]
[193.42123413 -100.17379761]
[183.11697388 -111.08122253]
[173.51794434 -122.61413574]
[164.66201782 -134.72702026]
[156.58413696 -147.37207031]
[149.31619263 -160.49938965]
[142.88685608 -174.05715942]
[137.32151794 -187.99188232]
[132.64213562 -202.24856567]
[128.86717224 -216.77091980]
[126.01152039 -231.50166321]
[124.08645630 -246.38264465]
[123.09958649 -261.35513306]
[123.05479431 -276.36004639]
[123.95226288 -291.33816528]
[125.78844452 -306.23037720]
[128.55609131 -320.97790527]
[132.24429321 -335.52255249]
[136.83848572 -349.80691528]
[142.32052612 -363.77462769]
[148.66880798 -377.37054443]
[155.85824585 -390.54101562]
[163.86048889 -403.23406982]
[172.64395142 -415.39959717]
[182.17395020 -426.98962402]
[192.41290283 -437.95837402]
[203.32037354 -448.26254272]
[214.85333252 -457.86151123]
[226.96627808 -466.71740723]
[239.61135864 -474.79519653]
[252.73872375 -482.06307983]
[266.29653931 -488.49234009]
[280.23126221 -494.05761719]
[294.48797607 -498.73693848]
[309.01037598 -502.51181030]
[323.74111938 -505.36740112]
[338.62210083 -507.29235840]
[353.59460449 -508.27917480]
[368.59951782 -508.32388306]
[383.57763672 -507.42633057]
[398.46984863 -505.59005737]
[413.21734619 -502.82235718]
[427.76196289 -499.13406372]
[442.04629517 -494.53979492]
[456.01397705 -489.05767822]
[469.60986328 -482.70935059]
[482.78030396 -475.51983643]
[495.47329712 -467.51751709]
[507.63879395 -458.73400879]
[519.22875977 -449.20391846]
[530.19744873 -438.96493530]
[540.50158691 -428.05740356]
[550.10052490 -416.52438354]
[558.95629883 -404.41140747]
[567.03405762 -391.76626587]
[574.30187988 -378.63888550]
[580.73107910 -365.08102417]
[586.29626465 -351.14627075]
[590.97552490 -336.88952637]
[594.75030518 -322.36712646]
[597.60583496 -307.63635254]
[599.53070068 -292.75537109]
[600.51745605 -277.78286743]
[600.56207275 -262.77792358]
[599.66442871 -247.79983521]
[597.82812500 -232.90763855]
[595.06030273 -218.16014099]
[591.37194824 -203.61553955]
[586.77758789 -189.33122253]
[581.29541016 -175.36358643]
[574.94702148 -161.76773071]
[567.75738525 -148.59733582]
[559.75506592 -135.90435791]
[550.97143555 -123.73891449]
[541.44134521 -112.14899445]
[531.20227051 -101.18035889]
[520.29467773 -90.87627411]
[508.76162720 -81.27742767]
[496.64859009 -72.42168427]
[484.00341797 -64.34400177]
[470.87597656 -57.07626343]
[457.31811523 -50.64714813]
[443.38330078 -45.08202362]
[429.12655640 -40.40285873]
[414.60412598 -36.62812042]
[399.87335205 -33.77270126]
[384.99234009 -31.84787560]
[370.01983643 -30.86123657]
[355.01492310 -30.81668091]
[340.03680420 -31.71438217]
[325.14462280 -33.55079651]
[310.39715576 -36.31867981]
[295.85256958 -40.00710678]
[281.56826782 -44.60151672]
[267.60064697 -50.08378601]
[254.00483704 -56.43227005]
[240.83447266 -63.62192154]
[228.14155579 -71.62435913]
[219.36094666 -59.46290588]
[210.58033752 -47.30144882]
[209.74128723 -29.77253151]
[192.87934875 -22.37278748]
[184.28077698 -10.08195019]
[175.68222046 2.20888805]
[179.31440735 18.62978745]
[169.75827026 32.87742233]
[152.52156067 35.86325073]
[144.10694885 48.28074646]
[135.69232178 60.69823837]
[127.27770996 73.11573792]
[118.86309052 85.53323364]
[110.44847107 97.95072937]
[103.07778168 111.01491547]
[96.80042267 124.63822937]
[90.52306366 138.26155090]
[84.24569702 151.88485718]
[78.68647766 165.81666565]
[73.86047363 180.01911926]
[69.03447723 194.22157288]
[64.20848083 208.42402649]
[59.38248444 222.62648010]
[54.87485504 236.93316650]
[50.68784332 251.33694458]
[46.50083160 265.74072266]
[60.05169678 272.25408936]
[72.34559631 280.90914917]
[83.04713440 291.46978760]
[91.86437225 303.64788818]
[98.55677032 317.11123657]
[102.94175720 331.49252319]
[104.89969635 346.39944458]
[104.37718201 361.42532349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 202]
[29 201]
[30 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[46 194]
[47 193]
[48 192]
[49 191]
[61 190]
[62 189]
[63 188]
[64 187]
[65 186]
[66 185]
[70 182]
[71 181]
[72 180]
[75 178]
[76 177]
[77 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
