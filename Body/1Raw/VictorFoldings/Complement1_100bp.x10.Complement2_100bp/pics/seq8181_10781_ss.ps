%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[312.55914307 397.81814575]
[306.07962036 384.28982544]
[299.60012817 370.76147461]
[293.12063599 357.23312378]
[286.64114380 343.70477295]
[280.16165161 330.17642212]
[274.43722534 325.50173950]
[273.68807983 316.39810181]
[266.02746582 303.50177002]
[257.06677246 291.47238159]
[248.10607910 279.44299316]
[239.14538574 267.41363525]
[223.51870728 270.75387573]
[207.94306946 266.93109131]
[195.54888916 256.66134644]
[188.84986877 241.96157837]
[189.23335266 225.75364685]
[196.67330933 211.28364563]
[187.53450012 199.38902283]
[178.39569092 187.49438477]
[168.39752197 176.31240845]
[157.59536743 165.90502930]
[146.79321289 155.49766541]
[135.99105835 145.09028625]
[125.18890381 134.68292236]
[114.38674164 124.27554321]
[103.58458710 113.86817169]
[90.06169128 110.31529999]
[86.00804138 96.93399048]
[75.20588684 86.52661133]
[59.89944458 82.52368164]
[56.10231018 68.12121582]
[45.30015182 57.71384048]
[40.23344803 56.45861435]
[36.52564240 53.66478729]
[34.53525543 50.10762405]
[34.26114273 46.59234238]
[23.93447495 35.71300888]
[13.52710247 24.91085243]
[3.03960156 14.18647194]
[-7.44789934 3.46209264]
[-18.01494789 -7.18391609]
[-28.66095543 -17.75096321]
[-39.30696487 -28.31801224]
[-49.95297241 -38.88505936]
[-60.59898376 -49.45210648]
[-72.12474060 -39.83486176]
[-84.50043488 -31.33917618]
[-97.61730194 -24.03971291]
[-111.36007690 -18.00062180]
[-125.60797882 -13.27497578]
[-140.23579407 -9.90430355]
[-155.11497498 -7.91822815]
[-170.11476135 -7.33420372]
[-185.10331726 -8.15736294]
[-199.94892883 -10.38047123]
[-214.52113342 -13.98399258]
[-228.69186401 -18.93625641]
[-242.33657837 -25.19374275]
[-255.33537292 -32.70145798]
[-267.57400513 -41.39342499]
[-278.94491577 -51.19325638]
[-289.34820557 -62.01482391]
[-298.69241333 -73.76303101]
[-306.89541626 -86.33463287]
[-313.88513184 -99.61914062]
[-319.60015869 -113.49980927]
[-323.99026489 -127.85466003]
[-327.01681519 -142.55752563]
[-328.65328979 -157.47920227]
[-328.88525391 -172.48855591]
[-327.71069336 -187.45367432]
[-325.13989258 -202.24305725]
[-321.19549561 -216.72669983]
[-315.91213989 -230.77734375]
[-309.33627319 -244.27151489]
[-301.52566528 -257.09060669]
[-292.54898071 -269.12194824]
[-282.48507690 -280.25982666]
[-271.42242432 -290.40637207]
[-259.45825195 -299.47238159]
[-246.69766235 -307.37820435]
[-233.25282288 -314.05435181]
[-219.24189758 -319.44213867]
[-204.78800964 -323.49426270]
[-190.01818848 -326.17507935]
[-175.06222534 -327.46099854]
[-160.05155945 -327.34078979]
[-145.11810303 -325.81546021]
[-130.39311218 -322.89840698]
[-116.00598907 -318.61532593]
[-102.08315277 -313.00378418]
[-88.74697876 -306.11315918]
[-76.11466217 -298.00396729]
[-64.29721832 -288.74746704]
[-53.39850235 -278.42504883]
[-43.51429367 -267.12741089]
[-34.73146057 -254.95381165]
[-27.12718201 -242.01127625]
[-20.76829147 -228.41351318]
[-15.71067047 -214.28004456]
[-11.99876690 -199.73507690]
[-9.66520309 -184.90641785]
[-8.73048401 -169.92440796]
[-9.20282745 -154.92068481]
[-11.07808018 -140.02714539]
[-14.33976269 -125.37463379]
[-18.95920944 -111.09194183]
[-24.89582634 -97.30459595]
[-32.09743881 -84.13374329]
[-40.50075912 -71.69514465]
[-50.03193283 -60.09811401]
[-39.38592529 -49.53106689]
[-28.73991776 -38.96401978]
[-18.09390831 -28.39697266]
[-7.44789934 -17.82992554]
[-0.48612207 -15.34890747]
[3.27648020 -7.02540874]
[13.76398087 3.69897127]
[24.25148201 14.42335129]
[31.17555046 17.00774384]
[34.81380844 25.38633919]
[45.14048004 36.26567459]
[55.70752716 46.91168213]
[66.50968170 57.31905746]
[81.04347992 60.57758713]
[85.61325836 75.72445679]
[96.41541290 86.13182831]
[109.93830872 89.68470001]
[113.99195862 103.06600952]
[124.79411316 113.47338867]
[135.59626770 123.88076019]
[146.39842224 134.28813171]
[157.20059204 144.69551086]
[168.00274658 155.10287476]
[178.80490112 165.51025391]
[176.22276306 150.73417664]
[181.28167725 136.61300659]
[192.65924072 126.83798218]
[207.38139343 123.96427917]
[221.59980774 128.74307251]
[231.59780884 139.92520142]
[234.76194763 154.58767700]
[230.26513672 168.89776611]
[219.28282166 179.11485291]
[204.68574524 182.56819153]
[190.29032898 178.35557556]
[199.42913818 190.25021362]
[208.56793213 202.14485168]
[222.28073120 198.72343445]
[236.21958923 200.78070068]
[248.28486633 207.97337341]
[256.67187500 219.18714905]
[260.14077759 232.70919800]
[258.19982910 246.48979187]
[251.17475891 258.45294189]
[260.13546753 270.48229980]
[269.09616089 282.51168823]
[278.05685425 294.54107666]
[276.44863892 279.62753296]
[280.59622192 265.21234131]
[289.88433838 253.43391418]
[302.93508911 246.03950500]
[317.81256104 244.12603760]
[332.30969238 247.97735596]
[344.27597046 257.02215576]
[351.93624878 269.91867065]
[354.15417480 284.75378418]
[350.60073853 299.32681274]
[341.80307007 311.47592163]
[329.06622314 319.39886475]
[314.27966309 321.92031860]
[299.63690186 318.66622925]
[287.31140137 310.12072754]
[293.69000244 323.69692993]
[300.16949463 337.22528076]
[306.64898682 350.75363159]
[313.12847900 364.28198242]
[319.60797119 377.81030273]
[326.08746338 391.33865356]
[340.64151001 387.52069092]
[355.65509033 386.52636719]
[370.58551025 388.39163208]
[384.89303589 393.04901123]
[398.06045532 400.33020020]
[409.61175537 409.97195435]
[419.12942505 421.62573242]
[426.26934814 434.87030029]
[430.77343750 449.22680664]
[432.47888184 464.17633057]
[431.32400513 479.17840576]
[427.35058594 493.69076538]
[420.70227051 507.18878174]
[411.61935425 519.18450928]
[400.43017578 529.24426270]
[387.53924561 537.00445557]
[373.41256714 542.18450928]
[358.56079102 544.59722900]
[343.52081299 544.15539551]
[328.83630371 540.87487793]
[315.03808594 534.87438965]
[302.62500000 526.37072754]
[292.04574585 515.67138672]
[283.68273926 503.16311646]
[277.83834839 489.29809570]
[274.72378540 474.57748413]
[274.45169067 459.53347778]
[277.03186035 444.70986938]
[282.37106323 430.64254761]
[290.27624512 417.84002686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[8 174]
[9 159]
[10 158]
[11 157]
[12 156]
[18 149]
[19 148]
[20 147]
[21 136]
[22 135]
[23 134]
[24 133]
[25 132]
[26 131]
[27 130]
[29 128]
[30 127]
[32 125]
[33 124]
[37 123]
[38 122]
[39 120]
[40 119]
[41 118]
[42 116]
[43 115]
[44 114]
[45 113]
[46 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
