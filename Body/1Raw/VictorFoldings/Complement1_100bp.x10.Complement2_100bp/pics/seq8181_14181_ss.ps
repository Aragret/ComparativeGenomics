%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[44.31626129 737.25146484]
[29.70629120 740.67260742]
[14.90714359 743.15069580]
[-0.02036954 744.67553711]
[-15.01490688 745.24078369]
[-30.01485252 744.84417725]
[-44.95856857 743.48730469]
[-59.78464508 741.17578125]
[-74.43215942 737.91912842]
[-88.84092712 733.73065186]
[-102.95172882 728.62762451]
[-116.70658112 722.63098145]
[-130.04898071 715.76538086]
[-142.92407227 708.05908203]
[-155.27896118 699.54364014]
[-167.06288147 690.25415039]
[-178.22741699 680.22875977]
[-188.72666931 669.50860596]
[-198.51750183 658.13781738]
[-207.55969238 646.16302490]
[-215.81608582 633.63360596]
[-223.25273132 620.60083008]
[-229.83909607 607.11840820]
[-235.54809570 593.24176025]
[-240.35629272 579.02777100]
[-244.24389648 564.53491211]
[-247.19496155 549.82281494]
[-249.19734192 534.95184326]
[-250.24282837 519.98309326]
[-250.32711792 504.97814941]
[-249.44984436 489.99862671]
[-247.61463928 475.10607910]
[-244.82902527 460.36172485]
[-241.10446167 445.82614136]
[-236.45625305 431.55905151]
[-230.90350342 417.61907959]
[-224.46900940 404.06353760]
[-217.17922974 390.94808960]
[-209.06411743 378.32666016]
[-200.15701294 366.25109863]
[-190.49452209 354.77102661]
[-180.11634827 343.93362427]
[-169.06515503 333.78341675]
[-157.38632202 324.36212158]
[-145.12786865 315.70846558]
[-132.34014893 307.85800171]
[-119.07572937 300.84295654]
[-105.38910675 294.69216919]
[-91.33651733 289.43096924]
[-76.97571564 285.08090210]
[-62.36570740 281.65988159]
[-47.56653214 279.18197632]
[-32.63899994 277.65734863]
[-17.64445686 277.09225464]
[-2.64451623 277.48904419]
[12.29918385 278.84603882]
[27.12523651 281.15771484]
[41.77271652 284.41455078]
[45.95972824 270.01077271]
[50.14673615 255.60699463]
[54.33374786 241.20321655]
[58.52075958 226.79943848]
[52.97153854 216.05082703]
[56.34192276 204.01652527]
[67.35031128 197.29505920]
[71.75130463 182.95520020]
[76.15230560 168.61535645]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[97.72463989 71.62139130]
[99.06287384 56.68120575]
[100.40110779 41.74102020]
[93.92584991 27.30558968]
[102.76776886 15.31935692]
[104.10600281 0.37917206]
[105.44423676 -14.56101322]
[106.78247070 -29.50119781]
[92.07022095 -32.50614166]
[77.78693390 -37.13946915]
[64.11223602 -43.34291077]
[51.21810532 -51.03845978]
[39.26670074 -60.12932587]
[28.40831757 -70.50119019]
[18.77951431 -82.02361298]
[10.50138378 -94.55168152]
[3.67803240 -107.92784882]
[-1.60472953 -121.98389435]
[-5.28046560 -136.54304504]
[-7.30294991 -151.42221069]
[-7.64674664 -166.43426514]
[-6.30753326 -181.39042664]
[-3.30215073 -196.10258484]
[1.33160412 -210.38574219]
[7.53545761 -224.06024170]
[15.23138905 -236.95414734]
[24.32261467 -248.90527344]
[34.69480133 -259.76336670]
[46.21751022 -269.39181519]
[58.74583054 -277.66955566]
[72.12220001 -284.49252319]
[86.17840576 -289.77487183]
[100.73767090 -293.45016479]
[115.61689758 -295.47219849]
[130.62896729 -295.81555176]
[145.58508301 -294.47589111]
[160.29714966 -291.47006226]
[174.58015442 -286.83587646]
[188.25448608 -280.63162231]
[201.14814758 -272.93530273]
[213.09901428 -263.84371948]
[223.95677185 -253.47120667]
[233.58488464 -241.94821167]
[241.86227417 -229.41964722]
[248.68481445 -216.04306030]
[253.96673584 -201.98670959]
[257.64160156 -187.42733765]
[259.66320801 -172.54804993]
[260.00610352 -157.53596497]
[258.66598511 -142.57989502]
[255.65972900 -127.86791229]
[251.02511597 -113.58504486]
[244.82044983 -99.91090393]
[237.12374878 -87.01746368]
[228.03181458 -75.06687164]
[217.65896606 -64.20941925]
[206.13568115 -54.58164978]
[193.60687256 -46.30464554]
[180.23008728 -39.48249435]
[166.17356873 -34.20099258]
[151.61408997 -30.52656364]
[136.73474121 -28.50541496]
[121.72265625 -28.16296387]
[120.38442230 -13.22277927]
[119.04618835 1.71740627]
[117.70795441 16.65759087]
[124.27893066 30.02439880]
[115.34129333 43.07925415]
[114.00305939 58.01943970]
[112.66481781 72.95962524]
[122.99285889 62.08158875]
[137.53677368 58.41084671]
[151.78999329 63.08481216]
[161.33598328 74.65521240]
[163.21682739 89.53682709]
[156.84971619 103.11842346]
[144.20756531 111.19160461]
[129.20770264 111.25480652]
[116.49797821 103.28843689]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[108.53398895 151.78086853]
[121.69571686 158.97592163]
[124.42691803 173.72518921]
[114.71425629 185.15602112]
[99.71754456 184.84207153]
[90.49215698 173.01635742]
[86.09115601 187.35620117]
[81.69015503 201.69604492]
[86.22852325 219.54219055]
[72.92454529 230.98645020]
[68.73753357 245.39022827]
[64.55052185 259.79400635]
[60.36351013 274.19778442]
[56.17649841 288.60156250]
[70.28735352 293.70443726]
[84.04228210 299.70092773]
[97.38474274 306.56637573]
[110.25992584 314.27255249]
[122.61491394 322.78784180]
[134.39894104 332.07720947]
[145.56356812 342.10250854]
[156.06294250 352.82254028]
[165.85391235 364.19320679]
[174.89624023 376.16784668]
[183.15277100 388.69723511]
[190.58955383 401.72988892]
[197.17607117 415.21221924]
[202.88522339 429.08886719]
[207.69357300 443.30279541]
[211.58134460 457.79556274]
[214.53257751 472.50769043]
[216.53512573 487.37863159]
[217.58078003 502.34735107]
[217.66522217 517.35229492]
[216.78811646 532.33184814]
[214.95307922 547.22436523]
[212.16763306 561.96875000]
[208.44323730 576.50439453]
[203.79518127 590.77154541]
[198.24256897 604.71154785]
[191.80822754 618.26721191]
[184.51860046 631.38269043]
[176.40362549 644.00421143]
[167.49665833 656.07989502]
[157.83428955 667.56005859]
[147.45623779 678.39758301]
[136.40515137 688.54791260]
[124.72643280 697.96936035]
[112.46807861 706.62310791]
[99.68045044 714.47375488]
[86.41610718 721.48895264]
[72.72954559 727.63983154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[65 166]
[66 165]
[67 164]
[68 158]
[69 157]
[70 156]
[71 155]
[73 153]
[74 143]
[75 142]
[76 141]
[78 139]
[79 138]
[80 137]
[81 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
