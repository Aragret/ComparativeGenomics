%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[166.07191467 561.11309814]
[158.24174500 548.30773926]
[151.55744934 534.86859131]
[146.06988525 520.89807129]
[141.82083130 506.50241089]
[138.84262085 491.79119873]
[137.15792847 476.87640381]
[136.77955627 461.87155151]
[137.71040344 446.89077759]
[139.94338989 432.04818726]
[143.46150208 417.45666504]
[148.23796082 403.22729492]
[154.23643494 389.46838379]
[161.41125488 376.28463745]
[169.70782471 363.77639771]
[179.06300354 352.03884888]
[189.40557861 341.16131592]
[200.65686035 331.22662354]
[212.73118591 322.31033325]
[225.53666687 314.48034668]
[218.85647583 301.04998779]
[212.17628479 287.61959839]
[205.49609375 274.18923950]
[198.81588745 260.75885010]
[192.13569641 247.32847595]
[185.45550537 233.89810181]
[178.77531433 220.46772766]
[171.59994507 207.29524231]
[163.93934631 194.39891052]
[155.43252563 182.04440308]
[146.11763000 170.28715515]
[136.80274963 158.52990723]
[122.83459473 153.35885620]
[120.32941437 137.73724365]
[111.01453400 125.98000336]
[101.69965363 114.22274780]
[88.77265167 108.89505768]
[86.54309845 95.09213257]
[71.90866852 89.08013153]
[70.06976318 74.29947662]
[60.75487900 62.54222870]
[51.43999481 50.78497696]
[42.12511063 39.02772522]
[32.81023026 27.27047348]
[33.87365341 42.23273087]
[27.94663620 56.01208115]
[16.35328484 65.53018188]
[1.68358588 68.66065979]
[-12.78521347 64.70417023]
[-23.82074738 54.54459000]
[-28.95764732 40.45160294]
[-27.04831696 25.57361794]
[-18.51930618 13.23441219]
[-5.27601910 6.19059753]
[9.72296238 6.01577902]
[23.12684250 12.74902630]
[15.85361385 -0.36966729]
[8.58038425 -13.48836136]
[1.30715466 -26.60705566]
[-6.06353474 -39.67124176]
[-13.53127575 -52.68019485]
[-20.99901772 -65.68914795]
[-34.81593323 -59.80448914]
[-49.23188019 -55.59534836]
[-64.04447937 -53.12080765]
[-79.04577637 -52.41561127]
[-94.02519226 -53.48965454]
[-108.77242279 -56.32786179]
[-123.08045197 -60.89038467]
[-136.74841309 -67.11318207]
[-149.58444214 -74.90888214]
[-161.40830994 -84.16806030]
[-172.05406189 -94.76071930]
[-181.37222290 -106.53816223]
[-189.23199463 -119.33505249]
[-195.52302551 -132.97174072]
[-200.15702820 -147.25677490]
[-203.06890869 -161.98963928]
[-204.21781921 -176.96350098]
[-203.58761597 -191.96813965]
[-201.18714905 -206.79292297]
[-197.05012512 -221.22972107]
[-191.23461914 -235.07588196]
[-183.82225037 -248.13702393]
[-174.91711426 -260.22976685]
[-164.64418030 -271.18438721]
[-153.14770508 -280.84707642]
[-140.58906555 -289.08215332]
[-127.14456177 -295.77407837]
[-113.00293732 -300.82885742]
[-98.36271667 -304.17553711]
[-83.42942810 -305.76715088]
[-68.41271210 -305.58135986]
[-53.52337265 -303.62072754]
[-38.97044373 -299.91284180]
[-24.95821762 -294.50970459]
[-11.68340683 -287.48718262]
[0.66763067 -278.94384766]
[11.92150593 -268.99966431]
[21.92023087 -257.79425049]
[30.52344131 -245.48484802]
[37.61036301 -232.24430847]
[43.08150101 -218.25849915]
[46.86005402 -203.72373962]
[48.89297104 -188.84410095]
[49.15172195 -173.82847595]
[47.63266754 -158.88761902]
[44.35713577 -144.23132324]
[39.37111282 -130.06530762]
[32.74458694 -116.58845520]
[24.57058907 -103.98995972]
[14.96386909 -92.44667816]
[4.05928993 -82.12066650]
[-7.99006510 -73.15688324]
[-0.52232373 -60.14793396]
[6.94541740 -47.13898087]
[13.00168133 -42.90301132]
[14.42584896 -33.88028336]
[21.69907761 -20.76159096]
[28.97230721 -7.64289665]
[36.24553680 5.47579718]
[44.56748199 17.95559120]
[53.88236237 29.71284294]
[63.19724655 41.47009277]
[72.51213074 53.22734451]
[81.82701111 64.98459625]
[95.79517365 70.15563965]
[98.30034637 85.77725220]
[111.22734833 91.10494232]
[113.45690155 104.90786743]
[122.77178955 116.66511536]
[132.08666992 128.42236328]
[146.72109985 134.43437195]
[148.55999756 149.21502686]
[157.87489319 160.97227478]
[167.18977356 172.72952271]
[167.19166565 157.72952271]
[175.21310425 145.05448914]
[188.76856995 138.63192749]
[203.65774536 140.45191956]
[215.26705933 149.95053101]
[219.99925232 164.18452454]
[216.38798523 178.74333191]
[205.55224609 189.11573792]
[190.84962463 192.08776855]
[176.83567810 186.73832703]
[184.49627686 199.63464355]
[190.67176819 185.96485901]
[205.17123413 182.12223816]
[217.30618286 190.93942261]
[218.13119507 205.91671753]
[207.03810120 216.01341248]
[192.20568848 213.78752136]
[198.88587952 227.21789551]
[205.56607056 240.64828491]
[212.24627686 254.07865906]
[218.92646790 267.50903320]
[225.60665894 280.93939209]
[232.28684998 294.36978149]
[238.96704102 307.80017090]
[252.93736267 302.31201172]
[267.33282471 298.06234741]
[282.04391479 295.08352661]
[296.95864868 293.39819336]
[311.96350098 293.01919556]
[326.94430542 293.94943237]
[341.78698730 296.18176270]
[356.37866211 299.69927979]
[370.60821533 304.47512817]
[384.36740112 310.47302246]
[397.55145264 317.64730835]
[410.06002808 325.94335938]
[421.79797363 335.29803467]
[432.67593384 345.64013672]
[442.61111450 356.89099121]
[451.52789307 368.96496582]
[459.35842896 381.77011108]
[466.04309082 395.20901489]
[471.53106689 409.17941284]
[475.78051758 423.57495117]
[478.75912476 438.28607178]
[480.44424438 453.20083618]
[480.82302856 468.20568848]
[479.89260864 483.18646240]
[477.66003418 498.02914429]
[474.14233398 512.62072754]
[469.36627197 526.85028076]
[463.36819458 540.60931396]
[456.19372559 553.79327393]
[447.89752197 566.30175781]
[438.54266357 578.03955078]
[428.20040894 588.91735840]
[416.94940186 598.85241699]
[404.87533569 607.76904297]
[392.07006836 615.59936523]
[378.63104248 622.28387451]
[364.66058350 627.77160645]
[350.26498413 632.02087402]
[335.55380249 634.99926758]
[320.63903809 636.68420410]
[305.63418579 637.06274414]
[290.65341187 636.13214111]
[275.81076050 633.89935303]
[261.21920776 630.38146973]
[246.98977661 625.60516357]
[233.23077393 619.60693359]
[220.04693604 612.43225098]
[207.53855896 604.13586426]
[195.80088806 594.78088379]
[184.92321777 584.43841553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 147]
[29 146]
[30 136]
[31 135]
[32 134]
[34 132]
[35 131]
[36 130]
[38 128]
[40 126]
[41 125]
[42 124]
[43 123]
[44 122]
[56 121]
[57 120]
[58 119]
[59 118]
[60 116]
[61 115]
[62 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
