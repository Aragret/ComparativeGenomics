%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[107.06994629 328.99041748]
[105.78347015 314.03482056]
[105.88243103 299.02432251]
[107.36596680 284.08700562]
[110.22143555 269.35028076]
[114.42446899 254.93989563]
[119.93920898 240.97879028]
[126.71861267 227.58609009]
[134.70481873 214.87605286]
[143.82971191 202.95712280]
[154.01542664 191.93098450]
[165.17506409 181.89170837]
[156.21437073 169.86233521]
[147.25367737 157.83294678]
[138.29298401 145.80357361]
[128.12944031 134.77169800]
[113.46463013 132.16539001]
[108.22306824 117.23767090]
[93.75629425 118.04916382]
[82.88326263 108.47193146]
[81.86227417 94.01842499]
[70.60617828 84.10377502]
[59.35008621 74.18911743]
[48.09399033 64.27446747]
[36.83789444 54.35981750]
[22.89339256 62.06635284]
[7.17951822 64.52796173]
[-8.40097332 61.46516800]
[-21.96783829 53.26632309]
[-31.89025688 40.93845367]
[-36.98285675 25.98360062]
[-36.64730453 10.21583843]
[-30.94254303 -4.45879650]
[-42.34500504 -14.20476151]
[-53.74747086 -23.95072746]
[-65.14993286 -33.69669342]
[-80.66749573 -36.78147507]
[-85.31514740 -50.93239594]
[-96.71760559 -60.67836380]
[-107.37779236 -50.11332703]
[-118.87402344 -40.46469116]
[-131.12777710 -31.79837227]
[-144.05534363 -24.17356682]
[-157.56840515 -17.64236259]
[-171.57466125 -12.24937439]
[-185.97842407 -8.03144264]
[-200.68132019 -5.01738024]
[-215.58288574 -3.22777653]
[-230.58134460 -2.67485690]
[-245.57424927 -3.36239815]
[-260.45913696 -5.28570366]
[-275.13439941 -8.43163490]
[-289.49972534 -12.77870274]
[-303.45700073 -18.29721069]
[-316.91088867 -24.94946098]
[-329.76947021 -32.69001007]
[-341.94494629 -41.46598816]
[-353.35409546 -51.21743393]
[-363.91900635 -61.87774658]
[-373.56750488 -73.37409210]
[-382.23367310 -85.62795258]
[-389.85830688 -98.55560303]
[-396.38937378 -112.06874847]
[-401.78219604 -126.07506561]
[-405.99993896 -140.47888184]
[-409.01382446 -155.18180847]
[-410.80325317 -170.08340454]
[-411.35598755 -185.08187866]
[-410.66827393 -200.07475281]
[-408.74478149 -214.95964050]
[-405.59869385 -229.63484192]
[-401.25143433 -244.00010681]
[-395.73278809 -257.95733643]
[-389.08035278 -271.41113281]
[-381.33966064 -284.26962280]
[-372.56353760 -296.44497681]
[-362.81195068 -307.85403442]
[-352.15151978 -318.41882324]
[-340.65505981 -328.06716919]
[-328.40109253 -336.73318481]
[-315.47335815 -344.35769653]
[-301.96014404 -350.88858032]
[-287.95373535 -356.28121948]
[-273.54986572 -360.49880981]
[-258.84692383 -363.51254272]
[-243.94529724 -365.30178833]
[-228.94682312 -365.85433960]
[-213.95394897 -365.16644287]
[-199.06909180 -363.24279785]
[-184.39392090 -360.09649658]
[-170.02870178 -355.74908447]
[-156.07156372 -350.23025513]
[-142.61782837 -343.57766724]
[-129.75941467 -335.83682251]
[-117.58417511 -327.06054688]
[-106.17524719 -317.30883789]
[-95.61059570 -306.64828491]
[-85.96237183 -295.15170288]
[-77.29648590 -282.89764404]
[-69.67214966 -269.96978760]
[-63.14142609 -256.45651245]
[-57.74893951 -242.45005798]
[-53.53152084 -228.04612732]
[-50.51798248 -213.34313965]
[-48.72891235 -198.44149780]
[-48.17652893 -183.44302368]
[-48.86460876 -168.45014954]
[-50.78844452 -153.56530762]
[-53.93490219 -138.89018250]
[-58.28248215 -124.52501678]
[-63.80148697 -110.56793976]
[-70.45422363 -97.11428833]
[-78.19522858 -84.25597382]
[-86.97164154 -72.08082581]
[-75.56917572 -62.33486176]
[-60.86719894 -59.94717407]
[-55.40396500 -45.09915543]
[-44.00150299 -35.35319138]
[-32.59904099 -25.60722542]
[-21.19657898 -15.86125851]
[-9.08948326 -23.19826508]
[4.71257257 -26.44240952]
[18.86320496 -25.26361465]
[31.97781754 -19.76392746]
[42.76908112 -10.46883106]
[50.17329025 1.72294056]
[53.45522690 15.62628460]
[52.28111267 29.88492584]
[46.75254440 43.10372162]
[58.00864029 53.01837540]
[69.26473999 62.93302536]
[80.52083588 72.84767914]
[91.77693176 82.76232910]
[106.24370575 81.95083618]
[117.11673737 91.52806854]
[118.13772583 105.98157501]
[133.60763550 109.29705048]
[138.04408264 123.51560211]
[133.38447571 109.25769043]
[134.45918274 94.29624176]
[141.10879517 80.85069275]
[152.34686279 70.91561127]
[166.50630188 65.96481323]
[181.48663330 66.73271942]
[195.06561279 73.10540771]
[205.22888184 84.13753510]
[210.46879578 98.19255066]
[210.00802612 113.18547058]
[203.91491699 126.89218903]
[193.09336853 137.27938843]
[179.14868164 142.80621338]
[164.14947510 142.65275574]
[150.32235718 136.84288025]
[159.28305054 148.87225342]
[168.24375916 160.90162659]
[177.20445251 172.93101501]
[190.01828003 165.11242676]
[203.49887085 158.50950623]
[217.53118896 153.17860413]
[231.99552917 149.16520691]
[246.76849365 146.50354004]
[261.72399902 145.21630859]
[276.73449707 145.31451416]
[291.67190552 146.79731750]
[306.40878296 149.65203857]
[320.81936646 153.85435486]
[334.78073120 159.36840820]
[348.17376709 166.14712524]
[360.88421631 174.13270569]
[372.80361938 183.25700378]
[383.83026123 193.44216919]
[393.87008667 204.60130310]
[402.83746338 216.63920593]
[410.65582275 229.45317078]
[417.25851440 242.93386841]
[422.58917236 256.96627808]
[426.60235596 271.43069458]
[429.26376343 286.20370483]
[430.55075073 301.15924072]
[430.45230103 316.16973877]
[428.96923828 331.10711670]
[426.11425781 345.84393311]
[421.91171265 360.25445557]
[416.39743042 374.21572876]
[409.61849976 387.60864258]
[401.63269043 400.31896973]
[392.50820923 412.23818970]
[382.32284546 423.26467896]
[371.16354370 433.30432129]
[359.12548828 442.27148438]
[346.31140137 450.08966064]
[332.83059692 456.69210815]
[318.79809570 462.02255249]
[304.33361816 466.03546143]
[289.56057739 468.69665527]
[274.60501099 469.98336792]
[259.59451294 469.88467407]
[244.65716553 468.40136719]
[229.92039490 465.54614258]
[215.50993347 461.34335327]
[201.54875183 455.82885742]
[188.15592957 449.04968262]
[175.44577026 441.06365967]
[163.52667236 431.93896484]
[152.50036621 421.75344849]
[142.46090698 410.59396362]
[133.49394226 398.55575562]
[125.67599487 385.74154663]
[119.07376099 372.26062012]
[113.74356079 358.22802734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 156]
[13 155]
[14 154]
[15 153]
[16 138]
[18 136]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[33 120]
[34 119]
[35 118]
[36 117]
[38 115]
[39 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
