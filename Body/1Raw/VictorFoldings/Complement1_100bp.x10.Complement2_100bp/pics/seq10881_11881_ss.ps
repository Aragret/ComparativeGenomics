%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[62.94743729 964.15148926]
[47.95673752 963.56622314]
[33.00270462 962.36602783]
[18.11055374 960.55285645]
[3.30539989 958.12982178]
[-11.38779449 955.10101318]
[-25.94425201 951.47155762]
[-40.33942795 947.24749756]
[-54.54905319 942.43603516]
[-68.54915619 937.04522705]
[-82.31613922 931.08416748]
[-95.82678223 924.56298828]
[-109.05831146 917.49261475]
[-121.98840332 909.88494873]
[-134.59526062 901.75286865]
[-146.85763550 893.11004639]
[-158.75483704 883.97113037]
[-170.26679993 874.35144043]
[-181.37413025 864.26727295]
[-192.05809021 853.73553467]
[-202.30064392 842.77410889]
[-212.08456421 831.40136719]
[-221.39331055 819.63659668]
[-230.21121216 807.49951172]
[-238.52337646 795.01068115]
[-246.31582642 782.19110107]
[-253.57537842 769.06237793]
[-260.28982544 755.64672852]
[-266.44781494 741.96673584]
[-272.03897095 728.04541016]
[-277.05389404 713.90631104]
[-281.48410034 699.57324219]
[-285.32214355 685.07037354]
[-288.56149292 670.42218018]
[-291.19677734 655.65332031]
[-293.22348022 640.78869629]
[-294.63818359 625.85345459]
[-295.43856812 610.87268066]
[-295.62319946 595.87170410]
[-295.19183350 580.87579346]
[-294.14517212 565.91021729]
[-292.48498535 551.00024414]
[-290.21408081 536.17102051]
[-287.33624268 521.44750977]
[-283.85638428 506.85455322]
[-279.78033447 492.41674805]
[-275.11495972 478.15850830]
[-269.86816406 464.10379028]
[-264.04876709 450.27633667]
[-257.66659546 436.69946289]
[-250.73239136 423.39605713]
[-243.25787354 410.38854980]
[-235.25564575 397.69888306]
[-226.73916626 385.34844971]
[-217.72283936 373.35806274]
[-208.22183228 361.74795532]
[-198.25218201 350.53768921]
[-187.83070374 339.74618530]
[-176.97497559 329.39166260]
[-165.70327759 319.49151611]
[-154.03465271 310.06250000]
[-141.98873901 301.12048340]
[-129.58586121 292.68054199]
[-116.84695435 284.75692749]
[-103.79347992 277.36297607]
[-90.44744873 270.51116943]
[-76.83136749 264.21307373]
[-62.96820068 258.47930908]
[-48.88132095 253.31951904]
[-34.59447861 248.74241638]
[-20.13177299 244.75570679]
[-5.51758528 241.36614990]
[9.22343922 238.57942200]
[24.06644440 236.40023804]
[38.98640442 234.83227539]
[53.95815277 233.87817383]
[68.95645142 233.53955078]
[83.95600891 233.81695557]
[84.84882355 218.84355164]
[85.74163818 203.87014771]
[86.63446045 188.89674377]
[87.52727509 173.92333984]
[88.42008972 158.94993591]
[89.31290436 143.97653198]
[86.57310486 137.11247253]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[84.39334106 104.56194305]
[85.34600830 92.95446014]
[93.81699371 84.96173096]
[95.15522766 70.02154541]
[95.93654633 55.04191208]
[96.15987396 40.04357147]
[96.38320160 25.04523659]
[96.60652924 10.04689789]
[82.12872314 5.76955795]
[69.34241486 -2.25620985]
[59.19644165 -13.43483925]
[52.44369507 -26.93680191]
[49.58527756 -41.76016235]
[50.83330154 -56.80492783]
[56.09515381 -70.95468140]
[64.98037720 -83.15940857]
[76.82962036 -92.51345062]
[90.76358795 -98.32266235]
[105.74829865 -100.15596771]
[120.67178345 -97.87732697]
[134.42662048 -91.65582275]
[145.99211121 -81.95313263]
[154.51000977 -69.48926544]
[159.34823608 -55.18912506]
[160.14776611 -40.11386871]
[156.84927368 -25.38218498]
[149.69750977 -12.08726311]
[139.22320557 -1.21567333]
[126.20361328 6.42584038]
[111.60486603 10.27022552]
[111.38153839 25.26856422]
[111.15821075 40.26689911]
[110.93488312 55.26523972]
[123.35221863 46.85037613]
[137.71798706 51.16599274]
[143.44229126 65.03078461]
[136.30537415 78.22413635]
[121.56832123 81.02040100]
[110.09541321 71.35977936]
[108.75717926 86.29996490]
[116.20524597 101.33001709]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.28630829 144.86933899]
[103.39349365 159.84274292]
[102.50067902 174.81614685]
[101.60786438 189.78956604]
[100.71504974 204.76296997]
[99.82223511 219.73637390]
[98.92941284 234.70977783]
[113.85565948 236.21675110]
[128.70744324 238.33523560]
[143.45973206 241.06169128]
[158.08766174 244.39149475]
[172.56654358 248.31904602]
[186.87196350 252.83770752]
[200.97981262 257.93988037]
[214.86630249 263.61694336]
[228.50801086 269.85934448]
[241.88194275 276.65652466]
[254.96553040 283.99707031]
[267.73672485 291.86856079]
[280.17398071 300.25772095]
[292.25634766 309.15042114]
[303.96340942 318.53167725]
[315.27548218 328.38565063]
[326.17346191 338.69573975]
[336.63894653 349.44458008]
[346.65432739 360.61398315]
[356.20269775 372.18515015]
[365.26797485 384.13858032]
[373.83483887 396.45413208]
[381.88888550 409.11096191]
[389.41650391 422.08782959]
[396.40502930 435.36276245]
[402.84265137 448.91345215]
[408.71850586 462.71701050]
[414.02270508 476.75015259]
[418.74630737 490.98922729]
[422.88131714 505.41021729]
[426.42080688 519.98883057]
[429.35879517 534.70043945]
[431.69030762 549.52026367]
[433.41143799 564.42333984]
[434.51925659 579.38452148]
[435.01190186 594.37854004]
[434.88858032 609.38012695]
[434.14944458 624.36407471]
[432.79577637 639.30499268]
[430.82983398 654.17773438]
[428.25497437 668.95721436]
[425.07550049 683.61859131]
[421.29678345 698.13702393]
[416.92520142 712.48803711]
[411.96810913 726.64752197]
[406.43389893 740.59155273]
[400.33184814 754.29663086]
[393.67230225 767.73962402]
[386.46646118 780.89788818]
[378.72650146 793.74920654]
[370.46545410 806.27191162]
[361.69723511 818.44494629]
[352.43664551 830.24768066]
[342.69927979 841.66027832]
[332.50161743 852.66351318]
[321.86080933 863.23883057]
[310.79476929 873.36834717]
[299.32223511 883.03497314]
[287.46246338 892.22247314]
[275.23553467 900.91534424]
[262.66201782 909.09887695]
[249.76312256 916.75927734]
[236.56060791 923.88372803]
[223.07673645 930.46008301]
[209.33422852 936.47729492]
[195.35627747 941.92529297]
[181.16644287 946.79479980]
[166.78865051 951.07763672]
[152.24714661 954.76660156]
[137.56645203 957.85546875]
[122.77132416 960.33898926]
[107.88671112 962.21295166]
[92.93770599 963.47430420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[86 130]
[87 129]
[90 127]
[91 126]
[92 120]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
