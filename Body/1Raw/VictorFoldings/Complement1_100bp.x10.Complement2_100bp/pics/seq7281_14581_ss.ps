%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[93.18450928 463.73709106]
[89.32056427 449.22842407]
[87.02072144 434.39120483]
[86.31103516 419.39358521]
[87.19953918 404.40548706]
[89.67617035 389.59677124]
[93.71287537 375.13519287]
[99.26390076 361.18463135]
[106.26634979 347.90316772]
[114.64089203 335.44125366]
[124.29263306 323.94012451]
[135.11219788 313.53005981]
[146.97702026 304.32907104]
[159.75262451 296.44137573]
[153.27313232 282.91302490]
[146.79364014 269.38470459]
[140.31414795 255.85633850]
[133.83464050 242.32800293]
[127.35514832 228.79965210]
[125.79395294 243.71818542]
[118.37049103 256.75247192]
[106.33576965 265.70596313]
[91.71783447 269.06988525]
[76.98007202 266.27734375]
[64.60604858 257.79891968]
[56.68100739 245.06340027]
[54.54045868 230.21691895]
[58.54512405 215.76138306]
[68.02014160 204.13278198]
[81.36880493 197.29077148]
[96.34163666 196.38833618]
[110.41544342 201.57756042]
[121.21947479 211.98532104]
[110.54154205 201.60115051]
[114.57647705 186.30311584]
[110.82017517 171.78105164]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[84.64604950 75.93445587]
[78.36869049 62.31114197]
[72.09133148 48.68782425]
[65.81397247 35.06451035]
[59.53660965 21.44119263]
[53.25925064 7.81787729]
[46.98188782 -5.80543900]
[40.70452881 -19.42875481]
[39.60623932 -4.46901703]
[33.52083588 9.24112129]
[23.16322899 20.09100533]
[9.75022125 26.80600357]
[-5.14244366 28.59724426]
[-19.76518822 25.25429153]
[-32.40015030 17.16987610]
[-41.56298065 5.29374504]
[-46.17724609 -8.97890568]
[-45.70086288 -23.97133827]
[-40.18980026 -37.92226028]
[-30.29148865 -49.19272614]
[-17.16877174 -56.45869446]
[-2.36329508 -58.86656952]
[12.38560963 -56.13347244]
[25.34525490 -48.58049011]
[34.99394226 -37.09357452]
[32.10867310 -51.81346893]
[29.22339821 -66.53335571]
[26.33812523 -81.25325012]
[23.45285416 -95.97314453]
[8.48958874 -94.72258759]
[-6.52043056 -95.12573242]
[-21.39499474 -97.17768860]
[-35.95354080 -100.85354614]
[-50.01934433 -106.10867310]
[-63.42165375 -112.87929535]
[-75.99777985 -121.08320618]
[-87.59506226 -130.62083435]
[-98.07271576 -141.37638855]
[-107.30355835 -153.21929932]
[-115.17552948 -166.00582886]
[-121.59307861 -179.58074951]
[-126.47828674 -193.77926636]
[-129.77186584 -208.42903137]
[-131.43383789 -223.35218811]
[-131.44401550 -238.36763000]
[-129.80229187 -253.29302979]
[-126.52857208 -267.94723511]
[-121.66261292 -282.15237427]
[-115.26347351 -295.73599243]
[-107.40884399 -308.53317261]
[-98.19406891 -320.38858032]
[-87.73101044 -331.15832520]
[-76.14666748 -340.71166992]
[-63.58167267 -348.93264771]
[-50.18855667 -355.72140503]
[-36.12989044 -360.99560547]
[-21.57634163 -364.69119263]
[-6.70457315 -366.76333618]
[8.30488491 -367.18682861]
[23.26983261 -365.95654297]
[38.00860596 -363.08746338]
[52.34229279 -358.61434937]
[66.09689331 -352.59155273]
[79.10544586 -345.09216309]
[91.21002960 -336.20721436]
[102.26371002 -326.04458618]
[112.13230133 -314.72760010]
[120.69601440 -302.39364624]
[127.85089111 -289.19247437]
[133.51007080 -275.28433228]
[137.60487366 -260.83801270]
[140.08557129 -246.02893066]
[140.92207336 -231.03681946]
[140.10420227 -216.04367065]
[137.64189148 -201.23150635]
[133.56504822 -186.78012085]
[127.92314911 -172.86494446]
[120.78468323 -159.65489197]
[112.23629761 -147.31033325]
[102.38177490 -135.98109436]
[91.34072876 -125.80472565]
[79.24719238 -116.90474701]
[66.24797058 -109.38919830]
[52.50086212 -103.34931946]
[38.17274475 -98.85841370]
[41.05801773 -84.13852692]
[43.94329071 -69.41863251]
[46.82856369 -54.69874191]
[49.71383667 -39.97884750]
[54.32784271 -25.70611572]
[60.60520554 -12.08279991]
[66.88256836 1.54051661]
[73.15992737 15.16383266]
[79.43728638 28.78714943]
[85.71464539 42.41046524]
[91.99201202 56.03378296]
[98.26937103 69.65709686]
[100.37674713 54.80587006]
[108.64705658 42.29179764]
[121.48342896 34.53115082]
[136.40734863 33.02239227]
[150.53726196 38.05683517]
[161.14489746 48.66240692]
[166.18208313 62.79134369]
[164.67620850 77.71556091]
[156.91804504 90.55343628]
[144.40557861 98.82617188]
[129.55476379 100.93642426]
[115.23305511 96.47675323]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[125.34223175 168.02474976]
[129.09854126 182.54681396]
[140.04513550 193.96969604]
[135.74153137 208.22901917]
[140.88349915 222.32015991]
[147.36299133 235.84849548]
[153.84248352 249.37684631]
[160.32199097 262.90518188]
[166.80148315 276.43353271]
[173.28097534 289.96188354]
[187.43473816 284.95156860]
[202.04087830 281.47412109]
[216.93391418 279.56893921]
[231.94506836 279.25759888]
[246.90429688 280.54364014]
[261.64205933 283.41247559]
[275.99139404 287.83163452]
[289.78967285 293.75100708]
[302.88061523 301.10354614]
[315.11584473 309.80593872]
[326.35671997 319.75955200]
[336.47589111 330.85162354]
[345.35870361 342.95651245]
[352.90451050 355.93698120]
[359.02777100 369.64602661]
[363.65917969 383.92825317]
[366.74618530 398.62188721]
[368.25384521 413.56039429]
[368.16506958 428.57452393]
[366.48089600 443.49417114]
[363.22033691 458.15023804]
[358.42041016 472.37673950]
[352.13546753 486.01239014]
[344.43670654 498.90274048]
[335.41137695 510.90173340]
[325.16177368 521.87341309]
[313.80398560 531.69342041]
[301.46670532 540.25054932]
[288.28976440 547.44775391]
[274.42242432 553.20355225]
[260.02185059 557.45275879]
[245.25120544 560.14709473]
[230.27781677 561.25622559]
[215.27139282 560.76739502]
[200.40191650 558.68621826]
[185.83792114 555.03631592]
[171.74440002 549.85900879]
[158.28103638 543.21295166]
[145.60040283 535.17346191]
[133.84617615 525.83160400]
[123.15151978 515.29327393]
[113.63763428 503.67782593]
[105.41231537 491.11691284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[33 161]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[42 152]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
