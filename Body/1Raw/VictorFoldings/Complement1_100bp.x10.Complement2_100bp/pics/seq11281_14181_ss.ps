%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[40.85397339 736.63293457]
[28.01053619 744.40405273]
[14.48655033 750.91918945]
[0.40449637 756.11926270]
[-14.10809326 759.95715332]
[-28.91978645 762.39813232]
[-43.89644623 763.42010498]
[-58.90243530 763.01385498]
[-73.80184937 761.18298340]
[-88.45977020 757.94409180]
[-102.74343109 753.32659912]
[-116.52348328 747.37219238]
[-129.67514038 740.13482666]
[-142.07926941 731.68011475]
[-153.62355042 722.08459473]
[-164.20344543 711.43518066]
[-173.72311401 699.82824707]
[-182.09635925 687.36895752]
[-189.24734497 674.17016602]
[-195.11131287 660.35137939]
[-199.63516235 646.03778076]
[-202.77790833 631.35894775]
[-204.51109314 616.44787598]
[-204.81901550 601.43951416]
[-203.69891357 586.46990967]
[-201.16090393 571.67449951]
[-197.22796631 557.18737793]
[-191.93574524 543.13970947]
[-185.33216858 529.65869141]
[-177.47700500 516.86645508]
[-168.44143677 504.87884521]
[-158.30726624 493.80438232]
[-147.16627502 483.74340820]
[-135.11936951 474.78704834]
[-122.27565002 467.01635742]
[-108.75142670 460.50173950]
[-94.66918945 455.30221558]
[-80.15645599 451.46484375]
[-65.34467316 449.02438354]
[-50.36798096 448.00292969]
[-35.36200714 448.40975952]
[-20.46265411 450.24114990]
[-5.80485630 453.48056030]
[-1.19084704 439.20782471]
[3.42316222 424.93508911]
[8.03717136 410.66235352]
[12.22418308 396.25857544]
[7.92057800 381.99926758]
[18.86718750 370.57638550]
[22.62348747 356.05432129]
[18.31988144 341.79498291]
[29.26649094 330.37210083]
[21.23812294 320.29367065]
[20.46897697 307.23648071]
[27.46352768 295.95431519]
[39.85866928 290.68411255]
[43.83076477 276.21960449]
[47.80286407 261.75506592]
[51.77495956 247.29055786]
[47.68413162 232.96873474]
[58.79959488 221.71009827]
[62.77169418 207.24557495]
[66.74378967 192.78105164]
[70.71588135 178.31652832]
[74.68798065 163.85200500]
[78.66007996 149.38748169]
[82.63217163 134.92295837]
[86.60427094 120.45843506]
[90.57636261 105.99390411]
[94.44067383 91.50021362]
[82.84031677 101.00977325]
[68.05570221 103.54258728]
[53.95148849 98.43659210]
[44.21448898 87.02647400]
[41.38993073 72.29480743]
[46.21614075 58.09242630]
[57.43156815 48.13179016]
[72.10451508 45.01659012]
[86.39952087 49.56113052]
[96.57990265 60.57747650]
[99.98455048 75.18509674]
[105.85351562 61.38092041]
[111.72247314 47.57674408]
[110.00151062 31.84941673]
[122.10170746 23.16411018]
[127.97067261 9.35993195]
[126.24971008 -6.36739635]
[138.34989929 -15.05270290]
[144.21887207 -28.85688019]
[149.98489380 -42.70436478]
[155.64768982 -56.59439087]
[161.31047058 -70.48442078]
[166.97325134 -84.37444305]
[164.04515076 -102.55431366]
[178.31707764 -112.76601410]
[183.77243042 -126.73881531]
[181.58398438 -142.40792847]
[193.42021179 -151.44966125]
[198.87557983 -165.42245483]
[204.33093262 -179.39524841]
[191.44795227 -187.15003967]
[180.06094360 -196.97064209]
[170.49755859 -208.57450867]
[163.03294373 -221.62776184]
[157.88186646 -235.75485229]
[155.19255066 -250.54928589]
[155.04235840 -265.58541870]
[157.43560791 -280.43063354]
[162.30343628 -294.65780640]
[169.50581360 -307.85757446]
[178.83549500 -319.65014648]
[190.02403259 -329.69625854]
[202.74954224 -337.70687866]
[216.64585876 -343.45144653]
[231.31317139 -346.76477051]
[246.32946777 -347.55145264]
[261.26269531 -345.78887939]
[275.68319702 -341.52780151]
[289.17608643 -334.89074707]
[301.35311890 -326.06872559]
[311.86392212 -315.31558228]
[320.40612793 -302.94064331]
[326.73394775 -289.30001831]
[330.66528320 -274.78613281]
[332.08706665 -259.81661987]
[330.95834351 -244.82214355]
[327.31161499 -230.23416138]
[321.25183105 -216.47236633]
[312.95327759 -203.93273926]
[302.65478516 -192.97605896]
[290.65264893 -183.91755676]
[277.29214478 -177.01788330]
[262.95773315 -172.47555542]
[248.06184387 -170.42124939]
[233.03303528 -170.91409302]
[218.30372620 -173.93989563]
[212.84837341 -159.96710205]
[207.39302063 -145.99429321]
[209.97167969 -131.32461548]
[197.74523926 -121.28345490]
[192.28987122 -107.31066132]
[196.85803223 -96.10983276]
[192.42742920 -84.42421722]
[180.86328125 -78.71166229]
[175.20050049 -64.82163239]
[169.53771973 -50.93160629]
[163.87492371 -37.04158020]
[164.26066589 -29.66099548]
[158.02304077 -22.98791885]
[152.15408325 -9.18374252]
[154.29483032 5.55621958]
[141.77484131 15.22889328]
[135.90588379 29.03306961]
[138.04663086 43.77303314]
[125.52664948 53.44570541]
[119.65769196 67.24988556]
[113.78872681 81.05406189]
[108.96273041 95.25651550]
[110.15348816 103.22863007]
[105.04089355 109.96600342]
[101.06879425 124.43052673]
[97.09669495 138.89505005]
[93.12460327 153.35957336]
[89.15250397 167.82409668]
[85.18041229 182.28862000]
[81.20831299 196.75314331]
[77.23621368 211.21766663]
[73.26412201 225.68218994]
[77.07083893 241.03860474]
[66.23948669 251.26264954]
[62.26738739 265.72717285]
[58.29529190 280.19171143]
[54.32319260 294.65621948]
[63.25270081 309.69894409]
[58.63107681 326.22030640]
[43.78855133 334.12841797]
[47.82347870 349.42645264]
[37.14554596 359.81060791]
[33.38924408 374.33267212]
[37.42417526 389.63070679]
[26.74624252 400.01489258]
[28.05469513 404.15515137]
[27.98463821 408.09973145]
[26.76686859 411.43927002]
[24.74141502 413.88140869]
[22.30990410 415.27636719]
[17.69589615 429.54910278]
[13.08188629 443.82183838]
[8.46787739 458.09457397]
[22.24814796 464.04846191]
[35.40005875 471.28530884]
[47.80450439 479.73956299]
[59.34914017 489.33468628]
[69.92941284 499.98376465]
[79.44950867 511.59033203]
[87.82321167 524.04931641]
[94.97467804 537.24780273]
[100.83914948 551.06640625]
[105.36351013 565.37982178]
[108.50679016 580.05853271]
[110.24052429 594.96960449]
[110.54900360 609.97790527]
[109.42943573 624.94757080]
[106.89196014 639.74304199]
[102.95956421 654.23034668]
[97.66786194 668.27819824]
[91.06475830 681.75946045]
[83.21007538 694.55194092]
[74.17494202 706.53991699]
[64.04117584 717.61474609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 189]
[44 188]
[45 187]
[46 186]
[47 181]
[49 179]
[50 178]
[52 176]
[56 173]
[57 172]
[58 171]
[59 170]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 162]
[68 161]
[69 160]
[70 158]
[81 157]
[82 156]
[83 155]
[85 153]
[86 152]
[88 150]
[89 149]
[90 147]
[91 146]
[92 145]
[93 144]
[95 141]
[96 140]
[98 138]
[99 137]
[100 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
