%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[209.62194824 506.12304688]
[197.70108032 516.49938965]
[181.94056702 515.32391357]
[171.69084167 503.29400635]
[173.03286743 487.54681396]
[185.17045593 477.42483521]
[186.28611755 462.46636963]
[187.40176392 447.50793457]
[188.51741028 432.54946899]
[189.63305664 417.59103394]
[190.74870300 402.63256836]
[190.07891846 387.64752197]
[187.63319397 372.84826660]
[185.18746948 358.04898071]
[182.08335876 343.37368774]
[178.32705688 328.85162354]
[174.57075500 314.32955933]
[163.89282227 303.94540405]
[167.92774963 288.64736938]
[164.17144775 274.12530518]
[153.49351501 263.74111938]
[157.52844238 248.44309998]
[152.49153137 234.31407166]
[146.21417236 220.69075012]
[139.93681335 207.06742859]
[133.65945435 193.44412231]
[127.38208771 179.82080078]
[116.14638519 175.33911133]
[110.80511475 164.04067993]
[114.71475220 151.74931335]
[108.64091492 138.03404236]
[102.56708527 124.31877899]
[96.49324799 110.60351562]
[90.31748199 96.93384552]
[84.04012299 83.31052399]
[77.76275635 69.68721008]
[71.48539734 56.06389618]
[65.20803833 42.44057846]
[58.93067932 28.81726265]
[58.50564194 43.81124115]
[55.20298767 58.44313812]
[49.14618683 72.16593933]
[40.56167603 84.46659088]
[29.77039719 94.88524628]
[17.17578697 103.03237915]
[3.24870491 108.60340881]
[-11.49017525 111.39006042]
[-26.48982811 111.28814697]
[-41.18948364 108.30148315]
[-55.03958130 102.54173279]
[-67.52232361 94.22421265]
[-78.17104340 83.65989685]
[-86.58762360 71.24372864]
[-92.45739746 57.43989944]
[-95.56092834 42.76447296]
[-95.78218842 27.76610565]
[-93.11290741 13.00551891]
[-87.65287018 -0.96545112]
[-79.60620880 -13.62448978]
[-69.27375793 -24.49832916]
[-57.04179382 -33.18044281]
[-43.36762619 -39.34624481]
[-28.76246834 -42.76522064]
[-13.77234745 -43.30954742]
[1.04231942 -40.95888138]
[15.12767601 -35.80109787]
[27.95713043 -28.02902794]
[39.05104446 -17.93323326]
[47.99466705 -5.89115477]
[54.45154572 7.64127207]
[54.67487335 -7.35706520]
[54.89820099 -22.35540199]
[55.12152863 -37.35374069]
[44.39393997 -48.64783478]
[44.83408356 -63.85509872]
[55.66738510 -74.01261902]
[55.89071274 -89.01095581]
[56.11404037 -104.00929260]
[46.07199097 -92.86670685]
[31.42271614 -89.64199829]
[17.63003159 -95.53791809]
[9.83826637 -108.35542297]
[10.95355988 -123.31390381]
[20.55993271 -134.83421326]
[35.07444763 -138.61956787]
[49.08354568 -133.25811768]
[57.36249924 -120.74842834]
[59.36651230 -135.61395264]
[51.97909164 -152.48130798]
[63.23907089 -165.94161987]
[65.02153778 -180.83532715]
[66.69307709 -195.74191284]
[68.25360107 -210.66050720]
[69.81412506 -225.57911682]
[60.13692093 -237.78524780]
[61.93203735 -252.89259338]
[73.62834930 -262.04312134]
[75.18887329 -276.96170044]
[76.74939728 -291.88031006]
[78.30992126 -306.79891968]
[64.56868744 -313.15954590]
[53.63900757 -323.63906860]
[46.70644760 -337.10079956]
[44.52299881 -352.08450317]
[47.32550812 -366.96484375]
[54.80997467 -380.12774658]
[66.16455078 -390.14535522]
[80.15756226 -395.93103027]
[95.27115631 -396.85723877]
[109.86593628 -392.82348633]
[122.35874939 -384.26730347]
[131.39448547 -372.11682129]
[135.99301147 -357.69000244]
[135.65550232 -342.55181885]
[130.41857910 -328.34429932]
[120.85030365 -316.60861206]
[107.98857117 -308.61770630]
[93.22852325 -305.23840332]
[91.66799927 -290.31979370]
[90.10747528 -275.40118408]
[88.54695129 -260.48257446]
[98.09646606 -249.10971069]
[96.72639465 -233.95788574]
[84.73272705 -224.01860046]
[83.17220306 -209.09999084]
[81.61168671 -194.18138123]
[84.04225922 -187.20182800]
[79.91525269 -179.05287170]
[78.13278961 -164.15914917]
[85.36029816 -154.45916748]
[83.99718475 -142.03637695]
[74.23204041 -133.60993958]
[72.22802734 -118.74441528]
[71.11238098 -103.78596497]
[70.88905334 -88.78762817]
[70.66572571 -73.78929138]
[81.19179535 -63.31372833]
[81.17897034 -48.10010147]
[70.11986542 -37.13041306]
[69.89653778 -22.13207436]
[69.67321014 -7.13373756]
[69.44988251 7.86459970]
[72.55399323 22.53990173]
[78.83135223 36.16321945]
[85.10871887 49.78653336]
[91.38607788 63.40985107]
[97.66343689 77.03316498]
[103.94079590 90.65648651]
[109.90612793 96.07749176]
[110.20851898 104.52967834]
[116.28234863 118.24494934]
[122.35618591 131.96022034]
[128.43002319 145.67547607]
[143.55374146 156.18046570]
[141.00540161 173.54344177]
[147.28276062 187.16674805]
[153.56011963 200.79006958]
[159.83747864 214.41339111]
[166.11485291 228.03669739]
[168.22222900 213.18547058]
[176.49253845 200.67140198]
[189.32890320 192.91075134]
[204.25283813 191.40199280]
[218.38273621 196.43644714]
[228.99037170 207.04202271]
[234.02755737 221.17094421]
[232.52168274 236.09516907]
[224.76351929 248.93304443]
[212.25105286 257.20578003]
[197.40023804 259.31604004]
[183.07852173 254.85635376]
[172.05050659 244.68679810]
[182.99711609 256.10968018]
[178.69351196 270.36898804]
[182.44981384 284.89105225]
[193.39642334 296.31393433]
[189.09281921 310.57327271]
[192.84912109 325.09533691]
[196.60540771 339.61740112]
[205.13134766 327.27606201]
[219.86131287 324.44262695]
[232.35729980 332.74023438]
[235.46105957 347.41558838]
[227.39460754 360.06204224]
[212.77877808 363.43508911]
[199.98674011 355.60327148]
[202.43246460 370.40252686]
[204.87818909 385.20181274]
[209.89871216 371.06692505]
[219.39739990 359.45767212]
[232.25837708 351.73788452]
[246.97073364 348.81445312]
[261.80609131 351.03082275]
[275.02160645 358.12664795]
[285.06469727 369.26828003]
[290.75555420 383.14682007]
[291.42559814 398.13183594]
[286.99615479 412.46292114]
[277.98751831 424.45645142]
[265.45806885 432.70346069]
[250.87974548 436.23504639]
[235.96517944 434.63638306]
[222.46652222 428.09524536]
[211.96960449 417.38009644]
[205.70715332 403.74822998]
[204.59150696 418.70666504]
[203.47586060 433.66513062]
[202.36021423 448.62356567]
[201.24456787 463.58203125]
[200.12892151 478.54049683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 188]
[13 187]
[14 186]
[15 179]
[16 178]
[17 177]
[19 175]
[20 174]
[22 172]
[23 159]
[24 158]
[25 157]
[26 156]
[27 155]
[30 153]
[31 152]
[32 151]
[33 150]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[39 143]
[70 142]
[71 141]
[72 140]
[73 139]
[76 136]
[77 135]
[78 134]
[87 133]
[88 132]
[90 129]
[91 128]
[92 126]
[93 125]
[94 124]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
