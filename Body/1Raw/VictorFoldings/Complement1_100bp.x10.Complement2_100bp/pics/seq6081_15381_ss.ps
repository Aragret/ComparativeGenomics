%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[73.22473145 731.42602539]
[59.52099228 725.29968262]
[46.44097900 717.93499756]
[34.09629822 709.39489746]
[22.59226608 699.75219727]
[12.02703762 689.08917236]
[2.49075103 677.49676514]
[-5.93523073 665.07385254]
[-13.17901897 651.92657471]
[-19.17881012 638.16693115]
[-23.88341713 623.91241455]
[-27.25269890 609.28460693]
[-29.25790977 594.40832520]
[-29.88194275 579.41052246]
[-29.11947060 564.41906738]
[-26.97700310 549.56188965]
[-23.47281647 534.96582031]
[-18.63680840 520.75537109]
[-12.51023960 507.05172729]
[-5.14538002 493.97183228]
[3.39493442 481.62728882]
[13.03783894 470.12341309]
[23.70106316 459.55838013]
[35.29362869 450.02227783]
[47.71662903 441.59649658]
[60.86407471 434.35293579]
[74.62379456 428.35336304]
[88.87839508 423.64901733]
[103.50624847 420.27996826]
[101.50223541 405.41442871]
[99.49822235 390.54891968]
[97.49420929 375.68338013]
[95.49019623 360.81784058]
[86.06390381 353.23684692]
[84.27266693 340.86853027]
[91.61652374 330.26519775]
[89.83406067 315.37149048]
[82.90815735 328.67681885]
[70.64519501 337.31509399]
[55.78475952 339.35650635]
[41.64670181 334.34500122]
[31.38949776 323.40014648]
[27.30463791 308.96707153]
[30.30468941 294.27014160]
[39.71943283 282.59268188]
[53.44559097 276.54351807]
[68.41670227 277.47399902]
[81.28818512 285.17626953]
[89.18452454 297.92962646]
[89.85430908 282.94458008]
[90.52409363 267.95956421]
[91.19387817 252.97451782]
[91.41720581 237.97618103]
[91.19387817 222.97782898]
[90.97055054 207.97949219]
[90.74722290 192.98115540]
[90.52389526 177.98281860]
[88.26210785 175.27789307]
[87.19810486 171.34306335]
[87.89567566 166.75320435]
[90.64054871 162.31330872]
[91.08715820 147.31996155]
[91.53376007 132.32659912]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[93.47288513 67.22679138]
[93.91949463 52.23343658]
[94.36609650 37.24008942]
[81.28827667 33.83771133]
[69.21785736 27.77699471]
[58.68806839 19.32877159]
[50.16342545 8.86927414]
[44.01924515 -3.13662100]
[40.52512360 -16.15604973]
[39.83310699 -29.61181068]
[41.97107315 -42.90795898]
[46.84163284 -55.45619965]
[54.22654343 -66.70191193]
[63.79650116 -76.14866638]
[75.12582397 -83.38014984]
[87.71137238 -88.07847595]
[100.99491119 -90.03820038]
[102.11055756 -104.99665833]
[103.22620392 -119.95510864]
[104.34185028 -134.91355896]
[97.65239716 -149.25099182]
[106.31487274 -161.36753845]
[106.98465729 -176.35256958]
[107.20798492 -191.35090637]
[99.67700958 -205.26475525]
[107.60294342 -217.87541199]
[107.82627106 -232.87374878]
[104.82497406 -241.50103760]
[108.16622925 -248.09329224]
[108.61283875 -263.08663940]
[109.05944824 -278.07998657]
[109.50605011 -293.07333374]
[95.62732697 -299.27410889]
[85.18162537 -310.31747437]
[79.76184082 -324.51937866]
[80.19444275 -339.71417236]
[86.41345978 -353.58471680]
[97.47055054 -364.01586914]
[111.67958069 -369.41699219]
[126.87377930 -368.96438599]
[140.73612976 -362.72711182]
[151.15274048 -351.65631104]
[156.53515625 -337.44021606]
[156.06257629 -322.24661255]
[149.80708313 -308.39248657]
[138.72259521 -297.99041748]
[124.49939728 -292.62673950]
[124.05279541 -277.63339233]
[123.60618591 -262.64004517]
[123.15958405 -247.64668274]
[122.82460785 -232.65042114]
[122.60128021 -217.65208435]
[130.14822388 -204.81101990]
[122.20632172 -191.12757874]
[121.98299408 -176.12924194]
[123.83641815 -174.02615356]
[124.96846008 -171.06219482]
[125.04704285 -167.50842285]
[123.84427643 -163.75105286]
[121.27333069 -160.25187683]
[128.04258728 -146.98439026]
[119.30030823 -133.79791260]
[118.18466187 -118.83946228]
[117.06900787 -103.88100433]
[115.95336151 -88.92255402]
[131.67002869 -83.71450043]
[145.52651978 -74.63274384]
[156.58712769 -62.28418350]
[164.10333252 -47.49652863]
[167.56439209 -31.26283455]
[166.73210144 -14.67479038]
[161.65716553 1.15067315]
[152.67613220 15.14660168]
[140.38911438 26.36794853]
[125.61962891 34.05538940]
[109.35945129 37.68669510]
[108.91284180 52.68004227]
[108.46623993 67.67339325]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[106.52711487 132.77320862]
[106.08050537 147.76655579]
[105.63390350 162.75991821]
[105.52223206 177.75949097]
[105.74555969 192.75782776]
[105.96888733 207.75616455]
[106.19221497 222.75450134]
[106.41554260 237.75285339]
[108.77365875 241.39883423]
[109.75064850 245.22114563]
[109.46068573 248.76393127]
[108.15423584 251.65525818]
[106.17891693 253.64430237]
[105.50913239 268.62933350]
[104.83934784 283.61437988]
[104.16956329 298.59942627]
[104.72777557 313.58901978]
[106.51023865 328.48272705]
[117.88619995 342.96270752]
[110.35572815 358.81384277]
[112.35974121 373.67938232]
[114.36375427 388.54489136]
[116.36776733 403.41043091]
[118.37178040 418.27593994]
[133.36958313 417.65118408]
[148.36106873 418.41290283]
[163.21830750 420.55462646]
[177.81455994 424.05807495]
[192.02528381 428.89337158]
[205.72921753 435.01925659]
[218.80947876 442.38345337]
[231.15444946 450.92315674]
[242.65879822 460.56549072]
[253.22438049 471.22817993]
[262.76104736 482.82028198]
[271.18743896 495.24285889]
[278.43167114 508.38995361]
[284.43191528 522.14935303]
[289.13702393 536.40374756]
[292.50677490 551.03143311]
[294.51248169 565.90765381]
[295.13702393 580.90545654]
[294.37506104 595.89691162]
[292.23306274 610.75415039]
[288.72937012 625.35028076]
[283.89382935 639.56097412]
[277.76773071 653.26477051]
[270.40328979 666.34490967]
[261.86340332 678.68975830]
[252.22087097 690.19396973]
[241.55801392 700.75933838]
[229.96575928 710.29583740]
[217.54304504 718.72204590]
[204.39582825 725.96600342]
[190.63630676 731.96606445]
[176.38186646 736.67089844]
[161.75411987 740.04040527]
[146.87788391 742.04589844]
[131.88005066 742.67016602]
[116.88859558 741.90795898]
[102.03142548 739.76568604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[36 167]
[37 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[61 152]
[62 151]
[63 150]
[64 149]
[67 146]
[68 145]
[69 144]
[70 143]
[84 132]
[85 131]
[86 130]
[87 129]
[89 127]
[90 122]
[91 121]
[93 119]
[94 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
