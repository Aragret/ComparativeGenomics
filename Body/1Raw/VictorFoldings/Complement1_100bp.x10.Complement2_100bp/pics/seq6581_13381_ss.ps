%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[98.63032532 886.31549072]
[83.71952820 884.65478516]
[68.90727234 882.27008057]
[54.22869492 879.16705322]
[39.71860123 875.35302734]
[25.41140938 870.83703613]
[11.34105873 865.62988281]
[-2.45907855 859.74377441]
[-15.95627117 853.19281006]
[-29.11850357 845.99243164]
[-41.91455841 838.15979004]
[-54.31408310 829.71337891]
[-66.28766632 820.67333984]
[-77.80690765 811.06097412]
[-88.84449005 800.89923096]
[-99.37422943 790.21209717]
[-109.37114716 779.02502441]
[-118.81153870 767.36444092]
[-127.67301178 755.25811768]
[-135.93453979 742.73468018]
[-143.57653809 729.82379150]
[-150.58085632 716.55621338]
[-156.93092346 702.96331787]
[-162.61163330 689.07739258]
[-167.60954285 674.93139648]
[-171.91279602 660.55877686]
[-175.51116943 645.99371338]
[-178.39613342 631.27069092]
[-180.56085205 616.42468262]
[-182.00018311 601.49090576]
[-182.71070862 586.50476074]
[-182.69075012 571.50177002]
[-181.94036865 556.51757812]
[-180.46131897 541.58764648]
[-178.25712585 526.74749756]
[-175.33302307 512.03222656]
[-171.69592285 497.47677612]
[-167.35446167 483.11566162]
[-162.31895447 468.98297119]
[-156.60131836 455.11218262]
[-150.21513367 441.53625488]
[-143.17553711 428.28732300]
[-135.49923706 415.39688110]
[-127.20442200 402.89544678]
[-118.31078339 390.81268311]
[-108.83941650 379.17727661]
[-98.81277466 368.01681519]
[-88.25465393 357.35772705]
[-77.19008636 347.22537231]
[-65.64531708 337.64370728]
[-53.64772797 328.63552856]
[-41.22578430 320.22213745]
[-28.40894318 312.42355347]
[-15.22760582 305.25820923]
[-1.71303773 298.74313354]
[12.10270596 292.89379883]
[26.18685722 287.72406006]
[40.50600815 283.24615479]
[55.02619553 279.47073364]
[69.71297455 276.40673828]
[84.53152466 274.06146240]
[99.44667816 272.44042969]
[98.55386353 257.46701050]
[97.66104889 242.49360657]
[96.76823425 227.52020264]
[95.87541199 212.54679871]
[94.98259735 197.57339478]
[94.08978271 182.59999084]
[91.70946503 179.99874878]
[90.47082520 176.11534119]
[90.96275330 171.49893188]
[93.50663757 166.94088745]
[93.28330994 151.94255066]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[92.50000000 46.72462845]
[89.37059021 38.14298248]
[92.61332703 31.50171471]
[92.83665466 16.50337791]
[93.05998230 1.50503993]
[79.48043823 -5.37662601]
[70.27291870 -17.42272568]
[67.22112274 -32.21146393]
[70.87789917 -46.79875183]
[80.46599579 -58.30430603]
[94.04251862 -64.48035431]
[94.26584625 -79.47869110]
[94.48917389 -94.47702789]
[94.71250153 -109.47536469]
[94.93582916 -124.47370148]
[80.45802307 -128.75103760]
[67.67171478 -136.77680969]
[57.52573776 -147.95544434]
[50.77299118 -161.45739746]
[47.91457367 -176.28076172]
[49.16259766 -191.32553101]
[54.42445374 -205.47528076]
[63.30967331 -217.68000793]
[75.15891266 -227.03405762]
[89.09288788 -232.84326172]
[104.07759857 -234.67657471]
[119.00108337 -232.39793396]
[132.75592041 -226.17642212]
[144.32139587 -216.47373962]
[152.83930969 -204.00987244]
[157.67753601 -189.70973206]
[158.47706604 -174.63447571]
[155.17857361 -159.90278625]
[148.02680969 -146.60786438]
[137.55250549 -135.73628235]
[124.53290558 -128.09475708]
[109.93416595 -124.25037384]
[109.71083832 -109.25203705]
[109.48751068 -94.25370026]
[109.26418304 -79.25536346]
[109.04085541 -64.25702667]
[122.42747498 -57.67949295]
[131.66876221 -45.89356613]
[134.88960266 -31.20386696]
[131.39883423 -16.51255035]
[121.83673859 -4.74593353]
[108.05831909 1.72836757]
[107.83499146 16.72670555]
[107.61166382 31.72504234]
[107.50000000 46.72462845]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[108.28164673 151.71922302]
[108.50497437 166.71755981]
[109.06318665 181.70716858]
[109.95600128 196.68057251]
[110.84882355 211.65397644]
[111.74163818 226.62738037]
[112.63445282 241.60079956]
[113.52726746 256.57418823]
[114.42008209 271.54760742]
[129.42219543 271.38476562]
[144.41442871 271.95254517]
[159.36125183 273.24957275]
[174.22718811 275.27279663]
[188.97698975 278.01739502]
[203.57568359 281.47689819]
[217.98861694 285.64303589]
[232.18161011 290.50601196]
[246.12101746 296.05419922]
[259.77377319 302.27450562]
[273.10745239 309.15216064]
[286.09048462 316.67083740]
[298.69204712 324.81271362]
[310.88226318 333.55850220]
[322.63220215 342.88739014]
[333.91403198 352.77731323]
[344.70092773 363.20480347]
[354.96734619 374.14508057]
[364.68893433 385.57226562]
[373.84265137 397.45919800]
[382.40673828 409.77770996]
[390.36093140 422.49859619]
[397.68634033 435.59164429]
[404.36557007 449.02584839]
[410.38281250 462.76928711]
[415.72378540 476.78939819]
[420.37579346 491.05294800]
[424.32785034 505.52606201]
[427.57055664 520.17443848]
[430.09622192 534.96325684]
[431.89883423 549.85760498]
[432.97415161 564.82196045]
[433.31964111 579.82098389]
[432.93441772 594.81903076]
[431.81945801 609.78051758]
[429.97735596 624.66998291]
[427.41250610 639.45214844]
[424.13101196 654.09185791]
[420.14062500 668.55444336]
[415.45080566 682.80560303]
[410.07269287 696.81152344]
[404.01907349 710.53894043]
[397.30426025 723.95538330]
[389.94418335 737.02899170]
[381.95632935 749.72875977]
[373.35958862 762.02453613]
[364.17443848 773.88714600]
[354.42260742 785.28851318]
[344.12719727 796.20159912]
[333.31271362 806.60046387]
[322.00473022 816.46044922]
[310.23010254 825.75817871]
[298.01675415 834.47161865]
[285.39367676 842.58007812]
[272.39074707 850.06433105]
[259.03887939 856.90661621]
[245.36970520 863.09069824]
[231.41564941 868.60198975]
[217.20980835 873.42730713]
[202.78587341 877.55523682]
[188.17808533 880.97601318]
[173.42105103 883.68151855]
[158.54980469 885.66534424]
[143.59959412 886.92279053]
[128.60591125 887.45080566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[78 133]
[79 132]
[80 131]
[81 130]
[83 129]
[84 128]
[85 127]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
