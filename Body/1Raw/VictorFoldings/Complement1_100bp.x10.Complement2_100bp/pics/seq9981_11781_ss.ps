%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[82.87621307 613.95623779]
[68.02403259 616.15734863]
[53.02202988 616.76727295]
[38.04018784 615.77905273]
[23.24826622 613.20397949]
[8.81386566 609.07110596]
[-5.09945869 603.42742920]
[-18.33405876 596.33673096]
[-30.73997879 587.87951660]
[-42.17664719 578.15148926]
[-52.51447678 567.26287842]
[-61.63633728 555.33709717]
[-69.43886566 542.50927734]
[-75.83365631 528.92480469]
[-80.74824524 514.73754883]
[-84.12695312 500.10821533]
[-85.93150330 485.20266724]
[-86.14143372 470.18972778]
[-84.75437164 455.23953247]
[-81.78603363 440.52148438]
[-77.27005768 426.20233154]
[-71.25760651 412.44433594]
[-63.81681061 399.40338135]
[-55.03197479 387.22723389]
[-45.00264740 376.05383301]
[-33.84245682 366.00982666]
[-21.67786407 357.20898438]
[-8.64670181 349.75103760]
[5.10337782 343.72048950]
[19.41657639 339.18569946]
[34.13071060 336.19799805]
[49.07906342 334.79129028]
[64.09225464 334.98147583]
[65.87471771 320.08773804]
[67.65718842 305.19403076]
[69.43965149 290.30032349]
[70.66662598 275.35058594]
[71.33641052 260.36553955]
[72.00620270 245.38049316]
[72.67598724 230.39546204]
[61.66577530 240.58247375]
[46.68999481 241.43453979]
[34.59537125 232.56211853]
[30.91139984 218.02154541]
[37.32234573 204.46057129]
[50.89720917 198.07911682]
[65.42974854 201.79466248]
[74.27639771 213.91032410]
[76.50151825 199.07627869]
[78.72663116 184.24223328]
[80.95175171 169.40818787]
[83.17686462 154.57414246]
[74.56805420 147.08718872]
[70.60137177 136.26216125]
[72.37089539 124.74857330]
[79.55135345 115.42430878]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[95.84121704 67.86515808]
[95.61769867 63.92630386]
[96.58370972 60.50545502]
[98.42192078 57.91941071]
[100.74294281 56.34747314]
[104.28261566 41.77109528]
[107.82228851 27.19472122]
[111.36196136 12.61834621]
[114.90163422 -1.95802951]
[118.44130707 -16.53440475]
[121.98097229 -31.11078072]
[124.42670441 -45.91004944]
[125.76493835 -60.85023499]
[127.10317230 -75.79042053]
[128.44140625 -90.73060608]
[129.77963257 -105.67079163]
[131.11787415 -120.61097717]
[117.08503723 -126.17509460]
[105.20064545 -135.45860291]
[96.42256927 -147.70239258]
[91.45527649 -161.90924072]
[90.69324493 -176.92494202]
[94.18969727 -191.53216553]
[101.65296173 -204.54908752]
[112.47078705 -214.92504883]
[125.76054382 -221.82531738]
[140.44126892 -224.69825745]
[141.66824341 -239.64799500]
[142.78388977 -254.60644531]
[143.89953613 -269.56488037]
[145.01518250 -284.52334595]
[130.45550537 -288.29898071]
[116.80405426 -294.61386108]
[104.49967957 -303.26498413]
[93.93790436 -313.97427368]
[85.45825958 -326.39746094]
[79.33332825 -340.13519287]
[75.75999451 -354.74581909]
[74.85312653 -369.75973511]
[76.64188385 -384.69427490]
[81.06875610 -399.06933594]
[87.99144745 -412.42285156]
[97.18740845 -424.32553101]
[108.36104584 -434.39477539]
[121.15316010 -442.30688477]
[135.15254211 -447.80752563]
[149.90916443 -450.71990967]
[164.94866943 -450.95034790]
[179.78759766 -448.49145508]
[193.94892883 -443.42233276]
[206.97744751 -435.90585327]
[218.45434570 -426.18365479]
[228.01066589 -414.56832886]
[235.33923340 -401.43316650]
[240.20446777 -387.20050049]
[242.44995117 -372.32778931]
[242.00350952 -357.29312134]
[238.87948608 -342.57986450]
[233.17832947 -328.66094971]
[225.08329773 -315.98379517]
[214.85459900 -304.95593262]
[202.82104492 -295.93188477]
[189.36949158 -289.20169067]
[174.93231201 -284.98175049]
[159.97363281 -283.40771484]
[158.85798645 -268.44924927]
[157.74234009 -253.49079895]
[156.62669373 -238.53233337]
[159.26399231 -231.62825012]
[155.38145447 -223.36001587]
[169.31788635 -217.92375183]
[181.16976929 -208.77148438]
[189.97137451 -196.63815308]
[195.00247192 -182.50207520]
[195.84727478 -167.50599670]
[192.42878723 -152.86476135]
[185.01573181 -139.76686096]
[174.20143127 -129.27801514]
[160.85636902 -122.25437927]
[146.05805969 -119.27274323]
[144.71981812 -104.33255768]
[143.38159180 -89.39237213]
[142.04335022 -74.45218658]
[140.70512390 -59.51200104]
[139.36688232 -44.57181549]
[149.26148987 -55.84554291]
[163.43528748 -60.75507355]
[178.18327332 -58.01707077]
[189.65039062 -48.34724426]
[194.83912659 -34.27326202]
[192.39317322 -19.47402763]
[182.95188904 -7.81802654]
[168.98323059 -2.35211015]
[154.13853455 -4.50505543]
[142.29818726 -13.71408749]
[136.55735779 -27.57110786]
[133.01768494 -12.99473286]
[129.47801208 1.58164299]
[125.93833160 16.15801811]
[122.39865875 30.73439407]
[118.85898590 45.31076813]
[115.31931305 59.88714600]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[116.59988403 128.48234558]
[113.36055756 146.82408142]
[98.01091003 156.79927063]
[95.78578949 171.63330078]
[93.56067657 186.46734619]
[91.33555603 201.30139160]
[89.11044312 216.13543701]
[87.66102600 231.06524658]
[86.99124146 246.05029297]
[86.32144928 261.03533936]
[85.65166473 276.02035522]
[98.31403351 267.97894287]
[112.54494476 272.72036743]
[117.85390472 286.74945068]
[110.32734680 299.72445679]
[95.51356506 302.08071899]
[84.33337402 292.08276367]
[82.55090332 306.97650146]
[80.76844025 321.87020874]
[78.98596954 336.76391602]
[93.62004852 340.12188721]
[107.81427765 345.01638794]
[121.40782928 351.39190674]
[134.24668884 359.17623901]
[146.18536377 368.28118896]
[157.08859253 378.60357666]
[166.83283997 390.02645874]
[175.30767822 402.42037964]
[182.41708374 415.64489746]
[188.08050537 429.55020142]
[192.23377991 443.97872925]
[194.82984924 458.76699829]
[195.83927917 473.74743652]
[195.25064087 488.75027466]
[193.07061768 503.60556030]
[189.32388306 518.14495850]
[184.05291748 532.20373535]
[177.31744385 545.62255859]
[169.19375610 558.24945068]
[159.77391052 569.94128418]
[149.16465759 580.56555176]
[137.48620605 590.00195312]
[124.87085724 598.14355469]
[111.46157837 604.89807129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 186]
[34 185]
[35 184]
[36 183]
[37 177]
[38 176]
[39 175]
[40 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 169]
[57 166]
[59 164]
[60 163]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[87 130]
[88 128]
[89 127]
[90 126]
[91 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
