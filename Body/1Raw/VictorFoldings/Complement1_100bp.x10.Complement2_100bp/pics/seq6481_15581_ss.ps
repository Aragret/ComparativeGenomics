%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[85.05685425 809.27044678]
[70.14511871 807.52941895]
[55.48604584 804.28863525]
[41.23004913 799.58148193]
[27.52341843 793.45617676]
[14.50681305 785.97558594]
[2.31379938 777.21649170]
[-8.93050003 767.26879883]
[-19.11070061 756.23455811]
[-28.12233734 744.22698975]
[-35.87293625 731.36938477]
[-42.28296280 717.79351807]
[-47.28664017 703.63891602]
[-50.83261871 689.05065918]
[-52.88451767 674.17852783]
[-53.42127609 659.17504883]
[-52.43738937 644.19433594]
[-49.94295120 629.38995361]
[-45.96355820 614.91394043]
[-40.54004669 600.91479492]
[-33.72806931 587.53613281]
[-25.59753227 574.91528320]
[-16.23186493 563.18176270]
[-5.72717428 552.45599365]
[5.80874348 542.84802246]
[18.25751114 534.45642090]
[31.49138260 527.36724854]
[45.37456131 521.65338135]
[59.76457596 517.37341309]
[74.51376343 514.57116699]
[89.47077942 513.27551270]
[89.69410706 498.27716064]
[89.91743469 483.27883911]
[90.14076233 468.28048706]
[90.25243378 453.28091431]
[90.25243378 438.28091431]
[75.71003723 434.73025513]
[62.43208313 427.79800415]
[51.19240570 417.88330078]
[42.64722443 405.55920410]
[37.29682159 391.53958130]
[35.45627213 376.63787842]
[37.23686981 361.71978760]
[42.53942108 347.65292358]
[51.05976105 335.25656128]
[62.30619431 325.25369263]
[75.62786102 318.22906494]
[90.25243378 314.59484863]
[90.25243378 299.59484863]
[82.51512909 286.86755371]
[90.25243378 273.06738281]
[90.25243378 258.06738281]
[90.25243378 243.06739807]
[90.25243378 228.06739807]
[90.25243378 213.06739807]
[90.25243378 198.06739807]
[90.25243378 183.06739807]
[87.56874847 179.11683655]
[87.33828735 173.43846130]
[90.48240662 167.62245178]
[90.92901611 152.62910461]
[91.37561798 137.63575745]
[91.82222748 122.64240265]
[83.20623016 117.24887085]
[77.58429718 108.78013611]
[75.95874786 98.74603271]
[78.61937714 88.93549347]
[85.09184265 81.09758759]
[94.22219849 76.62969208]
[95.33785248 61.67123795]
[96.45349884 46.71278381]
[97.56914520 31.75432968]
[98.68479156 16.79587555]
[91.99533844 2.45845366]
[100.65781403 -9.65809250]
[101.77346802 -24.61654663]
[102.88911438 -39.57500076]
[92.85277557 -51.48758698]
[94.19729614 -66.64169312]
[105.61597443 -76.13639069]
[106.73162842 -91.09484100]
[107.84727478 -106.05329895]
[108.96292114 -121.01174927]
[95.81705475 -128.68948364]
[87.34285736 -141.26226807]
[85.17671204 -156.20643616]
[89.69525909 -170.55020142]
[99.95117950 -181.46466064]
[113.87123871 -186.82167053]
[107.18177795 -201.15910339]
[115.84425354 -213.27565002]
[116.95990753 -228.23410034]
[118.07555389 -243.19255066]
[119.19120026 -258.15100098]
[120.08401489 -273.12442017]
[120.75379944 -288.10943604]
[121.42359161 -303.09448242]
[122.09337616 -318.07952881]
[107.99791718 -323.61096191]
[96.46385956 -333.42138672]
[88.74233246 -346.44662476]
[85.67091370 -361.27380371]
[87.58275604 -376.29455566]
[94.27048492 -389.87957764]
[105.00866699 -400.55526733]
[118.63249969 -407.16360474]
[133.66418457 -408.98773193]
[148.47317505 -405.82980347]
[161.45310974 -398.03237915]
[171.19602966 -386.44125366]
[176.64509583 -372.31375122]
[177.20922852 -357.18231201]
[172.82723999 -342.68829346]
[163.97445679 -330.40386963]
[151.61114502 -321.66159058]
[137.07841492 -317.40972900]
[136.40863037 -302.42471313]
[135.73884583 -287.43966675]
[135.06906128 -272.45462036]
[137.57365417 -268.38818359]
[137.55033875 -262.70516968]
[134.14965820 -257.03536987]
[133.03401184 -242.07690430]
[131.91835022 -227.11845398]
[130.80270386 -212.16000366]
[137.57196045 -198.89250183]
[128.82968140 -185.70602417]
[141.80107117 -178.34336853]
[150.32446289 -166.02828979]
[152.66523743 -151.17292786]
[148.30622864 -136.71542358]
[138.06072998 -125.53881836]
[123.92137909 -119.89610291]
[122.80572510 -104.93765259]
[121.69007874 -89.97919464]
[120.57443237 -75.02074432]
[130.45832825 -63.93723297]
[129.53999329 -48.75133896]
[117.84756470 -38.45935059]
[116.73191833 -23.50089836]
[115.61627197 -8.54244423]
[122.38552856 4.72504997]
[113.64324951 17.91152573]
[112.52760315 32.86997986]
[111.41194916 47.82843018]
[110.29630280 62.78688431]
[109.18065643 77.74533844]
[122.54393768 91.55457306]
[121.54299164 110.74494934]
[106.81557465 123.08900452]
[106.36897278 138.08235168]
[105.92236328 153.07571411]
[105.47576141 168.06906128]
[105.25243378 183.06739807]
[105.25243378 198.06739807]
[105.25243378 213.06739807]
[105.25243378 228.06739807]
[105.25243378 243.06739807]
[105.25243378 258.06738281]
[105.25243378 273.06738281]
[112.98973083 286.86755371]
[105.25243378 299.59484863]
[105.25243378 314.59484863]
[119.87699890 318.22906494]
[133.19866943 325.25369263]
[144.44509888 335.25656128]
[152.96543884 347.65292358]
[158.26799011 361.71978760]
[160.04858398 376.63787842]
[158.20803833 391.53958130]
[152.85763550 405.55920410]
[144.31245422 417.88330078]
[133.07278442 427.79800415]
[119.79482269 434.73025513]
[105.25243378 438.28091431]
[105.25243378 453.28091431]
[108.38183594 461.86254883]
[105.13909912 468.50381470]
[104.91577148 483.50216675]
[104.69244385 498.50048828]
[104.46911621 513.49884033]
[119.38092041 515.23925781]
[134.04014587 518.47937012]
[148.29634094 523.18591309]
[162.00325012 529.31060791]
[175.02018738 536.79058838]
[187.21357727 545.54913330]
[198.45831299 555.49633789]
[208.63900757 566.53015137]
[217.65116882 578.53729248]
[225.40232849 591.39465332]
[231.81295776 604.97015381]
[236.81726074 619.12457275]
[240.36387634 633.71270752]
[242.41642761 648.58471680]
[242.95385742 663.58813477]
[241.97062683 678.56896973]
[239.47683716 693.37341309]
[235.49807739 707.84960938]
[230.07518005 721.84899902]
[223.26379395 735.22796631]
[215.13381958 747.84912109]
[205.76866150 759.58306885]
[195.26445007 770.30932617]
[183.72895813 779.91778564]
[171.28054810 788.30999756]
[158.04699707 795.39965820]
[144.16406250 801.11419678]
[129.77424622 805.39483643]
[115.02516937 808.19769287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 181]
[32 180]
[33 179]
[34 178]
[35 176]
[36 175]
[48 163]
[49 162]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[60 153]
[61 152]
[62 151]
[63 150]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[75 141]
[76 140]
[77 139]
[80 136]
[81 135]
[82 134]
[83 133]
[89 127]
[91 125]
[92 124]
[93 123]
[94 122]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
