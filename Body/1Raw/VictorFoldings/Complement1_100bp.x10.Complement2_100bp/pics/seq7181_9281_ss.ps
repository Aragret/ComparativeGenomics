%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[122.94776154 626.92077637]
[115.91774750 613.65069580]
[110.47587585 599.65417480]
[106.69572449 585.12054443]
[104.62843323 570.24627686]
[104.30194092 555.23260498]
[105.72068024 540.28259277]
[108.86545563 525.59832764]
[113.69373322 511.37850952]
[120.14022827 497.81533813]
[128.11775208 485.09231567]
[137.51841736 473.38143921]
[148.21508789 462.84115601]
[160.06311035 453.61398315]
[172.90223694 445.82467651]
[186.55886841 439.57864380]
[181.94485474 425.30590820]
[177.33084106 411.03317261]
[172.71684265 396.76043701]
[168.10282898 382.48770142]
[163.48881531 368.21496582]
[158.55722046 354.04882812]
[144.94212341 348.11886597]
[139.42102051 333.94241333]
[145.73321533 319.70184326]
[140.48649597 305.64935303]
[135.23977661 291.59689331]
[129.93786621 305.62863159]
[117.46456909 313.96029663]
[102.47212219 313.48440552]
[90.55233002 304.37844849]
[86.15099335 290.03869629]
[90.90969086 275.81356812]
[103.05355072 267.00863647]
[118.05321503 266.90795898]
[130.31488037 275.55001831]
[126.77520752 260.97363281]
[123.23553467 246.39724731]
[119.69586182 231.82087708]
[116.15618896 217.24450684]
[112.61651611 202.66812134]
[109.07637787 199.46243286]
[107.51245880 193.99880981]
[109.19532776 187.60510254]
[106.09121704 172.92979431]
[102.98711395 158.25450134]
[99.88300323 143.57919312]
[96.43988037 140.26951599]
[95.03932190 134.76174927]
[96.91181183 128.42098999]
[93.56875610 125.01026917]
[92.33280945 119.46324158]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.10185242 59.41076279]
[83.43605804 44.64954376]
[73.36936188 32.44412613]
[78.72161102 18.54438591]
[75.34848022 14.56078148]
[73.97776031 10.12519455]
[74.44629669 6.07605600]
[76.28180695 3.06553626]
[74.27779388 -11.79999161]
[72.27378082 -26.66551971]
[70.26976776 -41.53104782]
[68.26575470 -56.39657593]
[66.26174164 -71.26210785]
[64.25772858 -86.12763214]
[62.25371552 -100.99316406]
[60.24969864 -115.85868835]
[54.17524338 -102.14369965]
[43.10235596 -92.02484131]
[28.89702225 -87.20732880]
[13.95308495 -88.50299072]
[0.78886169 -95.69348145]
[-8.37724495 -107.56708527]
[-12.00058556 -122.12289429]
[-9.47056293 -136.90798950]
[-1.21353030 -149.43081665]
[11.37905693 -157.58108521]
[26.18512726 -159.98530579]
[40.70959854 -156.23832703]
[52.50483704 -146.97160339]
[59.58361053 -133.74513245]
[60.47642899 -148.71853638]
[57.86372375 -154.79185486]
[58.59986496 -160.42703247]
[61.62529755 -164.12240601]
[62.96353149 -179.06259155]
[64.30176544 -194.00277710]
[65.63999939 -208.94296265]
[66.30978394 -223.92799377]
[66.30978394 -238.92799377]
[66.30978394 -253.92799377]
[66.30978394 -268.92800903]
[66.30978394 -283.92800903]
[52.25259781 -289.71279907]
[41.48272324 -300.44024658]
[35.64249420 -314.47451782]
[35.62249756 -329.67541504]
[41.42578506 -343.72500610]
[52.16739655 -354.48074341]
[66.20932007 -360.30252075]
[81.41025543 -360.30252075]
[95.45217133 -354.48074341]
[106.19378662 -343.72500610]
[111.99707031 -329.67541504]
[111.97707367 -314.47451782]
[106.13684845 -300.44024658]
[95.36697388 -289.71279907]
[81.30978394 -283.92800903]
[81.30978394 -268.92800903]
[81.30978394 -253.92799377]
[81.30978394 -238.92799377]
[81.30978394 -223.92799377]
[92.65457153 -233.74104309]
[107.62474823 -232.79550171]
[117.64469910 -221.63304138]
[116.97455597 -206.64802551]
[105.99819946 -196.42454529]
[91.00338745 -196.81907654]
[80.58018494 -207.60472107]
[79.24195099 -192.66453552]
[77.90371704 -177.72434998]
[76.56548309 -162.78416443]
[75.44983673 -147.82571411]
[74.55701447 -132.85231018]
[75.11522675 -117.86270142]
[77.11923981 -102.99717712]
[79.12325287 -88.13164520]
[81.12726593 -73.26612091]
[83.13128662 -58.40058899]
[85.13529968 -43.53506088]
[87.13931274 -28.66953468]
[89.14332581 -13.80400562]
[91.14733887 1.06152272]
[93.48282623 15.87859058]
[103.35884094 27.02818871]
[98.19727325 41.98374939]
[100.86306763 56.74496460]
[104.20612335 60.15568924]
[105.44207001 65.70271301]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.67302704 125.75519562]
[114.55830383 140.47508240]
[117.66241455 155.15039062]
[120.76652527 169.82569885]
[123.87063599 184.50099182]
[127.19289398 199.12844849]
[130.73255920 213.70483398]
[134.27223206 228.28120422]
[137.81190491 242.85757446]
[141.35157776 257.43395996]
[144.89125061 272.01034546]
[149.29225159 286.35018921]
[154.53897095 300.40264893]
[159.78569031 314.45510864]
[173.88619995 321.07427979]
[179.00694275 335.40020752]
[172.60969543 348.80212402]
[176.63708496 352.12283325]
[178.77427673 356.24420166]
[179.03282166 360.31216431]
[177.76155090 363.60095215]
[182.37556458 377.87368774]
[186.98957825 392.14642334]
[191.60357666 406.41915894]
[196.21759033 420.69189453]
[200.83160400 434.96463013]
[215.56016541 432.03448486]
[230.52932739 430.83404541]
[245.53662109 431.37960815]
[260.37908936 433.66372681]
[274.85604858 437.65557861]
[288.77163696 443.30111694]
[301.93774414 450.52401733]
[314.17626953 459.22662354]
[325.32168579 469.29119873]
[335.22332764 480.58166504]
[343.74722290 492.94531250]
[350.77810669 506.21493530]
[356.22091675 520.21112061]
[360.00204468 534.74450684]
[362.07031250 549.61859131]
[362.39779663 564.63220215]
[360.98007202 579.58233643]
[357.83627319 594.26678467]
[353.00894165 608.48699951]
[346.56335449 622.05059814]
[338.58670044 634.77416992]
[329.18679810 646.48559570]
[318.49084473 657.02661133]
[306.64343262 666.25457764]
[293.80480957 674.04473877]
[280.14862061 680.29168701]
[265.85949707 684.91101074]
[251.13073730 687.84020996]
[236.16149902 689.03961182]
[221.15425110 688.49304199]
[206.31192017 686.20794678]
[191.83525085 682.21514893]
[177.92001343 676.56866455]
[164.75439453 669.34484863]
[152.51644897 660.64147949]
[141.37168884 650.57611084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 165]
[25 162]
[26 161]
[27 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[44 153]
[45 152]
[46 151]
[47 150]
[50 149]
[53 148]
[55 146]
[56 145]
[57 142]
[58 141]
[60 139]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[86 129]
[87 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
