%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[7.19571829 624.62829590]
[-0.79146558 637.34863281]
[-10.30999374 648.96765137]
[-21.20974541 659.30200195]
[-33.31881714 668.18872070]
[-46.44622803 675.48760986]
[-60.38494492 681.08361816]
[-74.91513062 684.88848877]
[-89.80761719 686.84222412]
[-104.82754517 686.91394043]
[-119.73801422 685.10253906]
[-134.30386353 681.43658447]
[-148.29537964 675.97393799]
[-161.49189758 668.80065918]
[-173.68527222 660.02996826]
[-184.68321228 649.80023193]
[-194.31225586 638.27264404]
[-202.42054749 625.62908936]
[-208.88018799 612.06903076]
[-213.58932495 597.80621338]
[-216.47367859 583.06567383]
[-217.48776245 568.07983398]
[-216.61557007 553.08508301]
[-213.87086487 538.31793213]
[-209.29693604 524.01116943]
[-202.96591187 510.39056396]
[-194.97766113 497.67086792]
[-185.45816040 486.05267334]
[-174.55752563 475.71923828]
[-162.44770813 466.83355713]
[-149.31968689 459.53573608]
[-135.38050842 453.94088745]
[-120.84999847 450.13723755]
[-105.95734406 448.18481445]
[-90.93740845 448.11434937]
[-76.02709198 449.92700195]
[-61.46154785 453.59417725]
[-56.00619125 439.62136841]
[-50.55083466 425.64855957]
[-45.09547806 411.67578125]
[-39.64012146 397.70297241]
[-34.18476486 383.73019409]
[-28.72940636 369.75738525]
[-23.27404976 355.78457642]
[-25.85271072 341.11489868]
[-13.62627125 331.07373047]
[-8.17091370 317.10095215]
[-2.71555686 303.12814331]
[-3.21113300 295.75411987]
[2.92644000 288.98892212]
[8.58922672 275.09890747]
[14.25201321 261.20886230]
[-0.37538159 264.53140259]
[-12.18783474 255.28663635]
[-12.47764492 240.28942871]
[-1.03117573 230.59518433]
[13.71366215 233.35014343]
[20.88743210 246.52178955]
[27.56762695 233.09141541]
[34.24782181 219.66104126]
[40.82785034 206.18130493]
[47.30734634 192.65295410]
[53.78684235 179.12460327]
[60.26633835 165.59626770]
[58.78590012 150.77542114]
[71.72530365 141.67143250]
[78.20479584 128.14309692]
[84.68429565 114.61474609]
[79.08049011 103.24588013]
[80.97575378 90.71346283]
[89.69068909 81.51000977]
[102.10122681 78.93470764]
[108.78141785 65.50433350]
[115.46161652 52.07395554]
[110.66518402 37.25397110]
[117.63117218 23.72882080]
[131.78932190 19.24748611]
[138.46951294 5.81710958]
[137.68771362 -9.98476887]
[150.28341675 -17.93445969]
[156.96360779 -31.36483574]
[163.64379883 -44.79521179]
[170.32398987 -58.22558975]
[169.90066528 -62.54701614]
[170.78549194 -66.39170074]
[172.66798401 -69.40693665]
[175.15498352 -71.37708282]
[177.82252502 -72.23866272]
[185.29026794 -85.24761200]
[192.75801086 -98.25656891]
[200.22575378 -111.26551819]
[207.69349670 -124.27447510]
[215.16123962 -137.28341675]
[222.33659363 -150.45590210]
[221.79014587 -166.26766968]
[234.50280762 -174.02894592]
[241.38223267 -187.35836792]
[248.26164246 -200.68780518]
[235.92549133 -209.25952148]
[224.81375122 -219.36814880]
[215.11656189 -230.84071350]
[206.99986267 -243.48088074]
[200.60252380 -257.07238770]
[196.03401184 -271.38265991]
[193.37251282 -286.16680908]
[192.66355896 -301.17190552]
[193.91929626 -316.14114380]
[197.11822510 -330.81838989]
[202.20559692 -344.95251465]
[209.09437561 -358.30166626]
[217.66668701 -370.63742065]
[227.77584839 -381.74865723]
[239.24887085 -391.44531250]
[251.88943481 -399.56143188]
[265.48123169 -405.95809937]
[279.79171753 -410.52593994]
[294.57601929 -413.18673706]
[309.58111572 -413.89495850]
[324.55029297 -412.63851929]
[339.22741699 -409.43890381]
[353.36129761 -404.35086060]
[366.71011353 -397.46142578]
[379.04544067 -388.88851929]
[390.15621948 -378.77883911]
[399.85232544 -367.30535889]
[407.96783447 -354.66442871]
[414.36386108 -341.07229614]
[418.93099976 -326.76159668]
[421.59109497 -311.97717285]
[422.29861450 -296.97204590]
[421.04147339 -282.00292969]
[417.84115601 -267.32595825]
[412.75241089 -253.19232178]
[405.86236572 -239.84382629]
[397.28887939 -227.50891113]
[387.17868042 -216.39862061]
[375.70474243 -206.70306396]
[363.06338501 -198.58816528]
[349.47097778 -192.19276428]
[335.16006470 -187.62629700]
[320.37551880 -184.96691895]
[305.37033081 -184.26010132]
[290.40127563 -185.51797485]
[275.72445679 -188.71899414]
[261.59106445 -193.80839539]
[254.71165466 -180.47895813]
[247.83224487 -167.14953613]
[248.87075806 -152.29118347]
[235.66603088 -143.57649231]
[236.38404846 -140.12442017]
[235.46569824 -136.15306091]
[232.68511963 -132.43530273]
[228.17018127 -129.81568909]
[220.70243835 -116.80673218]
[213.23469543 -103.79777527]
[205.76696777 -90.78882599]
[198.29922485 -77.77987671]
[190.83148193 -64.77091980]
[183.75437927 -51.54539490]
[177.07417297 -38.11501694]
[170.39398193 -24.68464088]
[163.71379089 -11.25426579]
[164.97340393 3.58698225]
[151.89988708 12.49730396]
[145.21969604 25.92768097]
[150.18795776 39.92238998]
[143.60461426 53.63786316]
[128.89198303 58.75415039]
[122.21179962 72.18452454]
[115.53160095 85.61490631]
[121.13929749 101.13655090]
[113.89970398 115.96746826]
[98.21263885 121.09423828]
[91.73313904 134.62258911]
[85.25364685 148.15092468]
[86.27062988 163.93942261]
[73.79468536 172.07575989]
[67.31518555 185.60411072]
[60.83568954 199.13244629]
[54.35619354 212.66079712]
[53.47159576 221.75228882]
[47.67819595 226.34123230]
[40.99800491 239.77160645]
[34.31781006 253.20198059]
[28.14204025 266.87164307]
[22.47925377 280.76168823]
[16.81646729 294.65170288]
[11.25724125 308.58349609]
[5.80188370 322.55630493]
[0.34652683 336.52911377]
[2.53498459 352.19821167]
[-9.30125141 361.23992920]
[-14.75660896 375.21273804]
[-20.21196556 389.18554688]
[-25.66732216 403.15832520]
[-31.12268066 417.13113403]
[-36.57803726 431.10394287]
[-42.03339386 445.07672119]
[-47.48875046 459.04953003]
[-34.29163742 466.22164917]
[-22.09751892 474.99130249]
[-11.09872055 485.22015381]
[-1.46870542 496.74691772]
[6.64064646 509.38977051]
[13.10143852 522.94934082]
[17.81177521 537.21173096]
[20.69736671 551.95202637]
[21.71270561 566.93774414]
[20.84177589 581.93255615]
[18.09831429 596.70001221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[44 192]
[46 190]
[47 189]
[48 188]
[50 187]
[51 186]
[52 185]
[58 184]
[59 183]
[60 182]
[61 180]
[62 179]
[63 178]
[64 177]
[66 175]
[67 174]
[68 173]
[72 170]
[73 169]
[74 168]
[77 165]
[78 164]
[80 162]
[81 161]
[82 160]
[83 159]
[88 158]
[89 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 149]
[96 147]
[97 146]
[98 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
