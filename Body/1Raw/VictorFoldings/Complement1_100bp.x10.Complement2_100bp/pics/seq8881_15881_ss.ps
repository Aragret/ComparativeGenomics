%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[214.99281311 608.61322021]
[203.79512024 598.62701416]
[193.15948486 588.04418945]
[183.11764526 576.89636230]
[173.69956970 565.21673584]
[164.93334961 553.04028320]
[156.84516907 540.40325928]
[149.45915222 527.34344482]
[142.79734802 513.89971924]
[136.87962341 500.11227417]
[131.72366333 486.02224731]
[127.34484863 471.67166138]
[123.75624084 457.10339355]
[120.96855164 442.36087036]
[118.99009705 427.48812866]
[117.82678986 412.52954102]
[117.48209381 397.52972412]
[117.95703888 382.53350830]
[119.25021362 367.58557129]
[121.35775757 352.73056030]
[124.27337646 338.01281738]
[127.98837280 323.47625732]
[132.49165344 309.16424561]
[137.76979065 295.11953735]
[143.80702209 281.38400269]
[150.58532715 267.99865723]
[158.08448792 255.00344849]
[166.28211975 242.43714905]
[175.15374756 230.33726501]
[184.67291260 218.73992920]
[194.81118774 207.67971802]
[184.32368469 196.95533752]
[173.83618164 186.23095703]
[163.34867859 175.50657654]
[152.86117554 164.78219604]
[142.37368774 154.05781555]
[131.88618469 143.33343506]
[121.39868164 132.60905457]
[110.91117859 121.88468170]
[100.42367554 111.16030121]
[89.85662842 100.51428986]
[79.21061707 89.94724274]
[63.96547318 85.71686554]
[60.38319397 71.25946045]
[49.73718262 60.69240952]
[39.09117508 50.12536240]
[27.56541824 59.74261093]
[15.18972397 68.23829651]
[2.07285309 75.53775787]
[-11.66992092 81.57685089]
[-25.91782379 86.30249786]
[-40.54564285 89.67316437]
[-55.42481995 91.65924072]
[-70.42459869 92.24326324]
[-85.41316223 91.42010498]
[-100.25877380 89.19699860]
[-114.83097839 85.59347534]
[-129.00170898 80.64121246]
[-142.64642334 74.38372803]
[-155.64521790 66.87601471]
[-167.88385010 58.18404388]
[-179.25477600 48.38421631]
[-189.65805054 37.56264496]
[-199.00224304 25.81443787]
[-207.20526123 13.24283981]
[-214.19499207 -0.04166882]
[-219.91000366 -13.92233944]
[-224.30009460 -28.27718544]
[-227.32666016 -42.98005295]
[-228.96311951 -57.90173340]
[-229.19508362 -72.91108704]
[-228.02052307 -87.87620544]
[-225.44973755 -102.66558075]
[-221.50534058 -117.14923096]
[-216.22200012 -131.19987488]
[-209.64611816 -144.69404602]
[-201.83552551 -157.51312256]
[-192.85882568 -169.54447937]
[-182.79492188 -180.68235779]
[-171.73226929 -190.82888794]
[-159.76808167 -199.89491272]
[-147.00749207 -207.80072021]
[-133.56266785 -214.47686768]
[-119.55174255 -219.86466980]
[-105.09785461 -223.91679382]
[-90.32802582 -226.59759521]
[-75.37206268 -227.88352966]
[-60.36140060 -227.76332092]
[-45.42795181 -226.23799133]
[-30.70296097 -223.32095337]
[-16.31583023 -219.03785706]
[-2.39299917 -213.42631531]
[10.94317627 -206.53569031]
[23.57549286 -198.42648315]
[35.39293671 -189.16999817]
[46.29165268 -178.84757996]
[56.17586136 -167.54992676]
[64.95869446 -155.37634277]
[72.56297302 -142.43379211]
[78.92186737 -128.83604431]
[83.97948456 -114.70257568]
[87.69139099 -100.15760040]
[90.02495575 -85.32894897]
[90.95967102 -70.34693146]
[90.48732758 -55.34321976]
[88.61207581 -40.44966888]
[85.35039520 -25.79716301]
[80.73094940 -11.51447392]
[74.79433441 2.27287698]
[67.59272003 15.44372559]
[59.18939972 27.88232231]
[49.65822220 39.47935486]
[60.30422974 50.04640198]
[70.95024109 60.61344910]
[85.43391418 64.08800507]
[89.77766418 79.30123138]
[100.42367554 89.86828613]
[107.90835571 92.86029816]
[111.14805603 100.67279816]
[121.63555908 111.39717865]
[132.12306213 122.12155914]
[142.61056519 132.84593201]
[153.09805298 143.57031250]
[163.58555603 154.29469299]
[174.07305908 165.01907349]
[184.56056213 175.74345398]
[195.04806519 186.46783447]
[205.53556824 197.19221497]
[216.81941223 187.30346680]
[228.62644958 178.04565430]
[240.92143250 169.44645691]
[253.66766357 161.53149414]
[266.82708740 154.32441711]
[280.36047363 147.84671021]
[294.22741699 142.11772156]
[308.38650513 137.15455627]
[322.79550171 132.97200012]
[337.41137695 129.58256531]
[352.19058228 126.99634552]
[367.08892822 125.22106934]
[382.06201172 124.26203156]
[397.06512451 124.12209320]
[412.05349731 124.80166626]
[426.98239136 126.29873657]
[441.80725098 128.60884094]
[456.48382568 131.72505188]
[470.96832275 135.63810730]
[485.21752930 140.33630371]
[499.18890381 145.80563354]
[512.84075928 152.02976990]
[526.13232422 158.99014282]
[539.02398682 166.66595459]
[551.47723389 175.03433228]
[563.45489502 184.07028198]
[574.92126465 193.74684143]
[585.84204102 204.03514099]
[596.18469238 214.90444946]
[605.91839600 226.32235718]
[615.01403809 238.25476074]
[623.44445801 250.66607666]
[631.18450928 263.51925659]
[638.21112061 276.77593994]
[644.50335693 290.39654541]
[650.04235840 304.34045410]
[654.81158447 318.56600952]
[658.79693604 333.03082275]
[661.98632812 347.69165039]
[664.37042236 362.50479126]
[665.94201660 377.42602539]
[666.69635010 392.41079712]
[666.63134766 407.41442871]
[665.74700928 422.39212036]
[664.04614258 437.29916382]
[661.53375244 452.09106445]
[658.21728516 466.72369385]
[654.10668945 481.15341187]
[649.21429443 495.33709717]
[643.55456543 509.23242188]
[637.14453125 522.79797363]
[630.00317383 535.99322510]
[622.15197754 548.77880859]
[613.61425781 561.11657715]
[604.41546631 572.96966553]
[594.58319092 584.30273438]
[584.14666748 595.08197021]
[573.13702393 605.27514648]
[561.58721924 614.85192871]
[549.53167725 623.78369141]
[537.00634766 632.04376221]
[524.04858398 639.60748291]
[510.69717407 646.45239258]
[496.99185181 652.55792236]
[482.97357178 657.90588379]
[468.68417358 662.48034668]
[454.16629028 666.26763916]
[439.46322632 669.25646973]
[424.61889648 671.43792725]
[409.67761230 672.80554199]
[394.68389893 673.35510254]
[379.68258667 673.08508301]
[364.71838379 671.99627686]
[349.83596802 670.09185791]
[335.07974243 667.37756348]
[320.49380493 663.86157227]
[306.12161255 659.55419922]
[292.00607300 654.46844482]
[278.18936157 648.61944580]
[264.71264648 642.02465820]
[251.61619568 634.70373535]
[238.93908691 626.67852783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 128]
[32 127]
[33 126]
[34 125]
[35 124]
[36 123]
[37 122]
[38 121]
[39 120]
[40 119]
[41 117]
[42 116]
[44 114]
[45 113]
[46 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
