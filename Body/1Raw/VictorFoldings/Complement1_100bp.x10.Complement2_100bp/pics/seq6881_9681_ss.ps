%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[85.18540955 486.34732056]
[85.11719513 470.54318237]
[96.30334473 459.37869263]
[96.08001709 444.38037109]
[95.85668945 429.38201904]
[95.52171326 414.38577271]
[95.07511139 399.39242554]
[94.62850189 384.39907837]
[94.18190002 369.40573120]
[93.73529053 354.41238403]
[82.03083801 349.65591431]
[72.96128845 340.79339600]
[67.89869690 329.11614990]
[67.62756348 316.34487915]
[72.22349548 304.37606812]
[81.03672028 295.00045776]
[92.78372192 289.63504028]
[92.78372192 274.63504028]
[92.78372192 259.63504028]
[92.78372192 244.63504028]
[92.78372192 229.63504028]
[85.04641724 216.90776062]
[92.78372192 203.10758972]
[92.78372192 188.10758972]
[83.20302582 173.40463257]
[92.54246521 157.53463745]
[92.31913757 142.53630066]
[89.07640076 135.89503479]
[92.20581055 127.31339264]
[89.06230927 120.62458038]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[85.59819794 43.77567673]
[93.52413177 31.16501045]
[93.74745941 16.16667366]
[93.97078705 1.16833591]
[94.19411469 -13.83000183]
[94.41744232 -28.82833862]
[94.64076996 -43.82667542]
[94.86409760 -58.82501221]
[87.33312225 -72.73885345]
[95.25905609 -85.34951782]
[95.48238373 -100.34785461]
[88.56369019 -87.03877258]
[78.47537994 -75.93805695]
[65.88655853 -67.78197479]
[51.63219833 -63.11150742]
[36.65774536 -62.23641586]
[21.95640182 -65.21474457]
[8.50325012 -71.84895325]
[-2.80940723 -81.69902039]
[-11.23124409 -94.11161804]
[-16.20366859 -108.26347351]
[-17.39687920 -123.21594238]
[-14.73173523 -137.97727966]
[-8.38500309 -151.56840515]
[1.22235870 -163.08790588]
[13.45312977 -171.77169800]
[27.49608612 -177.04382324]
[42.41980743 -178.55461121]
[57.23446274 -176.20385742]
[70.95744324 -170.14747620]
[82.67855072 -160.78715515]
[91.62037659 -148.74374390]
[97.18983459 -134.81602478]
[99.01748657 -119.92266083]
[104.05439758 -134.05169678]
[109.09131622 -148.18072510]
[114.12823486 -162.30975342]
[119.16514587 -176.43878174]
[124.20206451 -190.56781006]
[121.54804993 -206.16482544]
[133.10983276 -215.55494690]
[138.14674377 -229.68397522]
[141.90304565 -244.20603943]
[144.34877014 -259.00531006]
[131.70486450 -265.74572754]
[121.77561951 -276.04608154]
[115.52226257 -288.89013672]
[113.54427338 -303.01632690]
[116.02191925 -317.04168701]
[122.69991302 -329.59735107]
[132.91366577 -339.46188354]
[145.65536499 -345.68045044]
[159.67344666 -347.65692139]
[162.33924866 -362.41812134]
[165.00505066 -377.17935181]
[167.67083740 -391.94055176]
[170.33663940 -406.70178223]
[173.00242615 -421.46298218]
[162.76647949 -435.64907837]
[165.89572144 -452.51687622]
[179.97352600 -461.71762085]
[182.41926575 -476.51690674]
[184.86499023 -491.31616211]
[187.31071472 -506.11544800]
[173.50624084 -512.18896484]
[161.64640808 -521.50531006]
[152.47669983 -533.47894287]
[146.57354736 -547.35711670]
[144.30804443 -562.26745605]
[145.82257080 -577.27270508]
[151.02194214 -591.42956543]
[159.57931519 -603.84820557]
[170.95677185 -613.74792480]
[184.43911743 -620.50640869]
[199.17883301 -623.69885254]
[214.24935913 -623.12457275]
[228.70336914 -618.81964111]
[241.63226318 -611.05468750]
[252.22332764 -600.31781006]
[259.81079102 -587.28393555]
[263.91769409 -572.77239990]
[264.28585815 -557.69543457]
[260.89218140 -543.00073242]
[253.94998169 -529.61206055]
[243.89562988 -518.37103271]
[231.36117554 -509.98425293]
[217.13452148 -504.97894287]
[202.10998535 -503.66970825]
[199.66426086 -488.87045288]
[197.21853638 -474.07116699]
[194.77279663 -459.27191162]
[203.66830444 -449.94992065]
[205.59928894 -437.01339722]
[199.63917542 -425.15222168]
[187.76364136 -418.79721069]
[185.09785461 -404.03598022]
[182.43205261 -389.27474976]
[179.76626587 -374.51354980]
[177.10046387 -359.75231934]
[174.43467712 -344.99111938]
[188.13598633 -337.23461914]
[198.37045288 -325.23501587]
[203.88665771 -310.43118286]
[204.00042725 -294.60656738]
[198.67962646 -279.67440796]
[188.55029297 -267.44619751]
[174.82295227 -259.41217041]
[159.14804077 -256.55957031]
[156.70231628 -241.76029968]
[166.77804565 -252.87245178]
[180.64454651 -258.59259033]
[195.62445068 -257.81622314]
[208.82534790 -250.69328308]
[217.69836426 -238.59909058]
[220.53024292 -223.86883545]
[216.77421570 -209.34669495]
[207.15550232 -197.83670044]
[193.53131104 -191.56120300]
[178.53228760 -191.73194885]
[165.05448914 -198.31593323]
[155.70027161 -210.04191589]
[152.27577209 -224.64706421]
[147.23886108 -210.51803589]
[150.25315857 -195.93162537]
[138.33110046 -185.53089905]
[133.29417419 -171.40185547]
[128.25726318 -157.27282715]
[123.22034454 -143.14379883]
[118.18343353 -129.01477051]
[113.14651489 -114.88574219]
[110.48072052 -100.12452698]
[110.25739288 -85.12619019]
[117.80434418 -72.28513336]
[109.86243439 -58.60168457]
[109.63910675 -43.60334778]
[109.41577911 -28.60501099]
[109.19245148 -13.60667419]
[108.96912384 1.39166355]
[108.74579620 16.39000130]
[108.52246857 31.38833809]
[116.06941986 44.22939682]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.20581055 127.31339264]
[107.31747437 142.31297302]
[107.54080200 157.31130981]
[116.23543549 166.83843994]
[116.11267853 179.33518982]
[107.78372192 188.10758972]
[107.78372192 203.10758972]
[115.52101898 216.90776062]
[107.78372192 229.63504028]
[107.78372192 244.63504028]
[107.78372192 259.63504028]
[107.78372192 274.63504028]
[107.78372192 289.63504028]
[123.20463562 298.06286621]
[132.18717957 313.06369019]
[132.33415222 330.45858765]
[123.69527435 345.45471191]
[108.72864532 353.96575928]
[109.17524719 368.95910645]
[109.62185669 383.95245361]
[110.06845856 398.94580078]
[110.51506805 413.93917847]
[113.89859772 422.42382812]
[110.85502625 429.15869141]
[111.07835388 444.15704346]
[111.30168152 459.15536499]
[122.81529236 469.98184204]
[123.21765137 485.78100586]
[112.27005768 497.17950439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[23 188]
[24 187]
[26 184]
[27 183]
[29 182]
[31 181]
[33 179]
[34 178]
[35 177]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[45 167]
[46 166]
[69 165]
[70 164]
[71 163]
[72 162]
[73 161]
[74 160]
[76 158]
[77 157]
[78 144]
[79 143]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
