%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[85.38701630 308.78793335]
[87.78959656 323.65539551]
[86.93948364 338.69174194]
[82.87644958 353.19366455]
[75.79051208 366.48287964]
[66.01311493 377.93786621]
[54.00154495 387.02282715]
[40.31761551 393.31280518]
[25.60135078 396.51370239]
[10.54105091 396.47570801]
[-4.15888453 393.20065308]
[-17.81091118 386.84170532]
[-29.77650070 377.69628906]
[-39.49600220 366.19213867]
[-46.51481247 352.86734009]
[-50.50465393 338.34509277]
[-51.27891159 323.30465698]
[-48.80137253 308.44949341]
[-43.18791580 294.47442627]
[-34.70109177 282.03302002]
[-23.73784637 271.70727539]
[-10.81095123 263.98007202]
[3.47498131 259.21289062]
[18.45177078 257.62863159]
[33.41892624 259.30145264]
[38.24492645 245.09899902]
[43.07092285 230.89654541]
[47.89691925 216.69409180]
[44.66579437 202.15417480]
[56.43167877 191.57710266]
[61.25767899 177.37463379]
[66.08367157 163.17218018]
[64.96702576 160.60095215]
[64.80158997 157.43247986]
[65.81995392 154.02684021]
[68.12017822 150.82160950]
[71.64282227 148.28292847]
[77.30561066 134.39289856]
[82.96839142 120.50286865]
[88.63117981 106.61284637]
[77.41281128 116.57015991]
[64.28211212 123.82169342]
[49.87976456 128.01362610]
[34.90848541 128.94143677]
[20.09875870 126.55983734]
[6.17318583 120.98503113]
[-6.18877602 112.48904419]
[-16.38395882 101.48638916]
[-23.91491699 88.51393127]
[-28.41419601 74.20462036]
[-29.66227150 59.25663376]
[-27.59824181 44.39931870]
[-22.32281685 30.35759926]
[-14.09339809 17.81659889]
[-3.31151605 7.38822412]
[9.49675751 -0.41870379]
[23.70647812 -5.22326708]
[38.62432480 -6.79104042]
[53.52241516 -5.04552841]
[67.67385101 -0.07189884]
[80.38813782 7.88717413]
[91.04492950 18.44334984]
[99.12424469 31.08156776]
[104.23188782 45.18518448]
[106.11864471 60.06605148]
[104.69245148 74.99809265]
[100.02563477 89.24672699]
[104.14241028 73.97051239]
[118.57274628 70.28070068]
[122.72455597 52.34069443]
[139.79550171 48.27256775]
[150.12217712 37.39323425]
[160.44883728 26.51390076]
[170.77551270 15.63456631]
[181.10217285 4.75523186]
[191.42884827 -6.12410259]
[201.75550842 -17.00343704]
[191.48623657 -27.94270706]
[181.86424255 -39.45544434]
[172.92150879 -51.50339890]
[164.68774414 -64.04655457]
[157.19029236 -77.04324341]
[150.45405579 -90.45028687]
[144.50141907 -104.22315216]
[139.35214233 -118.31608582]
[135.02334595 -132.68226624]
[131.52941895 -147.27398682]
[128.88194275 -162.04275513]
[127.08972931 -176.93951416]
[126.15872955 -191.91479492]
[126.09202576 -206.91883850]
[126.88985443 -221.90180969]
[128.54956055 -236.81391907]
[131.06562805 -251.60563660]
[134.42968750 -266.22784424]
[138.63058472 -280.63195801]
[143.65435791 -294.77011108]
[149.48431396 -308.59533691]
[156.10107422 -322.06173706]
[163.48269653 -335.12457275]
[171.60461426 -347.74044800]
[180.43988037 -359.86743164]
[189.95913696 -371.46524048]
[200.13075256 -382.49539185]
[210.92094421 -392.92120361]
[222.29386902 -402.70803833]
[234.21173096 -411.82342529]
[246.63496399 -420.23703003]
[259.52230835 -427.92095947]
[272.83090210 -434.84963989]
[286.51657104 -441.00009155]
[300.53387451 -446.35183716]
[314.83621216 -450.88714600]
[329.37606812 -454.59094238]
[344.10516357 -457.45089722]
[358.97457886 -459.45755005]
[373.93487549 -460.60418701]
[388.93640137 -460.88705444]
[403.92929077 -460.30514526]
[418.86376953 -458.86044312]
[433.69021606 -456.55773926]
[448.35937500 -453.40469360]
[462.82247925 -449.41174316]
[477.03155518 -444.59216309]
[490.93936157 -438.96197510]
[504.49969482 -432.53991699]
[517.66748047 -425.34725952]
[530.39904785 -417.40792847]
[542.65209961 -408.74829102]
[554.38586426 -399.39709473]
[565.56134033 -389.38543701]
[576.14154053 -378.74658203]
[586.09124756 -367.51583862]
[595.37731934 -355.73049927]
[603.96905518 -343.42977905]
[611.83782959 -330.65447998]
[618.95751953 -317.44708252]
[625.30450439 -303.85140991]
[630.85766602 -289.91268921]
[635.59851074 -275.67718506]
[639.51141357 -261.19219971]
[642.58325195 -246.50581360]
[644.80389404 -231.66687012]
[646.16595459 -216.72462463]
[646.66491699 -201.72872925]
[646.29907227 -186.72900391]
[645.06970215 -171.77526855]
[642.98083496 -156.91719055]
[640.03942871 -142.20414734]
[636.25524902 -127.68498993]
[631.64086914 -113.40797424]
[626.21160889 -99.42050934]
[619.98559570 -85.76906586]
[612.98339844 -72.49899292]
[605.22827148 -59.65437317]
[596.74603271 -47.27787399]
[587.56488037 -35.41061401]
[577.71527100 -24.09200859]
[567.22991943 -13.35966206]
[556.14367676 -3.24922442]
[544.49340820 6.20571852]
[532.31768799 14.97375774]
[519.65710449 23.02576637]
[506.55361938 30.33499718]
[493.05081177 36.87717056]
[479.19354248 42.63055038]
[465.02780151 47.57602692]
[450.60067749 51.69717026]
[435.96008301 54.98028946]
[421.15466309 57.41448212]
[406.23361206 58.99166107]
[391.24645996 59.70658493]
[376.24301147 59.55688095]
[361.27313232 58.54304504]
[346.38650513 56.66844559]
[331.63259888 53.93930817]
[317.06042480 50.36470032]
[302.71841431 45.95649719]
[288.65417480 40.72933960]
[274.91445923 34.70059586]
[261.54489136 27.89029121]
[248.58988953 20.32104874]
[236.09246826 12.01801109]
[224.09417725 3.00876331]
[212.63484192 -6.67676830]
[202.30818176 4.20256615]
[191.98150635 15.08190060]
[181.65484619 25.96123505]
[171.32817078 36.84056854]
[161.00151062 47.71990204]
[150.67483521 58.59923935]
[150.67642212 70.69578552]
[142.16213989 79.84405518]
[129.29711914 80.76820374]
[125.93048859 95.27734375]
[110.75001526 99.73423004]
[102.52120972 112.27562714]
[96.85842133 126.16565704]
[91.19563293 140.05567932]
[85.53285217 153.94570923]
[80.28613281 167.99818420]
[75.46013641 182.20063782]
[70.63413239 196.40309143]
[73.52007294 211.95886230]
[62.09937668 221.52008057]
[57.27338028 235.72253418]
[52.44738007 249.92498779]
[47.62138367 264.12744141]
[60.50914001 271.91973877]
[71.42015839 282.30065918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[28 205]
[30 203]
[31 202]
[32 201]
[37 200]
[38 199]
[39 198]
[40 197]
[67 196]
[69 194]
[71 191]
[72 190]
[73 189]
[74 188]
[75 187]
[76 186]
[77 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
