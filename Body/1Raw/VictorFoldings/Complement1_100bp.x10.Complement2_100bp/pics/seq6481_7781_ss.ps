%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[79.33082581 984.30999756]
[64.34869385 983.54528809]
[49.40393448 982.24011230]
[34.51603699 980.39630127]
[19.70441246 978.01617432]
[4.98837137 975.10290527]
[-9.61289883 971.66021729]
[-24.08036232 967.69262695]
[-38.39515305 963.20532227]
[-52.53861237 958.20416260]
[-66.49229431 952.69561768]
[-80.23800659 946.68688965]
[-93.75783539 940.18585205]
[-107.03414154 933.20098877]
[-120.04962158 925.74133301]
[-132.78730774 917.81665039]
[-145.23059082 909.43725586]
[-157.36323547 900.61413574]
[-169.16944885 891.35870361]
[-180.63381958 881.68310547]
[-191.74139404 871.59991455]
[-202.47770691 861.12225342]
[-212.82875061 850.26385498]
[-222.78102112 839.03881836]
[-232.32156372 827.46179199]
[-241.43794250 815.54791260]
[-250.11824036 803.31268311]
[-258.35116577 790.77197266]
[-266.12594604 777.94226074]
[-273.43249512 764.84020996]
[-280.26129150 751.48297119]
[-286.60336304 737.88781738]
[-292.45050049 724.07263184]
[-297.79507446 710.05529785]
[-302.63009644 695.85418701]
[-306.94927979 681.48779297]
[-310.74697876 666.97479248]
[-314.01821899 652.33416748]
[-316.75878906 637.58496094]
[-318.96511841 622.74645996]
[-320.63427734 607.83801270]
[-321.76409912 592.87896729]
[-322.35314941 577.88891602]
[-322.40063477 562.88732910]
[-321.90649414 547.89379883]
[-320.87136841 532.92791748]
[-319.29660034 518.00915527]
[-317.18426514 503.15701294]
[-314.53713989 488.39077759]
[-311.35861206 473.72973633]
[-307.65286255 459.19299316]
[-303.42471313 444.79953003]
[-298.67968750 430.56808472]
[-293.42395020 416.51724243]
[-287.66439819 402.66528320]
[-281.40847778 389.03030396]
[-274.66439819 375.63003540]
[-267.44091797 362.48202515]
[-259.74749756 349.60333252]
[-251.59413147 337.01080322]
[-242.99145508 324.72085571]
[-233.95068359 312.74948120]
[-224.48362732 301.11230469]
[-214.60260010 289.82449341]
[-204.32049561 278.90078735]
[-193.65072632 268.35540771]
[-182.60719299 258.20208740]
[-171.20429993 248.45410156]
[-159.45692444 239.12414551]
[-147.38037109 230.22438049]
[-134.99037170 221.76640320]
[-122.30310822 213.76124573]
[-109.33511353 206.21936035]
[-96.10328674 199.15055847]
[-82.62488556 192.56405640]
[-68.91748047 186.46846008]
[-54.99894714 180.87171936]
[-40.88743210 175.78111267]
[-26.60133171 171.20327759]
[-12.15927315 167.14419556]
[2.41991186 163.60914612]
[17.11721611 160.60275269]
[31.91347885 158.12893677]
[46.78940582 156.19090271]
[61.72560120 154.79118347]
[76.70259857 153.93162537]
[91.70085907 153.61332703]
[84.15390778 140.77226257]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.01751709 57.68826675]
[93.01751709 42.68826675]
[93.01751709 27.68826675]
[93.01751709 12.68826771]
[78.76484680 7.52714443]
[67.13891602 -2.19980597]
[59.54361725 -15.31800747]
[56.89611435 -30.24337196]
[59.51610565 -45.17359161]
[67.08721924 -58.30576706]
[78.69520569 -68.05413055]
[92.93833923 -73.24150848]
[108.09669495 -73.24150848]
[122.33982849 -68.05413055]
[133.94781494 -58.30576706]
[141.51893616 -45.17359161]
[144.13891602 -30.24337196]
[141.49142456 -15.31800747]
[133.89611816 -2.19980597]
[122.27018738 7.52714443]
[108.01751709 12.68826771]
[108.01751709 27.68826675]
[108.01751709 42.68826675]
[108.01751709 57.68826675]
[111.16101837 64.37708282]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[114.62512970 141.22598267]
[106.69919586 153.83665466]
[121.68132782 154.60136414]
[136.62609863 155.90646362]
[151.51399231 157.75027466]
[166.32562256 160.13035583]
[181.04167175 163.04362488]
[195.64294434 166.48628235]
[210.11041260 170.45382690]
[224.42521667 174.94110107]
[238.56867981 179.94226074]
[252.52238464 185.45075989]
[266.26809692 191.45944214]
[279.78793335 197.96044922]
[293.06427002 204.94532776]
[306.07977295 212.40495300]
[318.81747437 220.32960510]
[331.26074219 228.70895386]
[343.39343262 237.53207397]
[355.19964600 246.78746033]
[366.66403198 256.46304321]
[377.77163696 266.54623413]
[388.50796509 277.02383423]
[398.85903931 287.88223267]
[408.81134033 299.10723877]
[418.35189819 310.68423462]
[427.46829224 322.59811401]
[436.14862061 334.83337402]
[444.38156128 347.37402344]
[452.15637207 360.20370483]
[459.46295166 373.30572510]
[466.29174805 386.66299438]
[472.63388062 400.25811768]
[478.48104858 414.07330322]
[483.82562256 428.09060669]
[488.66067505 442.29171753]
[492.97988892 456.65811157]
[496.77761841 471.17108154]
[500.04891968 485.81170654]
[502.78952026 500.56088257]
[504.99584961 515.39941406]
[506.66503906 530.30786133]
[507.79489136 545.26690674]
[508.38397217 560.25695801]
[508.43148804 575.25854492]
[507.93737793 590.25207520]
[506.90228271 605.21795654]
[505.32754517 620.13671875]
[503.21524048 634.98889160]
[500.56811523 649.75512695]
[497.38964844 664.41619873]
[493.68389893 678.95294189]
[489.45578003 693.34637451]
[484.71078491 707.57781982]
[479.45510864 721.62872314]
[473.69555664 735.48065186]
[467.43966675 749.11566162]
[460.69561768 762.51593018]
[453.47216797 775.66394043]
[445.77877808 788.54266357]
[437.62542725 801.13519287]
[429.02276611 813.42517090]
[419.98202515 825.39654541]
[410.51498413 837.03375244]
[400.63397217 848.32159424]
[390.35189819 859.24530029]
[379.68215942 869.79071045]
[368.63864136 879.94403076]
[357.23577881 889.69207764]
[345.48840332 899.02203369]
[333.41186523 907.92181396]
[321.02191162 916.37982178]
[308.33465576 924.38500977]
[295.36666870 931.92694092]
[282.13485718 938.99578857]
[268.65646362 945.58227539]
[254.94908142 951.67791748]
[241.03054810 957.27465820]
[226.91905212 962.36529541]
[212.63294983 966.94317627]
[198.19090271 971.00231934]
[183.61172485 974.53735352]
[168.91442871 977.54376221]
[154.11817932 980.01763916]
[139.24224854 981.95568848]
[124.30605316 983.35546875]
[109.32906342 984.21502686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 125]
[89 123]
[90 122]
[92 120]
[93 119]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
