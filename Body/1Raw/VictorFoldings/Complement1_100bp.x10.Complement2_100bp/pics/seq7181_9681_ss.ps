%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[89.89427185 373.16647339]
[87.88915253 388.14880371]
[81.55548096 401.87384033]
[71.45643616 413.12109375]
[58.49002457 420.89047241]
[43.80920792 424.49118042]
[28.71939087 423.60299683]
[14.56235504 418.30490112]
[2.59693241 409.06802368]
[-6.11292028 396.71365356]
[-10.79272747 382.34039307]
[-11.02636528 367.22625732]
[-6.79305840 352.71520996]
[1.53077126 340.09756470]
[13.20497322 330.49523926]
[27.19148636 324.76211548]
[42.24663925 323.40792847]
[45.35074997 308.73263550]
[48.45486069 294.05734253]
[42.12156296 283.75122070]
[44.58754349 271.49957275]
[55.06551743 263.97796631]
[58.38777924 249.35049438]
[53.66152954 235.22563171]
[64.26318359 223.48188782]
[59.53693008 209.35702515]
[70.13858795 197.61328125]
[73.46084595 182.98582458]
[76.78310394 168.35836792]
[80.10536194 153.73089600]
[66.87987518 146.75321960]
[55.91030121 136.59104919]
[47.94380188 123.93655396]
[43.52299881 109.65166473]
[42.94900894 94.70937347]
[46.26092529 80.12744904]
[53.23316956 66.89909363]
[63.39083481 55.92534256]
[76.04206085 47.95364380]
[90.32512665 43.52696991]
[105.26717377 42.94683838]
[108.58943176 28.31937790]
[111.91169739 13.69191837]
[115.23395538 -0.93554181]
[118.55621338 -15.56300163]
[114.06759644 -30.73412132]
[124.43161774 -41.43161011]
[119.94300079 -56.60272980]
[130.30702209 -67.30021667]
[133.62928772 -81.92768097]
[136.95153809 -96.55513763]
[140.27380371 -111.18260193]
[143.59605408 -125.81005859]
[146.91831970 -140.43751526]
[150.24058533 -155.06498718]
[153.56283569 -169.69244385]
[149.07421875 -184.86355591]
[159.43824768 -195.56105042]
[162.76049805 -210.18850708]
[153.31578064 -198.53530884]
[141.54315186 -189.23986816]
[128.01701355 -182.75575256]
[113.39736176 -179.39930725]
[98.39749908 -179.33433533]
[83.74932098 -182.56399536]
[70.16752625 -188.93069458]
[58.31480789 -198.12379456]
[48.76948929 -209.69474792]
[41.99730682 -223.07897949]
[38.32868576 -237.62342834]
[37.94263077 -252.61846924]
[40.85797882 -267.33242798]
[46.93247986 -281.04739380]
[55.86975098 -293.09420776]
[67.23371887 -302.88500977]
[80.46990967 -309.94216919]
[94.93249512 -313.92129517]
[109.91583252 -314.62823486]
[124.68882751 -312.02853394]
[138.53068542 -306.24902344]
[150.76603699 -297.57168579]
[160.79788208 -286.41992188]
[168.13674927 -273.33782959]
[172.42456055 -258.96371460]
[173.45210266 -243.99896240]
[171.17095947 -229.18008423]
[179.76951599 -241.47091675]
[188.36808777 -253.76176453]
[196.96664429 -266.05258179]
[205.56521606 -278.34344482]
[214.16377258 -290.63427734]
[222.76234436 -302.92510986]
[211.29600525 -312.61215210]
[200.75808716 -323.30172729]
[191.23588562 -334.90530396]
[182.80831909 -347.32672119]
[175.54522705 -360.46304321]
[169.50679016 -374.20538330]
[164.74304199 -388.43991089]
[161.29345703 -403.04867554]
[159.18661499 -417.91058350]
[158.43998718 -432.90249634]
[159.05976868 -447.90020752]
[161.04078674 -462.77941895]
[164.36666870 -477.41683960]
[169.00982666 -491.69116211]
[174.93179321 -505.48410034]
[182.08349609 -518.68139648]
[190.40568542 -531.17364502]
[199.82937622 -542.85736084]
[210.27648926 -553.63574219]
[221.66046143 -563.41943359]
[233.88694763 -572.12738037]
[246.85464478 -579.68737793]
[260.45608521 -586.03686523]
[274.57858276 -591.12316895]
[289.10507202 -594.90417480]
[303.91522217 -597.34857178]
[318.88626099 -598.43603516]
[333.89419556 -598.15759277]
[348.81460571 -596.51550293]
[363.52389526 -593.52343750]
[377.90014648 -589.20623779]
[391.82424927 -583.59954834]
[405.18078613 -576.74987793]
[417.85913086 -568.71405029]
[429.75418091 -559.55853271]
[440.76739502 -549.35931396]
[450.80752563 -538.20086670]
[459.79132080 -526.17559814]
[467.64437866 -513.38323975]
[474.30163574 -499.92974854]
[479.70788574 -485.92660522]
[483.81835938 -471.48989868]
[486.59896851 -456.73916626]
[488.02670288 -441.79672241]
[488.08972168 -426.78634644]
[486.78747559 -411.83242798]
[484.13082886 -397.05889893]
[480.14169312 -382.58816528]
[474.85321045 -368.54013062]
[468.30917358 -355.03121948]
[460.56378174 -342.17337036]
[451.68124390 -330.07312012]
[441.73519897 -318.83074951]
[430.80798340 -308.53942871]
[418.99023438 -299.28439331]
[406.37979126 -291.14236450]
[393.08123779 -284.18081665]
[379.20471191 -278.45742798]
[364.86520386 -274.01962280]
[350.18157959 -270.90417480]
[335.27545166 -269.13690186]
[320.27041626 -268.73248291]
[305.29074097 -269.69418335]
[290.46060181 -272.01412964]
[275.90286255 -275.67303467]
[261.73815918 -280.64059448]
[248.08389282 -286.87564087]
[235.05317688 -294.32653809]
[226.45462036 -282.03570557]
[217.85604858 -269.74487305]
[209.25749207 -257.45404053]
[200.65892029 -245.16319275]
[192.06036377 -232.87236023]
[183.46179199 -220.58151245]
[177.38795471 -206.86625671]
[174.06570435 -192.23878479]
[178.79194641 -178.11392212]
[168.19029236 -166.37017822]
[164.86804199 -151.74272156]
[161.54577637 -137.11526489]
[158.22352600 -122.48780060]
[154.90126038 -107.86034393]
[151.57899475 -93.23287964]
[148.25674438 -78.60542297]
[144.93447876 -63.97795868]
[149.66073608 -49.85309601]
[139.05908203 -38.10935211]
[143.78532410 -23.98448563]
[133.18367004 -12.24074268]
[129.86141968 2.38671780]
[126.53915405 17.01417732]
[123.21689606 31.64163780]
[119.89463806 46.26910019]
[133.12011719 53.24677658]
[144.08970642 63.40895081]
[152.05619812 76.06344604]
[156.47700500 90.34833527]
[157.05099487 105.29062653]
[153.73907471 119.87255096]
[146.76683044 133.10090637]
[136.60916138 144.07466125]
[123.95793915 152.04635620]
[109.67487335 156.47303772]
[94.73282623 157.05316162]
[91.41056824 171.68061829]
[88.08830261 186.30807495]
[84.76604462 200.93554688]
[89.25466156 216.10665894]
[78.89064026 226.80415344]
[83.37926483 241.97526550]
[73.01523590 252.67276001]
[69.69297791 267.30023193]
[75.54611206 284.75936890]
[63.13016129 297.16143799]
[60.02605057 311.83676147]
[56.92193985 326.51205444]
[70.13930511 333.84640503]
[80.60640717 344.75195312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[22 204]
[23 203]
[25 201]
[27 199]
[28 198]
[29 197]
[30 196]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[47 179]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[58 168]
[59 167]
[86 166]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
