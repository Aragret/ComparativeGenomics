%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[26.39480019 436.04241943]
[29.03853989 450.91479492]
[27.38378906 465.92941284]
[21.56468773 479.86907959]
[12.05296898 491.60382080]
[-0.38029808 500.18231201]
[-14.72720337 504.90914917]
[-29.82470703 505.40115356]
[-44.44892120 501.61840820]
[-57.41432953 493.86761475]
[-67.66988373 482.77706909]
[-74.38420868 469.24581909]
[-77.01300049 454.37081909]
[-75.34317017 439.35787964]
[-69.51007080 425.42404175]
[-59.98656464 413.69888306]
[-47.54468536 405.13287354]
[-33.19303894 400.42044067]
[-18.09504890 399.94363403]
[-14.33874893 385.42156982]
[-10.58244801 370.89950562]
[-6.82614756 356.37744141]
[-3.06984663 341.85537720]
[-15.45769882 350.31356812]
[-30.45421600 349.99029541]
[-42.46606445 341.00613403]
[-47.01312637 326.71191406]
[-42.39945602 312.43908691]
[-30.34584045 303.51101685]
[-15.34797955 303.25765991]
[-2.99970555 311.77355957]
[2.09342408 325.88360596]
[7.54878092 311.91079712]
[13.00413799 297.93798828]
[18.45949554 283.96520996]
[23.91485214 269.99240112]
[29.37020874 256.01959229]
[34.82556534 242.04679871]
[40.28092194 228.07400513]
[45.73628235 214.10121155]
[51.19163895 200.12841797]
[46.62348938 188.92758179]
[51.05408096 177.24197388]
[62.61822891 171.52941895]
[68.28101349 157.63938904]
[65.92105103 142.93293762]
[78.29563141 133.07492065]
[83.95841980 119.18489838]
[89.62120819 105.29486847]
[77.33456421 113.89942932]
[62.54552460 116.40628815]
[48.10962296 112.33140564]
[36.81419754 102.46157837]
[30.84022713 88.70252228]
[31.34118652 73.71088409]
[38.22035217 60.38132858]
[50.14945984 51.28757477]
[64.82518768 48.18548584]
[79.41388702 51.67402649]
[91.09870148 61.07961273]
[97.62348175 74.58617401]
[97.72811890 89.58705902]
[105.76929474 76.92453003]
[113.81047058 64.26200867]
[121.85163879 51.59947968]
[129.89280701 38.93695831]
[130.75920105 23.13949013]
[144.11360168 16.54332924]
[152.15476990 3.88080335]
[159.81536865 -9.01552391]
[167.08859253 -22.13421822]
[174.36183167 -35.25291061]
[181.63505554 -48.37160492]
[188.61351013 -61.64945221]
[195.29370117 -75.07982635]
[201.97389221 -88.51020050]
[208.65409851 -101.94058228]
[215.33428955 -115.37095642]
[202.41516113 -123.00599670]
[190.08062744 -131.55334473]
[178.39501953 -140.96846008]
[167.41925049 -151.20223999]
[157.21055603 -162.20133972]
[147.82212830 -173.90840149]
[139.30294800 -186.26239014]
[131.69740295 -199.19891357]
[125.04516602 -212.65051270]
[119.38090515 -226.54705811]
[114.73416901 -240.81610107]
[111.12916565 -255.38323975]
[108.58470154 -270.17254639]
[107.11403656 -285.10690308]
[106.72483826 -300.10842896]
[107.41914368 -315.09896851]
[109.19332123 -330.00030518]
[112.03813171 -344.73477173]
[115.93873596 -359.22558594]
[120.87479401 -373.39712524]
[126.82058716 -387.17556763]
[133.74510193 -400.48904419]
[141.61224365 -413.26815796]
[150.38099670 -425.44628906]
[160.00564575 -436.95993042]
[170.43598938 -447.74908447]
[181.61769104 -457.75744629]
[193.49241638 -466.93289185]
[205.99826050 -475.22753906]
[219.07005310 -482.59817505]
[232.63960266 -489.00637817]
[246.63619995 -494.41870117]
[260.98684692 -498.80694580]
[275.61672974 -502.14825439]
[290.44955444 -504.42517090]
[305.40805054 -505.62585449]
[320.41418457 -505.74401855]
[335.38970947 -504.77908325]
[350.25656128 -502.73602295]
[364.93725586 -499.62554932]
[379.35525513 -495.46383667]
[393.43533325 -490.27261353]
[407.10412598 -484.07891846]
[420.29037476 -476.91506958]
[432.92529297 -468.81838989]
[444.94305420 -459.83111572]
[456.28097534 -450.00009155]
[466.87997437 -439.37655640]
[476.68472290 -428.01589966]
[485.64419556 -415.97738647]
[493.71160889 -403.32376099]
[500.84494019 -390.12097168]
[507.00698853 -376.43789673]
[512.16564941 -362.34582520]
[516.29394531 -347.91827393]
[519.37048340 -333.23040771]
[521.37908936 -318.35885620]
[522.30938721 -303.38113403]
[522.15649414 -288.37533569]
[520.92120361 -273.41964722]
[518.60998535 -258.59213257]
[515.23486328 -243.97000122]
[510.81341553 -229.62954712]
[505.36871338 -215.64552307]
[498.92913818 -202.09083557]
[491.52828979 -189.03613281]
[483.20471191 -176.54951477]
[474.00183105 -164.69604492]
[463.96762085 -153.53753662]
[453.15438843 -143.13217163]
[441.61849976 -133.53419495]
[429.42010498 -124.79364014]
[416.62283325 -116.95608521]
[403.29336548 -110.06239319]
[389.50119019 -104.14849854]
[375.31826782 -99.24523163]
[360.81848145 -95.37816620]
[346.07745361 -92.56745911]
[331.17205811 -90.82775879]
[316.17996216 -90.16813660]
[301.17938232 -90.59204102]
[286.24847412 -92.09725952]
[271.46508789 -94.67593384]
[256.90631104 -98.31462860]
[242.64807129 -102.99436951]
[228.76466370 -108.69075775]
[222.08447266 -95.26038361]
[215.40428162 -81.83000946]
[208.72407532 -68.39963531]
[202.04388428 -54.96925735]
[202.81321716 -51.52825928]
[201.95410156 -47.54367065]
[199.22918701 -43.78492737]
[194.75375366 -41.09837723]
[187.48051453 -27.97968292]
[180.20729065 -14.86098766]
[172.93406677 -1.74229407]
[173.57597351 0.98645711]
[173.17567444 4.13389587]
[171.56828308 7.30433130]
[168.73503113 10.04974365]
[164.81729126 11.92197609]
[156.77612305 24.58450127]
[156.48489380 39.47625732]
[142.55534363 46.97813034]
[134.51416016 59.64065552]
[126.47299194 72.30317688]
[118.43181610 84.96570587]
[110.39064789 97.62822723]
[103.51123047 110.95765686]
[97.84844971 124.84768677]
[92.18566132 138.73771667]
[94.14058685 154.43766785]
[82.17104340 163.30216980]
[76.50825500 177.19219971]
[79.43637085 195.37207031]
[65.16443634 205.58377075]
[59.70907974 219.55656433]
[54.25372314 233.52935791]
[48.79836273 247.50216675]
[43.34300613 261.47497559]
[37.88764954 275.44775391]
[32.43229294 289.42056274]
[26.97693634 303.39334106]
[21.52157974 317.36614990]
[16.06622124 331.33895874]
[11.45221233 345.61169434]
[7.69591188 360.13372803]
[3.93961120 374.65579224]
[0.18331057 389.17785645]
[-3.57299018 403.69992065]
[9.40019703 411.43768311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[32 204]
[33 203]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[44 193]
[45 192]
[47 190]
[48 189]
[49 188]
[62 187]
[63 186]
[64 185]
[65 184]
[66 183]
[68 181]
[69 180]
[70 175]
[71 174]
[72 173]
[73 172]
[74 168]
[75 167]
[76 166]
[77 165]
[78 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
