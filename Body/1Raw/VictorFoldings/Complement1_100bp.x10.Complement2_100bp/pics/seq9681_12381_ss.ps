%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[80.13247681 584.14971924]
[66.86286163 577.11083984]
[54.60232544 568.43286133]
[43.55220795 558.25823975]
[33.89395142 546.75402832]
[25.78616142 534.10919189]
[19.36197281 520.53131104]
[14.72687531 506.24343872]
[11.95698261 491.48010254]
[11.09777927 476.48376465]
[12.16337299 461.50067139]
[15.13626671 446.77688599]
[19.96764183 432.55413818]
[26.57816505 419.06604004]
[34.85928345 406.53402710]
[44.67501068 395.16387939]
[55.86417007 385.14236450]
[68.24301910 376.63400269]
[81.60829926 369.77850342]
[95.74051666 364.68844604]
[110.40763092 361.44741821]
[109.06939697 346.50723267]
[107.73116302 331.56704712]
[106.39292908 316.62689209]
[104.61046600 301.73315430]
[102.38534546 286.89910889]
[100.16022491 272.06506348]
[97.93511200 257.23101807]
[95.70999146 242.39698792]
[93.48487854 227.56294250]
[90.81908417 212.80172729]
[87.71497345 198.12641907]
[84.61086273 183.45112610]
[81.50675201 168.77581787]
[77.78952789 183.30792236]
[71.26058960 196.81248474]
[62.17996979 208.75158691]
[50.90935135 218.64973450]
[37.89763641 226.11265564]
[23.66307831 230.84312439]
[8.77263260 232.65272522]
[-6.18061733 231.46939087]
[-20.60109138 227.34024048]
[-33.91442871 220.42973328]
[-45.59036255 211.01312256]
[-55.16384125 199.46545410]
[-62.25356674 186.24668884]
[-66.57714844 171.88331604]
[-67.96238708 156.94740295]
[-66.35409546 142.03387451]
[-61.81635284 127.73671722]
[-54.52987671 114.62537384]
[-44.78489685 103.22206879]
[-32.96954346 93.98099518]
[-19.55442429 87.27021790]
[-5.07385349 83.35702515]
[9.89541149 82.39727783]
[24.75715065 84.42919922]
[38.91942596 89.37186432]
[51.81816101 97.02841187]
[62.93960190 107.09387207]
[71.84078979 119.16735077]
[78.16719055 132.76795959]
[81.66625977 147.34986877]
[84.98851776 132.72239685]
[88.31077576 118.09494019]
[91.63304138 103.46748352]
[90.06100464 99.94596863]
[90.04882812 95.74861908]
[91.86354828 91.58763123]
[95.44406128 88.26802826]
[99.41616058 73.80350494]
[103.38825226 59.33897781]
[107.36035156 44.87445450]
[111.33245087 30.40992928]
[97.55676270 23.32110023]
[85.55465698 13.53358650]
[75.84630585 1.47460496]
[68.85186005 -12.33024311]
[64.87322235 -27.27988434]
[64.08106232 -42.72394562]
[66.50747681 -57.99104691]
[72.04467773 -72.41799164]
[80.44981384 -85.37855530]
[91.35560608 -96.31070709]
[104.28637695 -104.74094391]
[118.67883301 -110.30480957]
[133.90657043 -112.76266479]
[149.30735779 -112.01000214]
[153.06365967 -126.53205872]
[147.73295593 -144.15776062]
[160.51264954 -156.18464661]
[164.05232239 -170.76103210]
[167.59199524 -185.33740234]
[163.32974243 -200.57366943]
[173.85188293 -211.11566162]
[177.39155579 -225.69204712]
[180.93122864 -240.26841736]
[167.27871704 -246.60046387]
[155.12402344 -255.47456360]
[144.93435669 -266.54962158]
[137.10136414 -279.39993286]
[131.92616272 -293.53158569]
[129.60763550 -308.40136719]
[130.23490906 -323.43777466]
[133.78388977 -338.06277466]
[140.11814880 -351.71426392]
[148.99421692 -363.86752319]
[160.07092285 -374.05538940]
[172.92250061 -381.88629150]
[187.05499268 -387.05923462]
[201.92515564 -389.37533569]
[216.96144104 -388.74563599]
[231.58587646 -385.19427490]
[245.23634338 -378.85781860]
[257.38815308 -369.97979736]
[267.57424927 -358.90142822]
[275.40307617 -346.04858398]
[280.57369995 -331.91525269]
[282.88742065 -317.04470825]
[282.25527954 -302.00854492]
[278.70156860 -287.38467407]
[272.36288452 -273.73522949]
[263.48287964 -261.58483887]
[252.40287781 -251.40055847]
[239.54875183 -243.57382202]
[225.41459656 -238.40547180]
[210.54368591 -236.09416199]
[195.50761414 -236.72874451]
[191.96794128 -222.15237427]
[188.42826843 -207.57598877]
[192.94369507 -193.38232422]
[182.16836548 -181.79772949]
[178.62869263 -167.22135925]
[175.08901978 -152.64497375]
[181.11265564 -142.15487671]
[178.28298950 -129.98208618]
[167.58572388 -122.77575684]
[163.82942200 -108.25370026]
[176.91326904 -101.91018677]
[188.50711060 -93.12639618]
[198.16162109 -82.24030304]
[205.50219727 -69.67139435]
[210.24340820 -55.90451431]
[212.20016479 -41.47114182]
[211.29487610 -26.92891502]
[207.56063843 -12.84004688]
[201.13987732 0.25039166]
[192.27902222 11.83556366]
[181.31904602 21.46648979]
[168.68228149 28.76944733]
[154.85620117 33.46047211]
[140.37460327 35.35640335]
[125.79697418 34.38202667]
[121.82487488 48.84654999]
[117.85277557 63.31107330]
[113.88068390 77.77559662]
[109.90858459 92.24011993]
[106.26049805 106.78974152]
[102.93824005 121.41720581]
[99.61598206 136.04466248]
[96.29371643 150.67211914]
[96.18205261 165.67170715]
[99.28616333 180.34701538]
[102.39027405 195.02230835]
[105.49438477 209.69761658]
[108.50977325 212.82192993]
[110.20375061 216.38493347]
[110.60065460 219.91734314]
[109.87475586 223.00598145]
[108.31892395 225.33782959]
[110.54403687 240.17187500]
[112.76915741 255.00590515]
[114.99427032 269.83996582]
[117.21939087 284.67401123]
[119.44450378 299.50805664]
[122.26859283 302.80630493]
[123.74748993 306.46380615]
[123.93343353 310.01358032]
[123.02498627 313.05352783]
[121.33311462 315.28863525]
[122.67134857 330.22882080]
[124.00958252 345.16900635]
[125.34781647 360.10919189]
[140.35743713 360.69198608]
[155.16929626 363.18942261]
[169.54016113 367.56051636]
[183.23405457 373.73348999]
[196.02612305 381.60693359]
[207.70629883 391.05163574]
[218.08277893 401.91241455]
[226.98516846 414.01101685]
[234.26728821 427.14871216]
[239.80957031 441.10977173]
[243.52099609 455.66497803]
[245.34060669 470.57528687]
[245.23854065 485.59585571]
[243.21647644 500.48007202]
[239.30760193 514.98345947]
[233.57612610 528.86791992]
[226.11613464 541.90545654]
[217.05015564 553.88195801]
[206.52703857 564.60076904]
[194.71960449 573.88580322]
[181.82173157 581.58471680]
[168.04521179 587.57104492]
[153.61625671 591.74639893]
[138.77183533 594.04235840]
[123.75568390 594.42114258]
[108.81438446 592.87652588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 184]
[22 183]
[23 182]
[24 181]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 166]
[32 165]
[33 164]
[34 163]
[64 162]
[65 161]
[66 160]
[67 159]
[71 158]
[72 157]
[73 156]
[74 155]
[75 154]
[89 139]
[90 138]
[92 135]
[93 134]
[94 133]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
