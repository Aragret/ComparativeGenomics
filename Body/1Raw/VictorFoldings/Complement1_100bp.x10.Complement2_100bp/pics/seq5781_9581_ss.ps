%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[64.35150909 620.68682861]
[52.03678513 611.72766113]
[44.43638611 598.53088379]
[42.86713028 583.38305664]
[47.60090256 568.90856934]
[57.81754303 557.61517334]
[71.74696350 551.45959473]
[71.74696350 536.45959473]
[71.74696350 521.45959473]
[71.74696350 506.45959473]
[71.74696350 491.45959473]
[69.06327820 487.50906372]
[68.83281708 481.83068848]
[71.97693634 476.01467896]
[72.42354584 461.02130127]
[72.87015533 446.02795410]
[73.31675720 431.03460693]
[65.25267792 422.01812744]
[65.50205231 409.52325439]
[74.47648621 400.25921631]
[75.14627075 385.27416992]
[75.81605530 370.28915405]
[68.65477753 357.22906494]
[77.00056458 343.78814697]
[77.67034912 328.80313110]
[67.46083832 318.01879883]
[67.92662811 302.81231689]
[79.30744171 292.17675781]
[79.97722626 277.19171143]
[69.76771545 266.40737915]
[70.23350525 251.20089722]
[81.61431122 240.56533813]
[82.28409576 225.58030701]
[75.12281799 212.52023315]
[83.46860504 199.07931519]
[84.13838959 184.09426880]
[82.34840393 181.93693542]
[81.30512238 178.94058228]
[81.33238220 175.38606262]
[82.64648438 171.66615295]
[85.32047272 168.24508667]
[86.88099670 153.32647705]
[88.44152069 138.40788269]
[90.00204468 123.48927307]
[91.56256866 108.57066345]
[92.90080261 93.63047791]
[94.01644897 78.67202759]
[95.13209534 63.71357346]
[96.24774933 48.75511932]
[81.58258057 42.82608032]
[69.48227692 32.66788101]
[61.12361526 19.28411102]
[57.31462860 3.99126101]
[58.41652679 -11.71075439]
[64.30946350 -26.28571129]
[74.40544891 -38.31137466]
[87.70698547 -46.61827850]
[102.90562439 -50.40344620]
[103.79844666 -65.37685394]
[104.69126129 -80.35025787]
[105.58407593 -95.32366180]
[105.24909973 -110.31992340]
[103.68857574 -125.23852539]
[90.41777039 -133.06105042]
[84.36846161 -147.03457642]
[87.66818237 -161.71707153]
[98.84702301 -171.52378845]
[97.28649902 -186.44239807]
[95.72597504 -201.36099243]
[86.59496307 -214.28134155]
[92.96620178 -227.74449158]
[91.40567780 -242.66310120]
[89.84515381 -257.58169556]
[88.28462982 -272.50030518]
[86.72410583 -287.41891479]
[85.16358185 -302.33752441]
[73.83418274 -292.50671387]
[59.05736923 -295.08465576]
[51.72605896 -308.17098999]
[57.24462128 -322.11892700]
[71.54497528 -326.64660645]
[84.08457947 -318.41778564]
[83.63796997 -333.41113281]
[83.19136810 -348.40447998]
[80.44649506 -352.84439087]
[79.74891663 -357.43423462]
[80.81291962 -361.36907959]
[83.07471466 -364.07400513]
[75.54373169 -377.98782349]
[83.46966553 -390.59851074]
[83.58132935 -405.59808350]
[83.58132935 -420.59808350]
[83.58132935 -435.59808350]
[83.58132935 -450.59808350]
[69.00421143 -454.49295044]
[55.93235016 -462.02877808]
[45.25699997 -472.69177246]
[37.70603180 -485.75491333]
[33.79428101 -500.32751465]
[33.78845215 -515.41601562]
[37.68895340 -529.99157715]
[45.22983170 -543.06054688]
[55.89694214 -553.73181152]
[68.96298218 -561.27770996]
[83.53708649 -565.18383789]
[98.62557983 -565.18383789]
[113.19968414 -561.27770996]
[126.26572418 -553.73181152]
[136.93283081 -543.06054688]
[144.47370911 -529.99157715]
[148.37420654 -515.41601562]
[148.36839294 -500.32751465]
[144.45663452 -485.75491333]
[136.90567017 -472.69177246]
[126.23031616 -462.02877808]
[113.15845490 -454.49295044]
[98.58132935 -450.59808350]
[98.58132935 -435.59808350]
[98.58132935 -420.59808350]
[98.58132935 -405.59808350]
[101.72483063 -398.90927124]
[98.46800232 -390.37518311]
[106.01495361 -377.53411865]
[98.07305145 -363.85067749]
[98.18471527 -348.85107422]
[98.63132477 -333.85772705]
[99.07792664 -318.86437988]
[100.08219147 -303.89804077]
[101.64270782 -288.97943115]
[103.20323181 -274.06082153]
[104.76375580 -259.14221191]
[106.32427979 -244.22361755]
[107.88480377 -229.30500793]
[116.90419769 -217.45175171]
[110.64458466 -202.92152405]
[112.20510864 -188.00291443]
[113.76562500 -173.08430481]
[126.73188782 -165.80323792]
[132.99859619 -152.12141418]
[129.97192383 -137.19851685]
[118.60717773 -126.79904938]
[120.16770172 -111.88044739]
[127.29093170 -125.08119202]
[139.68113708 -133.53593445]
[154.57032776 -135.35586548]
[168.63220215 -130.13441467]
[178.72532654 -119.03806305]
[182.59483337 -104.54576111]
[179.37631226 -89.89512634]
[169.78874207 -78.35915375]
[155.97404480 -72.51499939]
[141.01844788 -73.66827393]
[128.26306152 -81.56132507]
[120.55747986 -94.43084717]
[119.66466522 -79.45744324]
[118.77185059 -64.48403931]
[117.87903595 -49.51063156]
[131.27400208 -44.63611603]
[142.76481628 -36.17437744]
[151.41442871 -24.80430222]
[156.51435852 -11.44240379]
[157.64268494 2.83107090]
[154.69897461 16.85946465]
[147.91314697 29.50344658]
[137.82749939 39.73353577]
[125.25344086 46.71392441]
[111.20619965 49.87076950]
[110.09055328 64.82922363]
[108.97490692 79.78767395]
[107.85925293 94.74613190]
[110.29347229 99.39247894]
[109.95115662 105.07192230]
[106.48117065 110.13118744]
[104.92064667 125.04979706]
[103.36012268 139.96839905]
[101.79960632 154.88700867]
[100.23908234 169.80560303]
[99.12342834 184.76406860]
[98.45364380 199.74909973]
[105.56701660 213.88099670]
[97.26913452 226.25009155]
[96.59934998 241.23512268]
[106.98591614 252.84361267]
[106.09319305 268.03103638]
[94.96226501 277.86148071]
[94.29248047 292.84652710]
[104.67904663 304.45501709]
[103.78631592 319.64245605]
[92.65538788 329.47290039]
[91.98560333 344.45794678]
[99.09897614 358.58984375]
[90.80109406 370.95892334]
[90.13130951 385.94396973]
[89.46152496 400.92901611]
[98.32431793 417.07003784]
[88.31010437 431.48123169]
[87.86350250 446.47457886]
[87.41689301 461.46792603]
[86.97029114 476.46127319]
[86.74696350 491.45959473]
[86.74696350 506.45959473]
[86.74696350 521.45959473]
[86.74696350 536.45959473]
[86.74696350 551.45959473]
[100.67637634 557.61517334]
[110.89302063 568.90856934]
[115.62679291 583.38305664]
[114.05754089 598.53088379]
[106.45713806 611.72766113]
[94.14241791 620.68682861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[14 199]
[15 198]
[16 197]
[17 196]
[20 194]
[21 193]
[22 192]
[24 190]
[25 189]
[28 186]
[29 185]
[32 182]
[33 181]
[35 179]
[36 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 170]
[47 169]
[48 168]
[49 167]
[58 157]
[59 156]
[60 155]
[61 154]
[62 142]
[63 141]
[67 137]
[68 136]
[69 135]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[82 127]
[83 126]
[84 125]
[88 124]
[90 122]
[91 120]
[92 119]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
