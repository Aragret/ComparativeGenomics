%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[54.05373383 890.33728027]
[39.05286789 890.69744873]
[24.05974960 890.09576416]
[9.13598442 888.53472900]
[-5.65709972 886.02069092]
[-20.25871468 882.56402588]
[-34.60886002 878.17889404]
[-48.64856339 872.88342285]
[-62.32013702 866.69927979]
[-75.56739807 859.65185547]
[-88.33591461 851.77020264]
[-100.57321167 843.08666992]
[-112.22901154 833.63690186]
[-123.25540924 823.45971680]
[-133.60710144 812.59704590]
[-143.24153137 801.09344482]
[-152.11914062 788.99615479]
[-160.20343018 776.35498047]
[-167.46118164 763.22174072]
[-173.86256409 749.65057373]
[-179.38128662 735.69708252]
[-183.99465942 721.41870117]
[-187.68374634 706.87402344]
[-190.43336487 692.12292480]
[-192.23220825 677.22595215]
[-193.07292175 662.24432373]
[-192.95201111 647.23962402]
[-191.87001038 632.27349854]
[-189.83132935 617.40747070]
[-186.84436035 602.70257568]
[-182.92140198 588.21929932]
[-178.07853699 574.01708984]
[-172.33567810 560.15435791]
[-165.71643066 546.68804932]
[-158.24798584 533.67352295]
[-149.96104431 521.16424561]
[-140.88966370 509.21160889]
[-131.07110596 497.86471558]
[-120.54571533 487.17025757]
[-109.35675049 477.17211914]
[-97.55019379 467.91140747]
[-85.17455292 459.42614746]
[-72.28069305 451.75128174]
[-58.92158508 444.91827393]
[-45.15213394 438.95523071]
[-31.02891731 433.88665771]
[-16.60997391 429.73336792]
[-1.95455348 426.51245117]
[12.87712097 424.23712158]
[27.82410431 422.91674805]
[42.82497406 422.55673218]
[57.81808472 423.15859985]
[59.37860870 408.23999023]
[60.93913269 393.32138062]
[62.49965286 378.40277100]
[64.06018066 363.48416138]
[65.62069702 348.56558228]
[67.18122101 333.64697266]
[68.74174500 318.72836304]
[59.30715561 309.95236206]
[56.60960007 297.15371704]
[61.85315704 284.95883179]
[73.32937622 277.90823364]
[75.11183929 263.01449585]
[64.16183472 250.24986267]
[65.86536407 233.17904663]
[79.65426636 222.41403198]
[81.21479034 207.49543762]
[82.77531433 192.57682800]
[84.33583832 177.65821838]
[74.78632355 166.28533936]
[76.15639496 151.13352966]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[91.68319702 82.31564331]
[91.60507965 77.67374420]
[93.18524933 73.91633606]
[95.78813934 71.53782654]
[98.01325989 56.70378494]
[100.23837280 41.86974335]
[102.46349335 27.03569984]
[104.35678101 12.15566444]
[98.09716797 -2.37457275]
[107.11656189 -14.22783279]
[108.67708588 -29.14643860]
[110.23760986 -44.06504440]
[111.79813385 -58.98364639]
[112.02146149 -73.98198700]
[110.90580750 -88.94043732]
[109.79016113 -103.89889526]
[95.05089569 -107.25231171]
[81.95571899 -114.80265808]
[71.66905212 -125.87857056]
[65.10557556 -139.49519348]
[62.84890747 -154.44172668]
[65.09970856 -169.38914490]
[71.65784454 -183.00833130]
[81.94017029 -194.08827209]
[95.03237915 -201.64376831]
[109.77033234 -205.00296021]
[124.84353638 -203.86717224]
[138.91168213 -198.33738708]
[150.72386169 -188.90531921]
[159.22972107 -176.40965271]
[163.67294312 -161.96150208]
[163.65843201 -146.84556580]
[159.18746948 -132.40597534]
[150.65762329 -119.92666626]
[138.82736206 -110.51729584]
[124.74861908 -105.01454163]
[125.86426544 -90.05608368]
[126.97991180 -75.09763336]
[134.14884949 -88.27360535]
[146.27392578 -97.10438538]
[161.01396179 -99.88488007]
[175.52290344 -96.07822418]
[186.99929810 -86.41942596]
[193.22723389 -72.77343750]
[193.00418091 -57.77509689]
[186.37322998 -44.32034302]
[174.61468506 -35.00708008]
[159.99896240 -31.63355064]
[145.34812927 -34.85113525]
[133.49101257 -44.03856277]
[126.71673584 -57.42312622]
[125.15621185 -42.50452042]
[123.59568787 -27.58591461]
[122.03517151 -12.66730976]
[128.40640259 0.79584825]
[119.27539062 13.71618748]
[121.19972229 16.67072105]
[121.78860474 20.70411491]
[120.55056000 25.17854691]
[117.29753876 29.26081657]
[115.07241821 44.09486008]
[112.84729767 58.92890549]
[110.62218475 73.76294708]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[112.74587250 154.96087646]
[110.95075226 170.06823730]
[99.25444031 179.21875000]
[97.69391632 194.13734436]
[96.13339996 209.05595398]
[94.57287598 223.97456360]
[104.20247650 233.39184570]
[106.61483002 246.44523621]
[101.14957428 258.32855225]
[90.00556183 264.79696655]
[88.22309113 279.69067383]
[99.28526306 293.24237061]
[97.16556549 310.26651001]
[83.66035461 320.28887939]
[82.09983063 335.20748901]
[80.53930664 350.12609863]
[78.97878265 365.04470825]
[77.41825867 379.96328735]
[75.85773468 394.88189697]
[74.29721069 409.80050659]
[72.73668671 424.71911621]
[87.52980042 427.23297119]
[102.13145447 430.68948364]
[116.48165131 435.07440186]
[130.52140808 440.36975098]
[144.19305420 446.55377197]
[157.44039917 453.60101318]
[170.20899963 461.48251343]
[182.44639587 470.16595459]
[194.10229492 479.61560059]
[205.12879944 489.79260254]
[215.48060608 500.65518188]
[225.11518860 512.15869141]
[233.99291992 524.25585938]
[242.07734680 536.89697266]
[249.33523560 550.03009033]
[255.73678589 563.60125732]
[261.25564575 577.55462646]
[265.86920166 591.83300781]
[269.55844116 606.37756348]
[272.30819702 621.12866211]
[274.10723877 636.02563477]
[274.94808960 651.00720215]
[274.82736206 666.01190186]
[273.74551392 680.97808838]
[271.70700073 695.84411621]
[268.72021484 710.54907227]
[264.79739380 725.03240967]
[259.95468140 739.23461914]
[254.21199036 753.09741211]
[247.59289551 766.56384277]
[240.12460327 779.57843018]
[231.83779907 792.08782959]
[222.76654053 804.04052734]
[212.94810486 815.38751221]
[202.42283630 826.08215332]
[191.23399353 836.08038330]
[179.42753601 845.34124756]
[167.05198669 853.82659912]
[154.15820312 861.50164795]
[140.79917908 868.33477783]
[127.02979279 874.29797363]
[112.90663147 879.36669922]
[98.48773193 883.52014160]
[83.83235168 886.74127197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[63 156]
[64 155]
[67 151]
[68 150]
[69 149]
[70 148]
[73 145]
[74 144]
[75 143]
[77 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 133]
[87 131]
[88 130]
[89 129]
[90 128]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
