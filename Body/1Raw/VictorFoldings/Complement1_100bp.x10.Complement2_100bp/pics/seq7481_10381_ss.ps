%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[60.39428329 874.76916504]
[45.41797256 873.83697510]
[30.53341103 871.93725586]
[15.80303192 869.07812500]
[1.28862071 865.27142334]
[-12.94894505 860.53320312]
[-26.84994698 854.88336182]
[-40.35607910 848.34552002]
[-53.41069412 840.94714355]
[-65.95903015 832.71923828]
[-77.94846344 823.69635010]
[-89.32869720 813.91632080]
[-100.05200195 803.42016602]
[-110.07340240 792.25189209]
[-119.35086060 780.45831299]
[-127.84546661 768.08898926]
[-135.52159119 755.19573975]
[-142.34703064 741.83264160]
[-148.29316711 728.05578613]
[-153.33505249 713.92285156]
[-157.45155334 699.49328613]
[-160.62538147 684.82745361]
[-162.84323120 669.98699951]
[-164.09580994 655.03405762]
[-164.37785339 640.03143311]
[-163.68818665 625.04199219]
[-162.02970886 610.12860107]
[-159.40934753 595.35388184]
[-155.83813477 580.77978516]
[-151.33100891 566.46734619]
[-145.90690613 552.47674561]
[-139.58854675 538.86651611]
[-132.40246582 525.69384766]
[-124.37878418 513.01397705]
[-115.55115509 500.88006592]
[-105.95661163 489.34301758]
[-95.63539886 478.45120239]
[-84.63080597 468.25033569]
[-72.98898315 458.78317261]
[-60.75876999 450.08944702]
[-47.99145889 442.20562744]
[-34.74060440 435.16476440]
[-21.06178284 428.99639893]
[-7.01237011 423.72640991]
[7.34870577 419.37686157]
[21.96120834 415.96606445]
[36.76385117 413.50827026]
[51.69453812 412.01379395]
[66.69065094 411.48892212]
[67.13726044 396.49557495]
[67.58386230 381.50222778]
[68.03047180 366.50888062]
[68.47707367 351.51553345]
[68.92368317 336.52218628]
[69.37028503 321.52883911]
[69.81689453 306.53549194]
[66.87393951 299.75604248]
[70.38341522 291.32269287]
[71.05319977 276.33764648]
[68.95642090 273.50289917]
[68.12850952 269.51171875]
[69.09803772 264.97152710]
[72.10231781 260.70288086]
[73.44055176 245.76268005]
[74.77878571 230.82249451]
[76.11701965 215.88230896]
[77.45525360 200.94212341]
[78.79348755 186.00193787]
[65.78468323 193.46994019]
[51.77967834 188.09779358]
[47.10244751 173.84565735]
[55.20086670 161.21966553]
[70.10507965 159.52723694]
[80.82769012 170.01441956]
[83.27342224 155.21514893]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[100.26290131 42.15876389]
[99.37008667 27.18535805]
[90.82510376 13.87018585]
[97.79114532 0.70494622]
[96.89833069 -14.26845932]
[96.00551605 -29.24186516]
[95.11270142 -44.21527100]
[91.47805023 -52.59543610]
[94.31974030 -59.41793823]
[93.64995575 -74.40297699]
[92.98017120 -89.38801575]
[92.31038666 -104.37305450]
[77.67749786 -108.16382599]
[64.81293488 -116.10072327]
[54.86059570 -127.47800446]
[48.70544434 -141.28399658]
[46.89479065 -156.29109192]
[49.58963776 -171.16487122]
[56.55036163 -184.58276367]
[67.15802002 -195.35165405]
[80.46938324 -202.51399231]
[95.30081177 -205.43289185]
[110.33351135 -203.84881592]
[124.23078918 -197.90263367]
[135.75689697 -188.12304688]
[143.88694763 -175.37966919]
[147.89802551 -160.80563354]
[147.43345642 -145.69683838]
[142.53456116 -131.39675903]
[133.63694763 -119.17694855]
[121.53176880 -110.12397766]
[107.29542542 -105.04283905]
[107.96520996 -90.05780029]
[108.63499451 -75.07276154]
[109.30477905 -60.08772278]
[110.08610535 -45.10808563]
[110.97891998 -30.13468170]
[111.87173462 -15.16127491]
[112.76454926 -0.18786962]
[121.24567413 12.05630493]
[114.34349060 26.29254341]
[115.23631287 41.26594925]
[121.87028503 27.81268311]
[132.86672974 17.61080742]
[146.77886963 12.00255394]
[161.77630615 11.72578335]
[175.88589478 16.81690979]
[187.25126648 26.60610962]
[194.37710571 39.80544281]
[196.32588196 54.67831421]
[192.84121704 69.26793671]
[184.38157654 81.65479279]
[172.05995178 90.20919037]
[157.49748230 93.80564117]
[142.61010742 91.97097015]
[129.35650635 84.94656372]
[119.48043823 73.65660095]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[98.07269287 157.66087341]
[95.62696075 172.46014404]
[93.73367310 187.34017944]
[92.39543915 202.28036499]
[91.05720520 217.22055054]
[89.71897125 232.16073608]
[88.38073730 247.10092163]
[87.04250336 262.04110718]
[86.03823853 277.00744629]
[85.36845398 291.99249268]
[84.81024170 306.98208618]
[84.36363983 321.97543335]
[83.91703033 336.96878052]
[83.47042847 351.96215820]
[83.02381897 366.95550537]
[82.57721710 381.94885254]
[82.13060760 396.94219971]
[81.68400574 411.93554688]
[96.62229156 413.35205078]
[111.43755341 415.73257446]
[126.06765747 419.06707764]
[140.45124817 423.34158325]
[154.52796936 428.53820801]
[168.23880005 434.63510132]
[181.52621460 441.60668945]
[194.33450317 449.42379761]
[206.60992432 458.05355835]
[218.30099487 467.45980835]
[229.35867310 477.60311890]
[239.73658752 488.44091797]
[249.39122009 499.92773438]
[258.28204346 512.01538086]
[266.37179565 524.65325928]
[273.62652588 537.78820801]
[280.01583862 551.36523438]
[285.51287842 565.32739258]
[290.09463501 579.61608887]
[293.74188232 594.17138672]
[296.43930054 608.93225098]
[298.17559814 623.83673096]
[298.94348145 638.82238770]
[298.73974609 653.82629395]
[297.56521606 668.78552246]
[295.42486572 683.63739014]
[292.32760620 698.31958008]
[288.28649902 712.77044678]
[283.31842041 726.92944336]
[277.44427490 740.73718262]
[270.68865967 754.13568115]
[263.07992554 767.06884766]
[254.65000916 779.48236084]
[245.43421936 791.32415771]
[235.47125244 802.54455566]
[224.80287170 813.09655762]
[213.47383118 822.93585205]
[201.53166199 832.02124023]
[189.02642822 840.31445312]
[176.01060486 847.78088379]
[162.53878784 854.38909912]
[148.66744995 860.11145020]
[134.45481873 864.92395020]
[119.96046448 868.80627441]
[105.24520874 871.74230957]
[90.37076569 873.71966553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[58 156]
[59 155]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[80 142]
[81 141]
[82 140]
[83 124]
[84 123]
[86 121]
[87 120]
[88 119]
[89 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
