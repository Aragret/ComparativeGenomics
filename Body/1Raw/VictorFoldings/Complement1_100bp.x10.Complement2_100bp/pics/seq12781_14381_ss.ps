%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[0.60591769 681.45996094]
[-9.77870083 692.29772949]
[-21.08053398 702.17529297]
[-33.21112823 711.01531982]
[-46.07554245 718.74865723]
[-59.57309341 725.31475830]
[-73.59814453 730.66223145]
[-88.04093170 734.74926758]
[-102.78840637 737.54382324]
[-117.72515869 739.02404785]
[-132.73428345 739.17834473]
[-147.69831848 738.00549316]
[-162.50012207 735.51470947]
[-177.02388000 731.72552490]
[-191.15589905 726.66748047]
[-204.78559875 720.38031006]
[-217.80627441 712.91308594]
[-230.11604309 704.32427979]
[-241.61856079 694.68115234]
[-252.22380066 684.05914307]
[-261.84875488 672.54144287]
[-270.41809082 660.21813965]
[-277.86474609 647.18566895]
[-284.13046265 633.54608154]
[-289.16613770 619.40606689]
[-292.93243408 604.87634277]
[-295.39984131 590.07061768]
[-296.54904175 575.10479736]
[-296.37103271 560.09594727]
[-294.86724854 545.16149902]
[-292.04943848 530.41845703]
[-287.93963623 515.98217773]
[-282.57000732 501.96557617]
[-275.98260498 488.47839355]
[-268.22897339 475.62619019]
[-259.36981201 463.50958252]
[-249.47441101 452.22335815]
[-238.62025452 441.85586548]
[-226.89228821 432.48822021]
[-214.38229370 424.19378662]
[-201.18818665 417.03744507]
[-187.41323853 411.07522583]
[-173.16523743 406.35379028]
[-158.55569458 402.91006470]
[-143.69897461 400.77102661]
[-128.71134949 399.95339966]
[-113.71010590 400.46359253]
[-98.81266022 402.29760742]
[-84.13559723 405.44113159]
[-69.79380035 409.86947632]
[-55.89950943 415.54806519]
[-49.02009583 402.21862793]
[-42.14068604 388.88922119]
[-35.26127243 375.55978394]
[-28.38186073 362.23034668]
[-21.50244713 348.90090942]
[-14.92241955 335.42120361]
[-8.64505959 321.79788208]
[-2.36769843 308.17456055]
[3.90966225 294.55123901]
[10.18702316 280.92791748]
[16.46438408 267.30459595]
[14.76344967 252.50744629]
[27.56587219 243.21182251]
[33.84323502 229.58851624]
[40.12059402 215.96519470]
[33.62790298 200.45120239]
[40.49983215 184.73207092]
[56.93151474 178.73046875]
[63.00534821 165.01519775]
[69.07917786 151.29992676]
[75.15301514 137.58467102]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[85.08428955 93.52693176]
[98.74255371 83.78895569]
[104.61151123 69.98477936]
[110.48047638 56.18060303]
[96.20061493 60.77252197]
[82.79384613 54.04508209]
[77.94017029 39.85206223]
[84.41999054 26.32387161]
[98.52136993 21.21007156]
[112.16640472 27.44008064]
[117.53862000 41.44411469]
[117.22764587 25.62596321]
[130.05445862 18.05481720]
[137.13156128 4.82928991]
[136.82058716 -10.98886013]
[149.64739990 -18.56000710]
[140.73634338 -30.90320396]
[138.07894897 -45.83053589]
[142.14955139 -60.37186813]
[152.08920288 -71.65744781]
[165.88623047 -77.48425293]
[180.78321838 -76.74589539]
[187.86032104 -89.97142792]
[194.93742371 -103.19695282]
[202.01454163 -116.42248535]
[189.83097839 -125.21136475]
[178.92762756 -135.54579163]
[169.49905396 -147.24131775]
[161.71351624 -160.08923340]
[155.70997620 -173.86026001]
[151.59555054 -188.30860901]
[149.44369507 -203.17645264]
[149.29277039 -218.19845581]
[151.14550781 -233.10653687]
[154.96882629 -247.63464355]
[160.69450378 -261.52349854]
[168.22035217 -274.52523804]
[177.41204834 -286.40780640]
[188.10559082 -296.95919800]
[200.11010742 -305.99108887]
[213.21138000 -313.34228516]
[227.17561340 -318.88159180]
[241.75357056 -322.51016235]
[256.68508911 -324.16323853]
[271.70373535 -323.81134033]
[286.54147339 -321.46072388]
[300.93347168 -317.15332031]
[314.62292480 -310.96603394]
[327.36550903 -303.00930786]
[338.93383789 -293.42507935]
[349.12142944 -282.38439941]
[357.74649048 -270.08435059]
[364.65512085 -256.74438477]
[369.72399902 -242.60260010]
[372.86264038 -227.91136169]
[374.01510620 -212.93287659]
[373.16076660 -197.93441772]
[370.31488037 -183.18368530]
[365.52825928 -168.94389343]
[358.88629150 -155.46917725]
[350.50753784 -143.00001526]
[340.54153442 -131.75892639]
[329.16610718 -121.94653320]
[316.58428955 -113.73793793]
[303.02059937 -107.27963257]
[288.71710205 -102.68688202]
[273.92904663 -100.04164124]
[258.92037964 -99.39112091]
[243.95892334 -100.74692535]
[229.31167603 -104.08486938]
[215.24006653 -109.34537506]
[208.16296387 -96.11985016]
[201.08584595 -82.89431763]
[194.00874329 -69.66879272]
[202.88783264 -57.68433762]
[205.69454956 -42.97271729]
[201.81959534 -28.44186783]
[191.97975159 -16.98770142]
[178.08610535 -10.91698837]
[162.87292480 -11.48290062]
[163.69009399 3.38927102]
[150.35708618 11.90639591]
[143.27998352 25.13192368]
[144.09715271 40.00409317]
[130.76414490 48.52122116]
[124.28465271 62.04956436]
[118.41568756 75.85374451]
[112.54673004 89.65792084]
[116.24458313 100.70178986]
[111.60806274 111.38560486]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[88.86827850 143.65849304]
[82.79444885 157.37376404]
[76.72061157 171.08903503]
[70.64678192 184.80430603]
[76.91272736 196.72706604]
[75.19289398 209.88961792]
[66.33730316 219.51565552]
[53.74391174 222.24255371]
[47.46654892 235.86587524]
[41.18918991 249.48918152]
[42.44112396 265.26077271]
[30.08769989 273.58197021]
[23.81033897 287.20529175]
[17.53297806 300.82861328]
[11.25561810 314.45190430]
[4.97825718 328.07522583]
[-1.29910374 341.69854736]
[-0.81875330 346.89627075]
[-2.23824501 351.31649780]
[-4.94327497 354.36572266]
[-8.17301846 355.78033447]
[-15.05243111 369.10977173]
[-21.93184280 382.43920898]
[-28.81125641 395.76861572]
[-35.69067001 409.09805298]
[-42.57007980 422.42749023]
[-29.89221001 430.46298218]
[-17.97413635 439.58752441]
[-6.90913534 449.72967529]
[3.21619201 460.81008911]
[12.32260036 472.74200439]
[20.33881760 485.43206787]
[27.20210457 498.78097534]
[32.85874939 512.68420410]
[37.26447296 527.03295898]
[40.38479996 541.71496582]
[42.19530869 556.61529541]
[42.68182755 571.61730957]
[41.84054947 586.60363770]
[39.67805862 601.45697021]
[36.21127701 616.06103516]
[31.46734238 630.30157471]
[25.48337936 644.06713867]
[18.30622292 657.24993896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 192]
[52 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[64 176]
[65 175]
[66 174]
[69 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[76 162]
[77 161]
[78 160]
[85 159]
[87 157]
[88 156]
[90 154]
[96 148]
[97 147]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
