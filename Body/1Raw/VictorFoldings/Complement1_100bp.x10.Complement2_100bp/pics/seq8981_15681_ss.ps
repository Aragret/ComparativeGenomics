%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[89.85928345 594.72045898]
[74.87986755 599.20947266]
[60.54003143 592.97222900]
[53.61059952 578.95379639]
[57.36343765 563.77319336]
[70.02657318 554.59832764]
[70.91938782 539.62487793]
[71.81220245 524.65148926]
[72.70501709 509.67807007]
[73.59783173 494.70468140]
[74.26761627 479.71963501]
[74.71422577 464.72628784]
[75.16083527 449.73294067]
[75.60743713 434.73959351]
[76.05404663 419.74624634]
[76.50064850 404.75289917]
[76.94725800 389.75952148]
[77.39385986 374.76617432]
[75.25511169 371.96295166]
[74.36786652 367.98452759]
[75.26969147 363.43041992]
[78.21008301 359.11749268]
[79.32572937 344.15905762]
[80.44137573 329.20059204]
[78.05895233 325.06137085]
[78.25147247 319.38159180]
[81.81945801 313.81555176]
[83.37998199 298.89694214]
[84.94050598 283.97833252]
[78.56927490 270.51516724]
[87.70028687 257.59481812]
[80.32916260 248.00352478]
[81.50716400 235.56182861]
[91.14576721 226.99093628]
[92.92823792 212.09721375]
[94.48875427 197.17861938]
[95.82698822 182.23843384]
[97.16522217 167.29824829]
[97.16522217 152.29824829]
[95.82698822 137.35806274]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[90.78962708 77.34691620]
[89.67398071 62.38846588]
[76.02212524 58.32917023]
[64.59980774 49.87151718]
[56.76695633 38.04783249]
[53.44746017 24.28964424]
[55.02023697 10.25438213]
[61.27610397 -2.37430000]
[71.44533539 -12.08848286]
[84.29229736 -17.73603439]
[83.39948273 -32.70944214]
[82.50666809 -47.68284607]
[67.89064026 -51.53372192]
[55.19768906 -59.70265579]
[45.66405869 -71.37905884]
[40.21366501 -85.41145325]
[39.36854935 -100.42106628]
[43.19890976 -114.93724060]
[51.31746674 -127.54157257]
[62.91856003 -137.00650024]
[76.85810089 -142.41482544]
[75.96528625 -157.38822937]
[75.07247162 -172.36164856]
[74.17965698 -187.33505249]
[73.28683472 -202.30845642]
[71.94860077 -217.24864197]
[62.62623596 -230.03160095]
[68.79631805 -243.58811951]
[59.47395325 -256.37109375]
[65.64403534 -269.92761230]
[63.86156845 -284.82131958]
[54.53920364 -297.60427856]
[60.70928574 -311.16079712]
[51.50739288 -299.31491089]
[36.87094498 -296.03247070]
[23.49153328 -302.81414795]
[17.48604202 -316.55947876]
[21.60010147 -330.98428345]
[33.95281982 -339.49371338]
[48.89669800 -338.19738770]
[59.60040665 -327.68627930]
[59.37707901 -342.68463135]
[59.15375137 -357.68295288]
[58.93042374 -372.68130493]
[58.70709610 -387.67962646]
[43.89104080 -390.30282593]
[29.83926582 -395.68280029]
[17.05973434 -403.62509155]
[6.01441860 -413.84259033]
[-2.89740133 -425.96597290]
[-9.35356808 -439.55691528]
[-13.12069607 -454.12420654]
[-14.06260490 -469.14117432]
[-12.14524555 -484.06497192]
[-7.43792963 -498.35614014]
[-0.11082339 -511.49807739]
[9.57120228 -523.01568604]
[21.25815010 -532.49255371]
[34.52754211 -539.58618164]
[48.89969635 -544.04016113]
[63.85507584 -545.69335938]
[78.85304260 -544.48614502]
[93.35144043 -540.46209717]
[106.82615662 -533.76666260]
[118.79008484 -524.64196777]
[128.81072998 -513.41772461]
[136.52587891 -500.49978638]
[141.65661621 -486.35510254]
[144.01745605 -471.49499512]
[143.52307129 -456.45663452]
[140.19134521 -441.78366089]
[134.14268494 -428.00650024]
[125.59577942 -415.62316895]
[114.85957336 -405.08132935]
[102.32218170 -396.76208496]
[88.43681335 -390.96609497]
[73.70542908 -387.90295410]
[73.92875671 -372.90463257]
[74.15208435 -357.90628052]
[74.37541199 -342.90795898]
[74.59873962 -327.90960693]
[75.60300446 -312.94326782]
[84.79787445 -301.22561646]
[78.75528717 -286.60379028]
[80.53775024 -271.71008301]
[89.73262787 -259.99240112]
[83.69004059 -245.37059021]
[92.88491058 -233.65292358]
[86.84232330 -219.03111267]
[88.96010590 -217.19448853]
[90.47798157 -214.40834045]
[91.03064728 -210.89694214]
[90.34065247 -207.01255798]
[88.26024628 -203.20126343]
[89.15306091 -188.22785950]
[90.04587555 -173.25445557]
[90.93869019 -158.28105164]
[91.83150482 -143.30764771]
[106.31496429 -139.59408569]
[118.95858002 -131.57479858]
[128.51739502 -120.02450562]
[134.04559326 -106.06635284]
[134.99006653 -91.06266785]
[131.24578857 -76.48201752]
[123.16722107 -63.75545883]
[111.53492737 -54.13609314]
[97.48007202 -48.57566071]
[98.37288666 -33.60225677]
[99.26570129 -18.62885094]
[114.31928253 -13.67751980]
[126.34944916 -3.30331087]
[133.49475098 10.92762470]
[134.63464355 26.84944916]
[129.56507874 42.02624512]
[119.03426361 54.12469864]
[104.63243866 61.27281570]
[105.74808502 76.23126984]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[110.76717377 136.01982117]
[112.10540771 150.96000671]
[119.07738495 137.67875671]
[131.06964111 128.66844177]
[145.76664734 125.66879272]
[160.33065796 129.25901794]
[171.94958496 138.74588013]
[178.37998962 152.29762268]
[178.38026428 167.29762268]
[171.95036316 180.84960938]
[160.33180237 190.33691406]
[145.76792908 193.92767334]
[131.07080078 190.92857361]
[119.07820892 181.91870117]
[112.10540771 168.63647461]
[110.76717377 183.57666016]
[109.42893982 198.51684570]
[111.85966492 204.66528320]
[110.95606995 210.27603149]
[107.82195282 213.87968445]
[106.03948212 228.77340698]
[113.67721558 245.52890015]
[102.61888885 259.15536499]
[108.87850952 273.68560791]
[99.85910797 285.53884888]
[98.29859161 300.45745850]
[96.73806763 315.37606812]
[95.39983368 330.31625366]
[94.28417969 345.27468872]
[93.16853333 360.23315430]
[92.38721466 375.21279907]
[91.94060516 390.20614624]
[91.49399567 405.19949341]
[91.04739380 420.19284058]
[90.60078430 435.18618774]
[90.15418243 450.17953491]
[89.70757294 465.17288208]
[89.26097107 480.16622925]
[92.05333710 486.15908813]
[91.48530579 491.81365967]
[88.57124329 495.59750366]
[87.67842102 510.57089233]
[86.78560638 525.54431152]
[85.89279175 540.51770020]
[84.99997711 555.49108887]
[96.48312378 566.10577393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[22 194]
[23 193]
[24 192]
[27 191]
[28 190]
[29 189]
[31 187]
[34 185]
[35 184]
[36 181]
[37 180]
[38 179]
[39 166]
[40 165]
[41 164]
[42 163]
[44 162]
[45 161]
[46 160]
[54 153]
[55 152]
[56 151]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 133]
[72 131]
[74 129]
[75 128]
[77 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
