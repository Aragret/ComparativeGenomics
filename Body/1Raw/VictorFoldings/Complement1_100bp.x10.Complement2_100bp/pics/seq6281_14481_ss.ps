%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[83.74565887 293.63381958]
[79.54725647 308.04101562]
[74.33175659 322.11196899]
[68.12572479 335.77499390]
[60.96079254 348.96047974]
[52.87347031 361.60122681]
[43.90496826 373.63281250]
[34.10098648 384.99392700]
[23.51148987 395.62670898]
[12.19043732 405.47692871]
[0.19551843 414.49444580]
[-12.41214180 422.63323975]
[-25.56829834 429.85189819]
[-39.20590973 436.11358643]
[-53.25547791 441.38641357]
[-67.64540863 445.64355469]
[-82.30238342 448.86325073]
[-97.15170288 451.02911377]
[-112.11769867 452.13012695]
[-127.12410736 452.16067505]
[-142.09446716 451.12057495]
[-156.95246887 449.01516724]
[-171.62242126 445.85516357]
[-186.02957153 441.65664673]
[-200.10047913 436.44104004]
[-213.76347351 430.23489380]
[-226.94889832 423.06985474]
[-239.58958435 414.98245239]
[-251.62110901 406.01385498]
[-262.98214722 396.20977783]
[-273.61483765 385.62020874]
[-283.46499634 374.29907227]
[-292.48239136 362.30407715]
[-300.62109375 349.69638062]
[-307.83966064 336.54016113]
[-314.10122681 322.90249634]
[-319.37396240 308.85287476]
[-323.63098145 294.46292114]
[-326.85055542 279.80593872]
[-329.01632690 264.95660400]
[-330.11721802 249.99058533]
[-330.14764404 234.98417664]
[-329.10745239 220.01382446]
[-327.00192261 205.15583801]
[-323.84179688 190.48590088]
[-319.64318848 176.07879639]
[-314.42745972 162.00791931]
[-308.22122192 148.34498596]
[-301.05609131 135.15960693]
[-292.96856689 122.51898193]
[-283.99987793 110.48752594]
[-274.19573975 99.12654877]
[-263.60607910 88.49394226]
[-252.28486633 78.64389038]
[-240.28981018 69.62657928]
[-227.68202209 61.48796463]
[-214.52575684 54.26952362]
[-200.88804626 48.00803375]
[-186.83839417 42.73540878]
[-172.44839478 38.47850800]
[-157.79138184 35.25903320]
[-142.94203186 33.09338760]
[-127.97601318 31.99260139]
[-112.96960449 31.96228981]
[-97.99926758 33.00260544]
[-83.14128876 35.10824966]
[-68.47138214 38.26848984]
[-54.06430435 42.46722031]
[-39.99346924 47.68304825]
[-26.33057785 53.88939285]
[-13.14525795 61.05462646]
[-0.50469792 69.14224243]
[11.52668858 78.11102295]
[22.88759232 87.91526031]
[33.52011871 98.50500488]
[43.37008667 109.82627869]
[52.38730621 121.82141113]
[64.98961639 113.68619537]
[77.59192657 105.55097961]
[90.19424438 97.41576385]
[94.72015381 90.74578094]
[103.04529572 89.25485992]
[115.76733398 81.30818176]
[128.48936462 73.36149597]
[141.21141052 65.41481018]
[153.93344116 57.46812439]
[162.20144653 41.01450729]
[179.75027466 41.08964539]
[192.35258484 32.95442963]
[185.01406860 19.86654472]
[178.50341797 6.34774446]
[172.84582520 -7.54967117]
[168.06318665 -21.77193451]
[164.17398071 -36.26402283]
[161.19326782 -50.96987152]
[159.13259888 -65.83258057]
[157.99990845 -80.79464722]
[157.79960632 -95.79819489]
[158.53245544 -110.78517151]
[160.19563293 -125.69759369]
[162.78269958 -140.47776794]
[166.28363037 -155.06852722]
[170.68490601 -169.41339111]
[175.96946716 -183.45689392]
[182.11689758 -197.14468384]
[189.10340881 -210.42381287]
[196.90196228 -223.24288940]
[205.48239136 -235.55235291]
[214.81150818 -247.30455017]
[224.85319519 -258.45404053]
[235.56863403 -268.95764160]
[246.91633606 -278.77478027]
[258.85244751 -287.86743164]
[271.33071899 -296.20043945]
[284.30294800 -303.74154663]
[297.71887207 -310.46157837]
[311.52667236 -316.33453369]
[325.67285156 -321.33770752]
[340.10272217 -325.45175171]
[354.76043701 -328.66073608]
[369.58932495 -330.95223999]
[384.53198242 -332.31738281]
[399.53060913 -332.75091553]
[414.52716064 -332.25115967]
[429.46362305 -330.82003784]
[444.28225708 -328.46307373]
[458.92565918 -325.18939209]
[473.33721924 -321.01165771]
[487.46118164 -315.94607544]
[501.24288940 -310.01217651]
[514.62902832 -303.23297119]
[527.56781006 -295.63464355]
[540.00915527 -287.24661255]
[551.90502930 -278.10134888]
[563.20922852 -268.23422241]
[573.87817383 -257.68338013]
[583.87054443 -246.48965454]
[593.14764404 -234.69636536]
[601.67364502 -222.34913635]
[609.41552734 -209.49574280]
[616.34332275 -196.18588257]
[622.43023682 -182.47108459]
[627.65277100 -168.40438843]
[631.99060059 -154.04022217]
[635.42712402 -139.43415833]
[637.94885254 -124.64269257]
[639.54614258 -109.72306824]
[640.21282959 -94.73300934]
[639.94628906 -79.73049164]
[638.74749756 -64.77356720]
[636.62121582 -49.92010498]
[633.57562256 -35.22756577]
[629.62243652 -20.75279236]
[624.77703857 -6.55178785]
[619.05810547 7.32050800]
[612.48785400 20.81042480]
[605.09161377 33.86577606]
[596.89801025 46.43604660]
[587.93878174 58.47260666]
[578.24859619 69.92889404]
[567.86492920 80.76057434]
[556.82788086 90.92575073]
[545.18023682 100.38510132]
[532.96704102 109.10201263]
[520.23559570 117.04277802]
[507.03503418 124.17666626]
[493.41653442 130.47607422]
[479.43273926 135.91664124]
[465.13772583 140.47731018]
[450.58685303 144.14044189]
[435.83639526 146.89186096]
[420.94342041 148.72093201]
[405.96551514 149.62055969]
[390.96066284 149.58726501]
[375.98690796 148.62120056]
[361.10220337 146.72608948]
[346.36407471 143.90925598]
[331.82958984 140.18161011]
[317.55499268 135.55757141]
[303.59545898 130.05502319]
[290.00500488 123.69525909]
[276.83624268 116.50287628]
[264.14013672 108.50571442]
[251.96572876 99.73470306]
[240.36018372 90.22377777]
[229.36836243 80.00973511]
[219.03282166 69.13208771]
[209.39353943 57.63293076]
[200.48780823 45.55673981]
[187.88549805 53.69195557]
[185.03251648 65.44725800]
[174.59989929 72.32798004]
[161.88012695 70.19016266]
[149.15809631 78.13684845]
[136.43605042 86.08353424]
[123.71401978 94.03021240]
[110.99198151 101.97689819]
[98.32946014 110.01807404]
[85.72714233 118.15328979]
[73.12483215 126.28850555]
[60.52252197 134.42372131]
[67.74126434 147.57981873]
[74.00306702 161.21737671]
[79.27601624 175.26690674]
[83.53324890 189.65681458]
[86.75305939 204.31376648]
[88.91905212 219.16305542]
[90.02017975 234.12904358]
[90.05083466 249.13545227]
[89.01086426 264.10580444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 201]
[78 200]
[79 199]
[80 198]
[82 197]
[83 196]
[84 195]
[85 194]
[86 193]
[88 190]
[89 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
