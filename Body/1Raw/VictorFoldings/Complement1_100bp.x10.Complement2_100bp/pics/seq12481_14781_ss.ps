%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[95.49687958 480.55477905]
[80.53778076 481.88204956]
[65.52669525 481.43072510]
[50.67435837 479.20712280]
[36.18927383 475.24243164]
[22.27478790 469.59234619]
[9.12623978 462.33618164]
[-3.07178569 453.57577515]
[-14.14804745 443.43414307]
[-23.94705200 432.05361938]
[-32.33123779 419.59402466]
[-39.18289948 406.23022461]
[-44.40585709 392.14984131]
[-47.92678452 377.55056763]
[-49.69625473 362.63729858]
[-49.68942642 347.61941528]
[-47.90639496 332.70779419]
[-44.37219238 318.11169434]
[-39.13643265 304.03607178]
[-32.27262115 290.67849731]
[-23.87710762 278.22653198]
[-14.06775761 266.85494995]
[-2.98227787 256.72338867]
[9.22370911 247.97409058]
[22.37884903 240.72987366]
[36.29846573 235.09243774]
[50.78715134 231.14094543]
[65.64150238 228.93083191]
[80.65299225 228.49314880]
[81.99122620 213.55296326]
[83.32946014 198.61277771]
[84.66769409 183.67259216]
[86.00592804 168.73240662]
[87.34416199 153.79222107]
[88.68239594 138.85203552]
[90.02062988 123.91184998]
[91.35886383 108.97166443]
[83.36315918 121.66294861]
[72.15399170 131.63063049]
[58.61535263 138.08859253]
[43.81496429 140.52754211]
[28.92004585 138.75515747]
[15.10527039 132.91117859]
[3.46013093 123.45651245]
[-5.09698915 111.13678741]
[-9.89123917 96.92358398]
[-10.54452515 81.93781281]
[-7.00532627 67.36132050]
[0.44724157 54.34367371]
[11.22543812 43.91148758]
[24.47924995 36.88749313]
[39.16342545 33.82563400]
[54.11991119 34.96737671]
[68.16917419 40.22268295]
[80.20323181 49.17709351]
[89.27302551 61.12442780]
[94.66327667 75.12246704]
[95.94869232 90.07073975]
[101.61148071 76.18070984]
[107.27426910 62.29068756]
[112.93705750 48.40065765]
[118.59984589 34.51063156]
[124.26262665 20.62060547]
[113.03759003 30.57040215]
[99.84308624 37.70518875]
[85.37128448 41.65068436]
[70.38134766 42.19992447]
[55.65960693 39.32409286]
[41.97834396 33.17404556]
[30.05524826 24.07241058]
[20.51578140 12.49663448]
[13.86036587 -0.94603777]
[10.43812943 -15.55043125]
[10.42859840 -30.55042839]
[13.83227062 -45.15916061]
[20.47059631 -58.61027908]
[29.99534416 -70.19816589]
[41.90686035 -79.31494904]
[55.58029938 -85.48237610]
[70.29837036 -88.37692261]
[85.28899384 -87.84673309]
[99.76580048 -83.91963196]
[112.96936035 -76.80162048]
[124.20703888 -66.86609650]
[132.88932800 -54.63425827]
[138.56077576 -40.74776840]
[140.92387390 -25.93507957]
[139.85466003 -10.97323513]
[135.40853882 3.35441184]
[145.73519897 -7.52492285]
[156.06187439 -18.40425682]
[166.38854980 -29.28359222]
[176.71520996 -40.16292572]
[187.04188538 -51.04225922]
[197.36854553 -61.92159271]
[207.69522095 -72.80092621]
[197.76425171 -84.05585480]
[188.86685181 -96.14445496]
[181.07269287 -108.97209930]
[174.44274902 -122.43840790]
[169.02890015 -136.43797302]
[164.87355042 -150.86123657]
[162.00918579 -165.59532166]
[160.45825195 -180.52490234]
[160.23287964 -195.53312683]
[161.33482361 -210.50253296]
[163.75546265 -225.31597900]
[167.47586060 -239.85751343]
[172.46688843 -254.01333618]
[178.68949890 -267.67263794]
[186.09498596 -280.72854614]
[194.62536621 -293.07885742]
[204.21391296 -304.62689209]
[214.78555298 -315.28231812]
[226.25756836 -324.96170044]
[238.54016113 -333.58932495]
[251.53721619 -341.09759521]
[265.14697266 -347.42782593]
[279.26296997 -352.53042603]
[293.77468872 -356.36547852]
[308.56857300 -358.90298462]
[323.52880859 -360.12304688]
[338.53836060 -360.01611328]
[353.47970581 -358.58306885]
[368.23593140 -355.83508301]
[382.69152832 -351.79370117]
[396.73339844 -346.49053955]
[410.25161743 -339.96707153]
[423.14038086 -332.27438354]
[435.29882812 -323.47268677]
[446.63180542 -313.63085938]
[457.05056763 -302.82592773]
[466.47363281 -291.14245605]
[474.82723999 -278.67187500]
[482.04595947 -265.51181030]
[488.07336426 -251.76524353]
[492.86221313 -237.53976440]
[496.37509155 -222.94670105]
[498.58447266 -208.10028076]
[499.47305298 -193.11668396]
[499.03390503 -178.11318970]
[497.27044678 -163.20722961]
[494.19650269 -148.51544189]
[489.83609009 -134.15283203]
[484.22335815 -120.23181152]
[477.40225220 -106.86132050]
[469.42614746 -94.14600372]
[460.35745239 -82.18538666]
[450.26715088 -71.07306671]
[439.23422241 -60.89602661]
[427.34503174 -51.73390961]
[414.69259644 -43.65842819]
[401.37594604 -36.73278046]
[387.49929810 -31.01117134]
[373.17129517 -26.53838158]
[358.50405884 -23.34941864]
[343.61236572 -21.46924019]
[328.61276245 -20.91255951]
[313.62268066 -21.68373680]
[298.75939941 -23.77673340]
[284.13928223 -27.17517090]
[269.87670898 -31.85244942]
[256.08334351 -37.77196121]
[242.86712646 -44.88738251]
[230.33148193 -53.14302063]
[218.57455444 -62.47425842]
[208.24787903 -51.59492493]
[197.92121887 -40.71559143]
[187.59454346 -29.83625793]
[177.26788330 -18.95692253]
[166.94120789 -8.07758808]
[156.61454773 2.80174589]
[146.28787231 13.68107986]
[138.15264893 26.28339195]
[132.48986816 40.17341995]
[126.82707977 54.06344604]
[121.16429901 67.95347595]
[115.50151062 81.84349823]
[109.83872223 95.73352814]
[106.29904938 110.30989838]
[104.96081543 125.25008392]
[103.62258148 140.19027710]
[102.28434753 155.13046265]
[100.94611359 170.07064819]
[99.60787964 185.01083374]
[98.26964569 199.95101929]
[96.93141174 214.89120483]
[95.59317780 229.83137512]
[110.28791809 232.92993164]
[124.51302338 237.74476624]
[138.06880188 244.20829773]
[150.76495361 252.22978210]
[162.42324829 261.69659424]
[172.88000488 272.47586060]
[181.98843384 284.41625977]
[189.62068176 297.35012817]
[195.66958618 311.09594727]
[200.05023193 325.46069336]
[202.70112610 340.24273682]
[203.58505249 355.23458862]
[202.68960571 370.22573853]
[200.02735901 385.00573730]
[195.63568115 399.36712646]
[189.57621765 413.10827637]
[181.93403625 426.03628540]
[172.81643677 437.96966553]
[162.35139465 448.74090576]
[150.68585205 458.19876099]
[137.98353577 466.21047974]
[124.42279816 472.66360474]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 188]
[30 187]
[31 186]
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[37 180]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[89 173]
[90 172]
[91 171]
[92 170]
[93 169]
[94 168]
[95 167]
[96 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
