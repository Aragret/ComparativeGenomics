%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[15.06285763 497.35351562]
[16.66509819 512.30920410]
[15.57093716 527.31060791]
[11.81554699 541.87554932]
[5.51964855 555.53576660]
[-3.11437130 567.85217285]
[-13.80896473 578.42883301]
[-26.22034454 586.92572021]
[-39.94953537 593.06976318]
[-54.55520248 596.66339111]
[-69.56783295 597.59112549]
[-84.50483704 595.82312012]
[-98.88603973 591.41625977]
[-112.24916077 584.51214600]
[-124.16461945 575.33270264]
[-134.24938965 564.17309570]
[-142.17927551 551.39196777]
[-147.69938660 537.40026855]
[-150.63224792 522.64770508]
[-150.88360596 507.60852051]
[-148.44535828 492.76620483]
[-143.39590454 478.59783936]
[-135.89755249 465.55886841]
[-126.19132996 454.06848145]
[-114.58927917 444.49600220]
[-101.46434021 437.14920044]
[-87.23842621 432.26419067]
[-72.36885071 429.99801636]
[-57.33360291 430.42358398]
[-42.61600494 433.52713013]
[-36.95321655 419.63708496]
[-31.29043198 405.74707031]
[-25.62764549 391.85705566]
[-19.96485901 377.96701050]
[-14.30207157 364.07699585]
[-8.63928509 350.18695068]
[-2.97649837 336.29693604]
[2.68628812 322.40692139]
[8.34907436 308.51687622]
[5.98910904 293.81042480]
[18.36369133 283.95242310]
[15.04260349 266.72055054]
[29.68216515 255.55073547]
[35.13752365 241.57794189]
[40.59288025 227.60514832]
[46.04823685 213.63233948]
[51.50359344 199.65954590]
[46.93544388 188.45872498]
[51.36603546 176.77310181]
[62.93018723 171.06054688]
[68.59297180 157.17051697]
[74.25576019 143.28048706]
[79.91854858 129.39047241]
[85.58132935 115.50044250]
[78.83472443 100.43886566]
[84.95119476 85.11057281]
[100.21349335 78.83124542]
[105.66885376 64.85845184]
[111.12420654 50.88565063]
[116.57956696 36.91285324]
[122.03491974 22.94005585]
[127.49028015 8.96725845]
[132.94563293 -5.00553942]
[137.87722778 -19.17167473]
[142.27822876 -33.51152039]
[146.67922974 -47.85136795]
[151.08023071 -62.19121552]
[146.54185486 -80.03735352]
[159.84584045 -91.48161316]
[164.03285217 -105.88539886]
[160.45518494 -121.29678345]
[171.43756104 -131.35842896]
[175.62457275 -145.76220703]
[179.81158447 -160.16600037]
[183.99859619 -174.56977844]
[188.18560791 -188.97355652]
[192.37261963 -203.37733459]
[183.66806030 -218.55133057]
[188.53515625 -235.00205994]
[203.49377441 -242.68830872]
[207.46588135 -257.15283203]
[211.43797302 -271.61734009]
[197.40559387 -276.94998169]
[183.94364929 -283.59234619]
[171.17407227 -291.48428345]
[159.21250916 -300.55435181]
[148.16728210 -310.72033691]
[138.13842773 -321.89025879]
[129.21675110 -333.96289062]
[121.48307037 -346.82891846]
[115.00742340 -360.37185669]
[109.84844208 -374.46899414]
[106.05285645 -388.99270630]
[103.65504456 -403.81146240]
[102.67671967 -418.79101562]
[103.12673187 -433.79577637]
[105.00102234 -448.68978882]
[108.28260803 -463.33819580]
[112.94176483 -477.60833740]
[118.93630981 -491.37097168]
[126.21194458 -504.50146484]
[134.70277405 -516.88092041]
[144.33192444 -528.39715576]
[155.01216125 -538.94598389]
[166.64678955 -548.43176270]
[179.13041687 -556.76867676]
[192.34999084 -563.88116455]
[206.18580627 -569.70483398]
[220.51255798 -574.18688965]
[235.20046997 -577.28686523]
[250.11656189 -578.97656250]
[265.12573242 -579.24072266]
[280.09204102 -578.07702637]
[294.87994385 -575.49584961]
[309.35556030 -571.52075195]
[323.38775635 -566.18756104]
[336.84942627 -559.54473877]
[349.61871338 -551.65234375]
[361.57995605 -542.58184814]
[372.62481689 -532.41540527]
[382.65325928 -521.24517822]
[391.57449341 -509.17221069]
[399.30770874 -496.30587769]
[405.78286743 -482.76272583]
[410.94134521 -468.66537476]
[414.73638916 -454.14154053]
[417.13366699 -439.32269287]
[418.11145020 -424.34307861]
[417.66088867 -409.33837891]
[415.78604126 -394.44442749]
[412.50393677 -379.79611206]
[407.84423828 -365.52615356]
[401.84921265 -351.76373291]
[394.57308960 -338.63351440]
[386.08181763 -326.25436401]
[376.45223999 -314.73846436]
[365.77160645 -304.19006348]
[354.13665771 -294.70468140]
[341.65270996 -286.36822510]
[328.43286133 -279.25622559]
[314.59686279 -273.43307495]
[300.26995850 -268.95150757]
[285.58190918 -265.85211182]
[270.66577148 -264.16293335]
[255.65658569 -263.89929199]
[240.69032288 -265.06359863]
[225.90249634 -267.64526367]
[221.93040466 -253.18072510]
[217.95829773 -238.71620178]
[225.83572388 -228.51936340]
[226.41038513 -215.45214844]
[219.24864197 -204.27540588]
[206.77639771 -199.19033813]
[202.58938599 -184.78654480]
[198.40237427 -170.38276672]
[194.21536255 -155.97898865]
[190.02835083 -141.57519531]
[185.84133911 -127.17141724]
[189.71849060 -112.79028320]
[178.43663025 -101.69838715]
[174.24961853 -87.29460144]
[179.79884338 -76.54598999]
[176.42845154 -64.51169586]
[165.42007446 -57.79021835]
[161.01907349 -43.45037079]
[156.61807251 -29.11052322]
[152.21707153 -14.77067661]
[166.48971558 -19.38496780]
[179.07984924 -11.23090744]
[180.70648193 3.68063307]
[170.17053223 14.35742188]
[155.23870850 12.92892742]
[146.91842651 0.44981775]
[141.46307373 14.42261600]
[136.00772095 28.39541435]
[130.55236816 42.36820984]
[125.09700775 56.34100723]
[119.64164734 70.31380463]
[114.18629456 84.28660583]
[120.62014771 95.20718384]
[119.66225433 107.84585571]
[111.65598297 117.67200470]
[99.47135925 121.16323090]
[93.80857086 135.05325317]
[88.14578247 148.94328308]
[82.48300171 162.83331299]
[76.82021332 176.72332764]
[79.74832916 194.90319824]
[65.47638702 205.11489868]
[60.02103424 219.08770752]
[54.56567764 233.06050110]
[49.11032104 247.03329468]
[43.65496445 261.00610352]
[48.10953522 273.11062622]
[43.27809525 284.63629150]
[32.25371933 289.61520386]
[34.20864487 305.31518555]
[22.23910141 314.17965698]
[16.57631493 328.06970215]
[10.91352844 341.95971680]
[5.25074196 355.84976196]
[-0.41204464 369.73977661]
[-6.07483101 383.62979126]
[-11.73761749 397.51983643]
[-17.40040398 411.40985107]
[-23.06319046 425.29989624]
[-28.72597694 439.18991089]
[-16.03359985 447.26104736]
[-4.98649549 457.46896362]
[4.06021595 469.48547363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 207]
[31 206]
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[41 196]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[50 187]
[51 186]
[52 185]
[53 184]
[54 183]
[57 179]
[58 178]
[59 177]
[60 176]
[61 175]
[62 174]
[63 173]
[64 167]
[65 166]
[66 165]
[67 164]
[69 161]
[70 160]
[72 158]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[80 149]
[81 148]
[82 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
