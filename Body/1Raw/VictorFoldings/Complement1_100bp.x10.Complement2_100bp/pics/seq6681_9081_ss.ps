%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[27.86983681 685.24975586]
[14.24715424 691.57635498]
[-0.06105597 696.14562988]
[-14.82913399 698.88555908]
[-29.82416534 699.75286865]
[-44.80965805 698.73394775]
[-59.54927063 695.84478760]
[-73.81053162 691.13104248]
[-87.36853027 684.66699219]
[-100.00942993 676.55456543]
[-111.53386688 666.92181396]
[-121.76007843 655.92053223]
[-130.52679443 643.72430420]
[-137.69575500 630.52545166]
[-143.15386963 616.53216553]
[-146.81507874 601.96514893]
[-148.62164307 587.05407715]
[-148.54504395 572.03417969]
[-146.58651733 557.14233398]
[-142.77693176 542.61340332]
[-137.17639160 528.67651367]
[-129.87319946 515.55145264]
[-120.98255157 503.44525146]
[-110.64467621 492.54885864]
[-99.02259827 483.03411865]
[-86.29962158 475.05105591]
[-72.67640686 468.72561646]
[-58.36781311 464.15753174]
[-43.59950256 461.41885376]
[-28.60439873 460.55279541]
[-13.61899185 461.57299805]
[-10.73371887 446.85311890]
[-7.84844637 432.13320923]
[-4.96317387 417.41333008]
[-2.07790112 402.69345093]
[0.80737144 387.97354126]
[3.69264412 373.25366211]
[-4.80415297 361.07415771]
[-2.08776689 346.10501099]
[10.74481583 337.27536011]
[13.63008881 322.55548096]
[16.51536179 307.83557129]
[6.98897076 319.42211914]
[-5.74873781 327.34365845]
[-20.35352325 330.76422119]
[-35.28410721 329.32281494]
[-48.96483231 323.17156982]
[-59.95193863 312.95965576]
[-67.08592224 299.76470947]
[-69.61392975 284.97927856]
[-67.26917267 270.16366577]
[-60.29908752 256.88143921]
[-49.43925095 246.53425598]
[-35.83573151 240.21411133]
[-20.92413521 238.58798218]
[-6.27812052 241.82746887]
[6.55668354 249.59069824]
[16.22579002 261.05841064]
[21.70879364 275.02038574]
[22.42704010 290.00335693]
[28.90653610 276.47500610]
[35.38603210 262.94668579]
[41.66339493 249.32336426]
[47.73722839 235.60809326]
[53.81106186 221.89282227]
[59.05778122 207.84034729]
[63.45877838 193.50050354]
[67.85977936 179.16065979]
[72.26077271 164.82081604]
[76.66177368 150.48095703]
[81.06276703 136.14111328]
[85.46376801 121.80126953]
[89.86476898 107.46142578]
[93.94443512 93.02687073]
[97.70073700 78.50481415]
[98.92771149 63.55507660]
[89.99007416 50.50022507]
[96.56105042 37.13341522]
[95.22280884 22.19322968]
[84.28302002 7.38099098]
[92.28210449 -8.23891926]
[90.72158051 -23.15752411]
[89.16105652 -38.07612991]
[87.60053253 -52.99473190]
[85.92899323 -67.90130615]
[84.14653015 -82.79502106]
[82.36405945 -97.68874359]
[73.04169464 -110.47170258]
[79.21177673 -124.02822876]
[64.24855042 -125.86267853]
[50.15938950 -131.22541809]
[37.76342010 -139.80467224]
[27.78133202 -151.10162354]
[20.79346848 -164.45951843]
[17.20609474 -179.10173035]
[17.22777557 -194.17697144]
[20.85725021 -208.80879211]
[27.88350677 -222.14653015]
[37.89804840 -233.41473389]
[50.31863785 -241.95828247]
[64.42316437 -247.28048706]
[79.39160919 -249.07188416]
[94.35372162 -247.22836304]
[108.43962860 -241.85708618]
[120.83039093 -233.27032471]
[130.80563354 -221.96731567]
[137.78540039 -208.60519409]
[141.36389160 -193.96081543]
[141.33306885 -178.88558960]
[137.69473267 -164.25596619]
[130.66038513 -150.92248535]
[120.63901520 -139.66035461]
[108.21324158 -131.12432861]
[94.10549164 -125.81069183]
[103.30036926 -114.09303284]
[97.25778198 -99.47120667]
[99.04024506 -84.57749176]
[100.82270813 -69.68377686]
[104.73877716 -63.41590118]
[102.51913452 -54.55525589]
[104.07965851 -39.63665009]
[105.64018250 -24.71804619]
[107.20070648 -9.79944229]
[116.39710236 -1.94114363]
[117.81929779 10.47502041]
[110.16299438 20.85499573]
[111.50122833 35.79518127]
[120.34314728 47.78141403]
[113.86789703 62.21684265]
[119.32563019 48.24497223]
[128.04502869 36.03956223]
[139.49290466 26.34697533]
[152.96919250 19.75991631]
[167.64984131 16.68118858]
[182.63711548 17.29905510]
[197.01452637 21.57573700]
[209.90290833 29.24970818]
[220.51409912 39.85170746]
[228.19926453 52.73341751]
[232.48841858 67.10710907]
[233.11929321 82.09384155]
[230.05329895 96.77715302]
[223.47793579 110.25916290]
[213.79528809 121.71543884]
[201.59744263 130.44543457]
[187.63032532 135.91528320]
[172.74800110 137.79052734]
[157.86054993 135.95648193]
[143.87832642 130.52529907]
[131.65637207 121.82910919]
[121.94206238 110.39967346]
[115.32940674 96.93591309]
[112.22279358 82.26110840]
[108.46649170 96.78317261]
[109.93298340 100.34992981]
[109.82017517 104.54577637]
[107.88237762 108.65089417]
[104.20461273 111.86241913]
[99.80361176 126.20227051]
[95.40261841 140.54211426]
[91.00161743 154.88195801]
[86.60062408 169.22181702]
[82.19962311 183.56166077]
[77.79862213 197.90150452]
[73.39762878 212.24134827]
[86.15080261 204.34474182]
[101.11792755 205.33732605]
[112.71662903 214.84889221]
[116.62088776 229.33187866]
[111.37450409 243.38447571]
[98.93424988 251.76541138]
[83.94003296 251.34881592]
[71.98432922 242.29005432]
[67.52632904 227.96665955]
[61.45249557 241.68193054]
[55.37865829 255.39718628]
[55.70198822 262.00076294]
[53.04127121 267.02246094]
[48.91437912 269.42617798]
[42.43488312 282.95452881]
[35.95538712 296.48284912]
[31.23525238 310.72085571]
[28.34997940 325.44073486]
[25.46470642 340.16064453]
[34.01434326 353.18142700]
[30.87857628 368.06838989]
[18.41253471 376.13894653]
[15.52726269 390.85882568]
[12.64199066 405.57870483]
[9.75671768 420.29861450]
[6.87144518 435.01849365]
[3.98617244 449.73840332]
[1.10089970 464.45828247]
[15.36256027 469.17083740]
[28.92110062 475.63375854]
[41.56268311 483.74508667]
[53.08792877 493.37689209]
[63.31507111 504.37728882]
[72.08281708 516.57281494]
[79.25287628 529.77105713]
[84.71217346 543.76385498]
[88.37461090 558.33056641]
[90.18241882 573.24151611]
[90.10709381 588.26141357]
[88.14981842 603.15344238]
[84.34146118 617.68267822]
[78.74208832 631.62005615]
[71.44000244 644.74572754]
[62.55038071 656.85266113]
[52.21341705 667.74993896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[40 184]
[41 183]
[42 182]
[60 181]
[61 180]
[62 179]
[63 176]
[64 175]
[65 174]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[71 160]
[72 159]
[73 158]
[74 154]
[75 153]
[76 129]
[78 127]
[79 126]
[81 123]
[82 122]
[83 121]
[84 120]
[85 118]
[86 117]
[87 116]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
