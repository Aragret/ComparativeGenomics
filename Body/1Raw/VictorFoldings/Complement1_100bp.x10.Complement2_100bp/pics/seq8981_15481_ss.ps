%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[132.15895081 297.11294556]
[130.49696350 282.19882202]
[129.90318298 267.20413208]
[130.38061523 252.20529175]
[131.92684937 237.27873230]
[134.53399658 222.50050354]
[138.18878174 207.94592285]
[142.87255859 193.68914795]
[148.56147766 179.80284119]
[155.22654724 166.35777283]
[162.83380127 153.42242432]
[150.47929382 144.91560364]
[138.12477112 136.40876770]
[125.77027130 127.90194702]
[120.99448395 127.87187195]
[116.18688202 124.84136200]
[113.17971039 118.95336914]
[101.08396149 110.08247375]
[93.23825836 108.23384857]
[88.87548065 100.98835754]
[76.91313934 91.93836212]
[64.95080566 82.88835907]
[52.98846817 73.83836365]
[41.02613449 64.78836060]
[29.06379700 55.73836136]
[34.98018265 69.52227783]
[35.59055328 84.50984955]
[30.81460381 98.72921753]
[21.28068733 110.30956268]
[8.24315929 117.72730255]
[-6.58267164 120.00650024]
[-21.24621201 116.84729004]
[-33.81821823 108.66532135]
[-42.64463043 96.53707123]
[-46.56418228 82.05821991]
[-45.06118774 67.13371277]
[-38.33338928 53.72711945]
[-27.26594925 43.60231018]
[-13.31497574 38.09137726]
[1.68403804 37.91938400]
[15.75976181 43.11016464]
[0.95282501 37.53654861]
[-1.32534575 22.81720161]
[-10.98615646 11.34250069]
[-20.64696693 -0.13219945]
[-30.30777740 -11.60689926]
[-39.96858597 -23.08160019]
[-52.26008606 -14.46668720]
[-65.26487732 -6.97182178]
[-78.88117981 -0.65566051]
[-93.00242615 4.43236208]
[-107.51810455 8.25242519]
[-122.31459045 10.77463150]
[-137.27609253 11.97923946]
[-152.28550720 11.85682201]
[-167.22537231 10.40833759]
[-181.97875977 7.64512300]
[-196.43019104 3.58880353]
[-210.46656799 -1.72887337]
[-223.97804260 -8.26628876]
[-236.85885620 -15.97227859]
[-249.00819397 -24.78653145]
[-260.33099365 -34.64006042]
[-270.73861694 -45.45574951]
[-280.14959717 -57.14894867]
[-288.49029541 -69.62814331]
[-295.69543457 -82.79566193]
[-301.70861816 -96.54844666]
[-306.48281860 -110.77886963]
[-309.98059082 -125.37554932]
[-312.17465210 -140.22424316]
[-313.04776001 -155.20875549]
[-312.59310913 -170.21177673]
[-310.81423950 -185.11592102]
[-307.72512817 -199.80451965]
[-303.34988403 -214.16261292]
[-297.72277832 -228.07783508]
[-290.88787842 -241.44126892]
[-282.89862061 -254.14834595]
[-273.81759644 -266.09957886]
[-263.71582031 -277.20147705]
[-252.67239380 -287.36712646]
[-240.77372742 -296.51693726]
[-228.11294556 -304.57934570]
[-214.78915405 -311.49124146]
[-200.90663147 -317.19851685]
[-186.57400513 -321.65652466]
[-171.90347290 -324.83032227]
[-157.00984192 -326.69512939]
[-142.00968933 -327.23629761]
[-127.02040100 -326.44964600]
[-112.15929413 -324.34130859]
[-97.54267883 -320.92776489]
[-83.28495789 -316.23574829]
[-69.49771118 -310.30200195]
[-56.28884888 -303.17294312]
[-43.76174927 -294.90435791]
[-32.01445770 -285.56097412]
[-21.13891029 -275.21591187]
[-11.22022820 -263.95016479]
[-2.33603930 -251.85186768]
[5.44412518 -239.01571655]
[12.05937290 -225.54217529]
[17.45792961 -211.53671265]
[21.59754562 -197.10891724]
[24.44581985 -182.37171936]
[25.98046112 -167.44046021]
[26.18945694 -152.43199158]
[25.07117462 -137.46379089]
[22.63436508 -122.65300751]
[18.89809799 -108.11553955]
[13.89161873 -93.96517181]
[7.65410900 -80.31266022]
[0.23438603 -67.26485443]
[-8.30947876 -54.92386246]
[-17.91061783 -43.38628387]
[-28.49388695 -32.74240875]
[-18.83307648 -21.26770973]
[-9.17226601 -9.79300976]
[0.48854396 1.68169022]
[10.14935398 13.15639019]
[24.26528549 17.90925980]
[27.23446083 33.44935608]
[38.11379623 43.77602386]
[50.07613373 52.82602310]
[62.03847122 61.87602234]
[74.00080872 70.92602539]
[85.96314240 79.97602081]
[97.92547607 89.02602386]
[109.95485687 97.98671722]
[122.05060577 106.85761261]
[134.27709961 115.54743958]
[146.63160706 124.05426788]
[158.98611450 132.56109619]
[171.34062195 141.06791687]
[180.71098328 129.34658813]
[190.89366150 118.32360077]
[201.83677673 108.05512238]
[213.48454285 98.59348297]
[225.77763367 89.98690033]
[238.65338135 82.27922821]
[252.04620361 75.50974274]
[265.88781738 69.71294403]
[280.10769653 64.91837311]
[294.63342285 61.15045547]
[309.39089966 58.42839432]
[324.30499268 56.76606369]
[339.29965210 56.17193222]
[354.29852295 56.64902496]
[369.22512817 58.19491577]
[384.00341797 60.80172348]
[398.55807495 64.45616913]
[412.81494141 69.13961792]
[426.70138550 74.82822418]
[440.14663696 81.49298096]
[453.08212280 89.09992981]
[465.44201660 97.61032104]
[477.16326904 106.98076630]
[488.18618774 117.16352844]
[498.45458984 128.10671997]
[507.91613770 139.75456238]
[516.52264404 152.04771423]
[524.23016357 164.92353821]
[530.99957275 178.31639099]
[536.79626465 192.15806580]
[541.59069824 206.37799072]
[545.35852051 220.90371704]
[548.08050537 235.66123962]
[549.74267578 250.57533264]
[550.33673096 265.57000732]
[549.85949707 280.56884766]
[548.31347656 295.49545288]
[545.70660400 310.27371216]
[542.05200195 324.82836914]
[537.36846924 339.08520508]
[531.67974854 352.97158813]
[525.01489258 366.41677856]
[517.40783691 379.35223389]
[508.89736938 391.71203613]
[499.52682495 403.43322754]
[489.34396362 414.45605469]
[478.40069580 424.72436523]
[466.75277710 434.18582153]
[454.45956421 442.79223633]
[441.58370972 450.49969482]
[428.19079590 457.26898193]
[414.34909058 463.06558228]
[400.12911987 467.85992432]
[385.60336304 471.62762451]
[370.84582520 474.34945679]
[355.93170166 476.01156616]
[340.93701172 476.60546875]
[325.93817139 476.12814331]
[311.01159668 474.58200073]
[296.23333740 471.97497559]
[281.67874146 468.32031250]
[267.42193604 463.63662720]
[253.53558350 457.94781494]
[240.09045410 451.28286743]
[227.15505981 443.67572021]
[214.79530334 435.16513062]
[203.07418823 425.79449463]
[192.05143738 415.61157227]
[181.78320312 404.66824341]
[172.32183838 393.02023315]
[163.71553040 380.72695923]
[156.00816345 367.85101318]
[149.23898315 354.45806885]
[143.44250488 340.61630249]
[138.64825439 326.39630127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 135]
[12 134]
[13 133]
[14 132]
[17 131]
[18 130]
[20 129]
[21 128]
[22 127]
[23 126]
[24 125]
[25 124]
[41 123]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
