%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[91.62319946 452.08166504]
[87.42472076 466.53359985]
[80.48721313 479.88864136]
[71.07732391 491.63345337]
[59.55675507 501.31655884]
[46.36832047 508.56579590]
[32.01894760 513.10253906]
[17.06019402 514.75231934]
[2.06703115 513.45184326]
[-12.38424397 509.25103760]
[-25.73816299 502.31134033]
[-37.48143768 492.89956665]
[-47.16268539 481.37744141]
[-54.40978622 468.18783569]
[-58.94418335 453.83770752]
[-60.59157944 438.87869263]
[-59.28866196 423.88574219]
[-55.08550644 409.43515015]
[-48.14367294 396.08233643]
[-38.72998428 384.34060669]
[-27.20627785 374.66122437]
[-14.01549721 367.41625977]
[0.33534059 362.88418579]
[15.29462814 361.23919678]
[30.28736877 362.54455566]
[34.47438049 348.14077759]
[38.66139221 333.73696899]
[42.84840393 319.33319092]
[47.03541565 304.92941284]
[51.22242737 290.52563477]
[47.34528351 276.14450073]
[58.62714005 265.05261230]
[62.81415176 250.64881897]
[58.93700790 236.26768494]
[70.21886444 225.17578125]
[73.54112244 210.54832458]
[75.98685455 195.74905396]
[78.43257904 180.94978333]
[80.87830353 166.15051270]
[83.32403564 151.35124207]
[76.53686523 141.33821106]
[78.45331573 128.98867798]
[88.58498383 121.00668335]
[91.25077820 106.24546814]
[91.13911438 91.24588013]
[88.25383759 76.52599335]
[85.36856842 61.80609894]
[82.48329163 47.08620834]
[79.59802246 32.36631775]
[66.69927216 27.50698280]
[57.95534134 16.99213219]
[55.56789780 3.63661909]
[60.05527115 -9.05225849]
[70.14451599 -17.79578400]
[67.47872162 -32.55700302]
[64.81292725 -47.31821823]
[60.84083557 -52.60348511]
[60.22640991 -58.25321960]
[62.29436874 -62.55816650]
[52.59553909 -75.05789948]
[58.35926056 -88.79212189]
[56.13414001 -103.62615967]
[53.90902328 -118.46020508]
[51.68390656 -133.29425049]
[49.45878983 -148.12829590]
[47.23367310 -162.96234131]
[44.78794479 -177.76161194]
[42.12215042 -192.52282715]
[39.45635605 -207.28404236]
[29.38966179 -219.48945618]
[34.74190521 -233.38920593]
[32.07611084 -248.15042114]
[17.09333420 -247.15219116]
[2.09300351 -247.83781433]
[-12.73623848 -250.19865417]
[-27.20789909 -254.20503235]
[-41.13998032 -259.80654907]
[-54.35726929 -266.93280029]
[-66.69355011 -275.49411011]
[-77.99368286 -285.38284302]
[-88.11554718 -296.47463989]
[-96.93185425 -308.63000488]
[-104.33172607 -321.69607544]
[-110.22210693 -335.50851440]
[-114.52892303 -349.89361572]
[-117.19799805 -364.67047119]
[-118.19577789 -379.65328979]
[-117.50971222 -394.65359497]
[-115.14842224 -409.48275757]
[-111.14161682 -423.95431519]
[-105.53966522 -437.88623047]
[-98.41304016 -451.10330200]
[-89.85134888 -463.43933105]
[-79.96227264 -474.73916626]
[-68.87017822 -484.86068726]
[-56.71455383 -493.67663574]
[-43.64827728 -501.07611084]
[-29.83566475 -506.96609497]
[-15.45042610 -511.27246094]
[-0.67347175 -513.94110107]
[14.30936337 -514.93841553]
[29.30965424 -514.25195312]
[44.13875580 -511.89019775]
[58.61017609 -507.88293457]
[72.54192352 -502.28057861]
[85.75878906 -495.15356445]
[98.09455109 -486.59149170]
[109.39408875 -476.70208740]
[119.51528931 -465.60968018]
[128.33087158 -453.45379639]
[135.72996521 -440.38729858]
[141.61952209 -426.57452393]
[145.92547607 -412.18914795]
[148.59367371 -397.41210938]
[149.59056091 -382.42926025]
[148.90359497 -367.42898560]
[146.54141235 -352.59994507]
[142.53373718 -338.12866211]
[136.93095398 -324.19708252]
[129.80354309 -310.98040771]
[121.24111176 -298.64489746]
[111.35135651 -287.34567261]
[100.25865936 -277.22479248]
[88.10250854 -268.40957642]
[75.03578949 -261.01086426]
[61.22282410 -255.12173462]
[46.83732605 -250.81620789]
[49.50312424 -236.05499268]
[59.37914276 -224.90539551]
[54.21757126 -209.94984436]
[56.88336563 -195.18861389]
[59.54916382 -180.42739868]
[62.89221573 -177.01667786]
[64.12816620 -171.46966553]
[62.06771851 -165.18745422]
[64.29283142 -150.35340881]
[66.51795197 -135.51936340]
[68.74306488 -120.68532562]
[70.96818542 -105.85128021]
[73.19330597 -91.01723480]
[82.73297882 -79.57853699]
[77.12841797 -64.78328705]
[79.57414246 -49.98401260]
[82.23993683 -35.22279739]
[84.90573120 -20.46158028]
[99.91071320 -13.80365562]
[108.07228851 0.63069779]
[106.00151062 17.25036049]
[94.31791687 29.48104477]
[97.20318604 44.20093536]
[100.08846283 58.92082596]
[102.97373199 73.64071655]
[105.85900116 88.36061096]
[109.78585815 73.88373566]
[116.90364075 60.68005753]
[126.83896637 49.44220734]
[139.07064819 40.75970078]
[152.95704651 35.08800888]
[167.76969910 32.72465515]
[182.73155212 33.79361725]
[197.05775452 38.23881531]
[209.99678040 45.82706833]
[220.86987305 56.16031265]
[229.10665894 68.69647980]
[234.27502441 82.77795410]
[236.10388184 97.66604614]
[234.49726868 112.57975769]
[229.53947449 126.73674774]
[221.49058533 139.39436340]
[210.77281189 149.88861084]
[197.94839478 157.66899109]
[183.69007874 162.32736206]
[168.74581909 163.61933899]
[153.89956665 161.47715759]
[139.93013000 156.01319885]
[127.57032013 147.51408386]
[117.46849823 136.42565918]
[110.15459442 123.32959747]
[106.01199341 108.91126251]
[103.34619904 123.67247772]
[109.97308350 140.85287476]
[98.12330627 153.79696655]
[95.67757416 168.59623718]
[93.23184967 183.39550781]
[90.78612518 198.19477844]
[88.34039307 212.99404907]
[99.92424774 203.46438599]
[114.88980103 202.44845581]
[127.65528107 210.32516479]
[133.45947266 224.15669250]
[130.13755798 238.78424072]
[118.92853546 248.75207520]
[104.01308441 250.34245300]
[90.95429993 242.96218872]
[84.62265015 229.36279297]
[88.20030975 244.77418518]
[77.21793365 254.83583069]
[73.03092194 269.23962402]
[76.60858154 284.65100098]
[65.62620544 294.71264648]
[61.43919754 309.11642456]
[57.25218582 323.52020264]
[53.06517410 337.92398071]
[48.87816238 352.32778931]
[44.69115067 366.73156738]
[58.04731750 373.66690063]
[69.79364014 383.07489014]
[79.47861481 394.59390259]
[86.72998810 407.78115845]
[91.26902771 422.12979126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[32 198]
[33 197]
[35 195]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[43 180]
[44 179]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[54 145]
[55 144]
[56 143]
[59 142]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[67 132]
[68 131]
[69 130]
[71 128]
[72 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
