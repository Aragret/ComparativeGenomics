%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[37.55102158 450.23568726]
[33.94606781 464.82165527]
[28.34615135 478.76391602]
[20.86027527 491.79113770]
[11.63415432 503.64965820]
[0.84737962 514.10870361]
[-11.29008198 522.96466064]
[-24.54197121 530.04516602]
[-38.65033722 535.21240234]
[-53.34055710 538.36572266]
[-68.32667542 539.44384766]
[-83.31699371 538.42572021]
[-98.01970673 535.33117676]
[-112.14863586 530.22045898]
[-125.42874908 523.19299316]
[-137.60154724 514.38568115]
[-148.43008423 503.96987915]
[-157.70358276 492.14837646]
[-165.24153137 479.15121460]
[-170.89718628 465.23147583]
[-174.56047058 450.66003418]
[-176.16007996 435.72058105]
[-175.66487122 420.70388794]
[-173.08448792 405.90228271]
[-168.46916199 391.60385132]
[-161.90872192 378.08694458]
[-153.53088379 365.61468506]
[-143.49870300 354.42977905]
[-132.00747681 344.75003052]
[-119.28087616 336.76379395]
[-105.56662750 330.62658691]
[-91.13169098 326.45779419]
[-76.25704193 324.33862305]
[-61.23221588 324.31030273]
[-46.34968185 326.37338257]
[-31.89912796 330.48773193]
[-25.82529449 316.77246094]
[-19.75146103 303.05718994]
[-20.67367744 299.65396118]
[-19.99333572 295.63497925]
[-17.43897629 291.75833130]
[-13.08796501 288.87460327]
[-6.40777016 275.44424438]
[0.27242431 262.01385498]
[-0.98718894 247.17262268]
[12.08632374 238.26229858]
[18.76651764 224.83192444]
[25.44671249 211.40153503]
[32.12690735 197.97116089]
[31.35757065 194.53016663]
[32.21669006 190.54557800]
[34.94160461 186.78683472]
[39.41704178 184.10028076]
[46.69027328 170.98159790]
[53.96350098 157.86289978]
[61.23672867 144.74420166]
[68.50995636 131.62550354]
[54.66174698 137.38980103]
[39.87713242 134.85699463]
[28.73728561 124.81189728]
[24.69400978 110.36711121]
[29.00016022 95.99849701]
[40.32143021 86.15833282]
[55.14979553 83.89569092]
[68.89053345 89.91168213]
[77.28591919 102.34219360]
[77.73448944 117.33573151]
[86.69519043 105.30635071]
[88.51278687 91.44316864]
[101.27543640 85.73294830]
[110.23612976 73.70357513]
[119.19682312 61.67419815]
[128.15751648 49.64481735]
[137.11822510 37.61544037]
[146.07891846 25.58606339]
[155.03961182 13.55668545]
[157.07855225 -2.13258624]
[170.88656616 -7.71722412]
[179.84725952 -19.74660110]
[188.80795288 -31.77598000]
[197.76866150 -43.80535507]
[206.72935486 -55.83473587]
[215.69004822 -67.86411285]
[224.65074158 -79.89349365]
[231.62919617 -93.17133331]
[228.74325562 -108.72710419]
[240.16395569 -118.28833008]
[237.27801514 -133.84410095]
[248.69871521 -143.40531921]
[253.52471924 -157.60777283]
[258.35070801 -171.81022644]
[263.17669678 -186.01268005]
[260.29077148 -201.56845093]
[271.71145630 -211.12966919]
[276.53747559 -225.33212280]
[281.36346436 -239.53459167]
[286.18945312 -253.73704529]
[272.88781738 -260.73797607]
[260.84521484 -269.73364258]
[250.35820007 -280.50253296]
[241.68502808 -292.77944946]
[235.03926086 -306.26202393]
[230.58459473 -320.61831665]
[228.43069458 -335.49468994]
[228.63063049 -350.52490234]
[231.17945862 -365.33874512]
[236.01441956 -379.57144165]
[243.01644897 -392.87246704]
[252.01312256 -404.91433716]
[262.78286743 -415.40048218]
[275.06048584 -424.07263184]
[288.54364014 -430.71728516]
[302.90026855 -435.17077637]
[317.77685547 -437.32345581]
[332.80700684 -437.12228394]
[347.62063599 -434.57220459]
[361.85293579 -429.73608398]
[375.15341187 -422.73294067]
[387.19454956 -413.73529053]
[397.67977905 -402.96466064]
[406.35095215 -390.68634033]
[412.99447632 -377.20263672]
[417.44677734 -362.84564209]
[419.59820557 -347.96890259]
[419.39581299 -332.93875122]
[416.84454346 -318.12530518]
[412.00723267 -303.89340210]
[405.00299072 -290.59350586]
[396.00433350 -278.55313110]
[385.23284912 -268.06878662]
[372.95379639 -259.39865112]
[359.46957397 -252.75622559]
[345.11218262 -248.30509949]
[330.23526001 -246.15489197]
[315.20513916 -246.35855103]
[300.39190674 -248.91104126]
[295.56591797 -234.70858765]
[290.73992920 -220.50613403]
[285.91390991 -206.30368042]
[289.14505005 -191.76376343]
[277.37915039 -181.18669128]
[272.55316162 -166.98422241]
[267.72717285 -152.78176880]
[262.90118408 -138.57931519]
[266.13229370 -124.03940582]
[254.36640930 -113.46232605]
[257.59753418 -98.92241669]
[245.83164978 -88.34533691]
[256.54742432 -98.84164429]
[269.67102051 -106.10603333]
[284.25503540 -109.61407471]
[299.24664307 -109.11253357]
[313.56359863 -104.63760376]
[326.17233276 -96.51233673]
[336.16259766 -85.32331085]
[342.81323242 -71.87826538]
[345.64407349 -57.14781189]
[344.45077515 -42.19535446]
[339.31951904 -28.10031891]
[330.62066650 -15.88024235]
[318.98223877 -6.41730261]
[305.24444580 -0.39463636]
[290.39898682 1.75297427]
[275.51757812 -0.12950830]
[261.67453003 -5.90618610]
[249.86917114 -15.16003609]
[240.95376587 -27.22301483]
[235.57189941 -41.22428513]
[234.11210632 -56.15308380]
[236.68011475 -70.93279266]
[227.71942139 -58.90341568]
[218.75872803 -46.87403870]
[209.79803467 -34.84466171]
[200.83734131 -22.81528282]
[191.87664795 -10.78590584]
[182.91593933 1.24347210]
[181.51792908 16.07232285]
[167.06898499 22.51738167]
[158.10829163 34.54676056]
[149.14759827 46.57613754]
[140.18690491 58.60551453]
[131.22621155 70.63489532]
[122.26551056 82.66426849]
[113.30480957 94.69364929]
[111.48721313 108.55683136]
[98.72456360 114.26705170]
[89.76387024 126.29642487]
[81.62865448 138.89874268]
[74.35542297 152.01742554]
[67.08219147 165.13612366]
[59.80896378 178.25482178]
[52.53573608 191.37351990]
[45.55728531 204.65136719]
[38.87709045 218.08174133]
[32.19689560 231.51211548]
[25.51669884 244.94248962]
[26.29850006 260.74435425]
[13.70280075 268.69406128]
[7.02260590 282.12442017]
[0.34241104 295.55480957]
[-6.03619385 309.13101196]
[-12.11002827 322.84628296]
[-18.18386269 336.56155396]
[-5.42540789 344.49679565]
[6.10446072 354.13049316]
[16.18131065 365.27514648]
[24.60899544 377.71380615]
[31.22346687 391.20434570]
[35.89596939 405.48419189]
[38.53555679 420.27536011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 203]
[37 202]
[38 201]
[42 200]
[43 199]
[44 198]
[46 196]
[47 195]
[48 194]
[49 193]
[53 192]
[54 191]
[55 190]
[56 189]
[57 188]
[67 187]
[68 186]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[78 176]
[79 175]
[80 174]
[81 173]
[82 172]
[83 171]
[84 170]
[85 148]
[87 146]
[89 144]
[90 143]
[91 142]
[92 141]
[94 139]
[95 138]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
