%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[96.94862366 537.30810547]
[87.26889038 525.50701904]
[83.67638397 510.67272949]
[86.88440704 495.75054932]
[96.25601196 483.70333862]
[109.93044281 476.92303467]
[102.00451660 464.31234741]
[109.53549194 450.39852905]
[101.60955811 437.78784180]
[109.14054108 423.87402344]
[108.91721344 408.87567139]
[108.69388580 393.87734985]
[108.02409363 378.89230347]
[106.90844727 363.93383789]
[98.24596405 351.81729126]
[104.93542480 337.47988892]
[96.27294922 325.36334229]
[102.96240997 311.02590942]
[101.84675598 296.06744385]
[91.79351044 290.67315674]
[85.52777863 280.99554443]
[84.70327759 269.37597656]
[89.64022827 258.69293213]
[99.21717072 251.64888000]
[90.91928101 239.27978516]
[98.03265381 225.14788818]
[97.36286926 210.16285706]
[96.69308472 195.17781067]
[96.02330017 180.19277954]
[95.35351562 165.20773315]
[87.05563354 152.83863831]
[94.16900635 138.70675659]
[93.49922180 123.72171021]
[92.82943726 108.73667145]
[83.46840668 120.45721436]
[69.03704071 124.54814148]
[54.91787720 119.48363495]
[46.37701797 107.15262604]
[46.59998703 92.15428925]
[55.50362778 80.08261871]
[69.76709747 75.44005585]
[84.07048035 79.95816040]
[93.07934570 91.95290375]
[94.19499207 76.99444580]
[95.31064606 62.03599167]
[96.42629242 47.07754135]
[97.31910706 32.10413361]
[97.98889160 17.11909485]
[98.65867615 2.13405657]
[99.32846069 -12.85098171]
[92.21508789 -26.98287773]
[100.51297760 -39.35196686]
[97.81014252 -45.38572311]
[98.46229553 -51.03122711]
[101.43238068 -54.77123642]
[102.54802704 -69.72969055]
[103.66367340 -84.68814087]
[104.77932739 -99.64659882]
[98.08986664 -113.98401642]
[106.75234222 -126.10056305]
[107.31055450 -141.09017944]
[107.31055450 -156.09017944]
[107.31055450 -171.09017944]
[107.31055450 -186.09017944]
[106.75234222 -201.07978821]
[105.63669586 -216.03823853]
[104.52104950 -230.99668884]
[103.40539551 -245.95513916]
[102.28974915 -260.91360474]
[96.02819824 -247.28300476]
[85.53165436 -236.56747437]
[72.03324127 -230.02586365]
[57.11873245 -228.42666626]
[42.54027557 -231.95774841]
[30.01052856 -240.20428467]
[21.00147820 -252.19749451]
[16.57149506 -266.52841187]
[17.24101257 -281.51345825]
[22.93137360 -295.39221191]
[32.97408295 -306.53421021]
[46.18932724 -313.63049316]
[61.02460098 -315.84741211]
[75.73706818 -312.92449951]
[88.59832001 -305.20516968]
[98.09742737 -293.59625244]
[103.11872101 -279.46002197]
[105.56444550 -294.25927734]
[108.01016998 -309.05856323]
[110.45590210 -323.85781860]
[112.90162659 -338.65710449]
[115.34735107 -353.45635986]
[117.46197510 -368.30657959]
[119.24444580 -383.20028687]
[113.20185852 -397.82211304]
[122.39672852 -409.53976440]
[124.17919159 -424.43347168]
[125.96166229 -439.32720947]
[127.74412537 -454.22091675]
[129.52659607 -469.11462402]
[115.63593292 -475.04980469]
[103.98095703 -484.65908813]
[95.50646973 -497.16348267]
[90.89946747 -511.54931641]
[90.53341675 -526.65039062]
[94.43799591 -541.24255371]
[102.29667664 -554.14282227]
[113.47238922 -564.30554199]
[127.05916595 -570.90673828]
[141.95559692 -573.41137695]
[156.95408630 -571.61639404]
[170.83877563 -565.66723633]
[182.48408508 -556.04626465]
[190.94601440 -543.53338623]
[195.53855896 -529.14294434]
[195.88943481 -514.04150391]
[191.97019958 -499.45324707]
[184.09855652 -486.56085205]
[172.91264343 -476.40939331]
[159.31924438 -469.82183838]
[144.42030334 -467.33218384]
[142.63784790 -452.43844604]
[140.85537720 -437.54473877]
[139.07290649 -422.65103149]
[137.29045105 -407.75729370]
[143.46052551 -394.20077515]
[134.13816833 -381.41781616]
[132.35569763 -366.52410889]
[134.23582458 -363.54122925]
[134.76460266 -359.49954224]
[133.46006775 -355.04403687]
[130.14662170 -351.01065063]
[127.70089722 -336.21136475]
[125.25517273 -321.41210938]
[122.80944061 -306.61282349]
[120.36371613 -291.81356812]
[117.91799164 -277.01428223]
[117.24820709 -262.02923584]
[118.36385345 -247.07080078]
[119.47949982 -232.11233521]
[120.59514618 -217.15388489]
[121.71080017 -202.19543457]
[133.32788086 -211.68455505]
[148.02137756 -208.66780090]
[154.95980835 -195.36900330]
[149.02841187 -181.59153748]
[134.59959412 -177.49163818]
[122.31055450 -186.09017944]
[122.31055450 -171.09017944]
[122.31055450 -156.09017944]
[122.31055450 -141.09017944]
[134.60122681 -149.68898010]
[149.02966309 -145.58772278]
[154.95974731 -131.80970764]
[148.02006531 -118.51155090]
[133.32626343 -115.49618530]
[121.71080017 -124.98491669]
[128.48005676 -111.71742249]
[119.73777771 -98.53094482]
[118.62213135 -83.57249451]
[117.50647736 -68.61404419]
[116.39083099 -53.65559006]
[115.49801636 -38.68218231]
[122.65929413 -25.62211609]
[114.31349945 -12.18119717]
[113.64371490 2.80384183]
[112.97393036 17.78888130]
[112.30414581 32.77391815]
[114.80875397 36.84036636]
[114.78543091 42.52336502]
[111.38474274 48.19318771]
[110.26909637 63.15164185]
[109.15345001 78.11009216]
[108.03780365 93.06855011]
[107.81447601 108.06688690]
[108.48426056 123.05192566]
[109.15404510 138.03695679]
[117.49983978 151.47789001]
[110.33855438 164.53794861]
[111.00833893 179.52299500]
[111.67812347 194.50802612]
[112.34790802 209.49307251]
[113.01769257 224.47810364]
[121.36348724 237.91902161]
[114.20220947 250.97909546]
[128.66076660 263.22100830]
[129.56428528 281.82467651]
[116.80521393 294.95181274]
[117.92086029 309.91024780]
[126.66313934 323.09674072]
[119.89388275 336.36422729]
[128.63615417 349.55068970]
[121.86690521 362.81820679]
[122.98255157 377.77664185]
[125.55349731 381.27581787]
[126.75626373 385.03320312]
[126.67768097 388.58694458]
[125.54564667 391.55093384]
[123.69222260 393.65402222]
[123.91555023 408.65234375]
[124.13887787 423.65069580]
[132.08078003 437.33413696]
[124.53382874 450.17520142]
[132.47573853 463.85864258]
[124.92878723 476.69970703]
[138.79902649 483.06985474]
[148.52516174 494.83273315]
[152.17605591 509.65277100]
[149.02682495 524.58746338]
[139.70274353 536.67150879]
[126.05510712 543.50561523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 204]
[8 202]
[10 200]
[11 199]
[12 198]
[13 193]
[14 192]
[16 190]
[18 188]
[19 187]
[24 184]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[32 176]
[33 175]
[34 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 167]
[48 166]
[49 165]
[50 164]
[52 162]
[55 161]
[56 160]
[57 159]
[58 158]
[60 156]
[61 150]
[62 149]
[63 148]
[64 147]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 127]
[93 126]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
