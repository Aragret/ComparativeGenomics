%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[82.39852142 729.13726807]
[93.24731445 717.64471436]
[92.57752991 702.65966797]
[91.90774536 687.67462158]
[88.46870422 681.13281250]
[91.34121704 672.46185303]
[90.89461517 657.46844482]
[90.44800568 642.47509766]
[90.00140381 627.48175049]
[89.55479431 612.48840332]
[89.10819244 597.49505615]
[79.30583954 591.65722656]
[73.47848511 581.70953369]
[73.17364502 570.06469727]
[78.58269501 559.61279297]
[88.46462250 553.00335693]
[88.46462250 538.00335693]
[88.46462250 523.00335693]
[80.72731781 510.27612305]
[88.46462250 496.47595215]
[88.46462250 481.47595215]
[88.46462250 466.47595215]
[88.46462250 451.47595215]
[88.46462250 436.47595215]
[80.72731781 423.74865723]
[88.46462250 409.94848633]
[78.84042358 403.82141113]
[73.31183624 393.70455933]
[73.35384369 382.05587769]
[79.07168579 371.76962280]
[89.14601898 365.45736694]
[89.59262085 350.46401978]
[90.03923035 335.47067261]
[82.68429565 322.51867676]
[90.82904816 308.95498657]
[83.47411346 296.00299072]
[91.61886597 282.43930054]
[92.06547546 267.44595337]
[92.28880310 252.44761658]
[92.28880310 237.44761658]
[92.28880310 222.44761658]
[92.28880310 207.44761658]
[92.28880310 192.44761658]
[84.55150604 179.72033691]
[92.28880310 165.92016602]
[92.28880310 150.92016602]
[92.28880310 135.92016602]
[83.95984650 127.14776611]
[83.83708191 114.65101624]
[92.53171539 105.12388611]
[90.26496887 102.00392151]
[89.38445282 97.89994812]
[90.29881287 93.45349121]
[93.11486053 89.46479034]
[94.00767517 74.49138641]
[94.90048981 59.51797867]
[87.99830627 45.28174210]
[96.47943115 33.03756714]
[97.37224579 18.06416130]
[98.26506805 3.09075475]
[99.15788269 -11.88265133]
[100.05069733 -26.85605621]
[93.14851379 -41.09229279]
[101.62963867 -53.33646774]
[102.52245331 -68.30987549]
[103.41526794 -83.28327942]
[104.30808258 -98.25668335]
[105.20090485 -113.23009491]
[105.75910950 -128.21969604]
[105.98243713 -143.21803284]
[105.75910950 -158.21636963]
[97.41332245 -171.65730286]
[104.57460022 -184.71736145]
[103.90481567 -199.70240784]
[94.93038177 -208.96643066]
[94.68100739 -221.46128845]
[102.74508667 -230.47779846]
[102.29848480 -245.47114563]
[101.85187531 -260.46450806]
[101.40527344 -275.45785522]
[93.26052094 -289.02151489]
[100.61544800 -301.97354126]
[100.16884613 -316.96688843]
[99.72223663 -331.96023560]
[89.68347931 -347.39733887]
[98.59809875 -362.51345825]
[97.92830658 -377.49850464]
[97.25852203 -392.48352051]
[96.58873749 -407.46856689]
[95.91895294 -422.45361328]
[95.02613831 -437.42700195]
[86.28385925 -450.61349487]
[93.05311584 -463.88098145]
[91.93746948 -478.83944702]
[90.82182312 -493.79788208]
[76.29187775 -498.18484497]
[64.33026123 -507.52743530]
[56.55468750 -520.56219482]
[54.01672745 -535.52624512]
[57.05963135 -550.39587402]
[65.27185822 -563.16003418]
[77.54278564 -572.09246826]
[92.21286011 -575.98516846]
[107.29808807 -574.31170654]
[120.75830078 -567.29833984]
[130.77311707 -555.89361572]
[135.98812866 -541.63995361]
[135.69804382 -526.46496582]
[129.94207764 -512.42095947]
[119.49869537 -501.40731812]
[105.78027344 -494.91354370]
[106.89591980 -479.95507812]
[108.01157379 -464.99664307]
[116.67404938 -452.88009644]
[109.98458862 -438.54266357]
[112.95467377 -434.80264282]
[113.60682678 -429.15716553]
[110.90399170 -423.12338257]
[111.57377625 -408.13836670]
[112.24356079 -393.15332031]
[112.91334534 -378.16827393]
[113.58313751 -363.18322754]
[122.29549408 -354.79150391]
[122.97614288 -342.31268311]
[114.71558380 -332.40682983]
[115.16219330 -317.41348267]
[115.60880280 -302.42013550]
[123.72161102 -289.92886353]
[116.39862061 -275.90444946]
[116.84522247 -260.91110229]
[117.29183197 -245.91775513]
[117.73844147 -230.92439270]
[127.75264740 -216.51319885]
[118.88985443 -200.37219238]
[119.55963898 -185.38714600]
[127.85752106 -173.01805115]
[120.74414825 -158.88616943]
[122.71946716 -156.89712524]
[124.02591705 -154.00579834]
[124.31588745 -150.46301270]
[123.33889771 -146.64070129]
[120.98077393 -142.99470520]
[120.75744629 -127.99637604]
[122.93769836 -125.22530365]
[123.88407898 -121.26052856]
[123.05015564 -116.69348907]
[120.17430878 -112.33727264]
[119.28149414 -97.36386871]
[118.38867188 -82.39046478]
[117.49585724 -67.41706085]
[116.60304260 -52.44365311]
[123.56908417 -39.27841568]
[115.02410126 -25.96324158]
[114.13128662 -10.98983479]
[113.23847198 3.98357058]
[112.34565735 18.95697594]
[111.45283508 33.93038177]
[118.41888428 47.09562302]
[109.87389374 60.41079330]
[108.98107910 75.38420105]
[108.08826447 90.35760498]
[107.53005219 105.34721375]
[116.86949921 121.21720123]
[107.28880310 135.92016602]
[107.28880310 150.92016602]
[107.28880310 165.92016602]
[115.02610016 179.72033691]
[107.28880310 192.44761658]
[107.28880310 207.44761658]
[107.28880310 222.44761658]
[107.28880310 237.44761658]
[107.28880310 252.44761658]
[110.25836182 258.35464478]
[109.85894012 264.02365112]
[107.05882263 267.89254761]
[106.61222076 282.88589478]
[113.93520355 296.91033936]
[105.82239532 309.40158081]
[113.14538574 323.42599487]
[105.03257751 335.91726685]
[104.58596802 350.91061401]
[104.13936615 365.90396118]
[117.64736176 379.18734741]
[117.16471100 397.80670166]
[103.46462250 409.94848633]
[111.20191956 423.74865723]
[103.46462250 436.47595215]
[103.46462250 451.47595215]
[103.46462250 466.47595215]
[103.46462250 481.47595215]
[103.46462250 496.47595215]
[111.20191956 510.27612305]
[103.46462250 523.00335693]
[103.46462250 538.00335693]
[103.46462250 553.00335693]
[117.36212158 565.87866211]
[117.43405151 584.50415039]
[104.10153961 597.04846191]
[104.54814911 612.04180908]
[104.99475098 627.03515625]
[105.44136047 642.02850342]
[105.88796234 657.02185059]
[106.33457184 672.01519775]
[106.89278412 687.00482178]
[107.56256866 701.98986816]
[108.23235321 716.97491455]
[120.06319427 727.45379639]
[120.93578339 743.23394775]
[110.33242035 754.95336914]
[94.54389191 755.65905762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[16 195]
[17 194]
[18 193]
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[26 185]
[31 182]
[32 181]
[33 180]
[35 178]
[37 176]
[38 175]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[45 166]
[46 165]
[47 164]
[50 162]
[54 161]
[55 160]
[56 159]
[58 157]
[59 156]
[60 155]
[61 154]
[62 153]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 143]
[70 142]
[71 137]
[73 135]
[74 134]
[77 132]
[78 131]
[79 130]
[80 129]
[82 127]
[83 126]
[84 125]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 115]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
