%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[123.69879150 594.77886963]
[113.65079498 583.62829590]
[104.62762451 571.63330078]
[96.69989014 558.88775635]
[89.92963409 545.49145508]
[84.36985779 531.54919434]
[80.06407166 517.17010498]
[77.04596710 502.46676636]
[75.33916473 487.55419922]
[74.95703125 472.54913330]
[75.90255737 457.56903076]
[78.16833496 442.73110962]
[81.73663330 428.15151978]
[86.57952881 413.94433594]
[92.65911865 400.22076416]
[99.92781830 387.08822632]
[108.32874298 374.64947510]
[117.79613495 363.00192261]
[128.25590515 352.23663330]
[139.62617493 342.43795776]
[151.81797791 333.68252563]
[164.73588562 326.03887939]
[178.27879333 319.56683350]
[173.03208923 305.51437378]
[167.78536987 291.46191406]
[162.53865051 277.40942383]
[157.29193115 263.35696411]
[152.04521179 249.30448914]
[146.79849243 235.25201416]
[141.55177307 221.19953918]
[136.20059204 207.18652344]
[130.74522400 193.21372986]
[125.38433838 188.12622070]
[125.31436920 178.99206543]
[120.06764984 164.93959045]
[114.40486908 151.04956055]
[108.33103180 137.33430481]
[102.25719452 123.61903381]
[96.18336487 109.90376282]
[89.30395508 96.57433319]
[81.64335632 83.67800903]
[73.98275757 70.78167725]
[66.32215881 57.88535309]
[52.54063416 57.63950348]
[40.77358627 50.67135620]
[34.04006195 38.89302063]
[34.00602341 25.43408203]
[40.57341385 13.81033516]
[26.99272728 5.69395971]
[27.36674118 -9.19594860]
[19.89900017 -22.20490074]
[6.31831408 -30.32127571]
[6.69232750 -45.21118546]
[-0.77541381 -58.22013855]
[-14.41890049 -51.96150208]
[-28.57499313 -46.96947861]
[-43.12638474 -43.28543472]
[-57.95249939 -40.93989563]
[-72.93048096 -39.95229721]
[-87.93621063 -40.33082581]
[-102.84535217 -42.07234573]
[-117.53434753 -45.16242599]
[-131.88148499 -49.57545471]
[-145.76788330 -55.27486801]
[-159.07846069 -62.21343994]
[-171.70292664 -70.33367157]
[-183.53666687 -79.56827545]
[-194.48161316 -89.84072113]
[-204.44708252 -101.06590271]
[-213.35049438 -113.15078735]
[-221.11807251 -125.99523926]
[-227.68544006 -139.49282837]
[-232.99819946 -153.53170776]
[-237.01229858 -167.99552917]
[-239.69447327 -182.76445007]
[-241.02253723 -197.71609497]
[-240.98544312 -212.72654724]
[-239.58352661 -227.67144775]
[-236.82838440 -242.42692566]
[-232.74285889 -256.87075806]
[-227.36079407 -270.88317871]
[-220.72680664 -284.34817505]
[-212.89584351 -297.15408325]
[-203.93281555 -309.19482422]
[-193.91200256 -320.37060547]
[-182.91641235 -330.58883667]
[-171.03718567 -339.76486206]
[-158.37274170 -347.82260132]
[-145.02804565 -354.69531250]
[-131.11366272 -360.32601929]
[-116.74488068 -364.66809082]
[-102.04079437 -367.68554688]
[-87.12323761 -369.35336304]
[-72.11581421 -369.65774536]
[-57.14289856 -368.59616089]
[-42.32855606 -366.17736816]
[-27.79554558 -362.42144775]
[-13.66429615 -357.35952759]
[-0.05190473 -351.03356934]
[12.92882919 -343.49594116]
[25.17033958 -334.80911255]
[36.57118988 -325.04510498]
[47.03690720 -314.28482056]
[56.48076630 -302.61740112]
[64.82450867 -290.13952637]
[71.99899292 -276.95462036]
[77.94477844 -263.17190552]
[82.61258698 -248.90562439]
[85.96373749 -234.27398682]
[87.97045898 -219.39822388]
[88.61613464 -204.40161133]
[87.89540863 -189.40841675]
[85.81423950 -174.54289246]
[82.38989258 -159.92819214]
[77.65073395 -145.68545532]
[71.63603973 -131.93269348]
[64.39564514 -118.78385162]
[55.98954773 -106.34790802]
[46.48740387 -94.72789764]
[35.96796036 -84.02011871]
[24.51837921 -74.31330109]
[12.23353863 -65.68788147]
[19.70128059 -52.67892456]
[32.74782181 -45.49303818]
[32.90795135 -29.67264175]
[40.37569427 -16.66369057]
[53.42223740 -9.47780228]
[53.58236694 6.34259415]
[69.95178223 7.57533789]
[82.48642731 18.43095589]
[86.11668396 34.78095627]
[79.21848297 50.22475815]
[86.87908173 63.12108231]
[94.53968048 76.01741028]
[102.20027924 88.91373444]
[104.92407990 74.16311646]
[115.71810913 63.74731445]
[130.55647278 61.55118179]
[143.90481567 68.39381409]
[150.78454590 81.72307587]
[148.62969971 96.56748962]
[138.24395752 107.39044952]
[123.50096893 110.15526581]
[109.89862823 103.82993317]
[115.97246552 117.54519653]
[122.04629517 131.26046753]
[128.12013245 144.97572327]
[131.71679688 147.40841675]
[134.11143494 150.54373169]
[135.23074341 153.91754150]
[135.15972900 157.08953857]
[134.12011719 159.69287109]
[139.36683655 173.74534607]
[144.71803284 187.75836182]
[150.17338562 201.73117065]
[156.20954895 208.58700562]
[155.60424805 215.95281982]
[160.85096741 230.00529480]
[166.09768677 244.05776978]
[171.34440613 258.11022949]
[176.59111023 272.16271973]
[181.83782959 286.21517944]
[187.08454895 300.26763916]
[192.33126831 314.32012939]
[206.80191040 310.33285522]
[221.56831360 307.64010620]
[236.51492310 306.26296997]
[251.52474976 306.21221924]
[266.48034668 307.48825073]
[281.26461792 310.08108521]
[295.76187134 313.97039795]
[309.85867310 319.12579346]
[323.44467163 325.50689697]
[336.41351318 333.06375122]
[348.66375732 341.73727417]
[360.09945679 351.45950317]
[370.63116455 362.15441895]
[380.17642212 373.73825073]
[388.66055298 386.12039185]
[396.01712036 399.20391846]
[402.18856812 412.88641357]
[407.12661743 427.06079102]
[410.79257202 441.61614990]
[413.15777588 456.43856812]
[414.20370483 471.41198730]
[413.92218018 486.41925049]
[412.31536865 501.34292603]
[409.39590454 516.06616211]
[405.18661499 530.47381592]
[399.72042847 544.45300293]
[393.04013062 557.89440918]
[385.19802856 570.69281006]
[376.25546265 582.74804688]
[366.28247070 593.96575928]
[355.35705566 604.25811768]
[343.56472778 613.54461670]
[330.99780273 621.75256348]
[317.75463867 628.81768799]
[303.93887329 634.68475342]
[289.65866089 639.30780029]
[275.02572632 642.65063477]
[260.15460205 644.68713379]
[245.16166687 645.40130615]
[230.16430664 644.78765869]
[215.27986145 642.85089111]
[200.62484741 639.60620117]
[186.31393433 635.07904053]
[172.45915222 629.30468750]
[159.16891479 622.32849121]
[146.54725647 614.20501709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 164]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[31 155]
[32 154]
[34 153]
[35 152]
[36 147]
[37 146]
[38 145]
[39 144]
[40 135]
[41 134]
[42 133]
[43 132]
[48 128]
[50 126]
[51 125]
[53 123]
[54 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
