%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[170.56213379 254.09126282]
[175.87719727 240.05258179]
[182.48352051 226.57330322]
[190.32304382 213.77188110]
[199.32687378 201.76083374]
[188.21963501 191.67968750]
[177.11241150 181.59855652]
[166.00517273 171.51741028]
[154.89793396 161.43627930]
[147.83232117 159.26860046]
[143.70181274 151.12139893]
[132.74589539 140.87602234]
[121.78999329 130.63063049]
[110.83408356 120.38523102]
[99.87817383 110.13983917]
[92.30773163 107.37200165]
[88.83685303 99.65941620]
[78.03469849 89.25204468]
[71.72042084 87.29209900]
[67.91505432 83.07116699]
[67.07168579 78.37033844]
[56.58418274 67.64596558]
[46.09667969 56.92158127]
[35.60918045 46.19720459]
[25.12167931 35.47282410]
[14.63417816 24.74844360]
[13.38407230 39.69625854]
[2.01993537 49.48688889]
[-12.94833851 48.51181030]
[-22.94624329 37.32959747]
[-22.24652290 22.34592628]
[-11.25001144 12.14412594]
[3.74312234 12.56786633]
[-5.74577618 0.95060271]
[-15.23467445 -10.66666031]
[-24.72357368 -22.28392410]
[-36.95317078 -13.58874416]
[-49.73623657 -5.72983170]
[-63.01567841 1.25771224]
[-76.73217773 7.34267998]
[-90.82448578 12.49789429]
[-105.22965240 16.70033073]
[-119.88333893 19.93121910]
[-134.72010803 22.17613029]
[-149.67369080 23.42503738]
[-164.67729187 23.67236137]
[-179.66390991 22.91700172]
[-194.56660461 21.16232681]
[-209.31881714 18.41617775]
[-223.85467529 14.69081593]
[-238.10923767 10.00288296]
[-252.01884460 4.37331533]
[-265.52136230 -2.17274427]
[-278.55651855 -9.60605907]
[-291.06607056 -17.89342880]
[-302.99414062 -26.99784088]
[-314.28747559 -36.87863159]
[-324.89559937 -47.49167252]
[-334.77117920 -58.78956223]
[-343.87008667 -70.72183990]
[-352.15167236 -83.23521423]
[-359.57897949 -96.27378845]
[-366.11880493 -109.77934265]
[-371.74194336 -123.69155121]
[-376.42327881 -137.94827271]
[-380.14193726 -152.48585510]
[-382.88128662 -167.23933411]
[-384.62905884 -182.14283752]
[-385.37750244 -197.12980652]
[-385.12326050 -212.13328552]
[-383.86743164 -227.08628845]
[-381.61566162 -241.92201233]
[-378.37802124 -256.57421875]
[-374.16894531 -270.97744751]
[-369.00720215 -285.06735229]
[-362.91592407 -298.78103638]
[-355.92224121 -312.05725098]
[-348.05743408 -324.83670044]
[-339.35659790 -337.06228638]
[-329.85861206 -348.67941284]
[-319.60589600 -359.63619995]
[-308.64425659 -369.88369751]
[-297.02261353 -379.37615967]
[-284.79290771 -388.07119751]
[-272.00973511 -395.92996216]
[-258.73022461 -402.91732788]
[-245.01364136 -409.00213623]
[-230.92127991 -414.15716553]
[-216.51605225 -418.35940552]
[-201.86231995 -421.59011841]
[-187.02552795 -423.83483887]
[-172.07192993 -425.08355713]
[-157.06832886 -425.33068848]
[-142.08172607 -424.57516479]
[-127.17904663 -422.82028198]
[-112.42686462 -420.07394409]
[-97.89105988 -416.34841919]
[-83.63655853 -411.66030884]
[-69.72702026 -406.03054810]
[-56.22456741 -399.48431396]
[-43.18951416 -392.05084229]
[-30.68006897 -383.76330566]
[-18.75211143 -374.65875244]
[-7.45890808 -364.77783203]
[3.14909863 -354.16464233]
[13.02453136 -342.86663818]
[22.12328529 -330.93423462]
[30.40472031 -318.42077637]
[37.83184814 -305.38211060]
[44.37150192 -291.87646484]
[49.99447250 -277.96417236]
[54.67564392 -263.70739746]
[58.39410782 -249.16978455]
[61.13325882 -234.41625977]
[62.88086319 -219.51274109]
[63.62911606 -204.52575684]
[63.37467194 -189.52227783]
[62.11867142 -174.56929016]
[59.86672211 -159.73359680]
[56.62888336 -145.08143616]
[52.41961288 -130.67826843]
[47.25771332 -116.58840942]
[41.16624069 -102.87479401]
[34.17239761 -89.59867096]
[26.30742264 -76.81933594]
[17.60644150 -64.59386444]
[8.10831738 -52.97685623]
[-2.14453053 -42.02019501]
[-13.10630989 -31.77282143]
[-3.61741114 -20.15555954]
[5.87148714 -8.53829575]
[15.36038589 3.07896757]
[25.35855675 14.26094246]
[35.84605789 24.98532295]
[46.33356094 35.70970154]
[56.82106018 46.43408203]
[67.30856323 57.15846252]
[77.79606628 67.88284302]
[88.44207001 78.44989014]
[99.24422455 88.85726166]
[110.12356567 99.18392944]
[121.07947540 109.42932129]
[132.03538513 119.67471313]
[142.99128723 129.92010498]
[153.94720459 140.16549683]
[164.97908020 150.32904053]
[176.08630371 160.41018677]
[187.19354248 170.49131775]
[198.30078125 180.57246399]
[209.40800476 190.65359497]
[220.49284363 180.53129578]
[232.47683716 171.49148560]
[245.25468445 163.61360168]
[258.71411133 156.96688843]
[272.73678589 151.60974121]
[287.19949341 147.58926392]
[301.97515869 144.94078064]
[316.93389893 143.68756104]
[331.94424438 143.84063721]
[346.87432861 145.39863586]
[361.59289551 148.34786987]
[375.97064209 152.66244507]
[389.88116455 158.30442810]
[403.20220947 165.22422791]
[415.81677246 173.36103821]
[427.61392212 182.64335632]
[438.49002075 192.98959351]
[448.34948730 204.30885315]
[457.10568237 216.50161743]
[464.68161011 229.46076965]
[471.01074219 243.07240295]
[476.03741455 257.21691895]
[479.71749878 271.76995850]
[482.01861572 286.60369873]
[482.92056274 301.58770752]
[482.41537476 316.59036255]
[480.50753784 331.47976685]
[477.21380615 346.12512207]
[472.56314087 360.39764404]
[466.59637451 374.17199707]
[459.36593628 387.32705688]
[450.93542480 399.74722290]
[441.37890625 411.32336426]
[430.78036499 421.95376587]
[419.23291016 431.54495239]
[406.83807373 440.01269531]
[393.70474243 447.28253174]
[379.94839478 453.29055786]
[365.68984985 457.98403931]
[351.05444336 461.32168579]
[336.17083740 463.27416992]
[321.16976929 463.82431030]
[306.18310547 462.96731567]
[291.34255981 460.71069336]
[276.77853394 457.07427979]
[262.61901855 452.09005737]
[248.98844910 445.80178833]
[236.00663757 438.26473999]
[223.78765869 429.54516602]
[212.43888855 419.71969604]
[202.06007385 408.87466431]
[192.74241638 397.10537720]
[184.56781006 384.51528931]
[177.60809326 371.21502686]
[171.92442322 357.32150269]
[167.56675720 342.95678711]
[164.57337952 328.24713135]
[162.97061157 313.32177734]
[162.77253723 298.31195068]
[163.98089600 283.34951782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[11 145]
[12 144]
[13 143]
[14 142]
[15 141]
[17 140]
[18 139]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
[26 133]
[33 132]
[34 131]
[35 130]
[36 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
