%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[181.01728821 772.82196045]
[169.17149353 763.61035156]
[157.98193359 753.61181641]
[147.50079346 742.87298584]
[137.77693176 731.44396973]
[128.85569763 719.37792969]
[120.77867126 706.73126221]
[113.58351135 693.56286621]
[107.30377960 679.93420410]
[101.96874237 665.90869141]
[97.60328674 651.55181885]
[94.22775269 636.93054199]
[91.85788727 622.11297607]
[90.50473785 607.16821289]
[90.17461395 592.16595459]
[90.86904907 577.17614746]
[92.58481598 562.26867676]
[95.31391144 547.51300049]
[99.04360199 532.97802734]
[103.75650787 518.73144531]
[109.43065643 504.83969116]
[116.03958893 491.36752319]
[123.55248260 478.37780762]
[131.93432617 465.93106079]
[141.14601135 454.08532715]
[151.14462280 442.89584351]
[161.88352966 432.41476440]
[173.31263733 422.69097900]
[185.37869263 413.76983643]
[198.02542114 405.69287109]
[211.19386292 398.49780273]
[204.91650391 384.87451172]
[198.63914490 371.25119019]
[192.36178589 357.62786865]
[186.08442688 344.00454712]
[179.80706787 330.38122559]
[173.52969360 316.75793457]
[167.05020142 303.22958374]
[154.45449829 295.27987671]
[155.23631287 279.47799683]
[148.55610657 266.04763794]
[141.87591553 252.61724854]
[139.34638977 267.40243530]
[129.83941650 279.00491333]
[115.84009552 284.39181519]
[101.00780487 282.15502930]
[89.21967316 272.87927246]
[83.55709839 258.98916626]
[85.50025940 244.11555481]
[94.54121399 232.14637756]
[108.31668091 226.21034241]
[123.22579193 227.85913086]
[135.37077332 236.66104126]
[130.75675964 222.38830566]
[126.14275360 208.11557007]
[121.52874756 193.84283447]
[116.91473389 179.57011414]
[106.29120636 173.78501892]
[102.33039093 161.93193054]
[107.67292023 150.19224548]
[103.27191925 135.85240173]
[98.87091827 121.51255798]
[94.46992493 107.17270660]
[91.35337067 104.90126038]
[89.25316620 101.26711273]
[88.75546265 96.75498962]
[90.20804596 92.09346008]
[86.45174408 77.57139587]
[82.69544220 63.04933929]
[69.48693085 50.21903229]
[74.83216858 33.50391006]
[70.86007690 19.03938484]
[66.88797760 4.57486153]
[55.77251053 -6.68378019]
[59.86333847 -21.00559616]
[55.89124298 -35.47011948]
[52.52173233 -20.85347176]
[44.64474487 -8.08816338]
[33.09156418 1.47865188]
[19.08141708 6.83736515]
[4.09283257 7.42245865]
[-10.29240894 3.17218614]
[-22.55620003 -5.46491098]
[-31.40431213 -17.57733917]
[-35.90298080 -31.88684464]
[-35.57745743 -46.88331223]
[-30.46208954 -60.98412704]
[-21.09671402 -72.70120239]
[-8.46968555 -80.79799652]
[6.08643961 -84.42004395]
[21.03551674 -83.18509674]
[34.79993439 -77.22348785]
[45.92710114 -67.16436005]
[53.24280548 -54.06908417]
[53.01947784 -69.06742096]
[52.79615021 -84.06575775]
[49.53932190 -92.59986115]
[52.68282318 -99.28867340]
[52.68282318 -114.28867340]
[38.90895462 -120.86463928]
[29.35902596 -132.77101135]
[25.92918587 -147.64376831]
[29.30043030 -162.52992249]
[38.80339813 -174.47380066]
[52.55126190 -181.10395813]
[67.81437683 -181.10395813]
[81.56224823 -174.47380066]
[91.06520844 -162.52992249]
[94.43645477 -147.64376831]
[91.00661469 -132.77101135]
[81.45668793 -120.86463928]
[67.68282318 -114.28867340]
[67.68282318 -99.28867340]
[67.79448700 -84.28908539]
[68.01781464 -69.29074860]
[68.24114227 -54.29241180]
[70.35576630 -39.44221497]
[74.32786560 -24.97769165]
[85.15921783 -14.75364971]
[81.35250092 0.60276520]
[85.32460022 15.06728935]
[89.29669189 29.53181267]
[99.65130615 35.78549194]
[103.07890320 47.80361938]
[97.21750641 59.29303741]
[100.97380066 73.81509399]
[104.73010254 88.33715820]
[108.80976868 102.77171326]
[113.21076965 117.11155701]
[117.61177063 131.45140076]
[122.01276398 145.79124451]
[135.78100586 158.01896667]
[131.18746948 174.95610046]
[135.80148315 189.22883606]
[140.41548157 203.50157166]
[145.02949524 217.77429199]
[149.64350891 232.04702759]
[155.30628967 245.93705750]
[161.98648071 259.36743164]
[168.66668701 272.79782104]
[181.74018860 281.70812988]
[180.48057556 296.54937744]
[185.77008057 300.51580811]
[187.93711853 305.76950073]
[187.15301514 310.48056030]
[193.43037415 324.10388184]
[199.70773315 337.72720337]
[205.98509216 351.35049438]
[212.26246643 364.97381592]
[218.53982544 378.59713745]
[224.81718445 392.22045898]
[238.84255981 386.88513184]
[253.19932556 382.51937866]
[267.82055664 379.14355469]
[282.63809204 376.77340698]
[297.58282471 375.41995239]
[312.58508301 375.08950806]
[327.57489014 375.78366089]
[342.48242188 377.49911499]
[357.23809814 380.22793579]
[371.77316284 383.95733643]
[386.01986694 388.66995239]
[399.91171265 394.34381104]
[413.38400269 400.95248413]
[426.37390137 408.46511841]
[438.82080078 416.84667969]
[450.66671753 426.05816650]
[461.85641479 436.05654907]
[472.33770752 446.79522705]
[482.06170654 458.22415161]
[490.98312378 470.29000854]
[499.06030273 482.93658447]
[506.25564575 496.10488892]
[512.53558350 509.73348999]
[517.87078857 523.75891113]
[522.23645020 538.11572266]
[525.61218262 552.73699951]
[527.98223877 567.55450439]
[529.33557129 582.49926758]
[529.66589355 597.50152588]
[528.97167969 612.49133301]
[527.25610352 627.39886475]
[524.52722168 642.15447998]
[520.79772949 656.68957520]
[516.08496094 670.93621826]
[510.41101074 684.82800293]
[503.80227661 698.30029297]
[496.28955078 711.29010010]
[487.90786743 723.73693848]
[478.69635010 735.58282471]
[468.69787598 746.77246094]
[457.95913696 757.25366211]
[446.53015137 766.97760010]
[434.46420288 775.89892578]
[421.81759644 783.97601318]
[408.64923096 791.17126465]
[395.02056885 797.45111084]
[380.99511719 802.78619385]
[366.63830566 807.15179443]
[352.01702881 810.52740479]
[337.19946289 812.89739990]
[322.25469971 814.25061035]
[307.25244141 814.58087158]
[292.26263428 813.88653564]
[277.35516357 812.17083740]
[262.59948730 809.44183350]
[248.06446838 805.71228027]
[233.81785583 800.99945068]
[219.92605591 795.32537842]
[206.45387268 788.71655273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 142]
[40 140]
[41 139]
[42 138]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[60 131]
[61 130]
[62 129]
[63 128]
[67 127]
[68 126]
[69 125]
[71 122]
[72 121]
[73 120]
[75 118]
[76 117]
[94 116]
[95 115]
[96 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
