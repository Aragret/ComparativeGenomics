%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[163.49343872 219.10418701]
[169.84057617 205.50056458]
[177.45208740 192.56187439]
[186.25906372 180.40530396]
[175.00296021 170.49066162]
[163.74687195 160.57600403]
[152.49076843 150.66134644]
[141.23468018 140.74670410]
[129.97857666 130.83204651]
[118.15231323 121.60494995]
[105.79780579 113.09812164]
[91.87657928 111.79768372]
[85.69537354 99.25638580]
[73.34085846 90.74955750]
[60.98635101 82.24272919]
[54.43700027 81.33854675]
[49.99435043 77.79455566]
[48.39579773 73.29415131]
[36.30004501 64.42325592]
[20.59602928 62.50115967]
[14.90875340 48.73510742]
[2.81300187 39.86421204]
[-9.28275013 30.99331665]
[-21.37850189 22.12242126]
[-33.47425461 13.25152588]
[-43.09758759 24.76429939]
[-53.43173599 35.64354324]
[-64.43508148 45.84544754]
[-76.06332397 55.32893372]
[-88.26963806 64.05581665]
[-101.00486755 71.99095917]
[-114.21773529 79.10239410]
[-127.85504150 85.36150360]
[-141.86186218 90.74308014]
[-156.18182373 95.22544098]
[-170.75721741 98.79055786]
[-185.52940369 101.42405701]
[-200.43885803 103.11534119]
[-215.42558289 103.85760498]
[-230.42919922 103.64785004]
[-245.38929749 102.48693085]
[-260.24566650 100.37951660]
[-274.93844604 97.33409119]
[-289.40847778 93.36292267]
[-303.59753418 88.48199463]
[-317.44845581 82.71096802]
[-330.90545654 76.07308197]
[-343.91436768 68.59505463]
[-356.42279053 60.30700684]
[-368.38037109 51.24230957]
[-379.73895264 41.43746567]
[-390.45281982 30.93194962]
[-400.47879028 19.76807022]
[-409.77655029 7.99077749]
[-418.30859375 -4.35250425]
[-426.04058838 -17.21207237]
[-432.94143677 -30.53614807]
[-438.98330688 -44.27107620]
[-444.14190674 -58.36155319]
[-448.39642334 -72.75083923]
[-451.72976685 -87.38098907]
[-454.12847900 -102.19310760]
[-455.58291626 -117.12753296]
[-456.08721924 -132.12414551]
[-455.63937378 -147.12254333]
[-454.24114990 -162.06233215]
[-451.89822388 -176.88337708]
[-448.61996460 -191.52597046]
[-444.41964722 -205.93116760]
[-439.31414795 -220.04096985]
[-433.32400513 -233.79853821]
[-426.47335815 -247.14849854]
[-418.78982544 -260.03707886]
[-410.30429077 -272.41238403]
[-401.05093384 -284.22457886]
[-391.06704712 -295.42614746]
[-380.39282227 -305.97189331]
[-369.07122803 -315.81942749]
[-357.14785767 -324.92907715]
[-344.67071533 -333.26416016]
[-331.69003296 -340.79107666]
[-318.25811768 -347.47958374]
[-304.42901611 -353.30270386]
[-290.25845337 -358.23699951]
[-275.80343628 -362.26263428]
[-261.12222290 -365.36334229]
[-246.27391052 -367.52664185]
[-231.31828308 -368.74389648]
[-216.31556702 -369.01010132]
[-201.32615662 -368.32427979]
[-186.41044617 -366.68911743]
[-171.62844849 -364.11123657]
[-157.03973389 -360.60101318]
[-142.70301819 -356.17257690]
[-128.67602539 -350.84378052]
[-115.01525879 -344.63604736]
[-101.77571106 -337.57440186]
[-89.01070404 -329.68725586]
[-76.77162933 -321.00637817]
[-65.10777283 -311.56671143]
[-54.06609726 -301.40631104]
[-43.69107437 -290.56604004]
[-34.02447128 -279.08956909]
[-25.10521507 -267.02310181]
[-16.96922302 -254.41525269]
[-9.64925289 -241.31675720]
[-3.17478085 -227.78038025]
[2.42812181 -213.86061096]
[7.13689470 -199.61349487]
[10.93257713 -185.09643555]
[13.79988480 -170.36784363]
[15.72727203 -155.48706055]
[16.70697784 -140.51400757]
[16.73505783 -125.50894165]
[15.81139851 -110.53231812]
[13.93971825 -95.64442444]
[11.12755585 -80.90522003]
[7.38623285 -66.37403870]
[2.73081541 -52.10941315]
[-2.81995058 -38.16876984]
[-9.24371433 -24.60824776]
[-16.51461029 -11.48244858]
[-24.60335922 1.15577376]
[-12.50760651 10.02666950]
[-0.41185457 18.89756393]
[11.68389702 27.76845932]
[23.77964973 36.63935471]
[38.61849594 37.92694473]
[45.17094040 52.32749939]
[57.26669312 61.19839478]
[69.49317932 69.88822174]
[81.84768677 78.39505005]
[94.20219421 86.90187836]
[108.12342072 88.20231628]
[114.30462646 100.74361420]
[126.65914154 109.25044250]
[122.95995331 94.71372986]
[128.40440369 80.73667908]
[140.96185303 72.53238678]
[155.94868469 73.16085052]
[167.77517700 82.38767242]
[172.03033447 96.77146912]
[167.12710571 110.94744110]
[154.89425659 119.62830353]
[139.89323425 119.57595825]
[151.14932251 129.49060059]
[162.40542603 139.40525818]
[173.66151428 149.31991577]
[184.91761780 159.23455811]
[196.17370605 169.14921570]
[207.12144470 158.87828064]
[218.99592590 149.69453430]
[231.68962097 141.68110657]
[245.08757019 134.91059875]
[259.06842041 129.44433594]
[273.50561523 125.33178711]
[288.26831055 122.61022186]
[303.22290039 121.30428314]
[318.23388672 121.42579651]
[333.16537476 122.97366333]
[347.88208008 125.93386078]
[362.25079346 130.27958679]
[376.14132690 135.97148132]
[389.42791748 142.95799255]
[401.99020386 151.17585754]
[413.71444702 160.55064392]
[424.49447632 170.99746704]
[434.23263550 182.42169189]
[442.84075928 194.71986389]
[450.24087524 207.78060913]
[456.36593628 221.48565674]
[461.16052246 235.71087646]
[464.58117676 250.32742310]
[466.59695435 265.20297241]
[467.18957520 280.20275879]
[466.35366821 295.19094849]
[464.09680176 310.03179932]
[460.43942261 324.59094238]
[455.41467285 338.73648071]
[449.06802368 352.34036255]
[441.45697021 365.27929688]
[432.65045166 377.43618774]
[422.72821045 388.70092773]
[411.78012085 398.97143555]
[399.90527344 408.15475464]
[387.21130371 416.16772461]
[373.81311035 422.93774414]
[359.83203125 428.40350342]
[345.39471436 432.51553345]
[330.63189697 435.23654175]
[315.67727661 436.54193115]
[300.66629028 436.41989136]
[285.73489380 434.87145996]
[271.01824951 431.91073608]
[256.64971924 427.56448364]
[242.75939941 421.87207031]
[229.47306824 414.88507080]
[216.91105652 406.66674805]
[205.18714905 397.29153442]
[194.40750122 386.84432983]
[184.66975403 375.41976929]
[176.06208801 363.12127686]
[168.66246033 350.06024170]
[162.53788757 336.35498047]
[157.74382019 322.12960815]
[154.32369995 307.51290894]
[152.30847168 292.63729858]
[151.71641541 277.63751221]
[152.55287170 262.64932251]
[154.81025696 247.80854797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 136]
[11 135]
[13 133]
[14 132]
[15 131]
[18 130]
[19 129]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
