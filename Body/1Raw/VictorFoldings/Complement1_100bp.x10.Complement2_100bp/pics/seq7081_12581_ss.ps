%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[87.76760864 599.68359375]
[73.67530060 594.52648926]
[59.98188400 588.38818359]
[46.75556564 581.29919434]
[34.06224823 573.29492188]
[21.96516800 564.41516113]
[10.52458858 554.70422363]
[-0.20249037 544.21051025]
[-10.16262627 532.98620605]
[-19.30619812 521.08728027]
[-27.58765411 508.57305908]
[-34.96573257 495.50579834]
[-41.40367889 481.95068359]
[-46.86941910 467.97518921]
[-51.33572388 453.64892578]
[-54.78033829 439.04333496]
[-57.18610382 424.23114014]
[-58.54103470 409.28613281]
[-58.83838272 394.28277588]
[-58.07666016 379.29583740]
[-56.25967026 364.39996338]
[-53.39645767 349.66934204]
[-49.50129318 335.17739868]
[-44.59357834 320.99630737]
[-38.69776535 307.19671631]
[-31.84322357 293.84741211]
[-24.06410789 281.01486206]
[-15.39917088 268.76300049]
[-5.89158201 257.15289307]
[4.41129303 246.24237061]
[15.45812511 236.08576965]
[27.19387817 226.73371887]
[39.56008530 218.23278809]
[52.49513626 210.62533569]
[65.93459320 203.94924927]
[79.81149292 198.23782349]
[94.05671692 193.51948547]
[108.59927368 189.81774902]
[105.93347931 175.05653381]
[103.26768494 160.29530334]
[100.60189056 145.53408813]
[97.93608856 130.77287292]
[84.91215515 126.89956665]
[74.81663513 117.80527496]
[69.60899353 105.25513458]
[70.29998779 91.68502045]
[76.75550079 79.72876740]
[87.72257233 71.70699310]
[85.27684784 56.90771866]
[82.83111572 42.10844803]
[70.81993866 28.15089989]
[77.63511658 11.97931004]
[74.96931458 -2.78190756]
[72.30352020 -17.54312515]
[57.38896179 -15.89004040]
[42.39636230 -15.25862026]
[27.39562607 -15.65180683]
[12.45668983 -17.06776810]
[-2.35079074 -19.49990082]
[-16.95777512 -22.93686676]
[-31.29615974 -27.36264229]
[-45.29909134 -32.75658798]
[-58.90127945 -39.09355927]
[-72.03930664 -46.34400558]
[-84.65191650 -54.47412491]
[-96.68030548 -63.44600677]
[-108.06838226 -73.21782684]
[-118.76305389 -83.74401855]
[-128.71446228 -94.97550201]
[-137.87620544 -106.85990906]
[-146.20556641 -119.34184265]
[-153.66369629 -132.36308289]
[-160.21585083 -145.86294556]
[-165.83145142 -159.77845764]
[-170.48432922 -174.04476929]
[-174.15280151 -188.59533691]
[-176.81973267 -203.36233521]
[-178.47271729 -218.27690125]
[-179.10404968 -233.26951599]
[-178.71075439 -248.27024841]
[-177.29469299 -263.20916748]
[-174.86245728 -278.01663208]
[-171.42539978 -292.62359619]
[-166.99952698 -306.96194458]
[-161.60548401 -320.96484375]
[-155.26843262 -334.56698608]
[-148.01789856 -347.70498657]
[-139.88769531 -360.31753540]
[-130.91572571 -372.34585571]
[-121.14382935 -383.73385620]
[-110.61756897 -394.42846680]
[-99.38601685 -404.37979126]
[-87.50154114 -413.54147339]
[-75.01956177 -421.87072754]
[-61.99826050 -429.32879639]
[-48.49835968 -435.88085938]
[-34.58280182 -441.49636841]
[-20.31646729 -446.14913940]
[-5.76587200 -449.81750488]
[9.00114155 -452.48434448]
[23.91572189 -454.13723755]
[38.90832901 -454.76846313]
[53.90906525 -454.37506104]
[68.84797668 -452.95889282]
[83.65542603 -450.52658081]
[98.26236725 -447.08941650]
[112.60069275 -442.66345215]
[126.60355377 -437.26931763]
[140.20565796 -430.93215942]
[153.34358215 -423.68154907]
[165.95608521 -415.55123901]
[177.98434448 -406.57919312]
[189.37229919 -396.80722046]
[200.06683350 -386.28091431]
[210.01808167 -375.04928589]
[219.17967224 -363.16473389]
[227.50886536 -350.68270874]
[234.96682739 -337.66134644]
[241.51878357 -324.16140747]
[247.13421631 -310.24581909]
[251.78689575 -295.97946167]
[255.45516968 -281.42883301]
[258.12191772 -266.66180420]
[259.77468872 -251.74720764]
[260.40582275 -236.75459290]
[260.01232910 -221.75386047]
[258.59606934 -206.81495667]
[256.16363525 -192.00752258]
[252.72637939 -177.40060425]
[248.30030823 -163.06231689]
[242.90608215 -149.05949402]
[236.56883240 -135.45742798]
[229.31813049 -122.31954956]
[221.18775940 -109.70709991]
[212.21563721 -97.67890167]
[202.44358826 -86.29101562]
[191.91717529 -75.59655762]
[180.68548584 -65.64537048]
[168.80090332 -56.48387146]
[156.31880188 -48.15476608]
[143.29740906 -40.69688797]
[129.79740906 -34.14501190]
[115.88178253 -28.52968597]
[101.61538696 -23.87709236]
[87.06473541 -20.20891953]
[89.73053741 -5.44770288]
[92.39633179 9.31351376]
[102.15172577 16.46604919]
[104.49345398 28.74204636]
[97.63038635 39.66271973]
[100.07611847 54.46199036]
[102.52184296 69.26126099]
[117.64167023 74.70175171]
[127.97272491 87.00936890]
[130.71067810 102.84324646]
[125.11231995 117.90533447]
[112.69731140 128.10708618]
[115.36310577 142.86830139]
[118.02890015 157.62951660]
[120.69469452 172.39073181]
[123.36048889 187.15194702]
[138.27922058 185.53314209]
[153.27496338 184.97071838]
[168.27304077 185.46748352]
[183.19871521 187.02098083]
[197.97761536 189.62344360]
[212.53613281 193.26191711]
[226.80172729 197.91827393]
[240.70333862 203.56932068]
[254.17169189 210.18688965]
[267.13970947 217.73803711]
[279.54275513 226.18511963]
[291.31906128 235.48605347]
[302.40994263 245.59452820]
[312.76016235 256.46017456]
[322.31814575 268.02880859]
[331.03625488 280.24288940]
[338.87109375 293.04147339]
[345.78363037 306.36087036]
[351.73937988 320.13467407]
[356.70870972 334.29428101]
[360.66683960 348.76916504]
[363.59408569 363.48718262]
[365.47579956 378.37503052]
[366.30270386 393.35855103]
[366.07058716 408.36303711]
[364.78063965 423.31378174]
[362.43930054 438.13632202]
[359.05822754 452.75674438]
[354.65426636 467.10226440]
[349.24932861 481.10140991]
[342.87039185 494.68441772]
[335.54919434 507.78359985]
[327.32220459 520.33374023]
[318.23046875 532.27227783]
[308.31924438 543.53979492]
[297.63787842 554.08007812]
[286.23962402 563.84063721]
[274.18127441 572.77288818]
[261.52288818 580.83227539]
[248.32749939 587.97869873]
[234.66090393 594.17651367]
[220.59115601 599.39483643]
[206.18835449 603.60772705]
[191.52426147 606.79412842]
[176.67193604 608.93823242]
[161.70535278 610.02929688]
[146.69909668 610.06195068]
[131.72790527 609.03594971]
[116.86639404 606.95648193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[48 152]
[49 151]
[50 150]
[52 147]
[53 146]
[54 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
