%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[80.92489624 699.84832764]
[65.92039490 700.06188965]
[50.93690872 699.23980713]
[36.04584122 697.38598633]
[21.31815720 694.50915527]
[6.82403946 690.62316895]
[-7.36743927 685.74639893]
[-21.18865013 679.90216064]
[-34.57372665 673.11834717]
[-47.45888519 665.42724609]
[-59.78272247 656.86547852]
[-71.48650360 647.47387695]
[-82.51445770 637.29718018]
[-92.81403351 626.38391113]
[-102.33614349 614.78607178]
[-111.03540802 602.55889893]
[-118.87038422 589.76074219]
[-125.80371857 576.45245361]
[-131.80238342 562.69757080]
[-136.83776855 548.56164551]
[-140.88591003 534.11193848]
[-143.92750549 519.41741943]
[-145.94804382 504.54803467]
[-146.93791199 489.57470703]
[-146.89239502 474.56875610]
[-145.81170654 459.60168457]
[-143.70098877 444.74487305]
[-140.57031250 430.06903076]
[-136.43457031 415.64419556]
[-131.31350708 401.53903198]
[-125.23151398 387.82080078]
[-118.21756744 374.55487061]
[-110.30509186 361.80444336]
[-101.53179932 349.63027954]
[-91.93950653 338.09042358]
[-81.57391357 327.23983765]
[-70.48442078 317.13024902]
[-58.72387695 307.80981445]
[-46.34832764 299.32296753]
[-33.41674423 291.71017456]
[-19.99075508 285.00765991]
[-6.13434315 279.24740601]
[8.08646107 274.45687866]
[22.60388756 270.65884399]
[37.34875488 267.87142944]
[52.25079346 266.10797119]
[67.23899078 265.37680054]
[82.24192047 265.68142700]
[83.58015442 250.74124146]
[84.91838837 235.80105591]
[86.25662231 220.86087036]
[87.59485626 205.92068481]
[88.59912109 190.95433044]
[89.26890564 175.96929932]
[89.93869019 160.98425293]
[82.77740479 147.92419434]
[91.12319946 134.48327637]
[91.79298401 119.49823761]
[92.46276855 104.51319885]
[90.60402679 102.09770966]
[89.58309937 98.95251465]
[89.67194366 95.38662720]
[91.02457428 91.80519867]
[93.64485168 88.66400146]
[95.20537567 73.74539948]
[96.76589966 58.82679367]
[88.31119537 71.21703339]
[76.33100891 80.24338531]
[62.08963013 84.95328522]
[47.08998489 84.84967041]
[32.91502762 79.94349670]
[21.06067467 70.75250244]
[12.77793980 58.24665451]
[8.94092274 43.74571228]
[9.95455170 28.78000069]
[15.71185780 14.92888451]
[25.60525703 3.65410495]
[38.59067535 -3.85448265]
[53.29773331 -6.80447912]
[68.17435455 -4.88456488]
[81.65058136 1.70264709]
[92.30422974 12.26199341]
[99.01099396 25.67911911]
[101.06309509 40.53827667]
[106.30981445 26.48580551]
[103.88830566 10.85100937]
[115.58861542 1.63406312]
[120.83533478 -12.41840839]
[126.08204651 -26.47087860]
[131.32876587 -40.52334976]
[136.57548523 -54.57582092]
[141.82220459 -68.62829590]
[147.06892395 -82.68076324]
[152.31564331 -96.73323822]
[139.04830933 -103.77830505]
[126.81408691 -112.49488831]
[115.82231903 -122.73382568]
[106.26107025 -134.31993103]
[98.29396820 -147.05493164]
[92.05732727 -160.72091675]
[87.65786743 -175.08406067]
[85.17087555 -189.89857483]
[84.63889313 -204.91096497]
[86.07103729 -219.86436462]
[89.44280243 -234.50288391]
[94.69647980 -248.57604980]
[101.74217987 -261.84304810]
[110.45935059 -274.07684326]
[120.69881439 -285.06814575]
[132.28536987 -294.62881470]
[145.02073669 -302.59533691]
[158.68702698 -308.83129883]
[173.05038452 -313.23007202]
[187.86502075 -315.71636963]
[202.87744141 -316.24765015]
[217.83076477 -314.81478882]
[232.46911621 -311.44232178]
[246.54203796 -306.18798828]
[259.80868530 -299.14163208]
[272.04208374 -290.42388916]
[283.03286743 -280.18389893]
[292.59301758 -268.59689331]
[300.55892944 -255.86114502]
[306.79425049 -242.19456482]
[311.19235229 -227.83099365]
[313.67791748 -213.01625061]
[314.20846558 -198.00379944]
[312.77490234 -183.05053711]
[309.40176392 -168.41233826]
[304.14672852 -154.33969116]
[297.09976196 -141.07336426]
[288.38143921 -128.84037781]
[278.14093018 -117.85007477]
[266.55346680 -108.29048157]
[253.81733704 -100.32519531]
[240.15045166 -94.09050751]
[225.78668213 -89.69309998]
[210.97181702 -87.20822144]
[195.95933533 -86.67839050]
[181.00614929 -88.11267090]
[166.36811829 -91.48651886]
[161.12139893 -77.43404388]
[155.87467957 -63.38157654]
[150.62796021 -49.32910538]
[145.38124084 -35.27663422]
[140.13452148 -21.22416115]
[134.88780212 -7.17168999]
[129.64108276 6.88078117]
[132.43786621 21.51045227]
[120.36228180 31.73252487]
[115.11556244 45.78499603]
[111.68450165 60.38731766]
[110.12397766 75.30592346]
[108.56346130 90.22452545]
[107.44780731 105.18298340]
[106.77802277 120.16802216]
[106.10823822 135.15306091]
[113.22161102 149.28495789]
[104.92372894 161.65403748]
[104.25394440 176.63908386]
[103.58415985 191.62411499]
[105.99120331 196.25588989]
[106.34546661 200.88490295]
[104.99175262 204.72970581]
[102.53504181 207.25891113]
[101.19680786 222.19909668]
[99.85857391 237.13928223]
[98.52033997 252.07946777]
[97.18210602 267.01965332]
[112.00034332 269.38619995]
[126.62000275 272.76940918]
[140.97142029 277.15322876]
[154.98619080 282.51669312]
[168.59753418 288.83428955]
[181.74057007 296.07589722]
[194.35270691 304.20700073]
[206.37379456 313.18887329]
[217.74658203 322.97869873]
[228.41683960 333.52981567]
[238.33375549 344.79193115]
[247.45004272 356.71142578]
[255.72225952 369.23144531]
[263.11099243 382.29235840]
[269.58102417 395.83190918]
[275.10156250 409.78555298]
[279.64624023 424.08682251]
[283.19342041 438.66757202]
[285.72619629 453.45831299]
[287.23251343 468.38854980]
[287.70516968 483.38711548]
[287.14193726 498.38256836]
[285.54547119 513.30340576]
[282.92343140 528.07861328]
[279.28823853 542.63763428]
[274.65728760 556.91119385]
[269.05261230 570.83129883]
[262.50091553 584.33148193]
[255.03344727 597.34753418]
[246.68576050 609.81738281]
[237.49765015 621.68157959]
[227.51292419 632.88360596]
[216.77912903 643.37011719]
[205.34742737 653.09106445]
[193.27230835 662.00018311]
[180.61131287 670.05499268]
[167.42477417 677.21710205]
[153.77551270 683.45239258]
[139.72860718 688.73107910]
[125.35099030 693.02813721]
[110.71116638 696.32305908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 161]
[54 160]
[55 159]
[57 157]
[58 156]
[59 155]
[64 154]
[65 153]
[66 152]
[84 151]
[85 150]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
[92 143]
[93 142]
[94 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
