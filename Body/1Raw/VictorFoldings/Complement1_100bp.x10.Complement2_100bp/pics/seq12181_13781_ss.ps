%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[68.82176971 785.09344482]
[54.61826706 789.93151855]
[40.14145660 793.87719727]
[25.44734383 796.91522217]
[10.59278393 799.03387451]
[-4.36475515 800.22485352]
[-19.36740685 800.48370361]
[-34.35712433 799.80926514]
[-49.27592087 798.20428467]
[-64.06607819 795.67486572]
[-78.67036438 792.23083496]
[-93.03228760 787.88555908]
[-107.09629059 782.65576172]
[-120.80794525 776.56176758]
[-134.11421204 769.62707520]
[-146.96362305 761.87860107]
[-159.30644226 753.34619141]
[-171.09494019 744.06298828]
[-182.28349304 734.06488037]
[-192.82881165 723.39050293]
[-202.69010925 712.08111572]
[-211.82923889 700.18060303]
[-220.21083069 687.73486328]
[-227.80245972 674.79217529]
[-234.57476807 661.40252686]
[-240.50152588 647.61779785]
[-245.55984497 633.49121094]
[-249.73011780 619.07745361]
[-252.99621582 604.43237305]
[-255.34553528 589.61254883]
[-256.76895142 574.67535400]
[-257.26095581 559.67852783]
[-256.81967163 544.68011475]
[-255.44680786 529.73815918]
[-253.14764404 514.91052246]
[-249.93110657 500.25442505]
[-245.80961609 485.82669067]
[-240.79911804 471.68307495]
[-234.91902161 457.87832642]
[-228.19206238 444.46585083]
[-220.64425659 431.49755859]
[-212.30480957 419.02355957]
[-203.20599365 407.09216309]
[-193.38301086 395.74954224]
[-182.87385559 385.03952026]
[-171.71919250 375.00360107]
[-159.96217346 365.68057251]
[-147.64828491 357.10647583]
[-134.82516479 349.31454468]
[-121.54243469 342.33489990]
[-107.85147095 336.19454956]
[-93.80524445 330.91723633]
[-79.45809937 326.52337646]
[-64.86554718 323.02996826]
[-50.08403397 320.45056152]
[-35.17075348 318.79507446]
[-20.18339920 318.06997681]
[-5.17995930 318.27801514]
[9.78152370 319.41842651]
[24.64316559 321.48678589]
[39.34746933 324.47509766]
[53.83754730 328.37176514]
[68.05734253 333.16177368]
[73.72012329 319.27175903]
[79.38291168 305.38171387]
[85.04570007 291.49169922]
[90.70848846 277.60165405]
[93.59375763 262.88177490]
[93.59375763 247.88177490]
[93.59375763 232.88177490]
[93.59375763 217.88177490]
[93.59375763 202.88177490]
[93.59375763 187.88177490]
[84.01306152 173.17880249]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[89.64067078 83.42923737]
[89.01151276 78.82951355]
[90.13397980 74.91095734]
[92.43579102 72.23999786]
[92.88240051 57.24665070]
[85.55941010 43.22222519]
[93.67221832 30.73096466]
[94.11882782 15.73761559]
[94.56542969 0.74426556]
[95.01203918 -14.24908447]
[95.45864105 -29.24243355]
[95.90525055 -44.23578262]
[95.90525055 -59.23578262]
[95.45864105 -74.22913361]
[95.01203918 -89.22248077]
[94.56542969 -104.21583557]
[80.16541290 -108.95031738]
[68.25503540 -118.32680511]
[60.27251816 -131.21304321]
[57.18180466 -146.05297852]
[59.35610962 -161.05458069]
[66.53287506 -174.40635681]
[77.84546661 -184.49600220]
[91.92784119 -190.10514832]
[107.07947540 -190.55647278]
[121.47074127 -185.79547119]
[133.36383057 -176.39704895]
[141.32257080 -163.49610901]
[144.38594055 -148.65051270]
[142.18399048 -133.65293884]
[134.98263550 -120.31441498]
[123.65146637 -110.24562836]
[109.55878448 -104.66243744]
[110.00538635 -89.66909027]
[110.45199585 -74.67574310]
[110.89859772 -59.68239212]
[112.84408569 -57.66416550]
[114.10733795 -54.75370026]
[114.34452820 -51.20699310]
[113.31073761 -47.39965820]
[110.89859772 -43.78917694]
[110.45199585 -28.79582787]
[110.00538635 -13.80247879]
[109.55878448 1.19087148]
[109.11217499 16.18422127]
[108.66557312 31.17757225]
[116.02050018 44.12957001]
[107.87574768 57.69325638]
[107.42914581 72.68660736]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[117.04547882 166.61262512]
[116.92271423 179.10937500]
[108.59375763 187.88177490]
[108.59375763 202.88177490]
[108.59375763 217.88177490]
[108.59375763 232.88177490]
[108.59375763 247.88177490]
[108.59375763 262.88177490]
[115.22291565 249.42613220]
[124.64437103 237.75410461]
[136.39843750 228.43519592]
[149.91160583 221.92411804]
[164.52453613 218.53852844]
[179.52423096 218.44363403]
[194.17883301 221.64405823]
[207.77330017 227.98365784]
[219.64433289 237.15309143]
[229.21270752 248.70498657]
[236.01158142 262.07568359]
[239.70921326 276.61279297]
[240.12516785 291.60702515]
[237.23918152 306.32675171]
[231.19204712 320.05383301]
[222.27883911 332.11840820]
[210.93441772 341.93188477]
[197.71232605 349.01544189]
[183.25770569 353.02340698]
[168.27581787 353.76025391]
[153.49766541 351.19000244]
[139.64430237 345.43811035]
[127.39166260 336.78521729]
[117.33758545 325.65347290]
[109.97264099 312.58602905]
[105.65616608 298.22052002]
[104.59851074 283.26446533]
[98.93572998 297.15447998]
[93.27294159 311.04449463]
[87.61015320 324.93453979]
[81.94736481 338.82455444]
[95.46293640 345.34191895]
[108.54717255 352.68692017]
[121.14946747 360.83117676]
[133.22105408 369.74316406]
[144.71522522 379.38836670]
[155.58753967 389.72952271]
[165.79589844 400.72662354]
[175.30082703 412.33706665]
[184.06555176 424.51599121]
[192.05615234 437.21627808]
[199.24172974 450.38873291]
[205.59446716 463.98245239]
[211.08981323 477.94482422]
[215.70648193 492.22183228]
[219.42662048 506.75823975]
[222.23583984 521.49780273]
[224.12326050 536.38348389]
[225.08158875 551.35772705]
[225.10713196 566.36260986]
[224.19975281 581.34002686]
[222.36300659 596.23205566]
[219.60395813 610.98114014]
[215.93331909 625.53009033]
[211.36526489 639.82275391]
[205.91748047 653.80371094]
[199.61102295 667.41900635]
[192.47032166 680.61584473]
[184.52297974 693.34320068]
[175.79975891 705.55187988]
[166.33439636 717.19464111]
[156.16352844 728.22637939]
[145.32647705 738.60449219]
[133.86518860 748.28881836]
[121.82399750 757.24182129]
[109.24949646 765.42889404]
[96.19033051 772.81835938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 174]
[64 173]
[65 172]
[66 171]
[67 170]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[75 135]
[76 134]
[77 133]
[78 132]
[80 130]
[84 129]
[85 128]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
