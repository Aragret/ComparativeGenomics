%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[143.31814575 923.81652832]
[128.40200806 922.21539307]
[113.55764771 920.04760742]
[98.80656433 917.31622314]
[84.17016602 914.02526855]
[69.66967010 910.17944336]
[55.32609558 905.78436279]
[41.16024399 900.84643555]
[27.19265556 895.37274170]
[13.44357777 889.37127686]
[-0.06705193 882.85076904]
[-13.31964493 875.82055664]
[-26.29498672 868.29095459]
[-38.97426224 860.27276611]
[-51.33909225 851.77777100]
[-63.37154388 842.81811523]
[-75.05416870 833.40692139]
[-86.37004089 823.55773926]
[-97.30274200 813.28497314]
[-107.83641815 802.60333252]
[-117.95581055 791.52850342]
[-127.64623260 780.07641602]
[-136.89364624 768.26367188]
[-145.68463135 756.10748291]
[-154.00645447 743.62542725]
[-161.84703064 730.83557129]
[-169.19500732 717.75653076]
[-176.03973389 704.40722656]
[-182.37127686 690.80694580]
[-188.18046570 676.97552490]
[-193.45886230 662.93298340]
[-198.19882202 648.69970703]
[-202.39347839 634.29620361]
[-206.03674316 619.74353027]
[-209.12333679 605.06268311]
[-211.64877319 590.27490234]
[-213.60940552 575.40179443]
[-215.00238037 560.46478271]
[-215.82568359 545.48553467]
[-216.07812500 530.48583984]
[-215.75932312 515.48742676]
[-214.86975098 500.51199341]
[-213.41070557 485.58129883]
[-211.38429260 470.71694946]
[-208.79345703 455.94055176]
[-205.64195251 441.27349854]
[-201.93434143 426.73703003]
[-197.67601013 412.35229492]
[-192.87312317 398.14007568]
[-187.53263855 384.12100220]
[-181.66232300 370.31542969]
[-175.27067566 356.74334717]
[-168.36695862 343.42443848]
[-160.96118164 330.37802124]
[-153.06408691 317.62298584]
[-144.68713379 305.17785645]
[-135.84245300 293.06066895]
[-126.54286957 281.28897095]
[-116.80187225 269.87988281]
[-106.63359070 258.84988403]
[-96.05274963 248.21501160]
[-85.07470703 237.99066162]
[-73.71537781 228.19166565]
[-61.99122620 218.83222961]
[-49.91925430 209.92593384]
[-37.51696396 201.48567200]
[-24.80233765 193.52371216]
[-11.79381084 186.05155945]
[1.48975527 179.08007812]
[15.02910137 172.61936951]
[28.80459595 166.67878723]
[42.79626465 161.26696777]
[56.98382568 156.39173889]
[71.34670258 152.06016541]
[85.86407471 148.27854919]
[100.51488495 145.05235291]
[97.84909058 130.29113770]
[95.18329620 115.52992249]
[86.03302002 108.32480621]
[84.04858398 96.84860229]
[90.24811554 86.98924255]
[87.80239105 72.18997192]
[85.35665894 57.39070129]
[82.91093445 42.59143066]
[80.46520996 27.79215813]
[65.42366791 27.21171379]
[50.80694962 23.61497307]
[37.21360779 17.14922333]
[25.20027542 8.07923126]
[15.25889397 -3.22359133]
[7.79655409 -16.29640198]
[3.11883521 -30.60387611]
[1.41728687 -45.56013489]
[2.76158619 -60.55272293]
[7.09668541 -74.96770477]
[14.24506378 -88.21480560]
[23.91400146 -99.75154877]
[35.70756149 -109.10552979]
[49.14280319 -115.89369202]
[63.66955948 -119.83807373]
[78.69297791 -120.77715302]
[93.59784698 -118.67247772]
[107.77383423 -113.61022949]
[120.64043427 -105.79769897]
[131.67076111 -95.55481720]
[140.41314697 -83.30101776]
[146.50958252 -69.53808594]
[149.71043396 -54.82960129]
[149.88461304 -39.77787399]
[147.02499390 -24.99925804]
[141.24868774 -11.09892845]
[132.79222107 1.35390210]
[122.00187683 11.84930038]
[109.31951904 19.95748520]
[95.26448059 25.34643173]
[97.71020508 40.14570236]
[100.15592957 54.94497299]
[102.60166168 69.74424744]
[105.04738617 84.54351807]
[116.02197266 97.22952271]
[109.94451141 112.86412811]
[112.61030579 127.62534332]
[115.27610779 142.38656616]
[130.12991333 140.28437805]
[145.05297852 138.74920654]
[160.02366638 137.78329468]
[175.02029419 137.38803101]
[190.02107239 137.56396484]
[205.00430298 138.31088257]
[219.94821167 139.62767029]
[234.83117676 141.51243591]
[249.63159180 143.96243286]
[264.32800293 146.97412109]
[278.89907837 150.54312134]
[293.32376099 154.66427612]
[307.58105469 159.33160400]
[321.65032959 164.53833008]
[335.51119995 170.27690125]
[349.14355469 176.53901672]
[362.52758789 183.31558228]
[375.64395142 190.59677124]
[388.47360229 198.37203979]
[400.99795532 206.63009644]
[413.19882202 215.35897827]
[425.05853271 224.54603577]
[436.55987549 234.17793274]
[447.68621826 244.24072266]
[458.42138672 254.71980286]
[468.74981689 265.59997559]
[478.65652466 276.86547852]
[488.12719727 288.49996948]
[497.14804077 300.48657227]
[505.70602417 312.80792236]
[513.78875732 325.44613647]
[521.38439941 338.38290405]
[528.48211670 351.59948730]
[535.07147217 365.07669067]
[541.14294434 378.79498291]
[546.68780518 392.73449707]
[551.69787598 406.87496948]
[556.16607666 421.19595337]
[560.08575439 435.67663574]
[563.45129395 450.29608154]
[566.25787354 465.03302002]
[568.50134277 479.86614990]
[570.17846680 494.77392578]
[571.28686523 509.73474121]
[571.82489014 524.72692871]
[571.79174805 539.72869873]
[571.18743896 554.71838379]
[570.01300049 569.67413330]
[568.26995850 584.57434082]
[565.96093750 599.39739990]
[563.08929443 614.12182617]
[559.65917969 628.72625732]
[555.67547607 643.18945312]
[551.14410400 657.49053955]
[546.07153320 671.60876465]
[540.46514893 685.52362061]
[534.33306885 699.21496582]
[527.68420410 712.66290283]
[520.52819824 725.84796143]
[512.87542725 738.75103760]
[504.73693848 751.35345459]
[496.12460327 763.63684082]
[487.05084229 775.58349609]
[477.52886963 787.17596436]
[467.57244873 798.39758301]
[457.19601440 809.23199463]
[446.41464233 819.66357422]
[435.24395752 829.67706299]
[423.70016479 839.25805664]
[411.79995728 848.39257812]
[399.56063843 857.06744385]
[386.99990845 865.27008057]
[374.13601685 872.98858643]
[360.98760986 880.21173096]
[347.57373047 886.92907715]
[333.91384888 893.13085938]
[320.02777100 898.80816650]
[305.93560791 903.95263672]
[291.65780640 908.55688477]
[277.21508789 912.61425781]
[262.62835693 916.11883545]
[247.91877747 919.06555176]
[233.10768127 921.45013428]
[218.21653748 923.26910400]
[203.26695251 924.51983643]
[188.28057861 925.20050049]
[173.27915955 925.31011963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 123]
[77 122]
[78 121]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
