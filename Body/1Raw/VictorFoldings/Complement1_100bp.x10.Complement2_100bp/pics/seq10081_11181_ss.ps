%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[80.75575256 478.36743164]
[75.99988556 464.13085938]
[72.52087402 449.52969360]
[70.34593201 434.67819214]
[69.49209595 419.69259644]
[69.96604156 404.69015503]
[71.76406097 389.78829956]
[74.87208557 375.10369873]
[79.26578522 360.75125122]
[84.91077423 346.84326172]
[91.76287842 333.48861694]
[99.76845551 320.79183960]
[108.86486053 308.85229492]
[118.98089600 297.76339722]
[130.03739929 287.61196899]
[141.94781494 278.47744751]
[133.90664673 265.81494141]
[125.86547852 253.15240479]
[117.82430267 240.48988342]
[109.78312683 227.82736206]
[111.39028931 242.74101257]
[109.56198883 257.62918091]
[104.39413452 271.71084595]
[96.15782166 284.24731445]
[85.28511047 294.58096313]
[72.34635925 302.16967773]
[58.02031708 306.61541748]
[43.05849457 307.68493652]
[28.24575996 305.32211304]
[14.35915756 299.65093994]
[2.12715292 290.96887207]
[-7.80858898 279.73141479]
[-14.92685795 266.52798462]
[-18.85424423 252.05125427]
[-19.38472366 237.06063843]
[-16.49047089 222.34251404]
[-10.32331181 208.66896057]
[-1.20676172 196.75726318]
[10.38094234 187.23228455]
[23.83193207 180.59368896]
[38.44059753 177.18974304]
[53.44059372 177.19897461]
[68.04505157 180.62092590]
[81.48785400 187.27607727]
[93.06381989 196.81532288]
[102.16653442 208.73965454]
[99.28126526 194.01977539]
[96.39598846 179.29988098]
[90.47888184 193.08348083]
[78.89237213 202.60990906]
[64.22492981 205.75094604]
[49.75328827 201.80484009]
[38.71045685 191.65319824]
[33.56342697 177.56391907]
[35.46206284 162.68455505]
[43.98220062 150.33923340]
[57.22042084 143.28588867]
[72.21926880 143.10029602]
[85.62797546 149.82389832]
[94.45098877 161.95463562]
[86.33818054 149.46337891]
[93.66117096 135.43894958]
[93.21456909 120.44560242]
[92.76795959 105.45225525]
[90.36415100 102.43661499]
[89.30126953 98.37605286]
[90.01617432 93.89320374]
[92.65130615 89.78273773]
[92.87463379 74.78440094]
[93.09796143 59.78606033]
[93.32128906 44.78772354]
[93.54461670 29.78938675]
[93.76794434 14.79104900]
[85.45208740 27.27490044]
[72.58752441 34.98871613]
[57.65819550 36.44308472]
[43.54672623 31.35718536]
[32.97781372 20.71302605]
[27.99215508 6.56582832]
[29.55239868 -8.35280514]
[37.35728836 -21.16232109]
[49.89982224 -29.38940239]
[64.75823212 -31.44552803]
[79.06359100 -26.93369293]
[90.05376434 -16.72506142]
[95.60691071 -2.78950095]
[98.49218750 -17.50939178]
[93.55385590 -32.54014206]
[103.59477997 -43.54146576]
[106.48004913 -58.26135635]
[108.81553650 -73.07842255]
[110.59800720 -87.97214508]
[112.38047028 -102.86585999]
[114.16293335 -117.75957489]
[114.94425964 -132.73921204]
[114.72093201 -147.73754883]
[114.49760437 -162.73588562]
[100.25453949 -167.97988892]
[88.87020874 -178.01789856]
[81.88426208 -191.49235535]
[80.24148560 -206.58094788]
[84.16403961 -221.24307251]
[93.12145233 -233.49580383]
[105.90229034 -241.68203735]
[120.77805328 -244.69468689]
[135.73692322 -242.12628174]
[148.75582886 -234.32420349]
[158.07408142 -222.34359741]
[162.43144226 -207.80476379]
[161.23863220 -192.67395020]
[154.65696716 -178.99746704]
[143.57655334 -168.62495422]
[129.49594116 -162.95921326]
[129.71926880 -147.96087646]
[129.94259644 -132.96253967]
[139.08290100 -144.85601807]
[153.16601562 -150.01992798]
[167.82814026 -146.85415649]
[178.52604675 -136.33966064]
[181.94488525 -121.73446655]
[177.02528381 -107.56416321]
[165.29164124 -98.21956635]
[150.37974548 -96.59619904]
[136.91021729 -103.19708252]
[129.05665588 -115.97711182]
[127.27418518 -101.08339691]
[125.49172211 -86.18967438]
[123.70925903 -71.29595947]
[136.93464661 -78.37332153]
[150.77348328 -72.58658600]
[155.02430725 -58.20150375]
[146.55355835 -45.82223129]
[131.60556030 -44.57430649]
[121.19994354 -55.37608337]
[118.31467438 -40.65619278]
[123.45937347 -26.67830658]
[113.21207428 -14.62411976]
[110.32680511 0.09577175]
[108.76628113 15.01437664]
[108.54295349 30.01271439]
[108.31962585 45.01105118]
[108.09629822 60.00938797]
[107.87297058 75.00772858]
[107.64964294 90.00606537]
[107.76130676 105.00564575]
[108.20791626 119.99900055]
[108.65451813 134.99235535]
[116.79927063 148.55603027]
[109.44434357 161.50802612]
[111.11588287 176.41461182]
[114.00115967 191.13449097]
[116.88642883 205.85438538]
[122.44565582 219.78619385]
[130.48683167 232.44871521]
[138.52799988 245.11123657]
[146.56916809 257.77377319]
[154.61035156 270.43627930]
[167.94261169 263.54077148]
[181.83213806 257.85052490]
[196.17022705 253.41015625]
[210.84463501 250.25434875]
[225.74055481 248.40783691]
[240.74136353 247.88507080]
[255.72967529 248.69012451]
[270.58816528 250.81672668]
[285.20059204 254.24819946]
[299.45254517 258.95770264]
[313.23248291 264.90838623]
[326.43258667 272.05368042]
[338.94952393 280.33761597]
[350.68533325 289.69540405]
[361.54818726 300.05380249]
[371.45303345 311.33175659]
[380.32235718 323.44094849]
[388.08676147 336.28662109]
[394.68545532 349.76828003]
[400.06680298 363.78036499]
[404.18872070 378.21322632]
[407.01889038 392.95391846]
[408.53518677 407.88705444]
[408.72576904 422.89575195]
[407.58911133 437.86257935]
[405.13412476 452.67034912]
[401.38000488 467.20321655]
[396.35614014 481.34744263]
[390.10189819 494.99227905]
[382.66613770 508.03097534]
[374.10714722 520.36145020]
[364.49185181 531.88726807]
[353.89550781 542.51812744]
[342.40109253 552.17089844]
[330.09851074 560.76995850]
[317.08410645 568.24810791]
[303.45968628 574.54675293]
[289.33190918 579.61657715]
[274.81130981 583.41796875]
[260.01159668 585.92114258]
[245.04856873 587.10650635]
[230.03930664 586.96478271]
[215.10131836 585.49707031]
[200.35151672 582.71490479]
[185.90530396 578.64001465]
[171.87577820 573.30426025]
[158.37272644 566.74951172]
[145.50184631 559.02691650]
[133.36384583 550.19708252]
[122.05373383 540.32897949]
[111.66004181 529.49993896]
[102.26409912 517.79461670]
[93.93945312 505.30471802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[46 152]
[47 151]
[48 150]
[60 149]
[62 147]
[63 146]
[64 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[86 138]
[87 137]
[89 135]
[90 134]
[91 128]
[92 127]
[93 126]
[94 125]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
