%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[22.85344505 668.80194092]
[11.47421646 658.85180664]
[3.53479695 645.98883057]
[-0.25884610 631.35662842]
[0.43061519 616.25646973]
[5.54187441 602.03088379]
[14.62044239 589.94488525]
[26.85905838 581.07318115]
[41.16947174 576.20458984]
[40.72286606 561.21118164]
[40.27626038 546.21783447]
[39.82965469 531.22448730]
[31.71684647 518.73327637]
[39.03983307 504.70883179]
[38.59322739 489.71548462]
[35.79310989 485.84658813]
[35.39368820 480.17758179]
[38.36325073 474.27053833]
[38.36325073 459.27053833]
[36.14198303 456.53222656]
[35.13668060 452.58200073]
[35.90251541 448.00302124]
[38.71318817 443.60449219]
[39.38297272 428.61944580]
[32.22169113 415.55938721]
[40.56748581 402.11846924]
[41.23727036 387.13342285]
[39.14049149 384.29867554]
[38.31258011 380.30746460]
[39.28210831 375.76730347]
[42.28638458 371.49862671]
[35.71540833 358.13183594]
[44.65304565 345.07696533]
[45.99127960 330.13677979]
[47.32951355 315.19659424]
[48.66774750 300.25640869]
[40.43699265 284.75732422]
[51.15504456 269.78384399]
[52.27069092 254.82540894]
[53.38634109 239.86694336]
[54.50198746 224.90849304]
[46.28773880 237.45944214]
[34.31777191 246.49934387]
[19.99830818 250.96621704]
[5.01158285 250.33528137]
[-8.88177776 244.68067932]
[-20.04959488 234.66670227]
[-27.17988777 221.46977234]
[-29.43499184 206.64025879]
[-26.54998207 191.92031860]
[-18.86378860 179.03923035]
[-7.27937412 169.51025391]
[6.84233379 164.45285034]
[21.84233093 164.46115112]
[35.95843506 169.53417969]
[47.53229523 179.07597351]
[55.20423126 191.96554565]
[58.07298279 206.69024658]
[54.62573624 192.20004272]
[66.23284149 181.44897461]
[70.84684753 167.17623901]
[75.46086121 152.90350342]
[80.07486725 138.63076782]
[75.48133087 121.69364166]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[104.99858856 57.38945007]
[101.19187164 42.03303528]
[112.02323151 31.80899429]
[115.99532318 17.34447098]
[119.96742249 2.87994623]
[123.93951416 -11.58457756]
[127.80382538 -26.07826996]
[123.76889038 -41.37630844]
[134.44682312 -51.76047897]
[130.41189575 -67.05851746]
[141.08982849 -77.44268799]
[144.84613037 -91.96474457]
[148.49421692 -106.51436615]
[152.03388977 -121.09074402]
[155.35615540 -135.71820068]
[158.46026611 -150.39350891]
[161.56437683 -165.06880188]
[164.44964600 -179.78869629]
[159.28807068 -194.74426270]
[169.16409302 -205.89385986]
[162.53720093 -223.07424927]
[174.38699341 -236.01834106]
[176.83271790 -250.81761169]
[179.27844238 -265.61688232]
[177.59013367 -274.59393311]
[181.87232971 -280.61761475]
[184.53813171 -295.37881470]
[187.20391846 -310.14004517]
[173.19871521 -315.64825439]
[160.53736877 -323.78317261]
[149.70657349 -334.23208618]
[141.12261963 -346.59338379]
[135.11544800 -360.39193726]
[131.91596985 -375.09738159]
[131.64715576 -390.14443970]
[134.31935120 -404.95474243]
[139.82981873 -418.95907593]
[147.96678162 -431.61907959]
[158.41744995 -442.44821167]
[170.78015137 -451.03015137]
[184.57968140 -457.03509521]
[199.28561401 -460.23217773]
[214.33271790 -460.49856567]
[229.14260864 -457.82397461]
[243.14604187 -452.31124878]
[255.80474854 -444.17224121]
[266.63217163 -433.71981812]
[275.21212769 -421.35571289]
[281.21481323 -407.55520630]
[284.40954590 -392.84875488]
[284.67346191 -377.80160522]
[281.99649048 -362.99215698]
[276.48147583 -348.98962402]
[268.34042358 -336.33224487]
[257.88626099 -325.50650024]
[245.52078247 -316.92855835]
[231.71929932 -310.92810059]
[217.01232910 -307.73574829]
[201.96513367 -307.47424316]
[199.29934692 -292.71304321]
[196.63354492 -277.95181274]
[194.07771301 -263.17117310]
[191.63198853 -248.37188721]
[189.18626404 -233.57261658]
[195.97343445 -223.55958557]
[194.05697632 -211.21005249]
[183.92530823 -203.22805786]
[189.27755737 -189.32832336]
[179.21086121 -177.12290955]
[181.14973450 -172.75828552]
[180.36737061 -167.12934875]
[176.23966980 -161.96469116]
[173.13555908 -147.28939819]
[170.03144836 -132.61408997]
[171.83950806 -128.19369507]
[170.88989258 -122.59054565]
[166.61026001 -117.55107117]
[163.07058716 -102.97469330]
[164.54690552 -95.73298645]
[159.36819458 -88.20844269]
[155.61189270 -73.68638611]
[159.91549683 -59.42706299]
[148.96888733 -48.00417709]
[153.27249146 -33.74485779]
[142.32588196 -22.32196999]
[143.69421387 -15.05908680]
[138.40403748 -7.61248159]
[134.43194580 6.85204220]
[130.45985413 21.31656647]
[126.48775482 35.78108978]
[130.57858276 50.10290527]
[119.46311188 61.36154556]
[121.00485992 65.88172913]
[119.72342682 71.41841888]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[108.93194580 125.60660553]
[104.97113037 137.45968628]
[94.34760284 143.24478149]
[89.73358917 157.51751709]
[85.11958313 171.79023743]
[80.50557709 186.06297302]
[83.62279510 201.57405090]
[72.34571838 211.30426025]
[69.46044159 226.02413940]
[68.34479523 240.98260498]
[67.22914886 255.94105530]
[66.11349487 270.89950562]
[73.92349243 281.16433716]
[72.68630981 293.60031128]
[63.60793304 301.59466553]
[62.26969910 316.53482056]
[60.93146515 331.47500610]
[59.59323120 346.41519165]
[66.06848907 360.85064697]
[57.22657013 372.83685303]
[56.22230911 387.80322266]
[55.55252457 402.78823853]
[62.66589737 416.92013550]
[54.36801147 429.28924561]
[53.69822693 444.27426147]
[53.36325073 459.27053833]
[53.36325073 474.27053833]
[53.58657837 489.26885986]
[54.03318405 504.26220703]
[62.17793655 517.82592773]
[54.82300568 530.77789307]
[55.26961136 545.77124023]
[55.71621704 560.76458740]
[56.16282272 575.75793457]
[70.73764801 579.76617432]
[83.48262024 587.89373779]
[93.26446533 599.41790771]
[99.21338654 613.31402588]
[100.80039978 628.34643555]
[97.88440704 643.17840576]
[90.72468567 656.49121094]
[79.95787048 667.10095215]
[66.54134369 674.06433105]
[51.66809845 676.76208496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 200]
[10 199]
[11 198]
[12 197]
[14 195]
[15 194]
[18 193]
[19 192]
[23 191]
[24 190]
[26 188]
[27 187]
[31 186]
[33 184]
[34 183]
[35 182]
[36 181]
[38 178]
[39 177]
[40 176]
[41 175]
[58 174]
[60 172]
[61 171]
[62 170]
[63 169]
[65 166]
[67 164]
[68 163]
[69 160]
[71 158]
[72 157]
[73 156]
[74 155]
[75 153]
[77 151]
[79 149]
[80 148]
[81 146]
[82 145]
[83 142]
[84 141]
[85 140]
[86 137]
[88 135]
[90 132]
[91 131]
[92 130]
[94 129]
[95 128]
[96 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
