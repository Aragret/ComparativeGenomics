%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[24.21340942 438.33020020]
[19.19513893 452.48556519]
[12.50717831 465.93280029]
[4.24705791 478.47583008]
[-5.46476650 489.93176270]
[-16.48666763 500.13348389]
[-28.65791130 508.93222046]
[-41.80101013 516.19970703]
[-55.72429276 521.82995605]
[-70.22472382 525.74084473]
[-85.09083557 527.87530518]
[-100.10584259 528.20227051]
[-115.05078125 526.71697998]
[-129.70770264 523.44097900]
[-143.86288452 518.42218018]
[-157.30989075 511.73373413]
[-169.85261536 503.47314453]
[-181.30815125 493.76089478]
[-191.50946045 482.73861694]
[-200.30776978 470.56704712]
[-207.57476807 457.42367554]
[-213.20448303 443.50018311]
[-217.11480713 428.99960327]
[-219.24873352 414.13342285]
[-219.57513428 399.11837769]
[-218.08926392 384.17352295]
[-214.81275940 369.51669312]
[-209.79344177 355.36172485]
[-203.10446167 341.91497803]
[-194.84341431 329.37255859]
[-185.13072205 317.91735840]
[-174.10806274 307.71646118]
[-161.93615723 298.91860962]
[-148.79252625 291.65213013]
[-134.86882019 286.02291870]
[-120.36809540 282.11312866]
[-105.50182343 279.97976685]
[-90.48679352 279.65393066]
[-75.54196167 281.14035034]
[-60.88528061 284.41741943]
[-46.73048019 289.43725586]
[-40.05028534 276.00689697]
[-33.37009048 262.57650757]
[-26.68989563 249.14613342]
[-20.00970078 235.71575928]
[-13.32950687 222.28538513]
[-25.58400917 230.93565369]
[-39.96467590 235.20137024]
[-54.95388031 234.63238525]
[-68.96977997 229.28872681]
[-80.53323364 219.73432922]
[-88.42392731 206.97749329]
[-91.80914307 192.36447144]
[-90.33162689 177.43742371]
[-84.14730072 163.77162170]
[-73.90881348 152.80926514]
[-60.69666290 145.70721436]
[-45.90515137 143.21499634]
[-31.09526443 145.59559631]
[-17.82992554 152.59779358]
[-7.50905752 163.48263550]
[-1.22184634 177.10140991]
[0.36820409 192.01689148]
[-2.90678000 206.65519714]
[6.92380095 195.32560730]
[16.75438118 183.99601746]
[26.58496284 172.66642761]
[36.41554260 161.33683777]
[38.42490005 154.22456360]
[46.47781372 149.91314697]
[49.13592911 132.56663513]
[66.67620850 126.96127319]
[76.50679016 115.63168335]
[86.33737183 104.30208588]
[89.18103790 90.61248779]
[102.33303833 85.86733246]
[103.00536346 81.57758331]
[104.82478333 78.07698059]
[107.40236664 75.62923431]
[110.30348206 74.34465790]
[113.10179901 74.17853546]
[123.58929443 63.45415497]
[134.07679749 52.72977448]
[138.19357300 37.45355988]
[152.62390137 33.76374817]
[154.63079834 27.46423340]
[158.87994385 23.69040108]
[163.58691406 22.88204575]
[174.38908386 12.47467136]
[185.19123840 2.06729865]
[175.59562683 -9.47076225]
[166.86785889 -21.67848015]
[159.05447388 -34.49072266]
[152.19718933 -47.83912659]
[146.33255005 -61.65247345]
[141.49189758 -75.85706329]
[137.70100403 -90.37710571]
[134.98014832 -105.13513184]
[133.34381104 -120.05239868]
[132.80073547 -135.04931641]
[133.35382080 -150.04586792]
[135.00012207 -164.96203613]
[137.73083496 -179.71823120]
[141.53140259 -194.23574829]
[146.38156128 -208.43710327]
[152.25540161 -222.24652100]
[159.12161255 -235.59034729]
[166.94354248 -248.39736938]
[175.67947388 -260.59924316]
[185.28277588 -272.13092041]
[195.70220947 -282.93078613]
[206.88220215 -292.94131470]
[218.76310730 -302.10900879]
[231.28149414 -310.38500977]
[244.37062073 -317.72512817]
[257.96060181 -324.09020996]
[271.97897339 -329.44631958]
[286.35092163 -333.76486206]
[300.99975586 -337.02279663]
[315.84732056 -339.20272827]
[330.81439209 -340.29302979]
[345.82113647 -340.28790283]
[360.78747559 -339.18734741]
[375.63354492 -336.99725342]
[390.28015137 -333.72930908]
[404.64913940 -329.40093994]
[418.66384888 -324.03524780]
[432.24948120 -317.66085815]
[445.33355713 -310.31179810]
[457.84628296 -302.02722168]
[469.72091675 -292.85140991]
[480.89404297 -282.83325195]
[491.30612183 -272.02624512]
[500.90151978 -260.48800659]
[509.62908936 -248.28015137]
[517.44226074 -235.46778870]
[524.29931641 -222.11926270]
[530.16375732 -208.30581665]
[535.00415039 -194.10115051]
[538.79479980 -179.58105469]
[541.51544189 -164.82298279]
[543.15155029 -149.90568542]
[543.69433594 -134.90876770]
[543.14099121 -119.91222382]
[541.49450684 -104.99607849]
[538.76354980 -90.23992157]
[534.96270752 -75.72247314]
[530.11230469 -61.52119827]
[524.23822021 -47.71186829]
[517.37182617 -34.36815643]
[509.54968262 -21.56126404]
[500.81356812 -9.35951996]
[491.21005249 2.17197394]
[480.79043579 12.97169113]
[469.61029053 22.98200989]
[457.72924805 32.14952087]
[445.21072388 40.42530823]
[432.12149048 47.76522064]
[418.53137207 54.13009644]
[404.51290894 59.48596954]
[390.14089966 63.80427170]
[375.49203491 67.06195831]
[360.64440918 69.24164581]
[345.67730713 70.33170319]
[330.67056274 70.32632446]
[315.70425415 69.22553253]
[300.85821533 67.03520203]
[286.21166992 63.76701355]
[271.84277344 59.43841171]
[257.82815552 54.07248688]
[244.24261475 47.69787216]
[231.15864563 40.34857559]
[218.64605713 32.06381226]
[206.77159119 22.88778687]
[195.59860229 12.86945534]
[184.79644775 23.27682877]
[173.99429321 33.68420029]
[163.34828186 44.25124741]
[159.98164368 58.76038361]
[144.80117798 63.21727371]
[134.31367493 73.94165802]
[123.82617950 84.66603088]
[113.66262817 95.69791412]
[110.81896210 109.38751221]
[97.66696167 114.13266754]
[87.83638000 125.46226501]
[78.00580597 136.79185486]
[78.13708496 149.68936157]
[69.71593475 158.92341614]
[57.65978622 159.91131592]
[47.74513626 171.16740417]
[37.91455460 182.49700928]
[28.08397484 193.82659912]
[18.25339317 205.15618896]
[8.42281342 216.48577881]
[0.10086939 228.96557617]
[-6.57932520 242.39595032]
[-13.25951958 255.82632446]
[-19.93971443 269.25671387]
[-26.61990929 282.68707275]
[-33.30010223 296.11746216]
[-20.75675774 304.37710571]
[-9.30048752 314.08850098]
[0.90164369 325.11001587]
[9.70085716 337.28094482]
[16.96883583 350.42376709]
[22.59958839 364.34683228]
[26.51100540 378.84710693]
[28.64604378 393.71316528]
[28.97356987 408.72814941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[64 195]
[65 194]
[66 193]
[67 192]
[68 191]
[70 190]
[72 187]
[73 186]
[74 185]
[76 183]
[81 182]
[82 181]
[83 180]
[85 178]
[88 177]
[89 176]
[90 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
