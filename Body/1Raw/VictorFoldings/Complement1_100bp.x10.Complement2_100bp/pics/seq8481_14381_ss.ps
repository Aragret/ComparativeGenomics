%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[83.49361420 503.42382812]
[71.62715149 512.61450195]
[59.01454163 520.75109863]
[45.74915695 527.77325439]
[31.92921638 533.62908936]
[17.65703392 538.27514648]
[3.03828144 541.67718506]
[-11.81880760 543.80981445]
[-26.80423546 544.65740967]
[-41.80705261 544.21368408]
[-56.71617889 542.48181152]
[-71.42123413 539.47467041]
[-85.81334686 535.21459961]
[-99.78595734 529.73303223]
[-113.23561859 523.07055664]
[-126.06275177 515.27655029]
[-138.17237854 506.40875244]
[-149.47485352 496.53274536]
[-159.88648987 485.72167969]
[-169.33021545 474.05560303]
[-177.73608398 461.62084961]
[-185.04188538 448.50955200]
[-191.19352722 434.81869507]
[-196.14544678 420.64971924]
[-199.86099243 406.10751343]
[-202.31265259 391.29971313]
[-203.48226929 376.33596802]
[-203.36120605 361.32708740]
[-201.95033264 346.38415527]
[-199.26011658 331.61785889]
[-195.31045532 317.13745117]
[-190.13059998 303.05020142]
[-183.75891113 289.46038818]
[-176.24255371 276.46862793]
[-167.63717651 264.17111206]
[-158.00648499 252.65890503]
[-147.42179871 242.01719666]
[-135.96147156 232.32481384]
[-123.71035767 223.65350342]
[-110.75916290 216.06745911]
[-97.20378113 209.62284851]
[-83.14455414 204.36740112]
[-68.68559265 200.34002686]
[-53.93394089 197.57051086]
[-38.99881363 196.07939148]
[-23.99078941 195.87770081]
[-9.02098560 196.96693420]
[5.79976511 199.33901978]
[20.36173439 202.97639465]
[34.55710602 207.85212708]
[40.63094330 194.13685608]
[46.70477676 180.42160034]
[52.77861023 166.70632935]
[39.17743301 173.03152466]
[24.43431091 170.26741028]
[14.04805946 159.44494629]
[11.89249611 144.60063171]
[18.77159119 131.27104187]
[32.11961365 124.42777252]
[46.95808029 126.62319946]
[57.75260925 137.03848267]
[60.47696304 151.79013062]
[60.32468033 136.89631653]
[74.02470398 128.98303223]
[81.68529510 116.08670044]
[89.34589386 103.19037628]
[74.58057404 105.83332825]
[62.19277954 97.37503815]
[59.27881241 82.66080475]
[67.50791931 70.11959839]
[82.16609955 66.93560028]
[94.85647583 74.93274689]
[98.30957031 89.52896881]
[107.09017944 77.36751556]
[115.87078094 65.20606232]
[124.65138245 53.04460144]
[116.96617889 42.01751328]
[113.05940247 29.18067932]
[113.29780579 15.78741169]
[117.64416504 3.14083600]
[125.66223145 -7.53290081]
[136.56048584 -15.20350647]
[149.27030945 -19.13599014]
[162.55064392 -18.96107101]
[175.10931396 -14.70980549]
[184.24812317 -26.60443878]
[193.38691711 -38.49906921]
[202.52572632 -50.39370346]
[211.66453552 -62.28833771]
[220.71452332 -74.25067139]
[229.67523193 -86.28005219]
[238.63592529 -98.30942535]
[247.59661865 -110.33880615]
[236.42378235 -120.36293793]
[226.20880127 -131.36154175]
[217.03631592 -143.24348450]
[208.98231506 -155.91030884]
[202.11355591 -169.25704956]
[196.48695374 -183.17309570]
[192.14912415 -197.54315186]
[189.13603210 -212.24813843]
[187.47262573 -227.16619873]
[187.17269897 -242.17370605]
[188.23872375 -257.14630127]
[190.66189575 -271.95993042]
[194.42210388 -286.49182129]
[199.48820496 -300.62158203]
[205.81820679 -314.23208618]
[213.35968018 -327.21060181]
[222.05010986 -339.44955444]
[231.81748962 -350.84750366]
[242.58088684 -361.31002808]
[254.25109863 -370.75042725]
[266.73144531 -379.09048462]
[279.91848755 -386.26107788]
[293.70294189 -392.20278931]
[307.97061157 -396.86636353]
[322.60324097 -400.21316528]
[337.47958374 -402.21551514]
[352.47640991 -402.85675049]
[367.46936035 -402.13156128]
[382.33428955 -400.04602051]
[396.94796753 -396.61734009]
[411.18930054 -391.87396240]
[424.94027710 -385.85519409]
[438.08697510 -378.61090088]
[450.52044678 -370.20114136]
[462.13763428 -360.69555664]
[472.84228516 -350.17294312]
[482.54571533 -338.72048950]
[491.16751099 -326.43310547]
[498.63623047 -313.41256714]
[504.88995361 -299.76684570]
[509.87689209 -285.60894775]
[513.55566406 -271.05624390]
[515.89587402 -256.22927856]
[516.87811279 -241.25094604]
[516.49420166 -226.24534607]
[514.74731445 -211.33683777]
[511.65191650 -196.64895630]
[507.23373413 -182.30340576]
[501.52932739 -168.41906738]
[494.58596802 -155.11097717]
[486.46121216 -142.48944092]
[477.22235107 -130.65902710]
[466.94595337 -119.71776581]
[455.71719360 -109.75633240]
[443.62911987 -100.85726929]
[430.78186035 -93.09431458]
[417.28192139 -86.53179932]
[403.24111938 -81.22410583]
[388.77584839 -77.21520996]
[374.00598145 -74.53833008]
[359.05386353 -73.21566010]
[344.04339600 -73.25814819]
[329.09902954 -74.66544342]
[314.34451294 -77.42589569]
[299.90219116 -81.51661682]
[285.89166260 -86.90371704]
[272.42907715 -93.54254913]
[259.62600708 -101.37811279]
[250.66529846 -89.34873199]
[241.70460510 -77.31935883]
[232.74391174 -65.28997803]
[231.26910400 -58.04796600]
[223.55915833 -53.14953613]
[214.42036438 -41.25490189]
[205.28155518 -29.36026764]
[196.14276123 -17.46563530]
[187.00395203 -5.57100296]
[195.65832520 8.65424061]
[198.19070435 25.14875031]
[194.18466187 41.38642120]
[184.22734070 54.86949921]
[169.82354736 63.51279449]
[153.16841125 65.96613312]
[136.81283569 61.82520676]
[128.03224182 73.98666382]
[119.25163269 86.14811707]
[110.47103119 98.30957031]
[102.24222565 110.85097504]
[94.58162689 123.74729919]
[86.92102814 136.64363098]
[86.52537537 152.45988464]
[73.37329102 159.45072937]
[66.49387360 172.78016663]
[60.42004395 186.49542236]
[54.34620667 200.21069336]
[48.27237320 213.92596436]
[61.42314148 221.16052246]
[73.90329742 229.49880981]
[85.62045288 238.87908936]
[96.48785400 249.23191833]
[106.42503357 260.48065186]
[115.35842896 272.54199219]
[123.22189331 285.32662964]
[129.95719910 298.73995972]
[135.51449585 312.68261719]
[139.85263062 327.05142212]
[142.93949890 341.73992920]
[144.75221252 356.63943481]
[145.27738953 371.63964844]
[144.51110840 386.62942505]
[142.45906067 401.49789429]
[139.13644409 416.13488770]
[134.56784058 430.43206787]
[128.78709412 444.28356934]
[121.83698273 457.58685303]
[113.76898193 470.24343872]
[104.64282227 482.15957642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 189]
[51 188]
[52 187]
[53 186]
[62 185]
[64 183]
[65 182]
[66 181]
[73 180]
[74 179]
[75 178]
[76 177]
[85 170]
[86 169]
[87 168]
[88 167]
[89 166]
[90 164]
[91 163]
[92 162]
[93 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
