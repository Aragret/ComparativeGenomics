%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[33.01107025 389.05334473]
[34.41550446 404.01135254]
[33.77000809 419.02124023]
[31.08660698 433.80343628]
[26.41529083 448.08251953]
[19.84308243 461.59249878]
[11.49242020 474.08172607]
[1.51887047 485.31747437]
[-9.89176559 495.09045410]
[-22.52691460 503.21859741]
[-36.15119171 509.55047607]
[-50.51078415 513.96813965]
[-65.33818054 516.38934326]
[-80.35716248 516.76885986]
[-95.28792572 515.09973145]
[-109.85232544 511.41296387]
[-123.77902985 505.77731323]
[-136.80859375 498.29772949]
[-148.69830322 489.11358643]
[-159.22662354 478.39593506]
[-168.19746399 466.34445190]
[-175.44366455 453.18368530]
[-180.83024597 439.15875244]
[-184.25686646 424.53097534]
[-185.65966797 409.57284546]
[-185.01255798 394.56298828]
[-182.32756042 379.78109741]
[-177.65469360 365.50250244]
[-171.08102417 351.99322510]
[-162.72900391 339.50494385]
[-152.75424194 328.27026367]
[-141.34254456 318.49853516]
[-128.70651245 310.37173462]
[-115.08155823 304.04132080]
[-100.72148132 299.62521362]
[-85.89382172 297.20565796]
[-70.87480927 296.82772827]
[-55.94422150 298.49850464]
[-41.38022232 302.18679810]
[-27.45412636 307.82397461]
[-19.98638535 294.81503296]
[-12.51864433 281.80606079]
[-5.05090284 268.79711914]
[2.41683817 255.78816223]
[9.88457966 242.77920532]
[17.35231972 229.77026367]
[24.82006264 216.76130676]
[31.99542809 203.58883667]
[38.87483978 190.25939941]
[45.75425339 176.92997742]
[52.63366699 163.60054016]
[59.51307678 150.27111816]
[66.39249420 136.94168091]
[52.72204208 143.11573792]
[37.86856842 141.02423096]
[26.43458176 131.31527710]
[21.96302414 116.99727631]
[25.83945847 102.50682068]
[36.86272812 92.33393860]
[51.61715698 89.63080597]
[65.53091431 95.23502350]
[74.29268646 107.41005707]
[75.18747711 122.38359070]
[83.78603363 110.09275055]
[81.36747742 95.80651093]
[89.67341614 83.93395233]
[103.92312622 81.30868530]
[112.52169037 69.01784515]
[121.12025452 56.72700500]
[129.71881104 44.43616867]
[138.31738281 32.14533234]
[146.91593933 19.85449219]
[155.51451111 7.56365490]
[140.75900269 10.26087761]
[127.66014862 2.95197821]
[122.20656586 -11.02151203]
[126.89155579 -25.27110291]
[139.57321167 -33.28207397]
[154.45364380 -31.39191246]
[164.72972107 -20.46478081]
[165.70285034 -5.49463177]
[175.53343201 -16.82422447]
[185.36401367 -28.15381813]
[194.41401672 -40.11615372]
[202.64282227 -52.65755463]
[210.87162781 -65.19895935]
[219.10043335 -77.74035645]
[227.32923889 -90.28175354]
[235.55805969 -102.82315826]
[243.78686523 -115.36455536]
[236.19805908 -130.05474854]
[237.04820251 -146.47341919]
[246.01069641 -160.14422607]
[260.56015015 -167.38778687]
[276.68325806 -166.31185913]
[284.72442627 -178.97438049]
[292.76559448 -191.63690186]
[300.80676270 -204.29943848]
[308.84796143 -216.96195984]
[297.23196411 -226.48173523]
[286.84817505 -237.33229065]
[277.84802246 -249.35537720]
[270.36276245 -262.37567139]
[264.50152588 -276.20330811]
[260.34982300 -290.63662720]
[257.96817017 -305.46514893]
[257.39129639 -320.47262573]
[258.62762451 -335.44021606]
[261.65914917 -350.14965820]
[266.44161987 -364.38641357]
[272.90530396 -377.94287109]
[280.95596313 -390.62139893]
[290.47616577 -402.23703003]
[301.32708740 -412.62039185]
[313.35052490 -421.62008667]
[326.37109375 -429.10485840]
[340.19894409 -434.96557617]
[354.63241577 -439.11676025]
[369.46102905 -441.49786377]
[384.46853638 -442.07415771]
[399.43609619 -440.83728027]
[414.14541626 -437.80520630]
[428.38198853 -433.02221680]
[441.93823242 -426.55801392]
[454.61642456 -418.50689697]
[466.23168945 -408.98623657]
[476.61468506 -398.13491821]
[485.61392212 -386.11114502]
[493.09820557 -373.09030151]
[498.95840454 -359.26223755]
[503.10903931 -344.82861328]
[505.48959351 -329.99990845]
[506.06533813 -314.99237061]
[504.82788086 -300.02487183]
[501.79528809 -285.31567383]
[497.01174927 -271.07925415]
[490.54702759 -257.52328491]
[482.49542236 -244.84538269]
[472.97436523 -233.23045349]
[462.12265015 -222.84788513]
[450.09854126 -213.84909058]
[437.07739258 -206.36528015]
[423.24911499 -200.50561523]
[408.81533813 -196.35551453]
[393.98654175 -193.97552490]
[378.97900391 -193.40034485]
[364.01153564 -194.63835144]
[349.30245972 -197.67150879]
[335.06622314 -202.45556641]
[321.51046753 -208.92077637]
[313.46929932 -196.25825500]
[305.42813110 -183.59573364]
[297.38696289 -170.93321228]
[289.34579468 -158.27069092]
[296.45367432 -146.60899353]
[297.85028076 -132.95695496]
[293.20635986 -119.97299957]
[283.37448120 -110.21018219]
[270.23321533 -105.61418915]
[256.32824707 -107.13574982]
[248.09945679 -94.59434509]
[239.87065125 -82.05294800]
[231.64183044 -69.51155090]
[223.41302490 -56.97014618]
[215.18421936 -44.42874908]
[206.95541382 -31.88734627]
[221.19400024 -36.60569000]
[235.74928284 -32.98026657]
[246.11116028 -22.13445473]
[249.06887817 -7.42895031]
[243.70596313 6.57958937]
[231.68417358 15.55046463]
[216.72859192 16.70395279]
[203.47335815 9.68263245]
[196.02577209 -3.33786368]
[196.69360352 -18.32323647]
[186.86302185 -6.99364424]
[177.03244019 4.33594894]
[167.80534363 16.16221809]
[159.20678711 28.45305634]
[150.60821533 40.74389267]
[142.00965881 53.03473282]
[133.41108704 65.32556915]
[124.81252289 77.61640930]
[116.21396637 89.90724945]
[118.63252258 104.19348907]
[110.32658386 116.06604767]
[96.07687378 118.69131470]
[87.47830963 130.98216248]
[79.72191620 143.82109070]
[72.84250641 157.15052795]
[65.96309662 170.47994995]
[59.08368301 183.80938721]
[52.20426941 197.13880920]
[45.32485580 210.46824646]
[45.57263947 215.68223572]
[43.95718765 220.03465271]
[41.11870193 222.96006775]
[37.82901382 224.22904968]
[30.36127281 237.23799133]
[22.89353180 250.24694824]
[15.42579079 263.25588989]
[7.95804930 276.26486206]
[0.49030823 289.27380371]
[-6.97743273 302.28277588]
[-14.44517422 315.29171753]
[-2.55448055 324.47457886]
[7.97501135 335.19110107]
[16.94714355 347.24160767]
[24.19476891 360.40161133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 206]
[41 205]
[42 204]
[43 203]
[44 202]
[45 201]
[46 200]
[47 199]
[48 195]
[49 194]
[50 193]
[51 192]
[52 191]
[53 190]
[63 189]
[64 188]
[67 185]
[68 184]
[69 183]
[70 182]
[71 181]
[72 180]
[73 179]
[81 178]
[82 177]
[83 176]
[84 166]
[85 165]
[86 164]
[87 163]
[88 162]
[89 161]
[90 160]
[95 154]
[96 153]
[97 152]
[98 151]
[99 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
