%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[201.35810852 448.76495361]
[207.15596008 434.90609741]
[214.74934387 421.94369507]
[224.00274658 410.10906982]
[234.75102234 399.61346436]
[246.80236816 390.64416504]
[239.52914429 377.52545166]
[232.25590515 364.40676880]
[224.98268127 351.28808594]
[220.72003174 349.13427734]
[217.76513672 344.27981567]
[217.69483948 337.66873169]
[210.81542969 324.33929443]
[203.93601990 311.00985718]
[197.05659485 297.68045044]
[190.17718506 284.35101318]
[183.29777527 271.02157593]
[176.41836548 257.69213867]
[169.14514160 244.57345581]
[161.48454285 231.67713928]
[153.82394409 218.78080750]
[140.67185974 211.78996277]
[140.27619934 195.97369385]
[132.61560059 183.07737732]
[129.93551636 182.25559998]
[127.41947174 180.32270813]
[125.49229431 177.33583069]
[124.55032349 173.50474548]
[124.90927124 169.17749023]
[118.02986145 155.84806824]
[111.15044403 142.51863098]
[104.27103424 129.18920898]
[99.79388428 143.50546265]
[87.23013306 151.70010376]
[72.32377625 150.02667236]
[61.88978577 139.25022888]
[60.69844437 124.29761505]
[69.29441833 112.00496674]
[83.74774933 107.99231720]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[65.43814850 53.37312698]
[68.01681519 38.70344162]
[62.56145477 24.73064232]
[57.10609818 10.75784397]
[51.06992722 3.90200853]
[51.67523956 -3.46381760]
[46.42852020 -17.51628876]
[41.18180084 -31.56875992]
[37.73630524 -34.21120453]
[35.53253555 -37.48350143]
[34.61602020 -40.91794586]
[34.87571716 -44.08008957]
[36.06842804 -46.61693573]
[31.66743088 -60.95678329]
[27.26643181 -75.29663086]
[15.82068348 -86.21932983]
[19.48328400 -100.65659332]
[15.08228588 -114.99644470]
[3.69606948 -118.41561127]
[-4.54152489 -126.82054901]
[-7.66668177 -138.04228210]
[-5.01445580 -149.26196289]
[2.64367795 -157.71887207]
[-1.32841837 -172.18339539]
[-5.30051470 -186.64791870]
[-9.27261066 -201.11244202]
[-13.24470711 -215.57696533]
[-16.10307312 -200.85182190]
[-22.35759354 -187.21800232]
[-31.65454292 -175.44657898]
[-43.46813202 -166.20324707]
[-57.13025284 -160.01078796]
[-71.86824036 -157.21940613]
[-86.84858704 -157.98698425]
[-101.22408295 -162.27009583]
[-114.18173218 -169.82650757]
[-124.98870850 -180.22886658]
[-133.03382874 -192.88888550]
[-137.86210632 -207.09057617]
[-139.20045471 -222.03074646]
[-136.97322083 -236.86447144]
[-131.30633545 -250.75282288]
[-122.52030945 -262.91036987]
[-111.11202240 -272.64950562]
[-97.72667694 -279.41946411]
[-83.12126923 -282.83737183]
[-68.12181091 -282.70993042]
[-53.57659149 -279.04431152]
[-40.30821991 -272.04788208]
[-29.06708145 -262.11627197]
[-20.48891830 -249.81117249]
[-15.05860233 -235.82748413]
[-13.72036839 -250.76766968]
[-12.38213444 -265.70785522]
[-11.04389954 -280.64804077]
[-24.96416092 -286.57101440]
[-36.37149048 -296.50720215]
[-44.14830780 -309.48318481]
[-47.53272629 -324.22772217]
[-46.19317245 -339.29623413]
[-40.26088333 -353.21252441]
[-30.31704330 -364.61318970]
[-17.33584785 -372.38131714]
[-2.58906221 -375.75585938]
[12.47857285 -374.40621948]
[26.39088440 -368.46459961]
[37.78488541 -358.51312256]
[45.54430771 -345.52673340]
[48.90896606 -330.77767944]
[47.54922104 -315.71096802]
[41.59828568 -301.80261230]
[31.63917351 -290.41528320]
[18.64757919 -282.66458130]
[3.89628530 -279.30981445]
[2.55805111 -264.36962891]
[1.21981680 -249.42942810]
[-0.11841731 -234.48924255]
[1.21981680 -219.54905701]
[5.19191313 -205.08453369]
[9.16400909 -190.62001038]
[13.13610554 -176.15548706]
[17.10820198 -161.69096375]
[33.53444672 -153.61048889]
[38.93039322 -135.78363037]
[29.42213249 -119.39743805]
[33.82313156 -105.05759430]
[44.95409012 -95.16057587]
[41.60628128 -79.69763184]
[46.00727844 -65.35778046]
[50.40827560 -51.01793289]
[55.23427200 -36.81547928]
[60.48099136 -22.76300621]
[65.72770691 -8.71053600]
[71.07889557 5.30248690]
[76.53425598 19.27528572]
[81.98960876 33.24808121]
[93.82584381 42.28980637]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[117.60046387 122.30979156]
[124.47987366 135.63922119]
[131.35928345 148.96865845]
[138.23870850 162.29808044]
[145.51193237 175.41677856]
[153.17253113 188.31309509]
[166.87254333 196.22637939]
[166.72026062 211.12020874]
[174.38085938 224.01654053]
[182.04145813 236.91285706]
[185.90171814 238.90090942]
[188.65196228 241.72946167]
[190.16426086 244.94635010]
[190.47067261 248.10430908]
[189.74778748 250.81274414]
[196.62721252 264.14218140]
[203.50662231 277.47158813]
[210.38603210 290.80102539]
[217.26544189 304.13046265]
[224.14485168 317.45989990]
[231.02426147 330.78930664]
[238.10137939 344.01483154]
[245.37460327 357.13354492]
[252.64782715 370.25222778]
[259.92105103 383.37094116]
[273.91281128 377.90148926]
[288.50872803 374.34585571]
[303.44833374 372.76742554]
[318.46502686 373.19442749]
[333.29080200 375.61920166]
[347.66110229 379.99850464]
[361.31945801 386.25411987]
[374.02209473 394.27450562]
[385.54235840 403.91644287]
[395.67462158 415.00790405]
[404.23809814 427.35092163]
[411.07992554 440.72525024]
[416.07803345 454.89221191]
[419.14321899 469.59893799]
[420.22076416 484.58300781]
[419.29144287 499.57699585]
[416.37185669 514.31335449]
[411.51409912 528.52905273]
[404.80487061 541.97033691]
[396.36389160 554.39746094]
[386.34179688 565.58862305]
[374.91744995 575.34399414]
[362.29473877 583.48956299]
[348.69891357 589.88000488]
[334.37265015 594.40118408]
[319.57156372 596.97247314]
[304.55981445 597.54791260]
[289.60534668 596.11737061]
[274.97497559 592.70623779]
[260.92980957 587.37542725]
[247.72055054 580.22009277]
[235.58288574 571.36791992]
[224.73344421 560.97692871]
[215.36584473 549.23254395]
[207.64726257 536.34429932]
[201.71543884 522.54223633]
[197.67623901 508.07263184]
[195.60174561 493.19381714]
[195.52899170 478.17120361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 171]
[7 170]
[8 169]
[9 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 156]
[20 155]
[21 154]
[23 152]
[24 151]
[29 150]
[30 149]
[31 148]
[32 147]
[40 146]
[42 144]
[43 143]
[44 142]
[46 140]
[47 139]
[48 138]
[50 137]
[51 136]
[52 135]
[57 134]
[58 133]
[59 132]
[61 130]
[62 129]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
