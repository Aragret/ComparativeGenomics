%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[126.03424072 240.17552185]
[130.66053772 225.89431763]
[136.64358521 212.12628174]
[143.92752075 198.99998474]
[152.44433594 186.63796997]
[162.11451721 175.15567017]
[151.62701416 164.43128967]
[141.13951111 153.70690918]
[130.65200806 142.98252869]
[120.16451263 132.25814819]
[109.67700958 121.53377533]
[106.17436218 121.12903595]
[102.69374084 119.00765228]
[100.03982544 115.19844055]
[98.97402191 110.08853912]
[91.68070221 106.65633392]
[88.91175842 98.66484833]
[79.08117676 87.33525848]
[71.09334564 82.90441132]
[69.19010162 75.76302338]
[59.52928925 64.28832245]
[49.86848068 52.81362152]
[40.20767212 41.33892441]
[27.44701767 39.46047974]
[19.63673592 29.70428658]
[20.53801918 17.64135742]
[11.04912186 6.02409458]
[1.56022334 -5.59316874]
[-7.92867517 -17.21043205]
[-20.08139992 -8.41046906]
[-32.72523880 -0.33201438]
[-45.81740570 6.99759722]
[-59.31360245 13.55356407]
[-73.16816711 19.31370354]
[-87.33420563 24.25852394]
[-101.76380157 28.37129402]
[-116.40811920 31.63809776]
[-131.21760559 34.04788208]
[-146.14216614 35.59248734]
[-161.13127136 36.26669693]
[-176.13423157 36.06822205]
[-191.10026550 34.99773407]
[-205.97872925 33.05886078]
[-220.71929932 30.25815964]
[-235.27206421 26.60510445]
[-249.58781433 22.11206055]
[-263.61810303 16.79422951]
[-277.31542969 10.66960526]
[-290.63348389 3.75891089]
[-303.52716064 -3.91446900]
[-315.95288086 -12.32456970]
[-327.86856079 -21.44293594]
[-339.23388672 -31.23871040]
[-350.01043701 -41.67874908]
[-360.16168213 -52.72772980]
[-369.65335083 -64.34825897]
[-378.45324707 -76.50102234]
[-386.53164673 -89.14488983]
[-393.86120605 -102.23709106]
[-400.41711426 -115.73331451]
[-406.17721558 -129.58790588]
[-411.12197876 -143.75396729]
[-415.23468018 -158.18357849]
[-418.50143433 -172.82791138]
[-420.91113281 -187.63740540]
[-422.45568848 -202.56196594]
[-423.12982178 -217.55108643]
[-422.93130493 -232.55403137]
[-421.86074829 -247.52006531]
[-419.92181396 -262.39852905]
[-417.12106323 -277.13906860]
[-413.46792603 -291.69183350]
[-408.97482300 -306.00756836]
[-403.65695190 -320.03781128]
[-397.53225708 -333.73513794]
[-390.62152100 -347.05316162]
[-382.94808960 -359.94680786]
[-374.53793335 -372.37249756]
[-365.41952515 -384.28811646]
[-355.62368774 -395.65341187]
[-345.18359375 -406.42990112]
[-334.13458252 -416.58111572]
[-322.51400757 -426.07272339]
[-310.36120605 -434.87258911]
[-297.71731567 -442.95092773]
[-284.62509155 -450.28045654]
[-271.12884521 -456.83630371]
[-257.27423096 -462.59631348]
[-243.10813904 -467.54101562]
[-228.67851257 -471.65368652]
[-214.03416443 -474.92034912]
[-199.22465515 -477.33001709]
[-184.30009460 -478.87451172]
[-169.31097412 -479.54858398]
[-154.30801392 -479.34997559]
[-139.34199524 -478.27938843]
[-124.46354675 -476.34039307]
[-109.72300720 -473.53955078]
[-95.17025757 -469.88638306]
[-80.85455322 -465.39321899]
[-66.82431793 -460.07528687]
[-53.12702942 -453.95053101]
[-39.80904007 -447.03973389]
[-26.91541100 -439.36624146]
[-14.48977089 -430.95605469]
[-2.57416415 -421.83758545]
[8.79109001 -412.04171753]
[19.56753540 -401.60159302]
[29.71870804 -390.55252075]
[39.21025848 -378.93191528]
[48.01007080 -366.77908325]
[56.08836746 -354.13513184]
[63.41781616 -341.04287720]
[69.97361755 -327.54660034]
[75.73358154 -313.69195557]
[80.67823029 -299.52584839]
[84.79081726 -285.09622192]
[88.05744171 -270.45184326]
[90.46704102 -255.64233398]
[92.01145935 -240.71775818]
[92.68548584 -225.72863770]
[92.48682404 -210.72569275]
[91.41615295 -195.75967407]
[89.47708893 -180.88122559]
[86.67620850 -166.14070129]
[83.02297211 -151.58796692]
[78.52974701 -137.27227783]
[73.21174622 -123.24206543]
[67.08695221 -109.54480743]
[60.17609024 -96.22684479]
[52.50255203 -83.33324432]
[44.09229660 -70.90763855]
[34.97378159 -58.99207306]
[25.17786598 -47.62685776]
[14.73769188 -36.85045624]
[3.68858838 -26.69932938]
[13.17748642 -15.08206654]
[22.66638565 -3.46480346]
[32.15528488 8.15246010]
[48.87637711 13.47899437]
[51.68236923 31.67811203]
[61.34318161 43.15281296]
[71.00399017 54.62751389]
[80.66480255 66.10221100]
[90.41076660 77.50467682]
[100.24134827 88.83426666]
[110.15599823 100.09036255]
[120.40139008 111.04627228]
[130.88888550 121.77065277]
[141.37638855 132.49504089]
[151.86389160 143.21940613]
[162.35139465 153.94378662]
[172.83889771 164.66816711]
[184.53428650 155.25682068]
[197.08340454 147.01818848]
[210.36909485 140.02920532]
[224.26730347 134.35511780]
[238.64826965 130.04890442]
[253.37770081 127.15076447]
[268.31808472 125.68777466]
[283.32992554 125.67359161]
[298.27304077 127.10833740]
[313.00793457 129.97862244]
[327.39700317 134.25765991]
[341.30593872 139.90547180]
[354.60479736 146.86933899]
[367.16946411 155.08422852]
[378.88262939 164.47344971]
[389.63488770 174.94934082]
[399.32586670 186.41407776]
[407.86511230 198.76062012]
[415.17285156 211.87368774]
[421.18084717 225.63084412]
[425.83303833 239.90364075]
[429.08596802 254.55880737]
[430.90927124 269.45953369]
[431.28591919 284.46664429]
[430.21237183 299.44006348]
[427.69869995 314.23995972]
[423.76834106 328.72814941]
[418.45800781 342.76937866]
[411.81726074 356.23251343]
[403.90814209 368.99185181]
[394.80447388 380.92831421]
[384.59124756 391.93038940]
[373.36383057 401.89535522]
[361.22708130 410.73019409]
[348.29428101 418.35241699]
[334.68618774 424.69085693]
[320.52987671 429.68627930]
[305.95751953 433.29211426]
[291.10519409 435.47467041]
[276.11154175 436.21353149]
[261.11657715 435.50186157]
[246.26029968 433.34625244]
[231.68142700 429.76687622]
[217.51608276 424.79708862]
[203.89653015 418.48336792]
[190.94992065 410.88461304]
[178.79714966 402.07180786]
[167.55169678 392.12719727]
[157.31852722 381.14367676]
[148.19322205 369.22375488]
[140.26097107 356.47875977]
[133.59582520 343.02770996]
[128.26002502 328.99612427]
[124.30339813 314.51507568]
[121.76288605 299.71978760]
[120.66220093 284.74832153]
[121.01162720 269.74057007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[15 147]
[17 146]
[18 145]
[20 144]
[21 143]
[22 142]
[23 141]
[26 139]
[27 138]
[28 137]
[29 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
