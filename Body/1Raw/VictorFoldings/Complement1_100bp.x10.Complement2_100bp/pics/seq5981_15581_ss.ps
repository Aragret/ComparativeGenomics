%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[89.63899994 763.85498047]
[74.63798523 763.18450928]
[59.80637360 760.83862305]
[45.33068085 756.84680176]
[31.39296150 751.25933838]
[18.16849518 744.14642334]
[5.82359076 735.59753418]
[-5.48649883 725.72021484]
[-15.61953831 714.63861084]
[-24.44809341 702.49212646]
[-31.86113548 689.43353271]
[-37.76543808 675.62707520]
[-42.08674622 661.24627686]
[-44.77072144 646.47210693]
[-45.78359985 631.49035645]
[-45.11265564 616.48931885]
[-42.76631546 601.65777588]
[-38.77408981 587.18225098]
[-33.18619156 573.24468994]
[-26.07288742 560.02044678]
[-17.52363777 547.67578125]
[-7.64595747 536.36596680]
[3.43593073 526.23327637]
[15.58266068 517.40509033]
[28.64147377 509.99243164]
[42.44814301 504.08853149]
[56.82903290 499.76766968]
[71.60328674 497.08413696]
[86.58511353 496.07168579]
[87.25489807 481.08663940]
[87.92468262 466.10162354]
[88.59446716 451.11657715]
[89.26425171 436.13153076]
[87.16747284 433.29678345]
[86.33956146 429.30557251]
[87.30908966 424.76541138]
[90.31336975 420.49673462]
[91.65160370 405.55654907]
[92.43292236 390.57693481]
[92.65625000 375.57858276]
[92.87957764 360.58026123]
[93.10290527 345.58190918]
[83.74217987 330.73791504]
[93.31686401 315.00875854]
[93.31686401 300.00875854]
[93.31686401 285.00875854]
[84.98790741 276.23635864]
[84.86515045 263.73959351]
[93.55978394 254.21247864]
[93.78311157 239.21414185]
[94.00643921 224.21580505]
[94.22976685 209.21746826]
[86.68281555 196.37640381]
[94.62471771 182.69296265]
[94.51305389 167.69337463]
[94.06644440 152.70002747]
[93.61984253 137.70668030]
[93.17323303 122.71332550]
[92.72663116 107.71997833]
[91.72236633 92.75363159]
[90.16184235 77.83502960]
[88.60131836 62.91642380]
[79.47030640 49.99608612]
[85.84154510 36.53292847]
[84.28102112 21.61432266]
[82.72049713 6.69571781]
[81.15997314 -8.22288704]
[79.26667786 -23.10292244]
[77.04156494 -37.93696594]
[74.70607758 -52.75403214]
[72.26035309 -67.55330658]
[62.37649155 -79.90724945]
[67.93508911 -93.72576141]
[65.48936462 -108.52503204]
[63.04363632 -123.32430267]
[53.15977859 -135.67823792]
[58.71837616 -149.49674988]
[53.05495834 -135.60699463]
[42.28825760 -125.16294098]
[28.23265457 -119.92461395]
[13.25676632 -120.77476501]
[-0.11570874 -127.57012177]
[-9.63127327 -139.16555786]
[-13.68638802 -153.60702515]
[-11.59769440 -168.46089172]
[-3.71717381 -181.22401428]
[8.62716770 -189.74559021]
[23.35509109 -192.58958435]
[37.98468399 -189.27671814]
[50.05059814 -180.36528015]
[57.52003479 -167.35543823]
[57.96664047 -182.34878540]
[58.41324615 -197.34213257]
[58.85985565 -212.33547974]
[44.33430099 -216.36930847]
[31.19653320 -223.76271057]
[20.21036720 -234.08587646]
[12.01452351 -246.73860168]
[7.08549643 -260.98529053]
[5.70985365 -275.99765015]
[7.96757317 -290.90289307]
[13.72739410 -304.83444214]
[22.65444946 -316.98233032]
[34.22972870 -326.64028931]
[47.78026199 -333.24682617]
[62.51824188 -336.41787720]
[77.58681488 -335.96902466]
[92.10992432 -331.92639160]
[105.24320221 -324.52502441]
[116.22310638 -314.19519043]
[124.41128540 -301.53750610]
[129.33166504 -287.28784180]
[130.69821167 -272.27462769]
[128.43145752 -257.37075806]
[122.66319275 -243.44271851]
[113.72877502 -231.30024719]
[102.14763641 -221.64930725]
[88.59310150 -215.05097961]
[73.85320282 -211.88888550]
[73.40660095 -196.89552307]
[72.95999146 -181.90217590]
[72.51338959 -166.90882874]
[73.51764679 -151.94248962]
[83.22657013 -140.64707947]
[77.84290314 -125.77002716]
[80.28863525 -110.97075653]
[82.73435974 -96.17148590]
[92.44328308 -84.87608337]
[87.05962372 -69.99903107]
[89.50534821 -55.19976044]
[93.69738007 -49.11300278]
[91.87561035 -40.16208267]
[94.10072327 -25.32803917]
[96.70362091 -22.94953537]
[98.28378296 -19.19212532]
[98.20567322 -14.55022907]
[96.07857513 -9.78341007]
[97.63909912 5.13519478]
[99.19962311 20.05380058]
[100.76014709 34.97240448]
[109.77954102 46.82566452]
[103.51992798 61.35589981]
[105.08045197 76.27450562]
[106.64097595 91.19310760]
[117.97037506 81.36230469]
[132.74719238 83.94024658]
[140.07849121 97.02657318]
[134.55993652 110.97452545]
[120.25958252 115.50220490]
[107.71997833 107.27336884]
[108.16658020 122.26672363]
[108.61318970 137.26007080]
[109.05979919 152.25341797]
[109.50640106 167.24676514]
[112.25127411 171.68667603]
[112.94885254 176.27651978]
[111.88484955 180.21136475]
[109.62305450 182.91629028]
[117.15403748 196.83012390]
[109.22810364 209.44079590]
[109.00477600 224.43913269]
[108.78144836 239.43746948]
[108.55812073 254.43580627]
[117.89756012 270.30578613]
[108.31686401 285.00875854]
[108.31686401 300.00875854]
[108.31686401 315.00875854]
[116.86869049 324.66427612]
[116.55988312 337.15780640]
[108.10124207 345.80523682]
[107.87791443 360.80358887]
[107.65458679 375.80191040]
[107.43125916 390.80026245]
[119.84858704 382.38537598]
[134.21435547 386.70101929]
[139.93865967 400.56579590]
[132.80175781 413.75915527]
[118.06469727 416.55541992]
[106.59178925 406.89480591]
[105.25355530 421.83499146]
[104.24929047 436.80133057]
[103.57950592 451.78634644]
[102.90972137 466.77139282]
[102.23993683 481.75643921]
[101.57015228 496.74148560]
[116.40190887 499.08648682]
[130.87783813 503.07742310]
[144.81588745 508.66406250]
[158.04078674 515.77618408]
[170.38619995 524.32434082]
[181.69688416 534.20098877]
[191.83058167 545.28198242]
[200.65986633 557.42791748]
[208.07368469 570.48602295]
[213.97880554 584.29217529]
[218.30097961 598.67266846]
[220.98583984 613.44671631]
[221.99961853 628.42846680]
[221.32955933 643.42950439]
[218.98411560 658.26116943]
[214.99275208 672.73699951]
[209.40568542 686.67486572]
[202.29318237 699.89953613]
[193.74465942 712.24468994]
[183.86766052 723.55505371]
[172.78637695 733.68847656]
[160.64018250 742.51739502]
[147.58180237 749.93078613]
[133.77549744 755.83551025]
[119.39485931 760.15728760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[37 180]
[38 179]
[39 173]
[40 172]
[41 171]
[42 170]
[44 167]
[45 166]
[46 165]
[49 163]
[50 162]
[51 161]
[52 160]
[54 158]
[55 154]
[56 153]
[57 152]
[58 151]
[59 150]
[60 144]
[61 143]
[62 142]
[64 140]
[65 139]
[66 138]
[67 137]
[68 133]
[69 132]
[70 130]
[71 129]
[73 127]
[74 126]
[75 125]
[77 123]
[91 122]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
