%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[62.15476990 682.28656006]
[47.16000366 683.21972656]
[32.17784500 682.10229492]
[17.48739815 678.95513916]
[3.36234045 673.83691406]
[-9.93418789 666.84289551]
[-22.15447998 658.10345459]
[-33.07088089 647.78131104]
[-42.48002243 636.06884766]
[-50.20661926 623.18420410]
[-56.10672760 609.36749268]
[-60.07043839 594.87603760]
[-62.02390289 579.97979736]
[-61.93072891 564.95629883]
[-59.79265976 550.08544922]
[-55.64952087 535.64422607]
[-49.57849884 521.90173340]
[-41.69268799 509.11395264]
[-32.13900375 497.51907349]
[-21.09541702 487.33316040]
[-8.76767063 478.74594116]
[4.61458015 471.91738892]
[18.80203247 466.97470093]
[33.53038406 464.01000977]
[48.52524948 463.07849121]
[49.64089966 448.12005615]
[50.75654602 433.16159058]
[43.98728943 419.89410400]
[52.72956848 406.70764160]
[53.84521484 391.74917603]
[54.96086502 376.79071045]
[56.07651520 361.83227539]
[54.06506348 358.93634033]
[53.35635376 354.92227173]
[54.46063232 350.41296387]
[57.59066772 346.23562622]
[59.37313461 331.34191895]
[61.15560150 316.44821167]
[62.93806458 301.55447388]
[64.72053528 286.66076660]
[58.55044937 273.10424805]
[67.87281799 260.32128906]
[69.65528107 245.42756653]
[71.21580505 230.50897217]
[72.55403900 215.56878662]
[73.89227295 200.62860107]
[75.23050690 185.68841553]
[64.38752747 196.05323792]
[49.53898239 198.17944336]
[36.22301865 191.27401733]
[29.40615654 177.91249084]
[31.63092232 163.07838440]
[42.06752777 152.30447388]
[56.82338333 149.60914612]
[70.39491272 155.99769592]
[77.72050476 169.08848572]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[107.60418701 27.80739975]
[110.70829773 13.13209629]
[113.81240845 -1.54320562]
[112.52663422 -10.58668900]
[117.07352448 -16.41314316]
[120.39578247 -31.04060173]
[123.71804810 -45.66806412]
[119.22942352 -60.83918381]
[129.59344482 -71.53667450]
[116.35698700 -64.48004150]
[101.96803284 -68.71774292]
[94.66924286 -81.82222748]
[98.64168549 -96.28665924]
[111.60977173 -103.82514191]
[126.14479065 -100.11930084]
[133.92027283 -87.29294586]
[138.53428650 -101.56568146]
[143.04191589 -115.87236786]
[147.44290161 -130.21221924]
[151.84390259 -144.55206299]
[156.24490356 -158.89190674]
[160.64590454 -173.23175049]
[165.04690552 -187.57159424]
[163.94116211 -194.08995056]
[165.98628235 -199.39225769]
[169.79829407 -202.26933289]
[174.62429810 -216.47178650]
[179.45030212 -230.67424011]
[176.56436157 -246.23001099]
[187.98506165 -255.79122925]
[192.81105042 -269.99368286]
[197.63705444 -284.19613647]
[184.33541870 -291.19708252]
[172.29281616 -300.19274902]
[161.80578613 -310.96163940]
[153.13261414 -323.23855591]
[146.48686218 -336.72113037]
[142.03218079 -351.07742310]
[139.87828064 -365.95379639]
[140.07821655 -380.98400879]
[142.62704468 -395.79785156]
[147.46200562 -410.03054810]
[154.46405029 -423.33157349]
[163.46070862 -435.37344360]
[174.23046875 -445.85958862]
[186.50808716 -454.53173828]
[199.99122620 -461.17639160]
[214.34785461 -465.62988281]
[229.22444153 -467.78256226]
[244.25460815 -467.58139038]
[259.06823730 -465.03131104]
[273.30053711 -460.19519043]
[286.60101318 -453.19204712]
[298.64215088 -444.19439697]
[309.12738037 -433.42376709]
[317.79852295 -421.14544678]
[324.44207764 -407.66174316]
[328.89437866 -393.30474854]
[331.04580688 -378.42800903]
[330.84338379 -363.39785767]
[328.29211426 -348.58441162]
[323.45480347 -334.35250854]
[316.45059204 -321.05261230]
[307.45193481 -309.01223755]
[296.68045044 -298.52789307]
[284.40139771 -289.85775757]
[270.91714478 -283.21533203]
[256.55978394 -278.76422119]
[241.68286133 -276.61401367]
[226.65272522 -276.81765747]
[211.83950806 -279.37014771]
[207.01350403 -265.16769409]
[202.18751526 -250.96524048]
[205.41864014 -236.42532349]
[193.65275574 -225.84825134]
[188.82675171 -211.64579773]
[184.00076294 -197.44334412]
[179.38674927 -183.17060852]
[174.98574829 -168.83074951]
[170.58474731 -154.49090576]
[166.18374634 -140.15106201]
[161.78276062 -125.81121826]
[157.38175964 -111.47136688]
[158.42440796 -104.15463257]
[152.80700684 -96.95166779]
[148.19300842 -82.67893982]
[144.22090149 -68.21440887]
[148.94715881 -54.08954620]
[138.34550476 -42.34580231]
[135.02323914 -27.71834373]
[131.70098877 -13.09088326]
[128.48771667 1.56090450]
[125.38360596 16.23620605]
[122.27949524 30.91150856]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[92.39581299 172.19259644]
[90.17069244 187.02664185]
[88.83245850 201.96682739]
[87.49422455 216.90701294]
[86.15599060 231.84719849]
[88.58670807 237.99562073]
[87.68311310 243.60638428]
[84.54900360 247.21003723]
[82.76653290 262.10375977]
[88.80912018 276.72558594]
[79.61425018 288.44323730]
[77.83178711 303.33694458]
[76.04931641 318.23068237]
[74.26685333 333.12438965]
[72.48438263 348.01809692]
[71.03496552 362.94790649]
[69.91931915 377.90637207]
[68.80367279 392.86480713]
[67.68801880 407.82327271]
[74.37747955 422.16070557]
[65.71500397 434.27725220]
[64.59934998 449.23568726]
[63.48370361 464.19415283]
[78.17449188 467.33972168]
[92.30010223 472.45642090]
[105.59738922 479.44900513]
[117.81862640 488.18713379]
[128.73614502 498.50805664]
[138.14654541 510.21951294]
[145.87454224 523.10327148]
[151.77615356 536.91943359]
[155.74142456 551.41046143]
[157.69650269 566.30645752]
[157.60496521 581.32995605]
[155.46849060 596.20104980]
[151.32691956 610.64270020]
[145.25738525 624.38586426]
[137.37295532 637.17449951]
[127.82052612 648.77038574]
[116.77804565 658.95751953]
[104.45123291 667.54608154]
[91.06971741 674.37609863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 191]
[26 190]
[27 189]
[29 187]
[30 186]
[31 185]
[32 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[42 177]
[43 176]
[44 173]
[45 172]
[46 171]
[47 170]
[56 169]
[57 168]
[58 167]
[59 166]
[60 165]
[62 163]
[63 162]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[70 156]
[71 155]
[72 154]
[74 152]
[81 151]
[82 150]
[83 148]
[84 147]
[85 146]
[86 145]
[87 144]
[88 143]
[91 142]
[92 141]
[93 140]
[95 138]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
