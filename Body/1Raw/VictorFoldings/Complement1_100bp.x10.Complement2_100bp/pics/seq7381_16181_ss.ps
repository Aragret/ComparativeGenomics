%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[32.94355392 989.41888428]
[17.94738007 989.01531982]
[2.97516441 988.07684326]
[-11.95401382 986.60449219]
[-26.82112885 984.60028076]
[-41.60723877 982.06671143]
[-56.29349136 979.00695801]
[-70.86118317 975.42498779]
[-85.29174042 971.32537842]
[-99.56678009 966.71325684]
[-113.66810608 961.59460449]
[-127.57775116 955.97589111]
[-141.27798462 949.86431885]
[-154.75135803 943.26763916]
[-167.98068237 936.19421387]
[-180.94912720 928.65313721]
[-193.64013672 920.65405273]
[-206.03756714 912.20703125]
[-218.12559509 903.32287598]
[-229.88882446 894.01300049]
[-241.31225586 884.28912354]
[-252.38136292 874.16375732]
[-263.08200073 863.64978027]
[-273.40057373 852.76055908]
[-283.32388306 841.50994873]
[-292.83932495 829.91235352]
[-301.93475342 817.98248291]
[-310.59857178 805.73559570]
[-318.81976318 793.18731689]
[-326.58786011 780.35357666]
[-333.89291382 767.25073242]
[-340.72564697 753.89550781]
[-347.07733154 740.30493164]
[-352.93991089 726.49627686]
[-358.30587769 712.48718262]
[-363.16839600 698.29553223]
[-367.52130127 683.93933105]
[-371.35903931 669.43688965]
[-374.67669678 654.80676270]
[-377.47003174 640.06750488]
[-379.73553467 625.23797607]
[-381.47030640 610.33703613]
[-382.67208862 595.38360596]
[-383.33938599 580.39685059]
[-383.47137451 565.39587402]
[-383.06784058 550.39965820]
[-382.12930298 535.42749023]
[-380.65698242 520.49829102]
[-378.65274048 505.63116455]
[-376.11914062 490.84506226]
[-373.05938721 476.15881348]
[-369.47741699 461.59112549]
[-365.37774658 447.16058350]
[-360.76565552 432.88555908]
[-355.64697266 418.78421021]
[-350.02825928 404.87457275]
[-343.91665649 391.17434692]
[-337.31994629 377.70098877]
[-330.24655151 364.47167969]
[-322.70547485 351.50323486]
[-314.70632935 338.81222534]
[-306.25930786 326.41482544]
[-297.37515259 314.32678223]
[-288.06524658 302.56356812]
[-278.34140015 291.14013672]
[-268.21600342 280.07104492]
[-257.70199585 269.37042236]
[-246.81275940 259.05187988]
[-235.56214905 249.12855530]
[-223.96453857 239.61312866]
[-212.03468323 230.51771545]
[-199.78779602 221.85389709]
[-187.23947144 213.63272095]
[-174.40571594 205.86465454]
[-161.30288696 198.55961609]
[-147.94766235 191.72689819]
[-134.35707092 185.37521362]
[-120.54842377 179.51264954]
[-106.53933716 174.14669800]
[-92.34765625 169.28416443]
[-77.99145508 164.93127441]
[-63.48904037 161.09356689]
[-48.85889053 157.77592468]
[-34.11964417 154.98258972]
[-19.29009247 152.71710205]
[-4.38912725 150.98237610]
[10.56425953 149.78059387]
[25.55101395 149.11329651]
[40.55203629 148.98133850]
[55.54820633 149.38488770]
[70.52042389 150.32342529]
[85.44960022 151.79576111]
[87.45361328 136.93023682]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[82.90885925 56.93222427]
[70.82511139 47.89644241]
[61.49249649 36.04044342]
[55.54733276 22.17258453]
[53.39497375 7.23840332]
[55.18217087 -7.74386454]
[60.78706741 -21.75270271]
[69.82751465 -33.83296585]
[81.68711853 -43.16099930]
[95.55726624 -49.10080719]
[110.49227905 -51.24739838]
[125.47385406 -49.45441818]
[139.48052979 -43.84411240]
[151.55729675 -34.79900360]
[160.88075256 -22.93580055]
[166.81520081 -9.06335640]
[168.95602417 5.87248278]
[167.15727234 20.85336494]
[161.54154968 34.85787201]
[152.49177551 46.93114853]
[140.62498474 56.25002289]
[126.75024414 62.17911911]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.31913757 138.93424988]
[100.31512451 153.79977417]
[115.10123444 156.33334351]
[129.78750610 159.39305115]
[144.35519409 162.97499084]
[158.78576660 167.07460022]
[173.06080627 171.68666077]
[187.16213989 176.80528259]
[201.07179260 182.42396545]
[214.77204895 188.53553772]
[228.24542236 195.13220215]
[241.47477722 202.20556641]
[254.44322205 209.74661255]
[267.13424683 217.74572754]
[279.53170776 226.19271851]
[291.61975098 235.07681274]
[303.38299561 244.38670349]
[314.80645752 254.11051941]
[325.87557983 264.23587036]
[336.57623291 274.74984741]
[346.89480591 285.63906860]
[356.81814575 296.88961792]
[366.33361816 308.48721313]
[375.42907715 320.41705322]
[384.09292603 332.66390991]
[392.31414795 345.21221924]
[400.08224487 358.04592896]
[407.38729858 371.14877319]
[414.22006226 384.50396729]
[420.57180786 398.09454346]
[426.43438721 411.90316772]
[431.80038452 425.91223145]
[436.66296387 440.10391235]
[441.01586914 454.46008301]
[444.85363770 468.96249390]
[448.17132568 483.59262085]
[450.96469116 498.33187866]
[453.23022461 513.16143799]
[454.96499634 528.06237793]
[456.16683960 543.01574707]
[456.83416748 558.00250244]
[456.96615601 573.00354004]
[456.56265259 587.99969482]
[455.62414551 602.97192383]
[454.15185547 617.90112305]
[452.14764404 632.76824951]
[449.61407471 647.55432129]
[446.55435181 662.24060059]
[442.97241211 676.80828857]
[438.87277222 691.23883057]
[434.26071167 705.51391602]
[429.14205933 719.61523438]
[423.52337646 733.52484131]
[417.41177368 747.22509766]
[410.81509399 760.69848633]
[403.74172974 773.92779541]
[396.20065308 786.89624023]
[388.20153809 799.58728027]
[379.75454712 811.98474121]
[370.87042236 824.07275391]
[361.56054688 835.83599854]
[351.83670044 847.25946045]
[341.71133423 858.32855225]
[331.19735718 869.02923584]
[320.30813599 879.34777832]
[309.05755615 889.27111816]
[297.45996094 898.78656006]
[285.53012085 907.88201904]
[273.28323364 916.54583740]
[260.73495483 924.76702881]
[247.90119934 932.53515625]
[234.79837036 939.84020996]
[221.44316101 946.67297363]
[207.85258484 953.02465820]
[194.04396057 958.88726807]
[180.03488159 964.25323486]
[165.84320068 969.11578369]
[151.48701477 973.46868896]
[136.98460388 977.30645752]
[122.35446167 980.62408447]
[107.61521912 983.41748047]
[92.78567505 985.68298340]
[77.88471222 987.41772461]
[62.93132782 988.61956787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[92 128]
[93 127]
[94 126]
[95 125]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
