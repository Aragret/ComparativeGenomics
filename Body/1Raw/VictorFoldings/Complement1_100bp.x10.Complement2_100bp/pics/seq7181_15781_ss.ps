%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[144.99180603 852.67315674]
[130.46842957 848.90905762]
[116.15433502 844.41418457]
[102.08627319 839.20007324]
[88.30036163 833.28015137]
[74.83198547 826.66955566]
[61.71571732 819.38531494]
[48.98522568 811.44604492]
[36.67319107 802.87219238]
[24.81121826 793.68579102]
[13.42975521 783.91033936]
[2.55802059 773.57098389]
[-7.77607965 762.69421387]
[-17.54601669 751.30804443]
[-26.72671318 739.44165039]
[-35.29460144 727.12542725]
[-43.22768784 714.39111328]
[-50.50560379 701.27130127]
[-57.10967255 687.79974365]
[-63.02294159 674.01098633]
[-68.23023224 659.94036865]
[-72.71817017 645.62414551]
[-76.47524261 631.09893799]
[-79.49179840 616.40209961]
[-81.76010132 601.57128906]
[-83.27432251 586.64465332]
[-84.03057861 571.66052246]
[-84.02693176 556.65728760]
[-83.26338196 541.67346191]
[-81.74188995 526.74761963]
[-79.46637726 511.91793823]
[-76.44266510 497.22253418]
[-72.67852783 482.69918823]
[-68.18362427 468.38510132]
[-62.96948624 454.31704712]
[-57.04951096 440.53115845]
[-50.43888474 427.06280518]
[-43.15458298 413.94656372]
[-35.21530151 401.21609497]
[-26.64142227 388.90408325]
[-17.45495224 377.04211426]
[-7.67947435 365.66067505]
[2.65991783 354.78897095]
[13.53668308 344.45492554]
[24.92290115 334.68499756]
[36.78934479 325.50433350]
[49.10554886 316.93649292]
[61.83990097 309.00344849]
[74.95971680 301.72555542]
[88.43130493 295.12152100]
[102.22010040 289.20828247]
[116.29068756 284.00103760]
[130.60696411 279.51315308]
[119.92903137 269.12896729]
[123.96396637 253.83093262]
[120.20766449 239.30886841]
[116.45136261 224.78681946]
[112.69506073 210.26475525]
[108.93875885 195.74269104]
[100.41282654 208.08403015]
[85.68286896 210.91744995]
[73.18687439 202.61985779]
[70.08311462 187.94448853]
[78.14956665 175.29804993]
[92.76540375 171.92500305]
[105.55744171 179.75682068]
[103.11170959 164.95755005]
[100.66598511 150.15827942]
[90.95706177 138.86288452]
[96.34072113 123.98582458]
[93.89499664 109.18655396]
[83.17082214 119.67426300]
[68.26676941 117.98042297]
[60.16954422 105.35366821]
[64.84812164 91.10197449]
[78.85363007 85.73115540]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[80.24668121 50.26380157]
[86.81765747 36.89699173]
[85.47942352 21.95680809]
[76.54178619 8.90195370]
[83.11276245 -4.46485424]
[81.77452850 -19.40503883]
[72.39538574 -28.25910187]
[71.58834076 -40.73036575]
[79.24176788 -50.09794998]
[78.12611389 -65.05640411]
[77.01046753 -80.01485443]
[62.12789154 -82.38247681]
[48.19271469 -88.11898804]
[35.95644760 -96.91503906]
[26.07897377 -108.29626465]
[19.09297562 -121.64888763]
[15.37519741 -136.25282288]
[15.12613392 -151.32048035]
[18.35921860 -166.03932190]
[24.90009308 -179.61552429]
[34.39601898 -191.31698608]
[46.33489227 -200.51264954]
[60.07286072 -206.70658875]
[74.86905670 -209.56477356]
[89.92553711 -208.93309021]
[104.43033600 -204.84558105]
[117.60121155 -197.52268982]
[128.72787476 -187.35932922]
[137.21029663 -174.90361023]
[142.59101868 -160.82722473]
[144.57987976 -145.88931274]
[143.06959534 -130.89544678]
[138.14163208 -116.65425110]
[130.06173706 -103.93370819]
[119.26566315 -93.41983795]
[106.33562469 -85.67962646]
[91.96892548 -81.13050842]
[93.08457184 -66.17205048]
[94.20021820 -51.21360016]
[104.84793091 -37.26393509]
[96.71471405 -20.74327278]
[98.05294800 -5.80308867]
[106.89486694 6.18314314]
[100.41960907 20.61857224]
[101.75784302 35.55875778]
[110.59976196 47.54499054]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.69426727 106.74082184]
[111.13999176 121.54009247]
[121.02384949 133.89404297]
[115.46525574 147.71255493]
[117.91098022 162.51182556]
[120.35671234 177.31109619]
[123.46082306 191.98638916]
[127.21711731 206.50845337]
[130.97341919 221.03051758]
[134.72972107 235.55256653]
[138.48602295 250.07463074]
[149.43263245 261.49752808]
[145.12902832 275.75683594]
[159.82585144 272.74017334]
[174.65660095 270.47174072]
[189.58322144 268.95739746]
[204.56738281 268.20101929]
[219.57061768 268.20452881]
[234.55441284 268.96795654]
[249.48031616 270.48931885]
[264.30999756 272.76473999]
[279.00540161 275.78833008]
[293.52880859 279.55233765]
[307.84292603 284.04711914]
[321.91101074 289.26113892]
[335.69696045 295.18099976]
[349.16537476 301.79153442]
[362.28167725 309.07571411]
[375.01220703 317.01489258]
[387.32427979 325.58868408]
[399.18630981 334.77505493]
[410.56781006 344.55044556]
[421.43960571 354.88973999]
[431.77377319 365.76641846]
[441.54376221 377.15255737]
[450.72454834 389.01892090]
[459.29248047 401.33505249]
[467.22564697 414.06933594]
[474.50363159 427.18908691]
[481.10778809 440.66064453]
[487.02111816 454.44937134]
[492.22848511 468.51992798]
[496.71649170 482.83615112]
[500.47366333 497.36135864]
[503.49029541 512.05816650]
[505.75866699 526.88891602]
[507.27297974 541.81555176]
[508.02932739 556.79974365]
[508.02575684 571.80297852]
[507.26229858 586.78674316]
[505.74087524 601.71264648]
[503.46545410 616.54229736]
[500.44180298 631.23773193]
[496.67776489 645.76110840]
[492.18292236 660.07519531]
[486.96887207 674.14331055]
[481.04898071 687.92919922]
[474.43841553 701.39758301]
[467.15417480 714.51391602]
[459.21496582 727.24438477]
[450.64117432 739.55645752]
[441.45474243 751.41845703]
[431.67935181 762.79998779]
[421.33999634 773.67169189]
[410.46328735 784.00585938]
[399.07714844 793.77581787]
[387.21075439 802.95654297]
[374.89459229 811.52447510]
[362.16027832 819.45758057]
[349.04049683 826.73553467]
[335.56893921 833.33966064]
[321.78018188 839.25292969]
[307.70962524 844.46026611]
[293.39337158 848.94824219]
[278.86816406 852.70538330]
[264.17132568 855.72198486]
[249.34057617 857.99029541]
[234.41394043 859.50457764]
[219.42979431 860.26086426]
[204.42655945 860.25726318]
[189.44276428 859.49377441]
[174.51686096 857.97229004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 141]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[66 134]
[67 133]
[68 132]
[70 130]
[71 129]
[77 128]
[78 127]
[79 126]
[81 124]
[82 123]
[84 121]
[85 120]
[88 118]
[89 117]
[90 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
