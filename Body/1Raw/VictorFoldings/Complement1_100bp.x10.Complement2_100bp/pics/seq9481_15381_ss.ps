%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[85.38103485 564.70825195]
[70.43228912 563.39013672]
[55.61964417 560.98431396]
[41.02212906 557.50366211]
[26.71763039 552.96673584]
[12.78246784 547.39770508]
[-0.70900619 540.82641602]
[-13.68480968 533.28778076]
[-26.07570839 524.82208252]
[-37.81559372 515.47448730]
[-48.84182358 505.29486084]
[-59.09556961 494.33752441]
[-68.52212524 482.66094971]
[-77.07119751 470.32742310]
[-84.69715881 457.40274048]
[-91.35933685 443.95590210]
[-97.02217865 430.05862427]
[-101.65547180 415.78503418]
[-105.23449707 401.21133423]
[-107.74015045 386.41525269]
[-109.15907288 371.47573853]
[-109.48368835 356.47250366]
[-108.71227264 341.48559570]
[-106.84893036 326.59497070]
[-103.90360260 311.88009644]
[-99.89202118 297.41949463]
[-94.83557129 283.29025269]
[-88.76123810 269.56784058]
[-81.70143127 256.32543945]
[-73.69382477 243.63366699]
[-64.78113556 231.56030273]
[-55.01091385 220.16972351]
[-44.43529892 209.52272034]
[-33.11071014 199.67608643]
[-21.09756851 190.68237305]
[-8.45997429 182.58956909]
[4.73464680 175.44082642]
[18.41589546 169.27432251]
[32.51077271 164.12292480]
[46.94408035 160.01414490]
[61.63880539 156.96989441]
[76.51654816 155.00642395]
[91.49791718 154.13420105]
[91.72125244 139.13586426]
[91.94458008 124.13751984]
[92.16790771 109.13918304]
[84.71526337 122.15679169]
[73.30458069 131.89312744]
[59.27637863 137.20439148]
[44.27867126 137.46661377]
[30.07337570 132.64898682]
[18.32931328 123.31747437]
[10.42616940 110.56835175]
[7.29239416 95.89935303]
[9.29614162 81.03379059]
[16.20201302 67.71804810]
[27.19871330 57.51644897]
[40.99436188 51.62747192]
[55.96826172 50.74293900]
[70.36128998 54.96677017]
[82.48256683 63.80275345]
[90.90810394 76.21284485]
[94.64819336 90.74068451]
[98.40449524 76.21862030]
[102.16079712 61.69656372]
[105.91709900 47.17450333]
[109.67340088 32.65244293]
[113.42970276 18.13038445]
[117.18599701 3.60832620]
[102.95191956 -1.14263129]
[89.07952881 -6.86429834]
[75.63494110 -13.52940845]
[62.68222046 -21.10619926]
[50.28310013 -29.55856133]
[38.49666214 -38.84621811]
[27.37907791 -48.92490768]
[16.98332787 -59.74660110]
[7.35895300 -71.25972748]
[-1.44818258 -83.40942383]
[-9.39610767 -96.13777924]
[-16.44694710 -109.38415527]
[-22.56710052 -123.08540344]
[-27.72740173 -137.17625427]
[-31.90325928 -151.58953857]
[-35.07477188 -166.25659180]
[-37.22682953 -181.10748291]
[-38.34917068 -196.07148743]
[-38.43645096 -211.07723999]
[-37.48825455 -226.05328369]
[-35.50910187 -240.92820740]
[-32.50841904 -255.63116455]
[-28.50050735 -270.09204102]
[-23.50446892 -284.24197388]
[-17.54411125 -298.01348877]
[-10.64783955 -311.34097290]
[-2.84851575 -324.16094971]
[5.81669140 -336.41226196]
[15.30648708 -348.03656006]
[25.57564926 -358.97845459]
[36.57524109 -369.18579102]
[48.25283813 -378.60992432]
[60.55279922 -387.20596313]
[73.41650391 -394.93289185]
[86.78264618 -401.75396729]
[100.58753967 -407.63659668]
[114.76539612 -412.55282593]
[129.24864197 -416.47918701]
[143.96826172 -419.39694214]
[158.85411072 -421.29223633]
[173.83525085 -422.15603638]
[188.84028625 -421.98419189]
[203.79771423 -420.77752686]
[218.63626099 -418.54180908]
[233.28520203 -415.28768921]
[247.67472839 -411.03067017]
[261.73626709 -405.79104614]
[275.40280151 -399.59378052]
[288.60922241 -392.46838379]
[301.29260254 -384.44885254]
[313.39245605 -375.57339478]
[324.85116577 -365.88427734]
[335.61410522 -355.42770386]
[345.62997437 -344.25350952]
[354.85107422 -332.41491699]
[363.23342896 -319.96835327]
[370.73709106 -306.97314453]
[377.32632446 -293.49121094]
[382.96972656 -279.58679199]
[387.64038086 -265.32617188]
[391.31607056 -250.77728271]
[393.97924805 -236.00947571]
[395.61721802 -221.09310913]
[396.22216797 -206.09928894]
[395.79125977 -191.09945679]
[394.32647705 -176.16510010]
[391.83486938 -161.36737061]
[388.32830811 -146.77680969]
[383.82342529 -132.46293640]
[378.34176636 -118.49397278]
[371.90945435 -104.93647766]
[364.55709839 -91.85505676]
[356.31973267 -79.31206512]
[347.23666382 -67.36725616]
[337.35113525 -56.07757187]
[326.71026611 -45.49679947]
[315.36477661 -35.67536926]
[303.36871338 -26.66008377]
[290.77926636 -18.49390221]
[277.65643311 -11.21574497]
[264.06271362 -4.86029243]
[250.06292725 0.54216665]
[235.72378540 4.96588707]
[221.11358643 8.38978863]
[206.30200195 10.79755306]
[191.35957336 12.17770672]
[176.35754395 12.52367401]
[161.36738586 11.83380413]
[146.46055603 10.11138535]
[131.70805359 7.36462688]
[127.95175934 21.88668633]
[124.19545746 36.40874481]
[120.43915558 50.93080521]
[116.68285370 65.45286560]
[112.92655945 79.97492218]
[109.17025757 94.49697876]
[107.16624451 109.36251068]
[106.94291687 124.36084747]
[106.71958923 139.35919189]
[106.49626160 154.35752869]
[121.44502258 155.67541504]
[136.25770569 158.08099365]
[150.85528564 161.56140137]
[165.15985107 166.09809875]
[179.09510803 171.66685486]
[192.58668518 178.23797607]
[205.56262207 185.77639771]
[217.95365906 194.24188232]
[229.69369507 203.58929443]
[240.72009277 213.76872253]
[250.97401428 224.72589111]
[260.40075684 236.40231323]
[268.95004272 248.73570251]
[276.57620239 261.66024780]
[283.23861694 275.10699463]
[288.90167236 289.00418091]
[293.53521729 303.27767944]
[297.11447144 317.85131836]
[299.62036133 332.64736938]
[301.03955078 347.58685303]
[301.36441040 362.59008789]
[300.59323120 377.57699585]
[298.73013306 392.46765137]
[295.78506470 407.18258667]
[291.77371216 421.64324951]
[286.71746826 435.77255249]
[280.64337158 449.49508667]
[273.58380127 462.73760986]
[265.57638550 475.42950439]
[256.66390991 487.50302124]
[246.89385986 498.89376831]
[236.31842041 509.54092407]
[224.99398804 519.38775635]
[212.98100281 528.38165283]
[200.34353638 536.47467041]
[187.14903259 543.62365723]
[173.46789551 549.79034424]
[159.37309265 554.94195557]
[144.93986511 559.05102539]
[130.24517822 562.09552002]
[115.36747742 564.05920410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 169]
[44 168]
[45 167]
[46 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
