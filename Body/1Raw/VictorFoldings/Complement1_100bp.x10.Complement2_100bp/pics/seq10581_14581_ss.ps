%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[135.36468506 746.11401367]
[121.07368469 741.54534912]
[107.04370117 736.22888184]
[93.31385803 730.17938232]
[79.92240906 723.41369629]
[66.90668488 715.95068359]
[54.30296326 707.81115723]
[42.14636993 699.01782227]
[30.47079277 689.59521484]
[19.30877113 679.56951904]
[8.69141483 668.96868896]
[-1.35168195 657.82232666]
[-10.79252815 646.16143799]
[-19.60481071 634.01861572]
[-27.76396751 621.42755127]
[-35.24725723 608.42352295]
[-42.03382111 595.04260254]
[-48.10474777 581.32226562]
[-53.44311523 567.30053711]
[-58.03403854 553.01672363]
[-61.86473083 538.51043701]
[-64.92450714 523.82226562]
[-67.20484924 508.99304199]
[-68.69938660 494.06414795]
[-69.40396881 479.07720947]
[-69.31661987 464.07394409]
[-68.43759918 449.09619141]
[-66.76933289 434.18572998]
[-64.31649780 419.38406372]
[-61.08590698 404.73248291]
[-57.08657837 390.27182007]
[-52.32965469 376.04238892]
[-46.82839584 362.08383179]
[-40.59813309 348.43502808]
[-33.65623474 335.13409424]
[-26.02204323 322.21801758]
[-17.71684265 309.72286987]
[-8.76377678 297.68344116]
[0.81219888 286.13327026]
[10.98439407 275.10458374]
[21.72445679 264.62811279]
[33.00245285 254.73306274]
[44.78694916 245.44699097]
[57.04509735 236.79579163]
[69.74273682 228.80358887]
[82.84446716 221.49263000]
[96.31378174 214.88333130]
[110.11313629 208.99407959]
[124.20406342 203.84129333]
[119.80306244 189.50144958]
[115.40206909 175.16160583]
[104.27110291 165.26458740]
[107.61891937 149.80163574]
[103.21791840 135.46179199]
[98.81692505 121.12194824]
[94.41592407 106.78209686]
[91.85399628 105.13101959]
[89.83621216 102.51127625]
[88.72249603 99.12260437]
[88.79396057 95.29492188]
[90.20729828 91.45624542]
[86.66762543 76.87987518]
[74.43489075 71.24295807]
[67.77935791 59.75756454]
[68.93692017 46.72905350]
[77.26180267 36.89412308]
[73.93954468 22.26666260]
[70.61728668 7.63920164]
[67.29502106 -6.98825836]
[63.97276306 -21.61571884]
[60.65050507 -36.24317932]
[45.72329712 -34.60726547]
[30.70690727 -34.68362427]
[15.79710770 -36.47125626]
[1.18827677 -39.94686127]
[-12.92912865 -45.06512451]
[-26.37106133 -51.75931931]
[-38.96227264 -59.94217300]
[-50.53862000 -69.50700378]
[-60.94917297 -80.32911682]
[-70.05821228 -92.26742554]
[-77.74697876 -105.16629028]
[-83.91523743 -118.85753632]
[-88.48257446 -133.16268921]
[-91.38944244 -147.89523315]
[-92.59794617 -162.86309814]
[-92.09233093 -177.87117004]
[-89.87918091 -192.72377014]
[-85.98735809 -207.22726440]
[-80.46759796 -221.19258118]
[-73.39186096 -234.43765259]
[-64.85238647 -246.78977966]
[-54.96051788 -258.08795166]
[-43.84521103 -268.18487549]
[-31.65137100 -276.94888306]
[-18.53797531 -284.26574707]
[-4.67598152 -290.04010010]
[9.75388908 -294.19659424]
[24.56351471 -296.68112183]
[39.55982208 -297.46121216]
[54.54730225 -296.52673340]
[69.33055878 -293.88989258]
[83.71687317 -289.58502197]
[97.51867676 -283.66827393]
[110.55604553 -276.21679688]
[122.65900421 -267.32766724]
[133.66976929 -257.11685181]
[143.44477844 -245.71743774]
[151.85662842 -233.27804565]
[158.79560852 -219.96083069]
[164.17129517 -205.93942261]
[167.91358948 -191.39662170]
[169.97369385 -176.52201843]
[170.32476807 -161.50953674]
[168.96221924 -146.55490112]
[165.90380859 -131.85307312]
[161.18943787 -117.59570312]
[154.88053894 -103.96868896]
[147.05937195 -91.14968109]
[137.82789612 -79.30578613]
[127.30647278 -68.59143829]
[115.63226318 -59.14630127]
[102.95746613 -51.09352112]
[89.44731903 -44.53807831]
[75.27796173 -39.56543732]
[78.60022736 -24.93797874]
[81.92248535 -10.31051826]
[85.24474335 4.31694221]
[88.56700134 18.94440269]
[91.88925934 33.57186127]
[106.48975372 41.91838074]
[110.61743164 58.57002258]
[101.24400330 73.34020233]
[104.78367615 87.91657257]
[108.75576782 102.38110352]
[113.15676880 116.72094727]
[117.55776978 131.06079102]
[121.95876312 145.40063477]
[133.40451050 156.32334900]
[129.74191284 170.76060486]
[134.14291382 185.10044861]
[138.54391479 199.44030762]
[153.09942627 195.80128479]
[167.82670593 192.93551636]
[182.68470764 190.85098267]
[197.63200378 189.55348206]
[212.62695312 189.04664612]
[227.62776184 189.33187866]
[242.59260559 190.40840149]
[257.47976685 192.27317810]
[272.24777222 194.92105103]
[286.85546875 198.34461975]
[301.26211548 202.53433228]
[315.42758179 207.47854614]
[329.31237793 213.16343689]
[342.87777710 219.57319641]
[356.08602905 226.68992615]
[368.90026855 234.49382019]
[381.28479004 242.96311951]
[393.20507812 252.07420349]
[404.62792969 261.80169678]
[415.52145386 272.11849976]
[425.85534668 282.99578857]
[435.60079956 294.40335083]
[444.73062134 306.30929565]
[453.21936035 318.68048096]
[461.04339600 331.48245239]
[468.18090820 344.67947388]
[474.61196899 358.23480225]
[480.31869507 372.11062622]
[485.28515625 386.26828003]
[489.49752808 400.66833496]
[492.94403076 415.27062988]
[495.61511230 430.03445435]
[497.50332642 444.91867065]
[498.60336304 459.88180542]
[498.91217041 474.88214111]
[498.42889404 489.87786865]
[497.15490723 504.82720947]
[495.09371948 519.68847656]
[492.25112915 534.42022705]
[488.63497925 548.98144531]
[484.25543213 563.33154297]
[479.12463379 577.43048096]
[473.25692749 591.23901367]
[466.66860962 604.71862793]
[459.37811279 617.83172607]
[451.40573120 630.54180908]
[442.77365112 642.81341553]
[433.50598145 654.61242676]
[423.62850952 665.90582275]
[413.16882324 676.66223145]
[402.15600586 686.85156250]
[390.62081909 696.44555664]
[378.59533691 705.41741943]
[366.11315918 713.74206543]
[353.20901489 721.39642334]
[339.91891479 728.35906982]
[326.27987671 734.61059570]
[312.32989502 740.13360596]
[298.10787964 744.91271973]
[283.65347290 748.93463135]
[269.00695801 752.18804932]
[254.20915222 754.66394043]
[239.30130005 756.35546875]
[224.32495117 757.25787354]
[209.32183838 757.36859131]
[194.33380127 756.68737793]
[179.40260315 755.21612549]
[164.56985474 752.95892334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 142]
[50 141]
[51 140]
[53 138]
[54 137]
[55 136]
[56 135]
[61 134]
[62 133]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
