%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[131.63172913 743.87030029]
[124.53116608 730.63354492]
[119.18163300 716.59753418]
[115.67096710 701.99261475]
[114.05680847 687.05865479]
[114.36566925 672.04089355]
[116.59246826 657.18597412]
[120.70066071 642.73773193]
[126.62276459 628.93347168]
[134.26153564 615.99993896]
[143.49156189 604.14935303]
[154.16125488 593.57647705]
[166.09541321 584.45483398]
[179.09805298 576.93426514]
[192.95568848 571.13818359]
[188.98359680 556.67370605]
[185.01150513 542.20916748]
[174.18014526 531.98510742]
[177.98686218 516.62872314]
[174.01477051 502.16418457]
[170.04267883 487.69964600]
[166.07057190 473.23513794]
[153.57424927 471.37500000]
[142.66947937 464.90298462]
[134.99429321 454.75018311]
[131.71707153 442.40356445]
[133.35882568 429.68823242]
[139.71070862 418.49768066]
[149.85984802 410.51174927]
[146.32017517 395.93539429]
[142.78050232 381.35900879]
[139.24082947 366.78262329]
[126.42684937 359.27679443]
[122.62947083 344.54470825]
[130.58917236 331.15512085]
[127.04949951 316.57873535]
[116.52735138 306.03674316]
[120.78960419 290.80047607]
[117.24993134 276.22409058]
[107.33550262 287.48040771]
[92.34674072 286.89974976]
[83.33280945 274.91021729]
[86.93843842 260.35003662]
[100.50569153 253.95239258]
[114.03225708 260.43215942]
[111.58653259 245.63288879]
[109.14080811 230.83361816]
[99.49417114 227.32456970]
[92.11687469 220.07122803]
[88.38709259 210.33460999]
[89.04042053 199.84762573]
[94.02585602 190.50672913]
[102.50297546 184.02890015]
[93.30810547 172.31123352]
[99.35069275 157.68942261]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[77.43974304 70.07839203]
[62.46328354 70.91847992]
[51.18787766 61.02579117]
[50.07258987 46.06731033]
[59.75630188 34.61193466]
[74.69174957 33.22181702]
[86.32277679 42.69245529]
[82.93924713 34.20778656]
[85.98281097 27.47291565]
[85.75948334 12.47457886]
[85.53615570 -2.52375865]
[85.31282806 -17.52209663]
[74.25372314 -28.49178314]
[74.24089813 -43.70541000]
[84.76696777 -54.18097305]
[84.54364014 -69.17930603]
[84.32031250 -84.17764282]
[84.09698486 -99.17598724]
[70.00932312 -111.84295654]
[69.66010284 -130.46527100]
[82.80436707 -143.20671082]
[82.13458252 -158.19174194]
[73.78878784 -171.63265991]
[80.95007324 -184.69273376]
[80.28028870 -199.67776489]
[71.93449402 -213.11868286]
[79.09577179 -226.17875671]
[78.42598724 -241.16378784]
[77.75620270 -256.14883423]
[76.97488403 -271.12847900]
[76.08206940 -286.10186768]
[75.18924713 -301.07528687]
[60.54438019 -304.86776733]
[47.78931046 -313.00186157]
[38.17366028 -324.68066406]
[32.63946533 -338.76000977]
[31.72891617 -353.86053467]
[35.53121567 -368.50286865]
[43.67385101 -381.25247192]
[55.35909271 -390.86029053]
[69.44213867 -396.38507080]
[84.54328156 -397.28549194]
[99.18305206 -393.47338867]
[111.92720795 -385.32220459]
[121.52720642 -373.63052368]
[127.04252625 -359.54379272]
[127.93283844 -344.44204712]
[124.11091614 -329.80480957]
[115.95120239 -317.06613159]
[104.25309753 -307.47396851]
[90.16265869 -301.96810913]
[91.05547333 -286.99468994]
[91.94828796 -272.02127075]
[95.48433685 -265.53143311]
[92.74124146 -256.81860352]
[93.41102600 -241.83357239]
[94.08081055 -226.84854126]
[102.37870026 -214.47944641]
[95.26532745 -200.34754944]
[95.93511200 -185.36251831]
[104.23299408 -172.99342346]
[97.11962128 -158.86152649]
[97.78940582 -143.87649536]
[107.67758942 -138.18525696]
[113.65240479 -128.32537842]
[114.13058472 -116.68642426]
[108.87774658 -106.15510559]
[99.09532166 -99.39931488]
[99.31864929 -84.40097046]
[99.54197693 -69.40263367]
[99.76530457 -54.40430069]
[110.59860992 -44.24678421]
[111.03875732 -29.03951836]
[100.31116486 -17.74542427]
[100.53449249 -2.74708629]
[100.75782013 12.25125122]
[100.98114777 27.24958801]
[101.31612396 42.24584961]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[114.24440765 155.90695190]
[123.56678009 168.68991089]
[117.39669800 182.24642944]
[133.82730103 193.80993652]
[136.41658020 213.42623901]
[123.94007874 228.38787842]
[126.38580322 243.18714905]
[128.83152771 257.98641968]
[131.82630920 272.68441772]
[135.36598206 287.26080322]
[146.14129639 298.84539795]
[141.62586975 313.03906250]
[145.16554260 327.61544800]
[158.37959290 335.86328125]
[161.76167297 350.69622803]
[153.81719971 363.24295044]
[157.35687256 377.81933594]
[160.89654541 392.39572144]
[164.43621826 406.97210693]
[181.41041565 411.52291870]
[193.67913818 423.98040771]
[197.92677307 440.84936523]
[193.07063293 457.46054077]
[180.53509521 469.26303101]
[184.50720215 483.72756958]
[188.47929382 498.19207764]
[192.45138550 512.65661621]
[203.56684875 523.91522217]
[199.47602844 538.23706055]
[203.44812012 552.70159912]
[207.42022705 567.16607666]
[222.29447937 565.07208252]
[237.31439209 564.89746094]
[252.23332214 566.64495850]
[266.80627441 570.28594971]
[280.79397583 575.76068115]
[293.96673584 582.97924805]
[306.10821533 591.82305908]
[317.01904297 602.14691162]
[326.52005005 613.78131104]
[334.45526123 626.53515625]
[340.69436646 640.19903564]
[345.13485718 654.54858398]
[347.70388794 669.34820557]
[348.35922241 684.35485840]
[347.09011841 699.32208252]
[343.91741943 714.00408936]
[338.89318848 728.15985107]
[332.10000610 741.55688477]
[323.64935303 753.97521973]
[313.67999268 765.21093750]
[302.35568237 775.07946777]
[289.86236572 783.41882324]
[276.40515137 790.09210205]
[262.20507812 794.98962402]
[247.49526978 798.03100586]
[232.51731873 799.16632080]
[217.51713562 798.37695312]
[202.74107361 795.67584229]
[188.43174744 791.10729980]
[174.82414246 784.74633789]
[162.14169312 776.69750977]
[150.59266663 767.09289551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 178]
[16 177]
[17 176]
[19 174]
[20 173]
[21 172]
[22 171]
[29 166]
[30 165]
[31 164]
[32 163]
[35 160]
[36 159]
[38 157]
[39 156]
[45 155]
[46 154]
[47 153]
[53 150]
[55 148]
[56 147]
[57 146]
[58 145]
[60 143]
[61 142]
[62 141]
[69 140]
[71 139]
[72 138]
[73 137]
[74 136]
[77 133]
[78 132]
[79 131]
[80 130]
[83 125]
[84 124]
[86 122]
[87 121]
[89 119]
[90 118]
[91 117]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
