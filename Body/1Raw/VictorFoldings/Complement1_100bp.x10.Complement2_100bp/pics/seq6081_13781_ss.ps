%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[18.49572372 847.01184082]
[3.86847782 850.36682129]
[-10.96858597 852.61932373]
[-25.93249130 853.75677490]
[-40.93955612 853.77276611]
[-55.90584946 852.66717529]
[-70.74767303 850.44628906]
[-85.38203430 847.12249756]
[-99.72708130 842.71429443]
[-113.70258331 837.24645996]
[-127.23040009 830.74951172]
[-140.23486328 823.25976562]
[-152.64324951 814.81915283]
[-164.38618469 805.47485352]
[-175.39796448 795.27911377]
[-185.61701965 784.28900146]
[-194.98620605 772.56591797]
[-203.45312500 760.17541504]
[-210.97041321 747.18688965]
[-217.49604797 733.67285156]
[-222.99351501 719.70898438]
[-227.43209839 705.37335205]
[-230.78695679 690.74603271]
[-233.03932190 675.90899658]
[-234.17660522 660.94506836]
[-234.19245911 645.93798828]
[-233.08677673 630.97174072]
[-230.86573792 616.12988281]
[-227.54179382 601.49560547]
[-223.13349915 587.15057373]
[-217.66552734 573.17510986]
[-211.16844177 559.64733887]
[-203.67860413 546.64294434]
[-195.23786926 534.23461914]
[-185.89346313 522.49182129]
[-175.69763184 511.48010254]
[-164.70741272 501.26113892]
[-152.98425293 491.89205933]
[-140.59371948 483.42526245]
[-127.60509491 475.90808105]
[-114.09103394 469.38256836]
[-100.12709808 463.88522339]
[-85.79139709 459.44677734]
[-71.16409302 456.09204102]
[-56.32699203 453.83981323]
[-41.36306381 452.70263672]
[-26.35600090 452.68692017]
[-11.38972569 453.79275513]
[3.45206165 456.01391602]
[6.77432108 441.38644409]
[10.09658051 426.75897217]
[13.41884041 412.13153076]
[16.63211441 397.47973633]
[19.73622513 382.80444336]
[11.42170334 370.49978638]
[14.36065674 355.57272339]
[27.32327843 346.93511963]
[30.42738724 332.25982666]
[33.53149796 317.58450317]
[31.92498016 314.44583130]
[31.75890541 310.37304688]
[33.45573425 306.05169678]
[37.11580276 302.33001709]
[40.87210464 287.80795288]
[35.00531387 277.22930908]
[38.01589966 265.10000610]
[48.81928253 258.05374146]
[52.79137802 243.58923340]
[56.76347351 229.12471008]
[47.33320236 217.62652588]
[46.47159195 202.60249329]
[54.71831131 189.80230713]
[69.08698273 184.24824524]
[73.05907440 169.78372192]
[77.03117371 155.31919861]
[81.00326538 140.85467529]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[84.28909302 95.81115723]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[98.71155548 64.60317230]
[99.32289124 60.00104141]
[101.44295502 56.51960754]
[104.36988068 54.55353546]
[108.77087402 40.21368790]
[113.17187500 25.87384033]
[109.82406616 10.41089344]
[120.95502472 0.51387382]
[113.80639648 -13.32574081]
[118.47391510 -27.80569077]
[131.71192932 -34.53552246]
[136.11293030 -48.87537003]
[135.00718689 -55.39371872]
[137.05230713 -60.69602585]
[140.86431885 -63.57310104]
[137.97839355 -79.12886810]
[149.39907837 -88.69009399]
[154.22508240 -102.89254761]
[159.05108643 -117.09500122]
[145.93721008 -124.46665192]
[134.40132141 -134.12263489]
[124.83631897 -145.73405457]
[117.56798553 -158.90547180]
[112.84387207 -173.18823242]
[110.82488251 -188.09588623]
[111.57978821 -203.12069702]
[115.08286285 -217.75091553]
[121.21481323 -231.48822021]
[129.76676941 -243.86476135]
[140.44746399 -254.45896912]
[152.89312744 -262.91003418]
[166.67984009 -268.93008423]
[181.33804321 -272.31411743]
[196.36849976 -272.94683838]
[211.25924683 -270.80670166]
[225.50312805 -265.96664429]
[238.61500549 -258.59146118]
[250.14830017 -248.93237305]
[259.71017456 -237.31835938]
[266.97494507 -224.14500427]
[271.69522095 -209.86096191]
[273.71017456 -194.95275879]
[272.95123291 -179.92814636]
[269.44421387 -165.29888916]
[263.30856323 -151.56321716]
[254.75326538 -139.18899536]
[244.06971741 -128.59765625]
[231.62178040 -120.14996338]
[217.83345032 -114.13361359]
[203.17433167 -110.75354767]
[188.14370728 -110.12487030]
[173.25354004 -112.26900482]
[168.42753601 -98.06655121]
[163.60153198 -83.86409760]
[166.83267212 -69.32418060]
[155.06678772 -58.74710464]
[150.45277405 -44.47437286]
[146.05177307 -30.13452530]
[153.23536682 -17.13715935]
[148.97640991 -2.53182149]
[135.29487610 4.91487169]
[138.95747375 19.35213661]
[127.51172638 30.27483749]
[123.11072540 44.61468506]
[118.70972443 58.95453262]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[116.16896057 98.28428650]
[113.16858673 109.53768158]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[95.46778870 144.82676697]
[91.49569702 159.29129028]
[87.52359772 173.75581360]
[83.55150604 188.22033691]
[93.06854248 200.33364868]
[93.62155914 215.55032349]
[85.20791626 228.02729797]
[71.22799683 233.09680176]
[67.25590515 247.56132507]
[63.28380585 262.02584839]
[68.35150909 279.72894287]
[55.39416122 291.56423950]
[51.63786316 306.08630371]
[48.20679855 320.68862915]
[45.10269165 335.36392212]
[41.99858093 350.03924561]
[50.35340881 363.18588257]
[46.99634171 378.02450562]
[34.41152573 385.90853882]
[31.30741692 400.58386230]
[32.59319305 409.62731934]
[28.04630089 415.45379639]
[24.72404099 430.08123779]
[21.40178108 444.70870972]
[18.07952118 459.33618164]
[32.42464447 463.74407959]
[46.40024948 469.21166992]
[59.92817688 475.70840454]
[72.93277740 483.19790649]
[85.34131622 491.63830566]
[97.08440399 500.98239136]
[108.09635925 511.17794800]
[118.31561279 522.16790771]
[127.68500519 533.89080811]
[136.15214539 546.28112793]
[143.66966248 559.26953125]
[150.19552612 572.78344727]
[155.69325256 586.74719238]
[160.13208008 601.08282471]
[163.48719788 615.71002197]
[165.73982239 630.54705811]
[166.87738037 645.51092529]
[166.89349365 660.51800537]
[165.78807068 675.48431396]
[163.56730652 690.32617188]
[160.24360657 704.96057129]
[155.83557129 719.30566406]
[150.36784363 733.28118896]
[143.87100220 746.80908203]
[136.38137817 759.81359863]
[127.94087219 772.22204590]
[118.59667206 783.96508789]
[108.40104675 794.97692871]
[97.41099548 805.19610596]
[85.68800354 814.56536865]
[73.29761505 823.03240967]
[60.30912781 830.54980469]
[46.79518127 837.07556152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 177]
[50 176]
[51 175]
[52 174]
[53 172]
[54 171]
[57 168]
[58 167]
[59 166]
[63 165]
[64 164]
[67 162]
[68 161]
[69 160]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[80 148]
[81 147]
[85 146]
[86 145]
[87 144]
[89 142]
[92 139]
[93 138]
[96 137]
[98 135]
[99 134]
[100 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
