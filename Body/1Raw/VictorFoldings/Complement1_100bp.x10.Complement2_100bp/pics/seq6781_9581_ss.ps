%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[111.83587646 645.91882324]
[98.82363129 638.39959717]
[87.07746887 629.02490234]
[76.85980988 618.00415039]
[68.39891052 605.58355713]
[61.88379669 592.04058838]
[57.46001816 577.67791748]
[55.22640228 562.81622314]
[55.23285294 547.78765869]
[57.47922134 532.92797852]
[61.91532135 518.56903076]
[68.44205475 505.03170776]
[76.91361237 492.61837769]
[87.14072418 481.60641479]
[98.89492798 472.24176025]
[111.91362762 464.73370361]
[125.90597534 459.24990845]
[140.55937195 455.91293335]
[139.44372559 440.95446777]
[138.32807922 425.99600220]
[137.21243286 411.03756714]
[136.09678650 396.07910156]
[120.66152954 387.49862671]
[113.40298462 371.22705078]
[117.39989471 353.70263672]
[131.23593140 341.98422241]
[129.67541504 327.06561279]
[128.11488342 312.14700317]
[126.55435944 297.22839355]
[124.99384308 282.30978394]
[113.66444397 292.14059448]
[98.88762665 289.56265259]
[91.55631256 276.47631836]
[97.07487488 262.52838135]
[111.37523651 258.00070190]
[123.91483307 266.22952271]
[123.46823120 251.23617554]
[123.02162170 236.24282837]
[121.12833405 221.36279297]
[117.80606842 206.73533630]
[114.48381042 192.10787964]
[101.88459015 179.89204407]
[107.47713470 162.34767151]
[103.93746185 147.77128601]
[100.39778900 133.19491577]
[89.87564087 122.65291595]
[94.13789368 107.41664886]
[90.39247131 103.74434662]
[88.97119141 98.23496246]
[90.71670532 92.35363007]
[87.61259460 77.67832947]
[84.50848389 63.00302505]
[81.40437317 48.32772064]
[78.30026245 33.65242004]
[73.26270294 47.78121948]
[62.97309494 58.69561005]
[49.16541672 64.55632782]
[34.16650391 64.37573242]
[20.50393677 58.18426514]
[10.48009968 47.02529144]
[5.78418446 32.77929688]
[7.20753479 17.84698105]
[14.51029205 4.74470043]
[26.46181297 -4.31957865]
[41.04805374 -7.81836700]
[55.81098175 -5.16205692]
[68.26277924 3.20171642]
[76.30568695 15.86506271]
[76.08235931 0.86672533]
[68.14044952 -12.81672001]
[75.68740845 -25.65777779]
[64.48997498 -15.67692089]
[49.50738525 -16.39946365]
[39.32234955 -27.41150475]
[39.76931381 -42.40484238]
[50.59223938 -52.79061508]
[65.59126282 -52.61938095]
[76.17389679 -41.99010468]
[69.48443604 -56.32752609]
[78.14691925 -68.44407654]
[79.26256561 -83.40252686]
[80.37821198 -98.36098480]
[81.49385834 -113.31943512]
[82.60951233 -128.27789307]
[83.72515869 -143.23634338]
[84.84080505 -158.19479370]
[85.95645905 -173.15324402]
[71.22987366 -188.16320801]
[72.35456848 -208.86659241]
[88.16580200 -221.82022095]
[88.38912964 -236.81855774]
[88.61245728 -251.81689453]
[88.83578491 -266.81524658]
[74.22378540 -270.50115967]
[60.85596466 -277.45803833]
[49.45323563 -287.31066895]
[40.63053513 -299.52774048]
[34.86365509 -313.45037842]
[32.46360016 -328.32775879]
[33.55980301 -343.35757446]
[38.09314346 -357.72924805]
[45.81914902 -370.66778564]
[56.32115936 -381.47540283]
[69.03282166 -389.56924438]
[83.26860046 -394.51284790]
[98.26079559 -396.03961182]
[113.20088196 -394.06716919]
[127.28316498 -388.70190430]
[139.74819946 -380.23315430]
[149.92376709 -369.11764526]
[157.26112366 -355.95483398]
[161.36456299 -341.45452881]
[162.01277161 -326.39874268]
[159.17083740 -311.59942627]
[152.99198914 -297.85467529]
[143.80944824 -285.90570068]
[132.11842346 -276.39694214]
[118.54939270 -269.84115601]
[103.83412933 -266.59191895]
[103.61080170 -251.59356689]
[103.38746643 -236.59523010]
[103.16413879 -221.59689331]
[111.42927551 -217.21533203]
[117.56861115 -210.08053589]
[120.70681763 -201.14509583]
[120.37300873 -191.62255859]
[116.57089233 -182.82250977]
[109.78408051 -175.97055054]
[100.91490936 -172.03759766]
[99.79926300 -157.07914734]
[98.68361664 -142.12069702]
[97.56796265 -127.16223907]
[96.45231628 -112.20378876]
[95.33666992 -97.24533081]
[94.22101593 -82.28688049]
[93.10536957 -67.32842255]
[99.87462616 -54.06093216]
[91.13234711 -40.87445450]
[90.68574524 -25.88110542]
[98.61167908 -13.27044201]
[91.08069611 0.64339763]
[91.30402374 15.64173508]
[92.97556305 30.54830933]
[96.07967377 45.22360992]
[99.18378448 59.89891434]
[102.28789520 74.57421875]
[105.39200592 89.24951935]
[108.71426392 103.87697601]
[119.48959351 115.46157837]
[114.97416687 129.65524292]
[118.51383209 144.23161316]
[122.05350494 158.80799866]
[132.64230347 166.17279053]
[135.29042053 178.38635254]
[129.11126709 188.78561401]
[132.43353271 203.41307068]
[135.75578308 218.04054260]
[140.58242798 203.83830261]
[150.70840454 192.77192688]
[164.42729187 186.70628357]
[179.42723083 186.66354370]
[193.18046570 192.65090942]
[203.36933899 203.65940857]
[208.27682495 217.83390808]
[207.07595825 232.78575134]
[199.96908569 245.99531555]
[188.15383911 255.23652649]
[173.62130737 258.95208740]
[158.82046509 256.51586914]
[146.24552917 248.33842468]
[138.01496887 235.79621887]
[138.46157837 250.78958130]
[138.90818787 265.78292847]
[139.91244507 280.74926758]
[141.47296143 295.66787720]
[143.03349304 310.58648682]
[144.59400940 325.50509644]
[146.15454102 340.42367554]
[157.70758057 345.19808960]
[166.08584595 354.37814331]
[169.74465942 366.18035889]
[168.04832458 378.34686279]
[161.37951660 388.57720947]
[151.05523682 394.96347046]
[152.17088318 409.92190552]
[153.28652954 424.88037109]
[154.40217590 439.83880615]
[155.51782227 454.79727173]
[170.50411987 455.92364502]
[185.15513611 459.27111816]
[199.14353943 464.76492310]
[212.15686035 472.28231812]
[223.90435791 481.65536499]
[234.12359619 492.67465210]
[242.58625793 505.09402466]
[249.10330200 518.63604736]
[253.52912903 532.99810791]
[255.76486206 547.85943604]
[255.76054382 562.88800049]
[253.51629639 577.74804688]
[249.08224487 592.10760498]
[242.55743408 605.64587402]
[234.08764648 618.06042480]
[223.86210632 629.07385254]
[212.10922241 638.44012451]
[199.09159851 645.95007324]
[185.10003662 651.43585205]
[170.44711304 654.77490234]
[155.46017456 655.89270020]
[140.47404480 654.76422119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 188]
[19 187]
[20 186]
[21 185]
[22 184]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[36 173]
[37 172]
[38 171]
[39 157]
[40 156]
[41 155]
[43 152]
[44 151]
[45 150]
[47 148]
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[68 142]
[69 141]
[71 139]
[78 138]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[90 122]
[91 121]
[92 120]
[93 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
