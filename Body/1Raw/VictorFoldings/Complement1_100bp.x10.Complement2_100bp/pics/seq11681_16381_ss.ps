%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[72.60295105 459.11904907]
[64.91481781 472.03222656]
[55.38786316 483.65524292]
[44.23493195 493.72845459]
[31.70517349 502.02682495]
[18.07851410 508.36495972]
[3.65937543 512.60125732]
[-11.23011208 514.64105225]
[-26.25731277 514.43878174]
[-41.08651352 511.99902344]
[-55.38642120 507.37625122]
[-68.83757782 500.67370605]
[-81.13947296 492.04113770]
[-92.01728058 481.67141724]
[-101.22798157 469.79620361]
[-108.56581879 456.68081665]
[-113.86684418 442.61822510]
[-117.01264954 427.92257690]
[-117.93293762 412.92221069]
[-116.60716248 397.95223999]
[-113.06493378 383.34710693]
[-107.38539886 369.43307495]
[-99.69542694 356.52096558]
[-90.16681671 344.89929199]
[-79.01245117 334.82766724]
[-66.48150635 326.53109741]
[-52.85394669 320.19491577]
[-38.43420410 315.96069336]
[-23.54442787 313.92300415]
[-8.51725578 314.12738037]
[6.31159639 316.56927490]
[10.92560577 302.29653931]
[15.53961468 288.02380371]
[20.15362358 273.75106812]
[24.01792908 259.25735474]
[27.12203979 244.58206177]
[30.22615051 229.90676880]
[33.33026123 215.23146057]
[36.43437195 200.55615234]
[27.08485985 212.28588867]
[15.04969215 221.23881531]
[1.12711978 226.82110596]
[-13.75942516 228.66250610]
[-28.62257004 226.64089966]
[-42.47649765 220.89036560]
[-54.40232849 211.79231262]
[-63.60905838 199.95018005]
[-69.48604584 186.14941406]
[-71.64348602 171.30537415]
[-69.93828583 156.40261841]
[-64.48354340 142.42958069]
[-55.64105225 130.31304932]
[-43.99730682 120.85665894]
[-30.32459259 114.68763733]
[-15.52976990 112.21514130]
[-0.59412837 113.60315704]
[13.49170589 118.75963593]
[25.79346848 127.34256744]
[35.49523163 138.78266907]
[41.95350647 152.32115173]
[44.73994446 167.06007385]
[43.66870117 182.02687073]
[51.32929993 169.13055420]
[50.60115051 151.59667969]
[66.73568726 142.72209167]
[74.20343018 129.71313477]
[81.67116547 116.70418549]
[89.13890839 103.69522858]
[75.43447876 109.79346466]
[60.50694275 108.32080078]
[48.25833130 99.66219330]
[41.89039993 86.08097839]
[43.06771088 71.12725067]
[51.48251724 58.70988083]
[64.93521118 52.07474136]
[79.90928650 52.95624161]
[92.49055481 61.12395477]
[99.39031219 74.44286346]
[98.80522919 89.43059540]
[101.31040192 73.80898285]
[115.27856445 68.63793945]
[124.59344482 56.88068771]
[121.22558594 37.07318878]
[133.32386780 21.41639519]
[152.73199463 19.73136520]
[161.51258850 7.56991005]
[170.29319763 -4.59154558]
[179.07379150 -16.75300217]
[187.85440063 -28.91445732]
[196.63500977 -41.07591248]
[192.97200012 -54.03727722]
[197.37847900 -66.55899811]
[208.03439331 -74.14408112]
[220.91947937 -74.20586395]
[229.88017273 -86.23524475]
[232.49702454 -94.98681641]
[239.06492615 -98.37568665]
[248.20372009 -110.27032471]
[257.34252930 -122.16495514]
[246.49440002 -132.54595947]
[236.83226013 -144.03901672]
[228.46940613 -156.50938416]
[221.50389099 -169.81083679]
[216.01736450 -183.78742981]
[212.07417297 -198.27529907]
[209.72052002 -213.10458374]
[208.98403931 -228.10140991]
[209.87333679 -243.08995056]
[212.37799072 -257.89447021]
[216.46864319 -272.34140015]
[222.09733582 -286.26135254]
[229.19807434 -299.49114990]
[237.68759155 -311.87561035]
[247.46635437 -323.26959229]
[258.41973877 -333.53948975]
[270.41928101 -342.56491089]
[283.32431030 -350.24002075]
[296.98355103 -356.47482300]
[311.23681641 -361.19619751]
[325.91702271 -364.34884644]
[340.85202026 -365.89578247]
[355.86669922 -365.81887817]
[370.78509521 -364.11898804]
[385.43218994 -360.81610107]
[399.63635254 -355.94891357]
[413.23098755 -349.57449341]
[426.05670166 -341.76757812]
[437.96313477 -332.61968994]
[448.81072998 -322.23809814]
[458.47222900 -310.74450684]
[466.83441162 -298.27371216]
[473.79922485 -284.97186279]
[479.28500366 -270.99499512]
[483.22741699 -256.50689697]
[485.58026123 -241.67749023]
[486.31594849 -226.68061829]
[485.42584229 -211.69212341]
[482.92037964 -196.88774109]
[478.82894897 -182.44102478]
[473.19952393 -168.52137756]
[466.09805298 -155.29199219]
[457.60787964 -142.90797424]
[447.82849121 -131.51451111]
[436.87457275 -121.24520111]
[424.87454224 -112.22043610]
[411.96908569 -104.54603577]
[398.30950928 -98.31196594]
[384.05599976 -93.59133148]
[369.37564087 -90.43947601]
[354.44055176 -88.89334869]
[339.42584229 -88.97107697]
[324.50756836 -90.67175293]
[309.86062622 -93.97543335]
[295.65676880 -98.84339142]
[282.06246948 -105.21854401]
[269.23715210 -113.02615356]
[260.09835815 -101.13151550]
[250.95954895 -89.23688507]
[241.90956116 -77.27455139]
[232.94886780 -65.24517059]
[236.09053040 -48.72340775]
[226.11442566 -34.76660919]
[208.79646301 -32.29531097]
[200.01585388 -20.13385391]
[191.23526001 -7.97239828]
[182.45465088 4.18905783]
[173.67404175 16.35051346]
[164.89344788 28.51196861]
[169.19871521 37.83053207]
[169.24784851 48.17620850]
[164.96496582 57.68251419]
[157.06175232 64.60658264]
[146.92010498 67.64863586]
[136.35069275 66.19557190]
[127.03582001 77.95281982]
[125.19690704 92.73347473]
[110.56248474 98.74547577]
[102.14786530 111.16297150]
[94.68012238 124.17192078]
[87.21237946 137.18087769]
[79.74463654 150.18983459]
[82.35432434 162.82122803]
[75.86661530 173.50268555]
[64.22562408 176.79113770]
[56.56502914 189.68746948]
[51.10967255 203.66026306]
[48.00556183 218.33557129]
[44.90145111 233.01087952]
[41.79734421 247.68617249]
[38.69323349 262.36148071]
[51.21708298 254.10598755]
[66.13138580 255.70709229]
[76.61752319 266.43280029]
[77.88137817 281.37945557]
[69.34512329 293.71365356]
[54.91143417 297.79635620]
[41.17918777 291.76101685]
[34.42635727 278.36508179]
[29.81234932 292.63781738]
[25.19833946 306.91052246]
[20.58432961 321.18325806]
[34.03643799 327.88391113]
[46.33956528 336.51470947]
[57.21884918 346.88287354]
[66.43124390 358.75677490]
[73.77094269 371.87112427]
[79.07397461 385.93298340]
[82.22187042 400.62814331]
[83.14429474 415.62838745]
[81.82065582 430.59854126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 201]
[32 200]
[33 199]
[34 198]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[62 185]
[63 184]
[65 181]
[66 180]
[67 179]
[68 178]
[79 177]
[81 175]
[82 174]
[85 168]
[86 167]
[87 166]
[88 165]
[89 164]
[90 163]
[94 160]
[95 159]
[97 158]
[98 157]
[99 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
