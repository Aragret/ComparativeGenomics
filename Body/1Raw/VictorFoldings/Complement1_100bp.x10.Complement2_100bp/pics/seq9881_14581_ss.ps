%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[44.07701874 709.51977539]
[29.13204002 707.92352295]
[14.60590839 704.06451416]
[0.83913606 698.03320312]
[-11.84556293 689.97100830]
[-23.15084267 680.06695557]
[-32.81168747 668.55310059]
[-40.60163879 655.69940186]
[-46.33808517 641.80718994]
[-49.88655853 627.20208740]
[-51.16387558 612.22650146]
[-50.14009476 597.23144531]
[-46.83921432 582.56842041]
[-41.33861542 568.58111572]
[-33.76723099 555.59747314]
[-24.30255699 543.92187500]
[-13.16644955 533.82794189]
[-0.61995953 525.55230713]
[13.04280663 519.28894043]
[27.50157356 515.18475342]
[42.41740799 513.33587646]
[42.86401367 498.34252930]
[43.31061935 483.34918213]
[43.75722504 468.35583496]
[44.20383072 453.36248779]
[36.13975525 444.34600830]
[36.38912201 431.85113525]
[45.36355972 422.58709717]
[46.03334427 407.60205078]
[46.70312881 392.61703491]
[34.04076385 400.65844727]
[19.80985069 395.91702271]
[14.50089169 381.88793945]
[22.02745247 368.91293335]
[36.84123230 366.55667114]
[48.02142715 376.55459595]
[49.80389023 361.66088867]
[51.58635712 346.76718140]
[53.36882401 331.87344360]
[55.15129089 316.97973633]
[45.77215576 305.46594238]
[47.36766434 290.33621216]
[59.50798416 280.57656860]
[61.29045105 265.68286133]
[59.66587830 263.39837646]
[58.84833908 260.33270264]
[59.13989639 256.79006958]
[60.72703552 253.17819214]
[63.64806747 249.96548462]
[66.31386566 235.20426941]
[68.97966003 220.44305420]
[62.34231949 210.33007812]
[64.44242859 198.01045227]
[74.69181061 190.18019104]
[77.57708740 175.46029663]
[80.46235657 160.74040222]
[75.31764984 146.76251221]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[97.47897339 75.67639923]
[100.58308411 61.00109863]
[95.86907959 45.89849091]
[106.07268524 35.04788208]
[109.17679596 20.37257957]
[112.28090668 5.69727707]
[115.38501740 -8.97802544]
[118.48912811 -23.65332794]
[121.59323883 -38.32862854]
[108.25019073 -49.76525116]
[102.56637573 -66.30020905]
[106.02229309 -83.34898376]
[117.57746887 -96.23273468]
[133.98141479 -101.46236420]
[136.64720154 -116.22357941]
[139.31300354 -130.98480225]
[141.97880554 -145.74601746]
[144.64459229 -160.50723267]
[138.01771545 -177.68762207]
[149.86749268 -190.63171387]
[152.31321716 -205.43098450]
[146.92955017 -220.30804443]
[156.63847351 -231.60345459]
[158.75309753 -246.45364380]
[160.53556824 -261.34735107]
[162.31803894 -276.24108887]
[164.10049438 -291.13479614]
[165.88296509 -306.02850342]
[167.55450439 -320.93508911]
[169.11503601 -335.85369873]
[170.67555237 -350.77230835]
[172.23608398 -365.69088745]
[173.79660034 -380.60949707]
[175.35711670 -395.52810669]
[169.09750366 -410.05834961]
[178.11689758 -421.91162109]
[179.67742920 -436.83020020]
[165.76875305 -442.74969482]
[154.22389221 -452.50714111]
[146.06938171 -465.23486328]
[142.03033447 -479.80117798]
[142.46588135 -494.91085815]
[147.33729553 -509.22030640]
[156.21144104 -521.45715332]
[168.29920959 -530.53338623]
[182.52575684 -535.64184570]
[197.62609863 -536.32836914]
[212.25749207 -532.53186035]
[225.11894226 -524.58990479]
[235.06681824 -513.20874023]
[241.21655273 -499.40029907]
[243.02131653 -484.39248657]
[240.32064819 -469.51977539]
[233.35466003 -456.10461426]
[222.74278259 -445.33990479]
[209.42860413 -438.18276978]
[194.59602356 -435.26968384]
[193.03550720 -420.35107422]
[199.40673828 -406.88793945]
[190.27572632 -393.96759033]
[188.71520996 -379.04898071]
[187.15467834 -364.13037109]
[185.59416199 -349.21176147]
[184.03363037 -334.29318237]
[182.47311401 -319.37457275]
[184.90368652 -312.39501953]
[180.77668762 -304.24603271]
[178.99421692 -289.35232544]
[177.21174622 -274.45861816]
[175.42929077 -259.56491089]
[173.64682007 -244.67117310]
[175.52694702 -241.68832397]
[176.05572510 -237.64660645]
[174.75119019 -233.19110107]
[171.43774414 -229.15771484]
[176.99635315 -215.33920288]
[167.11248779 -202.98526001]
[164.66676331 -188.18598938]
[171.45393372 -178.17295837]
[169.53747559 -165.82342529]
[159.40580750 -157.84143066]
[156.74002075 -143.08021545]
[154.07421875 -128.31900024]
[151.40843201 -113.55778503]
[148.74263000 -98.79656982]
[159.20942688 -91.72093964]
[166.24862671 -81.17340851]
[168.78514099 -68.70127869]
[166.40750122 -56.15034103]
[159.43421936 -45.39170074]
[148.87158203 -38.04285049]
[136.26853943 -35.22452164]
[133.16442871 -20.54921722]
[130.06031799 -5.87391520]
[126.95620728 8.80138779]
[123.85209656 23.47669029]
[120.74799347 38.15199280]
[125.68401337 52.20492554]
[115.25838470 64.10520935]
[112.15427399 78.78050995]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[105.22317505 152.62435913]
[95.18225098 163.62567139]
[92.29697418 178.34556580]
[89.41170502 193.06546021]
[95.78206635 210.34260559]
[83.74087524 223.10884094]
[81.07508087 237.87005615]
[78.40928650 252.63128662]
[76.18416595 267.46533203]
[74.40170288 282.35903931]
[83.89610291 294.70788574]
[81.87625885 309.78683472]
[70.04500580 318.76220703]
[68.26254272 333.65591431]
[66.48007202 348.54965210]
[64.69760895 363.44335938]
[62.91514206 378.33706665]
[61.68816757 393.28680420]
[61.01838303 408.27185059]
[60.34859848 423.25689697]
[69.21138763 439.39788818]
[59.19718170 453.80911255]
[58.75057602 468.80245972]
[58.30397034 483.79580688]
[57.85736465 498.78915405]
[57.41075897 513.78247070]
[72.19010162 516.51586914]
[86.37894440 521.47344971]
[99.64469147 528.53887939]
[111.67636108 537.54663086]
[122.19192505 548.28546143]
[130.94487000 560.50378418]
[137.73002625 573.91503906]
[142.38833618 588.20489502]
[144.81060791 603.03839111]
[144.94004822 618.06781006]
[142.77363586 632.94085693]
[138.36215210 647.30883789]
[131.80899048 660.83502197]
[123.26778412 673.20220947]
[112.93875122 684.12060547]
[101.06401062 693.33428955]
[87.92193604 700.62713623]
[73.82057953 705.82830811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[28 186]
[29 185]
[30 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[43 176]
[44 175]
[49 174]
[50 173]
[51 172]
[54 170]
[55 169]
[56 168]
[58 166]
[59 165]
[60 164]
[62 163]
[63 162]
[64 161]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[82 140]
[83 139]
[85 137]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
