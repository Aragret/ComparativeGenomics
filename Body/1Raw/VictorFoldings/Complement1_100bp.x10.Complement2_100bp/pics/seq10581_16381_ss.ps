%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-14.34084892 421.37600708]
[-13.72807598 436.50555420]
[-18.06345177 451.01358032]
[-26.87670517 463.32638550]
[-39.21184158 472.10836792]
[-53.73083878 476.40692139]
[-68.85878754 475.75573730]
[-82.95471191 470.22549438]
[-94.48959351 460.41604614]
[-102.21222687 447.39147949]
[-105.28490448 432.56457520]
[-103.37432861 417.54364014]
[-96.68775177 403.95803833]
[-85.95046997 393.28143311]
[-72.32719421 386.67196655]
[-57.29567719 384.84655762]
[-54.19156647 370.17126465]
[-51.08745575 355.49597168]
[-47.98334503 340.82064819]
[-44.87923813 326.14535522]
[-56.42674255 335.71902466]
[-71.30381012 337.63549805]
[-84.90061951 331.30090332]
[-93.00405121 318.67813110]
[-93.10316467 303.67846680]
[-85.16725159 290.94970703]
[-71.65534210 284.43600464]
[-56.75424576 286.15570068]
[-45.08123016 295.57592773]
[-40.25329590 309.77798462]
[-35.21638107 295.64895630]
[-30.17946434 281.51992798]
[-25.14254761 267.39089966]
[-36.01339722 277.72650146]
[-49.24369049 284.79470825]
[-63.87832642 288.08523560]
[-78.86080933 287.36053467]
[-93.10954285 282.67294312]
[-105.59590912 274.36083984]
[-115.41848755 263.02432251]
[-121.86819458 249.48175049]
[-124.47941589 234.71078491]
[-123.06364441 219.77775574]
[-117.72308350 205.76066589]
[-108.84326935 193.67146301]
[-97.06525421 184.38285828]
[-83.23929596 178.56538391]
[-68.36350250 176.63903809]
[-53.51177216 178.74287415]
[-39.75626373 184.72502136]
[-28.09000206 194.15361023]
[-19.35517883 206.34799194]
[-14.18237019 220.42782593]
[-12.94500828 235.37670898]
[-15.73278522 250.11654663]
[-6.59398270 238.22190857]
[2.54481959 226.32728577]
[11.68362236 214.43264771]
[20.46422577 202.27119446]
[28.87884331 189.85369873]
[37.29346085 177.43620300]
[38.02794647 162.55972290]
[52.17468262 155.47590637]
[53.32464218 148.17526245]
[60.80817032 142.93745422]
[69.40673065 130.64662170]
[78.00529480 118.35578156]
[71.78021240 104.93406677]
[73.08178711 90.19635773]
[81.56287384 78.07344055]
[94.96144104 71.79867554]
[109.70386505 73.04565430]
[118.30242920 60.75481796]
[119.87334442 45.01179504]
[133.50895691 39.01851654]
[135.07987976 23.27549553]
[148.71548462 17.28221703]
[146.17053223 1.91468740]
[155.06578064 -10.42748070]
[169.73205566 -12.75899982]
[178.33062744 -25.04983711]
[186.92918396 -37.34067535]
[194.97036743 -50.00320053]
[202.43811035 -63.01215363]
[209.90583801 -76.02110291]
[217.27653503 -89.08528900]
[224.54975891 -102.20398712]
[231.82299805 -115.32267761]
[231.74755859 -131.14370728]
[244.68566895 -138.52304077]
[232.30796814 -147.01640320]
[220.79368591 -156.64790344]
[210.24707031 -167.33030701]
[200.76364136 -178.96687317]
[192.42930603 -191.45220947]
[185.31953430 -204.67323303]
[179.49870300 -218.51023865]
[175.01953125 -232.83790588]
[171.92260742 -247.52645874]
[170.23594666 -262.44290161]
[169.97482300 -277.45211792]
[171.14163208 -292.41818237]
[173.72578430 -307.20556641]
[177.70388794 -321.68035889]
[183.03990173 -335.71145630]
[189.68551636 -349.17178345]
[197.58053589 -361.93945312]
[206.65347290 -373.89883423]
[216.82214355 -384.94161987]
[227.99446106 -394.96777344]
[240.06924438 -403.88653564]
[252.93714905 -411.61712646]
[266.48162842 -418.08950806]
[280.58001709 -423.24508667]
[295.10464478 -427.03717041]
[309.92398071 -429.43142700]
[324.90377808 -430.40612793]
[339.90841675 -429.95248413]
[354.80197144 -428.07461548]
[369.44958496 -424.78952026]
[383.71862793 -420.12689209]
[397.47979736 -414.12905884]
[410.60855103 -406.85025024]
[422.98593140 -398.35641479]
[434.49987793 -388.72451782]
[445.04611206 -378.04171753]
[454.52911377 -366.40481567]
[462.86297607 -353.91918945]
[469.97229004 -340.69787598]
[475.79260254 -326.86065674]
[480.27124023 -312.53283691]
[483.36764526 -297.84417725]
[485.05377197 -282.92767334]
[485.31433105 -267.91845703]
[484.14697266 -252.95242310]
[481.56228638 -238.16513062]
[477.58364868 -223.69049072]
[472.24713135 -209.65957642]
[465.60101318 -196.19949341]
[457.70553589 -183.43211365]
[448.63217163 -171.47305298]
[438.46310425 -160.43064880]
[427.29043579 -150.40489197]
[415.21530151 -141.48657227]
[402.34713745 -133.75645447]
[388.80239868 -127.28456879]
[374.70382690 -122.12950134]
[360.17904663 -118.33795166]
[345.35964966 -115.94424438]
[330.37979126 -114.97007751]
[315.37518311 -115.42426300]
[300.48168945 -117.30268097]
[285.83419800 -120.58833313]
[271.56533813 -125.25144958]
[257.80435181 -131.24981689]
[258.40002441 -116.36711884]
[244.94168091 -108.04944611]
[237.66845703 -94.93075562]
[230.39523315 -81.81205750]
[229.90118408 -74.43793488]
[222.91479492 -68.55336761]
[215.44705200 -55.54441071]
[207.97930908 -42.53545761]
[222.70365906 -45.39795303]
[235.21600342 -37.12503815]
[238.34872437 -22.45581436]
[230.30723572 -9.79348183]
[215.69808960 -6.39159870]
[202.89006042 -14.19891739]
[199.22003174 -28.74211121]
[190.62145996 -16.45127296]
[182.02290344 -4.16043568]
[184.86021423 10.41643906]
[176.31512451 23.00358582]
[161.00631714 25.88078117]
[160.05043030 40.74468231]
[145.79978943 47.61708069]
[144.84390259 62.48098373]
[130.59326172 69.35338593]
[121.99470520 81.64421844]
[128.21978760 95.06593323]
[126.91821289 109.80364227]
[118.43712616 121.92655945]
[105.03855896 128.20132446]
[90.29613495 126.95434570]
[81.69757080 139.24517822]
[73.09900665 151.53602600]
[64.59217834 163.89053345]
[63.25582504 179.65519714]
[49.71095657 185.85081482]
[41.29634094 198.26831055]
[32.88172150 210.68580627]
[32.72391510 215.02505493]
[31.33336258 218.71705627]
[29.06490898 221.45376587]
[26.33699799 223.07397461]
[23.57825470 223.57145691]
[14.43945217 235.46607971]
[5.30065012 247.36071777]
[-3.83815217 259.25534058]
[-11.01351833 272.42782593]
[-16.05043411 286.55685425]
[-21.08735085 300.68588257]
[-26.12426758 314.81491089]
[-30.20393372 329.24948120]
[-33.30804443 343.92477417]
[-36.41215515 358.60006714]
[-39.51626587 373.27539062]
[-42.62037277 387.95068359]
[-29.61543465 395.70632935]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[30 204]
[31 203]
[32 202]
[33 201]
[55 200]
[56 199]
[57 198]
[58 197]
[59 192]
[60 191]
[61 190]
[63 188]
[65 187]
[66 186]
[67 185]
[72 180]
[73 179]
[75 177]
[77 175]
[80 172]
[81 171]
[82 170]
[83 163]
[84 162]
[85 161]
[86 159]
[87 158]
[88 157]
[90 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
