%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[120.50505066 282.98278809]
[111.09336090 294.81118774]
[98.61238098 303.33859253]
[84.17190552 307.80670166]
[69.05597687 307.81826782]
[54.60869598 303.37222290]
[42.11469650 294.86389160]
[32.68494034 283.04986572]
[27.15791893 268.98065186]
[26.02508736 253.90721130]
[29.38717651 239.16992188]
[36.94523239 226.07919312]
[48.02719498 215.79904175]
[61.64767075 209.24357605]
[76.59552765 206.99571228]
[78.82064819 192.16166687]
[73.05692291 178.42744446]
[82.75576019 165.92770386]
[84.98087311 151.09367371]
[87.20599365 136.25962830]
[89.43110657 121.42558289]
[91.54573059 106.57537842]
[91.54573059 91.57537842]
[89.54171753 76.70985413]
[87.53770447 61.84432602]
[85.53369141 46.97879791]
[75.76854706 38.55236435]
[74.40543365 26.12957573]
[81.63294220 16.42959213]
[79.85047913 1.53587520]
[78.06800842 -13.35784245]
[76.28554535 -28.25156021]
[66.96318054 -41.03451920]
[73.13326263 -54.59104156]
[61.75730133 -69.07099915]
[69.28777313 -84.92214203]
[67.28376007 -99.78767395]
[65.27974701 -114.65319824]
[63.27573395 -129.51872253]
[48.32512665 -128.26380920]
[33.33035278 -127.76165771]
[18.32928276 -128.01354980]
[3.35981870 -129.01884460]
[-11.54022884 -130.77499390]
[-26.33321953 -133.27757263]
[-40.98178482 -136.52024841]
[-55.44892502 -140.49484253]
[-69.69808960 -145.19131470]
[-83.69328308 -150.59779358]
[-97.39915466 -156.70062256]
[-110.78108978 -163.48437500]
[-123.80526733 -170.93194580]
[-136.43879700 -179.02449036]
[-148.64978027 -187.74157715]
[-160.40733337 -197.06120300]
[-171.68179321 -206.95979309]
[-182.44465637 -217.41236877]
[-192.66874695 -228.39250183]
[-202.32823181 -239.87248230]
[-211.39871216 -251.82328796]
[-219.85726929 -264.21475220]
[-227.68254089 -277.01556396]
[-234.85476685 -290.19335938]
[-241.35581970 -303.71490479]
[-247.16928101 -317.54598999]
[-252.28045654 -331.65170288]
[-256.67645264 -345.99642944]
[-260.34616089 -360.54388428]
[-263.28030396 -375.25735474]
[-265.47146606 -390.09967041]
[-266.91409302 -405.03332520]
[-267.60461426 -420.02062988]
[-267.54119873 -435.02368164]
[-266.72406006 -450.00457764]
[-265.15524292 -464.92550659]
[-262.83871460 -479.74877930]
[-259.78030396 -494.43692017]
[-255.98779297 -508.95285034]
[-251.47070312 -523.25988770]
[-246.24049377 -537.32189941]
[-240.31033325 -551.10339355]
[-233.69522095 -564.56945801]
[-226.41188049 -577.68621826]
[-218.47869873 -590.42041016]
[-209.91569519 -602.73992920]
[-200.74453735 -614.61364746]
[-190.98837280 -626.01159668]
[-180.67184448 -636.90490723]
[-169.82101440 -647.26611328]
[-158.46330261 -657.06909180]
[-146.62739563 -666.28900146]
[-134.34317017 -674.90258789]
[-121.64170074 -682.88806152]
[-108.55503082 -690.22528076]
[-95.11624908 -696.89569092]
[-81.35928345 -702.88244629]
[-67.31888580 -708.17047119]
[-53.03054047 -712.74633789]
[-38.53032303 -716.59851074]
[-23.85487366 -719.71722412]
[-9.04125977 -722.09472656]
[5.87309837 -723.72485352]
[20.85052490 -724.60357666]
[35.85318756 -724.72869873]
[50.84318542 -724.09979248]
[65.78265381 -722.71856689]
[80.63385010 -720.58843994]
[95.35926056 -717.71484375]
[109.92169189 -714.10498047]
[124.28435516 -709.76800537]
[138.41098022 -704.71484375]
[152.26585388 -698.95831299]
[165.81399536 -692.51293945]
[179.02119446 -685.39495850]
[191.85404968 -677.62237549]
[204.28018188 -669.21478271]
[216.26818848 -660.19354248]
[227.78778076 -650.58135986]
[238.80987549 -640.40246582]
[249.30661011 -629.68267822]
[259.25146484 -618.44903564]
[268.61935425 -606.72985840]
[277.38656616 -594.55487061]
[285.53100586 -581.95471191]
[293.03204346 -568.96124268]
[299.87078857 -555.60736084]
[306.02990723 -541.92669678]
[311.49386597 -527.95379639]
[316.24890137 -513.72406006]
[320.28292847 -499.27340698]
[323.58581543 -484.63830566]
[326.14920044 -469.85571289]
[327.96661377 -454.96301270]
[329.03341675 -439.99783325]
[329.34698486 -424.99792480]
[328.90649414 -410.00119019]
[327.71307373 -395.04556274]
[325.76968384 -380.16876221]
[323.08129883 -365.40841675]
[319.65469360 -350.80178833]
[315.49850464 -336.38577271]
[310.62322998 -322.19677734]
[305.04119873 -308.27066040]
[298.76651001 -294.64260864]
[291.81503296 -281.34704590]
[284.20428467 -268.41754150]
[275.95352173 -255.88676453]
[267.08358765 -243.78636169]
[257.61688232 -232.14692688]
[247.57728577 -220.99781799]
[236.99021912 -210.36723328]
[225.88238525 -200.28202820]
[214.28186035 -190.76765442]
[202.21794128 -181.84815979]
[189.72109985 -173.54608154]
[176.82290649 -165.88238525]
[163.55595398 -158.87641907]
[149.95375061 -152.54591370]
[136.05065918 -146.90681458]
[121.88178253 -141.97340393]
[107.48292542 -137.75813293]
[92.89047241 -134.27163696]
[78.14126587 -131.52273560]
[80.14527893 -116.65721130]
[82.14929199 -101.79168701]
[84.15330505 -86.92615509]
[93.57959747 -79.34515381]
[95.37083435 -66.97683716]
[88.02697754 -56.37350845]
[97.22185516 -44.65584946]
[91.17926025 -30.03402519]
[92.96173096 -15.14030838]
[94.74419403 -0.24659064]
[96.52665710 14.64712620]
[107.78663635 28.10743141]
[100.39922333 44.97478485]
[102.40323639 59.84031296]
[104.40724945 74.70584106]
[106.41126251 89.57136536]
[111.58099365 75.49039459]
[120.79945374 63.65738678]
[133.18800354 55.20020294]
[147.56582642 50.92491531]
[162.56253052 51.23902893]
[176.74873352 56.11259460]
[188.77229309 65.08110046]
[197.48719788 77.28972626]
[202.06278992 91.57482147]
[202.06295776 106.57482147]
[197.48770142 120.86002350]
[188.77308655 133.06884766]
[176.74974060 142.03764343]
[162.56365967 146.91152954]
[147.56695557 147.22599792]
[133.18902588 142.95104980]
[120.80027771 134.49415588]
[111.58154297 122.66136169]
[106.41126251 108.57939911]
[108.36609650 117.50219727]
[104.26515198 123.65069580]
[102.04003143 138.48474121]
[99.81491852 153.31878662]
[97.58979797 168.15283203]
[103.19436646 182.94807434]
[93.65468597 194.38677979]
[91.42957306 209.22082520]
[105.06004333 215.75546265]
[116.15770721 226.01866150]
[123.73575592 239.09783936]
[127.12036133 253.82997131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 206]
[16 205]
[18 203]
[19 202]
[20 201]
[21 200]
[22 198]
[23 179]
[24 178]
[25 177]
[26 176]
[29 174]
[30 173]
[31 172]
[32 171]
[34 169]
[36 166]
[37 165]
[38 164]
[39 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
