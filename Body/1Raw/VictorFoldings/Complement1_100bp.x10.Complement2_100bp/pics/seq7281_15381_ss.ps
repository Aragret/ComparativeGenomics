%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[49.92243195 631.29846191]
[35.81011200 636.41577148]
[21.27525902 640.16851807]
[6.44949961 642.52258301]
[-8.53289604 643.45666504]
[-23.53624344 642.96234131]
[-38.42466736 641.04412842]
[-53.06332779 637.71929932]
[-67.31965637 633.01806641]
[-81.06454468 626.98291016]
[-94.17350769 619.66857910]
[-106.52783203 611.14123535]
[-118.01562500 601.47814941]
[-128.53285217 590.76678467]
[-137.98426819 579.10424805]
[-146.28428650 566.59606934]
[-153.35771179 553.35552979]
[-159.14051819 539.50262451]
[-163.58030701 525.16271973]
[-166.63688660 510.46569824]
[-168.28256226 495.54467773]
[-168.50244141 480.53482056]
[-167.29454041 465.57199097]
[-164.66976929 450.79174805]
[-160.65193176 436.32794189]
[-155.27738953 422.31155396]
[-148.59483337 408.86953735]
[-140.66476440 396.12359619]
[-131.55902100 384.18917847]
[-121.36006165 373.17437744]
[-110.16024017 363.17895508]
[-98.06100464 354.29339600]
[-85.17191315 346.59817505]
[-71.60971069 340.16302490]
[-57.49720383 335.04620361]
[-42.96221161 331.29400635]
[-28.13636780 328.94049072]
[-13.15393734 328.00692749]
[1.84939182 328.50177002]
[16.73774338 330.42056274]
[20.06000328 315.79309082]
[23.38226318 301.16564941]
[26.70452309 286.53817749]
[30.02678108 271.91070557]
[33.34904099 257.28326416]
[22.03696251 267.13400269]
[7.33431387 270.10586548]
[-6.91566896 265.42208862]
[-16.98807335 254.30691528]
[-20.24999809 239.66589355]
[-15.84878349 225.32611084]
[-4.93489599 215.03596497]
[9.63879967 211.48527527]
[24.06277466 215.60218811]
[34.56663895 226.31053162]
[38.40470123 240.81031799]
[43.86005783 226.83750916]
[49.31541443 212.86471558]
[54.77077484 198.89192200]
[52.19211197 184.22222900]
[64.41854858 174.18107605]
[69.87390900 160.20828247]
[75.32926941 146.23548889]
[80.57598114 132.18301392]
[85.61289978 118.05398560]
[90.64981842 103.92495728]
[90.17504120 95.87839508]
[95.86833191 89.62400818]
[101.11505127 75.57154083]
[104.00032806 60.85165024]
[104.44692993 45.85829926]
[104.89353943 30.86494827]
[97.57054901 16.84052658]
[105.68335724 4.34926510]
[106.12996674 -10.64408493]
[106.57656860 -25.63743401]
[107.02317810 -40.63078308]
[107.46977997 -55.62413406]
[107.91638947 -70.61748505]
[108.36299133 -85.61083221]
[108.80960083 -100.60418701]
[94.11716461 -103.82420349]
[80.27029419 -109.68769073]
[67.74000549 -117.99359894]
[56.95222092 -128.45782471]
[48.27332687 -140.72296143]
[41.99769974 -154.37042236]
[38.33773422 -168.93481445]
[37.41666412 -183.91976929]
[39.26438904 -198.81484985]
[43.81652451 -213.11294556]
[50.91664886 -226.32757568]
[60.32165909 -238.00936890]
[71.71010590 -247.76139832]
[84.69318390 -255.25265503]
[98.82799530 -260.22927856]
[113.63266754 -262.52316284]
[114.07927704 -277.51651001]
[114.52587891 -292.50985718]
[100.64716339 -298.71063232]
[90.20146179 -309.75399780]
[84.78166962 -323.95590210]
[85.21427155 -339.15069580]
[91.43329620 -353.02124023]
[102.49037933 -363.45239258]
[116.69940948 -368.85351562]
[131.89361572 -368.40090942]
[145.75596619 -362.16366577]
[156.17257690 -351.09286499]
[161.55499268 -336.87673950]
[161.08241272 -321.68313599]
[154.82691956 -307.82901001]
[143.74241638 -297.42697144]
[129.51922607 -292.06326294]
[129.07263184 -277.06991577]
[128.62602234 -262.07656860]
[143.26791382 -258.90554810]
[157.08145142 -253.09643555]
[169.59562683 -244.84568787]
[180.38342285 -234.43309021]
[189.07644653 -222.21221924]
[195.37744141 -208.59841919]
[199.07046509 -194.05471802]
[200.02833557 -179.07606506]
[198.21697998 -164.17250061]
[193.69662476 -149.85177612]
[186.61981201 -136.60203552]
[177.22627258 -124.87523651]
[165.83476257 -115.07165527]
[152.83232117 -107.52629089]
[138.66099548 -102.49738312]
[123.80294800 -100.15757751]
[123.35634613 -85.16423035]
[122.90973663 -70.17087555]
[122.46313477 -55.17752838]
[122.01652527 -40.18417740]
[121.56992340 -25.19082832]
[121.12331390 -10.19747925]
[120.67670441 4.79587078]
[128.03164673 17.74786949]
[119.88688660 31.31155396]
[119.44028473 46.30490494]
[118.99367523 61.29825592]
[126.10974884 48.09365463]
[136.36221313 37.14436722]
[149.07107544 29.17662621]
[163.39338684 24.71889877]
[178.37921143 24.06685066]
[193.03459167 27.26373100]
[206.38746643 34.09749985]
[217.55221558 44.11490250]
[225.78831482 56.65151596]
[230.54949951 70.87583160]
[231.51995850 85.84440613]
[228.63533020 100.56443024]
[222.08694458 114.05956268]
[212.30914307 125.43473816]
[199.95043945 133.93547058]
[185.83055115 138.99794006]
[170.88598633 140.28636169]
[156.10797119 137.71530151]
[142.47668457 131.45527649]
[130.89622498 121.92148590]
[122.13471222 109.74627686]
[116.77323151 95.73718262]
[115.16752625 80.81826019]
[109.92080688 94.87072754]
[104.77884674 108.96186829]
[99.74192810 123.09089661]
[94.70501709 137.21992493]
[95.51859283 143.78114319]
[93.23874664 148.98684692]
[89.30206299 151.69084167]
[83.84671021 165.66363525]
[78.39134979 179.63644409]
[80.57981110 195.30555725]
[68.74356842 204.34727478]
[63.28821564 218.32006836]
[57.83285522 232.29287720]
[52.37749863 246.26567078]
[47.97650146 260.60552979]
[44.65424347 275.23297119]
[41.33198166 289.86044312]
[38.00972366 304.48788452]
[34.68746185 319.11535645]
[31.36520386 333.74282837]
[45.62170410 338.44357300]
[59.36680984 344.47817993]
[72.47604370 351.79208374]
[84.83067322 360.31896973]
[96.31882477 369.98162842]
[106.83644104 380.69256592]
[116.28828430 392.35479736]
[124.58875275 404.86267090]
[131.66267395 418.10293579]
[137.44596863 431.95565796]
[141.88629150 446.29541016]
[144.94340515 460.99230957]
[146.58963013 475.91326904]
[146.81005859 490.92312622]
[145.60269165 505.88598633]
[142.97846985 520.66632080]
[138.96115112 535.13024902]
[133.58711243 549.14685059]
[126.90504456 562.58911133]
[118.97544861 575.33532715]
[109.87014008 587.27008057]
[99.67157745 598.28527832]
[88.47212982 608.28112793]
[76.37321472 617.16711426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[56 180]
[57 179]
[58 178]
[59 177]
[61 175]
[62 174]
[63 173]
[64 170]
[65 169]
[66 168]
[68 167]
[69 166]
[70 143]
[71 142]
[72 141]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
