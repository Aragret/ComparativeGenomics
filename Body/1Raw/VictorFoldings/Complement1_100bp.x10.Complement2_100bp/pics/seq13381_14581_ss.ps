%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[108.43923187 842.00073242]
[93.56253815 840.05810547]
[78.79808044 837.39349365]
[64.18085480 834.01318359]
[49.74555588 829.92517090]
[35.52640533 825.13922119]
[21.55713463 819.66662598]
[7.87087822 813.52044678]
[-5.49990082 806.71514893]
[-18.52348900 799.26690674]
[-31.16899681 791.19348145]
[-43.40642929 782.51391602]
[-55.20676041 773.24884033]
[-66.54199982 763.42016602]
[-77.38526917 753.05133057]
[-87.71083832 742.16680908]
[-97.49422455 730.79254150]
[-106.71221161 718.95538330]
[-115.34294891 706.68347168]
[-123.36595917 694.00585938]
[-130.76220703 680.95269775]
[-137.51416016 667.55493164]
[-143.60580444 653.84429932]
[-149.02267456 639.85333252]
[-153.75193787 625.61523438]
[-157.78236389 611.16369629]
[-161.10441589 596.53314209]
[-163.71018982 581.75817871]
[-165.59352112 566.87390137]
[-166.74992371 551.91552734]
[-167.17668152 536.91857910]
[-166.87275696 521.91870117]
[-165.83889771 506.95138550]
[-164.07752991 492.05215454]
[-161.59283447 477.25631714]
[-158.39071655 462.59902954]
[-154.47877502 448.11505127]
[-149.86627197 433.83868408]
[-144.56416321 419.80383301]
[-138.58500671 406.04376221]
[-131.94300842 392.59112549]
[-124.65390015 379.47781372]
[-116.73498535 366.73495483]
[-108.20503998 354.39276123]
[-99.08429718 342.48052979]
[-89.39439392 331.02645874]
[-79.15830994 320.05776978]
[-68.40032196 309.60046387]
[-57.14595413 299.67932129]
[-45.42189407 290.31793213]
[-33.25595474 281.53842163]
[-20.67699051 273.36166382]
[-7.71483517 265.80706787]
[5.59976339 258.89251709]
[19.23522568 252.63439941]
[33.15921021 247.04760742]
[47.33868790 242.14535522]
[61.74002838 237.93928528]
[76.32907104 234.43937683]
[91.07122040 231.65393066]
[105.93150330 229.58953857]
[104.59326935 214.64935303]
[103.25503540 199.70916748]
[101.91680145 184.76898193]
[100.46737671 169.83917236]
[98.90686035 154.92056274]
[97.23531342 140.01399231]
[95.45285034 125.12027740]
[93.67038727 110.22656250]
[91.66637421 95.36103058]
[89.44125366 80.52698517]
[87.21613312 65.69294739]
[84.99102020 50.85890198]
[71.33911133 47.20211411]
[60.14599609 38.64416885]
[53.08154297 26.50337029]
[51.18379593 12.62932491]
[54.70656967 -0.87880075]
[63.08604050 -11.98989201]
[75.03073120 -19.04628372]
[73.02671814 -33.91181183]
[71.02270508 -48.77733994]
[61.51104736 -61.42008591]
[67.47861481 -75.06697083]
[65.47459412 -89.93250275]
[63.47058487 -104.79802704]
[61.46657181 -119.66355896]
[59.46255493 -134.52908325]
[57.45854187 -149.39460754]
[55.45452881 -164.26014709]
[40.50239563 -166.34249878]
[26.66699982 -172.38273621]
[14.97502708 -181.93263245]
[6.29409456 -194.28349304]
[1.26838720 -208.51882935]
[0.27084526 -223.58229065]
[3.37549305 -238.35603333]
[10.35194492 -251.74377441]
[20.68250275 -262.75204468]
[33.60056686 -270.56396484]
[48.14753723 -274.59985352]
[63.24392700 -274.56018066]
[77.76948547 -270.44793701]
[90.64632416 -262.56820679]
[100.91888428 -251.50581360]
[107.82489014 -238.08158875]
[110.85185242 -223.29171753]
[109.77516174 -208.23371887]
[104.67472076 -194.02499390]
[95.92900085 -181.71990967]
[84.18700409 -172.23159790]
[70.32006073 -166.26416016]
[72.32407379 -151.39862061]
[74.32808685 -136.53309631]
[76.33209991 -121.66757202]
[78.33611298 -106.80204010]
[80.34012604 -91.93651581]
[82.34413910 -77.07098389]
[91.71244812 -65.49152374]
[85.88822937 -50.78135300]
[87.89224243 -35.91582489]
[89.89625549 -21.05029678]
[105.18266296 -16.39450645]
[116.95119476 -5.49884748]
[122.81127930 9.49258232]
[121.54244995 25.59694099]
[113.34813690 39.58611298]
[99.82506561 48.63378525]
[102.05017853 63.46782684]
[104.27529907 78.30187225]
[106.50041199 93.13591766]
[109.90326691 97.12772369]
[110.82735443 102.74193573]
[108.56410217 108.44409180]
[110.34656525 123.33781433]
[112.12903595 138.23153687]
[116.25603485 146.38049316]
[113.82546234 153.36004639]
[115.38598633 168.27865601]
[119.39120483 176.48815918]
[116.85698700 183.43075562]
[118.19522095 198.37094116]
[119.53345490 213.31111145]
[120.87168884 228.25129700]
[135.86228943 227.64186096]
[150.86479187 227.76301575]
[165.84359741 228.61444092]
[180.76318359 230.19415283]
[195.58816528 232.49838257]
[210.28338623 235.52168274]
[224.81398010 239.25688171]
[239.14547729 243.69509888]
[253.24388123 248.82582092]
[267.07577515 254.63687134]
[280.60833740 261.11447144]
[293.80947876 268.24328613]
[306.64785767 276.00634766]
[319.09307861 284.38528442]
[331.11557007 293.36022949]
[342.68682861 302.90985107]
[353.77941895 313.01153564]
[364.36703491 323.64132690]
[374.42453003 334.77395630]
[383.92810059 346.38311768]
[392.85516357 358.44116211]
[401.18457031 370.91958618]
[408.89654541 383.78872681]
[415.97280884 397.01809692]
[422.39657593 410.57629395]
[428.15261841 424.43118286]
[433.22726440 438.54986572]
[437.60845947 452.89889526]
[441.28585815 467.44421387]
[444.25073242 482.15133667]
[446.49603271 496.98538208]
[448.01641846 511.91113281]
[448.80828857 526.89318848]
[448.86981201 541.89605713]
[448.20077515 556.88409424]
[446.80282593 571.82183838]
[444.67922974 586.67376709]
[441.83505249 601.40472412]
[438.27703857 615.97967529]
[434.01364136 630.36413574]
[429.05493164 644.52398682]
[423.41268921 658.42559814]
[417.10031128 672.03601074]
[410.13275146 685.32293701]
[402.52655029 698.25488281]
[394.29974365 710.80120850]
[385.47183228 722.93206787]
[376.06378174 734.61871338]
[366.09786987 745.83343506]
[355.59777832 756.54968262]
[344.58837891 766.74200439]
[333.09582520 776.38616943]
[321.14730835 785.45935059]
[308.77124023 793.94006348]
[295.99691772 801.80816650]
[282.85467529 809.04492188]
[269.37570190 815.63330078]
[255.59191895 821.55755615]
[241.53604126 826.80371094]
[227.24140930 831.35931396]
[212.74194336 835.21350098]
[198.07200623 838.35717773]
[183.26641846 840.78289795]
[168.36027527 842.48486328]
[153.38896179 843.45910645]
[138.38795471 843.70324707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 144]
[62 143]
[63 142]
[64 141]
[65 139]
[66 138]
[67 136]
[68 135]
[69 134]
[70 131]
[71 130]
[72 129]
[73 128]
[80 122]
[81 121]
[82 120]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
