%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[49.96806717 510.78826904]
[46.24507904 525.36688232]
[39.83010483 538.97729492]
[30.95504761 551.12762451]
[19.94072914 561.37854004]
[7.18531370 569.35949707]
[-6.85010052 574.78204346]
[-21.65814209 577.45007324]
[-36.70350647 577.26715088]
[-51.44231796 574.23999023]
[-65.34177399 568.47790527]
[-77.89942169 560.18920898]
[-88.66130829 549.67358398]
[-97.23839569 537.31115723]
[-103.32063293 523.54876709]
[-106.68814087 508.88397217]
[-107.21920013 493.84689331]
[-104.89459991 478.98104858]
[-99.79838562 464.82388306]
[-92.11476898 451.88717651]
[-82.12152100 440.63854980]
[-70.17988586 431.48468018]
[-56.72153854 424.75640869]
[-42.23300171 420.69699097]
[-27.23801994 419.45318604]
[-12.27865601 421.06994629]
[-7.87765789 406.73010254]
[-3.47666001 392.39025879]
[0.92433798 378.05041504]
[5.32533598 363.71057129]
[9.72633457 349.37072754]
[-2.64445329 339.46670532]
[-10.28598309 325.53988647]
[-12.00221634 309.70861816]
[-7.50094795 294.39382935]
[2.55694246 281.94897461]
[16.65434647 274.29824829]
[32.64671326 272.63916016]
[36.83372116 258.23535156]
[41.02073288 243.83158875]
[45.20774460 229.42779541]
[49.39475632 215.02401733]
[45.51761246 200.64288330]
[56.79946899 189.55097961]
[60.98648071 175.14720154]
[48.35228729 183.23281860]
[33.37204742 182.46318054]
[21.63301468 173.12535095]
[17.51356125 158.70210266]
[22.55014229 144.57295227]
[34.86423492 136.00772095]
[49.86298752 136.20103455]
[61.95223999 145.08079529]
[66.62300110 159.33622742]
[72.49196625 145.53204346]
[78.36092377 131.72787476]
[84.22988892 117.92369080]
[90.09884644 104.11951447]
[93.85514832 89.59745789]
[95.41567230 74.67885590]
[96.97619629 59.76024628]
[98.53671265 44.84164429]
[100.09723663 29.92303848]
[100.65544891 14.93342876]
[100.20884705 -0.05992166]
[99.76223755 -15.05327129]
[91.61748505 -28.61695671]
[98.97241974 -41.56895447]
[98.52581024 -56.56230545]
[98.07920837 -71.55565643]
[89.93445587 -85.11933899]
[97.28938293 -98.07134247]
[96.61959839 -113.05638123]
[95.72678375 -128.02978516]
[94.83396912 -143.00318909]
[79.83688354 -143.73446655]
[65.00678253 -146.08294678]
[50.51754379 -150.02111816]
[36.53903961 -155.50277710]
[23.23516273 -162.46366882]
[10.76189423 -170.82218933]
[-0.73452300 -180.48033142]
[-11.11929893 -191.32485962]
[-20.27067757 -203.22860718]
[-28.08136368 -216.05204773]
[-34.45978165 -229.64480591]
[-39.33114624 -243.84751892]
[-42.63834381 -258.49365234]
[-44.34260178 -273.41152954]
[-44.42393112 -288.42620850]
[-42.88138962 -303.36166382]
[-39.73305511 -318.04278564]
[-35.01583862 -332.29742432]
[-28.78505325 -345.95849609]
[-21.11374855 -358.86578369]
[-12.09186554 -370.86798096]
[-1.82518291 -381.82437134]
[9.56592751 -391.60650635]
[21.94791222 -400.09967041]
[35.17559814 -407.20428467]
[49.09389877 -412.83706665]
[63.53962326 -416.93194580]
[78.34341431 -419.44094849]
[93.33168793 -420.33465576]
[108.32873535 -419.60256958]
[123.15870667 -417.25329590]
[137.64773560 -413.31436157]
[151.62594604 -407.83193970]
[164.92944336 -400.87033081]
[177.40226746 -392.51113892]
[188.89816284 -382.85238647]
[199.28236389 -372.00729370]
[208.43309021 -360.10305786]
[216.24308777 -347.27920532]
[222.62077332 -333.68609619]
[227.49137878 -319.48312378]
[230.79779053 -304.83679199]
[232.50123596 -289.91882324]
[232.58177185 -274.90414429]
[231.03842163 -259.96878052]
[227.88929749 -245.28782654]
[223.17131042 -231.03343201]
[216.93978882 -217.37271118]
[209.26779175 -204.46582031]
[200.24526978 -192.46411133]
[189.97799683 -181.50827026]
[178.58634949 -171.72676086]
[166.20391846 -163.23426819]
[152.97584534 -156.13037109]
[139.05723572 -150.49833679]
[124.61129761 -146.40422058]
[109.80737305 -143.89601135]
[110.70018768 -128.92259216]
[111.59300232 -113.94919586]
[114.50707245 -110.16537476]
[115.07510376 -104.51078796]
[112.28273773 -98.51794434]
[120.39554596 -86.02667999]
[113.07255554 -72.00225830]
[113.51915741 -57.00891113]
[113.96576691 -42.01556015]
[122.07857513 -29.52429962]
[114.75558472 -15.49987793]
[115.20219421 -0.50652760]
[115.64879608 14.48682213]
[124.61100769 2.45857310]
[138.61567688 -2.91443086]
[153.32331848 0.03269383]
[164.17658997 10.38674831]
[167.81250000 24.93941689]
[163.10441589 39.18139648]
[151.51119995 48.69965363]
[136.62512207 50.54485703]
[123.05880737 44.14524460]
[115.01584625 31.48356056]
[113.45532227 46.40216446]
[111.89479828 61.32077026]
[110.33427429 76.23937225]
[108.77375031 91.15798187]
[116.95752716 78.58714294]
[128.31385803 68.78746796]
[141.94714355 62.53178787]
[156.78219604 60.31345749]
[171.64907837 62.30741882]
[185.37532043 68.35642242]
[196.87840271 77.98342133]
[205.25114441 90.42919159]
[209.83325195 104.71219635]
[210.26335144 119.70603180]
[206.50752258 134.22821045]
[198.86196899 147.13345337]
[187.92964172 157.40402222]
[174.57272339 164.22990417]
[159.84458923 167.07279968]
[144.90676880 165.70849609]
[130.93730164 160.24459839]
[119.03790283 151.11201477]
[110.14698792 139.03097534]
[104.96574402 124.95423126]
[103.90302277 109.98847961]
[98.03406525 123.79265594]
[92.16510010 137.59683228]
[86.29614258 151.40100098]
[80.42717743 165.20518494]
[75.39026642 179.33421326]
[71.20325470 193.73799133]
[74.78091431 209.14938354]
[63.79853821 219.21102905]
[59.61152649 233.61480713]
[55.42451477 248.01860046]
[51.23750305 262.42236328]
[47.05049515 276.82617188]
[58.42011642 285.40420532]
[66.16257477 297.32290649]
[69.36493683 311.13949585]
[67.66238403 325.18969727]
[61.27968597 337.78823853]
[51.00171661 347.43099976]
[38.07703018 352.97454834]
[24.06618118 353.77172852]
[19.66518402 368.11157227]
[15.26418495 382.45141602]
[10.86318684 396.79125977]
[6.46218920 411.13110352]
[2.06119108 425.47094727]
[15.35200787 432.52438354]
[27.06760597 441.96585083]
[36.78447342 453.45404053]
[44.15135193 466.57369995]
[48.90193176 480.85055542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[38 192]
[39 191]
[40 190]
[41 189]
[42 188]
[44 186]
[45 185]
[54 184]
[55 183]
[56 182]
[57 181]
[58 180]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[64 145]
[65 144]
[66 143]
[68 141]
[69 140]
[70 139]
[72 137]
[73 134]
[74 133]
[75 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
