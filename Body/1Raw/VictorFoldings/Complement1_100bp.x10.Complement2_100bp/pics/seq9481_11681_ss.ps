%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[90.36787415 638.82818604]
[95.26512909 624.55657959]
[103.69008636 612.03924561]
[115.06831360 602.12976074]
[128.62403870 595.50372314]
[125.73876953 580.78381348]
[122.85349274 566.06390381]
[119.96822357 551.34399414]
[117.08294678 536.62414551]
[114.19767761 521.90423584]
[111.31240845 507.18435669]
[100.90524292 517.98669434]
[85.95736694 516.73736572]
[77.48778534 504.35729980]
[81.73995972 489.97262573]
[95.57935333 484.18719482]
[108.80309296 491.26446533]
[107.02062225 476.37075806]
[103.10456085 470.10287476]
[105.32419586 461.24224854]
[103.76367188 446.32363892]
[102.20315552 431.40502930]
[100.64263153 416.48641968]
[98.14853668 413.99407959]
[96.73772430 410.16986084]
[97.02303314 405.53607178]
[99.36085510 400.86898804]
[98.46803284 385.89556885]
[97.57521820 370.92218018]
[96.68240356 355.94876099]
[95.78958893 340.97537231]
[94.89677429 326.00195312]
[94.00395966 311.02853394]
[83.26470947 303.90829468]
[78.51644897 291.72076416]
[81.70147705 278.83410645]
[91.87453461 270.00665283]
[91.20475006 255.02162170]
[90.53496552 240.03657532]
[79.40403748 230.20611572]
[78.51131439 215.01869202]
[88.89788055 203.41021729]
[88.22809601 188.42517090]
[87.55830383 173.44013977]
[86.88851929 158.45509338]
[78.99220276 171.20845032]
[66.12071991 178.91072083]
[51.14960861 179.84121704]
[37.42345047 173.79203796]
[28.00869751 162.11460876]
[25.00863457 147.41767883]
[29.09348488 132.98458862]
[39.35067749 122.03973389]
[53.48873520 117.02821350]
[68.34917450 119.06961060]
[80.61213684 127.70788574]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[86.92019653 50.70597839]
[72.16845703 47.98822403]
[63.54594040 35.71417618]
[65.99202728 20.91496277]
[78.10547638 12.06824875]
[92.94715881 14.24183273]
[102.01483917 26.18966866]
[105.11894989 11.51436615]
[107.89455414 -3.22659636]
[110.34028625 -18.02586746]
[112.78601074 -32.82513809]
[115.23174286 -47.62440872]
[109.84807587 -62.50146484]
[119.55699921 -73.79686737]
[117.71740723 -78.68183899]
[117.91571808 -83.32015228]
[119.71672821 -86.97685242]
[122.45658112 -89.19621277]
[125.56069183 -103.87151337]
[128.66479492 -118.54681396]
[131.76890564 -133.22212219]
[134.87301636 -147.89741516]
[136.87702942 -162.76295471]
[129.97485352 -176.99919128]
[138.45597839 -189.24336243]
[139.34878540 -204.21676636]
[140.24160767 -219.19017029]
[133.33943176 -233.42640686]
[141.82054138 -245.67057800]
[142.71336365 -260.64398193]
[143.60618591 -275.61740112]
[129.20716858 -280.08190918]
[116.29535675 -287.86318970]
[105.62142181 -298.50888062]
[97.80592346 -311.40002441]
[93.30326080 -325.78713989]
[92.37520599 -340.83383179]
[95.07570648 -355.66522217]
[101.24776459 -369.41909790]
[110.53255463 -381.29580688]
[122.39025116 -390.60485840]
[136.13148499 -396.80502319]
[150.95733643 -399.53585815]
[166.00587463 -398.63854980]
[180.40217590 -394.16531372]
[193.30926514 -386.37619019]
[203.97674561 -375.72402954]
[211.78442383 -362.82815552]
[216.27836609 -348.43829346]
[217.19729614 -333.39108276]
[214.48780823 -318.56130981]
[208.30740356 -304.81118774]
[199.01542664 -292.94009399]
[187.15208435 -283.63824463]
[173.40708923 -277.44641113]
[158.57958984 -274.72457886]
[157.68676758 -259.75115967]
[156.79396057 -244.77777100]
[163.75999451 -231.61253357]
[155.21501160 -218.29736328]
[154.32218933 -203.32394409]
[153.42938232 -188.35054016]
[160.39541626 -175.18530273]
[151.85043335 -161.87013245]
[161.40499878 -173.43345642]
[175.42633057 -178.76281738]
[190.24931335 -176.46513367]
[201.99923706 -167.14100647]
[207.60470581 -153.22775269]
[205.60046387 -138.36225891]
[196.51042175 -126.43032074]
[182.71067810 -120.55093384]
[167.80847168 -122.26094055]
[155.69918823 -131.11335754]
[149.54832458 -144.79330444]
[146.44421387 -130.11801147]
[143.34010315 -115.44270325]
[140.23599243 -100.76740265]
[137.13188171 -86.09210205]
[134.35627747 -71.35113525]
[139.91487122 -57.53262711]
[130.03100586 -45.17868042]
[127.58528137 -30.37940979]
[125.13955688 -15.58014011]
[122.69382477 -0.78086901]
[124.43889618 2.28296614]
[124.78665924 6.34425974]
[123.28448486 10.73706818]
[119.79425049 14.61847687]
[116.69013977 29.29377937]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[101.87355804 157.78530884]
[102.54334259 172.77033997]
[103.21313477 187.75538635]
[103.88291931 202.74041748]
[115.26372528 213.37597656]
[115.72951508 228.58247375]
[105.52000427 239.36679077]
[106.18978882 254.35183716]
[106.85957336 269.33688354]
[119.98328400 280.90353394]
[120.66772461 298.04547119]
[108.97736359 310.13574219]
[109.87017822 325.10913086]
[110.76299286 340.08255005]
[111.65580750 355.05593872]
[112.54862976 370.02935791]
[113.44144440 385.00274658]
[114.33425903 399.97616577]
[115.56123352 414.92590332]
[117.12175751 429.84451294]
[118.68228149 444.76312256]
[120.24280548 459.68170166]
[121.91434479 474.58828735]
[123.69680786 489.48199463]
[126.03229523 504.29907227]
[128.91757202 519.01898193]
[131.80284119 533.73883057]
[134.68811035 548.45874023]
[137.57337952 563.17864990]
[140.45866394 577.89855957]
[143.34393311 592.61840820]
[158.39802551 593.63665771]
[172.67530823 598.51733398]
[185.20234680 606.92779541]
[195.12503052 618.29455566]
[201.76679993 631.84259033]
[204.67480469 646.64819336]
[203.65078735 661.70190430]
[198.76455688 675.97729492]
[190.34927368 688.50109863]
[178.97869873 698.41937256]
[165.42808533 705.05590820]
[150.62136841 707.95819092]
[135.56806946 706.92834473]
[121.29454803 702.03662109]
[108.77400970 693.61651611]
[98.86011505 682.24206543]
[92.22881317 668.68890381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[17 186]
[18 185]
[20 184]
[21 183]
[22 182]
[23 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[37 171]
[38 170]
[39 169]
[42 166]
[43 165]
[44 164]
[45 163]
[57 162]
[58 161]
[59 160]
[61 158]
[62 157]
[63 156]
[64 155]
[71 154]
[72 153]
[73 149]
[74 148]
[75 147]
[76 146]
[78 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[87 128]
[89 126]
[90 125]
[91 124]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
