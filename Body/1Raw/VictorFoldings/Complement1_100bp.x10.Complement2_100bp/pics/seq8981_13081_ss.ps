%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[122.98217010 477.11114502]
[126.13859558 491.87393188]
[125.19387054 506.94076538]
[120.21810150 521.19366455]
[111.58052063 533.57489014]
[99.92209625 543.16571045]
[86.10796356 549.25439453]
[71.16322327 551.38916016]
[56.19686890 549.41156006]
[42.31950760 543.46838379]
[30.56092834 534.00067139]
[21.79369736 521.71087646]
[16.66840363 507.51110840]
[15.56537437 492.45501709]
[18.56646538 477.65988159]
[25.44897079 464.22360229]
[35.70216751 453.14321899]
[48.56520081 445.24099731]
[63.08354187 441.10333252]
[78.17984009 441.03726196]
[82.15193939 426.57275391]
[86.12403107 412.10821533]
[90.09613037 397.64370728]
[94.06822968 383.17916870]
[98.04032135 368.71466064]
[102.01242065 354.25012207]
[97.92159271 339.92831421]
[109.03705597 328.66967773]
[110.26403046 313.71994019]
[108.70350647 298.80133057]
[107.14298248 283.88272095]
[105.58245850 268.96411133]
[103.08837128 266.47177124]
[101.67755890 262.64755249]
[101.96286774 258.01376343]
[104.30068207 253.34667969]
[103.40786743 238.37327576]
[92.96902466 224.26663208]
[101.34731293 207.86888123]
[100.23165894 192.91043091]
[99.11601257 177.95198059]
[98.00036621 162.99353027]
[96.77339172 148.04379272]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[85.16957092 97.01090240]
[75.43193054 108.42047882]
[62.67811203 116.31605530]
[48.12372208 119.94506836]
[33.15599442 118.96163177]
[19.20155907 113.45948029]
[7.59046125 103.96303558]
[-0.57060319 91.37744904]
[-4.50377274 76.90229034]
[-3.83416247 61.91724396]
[1.37440407 47.85058975]
[10.62547970 36.04306412]
[23.03731155 27.62009430]
[37.42687988 23.38449860]
[52.42266846 23.73998833]
[66.59536743 28.65268135]
[78.59413147 37.65433121]
[87.27531433 49.88695526]
[91.81164551 64.18574524]
[94.47743988 49.42452621]
[97.14323425 34.66330719]
[99.80903625 19.90209198]
[102.47483063 5.14087391]
[105.14062500 -9.62034321]
[107.80641937 -24.38156128]
[110.47221375 -39.14277649]
[103.77249908 -50.16442108]
[106.29673767 -62.40419388]
[116.15754700 -69.41069031]
[117.60696411 -84.34049988]
[117.60696411 -99.34049988]
[117.60696411 -114.34049988]
[117.60696411 -129.34049988]
[114.47755432 -137.92214966]
[117.72029877 -144.56341553]
[117.94362640 -159.56175232]
[115.06233978 -165.51235962]
[115.54611969 -171.17477417]
[118.40352631 -175.00155640]
[119.07331085 -189.98660278]
[116.33021545 -198.69941711]
[119.86626434 -205.18927002]
[120.75908661 -220.16267395]
[121.65190125 -235.13607788]
[122.54471588 -250.10948181]
[123.43753052 -265.08288574]
[124.33034515 -280.05630493]
[125.22315979 -295.02969360]
[110.90371704 -299.78530884]
[98.30356598 -308.08584595]
[88.28181458 -319.36532593]
[81.52176666 -332.85473633]
[78.48432922 -347.63433838]
[79.37659454 -362.69641113]
[84.13773346 -377.01400757]
[92.44312286 -389.61096191]
[103.72647858 -399.62835693]
[117.21849823 -406.38320923]
[131.99926758 -409.41491699]
[147.06100464 -408.51684570]
[161.37677002 -403.75018311]
[173.97050476 -395.43994141]
[183.98353577 -384.15270996]
[190.73316956 -370.65808105]
[193.75920105 -355.87612915]
[192.85530090 -340.81475830]
[188.08309937 -326.50082397]
[179.76799011 -313.91030884]
[168.47689819 -303.90161133]
[154.97967529 -297.15719604]
[140.19656372 -294.13687134]
[139.30375671 -279.16348267]
[138.41093445 -264.19006348]
[137.51812744 -249.21667480]
[136.62530518 -234.24325562]
[135.73248291 -219.26985168]
[134.83967590 -204.29644775]
[134.05834961 -189.31681824]
[133.38856506 -174.33177185]
[132.94195557 -159.33842468]
[132.71862793 -144.34008789]
[132.60696411 -129.34049988]
[132.60696411 -114.34049988]
[132.60696411 -99.34049988]
[132.60696411 -84.34049988]
[140.45930481 -97.12098694]
[152.78480530 -105.66978455]
[167.50642395 -108.54626465]
[182.14329529 -105.26569366]
[194.22883606 -96.38090515]
[201.72645569 -83.38914490]
[203.37263489 -68.47975159]
[198.88999939 -54.16521835]
[189.03392029 -42.85779572]
[175.46534729 -36.46298218]
[160.47079468 -36.05841827]
[146.57713318 -41.71227646]
[136.12568665 -52.47178650]
[130.87744141 -66.52542114]
[137.45108032 -50.25415421]
[125.23342896 -36.47698212]
[122.56763458 -21.71576500]
[119.90184021 -6.95454788]
[117.23604584 7.80666971]
[114.57025146 22.56788635]
[111.90445709 37.32910538]
[109.23866272 52.09032059]
[106.57286072 66.85153961]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.71357727 146.70555115]
[115.59612274 154.97378540]
[112.95881653 161.87788391]
[114.07447052 176.83633423]
[115.19011688 191.79478455]
[116.30576324 206.75323486]
[125.55204773 215.74595642]
[126.17332458 228.22785950]
[118.38127899 237.48045349]
[119.27409363 252.45385742]
[120.50106812 267.40359497]
[122.06159210 282.32220459]
[123.62211609 297.24081421]
[125.18263245 312.15942383]
[130.38539124 298.09060669]
[138.65277100 285.57458496]
[149.55107117 275.26794434]
[162.50859070 267.71130371]
[176.84561157 263.30111694]
[191.81004333 262.26870728]
[206.61686707 264.66824341]
[220.48936462 270.37384033]
[232.69981384 279.08618164]
[242.60765076 290.34826660]
[249.69316101 303.56930542]
[253.58464050 318.05572510]
[254.07795715 333.04760742]
[251.14721680 347.75851440]
[244.94616699 361.41674805]
[235.80010986 373.30578613]
[224.18882751 382.80200195]
[210.72140503 389.40722656]
[196.10435486 392.77496338]
[181.10443115 392.72851562]
[166.50849915 389.27035522]
[153.08222961 382.58190918]
[141.52996826 373.01397705]
[132.45768738 361.06854248]
[126.34131622 347.37219238]
[123.50157928 332.64175415]
[127.30829620 347.99816895]
[116.47694397 358.22222900]
[112.50484467 372.68673706]
[108.53275299 387.15127563]
[104.56065369 401.61578369]
[100.58855438 416.08032227]
[96.61646271 430.54483032]
[92.64436340 445.00936890]
[105.58973694 452.77593994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 209]
[21 208]
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[28 201]
[29 175]
[30 174]
[31 173]
[32 172]
[36 171]
[37 170]
[39 167]
[40 166]
[41 165]
[42 164]
[43 162]
[44 161]
[45 160]
[48 157]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[77 147]
[78 133]
[79 132]
[80 131]
[81 130]
[83 129]
[84 128]
[87 127]
[88 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
