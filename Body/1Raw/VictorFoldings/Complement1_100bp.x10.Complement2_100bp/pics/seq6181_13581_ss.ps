%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[102.61059570 824.88037109]
[87.60805511 825.12957764]
[72.61785126 824.47247314]
[57.69466400 822.91143799]
[42.89295959 820.45227051]
[28.26674080 817.10382080]
[13.86938095 812.87841797]
[-0.24658708 807.79144287]
[-14.02965450 801.86138916]
[-27.42952728 795.10998535]
[-40.39731216 787.56182861]
[-52.88568878 779.24444580]
[-64.84909058 770.18823242]
[-76.24386597 760.42620850]
[-87.02842712 749.99395752]
[-97.16342926 738.92962646]
[-106.61189270 727.27355957]
[-115.33934021 715.06823730]
[-123.31391907 702.35821533]
[-130.50653076 689.18988037]
[-136.89094543 675.61132812]
[-142.44384766 661.67205811]
[-147.14498901 647.42291260]
[-150.97721863 632.91595459]
[-153.92652893 618.20404053]
[-155.98217773 603.34094238]
[-157.13665771 588.38079834]
[-157.38577271 573.37829590]
[-156.72859192 558.38806152]
[-155.16752625 543.46490479]
[-152.70825195 528.66320801]
[-149.35977173 514.03698730]
[-145.13427734 499.63967896]
[-140.04721069 485.52371216]
[-134.11712646 471.74069214]
[-127.36565399 458.34085083]
[-119.81742859 445.37307739]
[-111.50000763 432.88476562]
[-102.44372559 420.92138672]
[-92.68164062 409.52667236]
[-82.24936676 398.74215698]
[-71.18496704 388.60720825]
[-59.52882385 379.15878296]
[-47.32346344 370.43139648]
[-34.61342239 362.45687866]
[-21.44507790 355.26431274]
[-7.86648130 348.87997437]
[6.07281923 343.32714844]
[20.32196236 338.62606812]
[34.82895279 334.79391479]
[49.54085541 331.84466553]
[64.40398407 329.78906250]
[79.36412048 328.63467407]
[94.36665344 328.38562012]
[109.35685730 329.04287720]
[110.91738129 314.12426758]
[112.47790527 299.20565796]
[114.03842926 284.28704834]
[115.59894562 269.36846924]
[115.15234375 254.37510681]
[112.70661926 239.57583618]
[110.26088715 224.77656555]
[100.55196381 213.48117065]
[105.93563080 198.60411072]
[102.64372253 195.14399719]
[101.49050140 189.57917786]
[103.64425659 183.32835388]
[101.64024353 168.46282959]
[99.63622284 153.59729004]
[97.63220978 138.73176575]
[95.62819672 123.86624146]
[93.62418365 109.00070953]
[82.59250641 119.16447449]
[67.74549103 117.02764130]
[60.02780151 104.16539764]
[65.12863159 90.05931854]
[79.28784180 85.10787201]
[92.06688690 92.95970154]
[91.17407227 77.98629761]
[90.28125763 63.01289368]
[89.38844299 48.03948593]
[75.75684357 41.10213852]
[67.48254395 28.35722923]
[66.70370483 13.28209019]
[73.52950287 -0.06948040]
[86.03760529 -8.15730858]
[85.03334808 -23.12365341]
[83.91770172 -38.08210754]
[82.80204773 -53.04056168]
[81.68640137 -67.99901581]
[80.57075500 -82.95746613]
[77.17006683 -88.62728882]
[77.14674377 -94.31028748]
[79.65135193 -98.37673950]
[78.98156738 -113.36177826]
[78.31178284 -128.34681702]
[77.64199829 -143.33184814]
[63.45161057 -148.85931396]
[52.74088287 -159.68522644]
[47.36551285 -173.93391418]
[48.25681686 -189.13671875]
[55.26036835 -202.65966797]
[67.16275787 -212.15983582]
[81.90183258 -215.99122620]
[96.92395020 -213.49006653]
[109.62644196 -205.08967590]
[117.80852509 -192.24546814]
[120.05260468 -177.18280029]
[115.96987152 -162.51136780]
[106.26770020 -150.77305603]
[92.62703705 -144.00163269]
[93.29682159 -129.01660156]
[93.96660614 -114.03156281]
[94.63639069 -99.04652405]
[95.52920532 -84.07311249]
[96.64485168 -69.11466217]
[97.76050568 -54.15620804]
[98.87615204 -39.19775391]
[99.99179840 -24.23930168]
[103.62408447 -17.80282021]
[101.01101685 -9.05012512]
[114.39157104 -2.50595379]
[122.75559235 9.93989754]
[123.77366638 25.00077057]
[117.07248688 38.63861847]
[104.36184692 47.14667130]
[105.25466156 62.12007904]
[106.14747620 77.09348297]
[107.04029846 92.06688690]
[108.48971558 106.99669647]
[110.49372864 121.86222839]
[112.49774170 136.72775269]
[114.50175476 151.59327698]
[116.50576782 166.45881653]
[118.50978088 181.32434082]
[120.73490143 196.15838623]
[130.61875916 208.51232910]
[125.06015778 222.33084106]
[127.50588989 237.13011169]
[129.95161438 251.92938232]
[134.69981384 237.70072937]
[143.56187439 225.59849548]
[155.69311523 216.77621460]
[169.93728638 212.07473755]
[184.93669128 211.94219971]
[199.26171875 216.39123535]
[211.54696655 224.99777222]
[220.62150574 236.94151306]
[225.62039185 251.08404541]
[226.06716919 266.07739258]
[221.91926575 280.49246216]
[213.57200623 292.95535278]
[201.82102966 302.27813721]
[187.78634644 307.57226562]
[172.80564880 308.33309937]
[158.30680847 304.48812866]
[145.67176819 296.40383911]
[136.10481262 284.85076904]
[130.51754761 270.92898560]
[128.95703125 285.84759521]
[127.39650726 300.76617432]
[125.83598328 315.68478394]
[124.27545929 330.60339355]
[139.07719421 333.06246948]
[153.70344543 336.41073608]
[168.10084534 340.63601685]
[182.21685791 345.72290039]
[195.99996948 351.65280151]
[209.39991760 358.40408325]
[222.36776733 365.95211792]
[234.85621643 374.26937866]
[246.81970215 383.32546997]
[258.21456909 393.08740234]
[268.99923706 403.51953125]
[279.13433838 414.58380127]
[288.58291626 426.23980713]
[297.31045532 438.44503784]
[305.28515625 451.15496826]
[312.47790527 464.32321167]
[318.86242676 477.90173340]
[324.41546631 491.84094238]
[329.11676025 506.09002686]
[332.94909668 520.59698486]
[335.89855957 535.30883789]
[337.95434570 550.17193604]
[339.10897827 565.13201904]
[339.35821533 580.13458252]
[338.70117188 595.12481689]
[337.14022827 610.04797363]
[334.68112183 624.84973145]
[331.33276367 639.47595215]
[327.10742188 653.87329102]
[322.02047729 667.98931885]
[316.09051514 681.77239990]
[309.33917236 695.17230225]
[301.79104614 708.14013672]
[293.47375488 720.62854004]
[284.41757202 732.59197998]
[274.65560913 743.98681641]
[264.22341919 754.77142334]
[253.15911865 764.90649414]
[241.50306702 774.35498047]
[229.29779053 783.08245850]
[216.58781433 791.05712891]
[203.41954041 798.24981689]
[189.84100342 804.63427734]
[175.90174866 810.18725586]
[161.65264893 814.88842773]
[147.14570618 818.72076416]
[132.43382263 821.67010498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[60 140]
[61 139]
[62 138]
[64 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[78 129]
[79 128]
[80 127]
[81 126]
[86 121]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
