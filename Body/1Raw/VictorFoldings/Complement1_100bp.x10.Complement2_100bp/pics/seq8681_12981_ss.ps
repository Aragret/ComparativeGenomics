%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[135.57608032 612.93774414]
[124.15602875 603.20349121]
[113.41918945 592.72052002]
[103.41455078 581.53656006]
[94.18776703 569.70275879]
[85.78092957 557.27301025]
[78.23239899 544.30413818]
[71.57662964 530.85516357]
[65.84397888 516.98760986]
[61.06060791 502.76464844]
[57.24834061 488.25122070]
[54.42457199 473.51354980]
[52.60218811 458.61886597]
[51.78950119 443.63513184]
[51.99022293 428.63070679]
[53.20343399 413.67407227]
[55.42360306 398.83343506]
[58.64059448 384.17657471]
[62.83973312 369.77032471]
[68.00186157 355.68041992]
[74.10341644 341.97116089]
[81.11656952 328.70507812]
[89.00930786 315.94271851]
[97.74563599 303.74234009]
[107.28567505 292.15957642]
[117.58590698 281.24728394]
[128.59933472 271.05523682]
[140.27568054 261.62997437]
[152.56170654 253.01448059]
[165.40132141 245.24807739]
[158.52191162 231.91865540]
[152.66084290 227.41647339]
[151.64097595 218.33915710]
[144.96078491 204.90878296]
[138.28059387 191.47840881]
[131.60038757 178.04803467]
[116.47432709 169.15032959]
[117.76883698 150.78172302]
[110.88942719 137.45230103]
[104.01000977 124.12287140]
[97.13059998 110.79344177]
[90.15214539 97.51559448]
[83.07504272 84.29006958]
[75.70435333 71.22588348]
[68.04375458 58.32955551]
[60.38315582 45.43322754]
[52.72256088 32.53689957]
[45.06196213 19.64057350]
[41.20169830 17.65252495]
[38.45145798 14.82397366]
[36.93916321 11.60708523]
[36.63275146 8.44912338]
[37.35562897 5.74069405]
[30.47621727 -7.58873510]
[15.68904877 -12.48540688]
[8.90222931 -26.10134315]
[13.66158581 -40.16847229]
[6.78217268 -53.49790192]
[-0.09723972 -66.82733154]
[-6.97665215 -80.15676117]
[-13.85606480 -93.48619080]
[-20.73547745 -106.81562042]
[-34.76597595 -101.46537781]
[-49.30730057 -97.71972656]
[-64.17657471 -95.62577057]
[-79.18680573 -95.20984650]
[-94.14922333 -96.47718048]
[-108.87565613 -99.41183472]
[-123.18090820 -103.97690582]
[-136.88507080 -110.11498260]
[-149.81579590 -117.74887085]
[-161.81047058 -126.78256989]
[-172.71826172 -137.10246277]
[-182.40197754 -148.57878113]
[-190.73983765 -161.06716919]
[-197.62698364 -174.41061401]
[-202.97679138 -188.44126892]
[-206.72201538 -202.98271179]
[-208.81552124 -217.85205078]
[-209.23100281 -232.86228943]
[-207.96322632 -247.82466125]
[-205.02812195 -262.55099487]
[-200.46263123 -276.85610962]
[-194.32414246 -290.56008911]
[-186.68986511 -303.49060059]
[-177.65580750 -315.48501587]
[-167.33558655 -326.39248657]
[-155.85899353 -336.07586670]
[-143.37033081 -344.41333008]
[-130.02670288 -351.30007935]
[-115.99588013 -356.64947510]
[-101.45433044 -360.39425659]
[-86.58493042 -362.48733521]
[-71.57467651 -362.90237427]
[-56.61233521 -361.63412476]
[-41.88607788 -358.69860840]
[-27.58110046 -354.13265991]
[-13.87730694 -347.99377441]
[-0.94703412 -340.35910034]
[11.04710579 -331.32470703]
[21.95427322 -321.00415039]
[31.63730049 -309.52725220]
[39.97441101 -297.03836060]
[46.86075974 -283.69451904]
[52.20973969 -269.66354370]
[55.95408630 -255.12187195]
[58.04670715 -240.25241089]
[58.46128464 -225.24214172]
[57.19260788 -210.27984619]
[54.25663376 -195.55368042]
[49.69027710 -181.24884033]
[43.55097198 -167.54522705]
[35.91592407 -154.61518860]
[26.88115311 -142.62130737]
[16.56027985 -131.71444702]
[5.08309984 -122.03176880]
[-7.40604830 -113.69503021]
[-0.52663559 -100.36560059]
[6.35277700 -87.03617096]
[13.23218918 -73.70674133]
[20.11160278 -60.37731552]
[26.99101448 -47.04788589]
[41.21431732 -42.77783966]
[48.38090134 -29.35790253]
[43.80564880 -14.46814728]
[50.68505859 -1.13871837]
[57.95829010 11.97997570]
[65.61888885 24.87630272]
[73.27948761 37.77262878]
[80.94007874 50.66895676]
[88.60067749 63.56528473]
[91.90889740 64.78514099]
[94.79061890 67.66796875]
[96.47069550 71.99585724]
[96.30056763 77.21295929]
[103.37767792 90.43848419]
[109.65509033 95.49482727]
[110.46002960 103.91402435]
[117.33943939 117.24345398]
[124.21885681 130.57289124]
[131.09826660 143.90231323]
[143.12594604 148.56037903]
[148.58142090 159.80412292]
[145.03077698 171.36784363]
[151.71096802 184.79821777]
[158.39115906 198.22859192]
[165.07135010 211.65896606]
[171.85134888 225.03924561]
[178.73075867 238.36866760]
[192.49942017 232.40235901]
[206.63945007 227.37916565]
[221.08634949 223.32203674]
[235.77416992 220.24948120]
[250.63592529 218.17549133]
[265.60379028 217.10957336]
[280.60943604 217.05654907]
[295.58447266 218.01667786]
[310.46047974 219.98559570]
[325.16967773 222.95429993]
[339.64486694 226.90924072]
[353.82003784 231.83238220]
[367.63052368 237.70124817]
[381.01327515 244.48908997]
[393.90725708 252.16490173]
[406.25363159 260.69366455]
[417.99606323 270.03649902]
[429.08096313 280.15075684]
[439.45776367 290.99026489]
[449.07910156 302.50558472]
[457.90112305 314.64416504]
[465.88351440 327.35061646]
[472.98989868 340.56698608]
[479.18780518 354.23297119]
[484.44900513 368.28616333]
[488.74948120 382.66250610]
[492.06958008 397.29635620]
[494.39416504 412.12097168]
[495.71264648 427.06869507]
[496.01901245 442.07135010]
[495.31182861 457.06042480]
[493.59436035 471.96759033]
[490.87442017 486.72479248]
[487.16439819 501.26467896]
[482.48129272 515.52093506]
[476.84640503 529.42852783]
[470.28549194 542.92401123]
[462.82846069 555.94573975]
[454.50933838 568.43432617]
[445.36608887 580.33282471]
[435.44046021 591.58691406]
[424.77767944 602.14526367]
[413.42642212 611.95965576]
[401.43853760 620.98529053]
[388.86865234 629.18109131]
[375.77413940 636.50958252]
[362.21475220 642.93737793]
[348.25238037 648.43505859]
[333.95068359 652.97766113]
[319.37496948 656.54431152]
[304.59170532 659.11889648]
[289.66836548 660.68951416]
[274.67303467 661.24914551]
[259.67416382 660.79510498]
[244.74012756 659.32958984]
[229.93911743 656.85913086]
[215.33863831 653.39514160]
[201.00534058 648.95343018]
[187.00459290 643.55413818]
[173.40029907 637.22198486]
[160.25451660 629.98590088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 149]
[31 148]
[33 147]
[34 146]
[35 145]
[36 144]
[38 141]
[39 140]
[40 139]
[41 138]
[42 136]
[43 135]
[44 131]
[45 130]
[46 129]
[47 128]
[48 127]
[53 126]
[54 125]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
