%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[77.21913910 835.80737305]
[62.22484207 835.29101562]
[47.27542877 834.02197266]
[32.40866470 832.00335693]
[17.66210175 829.24029541]
[3.07298946 825.73986816]
[-11.32181644 821.51074219]
[-25.48595238 816.56378174]
[-39.38364029 810.91137695]
[-52.97977448 804.56781006]
[-66.24000549 797.54913330]
[-79.13084412 789.87310791]
[-91.61972046 781.55902100]
[-103.67508698 772.62799072]
[-115.26648712 763.10247803]
[-126.36464691 753.00665283]
[-136.94152832 742.36590576]
[-146.97042847 731.20721436]
[-156.42597961 719.55871582]
[-165.28431702 707.44982910]
[-173.52307129 694.91113281]
[-181.12141418 681.97430420]
[-188.06016541 668.67211914]
[-194.32179260 655.03802490]
[-199.89045715 641.10656738]
[-204.75212097 626.91296387]
[-208.89450073 612.49298096]
[-212.30711365 597.88305664]
[-214.98135376 583.12011719]
[-216.91047668 568.24145508]
[-218.08956909 553.28466797]
[-218.51570129 538.28753662]
[-218.18775940 523.28796387]
[-217.10658264 508.32379150]
[-215.27491760 493.43283081]
[-212.69737244 478.65270996]
[-209.38046265 464.02078247]
[-205.33256531 449.57397461]
[-200.56391907 435.34881592]
[-195.08656311 421.38119507]
[-188.91432190 407.70645142]
[-182.06278992 394.35910034]
[-174.54930115 381.37283325]
[-166.39280701 368.78048706]
[-157.61392212 356.61386108]
[-148.23481750 344.90371704]
[-138.27919006 333.67959595]
[-127.77217865 322.96984863]
[-116.74034119 312.80157471]
[-105.21154022 303.20040894]
[-93.21489716 294.19064331]
[-80.78071594 285.79501343]
[-67.94039917 278.03472900]
[-54.72639847 270.92941284]
[-41.17208099 264.49700928]
[-27.31169128 258.75372314]
[-13.18024063 253.71412659]
[1.18657267 249.39091492]
[15.75245762 245.79501343]
[30.48061943 242.93551636]
[45.33385086 240.81964111]
[60.27463531 239.45271301]
[75.26522827 238.83821106]
[90.26776123 238.97767639]
[91.16057587 224.00427246]
[92.05339050 209.03086853]
[92.50000000 194.03752136]
[92.50000000 179.03752136]
[92.50000000 164.03752136]
[84.76270294 151.31024170]
[92.50000000 137.51007080]
[92.50000000 122.51007843]
[92.50000000 107.51007843]
[91.60718536 92.53667450]
[89.82471466 77.64295197]
[88.04225159 62.74923706]
[78.71988678 49.96627808]
[84.88996887 36.40975189]
[83.10750580 21.51603508]
[73.78513336 8.73307610]
[79.95521545 -4.82344818]
[78.17275238 -19.71716499]
[76.39028931 -34.61088181]
[74.60781860 -49.50460052]
[72.82535553 -64.39831543]
[71.04288483 -79.29203796]
[69.26042175 -94.18575287]
[54.26495361 -95.53839111]
[39.87852097 -99.97958374]
[26.73003197 -107.31517792]
[15.39428520 -117.22449493]
[6.36683083 -129.27433777]
[0.04230942 -142.93794250]
[-3.30279756 -157.61799622]
[-3.52225637 -172.67274475]
[-0.60647351 -187.44406128]
[5.31708574 -201.28622437]
[13.98946857 -213.59408569]
[25.03155708 -223.82960510]
[37.96063614 -231.54534912]
[52.21150208 -236.40399170]
[67.16117096 -238.19316101]
[82.15610504 -236.83460999]
[96.54079437 -232.38775635]
[109.68639374 -225.04699707]
[121.01824188 -215.13322449]
[130.04095459 -203.07983398]
[136.36009216 -189.41374207]
[139.69943237 -174.73236084]
[139.91296387 -159.67753601]
[136.99137878 -144.90736389]
[131.06236267 -131.06753540]
[122.38514709 -118.76309204]
[111.33902740 -108.53191376]
[98.40691376 -100.82125854]
[84.15413666 -95.96821594]
[85.93660736 -81.07450104]
[87.71907043 -66.18078613]
[89.50154114 -51.28706741]
[91.28400421 -36.39334869]
[93.06646729 -21.49963188]
[94.84893799 -6.60591412]
[104.04380798 5.11174679]
[98.00122070 19.73357010]
[99.78368378 34.62728500]
[108.97856140 46.34494781]
[102.93596649 60.96677017]
[104.71843719 75.86048889]
[106.50090027 90.75420380]
[114.96426392 78.36988068]
[129.05139160 73.21693420]
[143.50813293 77.21727753]
[152.94247437 88.87889099]
[153.83564758 103.85227203]
[145.85450745 116.55272675]
[131.97584534 122.24330139]
[117.37603760 118.80154419]
[107.50000000 107.51007843]
[107.50000000 122.51007843]
[107.50000000 137.51007080]
[115.23729706 151.31024170]
[107.50000000 164.03752136]
[107.50000000 179.03752136]
[107.50000000 194.03752136]
[109.80357361 197.71821594]
[110.72354889 201.55464172]
[110.38085938 205.09271240]
[109.03150940 207.96427917]
[107.02680206 209.92369080]
[106.13398743 224.89709473]
[105.24116516 239.87049866]
[120.15397644 241.51478577]
[134.96533203 243.90628052]
[149.63781738 247.03894043]
[164.13436890 250.90486145]
[178.41838074 255.49426270]
[192.45375061 260.79556274]
[206.20504761 266.79537964]
[219.63749695 273.47851562]
[232.71720886 280.82812500]
[245.41111755 288.82565308]
[257.68716431 297.45086670]
[269.51431274 306.68197632]
[280.86273193 316.49566650]
[291.70373535 326.86718750]
[302.00994873 337.77029419]
[311.75531006 349.17745972]
[320.91522217 361.05987549]
[329.46652222 373.38751221]
[337.38763428 386.12921143]
[344.65856934 399.25283813]
[351.26089478 412.72518921]
[357.17797852 426.51226807]
[362.39486694 440.57925415]
[366.89840698 454.89056396]
[370.67715454 469.41006470]
[373.72164917 484.10110474]
[376.02410889 498.92657471]
[377.57879639 513.84899902]
[378.38174438 528.83068848]
[378.43093872 543.83374023]
[377.72622681 558.82037354]
[376.26943970 573.75268555]
[374.06420898 588.59289551]
[371.11611938 603.30358887]
[367.43264771 617.84759521]
[363.02304077 632.18811035]
[357.89849854 646.28900146]
[352.07192993 660.11456299]
[345.55807495 673.62994385]
[338.37335205 686.80096436]
[330.53594971 699.59429932]
[322.06564331 711.97778320]
[312.98385620 723.91998291]
[303.31350708 735.39080811]
[293.07901001 746.36120605]
[282.30624390 756.80358887]
[271.02239990 766.69152832]
[259.25601196 775.99993896]
[247.03678894 784.70550537]
[234.39559937 792.78607178]
[221.36436462 800.22125244]
[207.97601318 806.99237061]
[194.26435852 813.08221436]
[180.26405334 818.47540283]
[166.01043701 823.15838623]
[151.53953552 827.11926270]
[136.88790894 830.34802246]
[122.09255219 832.83660889]
[107.19084930 834.57861328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 151]
[65 150]
[66 149]
[67 144]
[68 143]
[69 142]
[71 140]
[72 139]
[73 138]
[74 129]
[75 128]
[76 127]
[78 125]
[79 124]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
