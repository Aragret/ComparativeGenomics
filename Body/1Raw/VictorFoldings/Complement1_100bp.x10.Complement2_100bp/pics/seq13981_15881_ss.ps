%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[95.22882080 555.15716553]
[80.37598419 557.31585693]
[65.39460754 558.22412109]
[50.38977432 557.87554932]
[35.46673203 556.27264404]
[20.73015976 553.42657471]
[6.28342247 549.35736084]
[-7.77214336 544.09356689]
[-21.33794594 537.67211914]
[-34.31883240 530.13793945]
[-46.62374496 521.54400635]
[-58.16637421 511.95059204]
[-68.86575317 501.42489624]
[-78.64684296 490.04083252]
[-87.44101715 477.87823486]
[-95.18660736 465.02239990]
[-101.82926941 451.56353760]
[-107.32241821 437.59600830]
[-111.62752533 423.21780396]
[-114.71437836 408.52978516]
[-116.56134033 393.63497925]
[-117.15544891 378.63784790]
[-116.49253082 363.64361572]
[-114.57724762 348.75744629]
[-111.42302704 334.08374023]
[-107.05200195 319.72543335]
[-101.49481964 305.78326416]
[-94.79046631 292.35501099]
[-86.98596954 279.53485107]
[-78.13607788 267.41271973]
[-68.30286407 256.07366943]
[-57.55529404 245.59719849]
[-45.96876907 236.05680847]
[-33.62454987 227.51942444]
[-20.60923386 220.04493713]
[-7.01410913 213.68576050]
[7.06546164 208.48651123]
[21.53071785 204.48364258]
[36.28019714 201.70524597]
[51.21043396 200.17082214]
[66.21671295 199.89111328]
[81.19376373 200.86807251]
[83.41887665 186.03404236]
[85.64399719 171.19999695]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[87.14339447 72.74061584]
[95.98531342 60.75438690]
[97.32354736 45.81420135]
[98.66178131 30.87401581]
[100.00001526 15.93383026]
[101.33824921 0.99364507]
[91.44364929 12.26736927]
[77.26985168 17.17690086]
[62.52185440 14.43889904]
[51.05475235 4.76907206]
[45.86601639 -9.30491161]
[48.31196594 -24.10414505]
[57.75324249 -35.76014709]
[71.72190857 -41.22606277]
[86.56660461 -39.07311630]
[98.40694427 -29.86408424]
[104.14778900 -16.00706482]
[107.68746185 -30.58343887]
[111.22713470 -45.15981293]
[114.76679993 -59.73619080]
[118.30647278 -74.31256866]
[121.84614563 -88.88893890]
[107.56824493 -93.50994110]
[93.67559052 -99.18501282]
[80.24588776 -105.88242340]
[67.35424042 -113.56472015]
[55.07274246 -122.18892670]
[43.47007751 -131.70681763]
[32.61113358 -142.06518555]
[22.55663681 -153.20606995]
[13.36282063 -165.06718445]
[5.08109903 -177.58218384]
[-2.24221206 -190.68109131]
[-8.56615734 -204.29063416]
[-13.85537052 -218.33473206]
[-18.08027267 -232.73481750]
[-21.21723557 -247.41035461]
[-23.24871445 -262.27929688]
[-24.16334915 -277.25848389]
[-23.95602608 -292.26409912]
[-22.62790298 -307.21231079]
[-20.18640900 -322.01943970]
[-16.64519501 -336.60272217]
[-12.02406979 -350.88058472]
[-6.34887266 -364.77319336]
[0.34865642 -378.20281982]
[8.03106117 -391.09439087]
[16.65538025 -403.37582397]
[26.17337799 -414.97839355]
[36.53182983 -425.83724976]
[47.67280579 -435.89166260]
[59.53399658 -445.08535767]
[72.04907227 -453.36697388]
[85.14804077 -460.69018555]
[98.75765228 -467.01400757]
[112.80178833 -472.30310059]
[127.20191193 -476.52786255]
[141.87748718 -479.66470337]
[156.74644470 -481.69604492]
[171.72561646 -482.61056519]
[186.73126221 -482.40310669]
[201.67942810 -481.07482910]
[216.48655701 -478.63320923]
[231.06979370 -475.09188843]
[245.34762573 -470.47061157]
[259.24017334 -464.79528809]
[272.66976929 -458.09765625]
[285.56127930 -450.41513062]
[297.84262085 -441.79071045]
[309.44512939 -432.27261353]
[320.30386353 -421.91406250]
[330.35818481 -410.77301025]
[339.55178833 -398.91171265]
[347.83328247 -386.39657593]
[355.15637207 -373.29754639]
[361.48007202 -359.68786621]
[366.76904297 -345.64370728]
[370.99368286 -331.24353027]
[374.13037109 -316.56793213]
[376.16159058 -301.69897461]
[377.07598877 -286.71975708]
[376.86837769 -271.71414185]
[375.54000854 -256.76596069]
[373.09823608 -241.95887756]
[369.55676270 -227.37565613]
[364.93539429 -213.09786987]
[359.25994873 -199.20538330]
[352.56219482 -185.77584839]
[344.87954712 -172.88439941]
[336.25503540 -160.60313416]
[326.73681641 -149.00071716]
[316.37817383 -138.14204407]
[305.23703003 -128.08784485]
[293.37567139 -118.89434814]
[280.86044312 -110.61295319]
[267.76135254 -103.28999329]
[254.15162659 -96.96640778]
[240.10739136 -91.67756653]
[225.70719910 -87.45304108]
[211.03157043 -84.31646729]
[196.16258240 -82.28538513]
[181.18338013 -81.37114716]
[166.17774963 -81.57886505]
[151.22959900 -82.90737915]
[136.42253113 -85.34926605]
[132.88285828 -70.77289581]
[129.34318542 -56.19651794]
[125.80350494 -41.62014389]
[122.26383209 -27.04376793]
[118.72415924 -12.46739197]
[116.27843475 2.33187914]
[114.94020081 17.27206421]
[113.60196686 32.21224976]
[112.26373291 47.15243530]
[110.92549896 62.09262085]
[117.49647522 75.45942688]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[104.33265686 161.51603699]
[104.90669250 165.41925049]
[104.24972534 168.91264343]
[102.64956665 171.65235901]
[100.47804260 173.42510986]
[98.25292206 188.25915527]
[96.02780914 203.09320068]
[110.63235474 206.55348206]
[124.89613342 211.22372437]
[138.71908569 217.07115173]
[152.00425720 224.05476379]
[164.65846252 232.12556458]
[176.59292603 241.22694397]
[187.72393799 251.29505920]
[197.97343445 262.25927734]
[207.26951599 274.04272461]
[215.54696655 286.56271362]
[222.74774170 299.73144531]
[228.82131958 313.45654297]
[233.72509766 327.64175415]
[237.42468262 342.18753052]
[239.89411926 356.99185181]
[241.11610413 371.95089722]
[241.08203125 386.95974731]
[239.79217529 401.91311646]
[237.25556946 416.70608521]
[233.49000549 431.23492432]
[228.52188110 445.39770508]
[222.38607788 459.09509277]
[215.12561035 472.23098755]
[206.79141235 484.71328735]
[197.44195557 496.45440674]
[187.14279175 507.37200928]
[175.96618652 517.38952637]
[163.99053955 526.43664551]
[151.29983521 534.44989014]
[137.98310852 541.37316895]
[124.13375854 547.15777588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 179]
[43 178]
[44 177]
[45 172]
[46 171]
[47 170]
[48 169]
[50 167]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
