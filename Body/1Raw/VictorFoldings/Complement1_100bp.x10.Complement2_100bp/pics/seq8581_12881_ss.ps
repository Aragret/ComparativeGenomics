%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[93.11280823 824.13031006]
[78.22895050 822.23449707]
[63.47759628 819.49206543]
[48.90686417 815.91192627]
[34.56428146 811.50585938]
[20.49662971 806.28814697]
[6.74979353 800.27581787]
[-6.63138580 793.48852539]
[-19.60326195 785.94836426]
[-32.12352371 777.67993164]
[-44.15132904 768.71026611]
[-55.64744949 759.06854248]
[-66.57438660 748.78625488]
[-76.89649200 737.89691162]
[-86.58010864 726.43609619]
[-95.59364319 714.44110107]
[-103.90769958 701.95111084]
[-111.49515533 689.00683594]
[-118.33125305 675.65051270]
[-124.39371490 661.92572021]
[-129.66275024 647.87719727]
[-134.12117004 633.55084229]
[-137.75445557 618.99328613]
[-140.55073547 604.25201416]
[-142.50088501 589.37518311]
[-143.59855652 574.41125488]
[-143.84014893 559.40911865]
[-143.22491455 544.41760254]
[-141.75482178 529.48565674]
[-139.43467712 514.66204834]
[-136.27204895 499.99502563]
[-132.27725220 485.53250122]
[-127.46333313 471.32159424]
[-121.84597015 457.40869141]
[-115.44349670 443.83917236]
[-108.27679443 430.65731812]
[-100.36923981 417.90606689]
[-91.74663544 405.62704468]
[-82.43708801 393.86032104]
[-72.47097778 382.64425659]
[-61.88080978 372.01544189]
[-50.70112228 362.00854492]
[-38.96838760 352.65621948]
[-26.72087097 343.98892212]
[-13.99852180 336.03497314]
[-0.84283948 328.82031250]
[12.70326519 322.36846924]
[26.59560776 316.70043945]
[40.78887177 311.83477783]
[55.23676682 307.78735352]
[69.89215851 304.57131958]
[84.70725250 302.19720459]
[99.63372040 300.67272949]
[98.96393585 285.68768311]
[98.29415131 270.70263672]
[97.62435913 255.71760559]
[96.95457458 240.73255920]
[96.28479004 225.74752808]
[87.98690796 213.37843323]
[95.10028076 199.24653625]
[94.43049622 184.26150513]
[93.76071167 169.27645874]
[90.90330505 165.44967651]
[90.41951752 159.78726196]
[93.30080414 153.83665466]
[85.37487030 141.22598267]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[91.20349121 72.95106506]
[89.19947815 58.08553696]
[87.19546509 43.22000885]
[85.19145203 28.35447884]
[83.18743896 13.48895073]
[76.46040344 26.89592552]
[64.32741547 35.71582413]
[49.49901581 37.97826004]
[35.28790665 33.17779541]
[24.86888885 22.38687134]
[20.56959534 8.01620388]
[23.35050011 -6.72376108]
[32.59033966 -18.54007912]
[46.22491074 -24.79295349]
[61.20821762 -24.08547592]
[74.19294739 -16.57569885]
[82.27828979 -3.94130611]
[82.72489929 -18.93465614]
[79.85238647 -27.60566902]
[83.29141998 -34.14744568]
[83.96120453 -49.13248444]
[84.63098907 -64.11752319]
[85.30077362 -79.10256195]
[70.75018311 -82.98771667]
[57.37518311 -89.91038513]
[45.80133820 -99.54678345]
[36.56998444 -111.44620514]
[30.11288452 -125.05207825]
[26.73205185 -139.72804260]
[26.58561134 -154.78768921]
[29.68041611 -169.52662659]
[35.87171555 -183.25549316]
[44.86992645 -195.33216858]
[56.25419235 -205.19181824]
[69.49205017 -212.37327576]
[83.96433258 -216.54063416]
[98.99415588 -217.49900818]
[113.87854767 -215.20356750]
[127.92132568 -209.76165771]
[140.46569824 -201.42782593]
[150.92492676 -190.59184265]
[158.80982971 -177.76054382]
[163.75161743 -163.53405762]
[165.51913452 -148.57778931]
[164.02972412 -133.59126282]
[159.35304260 -119.27544403]
[151.70783997 -106.29989624]
[141.45169067 -95.27150726]
[129.06427002 -86.70610046]
[115.12500000 -81.00429535]
[100.28581238 -78.43277740]
[99.61602783 -63.44773865]
[98.94624329 -48.46269989]
[98.27645874 -33.47766113]
[97.71824646 -18.48805046]
[97.27164459 -3.49470019]
[98.05296326 11.48493671]
[100.05697632 26.35046577]
[102.06098938 41.21599197]
[104.06500244 56.08152008]
[106.06901550 70.94705200]
[114.34706116 58.43809128]
[128.35591125 53.07597733]
[142.87060547 56.86064148]
[152.47752380 68.38049316]
[153.59352112 83.33892059]
[145.80236816 96.15679932]
[132.00996399 102.05336761]
[117.36053467 98.82936096]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[115.84609222 140.77226257]
[108.29914093 153.61332703]
[108.74575043 168.60667419]
[109.41553497 183.59172058]
[110.08531952 198.57675171]
[118.43111420 212.01766968]
[111.26982880 225.07774353]
[111.93961334 240.06277466]
[112.60939789 255.04782104]
[113.27919006 270.03286743]
[113.94897461 285.01788330]
[114.61875916 300.00292969]
[129.62170410 300.18966675]
[144.58953857 301.23257446]
[159.47340393 303.12829590]
[174.22477722 305.87060547]
[188.79554749 309.45062256]
[203.13815308 313.85659790]
[217.20585632 319.07421875]
[230.95274353 325.08642578]
[244.33396912 331.87362671]
[257.30590820 339.41366577]
[269.82623291 347.68197632]
[281.85409546 356.65155029]
[293.35031128 366.29318237]
[304.27731323 376.57537842]
[314.59951782 387.46463013]
[324.28323364 398.92541504]
[333.29684448 410.92031860]
[341.61099243 423.41024780]
[349.19854736 436.35446167]
[356.03475952 449.71072388]
[362.09732056 463.43545532]
[367.36648560 477.48394775]
[371.82501221 491.81030273]
[375.45840454 506.36782837]
[378.25479126 521.10906982]
[380.20507812 535.98590088]
[381.30285645 550.94976807]
[381.54458618 565.95196533]
[380.92944336 580.94348145]
[379.45947266 595.87536621]
[377.13943481 610.69903564]
[373.97692871 625.36608887]
[369.98223877 639.82867432]
[365.16842651 654.03961182]
[359.55117798 667.95251465]
[353.14880371 681.52209473]
[345.98220825 694.70404053]
[338.07476807 707.45532227]
[329.45223999 719.73437500]
[320.14279175 731.50122070]
[310.17678833 742.71734619]
[299.58670044 753.34625244]
[288.40707397 763.35321045]
[276.67440796 772.70568848]
[264.42697144 781.37304688]
[251.70468140 789.32708740]
[238.54905701 796.54187012]
[225.00300598 802.99383545]
[211.11071777 808.66192627]
[196.91748047 813.52770996]
[182.46961975 817.57525635]
[167.81425476 820.79138184]
[152.99917603 823.16564941]
[138.07272339 824.69024658]
[123.08358002 825.36022949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 155]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[60 148]
[61 147]
[62 146]
[65 145]
[67 143]
[68 142]
[70 140]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[87 126]
[88 125]
[90 124]
[91 123]
[92 122]
[93 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
