%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[118.92762756 689.03417969]
[105.13534546 683.12164307]
[91.78910065 676.26147461]
[78.95391083 668.48693848]
[66.69231415 659.83605957]
[55.06404495 650.35095215]
[44.12575150 640.07775879]
[33.93073273 629.06652832]
[24.52865028 617.37103271]
[15.96531582 605.04809570]
[8.28244781 592.15783691]
[1.51747596 578.76306152]
[-4.29663992 564.92901611]
[-9.13157463 550.72314453]
[-12.96377182 536.21453857]
[-15.77456188 521.47399902]
[-17.55025101 506.57324219]
[-18.28218651 491.58496094]
[-17.96680450 476.58212280]
[-16.60564041 461.63781738]
[-14.20532608 446.82489014]
[-10.77755547 432.21545410]
[-6.33902836 417.88073730]
[-0.91136980 403.89056396]
[5.47897768 390.31307983]
[12.80088043 377.21441650]
[21.01866722 364.65844727]
[30.09229851 352.70629883]
[39.97757339 341.41619873]
[50.62632751 330.84317017]
[61.98667908 321.03872681]
[74.00328827 312.05062866]
[86.61759949 303.92266846]
[99.76817322 296.69445801]
[113.39092255 290.40115356]
[127.41948700 285.07348633]
[141.78552246 280.73739624]
[138.46325684 266.10992432]
[135.14100647 251.48246765]
[131.81874084 236.85501099]
[128.38768005 222.25268555]
[124.84800720 207.67631531]
[120.87591553 193.21179199]
[116.47491455 178.87194824]
[112.07391357 164.53208923]
[107.67292023 150.19224548]
[103.27191925 135.85240173]
[98.87091827 121.51255798]
[94.46992493 107.17270660]
[91.35337067 104.90126038]
[89.25316620 101.26711273]
[88.75546265 96.75498962]
[90.20804596 92.09346008]
[86.45174408 77.57139587]
[82.69544220 63.04933929]
[78.34125519 58.07414246]
[77.30832672 52.48575592]
[79.05036926 48.03892136]
[75.72811127 33.41146088]
[72.40585327 18.78400230]
[69.08359528 4.15654182]
[53.63631058 4.60384083]
[38.40163040 2.03876781]
[23.96118355 -3.43891644]
[10.86591530 -11.61828804]
[-0.38491893 -22.18538094]
[-9.36280251 -34.73524094]
[-15.72626972 -48.78744507]
[-19.23389816 -63.80448151]
[-19.75346375 -79.21232605]
[-17.26692390 -94.42237091]
[-11.87104511 -108.85392761]
[-3.77362680 -121.95637512]
[6.71449089 -133.23017883]
[19.19136429 -142.24592590]
[33.17934799 -148.66072083]
[29.63967514 -163.23709106]
[26.10000229 -177.81346130]
[22.56032944 -192.38984680]
[19.02065659 -206.96621704]
[15.48098469 -221.54258728]
[11.94131279 -236.11897278]
[8.40163994 -250.69534302]
[-6.64831257 -250.25646973]
[-21.46056366 -252.95663452]
[-35.38758469 -258.67779541]
[-47.82054520 -267.16986084]
[-58.21593094 -278.06158447]
[-66.11930084 -290.87683105]
[-71.18515015 -305.05535889]
[-73.19203186 -319.97738647]
[-72.05220032 -334.99050903]
[-67.81549072 -349.43850708]
[-60.66711044 -362.68969727]
[-50.91955948 -374.16485596]
[-38.99895859 -383.36227417]
[-25.42642403 -389.87994385]
[-10.79528904 -393.43292236]
[4.25483465 -393.86587524]
[19.06602287 -391.15988159]
[32.99079132 -385.43322754]
[45.42041016 -376.93627930]
[55.81151199 -366.04046631]
[63.70983887 -353.22210693]
[68.77011108 -339.04159546]
[70.77111816 -324.11880493]
[69.62538147 -309.10610962]
[65.38298798 -294.65979004]
[58.22939301 -281.41140747]
[48.47732925 -269.94009399]
[36.55311203 -260.74734497]
[22.97801590 -254.23501587]
[26.51768875 -239.65864563]
[30.05735970 -225.08226013]
[33.59703445 -210.50588989]
[37.13670349 -195.92951965]
[40.67637634 -181.35313416]
[44.21604919 -166.77676392]
[47.75572205 -152.20039368]
[62.31180191 -152.95280457]
[76.76125336 -151.00878906]
[90.60871887 -146.43345642]
[103.37920380 -139.38214111]
[114.63436127 -130.09513855]
[123.98751831 -118.88953400]
[131.11700439 -106.14834595]
[135.77719116 -92.30744171]
[137.80691528 -77.84062958]
[137.13514709 -63.24345398]
[133.78337097 -49.01618958]
[127.86498260 -35.64672470]
[119.58137512 -23.59381676]
[109.21517944 -13.27135563]
[97.12053680 -5.03414679]
[83.71105194 0.83428216]
[87.03330994 15.46174240]
[90.35556793 30.08920288]
[93.67783356 44.71666336]
[97.21750641 59.29303741]
[100.97380066 73.81509399]
[104.73010254 88.33715820]
[108.80976868 102.77171326]
[113.21076965 117.11155701]
[117.61177063 131.45140076]
[122.01276398 145.79124451]
[126.41376495 160.13110352]
[130.81475830 174.47094727]
[135.21575928 188.81079102]
[138.49786377 191.65364075]
[140.50296021 195.05130005]
[141.21342468 198.53421021]
[140.76597595 201.67529297]
[139.42437744 204.13664246]
[142.96405029 218.71301270]
[148.03016663 226.31382751]
[146.44619751 233.53274536]
[149.76846313 248.16021729]
[153.09071350 262.78765869]
[156.41297913 277.41513062]
[171.24261475 275.12017822]
[186.19619751 273.86526489]
[201.20091248 273.65655518]
[216.18362427 274.49502563]
[231.07135010 276.37658691]
[245.79156494 279.29208374]
[260.27252197 283.22732544]
[274.44372559 288.16311646]
[288.23608398 294.07540894]
[301.58242798 300.93542480]
[314.41772461 308.70974731]
[326.67944336 317.36047363]
[338.30786133 326.84542847]
[349.24630737 337.11846924]
[359.44146729 348.12951660]
[368.84371948 359.82492065]
[377.40722656 372.14770508]
[385.09030151 385.03784180]
[391.85546875 398.43249512]
[397.66976929 412.26647949]
[402.50491333 426.47232056]
[406.33731079 440.98083496]
[409.14831543 455.72137451]
[410.92422485 470.62207031]
[411.65637207 485.61035156]
[411.34118652 500.61318970]
[409.98025513 515.55749512]
[407.58013916 530.37048340]
[404.15258789 544.97998047]
[399.71426392 559.31475830]
[394.28680420 573.30499268]
[387.89666748 586.88256836]
[380.57495117 599.98132324]
[372.35733032 612.53741455]
[363.28387451 624.48974609]
[353.39877319 635.77996826]
[342.75015259 646.35314941]
[331.38995361 656.15771484]
[319.37347412 665.14599609]
[306.75927734 673.27416992]
[293.60879517 680.50256348]
[279.98614502 686.79602051]
[265.95764160 692.12390137]
[251.59169006 696.46020508]
[236.95822144 699.78381348]
[222.12855530 702.07855225]
[207.17494202 703.33325195]
[192.17024231 703.54174805]
[177.18753052 702.70312500]
[162.29983521 700.82128906]
[147.57966614 697.90557861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 159]
[38 158]
[39 157]
[40 156]
[41 154]
[42 153]
[43 148]
[44 147]
[45 146]
[46 145]
[47 144]
[48 143]
[49 142]
[53 141]
[54 140]
[55 139]
[58 138]
[59 137]
[60 136]
[61 135]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
