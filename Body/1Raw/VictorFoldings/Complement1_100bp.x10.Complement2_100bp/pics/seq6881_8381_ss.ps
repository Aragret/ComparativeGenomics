%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[143.97003174 953.86444092]
[129.06642151 952.14910889]
[114.24279785 949.84265137]
[99.52259064 946.94866943]
[84.92907715 943.47174072]
[70.48532867 939.41741943]
[56.21418762 934.79199219]
[42.13821793 929.60290527]
[28.27967834 923.85827637]
[14.66048241 917.56726074]
[1.30216241 910.73974609]
[-11.77415752 903.38653564]
[-24.54780197 895.51928711]
[-36.99857330 887.15039062]
[-49.10678101 878.29315186]
[-60.85328293 868.96154785]
[-72.21950531 859.17028809]
[-83.18747711 848.93487549]
[-93.73985291 838.27154541]
[-103.85994720 827.19708252]
[-113.53175354 815.72906494]
[-122.73999023 803.88555908]
[-131.47009277 791.68536377]
[-139.70825195 779.14770508]
[-147.44143677 766.29248047]
[-154.65744019 753.13995361]
[-161.34483337 739.71093750]
[-167.49305725 726.02667236]
[-173.09236145 712.10876465]
[-178.13392639 697.97930908]
[-182.60977173 683.66058350]
[-186.51280212 669.17517090]
[-189.83685303 654.54608154]
[-192.57669067 639.79638672]
[-194.72795105 624.94946289]
[-196.28726196 610.02874756]
[-197.25213623 595.05780029]
[-197.62104797 580.06036377]
[-197.39343262 565.06011963]
[-196.56964111 550.08074951]
[-195.15095520 535.14599609]
[-193.13964844 520.27941895]
[-190.53889465 505.50460815]
[-187.35279846 490.84484863]
[-183.58639526 476.32336426]
[-179.24563599 461.96307373]
[-174.33740234 447.78671265]
[-168.86944580 433.81671143]
[-162.85041809 420.07513428]
[-156.28982544 406.58370972]
[-149.19805908 393.36380005]
[-141.58630371 380.43627930]
[-133.46662903 367.82159424]
[-124.85184479 355.53967285]
[-115.75558472 343.60998535]
[-106.19223785 332.05133057]
[-96.17691803 320.88204956]
[-85.72546387 310.11975098]
[-74.85440063 299.78149414]
[-63.58092117 289.88360596]
[-51.92284775 280.44174194]
[-39.89861679 271.47079468]
[-27.52723694 262.98501587]
[-14.82827187 254.99777222]
[-1.82180166 247.52171326]
[11.47160721 240.56866455]
[25.03093529 234.14961243]
[38.83474350 228.27470398]
[52.86120605 222.95323181]
[67.08814240 218.19360352]
[81.49304962 214.00335693]
[96.05316925 210.38911438]
[110.74546051 207.35659790]
[108.29972839 192.55732727]
[105.85400391 177.75805664]
[103.40827942 162.95878601]
[100.96254730 148.15951538]
[98.40671539 133.37886047]
[95.74092102 118.61763763]
[83.89768982 110.26994324]
[81.32261658 96.01107788]
[89.49786377 84.04815674]
[86.83206177 69.28694153]
[82.22734833 61.39806366]
[84.23818207 54.28621674]
[81.79244995 39.48694611]
[79.34672546 24.68767548]
[76.90100098 9.88840389]
[61.87646103 8.57917690]
[47.64981079 3.57385325]
[35.11534882 -4.81292677]
[25.06100082 -16.05396461]
[18.11879158 -29.44263649]
[14.72511578 -44.13732147]
[15.09330177 -59.21429825]
[19.20020485 -73.72581482]
[26.78766060 -86.75967407]
[37.37871552 -97.49653625]
[50.30760956 -105.26149750]
[64.76161957 -109.56642914]
[79.83215332 -110.14072418]
[94.57186890 -106.94828033]
[108.05420685 -100.18978119]
[119.43166351 -90.29006958]
[127.98903656 -77.87145233]
[133.18841553 -63.71456528]
[134.70294189 -48.70933151]
[132.43743896 -33.79899216]
[126.53428650 -19.92082024]
[117.36457825 -7.94720936]
[105.50473785 1.36916804]
[91.70027161 7.44267654]
[94.14599609 22.24194717]
[96.59172058 37.04121780]
[99.03745270 51.84048843]
[101.59328461 66.62113953]
[104.25907898 81.38236237]
[116.10231018 89.73005676]
[118.67738342 103.98892212]
[110.50213623 115.95184326]
[113.16793823 130.71305847]
[117.77265167 138.60194397]
[115.76181793 145.71379089]
[118.20755005 160.51306152]
[120.65327454 175.31233215]
[123.09899902 190.11160278]
[125.54473114 204.91087341]
[140.43150330 203.05516052]
[155.38027954 201.79275513]
[170.36743164 201.12567139]
[185.36924744 201.05494690]
[200.36203003 201.58070374]
[215.32205200 202.70210266]
[230.22564697 204.41737366]
[245.04928589 206.72380066]
[259.76950073 209.61775208]
[274.36303711 213.09463501]
[288.80679321 217.14895630]
[303.07794189 221.77429199]
[317.15393066 226.96336365]
[331.01248169 232.70793152]
[344.63168335 238.99893188]
[357.99002075 245.82641602]
[371.06637573 253.17958069]
[383.84002686 261.04681396]
[396.29083252 269.41564941]
[408.39904785 278.27285767]
[420.14556885 287.60446167]
[431.51184082 297.39569092]
[442.47982788 307.63104248]
[453.03222656 318.29437256]
[463.15234375 329.36880493]
[472.82418823 340.83679199]
[482.03247070 352.68026733]
[490.76260376 364.88043213]
[499.00079346 377.41806030]
[506.73400879 390.27328491]
[513.95007324 403.42581177]
[520.63745117 416.85479736]
[526.78570557 430.53903198]
[532.38507080 444.45690918]
[537.42669678 458.58636475]
[541.90252686 472.90512085]
[545.80560303 487.39047241]
[549.12969971 502.01956177]
[551.86956787 516.76922607]
[554.02087402 531.61614990]
[555.58026123 546.53686523]
[556.54516602 561.50781250]
[556.91412354 576.50524902]
[556.68652344 591.50555420]
[555.86279297 606.48486328]
[554.44415283 621.41967773]
[552.43286133 636.28619385]
[549.83215332 651.06103516]
[546.64605713 665.72082520]
[542.87969971 680.24230957]
[538.53900146 694.60260010]
[533.63079834 708.77899170]
[528.16290283 722.74902344]
[522.14392090 736.49060059]
[515.58337402 749.98199463]
[508.49160767 763.20196533]
[500.87988281 776.12951660]
[492.76025391 788.74420166]
[484.14550781 801.02612305]
[475.04925537 812.95587158]
[465.48596191 824.51452637]
[455.47067261 835.68383789]
[445.01922607 846.44616699]
[434.14819336 856.78448486]
[422.87475586 866.68237305]
[411.21670532 876.12426758]
[399.19250488 885.09527588]
[386.82113647 893.58105469]
[374.12219238 901.56835938]
[361.11575317 909.04443359]
[347.82235718 915.99749756]
[334.26303101 922.41662598]
[320.45925903 928.29156494]
[306.43280029 933.61303711]
[292.20587158 938.37274170]
[277.80096436 942.56298828]
[263.24087524 946.17730713]
[248.54858398 949.20983887]
[233.74734497 951.65588379]
[218.86058044 953.51159668]
[203.91178894 954.77392578]
[188.92463684 955.44097900]
[173.92282104 955.51165771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 121]
[79 120]
[82 117]
[83 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
