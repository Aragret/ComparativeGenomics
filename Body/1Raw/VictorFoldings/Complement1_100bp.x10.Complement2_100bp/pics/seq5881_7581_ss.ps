%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[56.16207504 979.74615479]
[41.16714478 979.27502441]
[26.20636749 978.15917969]
[11.30744648 976.40075684]
[-3.50202703 974.00292969]
[-18.19462967 970.97027588]
[-32.74315643 967.30822754]
[-47.12066269 963.02368164]
[-61.30052567 958.12457275]
[-75.25649261 952.61993408]
[-88.96271515 946.52001953]
[-102.39380646 939.83599854]
[-115.52490997 932.58038330]
[-128.33169556 924.76654053]
[-140.79046631 916.40899658]
[-152.87812805 907.52313232]
[-164.57231140 898.12548828]
[-175.85136414 888.23339844]
[-186.69438171 877.86523438]
[-197.08131409 867.04022217]
[-206.99290466 855.77832031]
[-216.41079712 844.10040283]
[-225.31756592 832.02813721]
[-233.69671631 819.58392334]
[-241.53273010 806.79064941]
[-248.81108093 793.67211914]
[-255.51832581 780.25262451]
[-261.64199829 766.55700684]
[-267.17080688 752.61059570]
[-272.09448242 738.43927002]
[-276.40390015 724.06915283]
[-280.09109497 709.52703857]
[-283.14926147 694.83972168]
[-285.57269287 680.03442383]
[-287.35693359 665.13854980]
[-288.49868774 650.17974854]
[-288.99578857 635.18560791]
[-288.84738159 620.18402100]
[-288.05368042 605.20269775]
[-286.61618042 590.26940918]
[-284.53756714 575.41180420]
[-281.82165527 560.65734863]
[-278.47351074 546.03338623]
[-274.49929810 531.56701660]
[-269.90637207 517.28503418]
[-264.70327759 503.21386719]
[-258.89962769 489.37957764]
[-252.50614929 475.80780029]
[-245.53471375 462.52365112]
[-237.99821472 449.55169678]
[-229.91061401 436.91601562]
[-221.28688049 424.63998413]
[-212.14299011 412.74630737]
[-202.49588013 401.25704956]
[-192.36340332 390.19348145]
[-181.76432800 379.57604980]
[-170.71827698 369.42446899]
[-159.24571228 359.75750732]
[-147.36787415 350.59307861]
[-135.10676575 341.94812012]
[-122.48507690 333.83868408]
[-109.52618408 326.27978516]
[-96.25409698 319.28540039]
[-82.69338226 312.86846924]
[-68.86914825 307.04089355]
[-54.80699921 301.81347656]
[-40.53297806 297.19589233]
[-26.07351112 293.19665527]
[-11.45537853 289.82321167]
[3.29435396 287.08181763]
[18.14837074 284.97750854]
[33.07916641 283.51422119]
[48.05909348 282.69461060]
[63.06040955 282.52026367]
[78.05533600 282.99145508]
[79.17098999 268.03298950]
[72.40172577 254.76550293]
[81.14400482 241.57902527]
[82.25965881 226.62057495]
[83.37530518 211.66212463]
[84.49095154 196.70367432]
[85.60660553 181.74522400]
[73.83750153 174.81663513]
[66.16497803 163.43853760]
[64.13361359 149.79951477]
[68.19622803 136.55288696]
[77.61448669 126.30044556]
[90.59239197 121.08155060]
[91.93062592 106.14136505]
[89.45596313 98.47008514]
[93.40162659 90.98927307]
[94.85104370 76.05946350]
[96.18927765 61.11927795]
[97.52751160 46.17909241]
[98.86574554 31.23890686]
[100.20397949 16.29872131]
[93.72872162 1.86329162]
[102.57064056 -10.12294006]
[103.90887451 -25.06312561]
[89.98861694 -30.98608971]
[78.58128357 -40.92228699]
[70.80446625 -53.89827728]
[67.42005157 -68.64279938]
[68.75960541 -83.71133423]
[74.69189453 -97.62762451]
[84.63573456 -109.02828979]
[97.61692810 -116.79641724]
[112.36371613 -120.17095184]
[127.43135071 -118.82130432]
[141.34365845 -112.87968445]
[152.73765564 -102.92820740]
[160.49708557 -89.94181061]
[163.86174011 -75.19277191]
[162.50199890 -60.12604141]
[156.55105591 -46.21771240]
[146.59194946 -34.83038330]
[133.60035706 -27.07966423]
[118.84906006 -23.72489166]
[117.51082611 -8.78470612]
[124.08180237 4.58210182]
[115.14416504 17.63695526]
[113.80593109 32.57714081]
[112.46769714 47.51732635]
[111.12946320 62.45751190]
[109.79122925 77.39769745]
[112.32544708 84.34028625]
[108.32022858 92.54979706]
[106.87081146 107.47959900]
[105.53257751 122.41978455]
[119.15457916 131.79170227]
[126.15145111 146.66918945]
[124.69918060 162.95130920]
[115.28846741 176.20251465]
[100.56505585 182.86087036]
[99.44940948 197.81932068]
[98.33376312 212.77777100]
[97.21810913 227.73622131]
[96.10246277 242.69468689]
[102.79192352 257.03210449]
[94.12944031 269.14865112]
[93.01379395 284.10711670]
[107.91271973 285.86547852]
[122.72219849 288.26324463]
[137.41481018 291.29589844]
[151.96334839 294.95785522]
[166.34086609 299.24234009]
[180.52075195 304.14141846]
[194.47673035 309.64599609]
[208.18298340 315.74591064]
[221.61408997 322.42984009]
[234.74522400 329.68542480]
[247.55203247 337.49920654]
[260.01083374 345.85675049]
[272.09851074 354.74255371]
[283.79275513 364.14016724]
[295.07180786 374.03219604]
[305.91488647 384.40032959]
[316.30184937 395.22534180]
[326.21347046 406.48721313]
[335.63140869 418.16506958]
[344.53820801 430.23727417]
[352.91741943 442.68151855]
[360.75344849 455.47473145]
[368.03186035 468.59323120]
[374.73913574 482.01269531]
[380.86288452 495.70831299]
[386.39172363 509.65469360]
[391.31542969 523.82604980]
[395.62490845 538.19610596]
[399.31216431 552.73822021]
[402.37036133 567.42553711]
[404.79385376 582.23083496]
[406.57815552 597.12670898]
[407.71994019 612.08551025]
[408.21710205 627.07958984]
[408.06872559 642.08117676]
[407.27508545 657.06250000]
[405.83764648 671.99584961]
[403.75906372 686.85345459]
[401.04321289 701.60791016]
[397.69509888 716.23187256]
[393.72094727 730.69824219]
[389.12808228 744.98028564]
[383.92501831 759.05145264]
[378.12139893 772.88574219]
[371.72799683 786.45758057]
[364.75659180 799.74176025]
[357.22015381 812.71368408]
[349.13256836 825.34942627]
[340.50888062 837.62548828]
[331.36505127 849.51916504]
[321.71795654 861.00848389]
[311.58554077 872.07208252]
[300.98648071 882.68951416]
[289.94046021 892.84118652]
[278.46792603 902.50817871]
[266.59014893 911.67266846]
[254.32904053 920.31762695]
[241.70738220 928.42712402]
[228.74851990 935.98608398]
[215.47645569 942.98046875]
[201.91575623 949.39746094]
[188.09155273 955.22509766]
[174.02941895 960.45251465]
[159.75541687 965.07019043]
[145.29595947 969.06945801]
[130.67784119 972.44293213]
[115.92811584 975.18438721]
[101.07410431 977.28875732]
[86.14331818 978.75207520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 141]
[76 140]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[88 129]
[89 128]
[91 127]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
