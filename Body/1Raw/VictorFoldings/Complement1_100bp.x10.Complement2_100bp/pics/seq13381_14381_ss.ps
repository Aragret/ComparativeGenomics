%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[46.45383835 626.77008057]
[31.58314323 624.72613525]
[16.95993233 621.33837891]
[2.70537639 616.63488770]
[-11.06240273 610.65460205]
[-24.22932053 603.44714355]
[-36.68626785 595.07220459]
[-48.33001709 585.59918213]
[-59.06409073 575.10656738]
[-68.79953766 563.68133545]
[-77.45568085 551.41809082]
[-84.96079254 538.41851807]
[-91.25268555 524.79034424]
[-96.27922058 510.64648438]
[-99.99874878 496.10412598]
[-102.38043976 481.28378296]
[-103.40456390 466.30825806]
[-103.06262970 451.30163574]
[-101.35748291 436.38830566]
[-98.30323792 421.69180298]
[-93.92521667 407.33395386]
[-88.25968933 393.43368530]
[-81.35359955 380.10623169]
[-73.26418304 367.46200562]
[-64.05847168 355.60577393]
[-53.81274796 344.63580322]
[-42.61191177 334.64297485]
[-30.54877472 325.71011353]
[-17.72330475 317.91122437]
[-4.24177408 311.31097412]
[9.78409958 305.96398926]
[24.23809052 301.91464233]
[39.00043106 299.19644165]
[53.94878387 297.83190918]
[53.94878387 282.83190918]
[53.94878387 267.83190918]
[53.94878387 252.83190918]
[53.94878387 237.83190918]
[46.21148300 225.10464478]
[53.94878387 211.30447388]
[53.94878387 196.30447388]
[47.31607056 209.75836182]
[38.06489182 221.56579590]
[26.58861732 231.22474670]
[13.37522507 238.32447815]
[-1.01344621 242.56312561]
[-15.96558380 243.76045227]
[-30.84541321 241.86555481]
[-45.02024078 236.95898438]
[-57.88733673 229.24940491]
[-68.89959717 219.06460571]
[-77.58876801 206.83764648]
[-83.58538055 193.08843994]
[-86.63446045 178.40161133]
[-86.60635376 163.40164185]
[-83.50226593 148.72633362]
[-77.45417023 134.99969482]
[-68.71924591 122.80538940]
[-57.66889954 112.66192627]
[-44.77299881 105.00061035]
[-30.57988930 100.14719391]
[-15.69306278 98.30806732]
[-0.74551678 99.56141663]
[13.62717056 103.85395050]
[26.81386566 111.00315094]
[38.25386429 120.70502472]
[47.46073151 132.54705811]
[54.04298782 146.02569580]
[57.72074890 160.56784058]
[58.33762741 175.55532837]
[64.41146088 161.84005737]
[70.48529816 148.12480164]
[76.55912781 134.40953064]
[74.63807678 119.63932800]
[87.30068207 110.15412903]
[85.08428955 93.52693176]
[98.74255371 83.78895569]
[104.61151123 69.98477936]
[110.48047638 56.18060303]
[108.75951385 40.45327377]
[120.85971069 31.76796913]
[126.72866821 17.96379089]
[132.28790283 4.03199339]
[137.53460693 -10.02047825]
[142.78132629 -24.07294846]
[145.66661072 -38.79283905]
[146.11320496 -53.78619003]
[146.55981445 -68.77954102]
[147.00642395 -83.77288818]
[147.45303345 -98.76624298]
[147.89962769 -113.75959015]
[148.01130676 -128.75917053]
[147.78797913 -143.75750732]
[147.56465149 -158.75584412]
[147.34132385 -173.75418091]
[147.11799622 -188.75251770]
[146.89466858 -203.75085449]
[146.67134094 -218.74920654]
[132.65180969 -224.69671631]
[122.26816559 -235.83671570]
[117.31941223 -250.23913574]
[118.66296387 -265.40866089]
[126.06604004 -278.71710205]
[138.24601746 -287.85867310]
[153.09262085 -291.24954224]
[168.03361511 -288.30221558]
[180.48036194 -279.52734375]
[188.27639771 -266.44522095]
[190.07101440 -251.32241821]
[185.55326843 -236.77903748]
[175.50590515 -225.33480835]
[161.66967773 -218.97253418]
[161.89300537 -203.97418213]
[162.11633301 -188.97584534]
[162.33966064 -173.97750854]
[162.56298828 -158.97917175]
[162.78631592 -143.98083496]
[163.00964355 -128.98249817]
[165.27142334 -126.27757263]
[166.33543396 -122.34273529]
[165.63786316 -117.75289154]
[162.89299011 -113.31298065]
[162.44638062 -98.31963348]
[161.99977112 -83.32628632]
[161.55316162 -68.33293152]
[161.10656738 -53.33958435]
[160.65995789 -38.34623337]
[167.77603149 -51.55083466]
[178.02850342 -62.50012207]
[190.73735046 -70.46786499]
[205.05967712 -74.92559052]
[220.04548645 -75.57763672]
[234.70086670 -72.38076019]
[248.05375671 -65.54698944]
[259.21850586 -55.52958679]
[267.45458984 -42.99297333]
[272.21575928 -28.76865387]
[273.18621826 -13.80008030]
[270.30160522 0.91993845]
[263.75323486 14.41507530]
[253.97541809 25.79024696]
[241.61671448 34.29097748]
[227.49682617 39.35344696]
[212.55226135 40.64188004]
[197.77424622 38.07081604]
[184.14295959 31.81078529]
[172.56251526 22.27699471]
[163.80099487 10.10178566]
[158.43951416 -3.90730309]
[156.83380127 -18.82623100]
[151.58708191 -4.77375984]
[146.34036255 9.27871132]
[147.46351624 12.62099934]
[147.02359009 16.67334557]
[144.70449829 20.69517708]
[140.53285217 23.83275223]
[134.66387939 37.63692856]
[136.80462646 52.37689209]
[124.28465271 62.04956436]
[118.41568756 75.85374451]
[112.54673004 89.65792084]
[116.24458313 100.70178986]
[111.60806274 111.38560486]
[101.01595306 116.22796631]
[102.50256348 131.97917175]
[90.27439880 140.48336792]
[84.20056152 154.19863892]
[78.12673187 167.91389465]
[72.05289459 181.62916565]
[68.94878387 196.30447388]
[68.94878387 211.30447388]
[76.68608856 225.10464478]
[68.94878387 237.83190918]
[68.94878387 252.83190918]
[68.94878387 267.83190918]
[68.94878387 282.83190918]
[68.94878387 297.83190918]
[83.89714050 299.19644165]
[98.65947723 301.91464233]
[113.11347198 305.96398926]
[127.13934326 311.31097412]
[140.62088013 317.91122437]
[153.44635010 325.71011353]
[165.50947571 334.64297485]
[176.71032715 344.63580322]
[186.95603943 355.60577393]
[196.16175842 367.46200562]
[204.25117493 380.10623169]
[211.15725708 393.43368530]
[216.82278442 407.33395386]
[221.20080566 421.69180298]
[224.25505066 436.38830566]
[225.96020508 451.30163574]
[226.30213928 466.30825806]
[225.27801514 481.28378296]
[222.89631653 496.10412598]
[219.17678833 510.64648438]
[214.15025330 524.79034424]
[207.85836792 538.41851807]
[200.35324097 551.41809082]
[191.69709778 563.68133545]
[181.96165466 575.10656738]
[171.22758484 585.59918213]
[159.58383179 595.07220459]
[147.12689209 603.44714355]
[133.95997620 610.65460205]
[120.19219208 616.63488770]
[105.93763733 621.33837891]
[91.31442261 624.72613525]
[76.44373322 626.77008057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[40 171]
[41 170]
[70 169]
[71 168]
[72 167]
[73 166]
[75 164]
[77 161]
[78 160]
[79 159]
[81 157]
[82 156]
[83 152]
[84 151]
[85 150]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
