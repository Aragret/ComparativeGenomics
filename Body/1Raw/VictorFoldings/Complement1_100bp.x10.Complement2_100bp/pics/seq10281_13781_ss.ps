%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[73.77178955 736.83972168]
[58.86037827 738.56726074]
[43.85271835 738.89080811]
[28.88070679 737.80761719]
[14.07591724 735.32714844]
[-0.43154186 731.47125244]
[-14.51417637 726.27374268]
[-28.04822350 719.78039551]
[-40.91474533 712.04815674]
[-53.00066376 703.14508057]
[-64.19976807 693.14935303]
[-74.41363525 682.14880371]
[-83.55251312 670.24017334]
[-91.53607178 657.52813721]
[-98.29415894 644.12426758]
[-103.76738739 630.14648438]
[-107.90764618 615.71759033]
[-110.67855072 600.96441650]
[-112.05576324 586.01660156]
[-112.02716064 571.00549316]
[-110.59301758 556.06298828]
[-107.76591492 541.32049561]
[-103.57070923 526.90747070]
[-98.04427338 512.95062256]
[-91.23516083 499.57266235]
[-83.20322418 486.89108276]
[-74.01904297 475.01736450]
[-63.76333618 464.05584717]
[-52.52622986 454.10284424]
[-40.40647507 445.24588013]
[-27.51058960 437.56274414]
[-13.95190048 431.12097168]
[0.15043440 425.97717285]
[14.67247963 422.17654419]
[29.48661232 419.75253296]
[44.46264267 418.72637939]
[59.46895981 419.10711670]
[61.25142288 404.21340942]
[63.03388977 389.31970215]
[64.81635284 374.42596436]
[66.59882355 359.53225708]
[68.38128662 344.63854980]
[60.61564636 328.90127563]
[71.77476501 314.25354004]
[73.33528137 299.33493042]
[74.89580536 284.41635132]
[61.59009552 275.24734497]
[54.68418884 260.53460693]
[56.14869308 244.25358582]
[65.67820740 230.85641479]
[80.74893188 224.05458069]
[82.08716583 209.11439514]
[75.51619720 195.74758911]
[84.45383453 182.69273376]
[85.79206848 167.75254822]
[87.13030243 152.81236267]
[79.61719513 143.33187866]
[80.60982513 130.87400818]
[90.11975098 122.16056824]
[91.68027496 107.24196625]
[78.56172943 114.51544952]
[64.63825989 108.93538666]
[60.17374039 94.61519623]
[68.45924377 82.11117554]
[83.38700867 80.64083862]
[93.95228577 91.28649139]
[96.61808777 76.52527618]
[99.28388214 61.76405716]
[101.94967651 47.00284195]
[104.61547089 32.24162292]
[107.28126526 17.48040771]
[109.94705963 2.71918988]
[101.39707184 -5.54121113]
[97.93164062 -16.78806496]
[100.30113220 -28.19330215]
[107.80363464 -36.94705200]
[118.48744202 -40.94987106]
[121.59155273 -55.62517166]
[124.69566345 -70.30047607]
[127.79976654 -84.97577667]
[130.35560608 -99.75643158]
[122.96818542 -116.62377930]
[134.22816467 -130.08409119]
[136.01062012 -144.97779846]
[129.96803284 -159.59962463]
[139.16291809 -171.31729126]
[140.94537354 -186.21099854]
[142.72784424 -201.10472107]
[144.51031494 -215.99844360]
[146.29277039 -230.89215088]
[148.07524109 -245.78587341]
[149.85771179 -260.67959595]
[151.64016724 -275.57330322]
[137.28468323 -280.07159424]
[124.00028992 -287.13131714]
[112.23945618 -296.51199341]
[102.40275574 -307.89419556]
[94.82521820 -320.89016724]
[89.76493073 -335.05731201]
[87.39424896 -349.91311646]
[87.79391479 -364.95153809]
[90.95031738 -379.66046143]
[96.75595093 -393.53881836]
[105.01307678 -406.11398315]
[115.44045258 -416.95761108]
[127.68294525 -425.70040894]
[141.32356262 -432.04455566]
[155.89770508 -435.77398682]
[170.90901184 -436.76168823]
[185.84617615 -434.97402954]
[200.20045471 -430.47186279]
[213.48294067 -423.40856934]
[225.24124146 -414.02471924]
[235.07487488 -402.63989258]
[242.64891052 -389.64184570]
[247.70538330 -375.47335815]
[250.07205200 -360.61691284]
[249.66833496 -345.57858276]
[246.50796509 -330.87051392]
[240.69859314 -316.99371338]
[232.43807983 -304.42077637]
[222.00778198 -293.57995605]
[209.76293945 -284.84048462]
[196.12060547 -278.50003052]
[181.54545593 -274.77450562]
[166.53388977 -273.79083252]
[164.75141907 -258.89712524]
[162.96896362 -244.00340271]
[161.18649292 -229.10969543]
[159.40402222 -214.21597290]
[157.62156677 -199.32225037]
[155.83909607 -184.42854309]
[154.05662537 -169.53482056]
[160.22671509 -155.97830200]
[150.90434265 -143.19534302]
[149.12187195 -128.30162048]
[156.34938049 -118.60163879]
[154.98628235 -106.17884827]
[145.22113037 -97.75241852]
[158.55043030 -104.63209534]
[172.30157471 -98.63995361]
[176.33775330 -84.19317627]
[167.68363953 -71.94139099]
[152.71870422 -70.91616058]
[142.47506714 -81.87166595]
[139.37095642 -67.19636536]
[136.26684570 -52.52106094]
[133.16273499 -37.84576035]
[144.05363464 -23.13168526]
[140.67274475 -4.81550407]
[124.70828247 5.38498545]
[122.04248047 20.14620209]
[119.37668610 34.90742111]
[116.71089172 49.66863632]
[114.04509735 64.42985535]
[111.37930298 79.19107056]
[108.71350861 93.95228577]
[106.59888458 108.80248260]
[105.03836060 123.72109222]
[112.92470551 140.36100769]
[102.07048798 154.15060425]
[100.73225403 169.09078979]
[99.39402008 184.03097534]
[105.86927032 198.46640015]
[97.02735138 210.45263672]
[95.68911743 225.39282227]
[107.53292847 232.83506775]
[114.97920227 244.59809875]
[116.62295532 258.35586548]
[112.20001221 271.41674805]
[102.62751007 281.25018311]
[89.81441498 285.97686768]
[88.25389099 300.89547729]
[86.69336700 315.81408691]
[94.19427490 326.30688477]
[92.58737946 338.70050049]
[83.27500916 346.42102051]
[81.49253845 361.31472778]
[79.71007538 376.20843506]
[77.92760468 391.10217285]
[76.14514160 405.99588013]
[74.36267853 420.88958740]
[89.03503418 424.06076050]
[103.34597015 428.59194946]
[117.16970825 434.44332886]
[130.38476562 441.56350708]
[142.87500000 449.88986206]
[154.53065491 459.34927368]
[165.24929810 469.85855103]
[174.93670654 481.32540894]
[183.50778198 493.64901733]
[190.88716125 506.72106934]
[197.01002502 520.42675781]
[201.82255554 534.64550781]
[205.28245544 549.25250244]
[207.35931396 564.11926270]
[208.03488159 579.11523438]
[207.30322266 594.10852051]
[205.17077637 608.96740723]
[201.65626526 623.56134033]
[196.79058838 637.76202393]
[190.61650085 651.44470215]
[183.18827820 664.48907471]
[174.57116699 676.78051758]
[164.84092712 688.21105957]
[154.08306885 698.68017578]
[142.39210510 708.09594727]
[129.87081909 716.37554932]
[116.62921906 723.44622803]
[102.78369141 729.24584961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[44 174]
[45 173]
[46 172]
[51 166]
[52 165]
[54 163]
[55 162]
[56 161]
[59 159]
[60 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[77 148]
[78 147]
[79 146]
[80 145]
[81 139]
[83 136]
[84 135]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
