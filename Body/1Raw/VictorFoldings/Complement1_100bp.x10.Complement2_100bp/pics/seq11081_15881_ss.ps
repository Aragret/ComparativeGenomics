%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[4.82109547 729.19311523]
[-8.60578346 735.89221191]
[-22.43813515 741.70812988]
[-36.61794281 746.61645508]
[-51.08573532 750.59667969]
[-65.78082275 753.63201904]
[-80.64156342 755.70977783]
[-95.60563660 756.82128906]
[-110.61027527 756.96179199]
[-125.59254456 756.13079834]
[-140.48959351 754.33166504]
[-155.23895264 751.57208252]
[-169.77874756 747.86358643]
[-184.04800415 743.22161865]
[-197.98684692 737.66577148]
[-211.53684998 731.21936035]
[-224.64114380 723.90936279]
[-237.24476624 715.76641846]
[-249.29487610 706.82470703]
[-260.74093628 697.12176514]
[-271.53488159 686.69830322]
[-281.63150024 675.59796143]
[-290.98843384 663.86737061]
[-299.56640625 651.55566406]
[-307.32943726 638.71459961]
[-314.24499512 625.39788818]
[-320.28405762 611.66149902]
[-325.42132568 597.56298828]
[-329.63519287 583.16156006]
[-332.90802002 568.51751709]
[-335.22607422 553.69238281]
[-336.57965088 538.74822998]
[-336.96304321 523.74786377]
[-336.37463379 508.75408936]
[-334.81695557 493.82986450]
[-332.29644775 479.03775024]
[-328.82376099 464.43984985]
[-324.41345215 450.09732056]
[-319.08395386 436.07034302]
[-312.85769653 422.41778564]
[-305.76077271 409.19686890]
[-297.82293701 396.46307373]
[-289.07748413 384.26980591]
[-279.56109619 372.66821289]
[-269.31369019 361.70690918]
[-258.37826538 351.43194580]
[-246.80064392 341.88635254]
[-234.62944031 333.11022949]
[-221.91567993 325.14031982]
[-208.71269226 318.01010132]
[-195.07585144 311.74948120]
[-181.06236267 306.38467407]
[-166.73100281 301.93823242]
[-152.14187622 298.42880249]
[-137.35617065 295.87106323]
[-122.43592072 294.27575684]
[-107.44369507 293.64959717]
[-92.44237518 293.99520874]
[-77.49489594 295.31112671]
[-62.66393661 297.59182739]
[-48.01171494 300.82775879]
[-33.59968185 305.00534058]
[-19.48828697 310.10705566]
[-5.73672295 316.11151123]
[1.14268970 302.78207397]
[8.02210236 289.45263672]
[14.90151501 276.12322998]
[21.78092766 262.79379272]
[28.66033936 249.46435547]
[23.90098381 235.39723206]
[30.68780327 221.78129578]
[45.47497177 216.88462830]
[51.65074158 203.21495056]
[57.10609818 189.24215698]
[62.56145477 175.26936340]
[68.01681519 161.29655457]
[73.47216797 147.32376099]
[70.89350891 132.65406799]
[83.11994934 122.61292267]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[99.78738403 71.08744812]
[88.24948883 60.62252045]
[87.55735016 45.42464066]
[97.60517120 34.48951340]
[96.71234894 19.51610756]
[95.81953430 4.54270220]
[92.50364685 -1.17712283]
[92.56493378 -6.85983944]
[95.12980652 -10.88854694]
[94.68319702 -25.88189697]
[86.53844452 -39.44558334]
[93.89337921 -52.39757919]
[93.44677734 -67.39093018]
[93.00016785 -82.38427734]
[92.55355835 -97.37763214]
[78.33036804 -102.74133301]
[67.24588013 -113.14337158]
[60.99038315 -126.99751282]
[60.51780701 -142.19110107]
[65.90021515 -156.40722656]
[76.31682587 -167.47802734]
[90.17918396 -173.71528625]
[105.37338257 -174.16787720]
[119.58241272 -168.76676941]
[130.63949585 -158.33560181]
[136.85852051 -144.46505737]
[137.29112244 -129.27027893]
[131.87133789 -115.06836700]
[121.42562866 -104.02500916]
[107.54691315 -97.82423401]
[107.99351501 -82.83088684]
[108.44012451 -67.83753967]
[108.88672638 -52.84418488]
[116.99953461 -40.35292435]
[109.67655182 -26.32850266]
[110.12315369 -11.33515263]
[110.79293823 3.64988637]
[111.68576050 18.62329292]
[112.57857513 33.59669876]
[123.85462952 43.26034927]
[124.97337341 58.43279266]
[114.76078796 70.19463348]
[120.59259033 56.37472153]
[129.05258179 43.98809052]
[139.80380249 33.52810287]
[152.41802979 25.41136932]
[166.39283752 19.96118355]
[181.17163086 17.39461899]
[196.16577148 17.81390190]
[210.77804565 21.20233536]
[224.42645264 27.42495537]
[236.56738281 36.23392105]
[246.71725464 47.27836990]
[254.47183228 60.11841202]
[259.52221680 74.24263000]
[261.66729736 89.08845520]
[260.82159424 104.06459808]
[257.01882935 118.57455444]
[250.41041565 132.04040527]
[241.25959778 143.92579651]
[229.93086243 153.75735474]
[216.87539673 161.14349365]
[202.61322021 165.79000854]
[187.71237183 167.51184082]
[172.76634216 166.24041748]
[158.37045288 162.02636719]
[145.09806824 155.03753662]
[133.47781372 145.55229187]
[123.97254944 133.94842529]
[116.96083069 120.68811035]
[112.72195435 106.29949951]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[97.09274292 128.06828308]
[99.28120422 143.73739624]
[87.44496918 152.77911377]
[81.98960876 166.75192261]
[76.53425598 180.72471619]
[71.07889557 194.69750977]
[65.62353516 208.67030334]
[79.32584381 202.56729126]
[93.77950287 206.57872009]
[102.37650299 218.87065125]
[101.18641663 233.82336426]
[90.75332642 244.60069275]
[75.84709930 246.27537537]
[63.28267288 238.08177185]
[58.80440140 223.76403809]
[63.37965775 238.65379333]
[56.21306992 252.07373047]
[41.98976898 256.34378052]
[35.11035538 269.67321777]
[28.23094368 283.00262451]
[21.35153198 296.33206177]
[14.47211933 309.66149902]
[7.59270620 322.99090576]
[20.45350456 330.72131348]
[32.78694153 339.26794434]
[44.54129028 348.59503174]
[55.66724396 358.66339111]
[66.11814117 369.43081665]
[75.85014343 380.85217285]
[84.82242584 392.87951660]
[92.99736786 405.46240234]
[100.34067535 418.54806519]
[106.82154083 432.08163452]
[112.41278839 446.00631714]
[117.09096527 460.26373291]
[120.83644867 474.79403687]
[123.63352966 489.53634644]
[125.47047424 504.42877197]
[126.33957672 519.40887451]
[126.23719025 534.41381836]
[125.16375732 549.38067627]
[123.12376404 564.24664307]
[120.12577057 578.94940186]
[116.18235779 593.42724609]
[111.31006622 607.61950684]
[105.52932739 621.46661377]
[98.86437988 634.91046143]
[91.34320068 647.89471436]
[82.99731445 660.36486816]
[73.86174011 672.26867676]
[63.97479248 683.55615234]
[53.37793732 694.17999268]
[42.11562729 704.09558105]
[30.23509979 713.26141357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 179]
[65 178]
[66 177]
[67 176]
[68 175]
[69 174]
[72 171]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[79 157]
[80 156]
[82 154]
[83 124]
[86 121]
[87 120]
[88 119]
[91 118]
[92 117]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
