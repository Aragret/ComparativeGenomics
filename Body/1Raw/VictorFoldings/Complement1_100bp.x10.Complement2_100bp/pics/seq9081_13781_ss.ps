%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[43.63763046 748.83673096]
[28.70363617 750.30798340]
[13.70305634 750.72216797]
[-1.28937280 750.07720947]
[-16.19895935 748.37628174]
[-30.95142365 745.62786865]
[-45.47327042 741.84570312]
[-59.69215012 737.04858398]
[-73.53722382 731.26043701]
[-86.93951416 724.51007080]
[-99.83226013 716.83111572]
[-112.15122223 708.26184082]
[-123.83502197 698.84497070]
[-134.82546997 688.62738037]
[-145.06777954 677.65997314]
[-154.51095581 665.99743652]
[-163.10794067 653.69781494]
[-170.81590271 640.82238770]
[-177.59643555 627.43530273]
[-183.41577148 613.60333252]
[-188.24490356 599.39526367]
[-192.05979919 584.88201904]
[-194.84141541 570.13574219]
[-196.57592773 555.23004150]
[-197.25466919 540.23913574]
[-196.87428284 525.23760986]
[-195.43663025 510.30035400]
[-192.94891357 495.50170898]
[-189.42350769 480.91540527]
[-184.87796021 466.61410522]
[-179.33494568 452.66906738]
[-172.82205200 439.14978027]
[-165.37174988 426.12359619]
[-157.02114868 413.65536499]
[-147.81185913 401.80725098]
[-137.78973389 390.63827515]
[-127.00473022 380.20407104]
[-115.51057434 370.55664062]
[-103.36452484 361.74401855]
[-90.62709045 353.81011963]
[-77.36173248 346.79446411]
[-63.63454437 340.73202515]
[-49.51390839 335.65298462]
[-35.07017899 331.58267212]
[-20.37530708 328.54132080]
[-5.50250816 326.54412842]
[9.47412300 325.60104370]
[24.47997284 325.71673584]
[39.44028473 326.89065552]
[41.66540146 312.05661011]
[43.89051819 297.22256470]
[46.11563492 282.38851929]
[48.34075165 267.55447388]
[46.78491974 265.22262573]
[46.05901718 262.13397217]
[46.45592117 258.60156250]
[48.14989471 255.03857422]
[51.16528702 251.91426086]
[54.26939774 237.23895264]
[57.37350845 222.56364441]
[60.47761917 207.88835144]
[63.58172989 193.21304321]
[49.77766800 199.08227539]
[36.51027679 192.08396912]
[33.55978012 177.37701416]
[43.10117722 165.80282593]
[58.10090256 165.89347839]
[67.50133514 177.58052063]
[71.68834686 163.17674255]
[75.87535858 148.77296448]
[74.50673676 145.52346802]
[74.64404297 141.44963074]
[76.65757751 137.26644897]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[104.18446350 62.63891983]
[108.79846954 48.36618805]
[105.68125153 32.85511017]
[116.95832825 23.12491035]
[106.81090546 9.59251308]
[106.72973633 -7.15546274]
[116.54872131 -20.51769447]
[132.23855591 -25.34538460]
[128.89074707 -40.80833054]
[140.02169800 -50.70535278]
[144.42269897 -65.04519653]
[148.82369995 -79.38504791]
[135.10148621 -85.48899078]
[122.21509552 -93.20250702]
[110.35244751 -102.41309357]
[99.68653107 -112.98644257]
[90.37289429 -124.76835632]
[82.54735565 -137.58702087]
[76.32403564 -151.25550842]
[71.79367828 -165.57449341]
[69.02236938 -180.33515930]
[68.05049896 -195.32225037]
[68.89225769 -210.31721497]
[71.53536224 -225.10136414]
[75.94126892 -239.45912170]
[82.04573059 -253.18112183]
[89.75972748 -266.06723022]
[98.97075653 -277.92953491]
[109.54450226 -288.59503174]
[121.32676697 -297.90823364]
[134.14573669 -305.73330688]
[147.81445312 -311.95611572]
[162.13360596 -316.48593140]
[176.89436340 -319.25668335]
[191.88150024 -320.22799683]
[206.87641907 -319.38568115]
[221.66047668 -316.74200439]
[236.01808167 -312.33557129]
[249.73983765 -306.23059082]
[262.62564087 -298.51611328]
[274.48760986 -289.30465698]
[285.15274048 -278.73049927]
[294.46548462 -266.94790649]
[302.29006958 -254.12863159]
[308.51235962 -240.45968628]
[313.04165649 -226.14036560]
[315.81185913 -211.37948608]
[316.78262329 -196.39233398]
[315.93972778 -181.39743042]
[313.29553223 -166.61346436]
[308.88854980 -152.25604248]
[302.78305054 -138.53451538]
[295.06808472 -125.64897919]
[285.85617065 -113.78736877]
[275.28164673 -103.12264252]
[263.49868774 -93.81032562]
[250.67912292 -85.98622131]
[237.00993347 -79.76443481]
[222.69044495 -75.23568726]
[207.92947388 -72.46602631]
[192.94227600 -71.49584198]
[177.94741821 -72.33928680]
[163.16354370 -74.98404694]
[158.76255798 -60.64419937]
[154.36155701 -46.30435181]
[158.02415466 -31.86708832]
[146.57839966 -20.94438744]
[155.55715942 -11.06389809]
[158.50489807 2.06831217]
[154.54733276 15.04549122]
[144.61585999 24.44678688]
[131.23106384 27.73892021]
[134.67831421 42.22911453]
[123.07120514 52.98019409]
[118.45719910 67.25292969]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[90.27914429 152.95997620]
[86.09213257 167.36375427]
[81.90512085 181.76753235]
[78.25703430 196.31715393]
[75.15292358 210.99246216]
[72.04881287 225.66775513]
[68.94470215 240.34306335]
[65.84059143 255.01837158]
[63.17479706 269.77957153]
[60.94968033 284.61361694]
[58.72455978 299.44766235]
[56.49944305 314.28170776]
[54.27432632 329.11575317]
[68.92065430 332.38287354]
[83.30004120 336.67498779]
[97.34084320 341.97070312]
[110.97310638 348.24368286]
[124.12892914 355.46264648]
[136.74275208 363.59161377]
[148.75175476 372.59011841]
[160.09608459 382.41329956]
[170.71923828 393.01223755]
[180.56829834 404.33413696]
[189.59417725 416.32257080]
[197.75190735 428.91781616]
[205.00086975 442.05712891]
[211.30493164 455.67501831]
[216.63270569 469.70370483]
[220.95761108 484.07327271]
[224.25814819 498.71209717]
[226.51783752 513.54730225]
[227.72543335 528.50488281]
[227.87492371 543.51043701]
[226.96556091 558.48919678]
[225.00187683 573.36645508]
[221.99365234 588.06811523]
[217.95588684 602.52099609]
[212.90866089 616.65301514]
[206.87716675 630.39385986]
[199.89141846 643.67498779]
[191.98622131 656.43023682]
[183.20097351 668.59613037]
[173.57945251 680.11193848]
[163.16957092 690.92047119]
[152.02319336 700.96771240]
[140.19584656 710.20367432]
[127.74647522 718.58233643]
[114.73709106 726.06195068]
[101.23250580 732.60528564]
[87.29999542 738.17968750]
[73.00897217 742.75744629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 172]
[50 171]
[51 170]
[52 169]
[53 168]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[68 162]
[69 161]
[70 160]
[74 159]
[75 158]
[76 157]
[77 155]
[78 154]
[79 153]
[80 152]
[82 150]
[86 145]
[88 143]
[89 142]
[90 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
