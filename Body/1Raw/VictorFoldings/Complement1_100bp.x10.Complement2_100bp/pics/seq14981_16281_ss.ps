%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[36.49341583 498.34362793]
[30.43029022 512.07476807]
[23.16070938 525.20715332]
[14.74320412 537.63507080]
[5.24555016 549.25836182]
[-5.25578165 559.98345947]
[-16.67623901 569.72406006]
[-28.92387009 578.40173340]
[-41.90006256 585.94659424]
[-55.50033569 592.29785156]
[-69.61518860 597.40441895]
[-84.13097382 601.22521973]
[-98.93080902 603.72937012]
[-113.89554596 604.89685059]
[-128.90469360 604.71813965]
[-143.83738708 603.19476318]
[-158.57341003 600.33892822]
[-172.99412537 596.17364502]
[-186.98339844 590.73242188]
[-200.42860413 584.05914307]
[-213.22148132 576.20751953]
[-225.25904846 567.24072266]
[-236.44436646 557.23101807]
[-246.68737793 546.25891113]
[-255.90560913 534.41278076]
[-264.02484131 521.78802490]
[-270.97970581 508.48629761]
[-276.71420288 494.61468506]
[-281.18215942 480.28485107]
[-284.34759521 465.61224365]
[-286.18502808 450.71490479]
[-286.67968750 435.71286011]
[-285.82754517 420.72686768]
[-283.63549805 405.87759399]
[-280.12118530 391.28457642]
[-275.31289673 377.06533813]
[-269.24935913 363.33438110]
[-261.97937012 350.20220947]
[-253.56149292 337.77459717]
[-244.06347656 326.15161133]
[-233.56181335 315.42678833]
[-222.14106750 305.68655396]
[-209.89317322 297.00924683]
[-196.91674805 289.46481323]
[-183.31628418 283.11395264]
[-169.20126343 278.00778198]
[-154.68536377 274.18746948]
[-139.88545227 271.68371582]
[-124.92068481 270.51672363]
[-109.91154480 270.69589233]
[-94.97889709 272.21972656]
[-80.24295807 275.07601929]
[-65.82238007 279.24172974]
[-51.83327103 284.68334961]
[-38.38826752 291.35705566]
[-25.59562111 299.20907593]
[-16.63492584 287.17968750]
[-7.67423010 275.15032959]
[-6.27620935 260.32147217]
[8.17272758 253.87641907]
[17.13342285 241.84703064]
[26.09412003 229.81765747]
[34.96501541 217.72190857]
[43.74561691 205.56045532]
[52.52622223 193.39898682]
[61.30682373 181.23753357]
[68.18623352 167.90811157]
[73.01223755 153.70565796]
[72.18788910 146.36111450]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[83.74244690 100.26634979]
[87.73484039 89.32550812]
[98.01994324 83.86127472]
[103.26666260 69.80880737]
[108.51338196 55.75633240]
[113.76010132 41.70386124]
[119.00682068 27.65139008]
[119.07678986 18.51722717]
[124.43767548 13.42972851]
[122.24922180 -2.23938870]
[134.08544922 -11.28111267]
[139.01704407 -25.44724846]
[143.41804504 -39.78709412]
[147.81904602 -54.12694168]
[144.47123718 -69.58988953]
[155.60218811 -79.48690796]
[152.25437927 -94.94985199]
[163.38534546 -104.84687805]
[167.78634644 -119.18672180]
[172.18733215 -133.52656555]
[176.58833313 -147.86640930]
[162.95910645 -154.18762207]
[150.31758118 -162.30586243]
[138.89929199 -172.06990051]
[128.91694641 -183.29782104]
[120.55648804 -195.78048706]
[113.97369385 -209.28530884]
[109.29118347 -223.56074524]
[106.59619904 -238.34082031]
[105.93893433 -253.35021973]
[107.33164978 -268.30929565]
[110.74838257 -282.93939209]
[116.12548828 -296.96795654]
[123.36280060 -310.13363647]
[132.32548523 -322.19116211]
[142.84657288 -332.91592407]
[154.73005676 -342.10812378]
[167.75457764 -349.59649658]
[181.67747498 -355.24154663]
[196.23937988 -358.93814087]
[211.16900635 -360.61737061]
[226.18824768 -360.24795532]
[241.01727295 -357.83682251]
[255.37983704 -353.42886353]
[269.00839233 -347.10617065]
[281.64904785 -338.98654175]
[293.06628418 -329.22128296]
[303.04739380 -317.99227905]
[311.40649414 -305.50872803]
[317.98785400 -292.00317383]
[322.66879272 -277.72723389]
[325.36218262 -262.94686890]
[326.01782227 -247.93740845]
[324.62350464 -232.97846985]
[321.20516968 -218.34875488]
[315.82656860 -204.32077026]
[308.58782959 -191.15586853]
[299.62384033 -179.09931946]
[289.10159302 -168.37568665]
[277.21710205 -159.18478394]
[264.19177246 -151.69781494]
[250.26826477 -146.05427551]
[235.70596313 -142.35926819]
[220.77613831 -140.68164062]
[205.75695801 -141.05267334]
[190.92819214 -143.46542358]
[186.52719116 -129.12556458]
[182.12619019 -114.78572083]
[177.72518921 -100.44587708]
[181.38778687 -86.00861359]
[169.94204712 -75.08590698]
[173.60464478 -60.64864349]
[162.15888977 -49.72594452]
[157.75788879 -35.38609695]
[153.35690308 -21.04624939]
[167.62953186 -25.66054153]
[180.21966553 -17.50648117]
[181.84631348 -2.59494042]
[171.31036377 8.08184814]
[156.37854004 6.65335417]
[148.05825806 -5.82575560]
[150.63691711 8.84393311]
[138.41047668 18.88508606]
[133.05929565 32.89810944]
[127.81256866 46.95058060]
[122.56585693 61.00305176]
[117.31913757 75.05551910]
[112.07241821 89.10799408]
[115.27455139 105.57379150]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[87.21469116 158.53164673]
[82.38869476 172.73410034]
[93.15345001 162.28805542]
[106.39820862 155.24700928]
[121.07843018 152.16624451]
[136.03637695 153.28874207]
[150.09239197 158.52595520]
[162.13796997 167.46487427]
[171.22312927 179.40051270]
[176.63139343 193.39161682]
[177.93624878 208.33474731]
[175.03475952 223.05145264]
[168.15579224 236.38110352]
[157.84181213 247.27247620]
[144.90623474 254.86662292]
[130.36923218 258.56463623]
[115.37722778 258.07489014]
[101.11256409 253.43597412]
[88.70021057 245.01376343]
[79.11906433 233.47247314]
[73.12472534 219.72227478]
[71.18993378 204.84757996]
[73.46827698 190.01814270]
[64.68767548 202.17959595]
[55.90707397 214.34104919]
[47.12647247 226.50250244]
[44.64021301 235.29206848]
[38.12349701 238.77835083]
[29.16280174 250.80772400]
[20.20210457 262.83709717]
[18.16315651 278.52636719]
[4.35514784 284.11102295]
[-4.60554838 296.14038086]
[-13.56624413 308.16976929]
[-2.38062263 318.17916870]
[7.86272335 329.15097046]
[17.08131981 340.99679565]
[25.20094109 353.62130737]
[32.15621185 366.92282104]
[37.89113235 380.79425049]
[42.35952377 395.12393188]
[45.52541351 409.79647827]
[47.36331177 424.69372559]
[47.85841370 439.69577026]
[47.00674057 454.68179321]
[44.81514359 469.53115845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 198]
[57 197]
[58 196]
[60 194]
[61 193]
[62 192]
[63 190]
[64 189]
[65 188]
[66 187]
[67 166]
[68 165]
[70 164]
[71 163]
[72 162]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[81 155]
[83 153]
[84 147]
[85 146]
[86 145]
[88 143]
[90 141]
[91 140]
[92 139]
[93 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
