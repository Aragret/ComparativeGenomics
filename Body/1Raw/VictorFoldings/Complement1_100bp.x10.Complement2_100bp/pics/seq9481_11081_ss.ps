%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[32.94726944 505.11865234]
[38.50430298 519.18896484]
[39.43936157 534.28802490]
[35.66083145 548.93652344]
[27.53889656 561.69927979]
[15.86926079 571.32611084]
[1.79519820 576.87371826]
[-13.30445957 577.79864502]
[-27.95040321 574.01031494]
[-40.70776749 565.87982178]
[-50.32672501 554.20373535]
[-55.86489868 540.12591553]
[-56.77972031 525.02569580]
[-52.98155975 510.38226318]
[-44.84252930 497.63034058]
[-33.16000366 488.01922607]
[-19.07851982 482.49047852]
[-3.97763562 481.58578491]
[-0.22133502 467.06372070]
[3.53496575 452.54165649]
[7.29126644 438.01959229]
[5.92293882 430.75671387]
[11.21310711 423.31011963]
[15.18520355 408.84558105]
[19.15729904 394.38107300]
[11.58990574 381.60333252]
[15.41212368 366.87768555]
[28.86588097 359.02694702]
[32.83797836 344.56240845]
[36.81007385 330.09790039]
[40.78216934 315.63336182]
[44.75426483 301.16885376]
[40.66343689 286.84701538]
[51.77890396 275.58837891]
[55.64320755 261.09469604]
[59.39950943 246.57263184]
[55.09590530 232.31330872]
[66.04251099 220.89042664]
[69.79881287 206.36836243]
[73.55511475 191.84629822]
[77.09478760 177.26992798]
[80.19889832 162.59461975]
[83.08416748 147.87474060]
[85.96944427 133.15484619]
[88.85471344 118.43495178]
[91.73999023 103.71505737]
[90.06379700 100.24191284]
[89.92666626 96.04679108]
[91.61669159 91.83361053]
[95.09677887 88.40887451]
[83.63928986 98.09008789]
[68.89402008 100.84275055]
[54.71535492 95.94730377]
[44.80955505 84.68341827]
[41.76597595 69.99544525]
[46.38019943 55.72277832]
[57.44608307 45.59626770]
[72.07102966 42.26295471]
[86.43211365 46.59415817]
[96.77537537 57.45771408]
[100.39713287 72.01302338]
[106.05992126 58.12299728]
[111.72270966 44.23297119]
[109.76778412 28.53300858]
[121.73732758 19.66851044]
[127.40011597 5.77848434]
[133.06289673 -8.11154270]
[131.10797119 -23.81150627]
[143.07751465 -32.67600250]
[148.74029541 -46.56603241]
[153.88226318 -60.65717316]
[158.49627686 -74.92990112]
[163.11027527 -89.20263672]
[167.72428894 -103.47537231]
[172.33830261 -117.74810791]
[176.95230103 -132.02084351]
[181.56631470 -146.29357910]
[178.44909668 -161.80464172]
[189.72618103 -171.53485107]
[194.34017944 -185.80758667]
[191.22296143 -201.31866455]
[202.50004578 -211.04885864]
[204.39334106 -225.92889404]
[203.50051880 -240.90229797]
[202.60769653 -255.87570190]
[187.65650940 -257.46057129]
[173.17013550 -261.48486328]
[159.54377747 -267.83877563]
[147.14916992 -276.34896851]
[136.32444763 -286.78329468]
[127.36492157 -298.85708618]
[120.51500702 -312.24099731]
[115.96157837 -326.56985474]
[113.82884979 -341.45275879]
[114.17501831 -356.48373413]
[116.99062347 -371.25268555]
[122.19886780 -385.35675049]
[129.65765381 -398.41110229]
[139.16351318 -410.05963135]
[150.45710754 -419.98458862]
[163.23034668 -427.91516113]
[177.13476562 -433.63504028]
[191.79104614 -436.98818970]
[206.79934692 -437.88308716]
[221.75022888 -436.29531860]
[236.23582458 -432.26824951]
[249.86096191 -425.91171265]
[262.25393677 -417.39913940]
[273.07662964 -406.96270752]
[282.03384399 -394.88717651]
[288.88116455 -381.50198364]
[293.43185425 -367.17224121]
[295.56170654 -352.28890991]
[295.21264648 -337.25799561]
[292.39419556 -322.48959351]
[287.18322754 -308.38653564]
[279.72192383 -295.33361816]
[270.21383667 -283.68692017]
[258.91830444 -273.76412964]
[246.14355469 -265.83602905]
[232.23803711 -260.11883545]
[217.58111572 -256.76852417]
[218.47392273 -241.79512024]
[219.36674500 -226.82170105]
[225.19252014 -240.64416504]
[234.01051331 -252.77853394]
[245.35815430 -262.58828735]
[258.64016724 -269.55877686]
[273.15982056 -273.32440186]
[288.15542603 -273.68756104]
[302.84033203 -270.62927246]
[316.44424438 -264.30993652]
[328.25347900 -255.06103516]
[337.64855957 -243.36778259]
[344.13665771 -229.84355164]
[347.37738037 -215.19781494]
[347.20077515 -200.19885254]
[343.61608887 -185.63348389]
[336.81137085 -172.26577759]
[327.14355469 -160.79698181]
[315.11981201 -151.82870483]
[301.37091064 -145.83143616]
[286.61804199 -143.11975098]
[271.63516235 -143.83592224]
[257.20819092 -147.94236755]
[244.09397888 -155.22367859]
[232.98046875 -165.29788208]
[224.45062256 -177.63652039]
[218.95193481 -191.59231567]
[216.77278137 -206.43484497]
[220.22001648 -191.94465637]
[208.61291504 -181.19357300]
[203.99891663 -166.92083740]
[207.44615173 -152.43064880]
[195.83905029 -141.67956543]
[191.22503662 -127.40682983]
[186.61103821 -113.13409424]
[181.99702454 -98.86135864]
[177.38301086 -84.58863068]
[172.76899719 -70.31589508]
[168.15499878 -56.04316330]
[182.49475098 -60.44444275]
[194.96208191 -52.10383987]
[196.36653137 -37.16973114]
[185.67279053 -26.65099144]
[170.76388550 -28.30164146]
[162.63032532 -40.90324402]
[156.96754456 -27.01321793]
[159.32751465 -12.30676174]
[146.95292664 -2.44875598]
[141.29014587 11.44127083]
[135.62734985 25.33129692]
[137.98731995 40.03775406]
[125.61273193 49.89575958]
[119.94995117 63.78578568]
[114.28716278 77.67581177]
[109.67315674 91.94854736]
[106.45987701 106.60033417]
[103.57460785 121.32022095]
[100.68933105 136.04011536]
[97.80406189 150.76000977]
[94.91878510 165.47990417]
[96.69667053 171.84783936]
[95.21426392 177.33413696]
[91.72224426 180.59219360]
[93.30973816 187.01023865]
[91.66464996 192.44996643]
[88.07717133 195.60260010]
[84.32087708 210.12466431]
[80.56457520 224.64672852]
[84.59950256 239.94476318]
[73.92156982 250.32893372]
[70.16526794 264.85098267]
[71.04595184 273.94287109]
[66.24343109 279.56048584]
[70.05014801 294.91690063]
[59.21878815 305.14093018]
[55.24669266 319.60546875]
[51.27459717 334.06997681]
[47.30250168 348.53451538]
[43.33040619 362.99902344]
[50.88791656 376.61965942]
[46.65359497 391.23217773]
[33.62182236 398.35314941]
[29.64972687 412.81768799]
[25.67763138 427.28219604]
[21.81332588 441.77590942]
[18.05702400 456.29797363]
[14.30072403 470.82000732]
[10.54442310 485.34207153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 210]
[19 209]
[20 208]
[21 207]
[23 206]
[24 205]
[25 204]
[28 201]
[29 200]
[30 199]
[31 198]
[32 197]
[34 195]
[35 193]
[36 192]
[38 190]
[39 189]
[40 188]
[41 185]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[50 177]
[61 176]
[62 175]
[63 174]
[65 172]
[66 171]
[67 170]
[69 168]
[70 167]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[79 153]
[80 152]
[82 150]
[83 124]
[84 123]
[85 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
