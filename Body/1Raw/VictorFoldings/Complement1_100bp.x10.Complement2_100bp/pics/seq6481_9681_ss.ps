%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[75.29084778 485.23303223]
[64.38699341 474.89608765]
[55.02793503 463.14218140]
[47.39585495 450.20010376]
[41.63930893 436.32177734]
[37.87034988 421.77731323]
[36.16234589 406.84985352]
[36.54853821 391.82998657]
[39.02141571 377.01004028]
[43.53284073 362.67846680]
[49.99499130 349.11431885]
[58.28208923 336.58154297]
[68.23281860 325.32415771]
[79.65348053 315.56121826]
[92.32177734 307.48284912]
[105.99111938 301.24621582]
[120.39541626 296.97277832]
[118.17030334 282.13873291]
[115.94518280 267.30468750]
[103.85194397 258.68557739]
[101.38404083 243.67344666]
[110.50656128 231.04739380]
[108.28144073 216.21334839]
[106.05632782 201.37930298]
[96.51665497 189.94059753]
[102.12121582 175.14535522]
[99.89609528 160.31130981]
[96.65607452 156.80255127]
[95.58583069 151.22119141]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[72.93807983 55.19081879]
[58.52376556 50.89257812]
[45.22927856 43.86693192]
[33.56470490 34.38555908]
[23.97717476 22.81431389]
[16.83373070 9.59911728]
[12.40727520 -4.75123119]
[10.86614132 -19.68464279]
[12.26769733 -34.62697601]
[16.55621338 -49.00412369]
[23.56506729 -62.26404953]
[33.02323151 -73.89800262]
[44.56573868 -83.46002960]
[57.74777222 -90.58406830]
[72.06181335 -94.99795532]
[70.50128937 -109.91656494]
[68.94076538 -124.83516693]
[67.38024139 -139.75376892]
[65.81971741 -154.67237854]
[64.25919342 -169.59098816]
[59.05643845 -155.52217102]
[50.78906631 -143.00616455]
[39.89076614 -132.69950867]
[26.93324280 -125.14289093]
[12.59622097 -120.73269653]
[-2.36820793 -119.70028687]
[-17.17503929 -122.09981537]
[-31.04753685 -127.80541229]
[-43.25797653 -136.51776123]
[-53.16582489 -147.77984619]
[-60.25133133 -161.00088501]
[-64.14280701 -175.48730469]
[-64.63611603 -190.47918701]
[-61.70537949 -205.19009399]
[-55.50433350 -218.84831238]
[-46.35827637 -230.73736572]
[-34.74699020 -240.23358154]
[-21.27957916 -246.83880615]
[-6.66251993 -250.20652771]
[8.33740807 -250.16009521]
[22.93333817 -246.70193481]
[36.35959625 -240.01347351]
[47.91186905 -230.44555664]
[56.98414993 -218.50010681]
[63.10051727 -204.80375671]
[65.94025421 -190.07333374]
[69.91234589 -204.53785706]
[73.88444519 -219.00238037]
[77.85654449 -233.46690369]
[81.82863617 -247.93142700]
[78.02191925 -263.28784180]
[88.85327148 -273.51190186]
[92.82537079 -287.97640991]
[78.95372009 -293.73666382]
[65.91342163 -301.19009399]
[53.91014481 -310.21920776]
[43.13320160 -320.68154907]
[33.75255585 -332.41213989]
[25.91615868 -345.22598267]
[19.74759483 -358.92092896]
[15.34415531 -373.28103638]
[12.77528763 -388.07983398]
[12.08150673 -403.08389282]
[13.27375507 -418.05661011]
[16.33322906 -432.76181030]
[21.21167564 -446.96759033]
[27.83215523 -460.44989014]
[36.09025192 -472.99606323]
[45.85572815 -484.40829468]
[56.97455978 -494.50656128]
[69.27140045 -503.13156128]
[82.55229187 -510.14733887]
[96.60779572 -515.44317627]
[111.21622467 -518.93560791]
[126.14717865 -520.56958008]
[141.16519165 -520.31921387]
[156.03338623 -518.18853760]
[170.51728821 -514.21112061]
[184.38845825 -508.44967651]
[197.42813110 -500.99511719]
[209.43064880 -491.96502686]
[220.20671082 -481.50177002]
[229.58636475 -469.77038574]
[237.42167664 -456.95590210]
[243.58909607 -443.26040649]
[247.99133301 -428.89993286]
[250.55894470 -414.10092163]
[251.25146484 -399.09680176]
[250.05795288 -384.12420654]
[246.99723816 -369.41925049]
[242.11759949 -355.21389771]
[235.49598694 -341.73214722]
[227.23683167 -329.18664551]
[217.47039795 -317.77526855]
[206.35070801 -307.67794800]
[194.05316162 -299.05395508]
[180.77166748 -292.03930664]
[166.71571350 -286.74462891]
[152.10699463 -283.25341797]
[137.17590332 -281.62075806]
[122.15791321 -281.87237549]
[107.28989410 -284.00430298]
[103.31779480 -269.53979492]
[107.40862274 -255.21797180]
[96.29315948 -243.95933533]
[92.32106781 -229.49481201]
[88.34896851 -215.03028870]
[84.37686920 -200.56576538]
[80.40477753 -186.10124207]
[79.17780304 -171.15150452]
[80.73832703 -156.23289490]
[82.29884338 -141.31430054]
[83.85936737 -126.39569092]
[85.41989136 -111.47708893]
[86.98041534 -96.55847931]
[101.89801788 -95.20229340]
[116.26895905 -90.96036530]
[129.54039001 -83.99393463]
[141.20135498 -74.56909943]
[150.80250549 -63.04661942]
[157.97340393 -49.86815643]
[162.43679810 -35.53931046]
[164.01936340 -20.61023140]
[162.65838623 -5.65450335]
[158.40434265 8.75289917]
[151.41889954 22.05771828]
[141.96891785 33.74772644]
[130.41609192 43.37246323]
[117.20327759 50.56056976]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.73014069 158.08618164]
[116.95526123 172.92022705]
[126.65409088 185.41996765]
[120.89037323 199.15419006]
[123.11548615 213.98822021]
[125.34060669 228.82226562]
[137.76612854 238.21611023]
[139.81138611 253.29164124]
[130.77922058 265.07958984]
[133.00434875 279.91363525]
[135.22946167 294.74768066]
[150.25364685 294.60681152]
[165.15121460 296.55838013]
[179.63218689 300.56436157]
[193.41465759 306.54678345]
[206.23037720 314.38919067]
[217.82986450 323.93896484]
[227.98735046 335.01016235]
[236.50509644 347.38732910]
[243.21731567 360.82952881]
[247.99334717 375.07507324]
[250.74021912 389.84667969]
[251.40447998 404.85684204]
[249.97317505 419.81335449]
[246.47419739 434.42510986]
[240.97561646 448.40768433]
[233.58450317 461.48886108]
[224.44470215 473.41406250]
[213.73411560 483.95111084]
[201.66125488 492.89495850]
[188.46112061 500.07144165]
[174.39062500 505.34094238]
[159.72367859 508.60083008]
[144.74578857 509.78768921]
[129.74847412 508.87838745]
[115.02368164 505.89065552]
[100.85802460 500.88259888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 184]
[18 183]
[19 182]
[22 179]
[23 178]
[24 177]
[26 175]
[27 174]
[30 173]
[31 172]
[32 171]
[35 169]
[36 168]
[37 167]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
[89 140]
[90 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
