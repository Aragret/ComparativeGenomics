%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[104.93170929 823.92816162]
[90.19858551 821.08532715]
[75.67069244 817.33209229]
[61.40424728 812.68286133]
[47.45443726 807.15576172]
[33.87523270 800.77203369]
[20.71917152 793.55645752]
[8.03714848 785.53692627]
[-4.12176847 776.74450684]
[-15.71053982 767.21313477]
[-26.68432999 756.97973633]
[-37.00068283 746.08386230]
[-46.61968994 734.56774902]
[-55.50413132 722.47589111]
[-63.61963654 709.85504150]
[-70.93481445 696.75408936]
[-77.42134857 683.22375488]
[-83.05416107 669.31628418]
[-87.81144714 655.08551025]
[-91.67481232 640.58648682]
[-94.62929535 625.87536621]
[-96.66347504 611.00897217]
[-97.76948547 596.04492188]
[-97.94304657 581.04107666]
[-97.18347168 566.05541992]
[-95.49372101 551.14599609]
[-92.88031769 536.37042236]
[-89.35337830 521.78594971]
[-84.92654419 507.44894409]
[-79.61694336 493.41488647]
[-73.44512177 479.73806763]
[-66.43495178 466.47143555]
[-58.61355972 453.66625977]
[-50.01119995 441.37210083]
[-40.66115570 429.63656616]
[-30.59960175 418.50500488]
[-19.86546326 408.02050781]
[-8.50026989 398.22360229]
[3.45200992 389.15225220]
[15.94513321 380.84152222]
[28.93076706 373.32354736]
[42.35867310 366.62744141]
[56.17689896 360.77908325]
[70.33198547 355.80114746]
[84.76916504 351.71282959]
[99.43259430 348.52999878]
[114.26553345 346.26492310]
[112.92729950 331.32473755]
[111.58906555 316.38455200]
[110.25083160 301.44436646]
[108.91259003 286.50418091]
[107.57435608 271.56399536]
[105.11765289 269.03479004]
[103.76393127 265.19000244]
[104.11820221 260.56097412]
[106.52524567 255.92921448]
[105.85546112 240.94416809]
[105.18567657 225.95913696]
[104.07003021 211.00068665]
[102.50950623 196.08207703]
[100.94898224 181.16346741]
[86.02039337 179.95611572]
[71.56777954 176.02642822]
[58.08321762 169.50822449]
[46.02582932 160.62341309]
[35.80613708 149.67451477]
[27.77210045 137.03431702]
[22.19726181 123.13317871]
[19.27143097 108.44440460]
[19.09422493 93.46812439]
[21.67167664 78.71424103]
[26.91603088 64.68508148]
[34.64872742 51.85831833]
[44.60649109 40.67067337]
[56.45027542 31.50305557]
[69.77683258 24.66760445]
[84.13241577 20.39704895]
[82.57189178 5.47844505]
[81.01136780 -9.44015980]
[79.45084381 -24.35876465]
[77.89031982 -39.27737045]
[76.32979584 -54.19597244]
[74.76927948 -69.11457825]
[65.63825989 -82.03491974]
[72.00949860 -95.49807739]
[70.44897461 -110.41667938]
[60.93904495 -119.13011932]
[59.94641113 -131.58798218]
[67.45951843 -141.06848145]
[66.12128448 -156.00866699]
[57.18364716 -169.06352234]
[63.75462341 -182.43032837]
[62.41638947 -197.37051392]
[47.66509628 -200.72528076]
[34.67350006 -208.47599792]
[24.71438980 -219.86334229]
[18.76345444 -233.77166748]
[17.40370941 -248.83839417]
[20.76836395 -263.58743286]
[28.52778816 -276.57382202]
[39.92179108 -286.52529907]
[53.83410263 -292.46691895]
[68.90173340 -293.81655884]
[83.64852142 -290.44204712]
[96.62971497 -282.67391968]
[106.57355499 -271.27325439]
[112.50585175 -257.35696411]
[113.84540558 -242.28842163]
[110.46098328 -227.54389954]
[102.68416595 -214.56791687]
[91.27683258 -204.63171387]
[77.35657501 -198.70874023]
[78.69480896 -183.76856995]
[87.53672791 -171.78233337]
[81.06147003 -157.34689331]
[82.39970398 -142.40672302]
[93.25392914 -128.61712646]
[85.36757660 -111.97720337]
[86.92810059 -97.05860138]
[95.94749451 -85.20533752]
[89.68788147 -70.67510223]
[91.24840546 -55.75649643]
[92.80892944 -40.83789062]
[94.36945343 -25.91928673]
[95.92996979 -11.00068283]
[97.49049377 3.91792202]
[99.05101776 18.83652687]
[113.97960663 20.04388428]
[128.43222046 23.97356606]
[141.91677856 30.49177551]
[153.97416687 39.37658310]
[164.19386292 50.32548141]
[172.22790527 62.96568298]
[177.80273438 76.86682129]
[180.72857666 91.55559540]
[180.90577698 106.53187561]
[178.32832336 121.28575897]
[173.08396912 135.31491089]
[165.35127258 148.14167786]
[155.39350891 159.32933044]
[143.54972839 168.49694824]
[130.22317505 175.33239746]
[115.86758423 179.60295105]
[117.42810822 194.52156067]
[118.98863220 209.44015503]
[121.66262054 212.86123657]
[122.97673035 216.58113098]
[123.00399017 220.13566589]
[121.96070099 223.13201904]
[120.17071533 225.28935242]
[120.84049988 240.27438354]
[121.51028442 255.25942993]
[122.51454163 270.22576904]
[123.85277557 285.16595459]
[125.19100952 300.10614014]
[126.52924347 315.04632568]
[127.86747742 329.98651123]
[129.20571899 344.92669678]
[144.20507812 344.51959229]
[159.20072937 345.04580688]
[174.13465881 346.50323486]
[188.94909668 348.88632202]
[203.58671570 352.18579102]
[217.99089050 356.38891602]
[232.10591125 361.47940063]
[245.87713623 367.43756104]
[259.25131226 374.24035645]
[272.17666626 381.86148071]
[284.60324097 390.27139282]
[296.48294067 399.43762207]
[307.76977539 409.32467651]
[318.42010498 419.89428711]
[328.39273071 431.10559082]
[337.64904785 442.91522217]
[346.15325928 455.27746582]
[353.87246704 468.14447021]
[360.77679443 481.46652222]
[366.83953857 495.19204712]
[372.03723145 509.26791382]
[376.34979248 523.63970947]
[379.76049805 538.25183105]
[382.25619507 553.04766846]
[383.82720947 567.97009277]
[384.46746826 582.96130371]
[384.17446899 597.96331787]
[382.94937134 612.91815186]
[380.79687500 627.76782227]
[377.72537231 642.45495605]
[373.74670410 656.92272949]
[368.87628174 671.11517334]
[363.13293457 684.97741699]
[356.53887939 698.45568848]
[349.11965942 711.49798584]
[340.90393066 724.05383301]
[331.92349243 736.07458496]
[322.21313477 747.51373291]
[311.81036377 758.32714844]
[300.75543213 768.47283936]
[289.09115601 777.91162109]
[276.86264038 786.60699463]
[264.11715698 794.52532959]
[250.90408325 801.63592529]
[237.27447510 807.91131592]
[223.28111267 813.32727051]
[208.97810364 817.86273193]
[194.42079163 821.50018311]
[179.66549683 824.22564697]
[164.76931763 826.02844238]
[149.78987122 826.90167236]
[134.78509521 826.84191895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[52 153]
[56 152]
[57 151]
[58 150]
[59 145]
[60 144]
[61 143]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[85 119]
[86 118]
[89 116]
[90 115]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
