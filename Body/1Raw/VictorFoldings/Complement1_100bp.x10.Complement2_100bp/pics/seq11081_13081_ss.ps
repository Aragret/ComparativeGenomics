%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[26.45891762 661.48321533]
[12.72730637 667.53143311]
[-1.34443486 672.73950195]
[-15.70496082 677.08850098]
[-30.30187035 680.56243896]
[-45.08190155 683.14868164]
[-59.99112320 684.83789062]
[-74.97513580 685.62371826]
[-89.97925568 685.50347900]
[-104.94874573 684.47747803]
[-119.82897186 682.54956055]
[-134.56564331 679.72668457]
[-149.10498047 676.01916504]
[-163.39395142 671.44055176]
[-177.38038635 666.00750732]
[-191.01327515 659.73992920]
[-204.24287415 652.66070557]
[-217.02087402 644.79553223]
[-229.30068970 636.17321777]
[-241.03749084 626.82519531]
[-252.18846130 616.78558350]
[-262.71292114 606.09100342]
[-272.57244873 594.78045654]
[-281.73104858 582.89526367]
[-290.15533447 570.47875977]
[-297.81457520 557.57629395]
[-304.68081665 544.23486328]
[-310.72897339 530.50323486]
[-315.93701172 516.43145752]
[-320.28588867 502.07092285]
[-323.75976562 487.47399902]
[-326.34597778 472.69393921]
[-328.03506470 457.78472900]
[-328.82086182 442.80068970]
[-328.70053101 427.79656982]
[-327.67449951 412.82708740]
[-325.74645996 397.94686890]
[-322.92352295 383.21023560]
[-319.21594238 368.67089844]
[-314.63726807 354.38195801]
[-309.20419312 340.39553833]
[-302.93655396 326.76266479]
[-295.85720825 313.53311157]
[-287.99200439 300.75515747]
[-279.36962891 288.47537231]
[-270.02154541 276.73861694]
[-259.98187256 265.58767700]
[-249.28724670 255.06329346]
[-237.97666931 245.20382690]
[-226.09144592 236.04525757]
[-213.67489624 227.62101746]
[-200.77236938 219.96185303]
[-187.43093872 213.09568787]
[-173.69926453 207.04759216]
[-159.62748718 201.83963013]
[-145.26692200 197.49079895]
[-130.66996765 194.01698303]
[-115.88991547 191.43084717]
[-100.98068237 189.74182129]
[-85.99666595 188.95608521]
[-70.99253845 189.07649231]
[-56.02306747 190.10261536]
[-41.14285660 192.03070068]
[-26.40620995 194.85371399]
[-11.86690044 198.56135559]
[2.42202020 203.14010620]
[16.40841293 208.57324219]
[30.04124260 214.84094238]
[37.11834717 201.61541748]
[44.19545364 188.38989258]
[51.27256012 175.16436768]
[58.34966278 161.93882751]
[65.42677307 148.71330261]
[60.87738037 134.57687378]
[67.86616516 121.06349182]
[82.72460175 116.38752747]
[89.80170441 103.16199493]
[95.46449280 89.27197266]
[91.88683319 73.86058044]
[102.86920929 63.79893494]
[99.29154968 48.38754654]
[110.27392578 38.32590103]
[114.46092987 23.92211914]
[118.64794159 9.51833725]
[122.83495331 -4.88544512]
[127.02196503 -19.28922653]
[131.20898438 -33.69300842]
[117.33865356 -39.44429398]
[104.18521881 -46.68655014]
[91.90833282 -55.33185959]
[80.65704346 -65.27528381]
[70.56791687 -76.39610291]
[61.76343155 -88.55934143]
[54.35046768 -101.61733246]
[48.41900635 -115.41156769]
[44.04105377 -129.77459717]
[41.26975250 -144.53207397]
[40.13874435 -159.50485229]
[40.66176224 -174.51116943]
[42.83245087 -189.36886597]
[46.62446213 -203.89759827]
[51.99176788 -217.92097473]
[58.86921310 -231.26878357]
[67.17330933 -243.77899170]
[76.80325317 -255.29972839]
[87.64214325 -265.69113159]
[99.55841064 -274.82711792]
[112.40740204 -282.59671021]
[126.03313446 -288.90560913]
[140.27021790 -293.67727661]
[154.94581604 -296.85375977]
[169.88179016 -298.39648438]
[184.89682007 -298.28674316]
[199.80863953 -296.52584839]
[214.43623352 -293.13519287]
[228.60205078 -288.15594482]
[242.13410950 -281.64852905]
[254.86816406 -273.69192505]
[266.64959717 -264.38275146]
[277.33544922 -253.83401489]
[286.79595947 -242.17375183]
[294.91629028 -229.54350281]
[301.59790039 -216.09658813]
[306.75964355 -201.99624634]
[310.33886719 -187.41365051]
[312.29214478 -172.52580261]
[312.59576416 -157.51344299]
[311.24600220 -142.55879211]
[308.25930786 -127.84340668]
[303.67187500 -113.54589844]
[297.53939819 -99.83984375]
[289.93634033 -86.89160156]
[280.95501709 -74.85836792]
[270.70440674 -63.88620758]
[259.30895996 -54.10831451]
[246.90702820 -45.64338684]
[233.64913940 -38.59417343]
[219.69622803 -33.04624939]
[205.21766663 -29.06696129]
[190.38923645 -26.70461273]
[175.39091492 -25.98788452]
[160.40478516 -26.92547226]
[145.61276245 -29.50599861]
[141.42575073 -15.10221577]
[137.23873901 -0.69843370]
[133.05172729 13.70534801]
[128.86471558 28.10913086]
[124.67770386 42.51291275]
[128.55485535 56.89404678]
[117.27298737 67.98594666]
[121.15013123 82.36708069]
[109.86827850 93.45898438]
[120.79138184 83.17861938]
[134.78970337 77.78910828]
[149.78668213 78.08995056]
[163.55761719 84.03650665]
[174.05964661 94.74665833]
[179.73487854 108.63160706]
[179.74140930 123.63160706]
[174.07827759 137.52149963]
[163.58558655 148.24078369]
[149.81983948 154.19934082]
[134.82313538 154.51325989]
[120.82011414 149.13594055]
[109.88805389 138.86509705]
[103.64866638 125.22434998]
[103.02723694 110.23910522]
[95.95012665 123.46463013]
[100.30319214 138.42085266]
[92.93759918 151.73260498]
[78.65229797 155.79040527]
[71.57519531 169.01594543]
[64.49808502 182.24147034]
[57.42098236 195.46699524]
[50.34387589 208.69252014]
[43.26676941 221.91804504]
[56.04485703 229.78308105]
[68.32474518 238.40528870]
[80.06163788 247.75320435]
[91.21269989 257.79272461]
[101.73725128 268.48721313]
[111.59687805 279.79763794]
[120.75559998 291.68273926]
[129.18000793 304.09918213]
[136.83937073 317.00158691]
[143.70571899 330.34292603]
[149.75399780 344.07452393]
[154.96215820 358.14624023]
[159.31118774 372.50674438]
[162.78521729 387.10363770]
[165.37155151 401.88363647]
[167.06077576 416.79287720]
[167.84672546 431.77685547]
[167.72651672 446.78100586]
[166.70060730 461.75048828]
[164.77273560 476.63070679]
[161.94992065 491.36740112]
[158.24247742 505.90676880]
[153.66394043 520.19573975]
[148.23098755 534.18218994]
[141.96348572 547.81512451]
[134.88426208 561.04473877]
[127.01917267 573.82281494]
[118.39691925 586.10266113]
[109.04895020 597.83947754]
[99.00937653 608.99053955]
[88.31484222 619.51501465]
[77.00435638 629.37457275]
[65.11920166 638.53326416]
[52.70274734 646.95764160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 176]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
[76 168]
[77 167]
[78 152]
[80 150]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
