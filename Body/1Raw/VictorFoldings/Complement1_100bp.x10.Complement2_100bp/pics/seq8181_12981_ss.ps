%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[196.01744080 371.01852417]
[204.14825439 358.39682007]
[213.55386353 346.69415283]
[202.90786743 336.12710571]
[192.26185608 325.56005859]
[181.61584473 314.99301147]
[170.96983337 304.42596436]
[160.32382202 293.85891724]
[156.81553650 293.50637817]
[153.30371094 291.43704224]
[150.59338379 287.66778564]
[149.45162964 282.57431030]
[139.28807068 271.54241943]
[129.12452698 260.51055908]
[133.36798096 274.89779663]
[134.46371460 289.85772705]
[132.36190796 304.70974731]
[127.15814972 318.77819824]
[119.08920288 331.42303467]
[108.52213287 342.06903076]
[95.93768311 350.23184204]
[81.90835571 355.54013062]
[67.07238770 357.75238037]
[52.10472107 356.76800537]
[37.68628693 352.63171387]
[24.47302818 345.53173828]
[13.06605434 335.79104614]
[3.98430991 323.85281372]
[-2.35904646 310.26010132]
[-5.67543459 295.63128662]
[-5.81398106 280.63192749]
[-2.76838303 265.94436646]
[3.32280540 252.23681641]
[12.18247604 240.13282776]
[23.40757179 230.18310547]
[36.48742676 222.84025574]
[50.82699585 218.43835449]
[65.77391815 217.17764282]
[80.64822388 219.11547852]
[94.77320862 224.16371155]
[107.50630188 232.09266663]
[118.27098846 242.54498291]
[113.23406982 228.41595459]
[108.19715118 214.28692627]
[103.16024017 200.15789795]
[98.12332153 186.02885437]
[96.24224854 200.91044617]
[90.46688843 214.75404358]
[81.21415710 226.56027222]
[69.15202332 235.47682190]
[55.15126419 240.86001587]
[40.22260284 242.32122803]
[25.44375610 239.75495911]
[11.88162136 233.34649658]
[0.51525766 223.55845642]
[-7.83478498 211.09744263]
[-12.56571102 196.86303711]
[-13.33598995 181.88282776]
[-10.09001541 167.23825073]
[-3.06211615 153.98651123]
[7.24035692 143.08425903]
[20.07365990 135.31854248]
[34.51134491 131.24996948]
[49.51114273 131.17225647]
[63.99020767 135.09103394]
[76.90328217 142.72335815]
[87.31815338 153.51828003]
[94.48339081 166.69758606]
[94.03678131 151.70423889]
[93.59017944 136.71089172]
[93.14356995 121.71753693]
[83.57033539 115.77111816]
[78.02029419 105.96276855]
[77.85250854 94.69429016]
[83.10805511 84.72504425]
[92.50000000 78.49623108]
[92.50000000 63.49623108]
[92.50000000 48.49623108]
[92.50000000 33.49623108]
[92.50000000 18.49623108]
[92.50000000 3.49623156]
[92.50000000 -11.50376892]
[92.50000000 -26.50376892]
[90.19642639 -30.18446541]
[89.27645111 -34.02089310]
[89.61914062 -37.55896759]
[90.96849060 -40.43052673]
[92.97319794 -42.38993454]
[93.86601257 -57.36333847]
[83.65343475 -69.12518311]
[84.77217865 -84.29762268]
[96.04823303 -93.96128082]
[96.94104767 -108.93468475]
[90.03886414 -123.17092133]
[98.51998901 -135.41510010]
[99.41280365 -150.38850403]
[85.09336090 -155.14411926]
[72.49320984 -163.44464111]
[62.47146225 -174.72412109]
[55.71141052 -188.21353149]
[52.67396927 -202.99313354]
[53.56623840 -218.05520630]
[58.32737732 -232.37281799]
[66.63276672 -244.96975708]
[77.91612244 -254.98715210]
[91.40814209 -261.74200439]
[106.18890381 -264.77374268]
[121.25064087 -263.87564087]
[135.56640625 -259.10897827]
[148.16014099 -250.79873657]
[158.17318726 -239.51150513]
[164.92282104 -226.01687622]
[167.94883728 -211.23493958]
[167.04493713 -196.17355347]
[162.27275085 -181.85963440]
[153.95764160 -169.26910400]
[142.66654968 -159.26042175]
[129.16931152 -152.51600647]
[114.38621521 -149.49568176]
[113.49339294 -134.52227783]
[120.45943451 -121.35704041]
[111.91445160 -108.04187012]
[111.02163696 -93.06845856]
[121.06945801 -82.13333893]
[120.37731171 -66.93545532]
[108.83942413 -56.47052383]
[107.94660950 -41.49711990]
[107.50000000 -26.50376892]
[107.50000000 -11.50376892]
[107.50000000 3.49623156]
[107.50000000 18.49623108]
[107.50000000 33.49623108]
[107.50000000 48.49623108]
[107.50000000 63.49623108]
[107.50000000 78.49623108]
[120.77935028 90.67902374]
[121.04766083 108.69816589]
[108.13692474 121.27093506]
[108.58352661 136.26428223]
[109.03013611 151.25762939]
[109.47673798 166.25097656]
[112.25234985 180.99194336]
[117.28926849 195.12097168]
[122.32618713 209.25000000]
[127.36309814 223.37902832]
[132.40000916 237.50805664]
[140.15640259 250.34700012]
[150.31996155 261.37887573]
[160.48350525 272.41076660]
[170.89086914 283.21292114]
[181.53688049 293.77996826]
[192.18289185 304.34701538]
[202.82890320 314.91406250]
[213.47491455 325.48110962]
[224.12091064 336.04815674]
[235.75321960 326.55566406]
[248.31405640 318.33111572]
[261.66580200 311.46463013]
[275.66213989 306.03140259]
[290.14974976 302.09097290]
[304.96987915 299.68652344]
[319.96014404 298.84439087]
[334.95635986 299.57379150]
[349.79412842 301.86676025]
[364.31094360 305.69818115]
[378.34774780 311.02606201]
[391.75073242 317.79199219]
[404.37301636 325.92187500]
[416.07635498 335.32666016]
[426.73251343 345.90322876]
[436.22470093 357.53576660]
[444.44894409 370.09680176]
[451.31512451 383.44869995]
[456.74801636 397.44519043]
[460.68811035 411.93289185]
[463.09219360 426.75308228]
[463.93395996 441.74337769]
[463.20416260 456.73956299]
[460.91082764 471.57730103]
[457.07907104 486.09402466]
[451.75085449 500.13067627]
[444.98458862 513.53350830]
[436.85440063 526.15557861]
[427.44934082 537.85870361]
[416.87249756 548.51458740]
[405.23971558 558.00653076]
[392.67849731 566.23046875]
[379.32641602 573.09631348]
[365.32983398 578.52886963]
[350.84201050 582.46856689]
[336.02175903 584.87231445]
[321.03146362 585.71368408]
[306.03530884 584.98358154]
[291.19763184 582.68988037]
[276.68099976 578.85772705]
[262.64443970 573.52917480]
[249.24180603 566.76263428]
[236.61990356 558.63208008]
[224.91702271 549.22674561]
[214.26138306 538.64965820]
[204.76976013 527.01666260]
[196.54612732 514.45520020]
[189.68058777 501.10299683]
[184.24838257 487.10626221]
[180.30900574 472.61834717]
[177.90563965 457.79806519]
[177.06460571 442.80770874]
[177.79510498 427.81158447]
[180.08917236 412.97393799]
[183.92163086 398.45742798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 155]
[4 154]
[5 153]
[6 152]
[7 151]
[8 150]
[12 149]
[13 148]
[14 147]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[68 141]
[69 140]
[70 139]
[71 138]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[88 127]
[89 126]
[92 123]
[93 122]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
