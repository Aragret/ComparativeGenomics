%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[44.05944061 572.26141357]
[32.13857651 582.63775635]
[16.37806129 581.46234131]
[6.12832880 569.43243408]
[7.47036171 553.68518066]
[19.60795593 543.56323242]
[20.72360611 528.60479736]
[21.83925438 513.64630127]
[15.06999493 500.37884521]
[23.81227493 487.19235229]
[24.92792320 472.23391724]
[22.29062080 465.32980347]
[26.17316628 457.06158447]
[27.51140022 442.12139893]
[28.84963608 427.18121338]
[30.18787003 412.24102783]
[31.52610397 397.30084229]
[32.86433792 382.36065674]
[34.20257187 367.42047119]
[26.68946266 357.93997192]
[27.68209648 345.48211670]
[37.19202805 336.76867676]
[34.76145554 329.78912354]
[38.88845444 321.64016724]
[40.67092133 306.74642944]
[42.45338821 291.85272217]
[44.23585129 276.95901489]
[37.00834656 267.25903320]
[38.37145615 254.83622742]
[48.13660049 246.40980530]
[42.16903687 232.76290894]
[51.68069077 220.12016296]
[53.68470383 205.25463867]
[55.68871689 190.38911438]
[57.69273376 175.52359009]
[49.24153519 187.91621399]
[37.90559006 197.73947144]
[24.43677139 204.34181213]
[9.72841644 207.28532410]
[-5.24392223 206.37478638]
[-19.48718262 201.67059326]
[-32.05665970 193.48474121]
[-42.11867142 182.36016846]
[-49.00583267 169.03474426]
[-52.26134491 154.39227295]
[-51.66928482 139.40397644]
[-47.26891708 125.06392670]
[-39.35210419 112.32328033]
[-28.44394302 102.02706909]
[-15.26793003 94.85820007]
[-0.69798237 91.29216003]
[14.29952717 91.56547546]
[28.72986794 95.66001892]
[41.63592529 103.30420685]
[52.16169357 113.99103546]
[59.60902786 127.01168060]
[63.48397446 141.50253296]
[63.52888107 156.50755310]
[70.20907593 143.07717896]
[76.88927460 129.64680481]
[83.56946564 116.21643066]
[90.24966431 102.78604889]
[90.73443604 94.74008942]
[97.13059998 89.20655823]
[104.01000977 75.87712860]
[100.83890533 63.37485504]
[106.84319305 52.41437149]
[118.32573700 48.60938644]
[125.40283966 35.38386154]
[132.47994995 22.15833282]
[139.05996704 8.67859840]
[145.13380432 -5.03666830]
[151.20764160 -18.75193596]
[157.28147888 -32.46720123]
[163.35530090 -46.18246841]
[168.39222717 -60.31149673]
[172.36431885 -74.77602386]
[176.33641052 -89.24054718]
[180.30851746 -103.70507050]
[184.28060913 -118.16959381]
[180.47389221 -133.52601624]
[191.30525208 -143.75004578]
[195.27734375 -158.21456909]
[199.24943542 -172.67909241]
[189.73240662 -184.79240417]
[189.17938232 -200.00909424]
[197.59303284 -212.48605347]
[211.57293701 -217.55555725]
[215.54504395 -232.02008057]
[219.51713562 -246.48460388]
[215.71041870 -261.84103394]
[226.54177856 -272.06506348]
[222.73506165 -287.42147827]
[233.56640625 -297.64550781]
[237.53851318 -312.11004639]
[241.51060486 -326.57458496]
[227.86427307 -332.88546753]
[215.44287109 -341.35650635]
[204.58528137 -351.75665283]
[195.58770752 -363.80212402]
[188.69560242 -377.16433716]
[184.09698486 -391.47875977]
[181.91732788 -406.35488892]
[182.21606445 -421.38687134]
[184.98506165 -436.16464233]
[190.14878845 -450.28503418]
[197.56636047 -463.36285400]
[207.03541565 -475.04135132]
[218.29765320 -485.00186157]
[231.04580688 -492.97271729]
[244.93211365 -498.73641968]
[259.57772827 -502.13577271]
[274.58312988 -503.07800293]
[289.53894043 -501.53744507]
[304.03717041 -497.55609131]
[317.68231201 -491.24255371]
[330.10205078 -482.76910400]
[340.95764160 -472.36688232]
[349.95291138 -460.31967163]
[356.84243774 -446.95614624]
[361.43829346 -432.64083862]
[363.61508179 -417.76431274]
[363.31344604 -402.73236084]
[360.54159546 -387.95513916]
[355.37515259 -373.83572388]
[347.95507812 -360.75933838]
[338.48376465 -349.08267212]
[327.21960449 -339.12432861]
[314.46990967 -331.15594482]
[300.58251953 -325.39489746]
[285.93621826 -321.99838257]
[270.93063354 -321.05902100]
[255.97512817 -322.60247803]
[252.00303650 -308.13793945]
[248.03092957 -293.67343140]
[252.12176514 -279.35162354]
[241.00630188 -268.09295654]
[245.09712219 -253.77114868]
[233.98165894 -242.51251221]
[230.00956726 -228.04798889]
[226.03746033 -213.58346558]
[235.46774292 -202.08529663]
[236.32934570 -187.06126404]
[228.08262634 -174.26106262]
[213.71395874 -168.70700073]
[209.74186707 -154.24247742]
[205.76977539 -139.77795410]
[209.86059570 -125.45613861]
[198.74513245 -114.19749451]
[194.77304077 -99.73297119]
[190.80093384 -85.26844788]
[186.82884216 -70.80392456]
[182.85675049 -56.33940125]
[194.59739685 -65.67519379]
[209.41809082 -67.98760986]
[223.44471741 -62.67218399]
[233.01075745 -51.11836243]
[235.61567688 -36.34627914]
[230.57853699 -22.21732521]
[219.21606445 -12.42477512]
[204.49835205 -9.52837753]
[190.27259827 -14.28524494]
[180.25735474 -25.45194244]
[177.07057190 -40.10863495]
[170.99673462 -26.39336777]
[164.92291260 -12.67810154]
[158.84907532 1.03716540]
[152.77523804 14.75243187]
[167.49507141 11.86686897]
[179.02703857 21.45925140]
[178.87019348 36.45843124]
[167.14016724 45.80757141]
[152.48388672 42.61483383]
[145.70547485 29.23543739]
[138.62837219 42.46096420]
[131.55125427 55.68649292]
[133.06161499 73.17036438]
[117.33943939 82.75654602]
[110.46002960 96.08597565]
[103.68003845 109.46624756]
[96.99983978 122.89662170]
[90.31964874 136.32699585]
[83.63945007 149.75737000]
[76.95925903 163.18774414]
[72.55825806 177.52760315]
[70.55424500 192.39312744]
[68.55023193 207.25865173]
[66.54621887 222.12417603]
[72.37043762 236.83435059]
[63.00212860 248.41381836]
[70.38954926 265.28115845]
[59.12957001 278.74145508]
[57.34710312 293.63519287]
[55.56463623 308.52890015]
[53.78217316 323.42260742]
[52.11063004 338.32919312]
[59.99697876 354.96911621]
[49.14275742 368.75869751]
[47.80452347 383.69888306]
[46.46628952 398.63906860]
[45.12805557 413.57925415]
[43.78982162 428.51943970]
[42.45158768 443.45962524]
[41.11335373 458.39981079]
[39.88637543 473.34954834]
[38.77072906 488.30801392]
[45.46018982 502.64541626]
[36.79770660 514.76196289]
[35.68206024 529.72039795]
[34.56641006 544.67889404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[10 206]
[11 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[22 196]
[24 195]
[25 194]
[26 193]
[27 192]
[30 190]
[32 188]
[33 187]
[34 186]
[35 185]
[58 184]
[59 183]
[60 182]
[61 181]
[62 180]
[64 179]
[65 178]
[68 176]
[69 175]
[70 174]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[76 153]
[77 152]
[78 151]
[79 150]
[80 149]
[82 147]
[83 146]
[84 145]
[88 141]
[89 140]
[90 139]
[92 137]
[94 135]
[95 134]
[96 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
