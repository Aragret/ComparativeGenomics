%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[153.21824646 644.57763672]
[144.54594421 632.32653809]
[136.99032593 619.35693359]
[130.61054993 605.77032471]
[125.45654297 591.67303467]
[121.56862640 577.17541504]
[118.97724152 562.39086914]
[117.70267487 547.43518066]
[117.75488281 532.42535400]
[119.13347626 517.47888184]
[121.82765961 502.71270752]
[125.81634521 488.24246216]
[131.06831360 474.18136597]
[137.54246521 460.63946533]
[145.18812561 447.72274780]
[153.94544983 435.53231812]
[163.74591064 424.16357422]
[174.51280212 413.70547485]
[186.16186523 404.23989868]
[198.60191345 395.84091187]
[211.73558044 388.57427979]
[205.66175842 374.85900879]
[199.58792114 361.14373779]
[187.35975647 352.63952637]
[188.84635925 336.88833618]
[176.61819458 328.38415527]
[178.10481262 312.63293457]
[172.03097534 298.91766357]
[165.95713806 285.20239258]
[159.88331604 271.48712158]
[153.80947876 257.77188110]
[147.73564148 244.05659485]
[141.66180420 230.34133911]
[135.58796692 216.62606812]
[123.35980988 208.12187195]
[124.84642029 192.37066650]
[112.61825562 183.86648560]
[114.10486603 168.11526489]
[109.64753723 182.43771362]
[97.69226074 191.49703979]
[82.69806671 191.91435242]
[70.25741577 183.53401184]
[65.01036835 169.48165894]
[68.91393280 154.99848938]
[80.51218414 145.48635864]
[95.47926331 144.49307251]
[108.23356628 152.38996887]
[103.83257294 138.05010986]
[99.43157196 123.71027374]
[95.03057861 109.37042236]
[90.09898376 95.20428467]
[84.64362335 81.23149109]
[79.18827057 67.25868988]
[66.96183014 57.21754074]
[69.54048920 42.54785156]
[64.08512878 28.57505417]
[58.62977600 14.60225582]
[53.17441940 0.62945759]
[47.71906281 -13.34333992]
[42.80451584 -17.76587296]
[41.11483002 -23.19191933]
[42.31611252 -27.81425285]
[40.53111267 -12.92083836]
[35.14601517 1.07918775]
[26.49012184 13.32971954]
[15.09274578 23.08163261]
[1.65083766 29.73859215]
[-13.01362324 32.89352417]
[-28.00389862 32.35350418]
[-42.40332794 28.15155029]
[-55.33138275 20.54461861]
[-65.99750519 9.99787235]
[-73.74945831 -2.84374809]
[-78.11320496 -17.19497490]
[-78.82190704 -32.17822266]
[-75.83222198 -46.87726212]
[-69.32696533 -60.39324188]
[-59.70394897 -71.89965057]
[-47.55161285 -80.69287109]
[-33.61308289 -86.23519897]
[-18.74069977 -88.18770599]
[-3.84392238 -86.43100739]
[10.16630936 -81.07251740]
[22.43326378 -72.43991089]
[32.20681381 -61.06108475]
[38.88930893 -47.63182068]
[38.88930893 -62.63182068]
[38.88930893 -77.63182068]
[38.88930893 -92.63182068]
[30.33748436 -102.28734589]
[30.64628983 -114.78087616]
[39.10493088 -123.42830658]
[39.32825851 -138.42663574]
[39.55158615 -153.42497253]
[39.77491379 -168.42330933]
[36.77362061 -177.05059814]
[40.11487961 -183.64285278]
[40.56148529 -198.63619995]
[26.46879768 -204.21939087]
[15.13763046 -214.28817749]
[7.93627405 -227.62670898]
[5.73432827 -242.62428284]
[8.79768848 -257.46987915]
[16.75643921 -270.37081909]
[28.64952278 -279.76922607]
[43.04079056 -284.53024292]
[58.19242859 -284.07891846]
[72.27480316 -278.46975708]
[83.58739471 -268.38012695]
[90.76416016 -255.02833557]
[92.93846130 -240.02673340]
[89.84774780 -225.18681335]
[81.86523438 -212.30056763]
[69.95484924 -202.92407227]
[55.55483246 -198.18959045]
[55.10822678 -183.19624329]
[54.77325058 -168.19998169]
[54.54992294 -153.20164490]
[54.32659531 -138.20330811]
[54.10326767 -123.20497894]
[63.46399307 -108.36099243]
[53.88930893 -92.63182068]
[53.88930893 -77.63182068]
[53.88930893 -62.63182068]
[53.88930893 -47.63182068]
[56.44514084 -32.85116959]
[61.69186020 -18.79869652]
[67.14721680 -4.82589960]
[72.60256958 9.14689827]
[78.05792999 23.11969566]
[83.51329041 37.09249496]
[95.34952545 46.13421631]
[93.16106415 61.80333328]
[98.61642456 75.77613068]
[104.07177734 89.74893188]
[112.39347839 77.26897430]
[127.32543945 75.84188843]
[137.86038208 86.51967621]
[136.23233032 101.43106079]
[123.64142609 109.58393097]
[109.37042236 104.96942139]
[113.77142334 119.30927277]
[118.17241669 133.64912415]
[122.57341766 147.98896790]
[127.82013702 162.04144287]
[140.48274231 171.52664185]
[138.56169128 186.29682922]
[151.22428894 195.78202820]
[149.30323792 210.55223083]
[155.37707520 224.26750183]
[161.45091248 237.98277283]
[167.52474976 251.69802856]
[173.59857178 265.41329956]
[179.67240906 279.12857056]
[185.74624634 292.84384155]
[191.82008362 306.55911255]
[204.48268127 316.04431152]
[202.56163025 330.81451416]
[215.22424316 340.29968262]
[213.30317688 355.06988525]
[219.37701416 368.78515625]
[225.45085144 382.50042725]
[239.65850830 377.65890503]
[254.23844910 374.09204102]
[269.07659912 371.82769775]
[284.05679321 370.88363647]
[299.06179810 371.26724243]
[313.97421265 372.97549438]
[328.67727661 375.99502563]
[343.05590820 380.30221558]
[356.99765015 385.86334229]
[370.39328003 392.63491821]
[383.13806152 400.56387329]
[395.13217163 409.58822632]
[406.28176880 419.63729858]
[416.49960327 430.63247681]
[425.70568848 442.48767090]
[433.82794189 455.11013794]
[440.80285645 468.40103149]
[446.57580566 482.25637817]
[451.10162354 496.56771851]
[454.34487915 511.22305298]
[456.28018188 526.10766602]
[456.89239502 541.10510254]
[456.17672729 556.09796143]
[454.13879395 570.96887207]
[450.79452515 585.60150146]
[446.17007446 599.88128662]
[440.30166626 613.69647217]
[433.23522949 626.93896484]
[425.02609253 639.50506592]
[415.73843384 651.29650879]
[405.44500732 662.22088623]
[394.22634888 672.19281006]
[382.17025757 681.13421631]
[369.37109375 688.97503662]
[355.92904663 695.65405273]
[341.94927979 701.11889648]
[327.54125977 705.32678223]
[312.81771851 708.24481201]
[297.89389038 709.85009766]
[282.88659668 710.13018799]
[267.91326904 709.08282471]
[253.09109497 706.71618652]
[238.53608704 703.04876709]
[224.36218262 698.10937500]
[210.68028259 691.93658447]
[197.59748840 684.57873535]
[185.21617126 676.09338379]
[173.63325500 666.54699707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 162]
[22 161]
[23 160]
[25 158]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[36 147]
[38 145]
[47 144]
[48 143]
[49 142]
[50 141]
[51 135]
[52 134]
[53 133]
[55 131]
[56 130]
[57 129]
[58 128]
[59 127]
[62 126]
[86 125]
[87 124]
[88 123]
[89 122]
[92 120]
[93 119]
[94 118]
[95 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
