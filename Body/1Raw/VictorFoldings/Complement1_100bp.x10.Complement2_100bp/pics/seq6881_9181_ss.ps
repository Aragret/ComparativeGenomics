%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[40.36982727 472.43179321]
[39.39131165 487.44366455]
[35.67079926 502.02011108]
[29.33500290 515.66461182]
[20.59972191 527.91247559]
[9.76247597 538.34649658]
[-2.80762148 546.61126709]
[-16.68243790 552.42541504]
[-31.38940430 555.59082031]
[-46.42760468 555.99969482]
[-61.28484344 553.63812256]
[-75.45509338 548.58648682]
[-88.45571136 541.01690674]
[-99.84391022 531.18719482]
[-109.23180389 519.43212891]
[-116.29965210 506.15203857]
[-120.80672455 491.79931641]
[-122.59951019 476.86276245]
[-121.61695099 461.85113525]
[-117.89250946 447.27569580]
[-111.55303192 433.63290405]
[-102.81445312 421.38742065]
[-91.97439575 410.95632935]
[-79.40206909 402.69488525]
[-65.52568817 396.88449097]
[-50.81786728 393.72305298]
[-35.77955627 393.31823730]
[-20.92295456 395.68383789]
[-15.88603783 381.55480957]
[-10.84912205 367.42578125]
[-5.81220579 353.29675293]
[-9.89942455 336.23034668]
[4.22677660 324.41799927]
[9.05277443 310.21554565]
[5.82164860 295.67562866]
[17.58753395 285.09854126]
[22.41353035 270.89608765]
[8.51475811 276.53738403]
[-5.35524368 270.82571411]
[-11.25110817 257.03302002]
[-5.79541636 243.06033325]
[7.88656378 236.91189575]
[21.95717239 242.10977173]
[28.35607719 255.67544556]
[34.42991257 241.96018982]
[40.50374603 228.24491882]
[46.57757950 214.52964783]
[52.34361267 200.68215942]
[57.79896927 186.70936584]
[63.25432587 172.73657227]
[68.70968628 158.76377869]
[66.13101959 144.09408569]
[78.35746002 134.05293274]
[83.81282043 120.08013153]
[89.26817322 106.10733795]
[77.98973846 115.99655914]
[64.32209015 122.17681885]
[49.44763565 124.11344910]
[34.65315628 121.63891602]
[21.21851921 114.96729279]
[10.30595875 104.67573547]
[2.85952044 91.65457916]
[-0.47660458 77.03027344]
[0.58619159 62.06797409]
[5.95596647 48.06206512]
[15.16818142 36.22419739]
[27.42588615 27.57846642]
[41.66866684 22.87281418]
[56.66438293 22.51432800]
[71.11575317 26.53401756]
[83.77259064 34.58414078]
[93.53994751 45.96828461]
[99.57286072 59.70160294]
[101.34941101 74.59602356]
[98.71703339 89.35970306]
[107.85583496 77.46507263]
[116.99463654 65.57044220]
[119.26694489 49.91326523]
[133.15657043 44.53482437]
[142.29537964 32.64019394]
[151.43417358 20.74555969]
[160.03274536 8.45472145]
[168.07391357 -4.20780325]
[176.11508179 -16.87032890]
[183.38832092 -29.98902130]
[189.86781311 -43.51736832]
[196.34730530 -57.04571152]
[202.82679749 -70.57405853]
[209.30630493 -84.10240173]
[213.92030334 -98.37513733]
[216.58610535 -113.13635254]
[219.25190735 -127.89757538]
[221.91769409 -142.65878296]
[224.58349609 -157.42001343]
[227.24928284 -172.18122864]
[229.91508484 -186.94244385]
[232.14019775 -201.77648926]
[233.92266846 -216.67019653]
[235.70513916 -231.56391907]
[221.81446838 -237.49909973]
[210.15950012 -247.10836792]
[201.68501282 -259.61276245]
[197.07800293 -273.99859619]
[196.71195984 -289.09967041]
[200.61653137 -303.69183350]
[208.47521973 -316.59213257]
[219.65092468 -326.75482178]
[233.23770142 -333.35604858]
[248.13412476 -335.86065674]
[263.13262939 -334.06567383]
[277.01730347 -328.11654663]
[288.66262817 -318.49557495]
[297.12454224 -305.98266602]
[301.71710205 -291.59219360]
[302.06796265 -276.49075317]
[298.14874268 -261.90252686]
[290.27709961 -249.01013184]
[279.09118652 -238.85868835]
[265.49777222 -232.27111816]
[250.59884644 -229.78144836]
[248.81637573 -214.88774109]
[247.03392029 -199.99401855]
[248.65849304 -197.70953369]
[249.47602844 -194.64387512]
[249.18447876 -191.10121155]
[247.59733582 -187.48936462]
[244.67630005 -184.27664185]
[242.01049805 -169.51542664]
[239.34471130 -154.75421143]
[236.67890930 -139.99299622]
[234.01312256 -125.23177338]
[231.34732056 -110.47055817]
[228.68153381 -95.70934296]
[237.93193054 -107.51739502]
[250.34327698 -115.94107819]
[264.73260498 -120.17749786]
[279.72839355 -119.82287598]
[293.90139771 -114.91099548]
[305.90066528 -105.91003418]
[314.58255005 -93.67790985]
[319.11953735 -79.38050079]
[319.07919312 -64.38055420]
[314.46533203 -50.10776901]
[305.71777344 -37.92253113]
[293.67022705 -28.98626137]
[279.47103882 -24.15071106]
[264.47354126 -23.87677002]
[250.10720825 -28.19054985]
[237.74136353 -36.68088913]
[228.55462646 -48.53854370]
[223.42262268 -62.63331604]
[222.83464050 -77.62290955]
[216.35514832 -64.09456635]
[209.87565613 -50.56621552]
[203.39616394 -37.03787231]
[196.91665649 -23.50952530]
[210.70013428 -29.42695427]
[225.35441589 -26.22511101]
[235.41384888 -15.09820461]
[237.12648010 -0.19629636]
[229.85356140 12.92257023]
[216.30770874 19.36538315]
[201.54118347 16.72913170]
[191.06153870 5.99707270]
[188.77761841 -8.82915497]
[180.73643494 3.83336997]
[172.69526672 16.49589539]
[187.53273010 14.29373360]
[199.66319275 23.11710358]
[202.13777161 37.91157532]
[193.53892517 50.20220947]
[178.79243469 52.94836807]
[166.34579468 44.57692719]
[163.32881165 29.88436127]
[154.19000244 41.77899551]
[145.05120850 53.67362976]
[143.43255615 68.48001862]
[128.88926697 74.70924377]
[119.75046539 86.60387421]
[110.61166382 98.49850464]
[103.24097443 111.56269073]
[97.78561401 125.53549194]
[92.33026123 139.50828552]
[94.51871490 155.17739868]
[82.68247986 164.21913147]
[77.22712708 178.19192505]
[71.77176666 192.16471863]
[66.31640625 206.13752747]
[67.10528564 211.29743958]
[65.95140076 215.79431152]
[63.43266296 218.99916077]
[60.29284668 220.60348511]
[54.21901321 234.31875610]
[48.14517593 248.03401184]
[42.07134247 261.74929810]
[36.61598587 275.72207642]
[31.78998947 289.92453003]
[34.67592621 305.48031616]
[23.25522995 315.04153442]
[18.42923164 329.24398804]
[23.41985703 341.13754272]
[19.10788536 352.86743164]
[8.31682396 358.33364868]
[3.27990770 372.46267700]
[-1.75700843 386.59170532]
[-6.79392481 400.72073364]
[6.20873547 408.28680420]
[17.59958267 418.11346436]
[26.99064827 429.86602783]
[34.06207657 443.14419556]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 206]
[29 205]
[30 204]
[31 203]
[33 200]
[34 199]
[36 197]
[37 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 188]
[49 187]
[50 186]
[51 185]
[53 183]
[54 182]
[55 181]
[75 180]
[76 179]
[77 178]
[79 176]
[80 175]
[81 174]
[82 167]
[83 166]
[84 165]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
