%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[153.95370483 413.74963379]
[164.64486694 403.09124756]
[177.81575012 395.71353149]
[174.27607727 381.13714600]
[170.73640442 366.56076050]
[160.21426392 356.01876831]
[164.47650146 340.78250122]
[160.93682861 326.20614624]
[157.39715576 311.62976074]
[153.85748291 297.05337524]
[150.31781006 282.47702026]
[146.77813721 267.90063477]
[143.23846436 253.32426453]
[132.71632385 242.78225708]
[136.97857666 227.54598999]
[133.43890381 212.96961975]
[129.89923096 198.39323425]
[126.35955811 183.81686401]
[121.72641754 178.05876160]
[122.87741089 168.99713135]
[117.94581604 154.83099365]
[111.46632385 141.30264282]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[66.05504608 68.65515137]
[68.08528900 51.22400284]
[61.40509033 37.79362869]
[54.72489548 24.36325073]
[48.04470062 10.93287563]
[44.34299469 8.66322041]
[41.81074905 5.63795042]
[40.54190445 2.31749249]
[40.47122192 -0.85451216]
[41.39353943 -3.50167441]
[35.52458191 -17.30585098]
[29.65561867 -31.11002731]
[23.78665924 -44.91420364]
[15.93490314 -57.69504929]
[6.27409267 -69.16974640]
[-3.38671780 -80.64444733]
[-18.46292496 -78.06467438]
[-32.71212387 -83.34265900]
[-42.34229660 -94.96704102]
[-44.84424973 -109.75203705]
[-39.64477539 -123.71022797]
[-54.45170975 -129.28384399]
[-56.72988129 -144.00318909]
[-66.39069366 -155.47789001]
[-76.05150604 -166.95259094]
[-88.46947479 -158.51470947]
[-101.68923950 -151.39839172]
[-115.57064819 -145.67907715]
[-129.96655273 -141.41740417]
[-144.72434998 -138.65853882]
[-159.68760681 -137.43173218]
[-174.69769287 -137.74998474]
[-189.59550476 -139.60993958]
[-204.22309875 -142.99185181]
[-218.42543030 -147.85989380]
[-232.05195618 -154.16244507]
[-244.95819092 -161.83270264]
[-257.00735474 -170.78935242]
[-268.07171631 -180.93746948]
[-278.03396606 -192.16946411]
[-286.78851318 -204.36625671]
[-294.24255371 -217.39857483]
[-300.31707764 -231.12826538]
[-304.94766235 -245.40977478]
[-308.08526611 -260.09170532]
[-309.69659424 -275.01846313]
[-309.76458740 -290.03176880]
[-308.28851318 -304.97250366]
[-305.28399658 -319.68225098]
[-300.78292847 -334.00509644]
[-294.83300781 -347.78924561]
[-287.49731445 -360.88854980]
[-278.85357666 -373.16412354]
[-268.99346924 -384.48587036]
[-258.02148438 -394.73376465]
[-246.05392456 -403.79919434]
[-233.21768188 -411.58602905]
[-219.64880371 -418.01174927]
[-205.49114990 -423.00820923]
[-190.89477539 -426.52246094]
[-176.01441956 -428.51724243]
[-161.00782776 -428.97143555]
[-146.03408813 -427.88018799]
[-131.25189209 -425.25509644]
[-116.81798553 -421.12399292]
[-102.88534546 -415.53063965]
[-89.60167694 -408.53433228]
[-77.10779572 -400.20925903]
[-65.53613281 -390.64364624]
[-55.00936890 -379.93893433]
[-45.63908386 -368.20855713]
[-37.52461243 -355.57687378]
[-30.75197029 -342.17779541]
[-25.39295197 -328.15335083]
[-21.50436592 -313.65219116]
[-19.12743378 -298.82809448]
[-18.28735161 -283.83816528]
[-18.99302483 -268.84127808]
[-21.23697472 -253.99645996]
[-24.99541283 -239.46105957]
[-30.22849655 -225.38914490]
[-36.88075256 -211.92988586]
[-44.88166428 -199.22596741]
[-54.14641953 -187.41206360]
[-64.57680511 -176.61340332]
[-54.91599274 -165.13870239]
[-45.25518036 -153.66400146]
[-31.13925171 -148.91113281]
[-28.17007446 -133.37103271]
[-13.53006458 -136.11616516]
[0.61242819 -131.13159180]
[10.42594624 -119.66158295]
[13.19884872 -104.72144318]
[8.08798218 -90.30525970]
[17.74879265 -78.83055878]
[27.40960312 -67.35585785]
[24.03490067 -81.97130585]
[24.85703087 -96.94876099]
[29.81115532 -111.10703278]
[38.50656891 -123.32954407]
[50.25752258 -132.65237427]
[64.13727570 -138.34028625]
[79.05122375 -139.94470215]
[93.82318878 -137.33911133]
[107.28818512 -130.72897339]
[118.38431549 -120.63561249]
[126.23648071 -107.85502625]
[130.22544861 -93.39514160]
[130.03660583 -78.39633179]
[125.68486023 -64.04146576]
[117.51340485 -51.46261597]
[106.16667938 -41.65181732]
[92.53952789 -35.38278198]
[77.70664978 -33.14991760]
[62.83782578 -35.12931442]
[49.10567093 -41.16486740]
[37.59083557 -50.78316498]
[43.45979691 -36.97898865]
[49.32875824 -23.17481232]
[55.19771957 -9.37063503]
[61.47507858 4.25268078]
[68.15527344 17.68305779]
[74.83546448 31.11343384]
[81.51566315 44.54380798]
[92.87982178 48.68898392]
[98.55511475 59.82337952]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[124.99466705 134.82315063]
[131.47416687 148.35150146]
[132.53837585 133.38929749]
[138.86968994 119.79097748]
[149.63513184 109.34562683]
[163.41830444 103.42751312]
[178.40580750 102.81526947]
[192.62576294 107.58943939]
[204.20730591 117.12191010]
[211.62667847 130.15850830]
[213.90773010 144.98405457]
[210.75036621 159.64797974]
[202.56996155 172.22102356]
[190.44282532 181.04895020]
[175.96446228 184.97030640]
[161.03976440 183.46917725]
[147.63232422 176.74305725]
[137.50486755 165.67486572]
[140.93592834 180.27719116]
[144.47560120 194.85356140]
[148.01527405 209.42994690]
[151.55494690 224.00631714]
[162.33027649 235.59091187]
[157.81484985 249.78459167]
[161.35452271 264.36096191]
[164.89419556 278.93734741]
[168.43386841 293.51370239]
[171.97354126 308.09008789]
[175.51321411 322.66647339]
[179.05288696 337.24282837]
[189.82820129 348.82742310]
[185.31277466 363.02108765]
[188.85244751 377.59747314]
[192.39212036 392.17385864]
[207.47976685 392.68936157]
[221.86846924 397.25747681]
[234.49052429 405.53915405]
[244.40927124 416.91989136]
[250.88867188 430.55514526]
[253.44793701 445.43307495]
[251.89710999 460.44964600]
[246.35131836 474.49053955]
[237.22206116 486.51382446]
[225.18679810 495.62728882]
[211.13864136 501.15463257]
[196.12004089 502.68572998]
[181.24548340 500.10696411]
[167.61875916 493.60964966]
[156.25106812 483.67596436]
[147.98594666 471.04306030]
[143.43675232 456.64837646]
[142.94104004 441.56005859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 192]
[4 191]
[5 190]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[15 180]
[16 179]
[17 178]
[18 177]
[20 176]
[21 160]
[22 159]
[23 158]
[24 157]
[26 155]
[27 154]
[29 151]
[30 150]
[31 149]
[32 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 123]
[42 122]
[43 121]
[48 116]
[50 114]
[51 113]
[52 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
