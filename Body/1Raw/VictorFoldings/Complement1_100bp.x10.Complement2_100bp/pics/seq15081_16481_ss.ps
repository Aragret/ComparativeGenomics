%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[91.46880341 608.09332275]
[77.28990173 613.18310547]
[62.33383179 614.98968506]
[47.35079193 613.42242432]
[33.09232712 608.55993652]
[20.27363396 600.64611816]
[9.53769302 590.07788086]
[1.42301488 577.38537598]
[-3.66337252 563.20526123]
[-5.46633768 548.24871826]
[-3.89544439 533.26605225]
[0.97051185 519.00878906]
[8.88745689 506.19201660]
[19.45827866 495.45861816]
[32.15275192 487.34701538]
[46.33412552 482.26406860]
[61.29106903 480.46472168]
[62.85158920 465.54614258]
[64.41210938 450.62753296]
[65.97263336 435.70892334]
[67.42205811 420.77911377]
[68.76029205 405.83892822]
[62.18931580 392.47210693]
[71.12695312 379.41726685]
[72.46518707 364.47708130]
[64.95207977 354.99658203]
[65.94470978 342.53872681]
[75.45464325 333.82528687]
[77.01515961 318.90667725]
[78.57568359 303.98806763]
[71.20455933 294.39675903]
[72.38256073 281.95504761]
[82.02117157 273.38418579]
[83.80363464 258.49044800]
[85.58609772 243.59674072]
[87.36856842 228.70301819]
[88.59554291 213.75329590]
[89.26532745 198.76824951]
[82.10404968 185.70819092]
[90.44983673 172.26725769]
[91.11962891 157.28222656]
[91.78941345 142.29718018]
[92.45919800 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[79.57582092 63.93588257]
[74.79728699 49.47839355]
[79.39376068 35.14882660]
[91.40293121 26.37854958]
[91.17960358 11.38021278]
[90.95627594 -3.61812449]
[90.73294830 -18.61646271]
[90.50962067 -33.61479950]
[90.28629303 -48.61313629]
[89.83969116 -63.60648727]
[89.16990662 -78.59152222]
[88.50012207 -93.57656097]
[78.23263550 -108.86251831]
[86.92121124 -124.10967255]
[86.02838898 -139.08306885]
[85.13557434 -154.05648804]
[72.22730255 -162.46377563]
[66.80797577 -176.69348145]
[70.76001740 -191.21398926]
[82.36560059 -200.51176453]
[81.47278595 -215.48516846]
[77.83813477 -223.86532593]
[80.67982483 -230.68783569]
[80.01004028 -245.67286682]
[79.34025574 -260.65789795]
[78.44744110 -275.63131714]
[77.33179474 -290.58978271]
[76.21614075 -305.54821777]
[75.10049438 -320.50668335]
[73.98484802 -335.46511841]
[72.86919403 -350.42358398]
[71.75354767 -365.38204956]
[70.63790131 -380.34048462]
[69.52225494 -395.29895020]
[61.10606766 -382.88250732]
[47.35528183 -376.88952637]
[32.53072357 -379.17697144]
[21.22594261 -389.03607178]
[16.94384956 -403.41189575]
[21.01129532 -417.84988403]
[32.16794205 -427.87631226]
[46.95677567 -430.38436890]
[60.79531860 -424.59692383]
[69.39562988 -412.30700684]
[70.28844452 -427.28039551]
[63.38626480 -441.51663208]
[71.86738586 -453.76080322]
[72.76020813 -468.73422241]
[73.65302277 -483.70761108]
[74.54583740 -498.68103027]
[75.43865204 -513.65441895]
[76.33146667 -528.62786865]
[62.41126251 -534.62817383]
[51.38490295 -545.02984619]
[44.58387756 -558.57684326]
[42.82944107 -573.63336182]
[46.33345413 -588.38116455]
[54.67278290 -601.03942871]
[66.84042358 -610.07958984]
[81.36705780 -614.40997314]
[96.49854279 -613.50775146]
[110.40766907 -607.48181152]
[121.41484070 -597.05981445]
[128.19088745 -583.50024414]
[129.91757202 -568.44055176]
[126.38639069 -553.69921875]
[118.02375031 -541.05639648]
[105.83946991 -532.03863525]
[91.30487823 -527.73504639]
[90.41205597 -512.76159668]
[89.51924133 -497.78820801]
[88.62642670 -482.81481934]
[87.73361206 -467.84140015]
[86.84079742 -452.86798096]
[93.80683899 -439.70275879]
[85.26185608 -426.38757324]
[84.36904144 -411.41418457]
[84.48070526 -396.41458130]
[85.59635162 -381.45614624]
[86.71200562 -366.49768066]
[87.82765198 -351.53924561]
[88.94329834 -336.58078003]
[90.05894470 -321.62231445]
[91.17459869 -306.66387939]
[92.29024506 -291.70541382]
[93.40589142 -276.74697876]
[96.37597656 -273.00695801]
[97.02812958 -267.36145020]
[94.32529449 -261.32769775]
[94.99507904 -246.34265137]
[95.66486359 -231.35762024]
[96.44618988 -216.37797546]
[97.33900452 -201.40457153]
[109.96721649 -193.55178833]
[115.61674500 -179.60379028]
[111.92675018 -164.83093262]
[100.10898590 -154.94929504]
[101.00180054 -139.97589111]
[101.89461517 -125.00248718]
[110.73094940 -116.74138641]
[111.59731293 -104.27410126]
[103.48516083 -94.24635315]
[104.15494537 -79.26131439]
[104.82472992 -64.27627563]
[107.68213654 -60.44948959]
[108.16591644 -54.78707123]
[105.28462982 -48.83646393]
[105.50795746 -33.83812714]
[105.73128510 -18.83979034]
[105.95461273 -3.84145236]
[106.17794037 11.15688515]
[106.40126801 26.15522194]
[118.66624451 34.56405640]
[123.68732452 48.75041199]
[119.34136200 63.34376907]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[110.03897858 115.73647308]
[111.01596832 119.55877686]
[110.72599792 123.10156250]
[109.41954803 125.99289703]
[107.44423676 127.98193359]
[106.77445221 142.96696472]
[106.10466766 157.95201111]
[105.43487549 172.93704224]
[112.54824829 187.06893921]
[104.25036621 199.43803406]
[103.58058167 214.42308044]
[116.24295044 206.38165283]
[130.47386169 211.12307739]
[135.78282166 225.15216064]
[128.25625610 238.12716675]
[113.44247437 240.48341370]
[102.26228333 230.48548889]
[100.47982025 245.37921143]
[98.69734955 260.27291870]
[96.91488647 275.16662598]
[104.55261993 291.92211914]
[93.49429321 305.54858398]
[91.93376923 320.46719360]
[90.37324524 335.38580322]
[98.25959015 352.02572632]
[87.40537262 365.81530762]
[86.06713867 380.75549316]
[92.54238892 395.19091797]
[83.70047760 407.17715454]
[82.36224365 422.11734009]
[84.71355438 430.94396973]
[80.89124298 437.26943970]
[79.33071899 452.18804932]
[77.77019501 467.10665894]
[76.20967102 482.02526855]
[90.47048950 486.88085938]
[103.29301453 494.78848267]
[114.03408051 505.35150146]
[122.15490723 518.04003906]
[127.24816895 532.21771240]
[129.05838013 547.17333984]
[127.49474335 562.15679932]
[122.63569641 576.41644287]
[114.72496796 589.23706055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 201]
[18 200]
[19 199]
[20 198]
[21 196]
[22 195]
[24 193]
[25 192]
[28 190]
[29 189]
[30 188]
[33 186]
[34 185]
[35 184]
[36 183]
[37 177]
[38 176]
[40 174]
[41 173]
[42 172]
[43 171]
[44 166]
[46 164]
[47 163]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 151]
[58 150]
[59 149]
[61 146]
[62 145]
[63 144]
[67 140]
[68 139]
[70 138]
[71 137]
[72 136]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[91 124]
[92 123]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
