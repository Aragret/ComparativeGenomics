%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[92.02870178 158.67663574]
[93.11656952 173.64389038]
[93.10899353 188.65063477]
[92.00601196 203.61679077]
[89.81350708 218.46250916]
[86.54317474 233.10858154]
[82.21247101 247.47685242]
[76.84449005 261.49069214]
[70.46788788 275.07528687]
[63.11668015 288.15817261]
[54.83008575 300.66955566]
[45.65232086 312.54269409]
[35.63235092 323.71420288]
[24.82364273 334.12448120]
[13.28386211 343.71801758]
[1.07458007 352.44360352]
[-11.73906136 360.25466919]
[-25.08869362 367.10958862]
[-38.90309143 372.97174072]
[-53.10854721 377.80984497]
[-67.62927246 381.59814453]
[-82.38778687 384.31634521]
[-97.30534363 385.95001221]
[-112.30235291 386.49038696]
[-127.29880524 385.93463135]
[-142.21467590 384.28564453]
[-156.97039795 381.55230713]
[-171.48722839 377.74911499]
[-185.68769836 372.89642334]
[-199.49607849 367.02011108]
[-212.83866882 360.15148926]
[-225.64428711 352.32727051]
[-237.84461975 343.58917236]
[-249.37454224 333.98379517]
[-260.17257690 323.56240845]
[-270.18106079 312.38061523]
[-279.34664917 300.49810791]
[-287.62039185 287.97821045]
[-294.95816040 274.88778687]
[-301.32083130 261.29666138]
[-306.67443848 247.27732849]
[-310.99038696 232.90461731]
[-314.24569702 218.25518799]
[-316.42294312 203.40722656]
[-317.51058960 188.43995667]
[-317.50274658 173.43321228]
[-316.39953613 158.46707153]
[-314.20678711 143.62138367]
[-310.93621826 128.97537231]
[-306.60525513 114.60717010]
[-301.23706055 100.59343719]
[-294.86022949 87.00894165]
[-287.50881958 73.92616272]
[-279.22201538 61.41491699]
[-270.04403687 49.54194641]
[-260.02389526 38.37059784]
[-249.21501160 27.96048355]
[-237.67507935 18.36713982]
[-225.46565247 9.64175510]
[-212.65188599 1.83088350]
[-199.30213928 -5.02380085]
[-185.48764038 -10.88572502]
[-171.28210449 -15.72361183]
[-156.76132202 -19.51165009]
[-142.00276184 -22.22962761]
[-127.08518219 -23.86304283]
[-112.08815765 -24.40318108]
[-97.09171295 -23.84716034]
[-82.17586517 -22.19794846]
[-67.42019653 -19.46434212]
[-52.90343475 -15.66092968]
[-38.70302963 -10.80800056]
[-24.89475060 -4.93145037]
[-11.55227184 1.93736780]
[1.25321877 9.76180553]
[13.45339680 18.50011444]
[24.98316956 28.10567284]
[35.78101730 38.52722931]
[45.78933334 49.70918274]
[54.95471573 61.59186554]
[63.22826004 74.11188507]
[70.56582642 87.20243835]
[76.92826080 100.79367828]
[90.94128418 95.44248962]
[96.74951935 89.85348511]
[105.20298004 90.11765289]
[119.29412079 84.97569275]
[133.38526917 79.83373260]
[147.47640991 74.69177246]
[161.56755066 69.54981232]
[171.87922668 57.55065918]
[186.48767090 60.45627975]
[200.57881165 55.31431961]
[214.66995239 50.17235947]
[228.76109314 45.03039932]
[242.85223389 39.88843918]
[256.94338989 34.74647903]
[252.69479370 20.35554504]
[249.35821533 5.72623444]
[246.94680786 -9.08371449]
[245.47009277 -24.01585197]
[244.93386841 -39.01124954]
[245.34028625 -54.01072693]
[246.68774414 -68.95508575]
[248.97088623 -83.78534698]
[252.18074036 -98.44298553]
[256.30462646 -112.87014771]
[261.32626343 -127.00990295]
[267.22583008 -140.80644226]
[273.98004150 -154.20532227]
[281.56228638 -167.15365601]
[289.94256592 -179.60034180]
[299.08786011 -191.49627686]
[308.96206665 -202.79447937]
[319.52621460 -213.45039368]
[330.73861694 -223.42195129]
[342.55499268 -232.66978455]
[354.92874146 -241.15742493]
[367.81100464 -248.85134888]
[381.15097046 -255.72120667]
[394.89596558 -261.73986816]
[408.99176025 -266.88363647]
[423.38272095 -271.13214111]
[438.01205444 -274.46862793]
[452.82199097 -276.87997437]
[467.75415039 -278.35659790]
[482.74954224 -278.89273071]
[497.74902344 -278.48623657]
[512.69335938 -277.13873291]
[527.52362061 -274.85549927]
[542.18127441 -271.64556885]
[556.60839844 -267.52160645]
[570.74810791 -262.49990845]
[584.54461670 -256.60025024]
[597.94348145 -249.84596252]
[610.89178467 -242.26367188]
[623.33843994 -233.88331604]
[635.23431396 -224.73796082]
[646.53247070 -214.86369324]
[657.18829346 -204.29949951]
[667.15979004 -193.08705139]
[676.40759277 -181.27061462]
[684.89514160 -168.89683533]
[692.58898926 -156.01452637]
[699.45880127 -142.67453003]
[705.47741699 -128.92948914]
[710.62109375 -114.83367157]
[714.86950684 -100.44269562]
[718.20593262 -85.81334686]
[720.61718750 -71.00337219]
[722.09375000 -56.07122040]
[722.62982178 -41.07581711]
[722.22320557 -26.07634354]
[720.87561035 -11.13199902]
[718.59234619 3.69823980]
[715.38232422 18.35584450]
[711.25830078 32.78296661]
[706.23651123 46.92266846]
[700.33679199 60.71914673]
[693.58239746 74.11795044]
[686.00006104 87.06620789]
[677.61962891 99.51280975]
[668.47424316 111.40864563]
[658.59991455 122.70674896]
[648.03564453 133.36254883]
[636.82318115 143.33398438]
[625.00665283 152.58169556]
[612.63281250 161.06919861]
[599.75048828 168.76300049]
[586.41046143 175.63272095]
[572.66540527 181.65124512]
[558.56951904 186.79484558]
[544.17852783 191.04319763]
[529.54919434 194.37954712]
[514.73919678 196.79072571]
[499.80703735 198.26721191]
[484.81161499 198.80319214]
[469.81216431 198.39654541]
[454.86782837 197.04885864]
[440.03759766 194.76547241]
[425.38000488 191.55540466]
[410.95291138 187.43128967]
[396.81323242 182.40943909]
[383.01678467 176.50964355]
[369.61801147 169.75521851]
[356.66979980 162.17279053]
[344.22323608 153.79229736]
[332.32745361 144.64682007]
[321.02938843 134.77243042]
[310.37365723 124.20812225]
[300.40228271 112.99558258]
[291.15460205 101.17905426]
[282.66717529 88.80517578]
[274.97344971 75.92278290]
[268.10379028 62.58271408]
[262.08532715 48.83761978]
[247.99420166 53.97957993]
[233.90306091 59.12154007]
[219.81192017 64.26349640]
[205.72077942 69.40545654]
[191.62963867 74.54741669]
[182.32585144 86.17878723]
[166.70950317 83.64095306]
[152.61836243 88.78291321]
[138.52722168 93.92487335]
[124.43608093 99.06683350]
[110.34494019 104.20879364]
[96.29247284 109.45551300]
[82.27944946 114.80670166]
[86.59564209 129.17933655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 209]
[84 208]
[86 207]
[87 206]
[88 205]
[89 204]
[90 203]
[92 201]
[93 200]
[94 199]
[95 198]
[96 197]
[97 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
