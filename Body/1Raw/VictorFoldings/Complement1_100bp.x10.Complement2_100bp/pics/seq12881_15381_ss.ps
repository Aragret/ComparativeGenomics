%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[97.05357361 243.63941956]
[101.15597534 229.19635010]
[106.77035522 215.27116394]
[113.83311462 202.02165222]
[122.26422119 189.59794617]
[131.96813965 178.14080811]
[142.83493042 167.78004456]
[133.69612122 155.88542175]
[124.55731964 143.99078369]
[115.41851807 132.09616089]
[106.27971649 120.20152283]
[97.14091492 108.30688477]
[94.16330719 107.65621948]
[91.35664368 105.90774536]
[89.12798309 103.12268829]
[87.85608673 99.51180267]
[87.83744812 95.42124939]
[79.42282867 83.00375366]
[71.00820923 70.58625793]
[62.59358978 58.16876221]
[54.17897034 45.75126648]
[41.36696243 53.55771637]
[28.19275856 60.73606110]
[14.68712902 67.26953125]
[0.88161641 73.14286804]
[-13.19153595 78.34234619]
[-27.49945831 82.85584259]
[-42.00873566 86.67279816]
[-56.68547821 89.78430176]
[-71.49541473 92.18308258]
[-86.40393829 93.86354828]
[-101.37625122 94.82176971]
[-116.37737274 95.05551147]
[-131.37226868 94.56421661]
[-146.32591248 93.34904480]
[-161.20339966 91.41283417]
[-175.96995544 88.76009369]
[-190.59111023 85.39703369]
[-205.03269958 81.33149719]
[-219.26101685 76.57299042]
[-233.24281311 71.13262177]
[-246.94543457 65.02309418]
[-260.33688354 58.25867844]
[-273.38589478 50.85517883]
[-286.06195068 42.82987976]
[-298.33551025 34.20153046]
[-310.17785645 24.99027634]
[-321.56134033 15.21763611]
[-332.45938110 4.90643311]
[-342.84652710 -5.91925097]
[-352.69851685 -17.23413277]
[-361.99234009 -29.01178360]
[-370.70629883 -41.22469711]
[-378.82000732 -53.84435272]
[-386.31457520 -66.84127045]
[-393.17245483 -80.18510437]
[-399.37762451 -93.84467316]
[-404.91561890 -107.78809357]
[-409.77349854 -121.98278809]
[-413.93991089 -136.39559937]
[-417.40512085 -150.99288940]
[-420.16101074 -165.74053955]
[-422.20120239 -180.60411072]
[-423.52090454 -195.54890442]
[-424.11703491 -210.53999329]
[-423.98815918 -225.54237366]
[-423.13464355 -240.52102661]
[-421.55847168 -255.44093323]
[-419.26327515 -270.26727295]
[-416.25448608 -284.96542358]
[-412.53906250 -299.50103760]
[-408.12570190 -313.84014893]
[-403.02474976 -327.94931030]
[-397.24807739 -341.79556274]
[-390.80920410 -355.34652710]
[-383.72314453 -368.57061768]
[-376.00646973 -381.43688965]
[-367.67718506 -393.91531372]
[-358.75473022 -405.97677612]
[-349.25997925 -417.59304810]
[-339.21511841 -428.73703003]
[-328.64355469 -439.38272095]
[-317.57000732 -449.50521851]
[-306.02035522 -459.08090210]
[-294.02154541 -468.08737183]
[-281.60162354 -476.50366211]
[-268.78955078 -484.31005859]
[-255.61532593 -491.48831177]
[-242.10966492 -498.02172852]
[-228.30412292 -503.89498901]
[-214.23094177 -509.09442139]
[-199.92300415 -513.60784912]
[-185.41371155 -517.42474365]
[-170.73695374 -520.53613281]
[-155.92700195 -522.93487549]
[-141.01846313 -524.61529541]
[-126.04615784 -525.57342529]
[-111.04503632 -525.80706787]
[-96.05014038 -525.31573486]
[-81.09649658 -524.10046387]
[-66.21903229 -522.16418457]
[-51.45248413 -519.51141357]
[-36.83134842 -516.14825439]
[-22.38977051 -512.08264160]
[-8.16148186 -507.32406616]
[5.82028818 -501.88363647]
[19.52288437 -495.77404785]
[32.91430283 -489.00958252]
[45.96326828 -481.60601807]
[58.63930511 -473.58065796]
[70.91280365 -464.95223999]
[82.75510406 -455.74093628]
[94.13854218 -445.96823120]
[105.03653717 -435.65698242]
[115.42363739 -424.83126831]
[125.27557373 -413.51632690]
[134.56933594 -401.73861694]
[143.28323364 -389.52566528]
[151.39691162 -376.90597534]
[158.89140320 -363.90902710]
[165.74920654 -350.56515503]
[171.95433044 -336.90554810]
[177.49226379 -322.96212769]
[182.35006714 -308.76739502]
[186.51640320 -294.35455322]
[189.98153687 -279.75726318]
[192.73738098 -265.00961304]
[194.77749634 -250.14601135]
[196.09712219 -235.20121765]
[196.69316101 -220.21012878]
[196.56423950 -205.20773315]
[195.71066284 -190.22909546]
[194.13439941 -175.30918884]
[191.83914185 -160.48286438]
[188.83026123 -145.78472900]
[185.11477661 -131.24914551]
[180.70137024 -116.91003418]
[175.60034180 -102.80089569]
[169.82360840 -88.95468903]
[163.38465881 -75.40373993]
[156.29853821 -62.17969894]
[148.58178711 -49.31346130]
[140.25244141 -36.83506775]
[131.32995605 -24.77366829]
[121.83515167 -13.15742874]
[111.79022217 -2.01348138]
[101.21861267 8.63214684]
[90.14502716 18.75459290]
[78.59532166 28.33021355]
[66.59646606 37.33664703]
[75.01108551 49.75414276]
[83.42570496 62.17163849]
[91.84032440 74.58913422]
[100.25494385 87.00662994]
[109.03554535 99.16808319]
[118.17434692 111.06272125]
[127.31314850 122.95735168]
[136.45195007 134.85198975]
[145.59075928 146.74661255]
[154.72955322 158.64125061]
[167.54010010 150.81040955]
[181.11044312 144.38562012]
[195.28683472 139.43969727]
[209.90863037 136.02867126]
[224.81016541 134.19120789]
[239.82258606 133.94810486]
[254.77581787 135.30213928]
[269.50039673 138.23796082]
[283.82946777 142.72229004]
[297.60073853 148.70433044]
[310.65808105 156.11630249]
[322.85363770 164.87422180]
[334.04913330 174.87884521]
[344.11779785 186.01681519]
[352.94546509 198.16192627]
[360.43218994 211.17658997]
[366.49310303 224.91331482]
[371.05950928 239.21646118]
[374.07968140 253.92395020]
[375.51943970 268.86917114]
[375.36242676 283.88275146]
[373.61041260 298.79455566]
[370.28329468 313.43566895]
[365.41873169 327.64019775]
[359.07183838 341.24716187]
[351.31457520 354.10238647]
[342.23480225 366.06021118]
[331.93542480 376.98516846]
[320.53311157 386.75344849]
[308.15707397 395.25439453]
[294.94754028 402.39163208]
[281.05419922 408.08435059]
[266.63446045 412.26800537]
[251.85169983 414.89523315]
[236.87342834 415.93621826]
[221.86936951 415.37921143]
[207.00952148 413.23046875]
[192.46226501 409.51440430]
[178.39241028 404.27307129]
[164.95941162 397.56585693]
[152.31546021 389.46881104]
[140.60380554 380.07360840]
[129.95716858 369.48675537]
[120.49619293 357.82821655]
[112.32805634 345.23004150]
[105.54531860 331.83502197]
[100.22483826 317.79492188]
[96.42689514 303.26882935]
[94.19451904 288.42132568]
[93.55301666 273.42062378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[17 154]
[18 153]
[19 152]
[20 151]
[21 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
