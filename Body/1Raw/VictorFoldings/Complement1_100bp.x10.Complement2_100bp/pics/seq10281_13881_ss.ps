%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[40.34103012 353.20620728]
[35.76553345 367.49874878]
[30.13474274 381.40939331]
[23.48014641 394.86038208]
[15.83896065 407.77642822]
[7.25391674 420.08532715]
[-2.22697186 431.71826172]
[-12.55068398 442.61013794]
[-23.65948486 452.70007324]
[-35.49124908 461.93164062]
[-47.97980881 470.25317383]
[-61.05532074 477.61819458]
[-74.64466095 483.98544312]
[-88.67182922 489.31936646]
[-103.05838013 493.59011841]
[-117.72386169 496.77383423]
[-132.58625793 498.85266113]
[-147.56243896 499.81500244]
[-162.56866455 499.65548706]
[-177.52099609 498.37496948]
[-192.33584595 495.98065186]
[-206.93032837 492.48593140]
[-221.22283936 487.91030884]
[-235.13345337 482.27938843]
[-248.58435059 475.62466431]
[-261.50033569 467.98336792]
[-273.80917358 459.39822388]
[-285.44201660 449.91723633]
[-296.33380127 439.59341431]
[-306.42364502 428.48452759]
[-315.65509033 416.65267944]
[-323.97653198 404.16406250]
[-331.34143066 391.08847046]
[-337.70855713 377.49908447]
[-343.04235840 363.47186279]
[-347.31298828 349.08526611]
[-350.49655151 334.41976929]
[-352.57525635 319.55737305]
[-353.53747559 304.58117676]
[-353.37780762 289.57495117]
[-352.09719849 274.62261963]
[-349.70272827 259.80780029]
[-346.20788574 245.21333313]
[-341.63211060 230.92086792]
[-336.00109863 217.01031494]
[-329.34625244 203.55946350]
[-321.70483398 190.64353943]
[-313.11956787 178.33477783]
[-303.63848877 166.70202637]
[-293.31457520 155.81031799]
[-282.20559692 145.72058105]
[-270.37368774 136.48924255]
[-257.88497925 128.16790771]
[-244.80932617 120.80313873]
[-231.21987915 114.43611908]
[-217.19261169 109.10243988]
[-202.80598450 104.83193970]
[-188.14045715 101.64850616]
[-173.27803040 99.56993103]
[-158.30181885 98.60784912]
[-143.29560852 98.76763916]
[-128.34327698 100.04840088]
[-113.52848816 102.44297791]
[-98.93405914 105.93797302]
[-84.64163208 110.51384735]
[-70.73111725 116.14500427]
[-57.28032684 122.79995728]
[-44.36447525 130.44148254]
[-32.05579376 139.02685547]
[-20.42311859 148.50805664]
[-9.53150463 158.83204651]
[0.55813432 169.94111633]
[12.38440418 160.71401978]
[24.14165497 151.39913940]
[29.20857239 137.39286804]
[44.81110001 134.77146912]
[56.49868011 125.36931610]
[68.18626404 115.96717072]
[79.87384033 106.56501770]
[79.73079681 93.89090729]
[86.85369873 83.40673065]
[98.68919373 78.87078857]
[110.99456787 81.90908813]
[122.82083893 72.68199158]
[134.64710999 63.45489120]
[146.47337341 54.22779465]
[158.29965210 45.00069427]
[170.12591553 35.77359772]
[180.69296265 25.12758827]
[189.83177185 13.23295593]
[192.10408020 -2.42421985]
[205.99371338 -7.80265760]
[215.13250732 -19.69729042]
[224.27131653 -31.59192276]
[233.41011047 -43.48655701]
[222.42927551 -53.72208023]
[212.47111511 -64.95506287]
[203.62582397 -77.08377075]
[195.97351074 -89.99836731]
[189.58348083 -103.58189392]
[184.51358032 -117.71132660]
[180.80975342 -132.25871277]
[178.50552368 -147.09230042]
[177.62176514 -162.07774353]
[178.16648865 -177.07934570]
[180.13475037 -191.96124268]
[183.50872803 -206.58865356]
[188.25787354 -220.82910156]
[194.33917236 -234.55361938]
[201.69754028 -247.63793945]
[210.26634216 -259.96353149]
[219.96798706 -271.41879272]
[230.71459961 -281.89996338]
[242.40887451 -291.31213379]
[254.94487000 -299.57006836]
[268.20907593 -306.59896851]
[282.08139038 -312.33517456]
[296.43612671 -316.72674561]
[311.14334106 -319.73391724]
[326.06979370 -321.32943726]
[341.08032227 -321.49887085]
[356.03897095 -320.24069214]
[370.81030273 -317.56625366]
[385.26052856 -313.49981689]
[399.25878906 -308.07821655]
[412.67828369 -301.35052490]
[425.39749146 -293.37765503]
[437.30123901 -284.23187256]
[448.28170776 -273.99594116]
[458.23944092 -262.76260376]
[467.08428955 -250.63356018]
[474.73614502 -237.71868896]
[481.12567139 -224.13493347]
[486.19506836 -210.00531006]
[489.89834595 -195.45779419]
[492.20205688 -180.62413025]
[493.08526611 -165.63864136]
[492.53997803 -150.63705444]
[490.57119751 -135.75523376]
[487.19665527 -121.12796021]
[482.44702148 -106.88768005]
[476.36520386 -93.16337585]
[469.00637817 -80.07933807]
[460.43710327 -67.75405121]
[450.73504639 -56.29915237]
[439.98803711 -45.81836700]
[428.29345703 -36.40662384]
[415.75714111 -28.14915276]
[402.49267578 -21.12073898]
[388.62017822 -15.38503361]
[374.26525879 -10.99398136]
[359.55795288 -7.98734951]
[344.63143921 -6.39236689]
[329.62091064 -6.22347784]
[314.66226196 -7.48221254]
[299.89105225 -10.15717125]
[285.44097900 -14.22412872]
[271.44293213 -19.64625359]
[258.02368164 -26.37443924]
[245.30474854 -34.34775543]
[236.16593933 -22.45312119]
[227.02714539 -10.55848789]
[217.88833618 1.33614457]
[216.26969910 16.14253616]
[201.72640991 22.37175941]
[192.58760071 34.26639175]
[206.27716064 28.13482857]
[221.20979309 26.71490479]
[235.80964661 30.15646362]
[248.53594971 38.09631348]
[258.04568481 49.69654083]
[263.33523560 63.73294449]
[263.84637451 78.72423553]
[259.52520752 93.08833313]
[250.82774353 105.30937958]
[238.67181396 114.09764862]
[224.34030151 118.52568817]
[209.34562683 118.12620544]
[195.27020264 112.94135284]
[183.59947205 103.51830292]
[175.56504822 90.85149384]
[172.01483154 76.27767944]
[173.32348633 61.33487701]
[179.35301208 47.59986877]
[167.52674866 56.82696533]
[155.70048523 66.05406189]
[143.87420654 75.28116608]
[132.04794312 84.50826263]
[120.22167206 93.73535919]
[118.57436371 110.15650940]
[105.63858795 120.40509796]
[89.27599335 118.25260162]
[77.58840942 127.65474701]
[65.90083313 137.05690002]
[54.21324921 146.45904541]
[48.31035995 161.13783264]
[33.54380798 163.08671570]
[28.81877327 170.90412903]
[21.61150169 172.54029846]
[9.78523254 181.76739502]
[18.10688782 194.25587463]
[25.47200394 207.33132935]
[31.83938980 220.92060852]
[37.17343903 234.94772339]
[41.44431686 249.33424377]
[44.62813950 263.99969482]
[46.70710373 278.86206055]
[47.66958237 293.83825684]
[47.51019287 308.84448242]
[46.22982407 323.79681396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 200]
[73 199]
[74 197]
[76 195]
[77 194]
[78 193]
[79 192]
[83 189]
[84 188]
[85 187]
[86 186]
[87 185]
[88 184]
[89 166]
[90 165]
[92 163]
[93 162]
[94 161]
[95 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
