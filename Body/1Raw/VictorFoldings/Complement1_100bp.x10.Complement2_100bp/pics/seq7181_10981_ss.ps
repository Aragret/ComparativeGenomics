%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[123.06523132 353.34588623]
[118.78599548 338.96295166]
[115.50925446 324.31906128]
[113.25061798 309.48397827]
[112.02085876 294.52844238]
[111.82583618 279.52368164]
[112.66648102 264.54122925]
[114.53878021 249.65246582]
[117.43381500 234.92835999]
[121.33779144 220.43907166]
[126.23210144 206.25363159]
[132.09342957 192.43966675]
[138.89382935 179.06300354]
[146.60089111 166.18737793]
[155.17791748 153.87416077]
[143.49032593 144.47201538]
[131.80274963 135.06985474]
[120.11517334 125.66770935]
[105.34861755 123.71881104]
[99.44572449 109.04003906]
[95.59151459 108.90796661]
[91.81423950 107.07765961]
[88.87103271 103.62157440]
[87.45852661 98.94773865]
[76.20243073 89.03308868]
[64.94633484 79.11843872]
[49.39092255 79.93504333]
[38.11687851 69.71983337]
[37.43423080 54.88508606]
[26.17813492 44.97043610]
[14.92203999 35.05578613]
[3.66594410 25.14113426]
[-11.80396843 21.82566071]
[-16.24041939 7.60711050]
[-27.49651527 -2.30754066]
[-38.75260925 -12.22219181]
[-49.49515152 -1.74291551]
[-60.99946213 7.89389896]
[-73.19965363 16.63305092]
[-86.02583313 24.42448616]
[-99.40454102 31.22357178]
[-113.25914001 36.99136353]
[-127.51027679 41.69482422]
[-142.07630920 45.30701447]
[-156.87382507 47.80723953]
[-171.81803894 49.18118286]
[-186.82336426 49.42096710]
[-201.80386353 48.52523041]
[-216.67370605 46.49909210]
[-231.34771729 43.35416412]
[-245.74186707 39.10845947]
[-259.77368164 33.78629684]
[-273.36279297 27.41816330]
[-286.43139648 20.04053307]
[-298.90457153 11.69566536]
[-310.71093750 2.43135929]
[-321.78283691 -7.69931889]
[-332.05682373 -18.63834000]
[-341.47409058 -30.32304764]
[-349.98071289 -42.68651199]
[-357.52789307 -55.65791321]
[-364.07244873 -69.16294861]
[-369.57690430 -83.12427521]
[-374.00970459 -97.46190643]
[-377.34545898 -112.09371948]
[-379.56506348 -126.93591309]
[-380.65582275 -141.90347290]
[-380.61145020 -156.91064453]
[-379.43225098 -171.87149048]
[-377.12493896 -186.70030212]
[-373.70275879 -201.31214905]
[-369.18527222 -215.62332153]
[-363.59838867 -229.55186462]
[-356.97412109 -243.01797485]
[-349.35037231 -255.94454956]
[-340.77084351 -268.25750732]
[-331.28466797 -279.88635254]
[-320.94616699 -290.76443481]
[-309.81460571 -300.82949829]
[-297.95367432 -310.02383423]
[-285.43136597 -318.29483032]
[-272.31939697 -325.59506226]
[-258.69287109 -331.88278198]
[-244.62983704 -337.12188721]
[-230.21084595 -341.28244019]
[-215.51849365 -344.34057617]
[-200.63693237 -346.27877808]
[-185.65141296 -347.08593750]
[-170.64776611 -346.75744629]
[-155.71192932 -345.29519653]
[-140.92945862 -342.70755005]
[-126.38503265 -339.00930786]
[-112.16194916 -334.22167969]
[-98.34168243 -328.37210083]
[-85.00340271 -321.49404907]
[-72.22350311 -313.62692261]
[-60.07518768 -304.81579590]
[-48.62804413 -295.11114502]
[-37.94763565 -284.56854248]
[-28.09514809 -273.24841309]
[-19.12701225 -261.21554565]
[-11.09459496 -248.53887939]
[-4.04390860 -235.29103088]
[1.98466182 -221.54789734]
[6.95658445 -207.38819885]
[10.84337997 -192.89302063]
[13.62278557 -178.14540100]
[15.27888012 -163.22981262]
[15.80217838 -148.23168945]
[15.18968201 -133.23695374]
[13.44490051 -118.33147430]
[10.57782650 -103.60064697]
[6.60488367 -89.12884521]
[1.54882836 -74.99896240]
[-4.56137800 -61.29192734]
[-11.69073677 -48.08625793]
[-19.79841042 -35.45759964]
[-28.83795929 -23.47828674]
[-17.58186340 -13.56363678]
[-6.32576847 -3.64898539]
[8.33903313 -1.04267406]
[13.58059502 13.88503838]
[24.83669090 23.79969025]
[36.09278870 33.71434021]
[47.34888077 43.62899017]
[62.15114594 42.43374634]
[73.70766449 52.32826233]
[74.86098480 67.86234283]
[86.11708069 77.77699280]
[97.37317657 87.69164276]
[108.84787750 97.35245514]
[124.45040131 99.97385406]
[129.51731873 113.98012543]
[141.20491028 123.38227844]
[152.89248657 132.78442383]
[164.58006287 142.18658447]
[174.77009583 131.17095947]
[185.69583130 120.88459778]
[197.30519104 111.37653351]
[209.54287720 102.69207764]
[222.35055542 94.87260437]
[235.66717529 87.95539093]
[249.42932129 81.97338104]
[263.57135010 76.95510101]
[278.02593994 72.92446136]
[292.72415161 69.90066528]
[307.59594727 67.89812469]
[322.57046509 66.92638397]
[337.57635498 66.99006653]
[352.54208374 68.08888245]
[367.39636230 70.21758270]
[382.06835938 73.36603546]
[396.48822021 77.51922607]
[410.58715820 82.65736389]
[424.29800415 88.75596619]
[437.55545044 95.78596497]
[450.29629517 103.71386719]
[462.45980835 112.50189209]
[473.98806763 122.10815430]
[484.82608032 132.48687744]
[494.92224121 143.58859253]
[504.22842407 155.36041260]
[512.70025635 167.74623108]
[520.29742432 180.68702698]
[526.98364258 194.12110901]
[532.72711182 207.98449707]
[537.50048828 222.21109009]
[541.28088379 236.73309326]
[544.05047607 251.48133850]
[545.79589844 266.38549805]
[546.50891113 281.37457275]
[546.18609619 296.37710571]
[544.82904053 311.32165527]
[542.44415283 326.13693237]
[539.04284668 340.75241089]
[534.64129639 355.09835815]
[529.26043701 369.10647583]
[522.92596436 382.70999146]
[515.66809082 395.84408569]
[507.52139282 408.44610596]
[498.52462769 420.45608521]
[488.72073364 431.81674194]
[478.15643311 442.47390747]
[466.88201904 452.37686157]
[454.95126343 461.47839355]
[442.42098999 469.73510742]
[429.35095215 477.10766602]
[415.80340576 483.56094360]
[401.84292603 489.06414795]
[387.53604126 493.59112549]
[372.95089722 497.12023926]
[358.15704346 499.63470459]
[343.22497559 501.12252808]
[328.22583008 501.57659912]
[313.23107910 500.99481201]
[298.31219482 499.37988281]
[283.54031372 496.73953247]
[268.98574829 493.08633423]
[254.71792603 488.43768311]
[240.80480957 482.81579590]
[227.31271362 476.24737549]
[214.30592346 468.76379395]
[201.84643555 460.40066528]
[189.99362183 451.19787598]
[178.80395508 441.19927979]
[168.33076477 430.45251465]
[158.62397766 419.00878906]
[149.72982788 406.92263794]
[141.69071960 394.25167847]
[134.54495239 381.05627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 136]
[16 135]
[17 134]
[18 133]
[20 131]
[24 130]
[25 129]
[26 128]
[29 125]
[30 124]
[31 123]
[32 122]
[34 120]
[35 119]
[36 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
