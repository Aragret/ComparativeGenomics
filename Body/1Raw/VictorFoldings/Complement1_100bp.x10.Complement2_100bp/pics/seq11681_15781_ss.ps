%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[29.15684891 981.41699219]
[14.15455437 981.42761230]
[-0.83449304 980.79724121]
[-15.78291321 979.52691650]
[-30.66339874 977.61901855]
[-45.44877243 975.07702637]
[-60.11201859 971.90557861]
[-74.62635803 968.11041260]
[-88.96527863 963.69860840]
[-103.10258484 958.67810059]
[-117.01245117 953.05804443]
[-130.66947937 946.84881592]
[-144.04870605 940.06170654]
[-157.12570190 932.70904541]
[-169.87658691 924.80438232]
[-182.27804565 916.36206055]
[-194.30744934 907.39758301]
[-205.94281006 897.92724609]
[-217.16287231 887.96838379]
[-227.94715881 877.53918457]
[-238.27595520 866.65869141]
[-248.13040161 855.34680176]
[-257.49249268 843.62414551]
[-266.34512329 831.51214600]
[-274.67211914 819.03295898]
[-282.45828247 806.20935059]
[-289.68936157 793.06481934]
[-296.35220337 779.62322998]
[-302.43460083 765.90924072]
[-307.92544556 751.94787598]
[-312.81469727 737.76464844]
[-317.09344482 723.38543701]
[-320.75384521 708.83654785]
[-323.78927612 694.14453125]
[-326.19412231 679.33624268]
[-327.96398926 664.43872070]
[-329.09570312 649.47912598]
[-329.58715820 634.48492432]
[-329.43746948 619.48333740]
[-328.64691162 604.50189209]
[-327.21691895 589.56793213]
[-325.15008545 574.70867920]
[-322.45022583 559.95129395]
[-319.12222290 545.32281494]
[-315.17221069 530.84985352]
[-310.60739136 516.55889893]
[-305.43606567 502.47604370]
[-299.66772461 488.62701416]
[-293.31289673 475.03713989]
[-286.38314819 461.73120117]
[-278.89120483 448.73355103]
[-270.85067749 436.06787109]
[-262.27633667 423.75732422]
[-253.18376160 411.82443237]
[-243.58961487 400.29095459]
[-233.51141357 389.17794800]
[-222.96754456 378.50573730]
[-211.97729492 368.29382324]
[-200.56072998 358.56082153]
[-188.73870850 349.32455444]
[-176.53282166 340.60186768]
[-163.96534729 332.40872192]
[-151.05928040 324.76004028]
[-137.83816528 317.66983032]
[-124.32615662 311.15103149]
[-110.54795074 305.21557617]
[-96.52870178 299.87423706]
[-82.29402924 295.13684082]
[-67.86992645 291.01202393]
[-53.28274536 287.50729370]
[-38.55912781 284.62905884]
[-23.72597694 282.38262939]
[-8.81037998 280.77203369]
[6.16041231 279.80026245]
[21.15905571 279.46908569]
[36.15814972 279.77908325]
[51.13029861 280.72973633]
[66.04815674 282.31924438]
[68.27326965 267.48519897]
[70.49839020 252.65116882]
[72.72350311 237.81712341]
[74.94862366 222.98307800]
[77.17373657 208.14903259]
[79.39885712 193.31498718]
[81.62397766 178.48094177]
[83.84909058 163.64689636]
[85.96371460 148.79670715]
[87.96772766 133.93116760]
[89.97174072 119.06564331]
[91.97575378 104.20011902]
[90.09581757 100.83289337]
[89.70922089 96.65337372]
[91.14548492 92.34707642]
[94.41555786 88.72126770]
[97.08135223 73.96005249]
[99.74714661 59.19883347]
[98.19268036 50.19764328]
[102.56407928 44.23839569]
[105.44935608 29.51850319]
[91.72502136 23.29440498]
[79.80637360 14.07255077]
[70.33617401 2.35026526]
[63.82513046 -11.24028492]
[60.62438202 -25.96617699]
[60.90653610 -41.03326416]
[64.65637970 -55.62899780]
[71.67169189 -68.96624756]
[81.57413483 -80.32574463]
[93.82968903 -89.09490204]
[107.77743530 -94.80079651]
[122.66517639 -97.13571930]
[137.69003296 -95.97375488]
[152.04174805 -91.37756348]
[164.94635010 -83.59500885]
[175.70790100 -73.04579926]
[183.74604797 -60.29884338]
[188.62730408 -46.04156113]
[190.08842468 -31.04283524]
[188.05061340 -16.11152267]
[182.62377930 -2.05285454]
[174.10057068 10.37500477]
[162.94064331 20.50183487]
[149.74583435 27.78151131]
[135.22772217 31.82144737]
[120.16924286 32.40377426]
[117.28397369 47.12366867]
[114.50836182 61.86463165]
[111.84256744 76.62584686]
[109.17677307 91.38706207]
[106.84128571 106.20413208]
[104.83727264 121.06966400]
[102.83325958 135.93519592]
[100.82924652 150.80072021]
[102.78408051 159.72352600]
[98.68313599 165.87202454]
[96.45801544 180.70605469]
[94.23290253 195.54010010]
[92.00778198 210.37414551]
[89.78266907 225.20819092]
[87.55754852 240.04223633]
[85.33243561 254.87628174]
[83.10731506 269.71032715]
[80.88219452 284.54437256]
[95.60987854 287.40170288]
[110.20201874 290.88574219]
[124.63195801 294.99008179]
[138.87333679 299.70730591]
[152.90014648 305.02874756]
[166.68675232 310.94467163]
[180.20799255 317.44430542]
[193.43914795 324.51574707]
[206.35606384 332.14611816]
[218.93513489 340.32144165]
[231.15338135 349.02679443]
[242.98849487 358.24627686]
[254.41885376 367.96307373]
[265.42358398 378.15939331]
[275.98257446 388.81661987]
[286.07653809 399.91531372]
[295.68701172 411.43518066]
[304.79650879 423.35519409]
[313.38830566 435.65356445]
[321.44677734 448.30780029]
[328.95715332 461.29483032]
[335.90576172 474.59094238]
[342.27987671 488.17178345]
[348.06784058 502.01260376]
[353.25912476 516.08807373]
[357.84423828 530.37255859]
[361.81475830 544.83990479]
[365.16348267 559.46368408]
[367.88427734 574.21722412]
[369.97219849 589.07348633]
[371.42337036 604.00543213]
[372.23516846 618.98577881]
[372.40615845 633.98706055]
[371.93597412 648.98199463]
[370.82546997 663.94317627]
[369.07672119 678.84320068]
[366.69287109 693.65484619]
[363.67831421 708.35119629]
[360.03851318 722.90527344]
[355.78018188 737.29052734]
[350.91104126 751.48065186]
[345.44000244 765.44976807]
[339.37707520 779.17236328]
[332.73330688 792.62341309]
[325.52087402 805.77819824]
[317.75289917 818.61285400]
[309.44360352 831.10382080]
[300.60815430 843.22833252]
[291.26272583 854.96423340]
[281.42431641 866.29010010]
[271.11096191 877.18524170]
[260.34149170 887.62969971]
[249.13555908 897.60449219]
[237.51364136 907.09130859]
[225.49696350 916.07287598]
[213.10748291 924.53277588]
[200.36784363 932.45556641]
[187.30128479 939.82672119]
[173.93168640 946.63281250]
[160.28349304 952.86145020]
[146.38160706 958.50115967]
[132.25143433 963.54174805]
[117.91878510 967.97387695]
[103.40984344 971.78961182]
[88.75110626 974.98181152]
[73.96935272 977.54479980]
[59.09159088 979.47381592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[87 133]
[88 132]
[89 131]
[90 130]
[94 129]
[95 128]
[96 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
