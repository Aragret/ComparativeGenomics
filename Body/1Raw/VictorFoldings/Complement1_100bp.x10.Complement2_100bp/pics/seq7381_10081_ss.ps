%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[73.99375916 491.91247559]
[73.01524353 506.92437744]
[69.29473114 521.50079346]
[62.95893478 535.14532471]
[54.22365570 547.39312744]
[43.38640976 557.82714844]
[30.81631279 566.09197998]
[16.94149590 571.90612793]
[2.23452926 575.07153320]
[-12.80367088 575.48040771]
[-27.66090965 573.11883545]
[-41.83115768 568.06719971]
[-54.83177567 560.49761963]
[-66.21997833 550.66790771]
[-75.60787201 538.91278076]
[-82.67572021 525.63275146]
[-87.18279266 511.27999878]
[-88.97557831 496.34344482]
[-87.99301910 481.33181763]
[-84.26856995 466.75637817]
[-77.92910004 453.11358643]
[-69.19052124 440.86810303]
[-58.35046005 430.43701172]
[-45.77813339 422.17559814]
[-31.90175056 416.36520386]
[-17.19393349 413.20376587]
[-2.15562272 412.79891968]
[12.70097923 415.16452026]
[17.73789597 401.03549194]
[22.77481270 386.90646362]
[27.81172752 372.77743530]
[32.84864426 358.64840698]
[37.88555908 344.51937866]
[36.68428040 339.89703369]
[38.37396622 334.47097778]
[43.28850937 330.04846191]
[48.74386597 316.07565308]
[54.19922638 302.10287476]
[59.55041122 288.08984375]
[64.79712677 274.03738403]
[70.04384613 259.98489380]
[75.29056549 245.93243408]
[78.72162628 231.33010864]
[72.35038757 217.86694336]
[81.48140717 204.94660950]
[83.04193115 190.02799988]
[84.60244751 175.10940552]
[86.16297150 160.19079590]
[73.07041168 155.58050537]
[61.33809662 148.16276550]
[51.55864334 138.31227112]
[44.22602844 126.52657318]
[39.71062469 113.40098572]
[38.24051666 99.59848785]
[39.88995743 85.81628418]
[44.57563400 72.75051117]
[52.06086731 61.06114197]
[61.96756744 51.33862686]
[73.79533386 44.07406235]
[86.94673157 39.63438797]
[100.75746918 38.24385834]
[102.76148224 23.37832832]
[104.76549530 8.51280022]
[98.94127655 -6.19736671]
[108.30958557 -17.77683067]
[110.31359863 -32.64236069]
[112.31761169 -47.50788879]
[114.32162476 -62.37341690]
[116.32563782 -77.23894501]
[116.21397400 -92.23852539]
[113.98885345 -107.07257080]
[111.76374054 -121.90661621]
[109.53862000 -136.74066162]
[97.73657990 -150.87548828]
[104.79177094 -166.94381714]
[102.34604645 -181.74308777]
[99.90031433 -196.54235840]
[97.45458984 -211.34162903]
[95.00886536 -226.14089966]
[90.13699341 -211.95411682]
[80.97471619 -200.07756042]
[68.48893738 -191.76458740]
[53.99732590 -187.89250183]
[39.02920532 -188.86991882]
[25.16419792 -194.59368896]
[13.86551380 -204.45977783]
[6.32553005 -217.42700195]
[3.33995771 -232.12687683]
[5.22387218 -247.00810242]
[11.77845955 -260.50021362]
[22.31199837 -271.17938232]
[35.71285629 -277.91860962]
[50.56681442 -280.00665283]
[65.30629730 -277.22317505]
[78.37580872 -269.86193848]
[88.39609528 -258.69976807]
[94.30973816 -244.91447449]
[95.64797211 -259.85464478]
[96.98620605 -274.79483032]
[83.06594086 -280.71780396]
[71.65861511 -290.65402222]
[63.88179779 -303.63000488]
[60.49737549 -318.37451172]
[61.83692932 -333.44305420]
[67.76921844 -347.35934448]
[77.71305847 -358.76000977]
[90.69425964 -366.52813721]
[105.44104004 -369.90267944]
[120.50867462 -368.55300903]
[134.42098999 -362.61141968]
[145.81498718 -352.65994263]
[153.57441711 -339.67352295]
[156.93907166 -324.92449951]
[155.57933044 -309.85775757]
[149.62838745 -295.94943237]
[139.66928101 -284.56210327]
[126.67768860 -276.81137085]
[111.92639160 -273.45660400]
[110.58815765 -258.51641846]
[109.24992371 -243.57623291]
[109.80813599 -228.58662415]
[112.25386047 -213.78735352]
[114.69958496 -198.98808289]
[117.14531708 -184.18881226]
[119.59104156 -169.38954163]
[129.23887634 -162.09255981]
[131.39756775 -149.78306580]
[124.37266541 -138.96577454]
[126.59778595 -124.13173676]
[128.82290649 -109.29769135]
[131.04801941 -94.46364594]
[135.90605164 -108.65517426]
[144.68266296 -120.81951141]
[156.61859131 -129.90431213]
[170.68124390 -135.12367249]
[185.65408325 -136.02604675]
[200.24179077 -132.53337097]
[213.18238831 -124.94779968]
[223.35638428 -113.92556000]
[229.88363647 -100.42018890]
[232.19946289 -85.60003662]
[230.10351562 -70.74719238]
[223.77713013 -57.14657211]
[213.76759338 -45.97476959]
[200.94082642 -38.19826126]
[186.40647888 -34.48978424]
[171.42192078 -35.17016602]
[157.28346252 -40.18054199]
[145.21420288 -49.08746719]
[136.25828552 -61.12040329]
[131.19116211 -75.23493195]
[129.18714905 -60.36940384]
[127.18314362 -45.50387573]
[125.17913055 -30.63834572]
[123.17511749 -15.77281761]
[129.14266968 -2.12593246]
[119.63101959 10.51681423]
[117.62700653 25.38234138]
[115.62299347 40.24787140]
[130.49975586 46.29561996]
[143.31439209 55.97434998]
[153.20054626 68.62967682]
[159.48977661 83.40596008]
[161.75686646 99.30417633]
[159.84855652 115.24944305]
[153.89384460 130.16368103]
[144.29536438 143.03854370]
[131.70204163 153.00354004]
[116.96532440 159.38494873]
[101.08158112 161.75131226]
[99.52105713 176.66992188]
[97.96053314 191.58853149]
[96.40000916 206.50712585]
[102.65962219 221.03736877]
[93.64022827 232.89062500]
[102.09493256 220.50039673]
[114.07511902 211.47402954]
[128.31649780 206.76414490]
[143.31614685 206.86775208]
[157.49110413 211.77392578]
[169.34545898 220.96492004]
[177.62818909 233.47076416]
[181.46520996 247.97171021]
[180.45158386 262.93740845]
[174.69427490 276.78854370]
[164.80087280 288.06332397]
[151.81546021 295.57189941]
[137.10839844 298.52191162]
[122.23177338 296.60198975]
[108.75554657 290.01477051]
[98.10189819 279.45544434]
[91.39513397 266.03829956]
[89.34303284 251.17915344]
[84.09632111 265.23162842]
[78.84960175 279.28408813]
[73.60288239 293.33654785]
[73.53291321 302.47073364]
[68.17201996 307.55822754]
[62.71666718 321.53100586]
[57.26130676 335.50381470]
[52.01459122 349.55627441]
[46.97767258 363.68533325]
[41.94075775 377.81436157]
[36.90384293 391.94338989]
[31.86692619 406.07241821]
[26.83000946 420.20144653]
[39.83266830 427.76751709]
[51.22351456 437.59417725]
[60.61458206 449.34671021]
[67.68601227 462.62487793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 206]
[29 205]
[30 204]
[31 203]
[32 202]
[33 201]
[36 200]
[37 199]
[38 198]
[39 196]
[40 195]
[41 194]
[42 193]
[43 175]
[45 173]
[46 172]
[47 171]
[48 170]
[61 159]
[62 158]
[63 157]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[70 131]
[71 130]
[72 129]
[73 128]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
