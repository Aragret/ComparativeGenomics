%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[225.80760193 274.24807739]
[237.29859924 264.56228638]
[229.44683838 251.78144836]
[221.59507751 239.00059509]
[208.34037781 232.20634460]
[207.70928955 216.39773560]
[199.85752869 203.61688232]
[190.28240967 192.07058716]
[179.17517090 181.98944092]
[164.55079651 179.16508484]
[159.53207397 164.16099548]
[148.42483521 154.07984924]
[137.31761169 143.99871826]
[126.21037292 133.91757202]
[115.10314178 123.83643341]
[103.99590302 113.75529480]
[90.37322235 110.60662842]
[85.92295837 97.35193634]
[70.50411987 93.80651093]
[66.27985382 79.52348328]
[50.86101913 75.97805023]
[46.63675308 61.69502640]
[35.52951813 51.61388779]
[24.42228508 41.53274918]
[11.28002644 48.99856949]
[-3.50635529 52.03260803]
[-18.48625565 50.35006332]
[-32.19404984 44.12821198]
[-43.29249191 33.98783875]
[-50.70316696 20.93131256]
[-53.71126556 6.24351311]
[-52.03452301 -8.63461399]
[-45.84965515 -22.24741745]
[-56.95689011 -32.32855606]
[-68.06412506 -42.40969467]
[-79.17135620 -52.49083328]
[-90.05930328 -42.16296768]
[-101.68861389 -32.67764282]
[-113.99424744 -24.08790588]
[-126.90738678 -16.44179344]
[-140.35581970 -9.78206825]
[-154.26432800 -4.14597225]
[-168.55513000 0.43497339]
[-183.14831543 3.93515062]
[-197.96226501 6.33498430]
[-212.91412354 7.62105370]
[-227.92028809 7.78616667]
[-242.89683533 6.82939959]
[-257.76000977 4.75610352]
[-272.42666626 1.57787251]
[-286.81481934 -2.68751860]
[-300.84396362 -8.01621628]
[-314.43566895 -14.37841892]
[-327.51391602 -21.73854828]
[-340.00558472 -30.05543900]
[-351.84078979 -39.28258514]
[-362.95333862 -49.36837769]
[-373.28112793 -60.25641632]
[-382.76632690 -71.88581085]
[-391.35595703 -84.19152069]
[-399.00195312 -97.10472870]
[-405.66156006 -110.55321503]
[-411.29754639 -124.46177673]
[-415.87835693 -138.75262451]
[-419.37841797 -153.34584045]
[-421.77810669 -168.15980530]
[-423.06405640 -183.11167908]
[-423.22903442 -198.11784363]
[-422.27212524 -213.09437561]
[-420.19869995 -227.95751953]
[-417.02035522 -242.62416077]
[-412.75482178 -257.01226807]
[-407.42599487 -271.04138184]
[-401.06369019 -284.63302612]
[-393.70343018 -297.71121216]
[-385.38644409 -310.20278931]
[-376.15917969 -322.03793335]
[-366.07330322 -333.15039062]
[-355.18518066 -343.47805786]
[-343.55569458 -352.96319580]
[-331.24990845 -361.55270386]
[-318.33663940 -369.19857788]
[-304.88809204 -375.85806274]
[-290.97946167 -381.49392700]
[-276.68859863 -386.07461548]
[-262.09533691 -389.57455444]
[-247.28135681 -391.97412109]
[-232.32946777 -393.25991821]
[-217.32330322 -393.42477417]
[-202.34677124 -392.46774292]
[-187.48364258 -390.39416504]
[-172.81703186 -387.21569824]
[-158.42897034 -382.95004272]
[-144.39991760 -377.62109375]
[-130.80831909 -371.25866699]
[-117.73018646 -363.89828491]
[-105.23867798 -355.58117676]
[-93.40363312 -346.35382080]
[-82.29125214 -336.26785278]
[-71.96367645 -325.37960815]
[-62.47866058 -313.75006104]
[-53.88924789 -301.44421387]
[-46.24348068 -288.53085327]
[-39.58411026 -275.08224487]
[-33.94837952 -261.17358398]
[-29.36781311 -246.88265991]
[-25.86802292 -232.28939819]
[-23.46858025 -217.47538757]
[-22.18290520 -202.52348328]
[-22.01819038 -187.51731873]
[-22.97535324 -172.54080200]
[-25.04904175 -157.67768860]
[-28.22766113 -143.01110840]
[-32.49343491 -128.62307739]
[-37.82250214 -114.59406281]
[-44.18506241 -101.00252533]
[-51.54553986 -87.92446136]
[-59.86276245 -75.43302155]
[-69.09021759 -63.59806824]
[-57.98298645 -53.51692963]
[-46.87575150 -43.43578720]
[-35.76851654 -33.35464859]
[-22.81704521 -40.82595444]
[-8.17055988 -43.93249130]
[6.73917627 -42.35771942]
[20.45068169 -36.24334717]
[31.61602402 -26.17668343]
[39.13331604 -13.13423729]
[42.25546646 1.61298394]
[40.66440201 16.62334633]
[34.50342560 30.42551422]
[45.61065674 40.50665283]
[56.71789169 50.58779144]
[71.34226227 53.41215134]
[76.36099243 68.41625214]
[90.98536682 71.24060822]
[96.00409698 86.24470520]
[109.62677765 89.39337158]
[114.07704163 102.64806366]
[125.18428040 112.72920227]
[136.29150391 122.81034088]
[147.39874268 132.89147949]
[158.50598145 142.97261047]
[169.61320496 153.05375671]
[185.03204346 156.59918213]
[189.25631714 170.88221741]
[200.36354065 180.96334839]
[195.14855957 166.89907837]
[194.25082397 151.92596436]
[197.74801636 137.33934021]
[205.33760071 124.40109253]
[216.36299133 114.23050690]
[229.87037659 107.70744324]
[244.69125366 105.39620972]
[259.54345703 107.49675751]
[273.14212036 113.82736206]
[284.31079102 123.84036255]
[292.08334351 136.66954041]
[295.78732300 151.20503235]
[295.10229492 166.18937683]
[290.08752441 180.32629395]
[281.17684937 192.39277649]
[269.14114380 201.34495544]
[255.02160645 206.40840149]
[240.03970337 207.14505005]
[225.49153137 203.49118042]
[212.63836670 195.76513672]
[220.49012756 208.54597473]
[234.30644226 216.25440979]
[234.37593079 231.14884949]
[242.22767639 243.92968750]
[250.07943726 256.71054077]
[263.91326904 250.83831787]
[278.46780396 247.09362793]
[293.41793823 245.56010437]
[308.42962646 246.27201843]
[323.16751099 249.21343994]
[337.30236816 254.31869507]
[350.51840210 261.47369385]
[362.52038574 270.51861572]
[373.04013062 281.25137329]
[381.84268188 293.43218994]
[388.73138428 306.78900146]
[393.55230713 321.02331543]
[396.19775391 335.81723022]
[396.60864258 350.84014893]
[394.77578735 365.75653076]
[390.74014282 380.23312378]
[384.59185791 393.94647217]
[376.46829224 406.59024048]
[366.55090332 417.88198853]
[355.06127930 427.56942749]
[342.25610352 435.43612671]
[328.42144775 441.30636597]
[313.86636353 445.04898071]
[298.91601562 446.58038330]
[283.90441895 445.86633301]
[269.16696167 442.92279053]
[255.03282166 437.81555176]
[241.81781006 430.65866089]
[229.81713867 421.61203003]
[219.29888916 410.87777710]
[210.49807739 398.69567871]
[203.61129761 385.33792114]
[198.79240417 371.10290527]
[196.14906311 356.30862427]
[195.74031067 341.28561401]
[197.57528687 326.36950684]
[201.61299133 311.89352417]
[207.76324463 298.18103027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 170]
[6 168]
[7 167]
[8 147]
[9 146]
[11 144]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[18 137]
[20 135]
[22 133]
[23 132]
[24 131]
[33 122]
[34 121]
[35 120]
[36 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
