%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[46.83469391 950.13342285]
[31.83372879 949.91644287]
[16.85760307 949.02667236]
[1.93647707 947.46588135]
[-12.89960003 945.23724365]
[-27.62075043 942.34521484]
[-42.19732666 938.79565430]
[-56.59997177 934.59564209]
[-70.79969025 929.75372314]
[-84.76786804 924.27960205]
[-98.47639465 918.18432617]
[-111.89764404 911.48016357]
[-125.00460052 904.18060303]
[-137.77087402 896.30035400]
[-150.17073059 887.85522461]
[-162.17922974 878.86236572]
[-173.77215576 869.33972168]
[-184.92619324 859.30664062]
[-195.61885071 848.78314209]
[-205.82861328 837.79058838]
[-215.53491211 826.35101318]
[-224.71820068 814.48748779]
[-233.36000061 802.22393799]
[-241.44288635 789.58496094]
[-248.95057678 776.59613037]
[-255.86798096 763.28350830]
[-262.18115234 749.67395020]
[-267.87734985 735.79486084]
[-272.94515991 721.67413330]
[-277.37432861 707.34033203]
[-281.15594482 692.82220459]
[-284.28240967 678.14910889]
[-286.74740601 663.35046387]
[-288.54598999 648.45611572]
[-289.67453003 633.49609375]
[-290.13076782 618.50048828]
[-289.91375732 603.49951172]
[-289.02392578 588.52337646]
[-287.46313477 573.60229492]
[-285.23443604 558.76617432]
[-282.34240723 544.04504395]
[-278.79278564 529.46850586]
[-274.59277344 515.06585693]
[-269.75082397 500.86614990]
[-264.27670288 486.89797974]
[-258.18139648 473.18945312]
[-251.47718811 459.76821899]
[-244.17759705 446.66128540]
[-236.29730225 433.89501953]
[-227.85220337 421.49517822]
[-218.85928345 409.48669434]
[-209.33665466 397.89379883]
[-199.30349731 386.73977661]
[-188.78002930 376.04711914]
[-177.78742981 365.83740234]
[-166.34783936 356.13110352]
[-154.48429871 346.94784546]
[-142.22070312 338.30606079]
[-129.58174133 330.22320557]
[-116.59286499 322.71554565]
[-103.28023529 315.79815674]
[-89.67066956 309.48501587]
[-75.79156494 303.78884888]
[-61.67087936 298.72106934]
[-47.33704376 294.29193115]
[-32.81893158 290.51034546]
[-18.14577866 287.38391113]
[-3.34713149 284.91891479]
[11.54720497 283.12036133]
[26.50723648 281.99185181]
[41.50283432 281.53564453]
[56.50379944 281.75268555]
[71.47991943 282.64254761]
[73.04044342 267.72393799]
[74.60096741 252.80532837]
[76.16149139 237.88671875]
[68.79036713 228.29542542]
[69.96836853 215.85371399]
[79.60697174 207.28282166]
[81.38944244 192.38911438]
[83.17190552 177.49539185]
[84.95436859 162.60166931]
[70.44210052 157.19853210]
[57.63970184 148.48655701]
[47.28776169 136.96972656]
[39.98512268 123.31427002]
[36.15423203 108.31012726]
[36.01669312 92.82526398]
[39.58046341 77.75544739]
[46.63938904 63.97243118]
[56.78512573 52.27354050]
[69.43075562 43.33553314]
[83.84475708 37.67545700]
[99.19331360 35.62073517]
[100.75383759 20.70212936]
[102.31435394 5.78352547]
[103.65258789 -9.15665913]
[104.76824188 -24.11511230]
[105.88388824 -39.07356644]
[91.95937347 -45.02222824]
[80.72251892 -55.17170715]
[73.39222717 -68.42106628]
[70.76362610 -83.33311462]
[73.12184906 -98.29030609]
[80.21109009 -111.67018890]
[91.26236725 -122.02142334]
[105.07691956 -128.22117615]
[120.15624237 -129.59695435]
[134.86463928 -125.99951935]
[147.60667419 -117.81908417]
[157.00016785 -105.94301605]
[162.02618408 -91.65953827]
[162.13955688 -76.51800537]
[157.32795715 -62.16087341]
[148.11334229 -50.14548492]
[135.49523926 -41.77518463]
[120.84233856 -37.95791626]
[119.72669220 -22.99946404]
[118.61104584 -8.04101086]
[120.99346924 -3.90179443]
[120.80094910 1.77799082]
[117.23296356 7.34404850]
[115.67243958 22.26265335]
[114.11191559 37.18125916]
[127.76242828 41.90879440]
[140.01531982 49.56077957]
[150.25373840 59.75198746]
[157.96226501 71.96937561]
[162.75285339 85.59789276]
[164.38430786 99.95144653]
[162.77450562 114.30744171]
[158.00448608 127.94316864]
[150.31439209 140.17216492]
[140.09133911 150.37881470]
[127.85001373 158.04927063]
[114.20664978 162.79737854]
[99.84809113 164.38414001]
[98.06562042 179.27786255]
[96.28315735 194.17156982]
[94.50068665 209.06529236]
[102.13842010 225.82078552]
[91.08009338 239.44725037]
[89.51956940 254.36584473]
[87.95904541 269.28445435]
[86.39852905 284.20306396]
[101.23461151 286.43164062]
[115.95577240 289.32360840]
[130.53236389 292.87313843]
[144.93502808 297.07305908]
[159.13475037 301.91491699]
[173.10296631 307.38897705]
[186.81150818 313.48422241]
[200.23278809 320.18835449]
[213.33976746 327.48785400]
[226.10606384 335.36807251]
[238.50596619 343.81311035]
[250.51448059 352.80596924]
[262.10745239 362.32852173]
[273.26153564 372.36160278]
[283.95422363 382.88504028]
[294.16403198 393.87756348]
[303.87039185 405.31710815]
[313.05371094 417.18060303]
[321.69555664 429.44415283]
[329.77847290 442.08306885]
[337.28622437 455.07189941]
[344.20367432 468.38449097]
[350.51690674 481.99401855]
[356.21316528 495.87307739]
[361.28100586 509.99374390]
[365.71023560 524.32757568]
[369.49191284 538.84564209]
[372.61843872 553.51879883]
[375.08349609 568.31738281]
[376.88214111 583.21173096]
[378.01074219 598.17175293]
[378.46701050 613.16735840]
[378.25006104 628.16833496]
[377.36029053 643.14447021]
[375.79956055 658.06555176]
[373.57092285 672.90167236]
[370.67892456 687.62280273]
[367.12939453 702.19940186]
[362.92944336 716.60205078]
[358.08752441 730.80175781]
[352.61343384 744.76995850]
[346.51818848 758.47851562]
[339.81402588 771.89978027]
[332.51449585 785.00671387]
[324.63424683 797.77301025]
[316.18920898 810.17291260]
[307.19631958 822.18139648]
[297.67373657 833.77435303]
[287.64062500 844.92840576]
[277.11721802 855.62109375]
[266.12463379 865.83087158]
[254.68508911 875.53717041]
[242.82157898 884.72052002]
[230.55801392 893.36230469]
[217.91908264 901.44525146]
[204.93023682 908.95294189]
[191.61763000 915.87036133]
[178.00808716 922.18359375]
[164.12901306 927.87982178]
[150.00834656 932.94763184]
[135.67453003 937.37683105]
[121.15642548 941.15850830]
[106.48328400 944.28497314]
[91.68464661 946.75000000]
[76.79031372 948.54864502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 145]
[74 144]
[75 143]
[76 142]
[79 140]
[80 139]
[81 138]
[82 137]
[94 124]
[95 123]
[96 122]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
