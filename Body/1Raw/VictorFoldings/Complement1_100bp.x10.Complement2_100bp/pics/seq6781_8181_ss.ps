%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[125.64646149 765.20959473]
[130.71836853 779.47686768]
[130.88041687 794.61791992]
[126.11499786 808.99047852]
[116.93905640 821.03540039]
[104.34791565 829.44622803]
[89.70736694 833.31060791]
[74.60552216 832.20928955]
[60.68050003 826.26177979]
[49.44279099 816.11328125]
[42.11137772 802.86456299]
[39.48151398 787.95269775]
[41.83847046 772.99530029]
[48.92657852 759.61486816]
[59.97697830 749.26269531]
[73.79100037 743.06176758]
[88.87020874 741.68469238]
[92.40988159 727.10833740]
[95.94955444 712.53192139]
[99.48922729 697.95556641]
[103.02889252 683.37921143]
[98.51346588 669.18554688]
[109.28879547 657.60095215]
[110.96033478 642.69433594]
[110.73700714 627.69604492]
[110.51367950 612.69769287]
[110.29035187 597.69934082]
[110.06702423 582.70098877]
[109.84369659 567.70263672]
[109.62036896 552.70434570]
[99.82183075 538.14562988]
[108.92395782 522.13836670]
[108.47734833 507.14501953]
[108.03074646 492.15167236]
[107.58413696 477.15829468]
[107.13753510 462.16494751]
[106.69092560 447.17160034]
[106.24432373 432.17825317]
[91.05932617 429.50119019]
[76.75415802 423.73168945]
[63.95146179 415.11831665]
[53.20899963 404.03347778]
[44.99536133 390.95739746]
[39.66952896 376.45712280]
[37.46518707 361.16207886]
[38.48045731 345.73672485]
[42.67355347 330.85168457]
[49.86448288 317.15454102]
[59.74277115 305.24169922]
[71.88087463 295.63247681]
[85.75267029 288.74630737]
[100.75628662 284.88464355]
[100.08650208 269.89959717]
[99.41671753 254.91455078]
[85.66233063 249.14546204]
[75.73592377 237.93048096]
[71.64644623 223.45854187]
[74.25656891 208.58549500]
[83.10135651 196.27059937]
[96.46998596 188.98767090]
[95.80020142 174.00262451]
[95.13041687 159.01759338]
[82.62052155 150.97766113]
[77.17928314 136.94708252]
[81.08882141 122.23080444]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[82.94699097 59.71760559]
[90.10826874 46.65753937]
[89.43848419 31.67250252]
[88.76869965 16.68746376]
[80.42290497 3.24654412]
[87.58418274 -9.81352234]
[79.23839569 -23.25444221]
[86.39967346 -36.31450653]
[85.72988892 -51.29954529]
[85.06010437 -66.28458405]
[84.16728973 -81.25798798]
[83.05163574 -96.21644592]
[81.93598938 -111.17489624]
[73.19371033 -124.36137390]
[79.96296692 -137.62886047]
[78.84732056 -152.58732605]
[70.10504150 -165.77378845]
[76.87429810 -179.04129028]
[75.75865173 -193.99974060]
[74.64300537 -208.95819092]
[64.05949402 -198.32855225]
[49.06046295 -198.15803528]
[38.23803711 -208.54432678]
[37.79179001 -223.53768921]
[47.97735214 -234.54924011]
[62.95997620 -235.27105713]
[74.15650940 -225.29052734]
[74.37983704 -240.28886414]
[74.60316467 -255.28720093]
[74.82649231 -270.28552246]
[75.04981995 -285.28387451]
[61.57450867 -292.54159546]
[53.02515793 -305.23675537]
[51.36634445 -320.45211792]
[56.97925949 -334.69128418]
[68.57408905 -344.68218994]
[83.48642731 -348.12902832]
[98.28953552 -344.23971558]
[109.58175659 -333.90802002]
[114.76822662 -319.50805664]
[112.65713501 -304.34881592]
[103.73358917 -291.91384888]
[90.04815674 -285.06054688]
[89.82482910 -270.06219482]
[89.60150146 -255.06387329]
[89.37817383 -240.06553650]
[89.15484619 -225.06719971]
[89.60145569 -210.07385254]
[90.71710205 -195.11538696]
[91.83275604 -180.15693665]
[100.49523163 -168.04039001]
[93.80577087 -153.70297241]
[94.92142487 -138.74452209]
[103.58390045 -126.62796783]
[96.89443970 -112.29054260]
[98.01009369 -97.33209229]
[99.12574005 -82.37364197]
[102.09581757 -78.63362885]
[102.74797821 -72.98812866]
[100.04514313 -66.95436859]
[100.71492767 -51.96932983]
[101.38471222 -36.98429108]
[109.68259430 -24.61520386]
[102.56922150 -10.48330688]
[110.86711121 1.88578176]
[103.75373840 16.01767731]
[104.42352295 31.00271606]
[105.09330750 45.98775482]
[113.39118958 58.35684586]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[120.81910706 120.45498657]
[126.02597046 134.76379395]
[121.85817719 149.22386169]
[110.11545563 158.34780884]
[110.78524017 173.33283997]
[111.45502472 188.31788635]
[125.42009735 194.37907410]
[135.32829285 205.85577393]
[139.25491333 220.43664551]
[136.47286987 235.21572876]
[127.58660126 247.27157593]
[114.40175629 254.24476624]
[115.07154083 269.22979736]
[115.74132538 284.21484375]
[130.17271423 286.49337769]
[143.87472534 291.54968262]
[156.31843567 299.18643188]
[167.02386475 309.10687256]
[175.57855225 320.92605591]
[181.65339661 334.18603516]
[185.01538086 348.37344360]
[185.53642273 362.93948364]
[183.19834900 377.32104492]
[178.09342957 390.96255493]
[170.42083740 403.33743286]
[160.47875977 413.96835327]
[148.65292358 422.44577026]
[135.40156555 428.44354248]
[121.23767090 431.73165894]
[121.68428040 446.72500610]
[122.13088226 461.71835327]
[122.57749176 476.71170044]
[123.02409363 491.70504761]
[123.47070312 506.69839478]
[123.91730499 521.69177246]
[132.75282288 531.08837891]
[132.81613159 543.58557129]
[124.61870575 552.48101807]
[124.84203339 567.47930908]
[125.06536102 582.47766113]
[125.28868866 597.47601318]
[125.51201630 612.47436523]
[125.73534393 627.47271729]
[125.95867157 642.47100830]
[132.88111877 629.16387939]
[143.70381165 618.77789307]
[157.28460693 612.40905762]
[172.19027710 610.72949219]
[186.84780884 613.91650391]
[199.71034241 621.63366699]
[209.42047119 633.06665039]
[214.95346069 647.00891113]
[215.72540283 661.98901367]
[211.65484619 676.42614746]
[203.17134094 688.79669189]
[191.17018127 697.79516602]
[176.91787720 702.47192383]
[161.91851807 702.33337402]
[147.75502014 697.39422607]
[135.92207336 688.17572021]
[127.66845703 675.65063477]
[123.86516571 661.14062500]
[128.12741089 676.37689209]
[117.60527039 686.91888428]
[114.06559753 701.49523926]
[110.52592468 716.07159424]
[106.98625183 730.64801025]
[103.44657898 745.22436523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 210]
[18 209]
[19 208]
[20 207]
[21 206]
[23 204]
[24 186]
[25 185]
[26 184]
[27 183]
[28 182]
[29 181]
[30 180]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[52 156]
[53 155]
[54 154]
[60 148]
[61 147]
[62 146]
[66 142]
[68 140]
[69 139]
[71 137]
[72 136]
[73 135]
[75 133]
[77 131]
[78 130]
[79 129]
[80 126]
[81 125]
[82 124]
[84 122]
[85 121]
[87 119]
[88 118]
[89 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
