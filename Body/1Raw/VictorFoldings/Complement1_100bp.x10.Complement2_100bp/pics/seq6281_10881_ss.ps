%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[107.58436584 701.15313721]
[96.32242584 691.19982910]
[86.71193695 679.64392090]
[78.97816467 666.75634766]
[73.30242157 652.83923340]
[69.81773376 638.21875000]
[68.60580444 623.23773193]
[69.69503021 608.24725342]
[73.05988312 593.59875488]
[78.62149048 579.63568115]
[86.24948120 566.68518066]
[95.76502991 555.05102539]
[106.94509125 545.00579834]
[119.52758789 536.78497314]
[133.21755981 530.58135986]
[147.69410706 526.54034424]
[145.91165161 511.64660645]
[144.12918091 496.75286865]
[142.34671021 481.85916138]
[133.15184021 470.14151001]
[139.19442749 455.51968384]
[137.41195679 440.62594604]
[135.62950134 425.73223877]
[133.84703064 410.83853149]
[132.06455994 395.94482422]
[116.71640778 394.82797241]
[101.87414551 390.74591064]
[88.10517883 383.85278320]
[75.93627930 374.41033936]
[65.83335876 362.77777100]
[58.18370438 349.39828491]
[53.28107452 334.78198242]
[51.31445312 319.48666382]
[52.36075211 304.09628296]
[56.38181305 289.19888306]
[63.22577667 275.36398315]
[72.63284302 263.12081909]
[84.24511719 252.93814087]
[97.62023163 245.20629883]
[112.24818420 240.22216797]
[110.24417114 225.35664368]
[108.24015808 210.49111938]
[106.23614502 195.62557983]
[90.94973755 190.96980286]
[79.18120575 180.07414246]
[73.32112122 165.08270264]
[74.58995056 148.97834778]
[82.78426361 134.98918152]
[96.30733490 125.94150543]
[94.08222198 111.10746002]
[91.52639008 96.32680511]
[88.64111328 81.60691833]
[85.75584412 66.88702393]
[81.43338776 81.25074005]
[72.93558502 93.61145782]
[61.07238770 102.79103088]
[46.97452164 107.91452026]
[31.98570251 108.49358368]
[17.53457260 104.47303772]
[4.99851894 96.23608398]
[-4.42760038 84.56782532]
[-9.84534836 70.58040619]
[-10.73833942 55.60700989]
[-7.02145863 41.07481003]
[0.95102334 28.36892509]
[12.41922092 18.70039558]
[26.29005814 12.99076748]
[41.24145508 11.78424358]
[55.84834290 15.19582367]
[68.71848297 22.90033531]
[78.62517548 34.16343689]
[84.62446594 47.91269684]
[85.74011230 32.95424271]
[86.85576630 17.99579048]
[80.16630554 3.65836787]
[88.82878113 -8.45817852]
[89.94443512 -23.41663170]
[91.06008148 -38.37508392]
[82.68179321 -54.77282333]
[93.12063599 -68.87947083]
[94.01345825 -83.85287476]
[94.90627289 -98.82628632]
[95.79908752 -113.79969025]
[96.69190216 -128.77310181]
[97.47322845 -143.75273132]
[98.14301300 -158.73777771]
[83.38807678 -161.58555603]
[69.20505524 -166.55142212]
[55.89625931 -173.52951050]
[43.74535751 -182.37107849]
[33.01135254 -192.88768005]
[23.92304230 -204.85516357]
[16.67413902 -218.01841736]
[11.41915894 -232.09687805]
[8.27011013 -246.79045105]
[7.29411411 -261.78598022]
[8.51197529 -276.76376343]
[11.89773369 -291.40463257]
[17.37922287 -305.39645386]
[24.83960533 -318.44100952]
[34.11986160 -330.26025391]
[45.02217865 -340.60226440]
[57.31418228 -349.24661255]
[70.73385620 -356.00903320]
[84.99517059 -360.74536133]
[99.79413605 -363.35464478]
[114.81531525 -363.78131104]
[129.73852539 -362.01623535]
[144.24569702 -358.09704590]
[158.02757263 -352.10726929]
[170.79043579 -344.17456055]
[182.26220703 -334.46807861]
[192.19837952 -323.19464111]
[200.38716125 -310.59457397]
[206.65402222 -296.93643188]
[210.86535645 -282.51138306]
[212.93142700 -267.62686157]
[212.80818176 -252.60011292]
[210.49824524 -237.75148010]
[206.05085754 -223.39743042]
[199.56080627 -209.84394836]
[191.16644287 -197.37989807]
[181.04669189 -186.27096558]
[169.41723633 -176.75393677]
[156.52598572 -169.03166199]
[142.64770508 -163.26875305]
[128.07820129 -159.58804321]
[113.12805176 -158.06797791]
[112.45826721 -143.08294678]
[115.29995728 -136.26043701]
[111.66530609 -127.88027954]
[110.77249146 -112.90687561]
[109.87967682 -97.93346405]
[108.98686218 -82.96006012]
[108.09404755 -67.98665619]
[115.88609314 -58.73405838]
[115.26481628 -46.25215912]
[106.01853180 -37.25943756]
[104.90288544 -22.30098343]
[103.78723907 -7.34252977]
[110.55649567 5.92496443]
[101.81421661 19.11143875]
[100.69857025 34.06989288]
[99.58291626 49.02834702]
[100.47573090 64.00175476]
[103.36100769 78.72164154]
[106.24627686 93.44153595]
[109.10961151 96.02488708]
[110.82034302 99.85780334]
[110.84592438 104.39723206]
[108.91626740 108.88234711]
[111.14138031 123.71638489]
[124.79328918 127.37317657]
[135.98640442 135.93112183]
[143.05085754 148.07191467]
[144.94860840 161.94596863]
[141.42582703 175.45408630]
[133.04635620 186.56518555]
[121.10166931 193.62156677]
[123.10568237 208.48710632]
[125.10969543 223.35263062]
[127.11371613 238.21815491]
[141.72880554 239.02549744]
[155.94065857 242.51190186]
[169.26264954 248.55639648]
[181.23887634 256.95050049]
[191.45979309 267.40527344]
[199.57627869 279.56146240]
[205.31143188 293.00155640]
[208.47012329 307.26449585]
[208.94561768 321.86114502]
[206.72311401 336.29122925]
[201.88029480 350.06054688]
[194.58453369 362.69775391]
[185.08715820 373.77053833]
[173.71478271 382.90042114]
[160.85806274 389.77578735]
[146.95828247 394.16235352]
[148.74075317 409.05606079]
[150.52320862 423.94976807]
[152.30567932 438.84350586]
[154.08815002 453.73721313]
[163.41050720 466.52017212]
[157.24043274 480.07669067]
[159.02290344 494.97042847]
[160.80535889 509.86413574]
[162.58782959 524.75787354]
[177.60913086 525.26861572]
[192.37640381 528.06652832]
[206.54347229 533.08593750]
[219.77824402 540.20922852]
[231.77047729 549.26940918]
[242.23905945 560.05407715]
[250.93859863 572.31042480]
[257.66516113 585.75115967]
[262.26104736 600.06127930]
[264.61853027 614.90521240]
[264.68237305 629.93505859]
[262.45104980 644.79846191]
[257.97686768 659.14709473]
[251.36473083 672.64447021]
[242.76962280 684.97430420]
[232.39303589 695.84753418]
[220.47817993 705.00921631]
[207.30439758 712.24468994]
[193.18046570 717.38427734]
[178.43750000 720.30749512]
[163.42108154 720.94586182]
[148.48321533 719.28436279]
[133.97406006 715.36193848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 187]
[17 186]
[18 185]
[19 184]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[40 162]
[41 161]
[42 160]
[43 159]
[49 152]
[50 151]
[51 147]
[52 146]
[53 145]
[72 144]
[73 143]
[74 142]
[76 140]
[77 139]
[78 138]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 129]
[86 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
