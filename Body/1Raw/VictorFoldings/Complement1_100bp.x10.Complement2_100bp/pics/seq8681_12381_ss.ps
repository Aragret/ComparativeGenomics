%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[56.24514771 462.87060547]
[45.59159088 473.43634033]
[34.33081818 483.35238647]
[22.50239182 492.58392334]
[10.14785480 501.09854126]
[-2.68939543 508.86627197]
[-15.96426773 515.85992432]
[-29.63013268 522.05480957]
[-43.63898849 527.42932129]
[-57.94163132 531.96441650]
[-72.48781586 535.64428711]
[-87.22645569 538.45599365]
[-102.10577393 540.38958740]
[-117.07350922 541.43835449]
[-132.07708740 541.59851074]
[-147.06379700 540.86962891]
[-161.98101807 539.25421143]
[-176.77633667 536.75787354]
[-191.39778137 533.38946533]
[-205.79400635 529.16076660]
[-219.91442871 524.08666992]
[-233.70945740 518.18499756]
[-247.13064575 511.47644043]
[-260.13082886 503.98458862]
[-272.66436768 495.73574829]
[-284.68722534 486.75888062]
[-296.15719604 477.08557129]
[-307.03393555 466.74972534]
[-317.27926636 455.78771973]
[-326.85720825 444.23800659]
[-335.73413086 432.14117432]
[-343.87884521 419.53970337]
[-351.26269531 406.47787476]
[-357.85980225 393.00155640]
[-363.64700317 379.15808105]
[-368.60391235 364.99609375]
[-372.71313477 350.56533813]
[-375.96026611 335.91647339]
[-378.33389282 321.10098267]
[-379.82568359 306.17089844]
[-380.43035889 291.17864990]
[-380.14581299 276.17691040]
[-378.97305298 261.21838379]
[-376.91622925 246.35559082]
[-373.98251343 231.64076233]
[-370.18222046 217.12556458]
[-365.52871704 202.86100769]
[-360.03836060 188.89715576]
[-353.73040771 175.28309631]
[-346.62701416 162.06663513]
[-338.75314331 149.29420471]
[-330.13647461 137.01065063]
[-320.80722046 125.25912476]
[-310.79821777 114.08090973]
[-300.14456177 103.51527405]
[-288.88369751 93.59931946]
[-277.05520630 84.36788940]
[-264.70059204 75.85340118]
[-251.86326599 68.08576202]
[-238.58833313 61.09225464]
[-224.92240906 54.89745331]
[-210.91349792 49.52310944]
[-196.61082458 44.98810196]
[-182.06460571 41.30836105]
[-167.32594299 38.49681473]
[-152.44660950 36.56333542]
[-137.47886658 35.51471329]
[-122.47528839 35.35463715]
[-107.48857880 36.08366394]
[-92.57137299 37.69923401]
[-77.77607727 40.19567490]
[-63.15465927 43.56421661]
[-48.75847626 47.79302597]
[-34.63809204 52.86725235]
[-20.84311104 58.76906586]
[-7.42198467 65.47774506]
[5.57814360 72.96971130]
[18.11160851 81.21866608]
[30.13438797 90.19561768]
[41.60425186 99.86904907]
[52.48090744 110.20497131]
[62.72615051 121.16708374]
[74.27245331 111.59196472]
[85.81875610 102.01684570]
[90.85643768 88.97409058]
[104.60612488 86.43685150]
[116.15242767 76.86173248]
[127.69873047 67.28661346]
[139.24502563 57.71149063]
[130.46771240 45.54055405]
[122.53208923 32.80482864]
[115.47435760 19.56242180]
[109.32671356 5.87375832]
[104.11722565 -8.19870281]
[99.86965179 -22.59075165]
[96.60337830 -37.23672104]
[94.33330536 -52.06978226]
[93.06978607 -67.02225494]
[92.81859589 -82.02591705]
[93.58087921 -97.01230621]
[95.35314941 -111.91304016]
[98.12732697 -126.66014099]
[101.89075470 -141.18630981]
[106.62625885 -155.42526245]
[112.31223297 -169.31204224]
[118.92272949 -182.78329468]
[126.42758179 -195.77751160]
[134.79255676 -208.23545837]
[143.97949219 -220.10023499]
[153.94645691 -231.31774902]
[164.64797974 -241.83680725]
[176.03521729 -251.60940552]
[188.05622864 -260.59094238]
[200.65617371 -268.74044800]
[213.77752686 -276.02075195]
[227.36045837 -282.39862061]
[241.34295654 -287.84497070]
[255.66123962 -292.33489990]
[270.24996948 -295.84799194]
[285.04260254 -298.36816406]
[299.97161865 -299.88394165]
[314.96890259 -300.38839722]
[329.96600342 -299.87924194]
[344.89456177 -298.35879517]
[359.68637085 -295.83398438]
[374.27401733 -292.31634521]
[388.59091187 -287.82192993]
[402.57168579 -282.37121582]
[416.15261841 -275.98910522]
[429.27169800 -268.70468140]
[441.86907959 -260.55123901]
[453.88729858 -251.56591797]
[465.27148438 -241.78976440]
[475.96969604 -231.26736450]
[485.93316650 -220.04673767]
[495.11636353 -208.17907715]
[503.47744751 -195.71852112]
[510.97824097 -182.72193909]
[517.58453369 -169.24864197]
[523.26617432 -155.36007690]
[527.99719238 -141.11964417]
[531.75610352 -126.59229279]
[534.52563477 -111.84432983]
[536.29327393 -96.94303131]
[537.05084229 -81.95640564]
[536.79498291 -66.95282745]
[535.52673340 -52.00074768]
[533.25207520 -37.16839600]
[529.98120117 -22.52345276]
[525.72912598 -8.13273335]
[520.51519775 5.93809652]
[514.36328125 19.62483406]
[507.30142212 32.86503220]
[499.36181641 45.59827423]
[490.58068848 57.76646423]
[480.99810791 69.31407928]
[470.65783691 80.18843079]
[459.60702515 90.33990479]
[447.89608765 99.72217560]
[435.57846069 108.29243469]
[422.71038818 116.01158142]
[409.35052490 122.84439087]
[395.55987549 128.75968933]
[381.40133667 133.73048401]
[366.93951416 137.73408508]
[352.24041748 140.75224304]
[337.37109375 142.77117920]
[322.39938354 143.78169250]
[307.39361572 143.77914429]
[292.42227173 142.76356506]
[277.55361938 140.73959351]
[262.85556030 137.71644592]
[248.39509583 133.70794678]
[234.23825073 128.73234558]
[220.44960022 122.81237793]
[207.09205627 115.97504425]
[194.22657776 108.25153351]
[181.91188049 99.67710114]
[170.20411682 90.29086304]
[159.15673828 80.13565063]
[148.82014465 69.25779724]
[137.27384949 78.83291626]
[125.72754669 88.40803528]
[114.18124390 97.98315430]
[109.14356232 111.02590942]
[95.39387512 113.56314850]
[83.84757233 123.13826752]
[72.30126953 132.71339417]
[81.17829132 144.81015015]
[89.32309723 157.41152954]
[96.70708466 170.47329712]
[103.30431366 183.94955444]
[109.09160614 197.79296875]
[114.04864502 211.95492554]
[118.15801239 226.38565063]
[121.40527344 241.03448486]
[123.77902985 255.84996033]
[125.27092743 270.78002930]
[125.87574005 285.77227783]
[125.59133911 300.77401733]
[124.41871643 315.73254395]
[122.36200714 330.59536743]
[119.42842102 345.31021118]
[115.62826538 359.82543945]
[110.97489166 374.09005737]
[105.48464203 388.05392456]
[99.17680359 401.66806030]
[92.07353973 414.88458252]
[84.19978333 427.65707397]
[75.58320618 439.94070435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 188]
[83 187]
[84 186]
[86 184]
[87 183]
[88 182]
[89 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
