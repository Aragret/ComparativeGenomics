%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[90.01293182 491.39376831]
[75.02880859 490.72402954]
[60.08134460 489.48083496]
[45.19246292 487.66604614]
[30.38401794 485.28228760]
[15.67774391 482.33306885]
[1.09522521 478.82272339]
[-13.34213734 474.75643921]
[-27.61315536 470.14010620]
[-41.69688416 464.98056030]
[-55.57265091 459.28536987]
[-69.22009277 453.06286621]
[-82.61918640 446.32217407]
[-95.75025940 439.07324219]
[-108.59403992 431.32662964]
[-121.13168335 423.09378052]
[-133.34478760 414.38674927]
[-145.21542358 405.21832275]
[-156.72616577 395.60192871]
[-167.86013794 385.55169678]
[-178.60098267 375.08236694]
[-188.93293762 364.20935059]
[-198.84085083 352.94854736]
[-208.31016541 341.31649780]
[-217.32701111 329.33032227]
[-225.87811279 317.00753784]
[-233.95095825 304.36627197]
[-241.53369141 291.42507935]
[-248.61515808 278.20294189]
[-255.18499756 264.71926880]
[-261.23355103 250.99383545]
[-266.75195312 237.04679871]
[-271.73208618 222.89863586]
[-276.16665649 208.57009888]
[-280.04913330 194.08222961]
[-283.37387085 179.45626831]
[-286.13592529 164.71369934]
[-288.33129883 149.87615967]
[-289.95672607 134.96540833]
[-291.00982666 120.00334930]
[-291.48907471 105.01193237]
[-291.39376831 90.01316071]
[-290.72402954 75.02904510]
[-289.48086548 60.08157349]
[-287.66607666 45.19269180]
[-285.28231812 30.38424492]
[-282.33312988 15.67796993]
[-278.82278442 1.09544849]
[-274.75650024 -13.34191704]
[-270.14019775 -27.61293793]
[-264.98065186 -41.69666672]
[-259.28546143 -55.57244110]
[-253.06295776 -69.21988678]
[-246.32228088 -82.61898041]
[-239.07334900 -95.75006104]
[-231.32676697 -108.59384155]
[-223.09391785 -121.13149261]
[-214.38688660 -133.34458923]
[-205.21846008 -145.21524048]
[-195.60206604 -156.72598267]
[-185.55184937 -167.85997009]
[-175.08253479 -178.60081482]
[-164.20951843 -188.93278503]
[-152.94871521 -198.84069824]
[-141.31669617 -208.31002808]
[-129.33049011 -217.32687378]
[-117.00772858 -225.87799072]
[-104.36647034 -233.95083618]
[-91.42527771 -241.53356934]
[-78.20314026 -248.61506653]
[-64.71946716 -255.18490601]
[-50.99404144 -261.23345947]
[-37.04701614 -266.75186157]
[-22.89885521 -271.73202515]
[-8.57032299 -276.16659546]
[5.91755152 -280.04910278]
[20.54350471 -283.37380981]
[35.28607178 -286.13589478]
[50.12361526 -288.33126831]
[65.03435516 -289.95669556]
[79.99641418 -291.00982666]
[94.98783875 -291.48907471]
[109.98661041 -291.39376831]
[110.65639496 -306.37881470]
[111.32617950 -321.36386108]
[111.99596405 -336.34887695]
[112.66574860 -351.33392334]
[97.92874146 -354.28707886]
[83.81527710 -359.45529175]
[70.65620422 -366.71746826]
[58.75997543 -375.90335083]
[48.40546417 -386.79757690]
[39.83539581 -399.14483643]
[33.25066376 -412.65560913]
[28.80562401 -427.01327515]
[26.60447311 -441.88119507]
[26.69881058 -456.91088867]
[29.08642387 -471.75003052]
[33.71134567 -486.05075073]
[40.46516037 -499.47781372]
[49.18954468 -511.71649170]
[59.67999268 -522.47991943]
[71.69058990 -531.51574707]
[84.93979645 -538.61212158]
[99.11702728 -543.60278320]
[113.88993835 -546.37072754]
[128.91224670 -546.85101318]
[143.83180237 -545.03240967]
[158.29887390 -540.95751953]
[171.97431946 -534.72198486]
[184.53758240 -526.47180176]
[195.69415283 -516.40051270]
[205.18249512 -504.74411011]
[212.78021240 -491.77587891]
[218.30918884 -477.79977417]
[221.63983154 -463.14346313]
[222.69403076 -448.15051270]
[221.44711304 -433.17233276]
[217.92828369 -418.56005859]
[212.22004700 -404.65625000]
[204.45619202 -391.78677368]
[194.81874084 -380.25335693]
[183.53358459 -370.32635498]
[170.86526489 -362.23843384]
[157.11076355 -356.17922974]
[142.59249878 -352.29074097]
[127.65078735 -350.66415405]
[126.98100281 -335.67910767]
[126.31121826 -320.69406128]
[125.64143372 -305.70901489]
[124.97164917 -290.72399902]
[139.91911316 -289.48077393]
[154.80799866 -287.66595459]
[169.61643982 -285.28219604]
[184.32270813 -282.33297729]
[198.90522766 -278.82263184]
[213.34257507 -274.75628662]
[227.61358643 -270.13995361]
[241.69731140 -264.98040771]
[255.57307434 -259.28518677]
[269.22052002 -253.06265259]
[282.61959839 -246.32196045]
[295.75067139 -239.07299805]
[308.59442139 -231.32640076]
[321.13204956 -223.09353638]
[333.34515381 -214.38647461]
[345.21578979 -205.21801758]
[356.72650146 -195.60162354]
[367.86047363 -185.55137634]
[378.60128784 -175.08204651]
[388.93325806 -164.20899963]
[398.84115601 -152.94819641]
[408.31045532 -141.31614685]
[417.32727051 -129.32994080]
[425.87838745 -117.00714874]
[433.95120239 -104.36587524]
[441.53390503 -91.42466736]
[448.61538696 -78.20252228]
[455.18521118 -64.71883392]
[461.23373413 -50.99340439]
[466.75210571 -37.04636765]
[471.73223877 -22.89819717]
[476.16677856 -8.56965733]
[480.04925537 5.91822338]
[483.37396240 20.54418182]
[486.13601685 35.28675461]
[488.33135986 50.12430191]
[489.95675659 65.03504944]
[491.00985718 79.99710846]
[491.48907471 94.98852539]
[491.39376831 109.98730469]
[490.72399902 124.97142029]
[489.48080444 139.91888428]
[487.66598511 154.80776978]
[485.28222656 169.61621094]
[482.33300781 184.32247925]
[478.82266235 198.90499878]
[474.75634766 213.34236145]
[470.14004517 227.61337280]
[464.98046875 241.69709778]
[459.28527832 255.57286072]
[453.06274414 269.22030640]
[446.32208252 282.61938477]
[439.07312012 295.75045776]
[431.32650757 308.59423828]
[423.09365845 321.13186646]
[414.38662720 333.34497070]
[405.21817017 345.21560669]
[395.60177612 356.72634888]
[385.55154419 367.86029053]
[375.08221436 378.60113525]
[364.20916748 388.93310547]
[352.94836426 398.84100342]
[341.31631470 408.31030273]
[329.33010864 417.32714844]
[317.00735474 425.87823486]
[304.36608887 433.95108032]
[291.42486572 441.53381348]
[278.20272827 448.61526489]
[264.71905518 455.18508911]
[250.99362183 461.23364258]
[237.04658508 466.75204468]
[222.89842224 471.73214722]
[208.56988525 476.16671753]
[194.08200073 480.04919434]
[179.45603943 483.37390137]
[164.71347046 486.13595581]
[149.87593079 488.33132935]
[134.96517944 489.95672607]
[120.00312042 491.00982666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
