%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[181.35836792 742.61389160]
[167.49470520 736.87890625]
[153.92915344 730.47058105]
[140.69436646 723.40435791]
[127.82226562 715.69720459]
[115.34383392 707.36773682]
[103.28914642 698.43603516]
[91.68723297 688.92358398]
[80.56604767 678.85333252]
[69.95239258 668.24945068]
[59.87181854 657.13763428]
[50.34862518 645.54455566]
[41.40575027 633.49810791]
[33.06473541 621.02740479]
[25.34567833 608.16247559]
[18.26717377 594.93426514]
[11.84627438 581.37463379]
[6.09844971 567.51629639]
[1.03754592 553.39257812]
[-3.32424474 539.03759766]
[-6.97641420 524.48590088]
[-9.91016388 509.77249146]
[-12.11842632 494.93286133]
[-13.59588146 480.00274658]
[-14.33896923 465.01812744]
[-14.34590149 450.01510620]
[-13.61666012 435.02978516]
[-12.15300179 420.09832764]
[-9.95845222 405.25665283]
[-7.03830004 390.54055786]
[-3.39957881 375.98547363]
[0.94894516 361.62643433]
[5.99679565 347.49810791]
[11.73181248 333.63446045]
[18.14017868 320.06890869]
[25.20645714 306.83416748]
[32.91362381 293.96206665]
[41.24311066 281.48364258]
[50.17485046 269.42898560]
[59.68732834 257.82708740]
[69.75762177 246.70594788]
[80.36148071 236.09230042]
[91.47335815 226.01176453]
[103.06647491 216.48860168]
[115.11290741 207.54574585]
[127.58363342 199.20477295]
[140.44860840 191.48574829]
[133.37150574 178.26022339]
[126.29440308 165.03468323]
[119.21730042 151.80915833]
[112.14019012 138.58363342]
[98.25736237 140.41093445]
[84.58337402 137.39529419]
[72.75695038 129.89811707]
[64.19540405 118.81786346]
[59.92477036 105.48242950]
[60.45685577 91.48996735]
[65.72789001 78.51737213]
[75.10617828 68.11930847]
[68.22676849 54.78987885]
[61.34735107 41.46044922]
[54.46794128 28.13101959]
[41.26321411 19.41633034]
[42.30172348 4.55797291]
[35.42231369 -8.77145672]
[21.31731606 -3.60886550]
[6.67648792 -0.25485733]
[-8.26926708 1.23767090]
[-23.28423309 0.84517962]
[-38.13159943 -1.42614079]
[-52.57720566 -5.54046869]
[-66.39322662 -11.43291473]
[-79.36175537 -19.01054764]
[-91.27825928 -28.15385437]
[-101.95480347 -38.71863556]
[-111.22300720 -50.53826523]
[-118.93669128 -63.42633820]
[-124.97419739 -77.17958069]
[-129.24031067 -91.58109283]
[-131.66773987 -106.40373993]
[-132.21821594 -121.41374207]
[-130.88305664 -136.37437439]
[-127.68329620 -151.04968262]
[-122.66941833 -165.20822144]
[-115.92050171 -178.62669373]
[-107.54297638 -191.09346008]
[-97.66896820 -202.41191101]
[-86.45421600 -212.40353394]
[-74.07557678 -220.91073608]
[-60.72829056 -227.79937744]
[-46.62286377 -232.96076965]
[-31.98175240 -236.31355286]
[-17.03587151 -237.80482483]
[-2.02093840 -237.41107178]
[12.82623863 -235.13848877]
[27.27149773 -231.02294922]
[41.08702087 -225.12934875]
[54.05490875 -217.55061340]
[65.97064972 -208.40631104]
[76.64630127 -197.84062195]
[85.91351318 -186.02021790]
[93.62610626 -173.13150024]
[99.66246033 -159.37774658]
[103.92736053 -144.97587585]
[106.35354614 -130.15303040]
[106.90275574 -115.14297485]
[105.56632996 -100.18245697]
[102.36534119 -85.50740814]
[97.35027313 -71.34928894]
[90.60021973 -57.93139267]
[82.22164917 -45.46532822]
[72.34668732 -34.14771271]
[61.13109207 -24.15703583]
[48.75173950 -15.65086937]
[55.63115311 -2.32143974]
[68.34381866 5.43983936]
[67.79737091 21.25160599]
[74.67678070 34.58103561]
[81.55619049 47.91046524]
[88.43560791 61.23989487]
[104.17639160 59.76768875]
[119.27915192 64.44166565]
[131.43669128 74.54779053]
[138.79174805 88.54217529]
[140.22068787 104.28694153]
[135.50521851 119.37680817]
[125.36572266 131.50653076]
[132.44282532 144.73205566]
[139.51992798 157.95758057]
[146.59703064 171.18310547]
[153.67414856 184.40864563]
[167.23370361 177.98764038]
[181.09199524 172.23971558]
[195.21563721 167.17869568]
[209.57060242 162.81680298]
[224.12229919 159.16452026]
[238.83567810 156.23066711]
[253.67529297 154.02229309]
[268.60540771 152.54472351]
[283.58999634 151.80152893]
[298.59304810 151.79447937]
[313.57833862 152.52362061]
[328.50982666 153.98716736]
[343.35150146 156.18159485]
[358.06762695 159.10163879]
[372.62274170 162.74024963]
[386.98181152 167.08866882]
[401.11019897 172.13641357]
[414.97387695 177.87133789]
[428.53945923 184.27960205]
[441.77426147 191.34577942]
[454.64642334 199.05284119]
[467.12487793 207.38223267]
[479.17962646 216.31388855]
[490.78158569 225.82627869]
[501.90283203 235.89649963]
[512.51654053 246.50027466]
[522.59716797 257.61206055]
[532.12042236 269.20510864]
[541.06335449 281.25149536]
[549.40441895 293.72213745]
[557.12353516 306.58706665]
[564.20208740 319.81524658]
[570.62310791 333.37484741]
[576.37097168 347.23315430]
[581.43194580 361.35681152]
[585.79382324 375.71176147]
[589.44604492 390.26348877]
[592.37988281 404.97686768]
[594.58819580 419.81649780]
[596.06573486 434.74658203]
[596.80889893 449.73120117]
[596.81591797 464.73425293]
[596.08673096 479.71954346]
[594.62316895 494.65103149]
[592.42871094 509.49270630]
[589.50860596 524.20880127]
[585.86993408 538.76391602]
[581.52148438 553.12298584]
[576.47369385 567.25134277]
[570.73876953 581.11499023]
[564.33044434 594.68060303]
[557.26428223 607.91540527]
[549.55718994 620.78747559]
[541.22772217 633.26593018]
[532.29608154 645.32067871]
[522.78363037 656.92260742]
[512.71337891 668.04382324]
[502.10958862 678.65747070]
[490.99777222 688.73809814]
[479.40469360 698.26129150]
[467.35830688 707.20422363]
[454.88760376 715.54528809]
[442.02267456 723.26434326]
[428.79446411 730.34289551]
[415.23486328 736.76385498]
[401.37655640 742.51165771]
[387.25289917 747.57263184]
[372.89791870 751.93444824]
[358.34619141 755.58666992]
[343.63278198 758.52044678]
[328.79318237 760.72875977]
[313.86306763 762.20623779]
[298.87844849 762.94934082]
[283.87539673 762.95635986]
[268.89010620 762.22711182]
[253.95863342 760.76348877]
[239.11697388 758.56896973]
[224.40084839 755.64886475]
[209.84574890 752.01019287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[59 120]
[60 119]
[61 118]
[62 117]
[64 115]
[65 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
