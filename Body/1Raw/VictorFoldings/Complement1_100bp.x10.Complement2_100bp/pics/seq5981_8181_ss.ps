%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[95.02068329 821.39111328]
[80.87700653 826.41406250]
[66.35830688 830.21948242]
[51.56918716 832.77990723]
[36.61620331 834.07684326]
[21.60709763 834.10107422]
[6.65001059 832.85229492]
[-8.14728737 830.33953857]
[-22.67818069 826.58099365]
[-36.83797455 821.60363770]
[-50.52463913 815.44335938]
[-63.63956833 808.14453125]
[-76.08826447 799.75982666]
[-87.78102875 790.34954834]
[-98.63361359 779.98156738]
[-108.56783295 768.73052979]
[-117.51210022 756.67755127]
[-125.40197754 743.90948486]
[-132.18061829 730.51831055]
[-137.79916382 716.60046387]
[-142.21714783 702.25634766]
[-145.40274048 687.58917236]
[-147.33299255 672.70465088]
[-147.99397278 657.71008301]
[-147.38093567 642.71350098]
[-145.49830627 627.82293701]
[-142.35961914 613.14562988]
[-137.98753357 598.78741455]
[-132.41351318 584.85168457]
[-125.67772675 571.43890381]
[-117.82872009 558.64569092]
[-108.92303467 546.56414795]
[-99.02484894 535.28143311]
[-88.20546722 524.87878418]
[-76.54285431 515.43121338]
[-64.12103271 507.00671387]
[-51.02951050 499.66601562]
[-37.36260986 493.46200562]
[-23.21880531 488.43939209]
[-8.70000458 484.63433838]
[6.08918333 482.07431030]
[21.04220009 480.77774048]
[36.05130768 480.75393677]
[51.00835800 482.00308228]
[65.80559540 484.51620483]
[69.56189728 469.99414062]
[73.31819153 455.47207642]
[77.07449341 440.95001221]
[80.83079529 426.42794800]
[82.72409058 411.54791260]
[82.72409058 396.54791260]
[80.50282288 393.80960083]
[79.49752045 389.85937500]
[80.26335144 385.28042603]
[83.07402802 380.88186646]
[83.74381256 365.89685059]
[76.58252716 352.83676147]
[84.92832184 339.39584351]
[85.59810638 324.41079712]
[86.26789093 309.42578125]
[86.93767548 294.44073486]
[87.38428497 279.44738770]
[87.60761261 264.44903564]
[87.83094025 249.45071411]
[88.05426788 234.45237732]
[88.27759552 219.45404053]
[88.50092316 204.45570374]
[88.72425079 189.45736694]
[86.09968567 185.46728516]
[85.95378876 179.78611755]
[89.18415833 174.01754761]
[89.85394287 159.03251648]
[90.52372742 144.04747009]
[91.19351196 129.06243896]
[91.86329651 114.07740021]
[83.75152588 99.39491272]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[93.82607269 55.36971283]
[94.27268219 40.37636566]
[91.48030853 34.38351822]
[92.04833984 28.72893143]
[94.96240997 24.94511604]
[88.06022644 10.70887756]
[96.54135132 -1.53529692]
[97.43416595 -16.50870323]
[98.32698059 -31.48210907]
[95.71427917 -37.55543518]
[96.45041656 -43.19060516]
[99.47585297 -46.88597870]
[100.81408691 -61.82616425]
[102.15232086 -76.76634979]
[95.67706299 -91.20178223]
[104.51898193 -103.18801117]
[105.85721588 -118.12819672]
[106.52700043 -133.11323547]
[106.52700043 -148.11323547]
[106.52700043 -163.11323547]
[106.52700043 -178.11323547]
[106.52700043 -193.11323547]
[93.18587494 -200.72308350]
[85.45090485 -213.99206543]
[85.40276337 -229.35089111]
[93.05439758 -242.66809082]
[106.34755707 -250.36143494]
[121.70644379 -250.36143494]
[134.99960327 -242.66809082]
[142.65124512 -229.35089111]
[142.60310364 -213.99206543]
[134.86813354 -200.72308350]
[121.52700043 -193.11323547]
[121.52700043 -178.11323547]
[121.52700043 -163.11323547]
[121.52700043 -148.11323547]
[121.52700043 -133.11323547]
[132.87179565 -142.92626953]
[147.84196472 -141.98074341]
[157.86192322 -130.81828308]
[157.19177246 -115.83325958]
[146.21542358 -105.60977936]
[131.22061157 -106.00430298]
[120.79740143 -116.78996277]
[119.45916748 -101.84977722]
[126.03014374 -88.48297119]
[117.09250641 -75.42811584]
[115.75427246 -60.48793030]
[114.41603851 -45.54774475]
[113.30038452 -30.58929253]
[112.40756989 -15.61588669]
[111.51475525 -0.64248103]
[118.48079681 12.52275848]
[109.93581390 25.83793068]
[109.26602936 40.82297134]
[108.81941986 55.81631851]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[115.38739014 94.74573517]
[114.95397186 106.38417816]
[106.84833527 114.74718475]
[106.17855072 129.73222351]
[105.50876617 144.71725464]
[104.83898163 159.70230103]
[104.16919708 174.68733215]
[103.72258759 189.68069458]
[103.49925995 204.67903137]
[103.27593231 219.67736816]
[103.05260468 234.67570496]
[102.82927704 249.67404175]
[102.60594940 264.67236328]
[102.38262177 279.67071533]
[105.26390839 285.62130737]
[104.78012848 291.28372192]
[101.92271423 295.11050415]
[101.25292969 310.09555054]
[100.58314514 325.08059692]
[99.91336060 340.06564331]
[107.02673340 354.19754028]
[98.72885132 366.56661987]
[98.05906677 381.55166626]
[97.72409058 396.54791260]
[97.72409058 411.54791260]
[104.84389496 398.34533691]
[115.82002258 388.12161255]
[129.49412537 381.95565796]
[144.42315674 380.49822998]
[159.03160095 383.90307617]
[171.77781677 391.81094360]
[181.31665039 403.38723755]
[186.64144897 417.41030884]
[187.19027710 432.40026855]
[182.90521240 446.77517700]
[174.23846436 459.01803589]
[162.10467529 467.83682251]
[147.78431702 472.30084229]
[132.78868103 471.93905640]
[118.70028687 466.78958130]
[107.00591278 457.39587402]
[98.93968964 444.74929810]
[95.35285187 430.18426514]
[91.59655762 444.70629883]
[87.84025574 459.22836304]
[84.08395386 473.75042725]
[80.32765198 488.27249146]
[94.48757172 493.24948120]
[108.17440033 499.40939331]
[121.28951263 506.70785522]
[133.73843384 515.09228516]
[145.43144226 524.50225830]
[156.28428650 534.86993408]
[166.21879578 546.12072754]
[175.16337585 558.17346191]
[183.05358887 570.94128418]
[189.83256531 584.33233643]
[195.45147705 598.25000000]
[199.86984253 612.59405518]
[203.05580139 627.26116943]
[204.98643494 642.14556885]
[205.64779663 657.14013672]
[205.03515625 672.13671875]
[203.15290833 687.02740479]
[200.01460266 701.70471191]
[195.64288330 716.06304932]
[190.06921387 729.99896240]
[183.33378601 743.41192627]
[175.48510742 756.20532227]
[166.57974243 768.28704834]
[156.68183899 779.57006836]
[145.86273193 789.97296143]
[134.20036316 799.42089844]
[121.77875519 807.84570312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 183]
[46 182]
[47 181]
[48 180]
[49 179]
[50 161]
[51 160]
[55 159]
[56 158]
[58 156]
[59 155]
[60 154]
[61 153]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[77 136]
[78 135]
[79 134]
[80 133]
[83 132]
[85 130]
[86 129]
[87 128]
[90 127]
[91 126]
[92 125]
[94 123]
[95 122]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
