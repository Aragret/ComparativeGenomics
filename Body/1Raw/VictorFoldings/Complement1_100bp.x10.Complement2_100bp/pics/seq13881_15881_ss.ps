%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[149.84506226 554.76934814]
[142.01489258 541.96398926]
[135.33059692 528.52490234]
[129.84303284 514.55432129]
[125.59398651 500.15866089]
[122.61577606 485.44747925]
[120.93108368 470.53268433]
[120.55271912 455.52780151]
[121.48356628 440.54705811]
[123.71653748 425.70443726]
[127.23464966 411.11291504]
[132.01110840 396.88354492]
[138.00958252 383.12463379]
[145.18441772 369.94088745]
[153.48098755 357.43264771]
[162.83616638 345.69509888]
[173.17874146 334.81756592]
[184.43000793 324.88287354]
[196.50433350 315.96661377]
[209.30982971 308.13659668]
[202.62963867 294.70623779]
[195.94943237 281.27584839]
[189.26924133 267.84548950]
[182.58905029 254.41510010]
[175.90885925 240.98472595]
[168.83174133 227.75920105]
[161.36401367 214.75024414]
[153.89627075 201.74130249]
[138.26741028 193.75968933]
[138.46630859 175.34660339]
[130.80570984 162.45027161]
[123.14511871 149.55395508]
[109.99303436 142.56309509]
[109.59738159 126.74684143]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[77.73448944 82.66426849]
[63.28555298 76.21920776]
[61.88753510 61.39036179]
[52.92683792 49.36098099]
[43.96614075 37.33160400]
[35.00544739 25.30222702]
[35.14381027 40.30158997]
[27.85016441 53.40894318]
[15.03104973 61.19805908]
[0.03735305 61.63287735]
[-13.21160889 54.59974289]
[-21.25259018 41.93709564]
[-21.98369789 26.95492363]
[-15.21382141 13.56953049]
[-2.71259046 5.27982426]
[12.25220299 4.25271606]
[25.76812363 10.75611210]
[18.69101906 -2.46941566]
[11.61391258 -15.69494343]
[-0.48178953 -20.17342377]
[-6.10405254 -31.33469391]
[-2.72596812 -42.94998932]
[-15.93069363 -51.66468048]
[-14.89218330 -66.52303314]
[-21.77159691 -79.85246277]
[-28.65100861 -93.18189240]
[-30.09314537 -78.25138092]
[-37.79642105 -65.38050079]
[-50.27345657 -57.05442047]
[-65.11512756 -54.88077927]
[-79.45574951 -59.27926636]
[-90.52635956 -69.40060425]
[-96.18940735 -83.29052734]
[-95.35144043 -98.26710510]
[-88.17426300 -111.43859100]
[-76.04367065 -120.26177979]
[-61.30188751 -123.03305817]
[-46.79533005 -119.21733093]
[-35.32421494 -109.55033875]
[-39.72521210 -123.89018250]
[-44.12620926 -138.23002625]
[-48.52720642 -152.56987000]
[-63.47462082 -150.87002563]
[-78.47985840 -151.94593811]
[-93.03183746 -155.76097107]
[-106.63493347 -162.18518066]
[-118.82582855 -170.99975586]
[-129.18930054 -181.90447998]
[-137.37237549 -194.52795410]
[-143.09634399 -208.44020081]
[-146.16624451 -223.16740417]
[-146.47752380 -238.20793152]
[-144.01957703 -253.04954529]
[-138.87611389 -267.18670654]
[-131.22232056 -280.13793945]
[-121.31890106 -291.46209717]
[-109.50314331 -300.77352905]
[-96.17749023 -307.75503540]
[-81.79581451 -312.16888428]
[-66.84793854 -313.86468506]
[-51.84299469 -312.78472900]
[-37.29204178 -308.96578979]
[-23.69067764 -302.53790283]
[-11.50216198 -293.72003174]
[-1.14162910 -282.81253052]
[7.03804398 -270.18685913]
[12.75826073 -256.27307129]
[15.82419300 -241.54502869]
[16.13141632 -226.50440979]
[13.66946602 -211.66346741]
[8.52219677 -197.52769470]
[0.86492044 -184.57853699]
[-9.04155731 -173.25703430]
[-20.85982704 -163.94880676]
[-34.18735886 -156.97087097]
[-29.78636169 -142.63102722]
[-25.38536453 -128.29118347]
[-20.98436546 -113.95133209]
[-15.32157993 -100.06130981]
[-8.44216728 -86.73188019]
[-1.56275451 -73.40245056]
[11.14990902 -65.64116669]
[10.60346127 -49.82940292]
[25.86032486 -41.15789413]
[24.83943939 -22.77204895]
[31.91654587 -9.54652119]
[38.99365234 3.67900658]
[47.03482437 16.34153175]
[55.99552155 28.37090874]
[64.95621490 40.40028763]
[73.91690826 52.42966461]
[87.72492218 58.01430130]
[89.76387024 73.70357513]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[115.38780975 90.45168304]
[126.44730377 80.31819153]
[141.42703247 79.53877258]
[153.47848511 88.46976471]
[157.09188843 103.02803802]
[150.61523438 116.55775452]
[137.00958252 122.87329102]
[122.49370575 119.08624268]
[136.19372559 126.99952698]
[136.04144287 141.89335632]
[143.70204163 154.78967285]
[151.36264038 167.68600464]
[163.64625549 171.61991882]
[169.76127625 182.51901245]
[166.90521240 194.27355957]
[174.37295532 207.28251648]
[181.84069824 220.29145813]
[185.67092896 222.33676147]
[188.37875366 225.20594788]
[189.84298706 228.44499207]
[190.10235596 231.60716248]
[189.33923340 234.30453491]
[196.01942444 247.73490906]
[202.69961548 261.16528320]
[209.37980652 274.59567261]
[216.06001282 288.02603149]
[222.74020386 301.45642090]
[236.71051025 295.96826172]
[251.10598755 291.71859741]
[265.81707764 288.73977661]
[280.73181152 287.05447388]
[295.73666382 286.67547607]
[310.71743774 287.60568237]
[325.56015015 289.83804321]
[340.15182495 293.35552979]
[354.38137817 298.13140869]
[368.14053345 304.12930298]
[381.32458496 311.30355835]
[393.83319092 319.59960938]
[405.57113647 328.95428467]
[416.44909668 339.29641724]
[426.38427734 350.54727173]
[435.30105591 362.62121582]
[443.13159180 375.42636108]
[449.81625366 388.86529541]
[455.30419922 402.83566284]
[459.55364990 417.23120117]
[462.53228760 431.94235229]
[464.21740723 446.85708618]
[464.59619141 461.86193848]
[463.66577148 476.84271240]
[461.43319702 491.68539429]
[457.91549683 506.27700806]
[453.13943481 520.50653076]
[447.14135742 534.26556396]
[439.96688843 547.44952393]
[431.67065430 559.95800781]
[422.31582642 571.69586182]
[411.97354126 582.57366943]
[400.72256470 592.50866699]
[388.64846802 601.42529297]
[375.84320068 609.25561523]
[362.40420532 615.94012451]
[348.43374634 621.42785645]
[334.03814697 625.67712402]
[319.32696533 628.65551758]
[304.41220093 630.34045410]
[289.40731812 630.71899414]
[274.42657471 629.78839111]
[259.58392334 627.55560303]
[244.99235535 624.03771973]
[230.76292419 619.26141357]
[217.00393677 613.26318359]
[203.82008362 606.08850098]
[191.31172180 597.79211426]
[179.57403564 588.43713379]
[168.69638062 578.09466553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 150]
[27 149]
[28 148]
[30 145]
[31 144]
[32 143]
[34 141]
[35 133]
[37 131]
[38 130]
[40 128]
[41 127]
[42 126]
[43 125]
[54 124]
[55 123]
[56 122]
[59 120]
[61 118]
[62 117]
[63 116]
[76 115]
[77 114]
[78 113]
[79 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
