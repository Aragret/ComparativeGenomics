%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[51.85971832 939.83575439]
[36.85946655 939.55865479]
[21.88903999 938.57348633]
[6.98183727 936.88244629]
[-7.82887363 934.48931885]
[-22.51004601 931.39941406]
[-37.02891922 927.61962891]
[-51.35309601 923.15844727]
[-65.45061493 918.02575684]
[-79.29001617 912.23309326]
[-92.84041595 905.79327393]
[-106.07158661 898.72076416]
[-118.95399475 891.03131104]
[-131.45890808 882.74206543]
[-143.55841064 873.87152100]
[-155.22549438 864.43951416]
[-166.43415833 854.46704102]
[-177.15936279 843.97631836]
[-187.37718201 832.99090576]
[-197.06481934 821.53515625]
[-206.20065308 809.63470459]
[-214.76431274 797.31610107]
[-222.73666382 784.60681152]
[-230.09994507 771.53521729]
[-236.83770752 758.13049316]
[-242.93490601 744.42248535]
[-248.37797546 730.44189453]
[-253.15472412 716.21984863]
[-257.25451660 701.78808594]
[-260.66821289 687.17877197]
[-263.38818359 672.42462158]
[-265.40835571 657.55841064]
[-266.72421265 642.61340332]
[-267.33285522 627.62298584]
[-267.23287964 612.62048340]
[-266.42456055 597.63946533]
[-264.90963745 582.71331787]
[-262.69155884 567.87542725]
[-259.77523804 553.15875244]
[-256.16717529 538.59625244]
[-251.87541199 524.22039795]
[-246.90956116 510.06329346]
[-241.28070068 496.15646362]
[-235.00135803 482.53094482]
[-228.08557129 469.21719360]
[-220.54876709 456.24487305]
[-212.40776062 443.64297485]
[-203.68070984 431.43957520]
[-194.38710022 419.66189575]
[-184.54766846 408.33627319]
[-174.18437195 397.48794556]
[-163.32031250 387.14111328]
[-151.97976685 377.31887817]
[-140.18801880 368.04318237]
[-127.97138977 359.33465576]
[-115.35713959 351.21276855]
[-102.37340546 343.69567871]
[-89.04916382 336.80010986]
[-75.41414642 330.54144287]
[-61.49878311 324.93368530]
[-47.33412170 319.98931885]
[-32.95177078 315.71939087]
[-18.38381958 312.13345337]
[-3.66277647 309.23944092]
[11.17850971 307.04388428]
[26.10692215 305.55163574]
[41.08914948 304.76602173]
[56.09176254 304.68884277]
[71.08127594 305.32022095]
[72.41950989 290.38003540]
[73.75775146 275.43984985]
[75.09598541 260.49966431]
[76.43421936 245.55947876]
[77.77245331 230.61929321]
[66.71614075 224.50567627]
[58.76399994 214.62821960]
[55.12489700 202.43212891]
[56.37331009 189.71911621]
[62.35894394 178.38124084]
[72.22383881 170.11935425]
[84.52517700 166.18786621]
[86.30764771 151.29415894]
[88.09011078 136.40043640]
[89.87257385 121.50671387]
[91.65504456 106.61299896]
[92.21324921 91.62339020]
[91.54346466 76.63835144]
[90.87368011 61.65331268]
[90.20389557 46.66827393]
[81.22946167 37.40423965]
[80.98009491 24.90937805]
[89.04417419 15.89288139]
[88.59756470 0.89953125]
[88.15095520 -14.09381866]
[73.53355408 -17.90277100]
[60.58206940 -25.67681503]
[50.34642792 -36.78574371]
[43.65638733 -50.32901001]
[41.05427551 -65.20871735]
[42.75104141 -80.21863556]
[48.60912704 -94.14198303]
[58.15364838 -105.85004425]
[70.61087036 -114.39371490]
[84.97094727 -119.08038330]
[100.06977081 -119.53012848]
[114.68334198 -115.70649719]
[127.62700653 -107.91944122]
[137.85148621 -96.80023956]
[144.52792358 -83.25025940]
[147.11508179 -68.36794281]
[145.40324402 -53.35973740]
[139.53115845 -39.44228363]
[129.97488403 -27.74381447]
[117.50908661 -19.21266747]
[103.14431000 -14.54042435]
[103.59091187 0.45292532]
[104.03752136 15.44627571]
[114.05172729 29.85747147]
[105.18893433 45.99848938]
[105.85871887 60.98352814]
[106.52850342 75.96856689]
[107.19828796 90.95360565]
[115.09461212 78.20024872]
[127.96609497 70.49797058]
[142.93721008 69.56748199]
[156.66336060 75.61665344]
[166.07810974 87.29409027]
[169.07818604 101.99102020]
[164.99333191 116.42410278]
[154.73612976 127.36896515]
[140.59808350 132.38049316]
[125.73764038 130.33908081]
[113.47467804 121.70081329]
[106.54875946 108.39546204]
[104.76629639 123.28918457]
[102.98382568 138.18290710]
[101.20136261 153.07661438]
[99.41889191 167.97033691]
[113.72905731 178.17094421]
[120.86539459 194.13287354]
[118.94426727 211.42199707]
[108.58460236 225.28527832]
[92.71263885 231.95753479]
[91.37439728 246.89772034]
[90.03616333 261.83789062]
[88.69792938 276.77807617]
[87.35969543 291.71826172]
[86.02146149 306.65844727]
[100.88457489 308.70104980]
[115.63464355 311.44326782]
[130.23875427 314.87899780]
[144.66432190 319.00057983]
[158.87915039 323.79879761]
[172.85153198 329.26293945]
[186.55029297 335.38082886]
[199.94483948 342.13879395]
[213.00531006 349.52178955]
[225.70254517 357.51330566]
[238.00822449 366.09555054]
[249.89486694 375.24932861]
[261.33596802 384.95422363]
[272.30603027 395.18862915]
[282.78048706 405.92962646]
[292.73605347 417.15332031]
[302.15048218 428.83465576]
[311.00274658 440.94750977]
[319.27310181 453.46490479]
[326.94311523 466.35891724]
[333.99566650 479.60073853]
[340.41500854 493.16085815]
[346.18679810 507.00897217]
[351.29818726 521.11419678]
[355.73779297 535.44512939]
[359.49563599 549.96966553]
[362.56338501 564.65545654]
[364.93417358 579.46978760]
[366.60272217 594.37951660]
[367.56530762 609.35144043]
[367.81979370 624.35205078]
[367.36557007 639.34802246]
[366.20370483 654.30578613]
[364.33676147 669.19195557]
[361.76889038 683.97338867]
[358.50582886 698.61706543]
[354.55490112 713.09027100]
[349.92486572 727.36077881]
[344.62609863 741.39666748]
[338.67037964 755.16674805]
[332.07104492 768.64013672]
[324.84280396 781.78686523]
[317.00173950 794.57757568]
[308.56542969 806.98376465]
[299.55264282 818.97766113]
[289.98348999 830.53259277]
[279.87936401 841.62268066]
[269.26278687 852.22326660]
[258.15744019 862.31066895]
[246.58808899 871.86236572]
[234.58059692 880.85705566]
[222.16172791 889.27465820]
[209.35919189 897.09637451]
[196.20156860 904.30480957]
[182.71820068 910.88378906]
[168.93919373 916.81872559]
[154.89529419 922.09631348]
[140.61782837 926.70477295]
[126.13864899 930.63391113]
[111.49008179 933.87481689]
[96.70480347 936.42041016]
[81.81581116 938.26489258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 122]
[87 121]
[88 120]
[89 119]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
