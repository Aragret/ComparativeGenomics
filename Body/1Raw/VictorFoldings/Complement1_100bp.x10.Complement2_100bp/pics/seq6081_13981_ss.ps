%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[104.65410614 488.60256958]
[92.03244781 496.72607422]
[78.74221802 503.70230103]
[64.88742828 509.47659302]
[50.57652664 514.00378418]
[35.92150497 517.24847412]
[21.03706169 519.18524170]
[6.03969479 519.79888916]
[-8.95322132 519.08471680]
[-23.82434464 517.04821777]
[-38.45728683 513.70538330]
[-52.73751831 509.08230591]
[-66.55328369 503.21527100]
[-79.79644775 496.15011597]
[-92.36336517 487.94216919]
[-104.15567780 478.65567017]
[-115.08109283 468.36331177]
[-125.05410767 457.14562988]
[-133.99665833 445.09039307]
[-141.83877563 432.29199219]
[-148.51905823 418.85061646]
[-153.98524475 404.87139893]
[-158.19454956 390.46377563]
[-161.11401367 375.74050903]
[-162.72079468 360.81683350]
[-163.00233459 345.80957031]
[-161.95640564 330.83612061]
[-159.59120178 316.01373291]
[-155.92524719 301.45837402]
[-150.98721313 287.28399658]
[-144.81576538 273.60150146]
[-137.45918274 260.51797485]
[-128.97506714 248.13583374]
[-119.42980194 236.55198669]
[-108.89809418 225.85708618]
[-97.46237946 216.13484192]
[-85.21215820 207.46133423]
[-72.24330139 199.90446472]
[-58.65730667 193.52336121]
[-44.56051254 188.36798096]
[-30.06324387 184.47865295]
[-15.27896595 181.88583374]
[-0.32338604 180.60980225]
[14.68644524 180.66055298]
[29.63305473 182.03768921]
[44.39945984 184.73043823]
[58.87009430 188.71769714]
[64.11681366 174.66523743]
[69.36353302 160.61276245]
[74.61025238 146.56028748]
[79.85697174 132.50781250]
[85.10368347 118.45534515]
[90.35040283 104.40287781]
[95.07054138 90.16488647]
[99.25755310 75.76110840]
[103.44456482 61.35732269]
[107.63157654 46.95354080]
[111.81858063 32.54975891]
[106.30186462 20.89091873]
[110.08576202 8.98017311]
[120.62198639 3.03756094]
[125.02297974 -11.30228615]
[129.42398071 -25.64213371]
[133.82498169 -39.98197937]
[119.77265930 -45.24225235]
[106.06358337 -51.34139252]
[92.74777985 -58.25713730]
[79.87384033 -65.96425629]
[67.48872375 -74.43462372]
[55.63763809 -83.63733673]
[44.36381912 -93.53881073]
[33.70840836 -104.10291290]
[23.71028709 -115.29110718]
[14.40593243 -127.06256104]
[5.82929802 -139.37432861]
[-1.98832047 -152.18147278]
[-9.01839733 -165.43727112]
[-15.23528099 -179.09335327]
[-20.61628532 -193.09988403]
[-25.14177704 -207.40576172]
[-28.79524231 -221.95877075]
[-31.56335068 -236.70582581]
[-33.43600082 -251.59312439]
[-34.40635681 -266.56631470]
[-34.47088623 -281.57077026]
[-33.62934494 -296.55175781]
[-31.88480568 -311.45462036]
[-29.24363708 -326.22494507]
[-25.71547508 -340.80883789]
[-21.31319237 -355.15310669]
[-16.05285263 -369.20538330]
[-9.95365334 -382.91442871]
[-3.03784633 -396.23022461]
[4.66933107 -409.10412598]
[13.13975716 -421.48919678]
[22.34252357 -433.34024048]
[32.24404907 -444.61401367]
[42.80820847 -455.26937866]
[53.99644852 -465.26745605]
[65.76794434 -474.57174683]
[78.07975006 -483.14831543]
[90.88693237 -490.96588135]
[104.14276123 -497.99591064]
[117.79886627 -504.21270752]
[131.80541992 -509.59365845]
[146.11132812 -514.11907959]
[160.66435242 -517.77246094]
[175.41142273 -520.54052734]
[190.29872131 -522.41308594]
[205.27192688 -523.38336182]
[220.27638245 -523.44787598]
[235.25737000 -522.60626221]
[250.16020203 -520.86163330]
[264.93051147 -518.22039795]
[279.51440430 -514.69213867]
[293.85864258 -510.28982544]
[307.91091919 -505.02941895]
[321.61993408 -498.93014526]
[334.93566895 -492.01428223]
[347.80953979 -484.30703735]
[360.19458008 -475.83654785]
[372.04559326 -466.63372803]
[383.31930542 -456.73214722]
[393.97460938 -446.16793823]
[403.97265625 -434.97967529]
[413.27688599 -423.20812988]
[421.85339355 -410.89627075]
[429.67089844 -398.08905029]
[436.70086670 -384.83319092]
[442.91763306 -371.17706299]
[448.29849243 -357.17047119]
[452.82385254 -342.86456299]
[456.47717285 -328.31152344]
[459.24514771 -313.56442261]
[461.11767578 -298.67712402]
[462.08789062 -283.70391846]
[462.15228271 -268.69946289]
[461.31060791 -253.71847534]
[459.56591797 -238.81564331]
[456.92462158 -224.04534912]
[453.39630127 -209.46148682]
[448.99389648 -195.11724854]
[443.73342896 -181.06500244]
[437.63409424 -167.35601807]
[430.71817017 -154.04031372]
[423.01086426 -141.16647339]
[414.54034424 -128.78147888]
[405.33746338 -116.93051910]
[395.43582153 -105.65683746]
[384.87158203 -95.00157166]
[373.68322754 -85.00360870]
[361.91165161 -75.69941711]
[349.59976196 -67.12295532]
[336.79251099 -59.30551147]
[323.53662109 -52.27561951]
[309.88046265 -46.05892563]
[295.87384033 -40.67811584]
[281.56790161 -36.15282440]
[267.01483154 -32.49956131]
[252.26774597 -29.73165894]
[237.38043213 -27.85921478]
[222.40722656 -26.88906479]
[207.40275574 -26.82474709]
[192.42178345 -27.66649818]
[177.51896667 -29.41124344]
[162.74867249 -32.05261612]
[148.16482544 -35.58098221]
[143.76382446 -21.24113464]
[139.36282349 -6.90128803]
[134.96183777 7.43855906]
[139.80702209 24.30541992]
[126.22236633 36.73677063]
[122.03535461 51.14055252]
[117.84834290 65.54433441]
[113.66133118 79.94812012]
[109.47431946 94.35189819]
[123.67668152 89.52561951]
[136.38681030 97.49132538]
[138.23529053 112.37699890]
[127.85946655 123.20946503]
[112.90802765 122.00344849]
[104.40287781 109.64959717]
[99.15615845 123.70206451]
[93.90943909 137.75453186]
[88.66271973 151.80700684]
[83.41600037 165.85948181]
[78.16928864 179.91195679]
[72.92256927 193.96441650]
[86.46547699 200.43646240]
[99.38338470 208.08010864]
[111.57518768 216.83554077]
[122.94546509 226.63423157]
[133.40522766 237.39949036]
[142.87261963 249.04707336]
[151.27354431 261.48580933]
[158.54225159 274.61834717]
[164.62184143 288.34191895]
[169.46473694 302.54910278]
[173.03303528 317.12869263]
[175.29881287 331.96661377]
[176.24433899 346.94671631]
[175.86219788 361.95178223]
[174.15539551 376.86434937]
[171.13729858 391.56768799]
[166.83151245 405.94677734]
[161.27172852 419.88900757]
[154.50148010 433.28533936]
[146.57374573 446.03088379]
[137.55056763 458.02587891]
[127.50257874 469.17645264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 188]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[61 170]
[62 169]
[63 168]
[64 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
