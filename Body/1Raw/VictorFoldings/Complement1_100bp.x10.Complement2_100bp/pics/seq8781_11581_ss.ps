%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[44.87645340 715.75964355]
[30.60159492 720.39178467]
[16.01070595 723.90380859]
[1.19153726 726.27459717]
[-13.76678658 727.48986816]
[-28.77430344 727.54229736]
[-43.74075699 726.43157959]
[-58.57612991 724.16442871]
[-73.19120789 720.75445557]
[-87.49808502 716.22216797]
[-101.41072083 710.59484863]
[-114.84544373 703.90631104]
[-127.72145081 696.19677734]
[-139.96130371 687.51263428]
[-151.49139404 677.90612793]
[-162.24238586 667.43499756]
[-172.14959717 656.16223145]
[-181.15345764 644.15557861]
[-189.19981384 631.48736572]
[-196.24028015 618.23370361]
[-202.23249817 604.47424316]
[-207.14044189 590.29187012]
[-210.93460083 575.77178955]
[-213.59214783 561.00134277]
[-215.09709167 546.06939697]
[-215.44038391 531.06573486]
[-214.61997986 516.08056641]
[-212.64079285 501.20401001]
[-209.51472473 486.52557373]
[-205.26058960 472.13354492]
[-199.90396118 458.11447144]
[-193.47706604 444.55264282]
[-186.01855469 431.52960205]
[-177.57327271 419.12374878]
[-168.19203186 407.40963745]
[-157.93122864 396.45773315]
[-146.85258484 386.33389282]
[-135.02273560 377.09899902]
[-122.51282501 368.80862427]
[-109.39807892 361.51260376]
[-95.75738525 355.25485229]
[-81.67277527 350.07293701]
[-67.22896576 345.99807739]
[-52.51280975 343.05474854]
[-37.61281967 341.26068115]
[-22.61861229 340.62664795]
[-7.62035799 341.15646362]
[7.29173660 342.84695435]
[22.02798843 345.68795776]
[26.00008583 331.22341919]
[29.97218132 316.75888062]
[28.71213913 309.47644043]
[34.11259079 302.10943604]
[30.23544693 287.72830200]
[41.51730347 276.63638306]
[37.64015961 262.25524902]
[48.92201614 251.16336060]
[53.10902786 236.75958252]
[57.29603958 222.35578918]
[61.48305130 207.95201111]
[65.67005920 193.54823303]
[69.85707092 179.14443970]
[65.97992706 164.76330566]
[77.26178741 153.67141724]
[72.16600800 136.87855530]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[98.33479309 71.42903137]
[99.00457764 56.44399261]
[99.67436218 41.45895386]
[100.34414673 26.47391319]
[101.01393127 11.48887539]
[101.68371582 -3.49616385]
[91.85170746 7.83219099]
[77.48619843 12.14869404]
[63.03850174 8.11582851]
[52.98538971 -3.01677728]
[50.44192886 -17.79956436]
[56.19623566 -31.65192604]
[68.46528625 -40.28155518]
[83.44736481 -41.01447296]
[96.50012970 -33.62356949]
[103.57907867 -20.39874840]
[106.24487305 -35.15996552]
[108.91066742 -49.92118454]
[103.74909973 -64.87673950]
[113.62512207 -76.02634430]
[116.29091644 -90.78755951]
[118.95671082 -105.54877472]
[121.62250519 -120.30998993]
[124.28829956 -135.07121277]
[126.51342010 -149.90525818]
[128.29588318 -164.79896545]
[129.96742249 -179.70555115]
[131.52795410 -194.62414551]
[133.08847046 -209.54275513]
[134.64898682 -224.46136475]
[120.74032593 -230.38084412]
[109.19545746 -240.13827515]
[101.04094696 -252.86602783]
[97.00189972 -267.43234253]
[97.43744659 -282.54199219]
[102.30886841 -296.85144043]
[111.18300629 -309.08831787]
[123.27076721 -318.16452026]
[137.49732971 -323.27297974]
[152.59767151 -323.95950317]
[167.22906494 -320.16296387]
[180.09051514 -312.22103882]
[190.03839111 -300.83984375]
[196.18812561 -287.03143311]
[197.99288940 -272.02365112]
[195.29220581 -257.15090942]
[188.32621765 -243.73576355]
[177.71434021 -232.97103882]
[164.40017700 -225.81391907]
[149.56759644 -222.90083313]
[148.00708008 -207.98223877]
[146.44654846 -193.06362915]
[144.88603210 -178.14501953]
[147.31660461 -171.16546631]
[143.18960571 -163.01651001]
[141.40713501 -148.12278748]
[143.03170776 -145.83828735]
[143.84924316 -142.77264404]
[143.55769348 -139.22998047]
[141.97055054 -135.61813354]
[139.04951477 -132.40541077]
[136.38372803 -117.64419556]
[133.71792603 -102.88298035]
[131.05212402 -88.12176514]
[128.38633728 -73.36054230]
[133.73858643 -59.46080780]
[123.67188263 -47.25538635]
[121.00608826 -32.49417114]
[118.34029388 -17.73295212]
[116.66875458 -2.82637882]
[115.99897003 12.15865993]
[115.32918549 27.14369965]
[114.65940094 42.12873840]
[113.98961639 57.11377716]
[113.31983185 72.09881592]
[121.31742096 59.40871811]
[133.31553650 50.40621567]
[147.73564148 46.27573776]
[162.68049622 47.56072998]
[176.18386841 54.09211731]
[186.46914673 65.01058960]
[192.18312073 78.87963867]
[192.57403564 93.87454224]
[187.59043884 108.02246857]
[177.88803101 119.46201324]
[164.74331665 126.68811035]
[149.88571167 128.75004578]
[135.26998901 125.37652588]
[122.81909943 117.01139832]
[114.17117310 104.75524139]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[105.71829224 139.79383850]
[102.11214447 151.75959778]
[91.66557312 157.85842896]
[95.24323273 173.26980591]
[84.26085663 183.33145142]
[80.07384491 197.73524475]
[75.88683319 212.13902283]
[71.69982147 226.54280090]
[67.51280975 240.94657898]
[63.32579803 255.35037231]
[66.90345764 270.76174927]
[55.92108536 280.82339478]
[59.49874496 296.23480225]
[48.51637268 306.29644775]
[44.43670654 320.73098755]
[40.46460724 335.19552612]
[36.49251175 349.66003418]
[50.61299133 354.74337769]
[64.29708099 360.90570068]
[77.46248627 368.10986328]
[90.03003693 376.31262207]
[101.92413330 385.46459961]
[113.07324982 395.51077271]
[123.41033173 406.39071655]
[132.87321472 418.03897095]
[141.40498352 430.38552856]
[148.95433044 443.35610962]
[155.47584534 456.87268066]
[160.93029785 470.85400391]
[165.28491211 485.21597290]
[168.51347351 499.87216187]
[170.59657288 514.73449707]
[171.52169800 529.71356201]
[171.28324890 544.71929932]
[169.88269043 559.66137695]
[167.32843018 574.45007324]
[163.63584900 588.99627686]
[158.82713318 603.21264648]
[152.93121338 617.01361084]
[145.98353577 630.31616211]
[138.02590942 643.04034424]
[129.10617065 655.10955811]
[119.27797699 666.45129395]
[108.60044098 676.99731445]
[97.13776398 686.68420410]
[84.95889282 695.45367432]
[72.13707733 703.25299072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 180]
[50 179]
[51 178]
[53 177]
[55 175]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[64 166]
[66 163]
[67 162]
[69 160]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[85 138]
[86 137]
[87 136]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 125]
[95 124]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
