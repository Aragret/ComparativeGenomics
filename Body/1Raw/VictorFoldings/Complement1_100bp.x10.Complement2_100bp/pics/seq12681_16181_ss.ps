%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[127.99267578 959.90777588]
[113.05200958 958.55456543]
[98.17369843 956.63354492]
[83.37930298 954.14746094]
[68.69028473 951.09991455]
[54.12792969 947.49536133]
[39.71336365 943.33905029]
[25.46748161 938.63702393]
[11.41093731 933.39599609]
[-2.43588662 927.62359619]
[-16.05291367 921.32824707]
[-29.42040062 914.51910400]
[-42.51896667 907.20593262]
[-55.32962036 899.39941406]
[-67.83378601 891.11083984]
[-80.01333618 882.35223389]
[-91.85060883 873.13629150]
[-103.32843781 863.47631836]
[-114.43019104 853.38647461]
[-125.13976288 842.88122559]
[-135.44163513 831.97589111]
[-145.32086182 820.68627930]
[-154.76312256 809.02874756]
[-163.75471497 797.02014160]
[-172.28262329 784.67797852]
[-180.33448792 772.02008057]
[-187.89860535 759.06481934]
[-194.96401978 745.83099365]
[-201.52049255 732.33776855]
[-207.55851746 718.60467529]
[-213.06933594 704.65173340]
[-218.04495239 690.49902344]
[-222.47816467 676.16723633]
[-226.36254883 661.67700195]
[-229.69245911 647.04943848]
[-232.46307373 632.30566406]
[-234.67036438 617.46710205]
[-236.31114197 602.55529785]
[-237.38302612 587.59179688]
[-237.88447571 572.59832764]
[-237.81474304 557.59667969]
[-237.17393494 542.60858154]
[-235.96298218 527.65570068]
[-234.18363953 512.75976562]
[-231.83848572 497.94238281]
[-228.93092346 483.22500610]
[-225.46516418 468.62902832]
[-221.44624329 454.17553711]
[-216.87998962 439.88552856]
[-211.77301025 425.77975464]
[-206.13270569 411.87860107]
[-199.96726990 398.20227051]
[-193.28564453 384.77056885]
[-186.09748840 371.60299683]
[-178.41325378 358.71859741]
[-170.24407959 346.13610840]
[-161.60179138 333.87374878]
[-152.49894714 321.94927979]
[-142.94871521 310.38003540]
[-132.96495056 299.18273926]
[-122.56214905 288.37365723]
[-111.75537109 277.96844482]
[-100.56030273 267.98220825]
[-88.99315643 258.42941284]
[-77.07071686 249.32391357]
[-64.81027222 240.67890930]
[-52.22958755 232.50692749]
[-39.34691238 224.81983948]
[-26.18092537 217.62876892]
[-12.75071144 210.94415283]
[0.92425370 204.77568054]
[14.82414341 199.13230896]
[28.92880440 194.02218628]
[43.21778488 189.45275879]
[57.67036819 185.43063354]
[72.26560211 181.96163940]
[86.98232269 179.05081177]
[101.79918671 176.70237732]
[100.01671600 161.80865479]
[98.23425293 146.91493225]
[89.03938293 135.19728088]
[95.08197021 120.57545471]
[93.29950714 105.68173218]
[91.07179260 103.60163879]
[89.55170441 100.66499329]
[89.05795288 97.13233948]
[89.80853271 93.37828827]
[91.88158417 89.85189819]
[90.98876190 74.87849426]
[90.09594727 59.90508652]
[89.20313263 44.93168259]
[88.31031799 29.95827675]
[79.76533508 16.64310265]
[86.73137665 3.47786403]
[85.83856201 -11.49554157]
[71.30396271 -15.79918003]
[59.11968613 -24.81689835]
[50.75704193 -37.45976257]
[47.22586060 -52.20108032]
[48.95254517 -67.26077271]
[55.72859573 -80.82031250]
[66.73576355 -91.24230194]
[80.64488983 -97.26825714]
[95.77637482 -98.17049408]
[110.30301666 -93.84008026]
[122.47064972 -84.79992676]
[130.80998230 -72.14167023]
[134.31399536 -57.39386749]
[132.55955505 -42.33737946]
[125.75852966 -28.79035759]
[114.73217010 -18.38866425]
[100.81196594 -12.38835812]
[101.70478058 2.58504820]
[110.18590546 14.82922268]
[103.28372192 29.06546021]
[104.17653656 44.03886795]
[105.06935120 59.01227188]
[105.96217346 73.98567963]
[106.85498810 88.95908356]
[108.19322205 103.89926910]
[109.97568512 118.79298401]
[119.29804993 131.57594299]
[113.12796783 145.13247681]
[114.91043854 160.02618408]
[116.69290161 174.91990662]
[131.64549255 173.70556641]
[146.63348389 173.06135559]
[161.63513184 172.98822021]
[176.62867737 173.48626709]
[191.59240723 174.55476379]
[206.50460815 176.19216919]
[221.34364319 178.39610291]
[236.08804321 181.16337585]
[250.71638489 184.48995972]
[265.20748901 188.37106323]
[279.54031372 192.80102539]
[293.69409180 197.77343750]
[307.64831543 203.28109741]
[321.38275146 209.31600952]
[334.87747192 215.86943054]
[348.11291504 222.93185425]
[361.06988525 230.49302673]
[373.72961426 238.54200745]
[386.07373047 247.06712341]
[398.08432007 256.05599976]
[409.74401855 265.49563599]
[421.03588867 275.37228394]
[431.94354248 285.67169189]
[442.45120239 296.37887573]
[452.54360962 307.47836304]
[462.20611572 318.95397949]
[471.42474365 330.78918457]
[480.18612671 342.96673584]
[488.47753906 355.46902466]
[496.28695679 368.27792358]
[503.60308838 381.37481689]
[510.41531372 394.74075317]
[516.71374512 408.35635376]
[522.48919678 422.20187378]
[527.73339844 436.25723267]
[532.43872070 450.50204468]
[536.59832764 464.91567993]
[540.20611572 479.47720337]
[543.25695801 494.16552734]
[545.74639893 508.95938110]
[547.67083740 523.83728027]
[549.02746582 538.77758789]
[549.81433105 553.75878906]
[550.03021240 568.75903320]
[549.67492676 583.75665283]
[548.74890137 598.72985840]
[547.25354004 613.65698242]
[545.19091797 628.51635742]
[542.56414795 643.28637695]
[539.37695312 657.94573975]
[535.63397217 672.47314453]
[531.34063721 686.84747314]
[526.50317383 701.04797363]
[521.12860107 715.05395508]
[515.22467041 728.84521484]
[508.80001831 742.40173340]
[501.86389160 755.70379639]
[494.42639160 768.73217773]
[486.49826050 781.46789551]
[478.09103394 793.89263916]
[469.21688843 805.98822021]
[459.88870239 817.73724365]
[450.11996460 829.12261963]
[439.92486572 840.12780762]
[429.31817627 850.73693848]
[418.31527710 860.93450928]
[406.93212891 870.70581055]
[395.18521118 880.03668213]
[383.09161377 888.91357422]
[370.66879272 897.32360840]
[357.93484497 905.25463867]
[344.90817261 912.69506836]
[331.60766602 919.63421631]
[318.05264282 926.06195068]
[304.26272583 931.96899414]
[290.25793457 937.34674072]
[276.05853271 942.18743896]
[261.68515015 946.48400879]
[247.15863037 950.23028564]
[232.50000000 953.42083740]
[217.73054504 956.05096436]
[202.87165833 958.11688232]
[187.94488525 959.61566162]
[172.97187805 960.54510498]
[157.97434998 960.90380859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 125]
[79 124]
[80 123]
[82 121]
[83 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
