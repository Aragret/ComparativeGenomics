%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[65.03295135 590.04779053]
[53.31630325 599.48791504]
[40.02470016 606.53985596]
[25.63862801 610.94866943]
[10.67813206 612.55493164]
[-4.31597233 611.30059814]
[-18.80165863 607.23101807]
[-32.25527954 600.49334717]
[-44.19049454 591.33105469]
[-54.17584991 580.07543945]
[-61.85038757 567.13336182]
[-66.93666840 552.97259521]
[-69.25083923 538.10516357]
[-68.70923615 523.06842041]
[-65.33143616 508.40600586]
[-59.23955154 494.64788818]
[-50.65379333 482.29147339]
[-39.88453674 471.78338623]
[-27.32107735 463.50354004]
[-13.41758156 457.75122070]
[1.32334971 454.73434448]
[16.36884117 454.56201172]
[19.03463554 439.80081177]
[21.70043182 425.03958130]
[24.36622810 410.27838135]
[27.03202248 395.51715088]
[21.67977905 381.61740112]
[31.74647141 369.41198730]
[23.06928253 357.36035156]
[25.56249809 342.35241699]
[38.26219940 333.33267212]
[40.92799377 318.57147217]
[43.59378815 303.81024170]
[29.97059822 310.08789062]
[16.50072098 303.48770142]
[13.11365414 288.87509155]
[22.30621338 277.02197266]
[37.30199051 276.66598511]
[47.04622269 288.06796265]
[50.80252075 273.54589844]
[46.49891663 259.28659058]
[57.44552612 247.86369324]
[61.20182800 233.34162903]
[64.95812988 218.81956482]
[60.65452194 204.56025696]
[71.60112762 193.13735962]
[75.35742950 178.61531067]
[79.11373138 164.09324646]
[82.87003326 149.57118225]
[86.08330536 134.91940308]
[88.74909973 120.15818024]
[91.41490173 105.39696503]
[89.63449860 97.53549194]
[94.23183441 90.43652344]
[81.83228302 98.87756348]
[66.89579773 97.49868011]
[56.25113297 86.93028259]
[54.76488495 72.00409698]
[63.11655045 59.54417419]
[77.48786163 55.24702454]
[91.30844116 61.07724762]
[98.25996399 74.37117767]
[102.66096497 60.03133011]
[107.06196594 45.69148254]
[111.46295929 31.35163689]
[115.86396027 17.01178932]
[120.26495361 2.67194223]
[114.92243195 -9.06774235]
[118.88324738 -20.92083168]
[129.50677490 -26.70591545]
[134.12078857 -40.97864914]
[138.73478699 -55.25138092]
[141.29061890 -70.03203583]
[133.96763611 -84.05645752]
[142.08044434 -96.54772186]
[142.52705383 -111.54106903]
[142.97366333 -126.53441620]
[142.86198425 -141.53399658]
[142.19219971 -156.51904297]
[141.52241516 -171.50408936]
[140.85263062 -186.48912048]
[140.18284607 -201.47416687]
[131.83705139 -214.91508484]
[138.99833679 -227.97514343]
[138.32855225 -242.96018982]
[137.65876770 -257.94522095]
[136.98898315 -272.93026733]
[122.08380127 -274.94900513]
[107.77867126 -279.59692383]
[94.53345490 -286.72460938]
[82.77392578 -296.10296631]
[72.87810516 -307.43045044]
[65.16410065 -320.34301758]
[59.87988663 -334.42550659]
[57.19532776 -349.22528076]
[57.19672394 -364.26654053]
[59.88402557 -379.06579590]
[65.17085266 -393.14733887]
[72.88725281 -406.05844116]
[82.78517914 -417.38412476]
[94.54644775 -426.76028442]
[107.79298401 -433.88549805]
[122.09896851 -438.53079224]
[137.00453186 -440.54675293]
[152.03050232 -439.86862183]
[166.69387817 -436.51818848]
[180.52326965 -430.60317993]
[193.07414246 -422.31369019]
[203.94302368 -411.91622925]
[212.78051758 -399.74502563]
[219.30256653 -386.19131470]
[223.29946899 -371.69082642]
[224.64277649 -356.70965576]
[223.28929138 -341.72940063]
[219.28253174 -327.23162842]
[212.75128174 -313.68237305]
[203.90551758 -301.51715088]
[193.02957153 -291.12707520]
[180.47308350 -282.84613037]
[166.63966370 -276.94052124]
[151.97401428 -273.60003662]
[152.64379883 -258.61502075]
[153.31359863 -243.62997437]
[153.98338318 -228.64492798]
[162.28126526 -216.27584839]
[155.16789246 -202.14395142]
[155.83767700 -187.15890503]
[156.50746155 -172.17387390]
[157.17724609 -157.18882751]
[157.84703064 -142.20379639]
[169.74148560 -151.34281921]
[184.33865356 -147.88992310]
[190.87805176 -134.39042664]
[184.53907776 -120.79567719]
[169.99458313 -117.12720490]
[157.96701050 -126.08781433]
[157.52040100 -111.09446716]
[157.07379150 -96.10111237]
[164.42872620 -83.14911652]
[156.28398132 -69.58543396]
[163.58679199 -82.68767548]
[174.38552856 -93.09859467]
[187.74600220 -99.91753387]
[202.51237488 -102.55458832]
[217.40722656 -100.78163147]
[231.14199829 -94.75202942]
[242.52848816 -84.98741150]
[250.58166504 -72.33251953]
[254.60484314 -57.88211441]
[254.24996948 -42.88631439]
[249.54774475 -28.64239883]
[240.90496826 -16.38261223]
[229.06932068 -7.16754532]
[215.06469727 -1.79439580]
[200.10266113 -0.72799480]
[185.47755432 -4.06059647]
[172.45460510 -11.50389671]
[162.16041565 -22.41397667]
[155.48556519 -35.84700394]
[153.00752258 -50.63737488]
[148.39352417 -36.36463928]
[143.77951050 -22.09190750]
[148.37304688 -5.15477753]
[134.60479736 7.07294035]
[130.20381165 21.41278839]
[125.80281067 35.75263596]
[121.40180969 50.09248352]
[117.00080872 64.43232727]
[112.59981537 78.77217865]
[108.95172882 93.32180023]
[106.17611694 108.06275940]
[103.51032257 122.82397461]
[100.84452057 137.58518982]
[114.46772003 131.30757141]
[127.93759155 137.90774536]
[131.32466125 152.52033997]
[122.13210297 164.37347412]
[107.13632202 164.72946167]
[97.39208984 153.32748413]
[93.63578796 167.84954834]
[89.87949371 182.37159729]
[86.12319183 196.89366150]
[90.15811920 212.19169617]
[79.48018646 222.57586670]
[75.72388458 237.09793091]
[71.96758270 251.61999512]
[76.00251770 266.91802979]
[65.32458496 277.30218506]
[61.56827927 291.82424927]
[58.35500717 306.47604370]
[55.68921280 321.23727417]
[53.02341461 335.99847412]
[61.76596451 348.89056396]
[58.85218811 363.82254028]
[46.50769043 372.07778931]
[51.66925812 387.03335571]
[41.79323959 398.18295288]
[39.12744522 412.94415283]
[36.46165085 427.70538330]
[33.79585266 442.46658325]
[31.13005829 457.22781372]
[45.16486740 462.65188599]
[57.91939545 470.63427734]
[68.93257141 480.88641357]
[77.80627441 493.03771973]
[84.21972656 506.64889526]
[87.94108582 521.22790527]
[88.83583069 536.24774170]
[86.87161255 551.16546631]
[82.11944580 565.44183350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[28 195]
[31 192]
[32 191]
[33 190]
[39 189]
[40 188]
[42 186]
[43 185]
[44 184]
[46 182]
[47 181]
[48 180]
[49 179]
[50 173]
[51 172]
[52 171]
[54 170]
[62 169]
[63 168]
[64 167]
[65 166]
[66 165]
[67 164]
[70 162]
[71 161]
[72 160]
[73 140]
[75 138]
[76 137]
[77 136]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[84 124]
[85 123]
[86 122]
[87 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
