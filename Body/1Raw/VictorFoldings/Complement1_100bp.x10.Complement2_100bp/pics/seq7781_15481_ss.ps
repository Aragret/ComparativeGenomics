%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[197.24987793 554.51696777]
[188.36877441 542.42236328]
[180.27262878 529.78887939]
[172.99404907 516.66735840]
[166.56236267 503.11059570]
[161.00343323 489.17321777]
[156.33967590 474.91131592]
[152.58984375 460.38232422]
[149.76905823 445.64474487]
[147.88867188 430.75796509]
[146.95625305 415.78189087]
[146.97555542 400.77679443]
[147.94650269 385.80316162]
[149.86517334 370.92126465]
[152.72386169 356.19100952]
[156.51106262 341.67172241]
[161.21148682 327.42187500]
[166.80624390 313.49880981]
[173.27279663 299.95864868]
[180.58511353 286.85586548]
[188.71371460 274.24325562]
[197.62591553 262.17156982]
[207.28579712 250.68945312]
[217.65447998 239.84312439]
[207.49093628 228.81124878]
[197.32739258 217.77937317]
[187.16384888 206.74748230]
[172.31755066 206.39630127]
[161.85311890 195.35319519]
[162.32214355 179.78341675]
[152.15859985 168.75154114]
[141.99505615 157.71966553]
[131.83149719 146.68778992]
[121.66795349 135.65591431]
[111.50440979 124.62403107]
[101.34086609 113.59215546]
[105.54859161 127.98989868]
[106.90684509 142.92828369]
[105.36484528 157.84881592]
[100.98023987 172.19367981]
[93.91695404 185.42658997]
[84.43904877 197.05282593]
[72.90086365 206.63772583]
[59.73376846 213.82295227]
[45.43001556 218.33988953]
[30.52436638 220.01965332]
[15.57407951 218.79945374]
[1.13807964 214.72491455]
[-12.24393082 207.94834900]
[-24.07165527 198.72311401]
[-33.90290833 187.39410400]
[-41.37013626 174.38485718]
[-46.19417572 160.18173218]
[-48.19467545 145.31573486]
[-47.29684448 130.34263611]
[-43.53425217 115.82219696]
[-37.04756165 102.29730225]
[-28.07928085 90.27357483]
[-16.96470070 80.20053864]
[-4.11934614 72.45477295]
[9.97655106 67.32586670]
[24.79600334 65.00556183]
[39.78497696 65.58061218]
[54.38309860 69.02951050]
[68.04460144 75.22332001]
[80.25874329 83.93048096]
[90.56515503 94.82065582]
[79.11940002 83.89795685]
[82.78200531 69.46068573]
[78.38100433 55.12084198]
[73.98000336 40.78099442]
[69.57901001 26.44114685]
[65.17800903 12.10129929]
[60.77701187 -2.23854756]
[45.93138123 0.08264951]
[30.90651321 0.26738182]
[16.00829697 -1.68811154]
[1.54004347 -5.74401951]
[-12.20369434 -11.81776810]
[-24.94311142 -19.78570557]
[-36.41884995 -29.48561096]
[-46.39727783 -40.72001266]
[-54.67524719 -53.26018524]
[-61.08422852 -66.85083771]
[-65.49374390 -81.21527100]
[-67.81402588 -96.06104279]
[-67.99782562 -111.08592224]
[-66.04141235 -125.98401642]
[-61.98460770 -140.45202637]
[-55.91000748 -154.19537354]
[-47.94128418 -166.93431091]
[-38.24066544 -178.40943909]
[-27.00564766 -188.38717651]
[-14.46496105 -196.66436768]
[-0.87391675 -203.07250977]
[13.49078846 -207.48114014]
[28.33670807 -209.80049133]
[43.36159897 -209.98336792]
[58.25957108 -208.02603149]
[72.72732544 -203.96833801]
[86.47030640 -197.89288330]
[99.20874023 -189.92337036]
[110.68328094 -180.22204590]
[120.66031647 -168.98640442]
[128.93673706 -156.44520569]
[135.34402466 -142.85375977]
[139.75177002 -128.48878479]
[142.07020569 -113.64272308]
[142.25215149 -98.61782074]
[140.29389954 -83.71997070]
[136.23530579 -69.25247192]
[130.15899658 -55.50986099]
[122.18869781 -42.77192307]
[112.48666382 -31.29798698]
[101.25041199 -21.32164574]
[88.70869446 -13.04600430]
[75.11685944 -6.63954544]
[79.51786041 7.70030165]
[83.91885376 22.04014778]
[88.31985474 36.37999725]
[92.72084808 50.71984482]
[97.12184906 65.05969238]
[108.25280762 74.95671082]
[104.90499878 90.41965485]
[112.37274170 103.42861176]
[122.53628540 114.46048737]
[132.69982910 125.49236298]
[142.86337280 136.52424622]
[153.02693176 147.55612183]
[163.19047546 158.58799744]
[173.35401917 169.61987305]
[188.90998840 170.42601013]
[199.06010437 181.75868225]
[198.19572449 196.58393860]
[208.35926819 207.61581421]
[218.52281189 218.64768982]
[228.68635559 229.67958069]
[240.34448242 220.23284912]
[252.57829285 211.54455566]
[265.33853149 203.64967346]
[278.57379150 196.57998657]
[292.23077393 190.36396790]
[306.25451660 185.02665710]
[320.58856201 180.58952332]
[335.17514038 177.07044983]
[349.95556641 174.48361206]
[364.87030029 172.83941650]
[379.85928345 172.14448547]
[394.86215210 172.40161133]
[409.81854248 173.60975647]
[424.66815186 175.76408386]
[439.35125732 178.85588074]
[453.80868530 182.87272644]
[467.98226929 187.79843140]
[481.81488037 193.61315918]
[495.25085449 200.29350281]
[508.23608398 207.81257629]
[520.71826172 216.14007568]
[532.64715576 225.24249268]
[543.97473145 235.08314514]
[554.65539551 245.62243652]
[564.64605713 256.81793213]
[573.90655518 268.62451172]
[582.39959717 280.99468994]
[590.09094238 293.87860107]
[596.94970703 307.22439575]
[602.94818115 320.97833252]
[608.06225586 335.08502197]
[612.27130127 349.48767090]
[615.55841064 364.12829590]
[617.91033936 378.94790649]
[619.31762695 393.88684082]
[619.77459717 408.88497925]
[619.27935791 423.88186646]
[617.83398438 438.81716919]
[615.44427490 453.63073730]
[612.11981201 468.26290894]
[607.87402344 482.65478516]
[602.72399902 496.74838257]
[596.69042969 510.48696899]
[589.79766846 523.81524658]
[582.07348633 536.67950439]
[573.54888916 549.02795410]
[564.25830078 560.81085205]
[554.23907471 571.98083496]
[543.53161621 582.49285889]
[532.17895508 592.30456543]
[520.22686768 601.37652588]
[507.72351074 609.67218018]
[494.71911621 617.15808105]
[481.26614380 623.80413818]
[467.41873169 629.58355713]
[453.23266602 634.47308350]
[438.76501465 638.45300293]
[424.07409668 641.50738525]
[409.21902466 643.62377930]
[394.25961304 644.79376221]
[379.25613403 645.01263428]
[364.26895142 644.27947998]
[349.35848999 642.59722900]
[334.58471680 639.97271729]
[320.00714111 636.41644287]
[305.68447876 631.94274902]
[291.67437744 626.56964111]
[278.03329468 620.31884766]
[264.81610107 613.21539307]
[252.07606506 605.28802490]
[239.86445618 596.56854248]
[228.23046875 587.09210205]
[217.22093201 576.89685059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 137]
[25 136]
[26 135]
[27 134]
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[67 124]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
