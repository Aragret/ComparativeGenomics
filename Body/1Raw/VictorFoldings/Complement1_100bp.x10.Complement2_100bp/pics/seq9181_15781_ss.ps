%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[231.33970642 278.72802734]
[234.42694092 264.04156494]
[238.62936401 249.63453674]
[243.92230225 235.59147644]
[250.27470398 221.99479675]
[237.21052551 214.62411499]
[224.14633179 207.25341797]
[211.08215332 199.88273621]
[198.01795959 192.51203918]
[184.95378113 185.14135742]
[171.88960266 177.77066040]
[158.82540894 170.39996338]
[167.15759277 182.87292480]
[171.86813354 197.11408997]
[172.61695862 212.09538269]
[169.35002136 226.73530579]
[162.30314636 239.97697449]
[151.98507690 250.86445618]
[139.14067078 258.61178589]
[124.69717407 262.65966797]
[109.69728088 262.71591187]
[95.22383881 258.77639771]
[82.32170868 251.12557983]
[71.92230225 240.31576538]
[64.77635956 227.12730408]
[61.39975739 212.51228333]
[62.03624725 197.52580261]
[66.63988495 183.24971008]
[74.87833405 170.71464539]
[86.15685272 160.82550049]
[99.66122437 154.29620361]
[114.41656494 151.59808350]
[129.35768127 152.92593384]
[143.40696716 158.18444824]
[133.24342346 147.15257263]
[123.07987976 136.12069702]
[112.91632843 125.08882141]
[102.75278473 114.05693817]
[89.46533203 109.70547485]
[86.21533966 96.10660553]
[89.09994507 110.82662964]
[85.82744598 125.46530151]
[76.94933319 137.55575562]
[63.96170807 145.06053162]
[49.05322266 146.71495056]
[34.73621750 142.24020386]
[23.42335892 132.39036560]
[17.02106094 118.82531738]
[16.60822487 103.83100128]
[22.25441933 89.93421936]
[33.00816345 79.47682953]
[47.05725861 74.22108459]
[62.03419113 75.05266571]
[75.41637421 81.83248138]
[67.56462097 69.05163574]
[59.71286392 56.27079391]
[51.86110687 43.48995209]
[44.00935364 30.70910835]
[36.15759659 17.92826462]
[28.30584145 5.14742279]
[20.45408440 -7.63341951]
[6.81850195 -1.33999240]
[-7.46573067 3.29649997]
[-22.19808388 6.21096849]
[-37.17173767 7.36249876]
[-52.17648697 6.73492479]
[-67.00168610 4.33705711]
[-81.43921661 0.20255785]
[-95.28639984 -5.61053133]
[-108.34883118 -13.02060318]
[-120.44314575 -21.92363167]
[-131.39955139 -32.19463348]
[-141.06423950 -43.68941879]
[-149.30154419 -56.24662018]
[-155.99580383 -69.68994904]
[-161.05307007 -83.83068848]
[-164.40231323 -98.47032928]
[-165.99653625 -113.40333557]
[-165.81336975 -128.42008972]
[-163.85534668 -143.30976868]
[-160.14999390 -157.86334229]
[-154.74931335 -171.87651062]
[-147.72912598 -185.15255737]
[-139.18797302 -197.50509644]
[-129.24575806 -208.76071167]
[-118.04207611 -218.76139832]
[-105.73419189 -227.36676025]
[-92.49488831 -234.45599365]
[-78.51003265 -239.92958069]
[-63.97594833 -243.71067810]
[-49.09666443 -245.74621582]
[-34.08107376 -246.00758362]
[-19.13996315 -244.49114990]
[-4.48308468 -241.21818542]
[9.68379974 -236.23463440]
[23.16181183 -229.61047363]
[35.76174164 -221.43869019]
[47.30670166 -211.83398438]
[57.63462067 -200.93121338]
[66.60051727 -188.88342285]
[74.07851410 -175.85975647]
[79.96363831 -162.04304504]
[84.17326355 -147.62724304]
[86.64830780 -132.81472778]
[87.35401154 -117.81345367]
[86.28047943 -102.83399963]
[83.44277191 -88.08666992]
[78.88072968 -73.77848816]
[72.65840149 -60.11031342]
[64.86312866 -47.27403259]
[55.60435486 -35.44984055]
[45.01205444 -24.80373764]
[33.23492813 -15.48517513]
[41.08668518 -2.70433259]
[48.93843842 10.07651043]
[56.79019547 22.85735321]
[64.64195251 35.63819504]
[72.49370575 48.41903687]
[80.34545898 61.19987869]
[88.19721985 73.98072052]
[97.24721527 85.94306183]
[110.53466797 90.29452515]
[113.78466034 103.89339447]
[123.94821167 114.92527008]
[134.11175537 125.95714569]
[144.27529907 136.98902893]
[154.43884277 148.02090454]
[166.19610596 157.33578491]
[179.26028442 164.70648193]
[192.32446289 172.07716370]
[205.38865662 179.44786072]
[218.45283508 186.81854248]
[231.51702881 194.18923950]
[244.58120728 201.55992126]
[257.64538574 208.93061829]
[265.99841309 196.46266174]
[275.28134155 184.67071533]
[285.43969727 173.62396240]
[296.41387939 163.38725281]
[308.13946533 154.02066040]
[320.54766846 145.57913208]
[333.56564331 138.11221313]
[347.11703491 131.66372681]
[361.12228394 126.27153015]
[375.49917603 121.96723938]
[390.16342163 118.77613068]
[405.02890015 116.71692657]
[420.00839233 115.80171967]
[435.01397705 116.03586578]
[449.95761108 117.41800690]
[464.75161743 119.94001770]
[479.30914307 123.58710480]
[493.54476929 128.33786011]
[507.37493896 134.16441345]
[520.71850586 141.03257751]
[533.49719238 148.90202332]
[545.63598633 157.72659302]
[557.06359863 167.45446777]
[567.71307373 178.02859497]
[577.52178955 189.38691711]
[586.43231201 201.46275330]
[594.39221191 214.18525696]
[601.35491943 227.47976685]
[607.27947998 241.26824951]
[612.13116455 255.46980286]
[615.88146973 270.00106812]
[618.50842285 284.77679443]
[619.99658203 299.71023560]
[620.33721924 314.71380615]
[619.52832031 329.69940186]
[617.57470703 344.57913208]
[614.48773193 359.26562500]
[610.28558350 373.67272949]
[604.99291992 387.71591187]
[598.64074707 401.31271362]
[591.26641846 414.38336182]
[582.91314697 426.85113525]
[573.63000488 438.64291382]
[563.47143555 449.68948364]
[552.49707031 459.92596436]
[540.77130127 469.29235840]
[528.36297607 477.73364258]
[515.34484863 485.20031738]
[501.79333496 491.64852905]
[487.78799438 497.04046631]
[473.41098022 501.34448242]
[458.74670410 504.53530884]
[443.88116455 506.59423828]
[428.90167236 507.50918579]
[413.89608765 507.27474976]
[398.95245361 505.89230347]
[384.15850830 503.37002563]
[369.60107422 499.72265625]
[355.36553955 494.97161865]
[341.53546143 489.14480591]
[328.19198608 482.27639771]
[315.41348267 474.40670776]
[303.27487183 465.58190918]
[291.84741211 455.85382080]
[281.19818115 445.27947998]
[271.38964844 433.92098999]
[262.47937012 421.84497070]
[254.51968384 409.12231445]
[247.55725098 395.82769775]
[241.63294983 382.03909302]
[236.78153992 367.83746338]
[233.03150940 353.30609131]
[230.40484619 338.53033447]
[228.91697693 323.59686279]
[228.57661438 308.59329224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 135]
[6 134]
[7 133]
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 123]
[40 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[60 114]
[61 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
