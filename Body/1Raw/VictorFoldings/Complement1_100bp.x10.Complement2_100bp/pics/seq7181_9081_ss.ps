%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[151.63496399 201.61105347]
[138.48287964 194.62020874]
[138.08723450 178.80395508]
[130.42663574 165.90762329]
[122.76603699 153.01130676]
[115.10543823 140.11497498]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.65883636 80.44194794]
[71.99823761 67.54562378]
[64.33763885 54.64929581]
[56.67704010 41.75297165]
[42.97702026 33.83969116]
[43.12930298 18.94586372]
[35.46870422 6.04953718]
[22.24399948 13.13339996]
[8.71889591 19.62535477]
[-5.08013105 25.51269531]
[-19.12607002 30.78389549]
[-33.39142227 35.42863464]
[-47.84826660 39.43782425]
[-62.46829987 42.80361557]
[-77.22290039 45.51941681]
[-92.08319855 47.57991409]
[-107.02008820 48.98107529]
[-122.00433350 49.72015381]
[-137.00660706 49.79570389]
[-151.99754333 49.20758057]
[-166.94778442 47.95693207]
[-181.82807922 46.04620743]
[-196.60928345 43.47914886]
[-211.26248169 40.26077652]
[-225.75895691 36.39739609]
[-240.07037354 31.89656639]
[-254.16868591 26.76710129]
[-268.02630615 21.01903915]
[-281.61611938 14.66363430]
[-294.91149902 7.71332693]
[-307.88641357 0.18172215]
[-320.51550293 -7.91643620]
[-332.77401733 -16.56529617]
[-344.63796997 -25.74792480]
[-356.08413696 -35.44635010]
[-367.09008789 -45.64158630]
[-377.63430786 -56.31367111]
[-387.69613647 -67.44171906]
[-397.25588989 -79.00394440]
[-406.29486084 -90.97771454]
[-414.79531860 -103.33958435]
[-422.74066162 -116.06536102]
[-430.11532593 -129.13012695]
[-436.90487671 -142.50833130]
[-443.09600830 -156.17375183]
[-448.67663574 -170.09963989]
[-453.63577271 -184.25877380]
[-457.96377563 -198.62338257]
[-461.65216064 -213.16539001]
[-464.69366455 -227.85630798]
[-467.08236694 -242.66738892]
[-468.81359863 -257.56964111]
[-469.88394165 -272.53387451]
[-470.29132080 -287.53079224]
[-470.03497314 -302.53106689]
[-469.11532593 -317.50531006]
[-467.53421021 -332.42422485]
[-465.29473877 -347.25860596]
[-462.40130615 -361.97940063]
[-458.85952759 -376.55780029]
[-454.67639160 -390.96527100]
[-449.86001587 -405.17361450]
[-444.41989136 -419.15499878]
[-438.36666870 -432.88204956]
[-431.71215820 -446.32791138]
[-424.46939087 -459.46627808]
[-416.65258789 -472.27139282]
[-408.27700806 -484.71823120]
[-399.35906982 -496.78240967]
[-389.91619873 -508.44027710]
[-379.96691895 -519.66906738]
[-369.53067017 -530.44677734]
[-358.62792969 -540.75231934]
[-347.27999878 -550.56549072]
[-335.50909424 -559.86706543]
[-323.33828735 -568.63891602]
[-310.79138184 -576.86383057]
[-297.89291382 -584.52569580]
[-284.66818237 -591.60949707]
[-271.14306641 -598.10144043]
[-257.34402466 -603.98870850]
[-243.29806519 -609.25982666]
[-229.03269958 -613.90454102]
[-214.57583618 -617.91369629]
[-199.95579529 -621.27941895]
[-185.20117188 -623.99517822]
[-170.34088135 -626.05560303]
[-155.40397644 -627.45672607]
[-140.41972351 -628.19573975]
[-125.41745758 -628.27124023]
[-110.42652893 -627.68304443]
[-95.47628784 -626.43237305]
[-80.59600067 -624.52154541]
[-65.81480408 -621.95446777]
[-51.16162491 -618.73602295]
[-36.66514969 -614.87261963]
[-22.35375404 -610.37170410]
[-8.25545788 -605.24218750]
[5.60214424 -599.49407959]
[19.19192505 -593.13861084]
[32.48728180 -586.18829346]
[45.46218491 -578.65661621]
[58.09123993 -570.55841064]
[70.34972382 -561.90954590]
[82.21363068 -552.72686768]
[93.65975189 -543.02838135]
[104.66567230 -532.83312988]
[115.20985413 -522.16101074]
[125.27164459 -511.03289795]
[134.83135986 -499.47064209]
[143.87026978 -487.49682617]
[152.37069702 -475.13491821]
[160.31599426 -462.40911865]
[167.69061279 -449.34432983]
[174.48011780 -435.96612549]
[180.67120361 -422.30065918]
[186.25175476 -408.37475586]
[191.21086121 -394.21560669]
[195.53881836 -379.85098267]
[199.22712708 -365.30895996]
[202.26858521 -350.61801147]
[204.65724182 -335.80694580]
[206.38841248 -320.90469360]
[207.45870972 -305.94046021]
[207.86604309 -290.94351196]
[207.60961914 -275.94323730]
[206.68992615 -260.96899414]
[205.10876465 -246.05009460]
[202.86924744 -231.21572876]
[199.97573853 -216.49493408]
[196.43391418 -201.91654968]
[192.25071716 -187.50909424]
[187.43431091 -173.30078125]
[181.99414062 -159.31941223]
[175.94084167 -145.59237671]
[169.28628540 -132.14653015]
[162.04348755 -119.00820160]
[154.22662354 -106.20310211]
[145.85099792 -93.75630188]
[136.93299866 -81.69216919]
[127.49010468 -70.03431702]
[117.54077911 -58.80556488]
[107.10450745 -48.02789688]
[96.20171356 -37.72241211]
[84.85374451 -27.90927887]
[73.08281708 -18.60770988]
[60.91197205 -9.83591366]
[48.36503220 -1.61106038]
[56.02563095 11.28526688]
[69.17771149 18.27611351]
[69.57336426 34.09237289]
[77.23396301 46.98870087]
[84.89456177 59.88502502]
[92.55516052 72.78135681]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[128.00177002 132.45437622]
[135.66236877 145.35070801]
[143.32295227 158.24702454]
[150.98355103 171.14335632]
[164.68357849 179.05664062]
[164.53129578 193.95046997]
[178.51939392 188.44326782]
[193.20980835 185.25138855]
[208.22200012 184.45747375]
[223.16711426 186.08210754]
[237.65806580 190.08320618]
[251.31947327 196.35711670]
[263.79748535 204.74134827]
[274.76889038 215.01872253]
[283.94952393 226.92301941]
[291.10153198 240.14590454]
[296.03973389 254.34486389]
[298.63613892 269.15213013]
[298.82357788 284.18411255]
[296.59710693 299.05151367]
[292.01446533 313.36917114]
[285.19433594 326.76626587]
[276.31335449 338.89575195]
[265.60156250 349.44345093]
[253.33647156 358.13616943]
[239.83572388 364.74871826]
[225.44903564 369.10983276]
[210.54905701 371.10656738]
[195.52174377 370.68719482]
[180.75631714 367.86254883]
[166.63526917 362.70581055]
[153.52433777 355.35055542]
[141.76313782 345.98730469]
[131.65632629 334.85858154]
[123.46568298 322.25265503]
[117.40335846 308.49603271]
[113.62638855 293.94506836]
[112.23261261 278.97665405]
[113.25811768 263.97848511]
[116.67635345 249.33911133]
[122.39877319 235.43766785]
[130.27716064 222.63426208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[3 172]
[4 171]
[5 170]
[6 169]
[7 168]
[8 167]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[16 159]
[17 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
