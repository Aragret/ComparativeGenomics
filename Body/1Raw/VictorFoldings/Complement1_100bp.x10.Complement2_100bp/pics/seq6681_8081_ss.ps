%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[76.10789490 675.63659668]
[61.27238846 677.91455078]
[46.29597473 678.90881348]
[31.28953362 678.61187744]
[16.36416817 677.02606201]
[1.63038361 674.16296387]
[-12.80273533 670.04394531]
[-26.82832909 664.69940186]
[-40.34255219 658.16894531]
[-53.24535370 650.50085449]
[-65.44120026 641.75201416]
[-76.83979797 631.98706055]
[-87.35675812 621.27844238]
[-96.91420746 609.70532227]
[-105.44138336 597.35345459]
[-112.87516785 584.31427002]
[-119.16050720 570.68432617]
[-124.25086975 556.56451416]
[-128.10858154 542.05932617]
[-130.70504761 527.27624512]
[-132.02108765 512.32464600]
[-132.04692078 497.31530762]
[-130.78237915 482.35928345]
[-128.23681641 467.56735229]
[-124.42907715 453.04901123]
[-119.38735199 438.91174316]
[-113.14897919 425.26019287]
[-105.76013947 412.19549561]
[-97.27553558 399.81436157]
[-87.75798798 388.20840454]
[-77.27796173 377.46362305]
[-65.91304779 367.65951538]
[-53.74739838 358.86871338]
[-40.87107468 351.15628052]
[-27.37941360 344.57931519]
[-13.37230492 339.18649292]
[1.04654634 335.01779175]
[15.77038670 332.10403442]
[30.69020271 330.46679688]
[45.69553375 330.11822510]
[60.67528152 331.06088257]
[62.90039825 316.22683716]
[65.12551880 301.39279175]
[67.35063171 286.55874634]
[69.46525574 271.70855713]
[71.46926880 256.84301758]
[73.36256409 241.96299744]
[75.14502716 227.06927490]
[76.92749786 212.17556763]
[70.75741577 198.61903381]
[80.07978058 185.83607483]
[81.86224365 170.94236755]
[83.64470673 156.04864502]
[85.42717743 141.15492249]
[83.80260468 138.87043762]
[82.98506165 135.80477905]
[83.27661896 132.26213074]
[84.86376190 128.65026855]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[108.11717224 12.85178280]
[94.49398041 19.12941170]
[81.02410126 12.52922630]
[77.63703156 -2.08336329]
[86.82959747 -13.93649960]
[101.82537079 -14.29249096]
[111.56960297 -2.89051008]
[115.32590485 -17.41256905]
[119.08220673 -31.93462944]
[122.83850861 -46.45668793]
[126.59480286 -60.97874832]
[130.35110474 -75.50080872]
[125.02039337 -93.12649536]
[137.80009460 -105.15339661]
[141.33976746 -119.72977448]
[144.87944031 -134.30615234]
[148.20169067 -148.93360901]
[143.48770142 -164.03620911]
[153.69129944 -174.88682556]
[156.79541016 -189.56213379]
[159.57102966 -204.30308533]
[162.01675415 -219.10235596]
[164.46247864 -233.90162659]
[150.12339783 -238.38905334]
[136.54843140 -244.82849121]
[124.00181580 -253.09460449]
[112.72776794 -263.02645874]
[102.94575500 -274.43078613]
[94.84616852 -287.08554077]
[88.58668518 -300.74441528]
[84.28913116 -315.14154053]
[82.03717804 -329.99667358]
[81.87464905 -345.02062988]
[83.80471802 -359.92102051]
[87.78980255 -374.40774536]
[93.75233459 -388.19882202]
[101.57626343 -401.02584839]
[111.10927582 -412.63909912]
[122.16582489 -422.81253052]
[134.53068542 -431.34814453]
[147.96316528 -438.07974243]
[162.20181274 -442.87631226]
[176.96945190 -445.64450073]
[191.97863770 -446.33041382]
[206.93721008 -444.92068481]
[221.55400085 -441.44277954]
[235.54446411 -435.96438599]
[248.63630676 -428.59216309]
[260.57467651 -419.46957397]
[271.12716675 -408.77420044]
[280.08840942 -396.71426392]
[287.28396606 -383.52447510]
[292.57373047 -369.46160889]
[295.85479736 -354.79937744]
[297.06326294 -339.82321167]
[296.17559814 -324.82458496]
[293.20907593 -310.09552002]
[288.22149658 -295.92263794]
[281.30987549 -282.58187866]
[272.60879517 -270.33291626]
[262.28762817 -259.41415405]
[250.54722595 -250.03816223]
[237.61618042 -242.38742065]
[223.74615479 -236.61085510]
[209.20715332 -232.82092285]
[194.28218079 -231.09138489]
[179.26174927 -231.45590210]
[176.81602478 -216.65663147]
[174.37030029 -201.85736084]
[176.11535645 -198.79353333]
[176.46313477 -194.73223877]
[174.96095276 -190.33943176]
[171.47071838 -186.45802307]
[168.36660767 -171.78271484]
[173.30262756 -157.72978210]
[162.87699890 -145.82949829]
[164.68505859 -141.40908813]
[163.73544312 -135.80595398]
[159.45581055 -130.76647949]
[155.91613770 -116.19010162]
[152.37646484 -101.61372375]
[158.40010071 -91.12361908]
[155.57043457 -78.95082855]
[144.87316895 -71.74450684]
[141.11686707 -57.22244644]
[137.36056519 -42.70038605]
[133.60426331 -28.17832756]
[129.84796143 -13.65626907]
[126.09165955 0.86579055]
[122.87838745 15.51757812]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[100.32089233 142.93739319]
[98.53842926 157.83111572]
[96.75595856 172.72482300]
[94.97349548 187.61854553]
[101.01608276 202.24037170]
[91.82121277 213.95802307]
[90.03874207 228.85174561]
[88.25627899 243.74546814]
[90.34375000 252.63816833]
[86.33480072 258.84704590]
[84.33078766 273.71258545]
[86.28562164 282.63537598]
[82.18467712 288.78387451]
[79.95955658 303.61791992]
[77.73444366 318.45196533]
[75.50932312 333.28601074]
[90.10638428 336.77990723]
[104.34906006 341.51568604]
[118.13188934 347.45834351]
[131.35282898 354.56384277]
[143.91400146 362.77957153]
[155.72241211 372.04470825]
[166.69062805 382.29067993]
[176.73742676 393.44161987]
[185.78843689 405.41494751]
[193.77665710 418.12200928]
[200.64294434 431.46875000]
[206.33644104 445.35635376]
[210.81500244 459.68200684]
[214.04547119 474.33959961]
[216.00395203 489.22067261]
[216.67590332 504.21499634]
[216.05638123 519.21160889]
[214.14996338 534.09942627]
[210.97076416 548.76818848]
[206.54231262 563.10943604]
[200.89741516 577.01684570]
[194.07785034 590.38751221]
[186.13410950 603.12243652]
[177.12501526 615.12738037]
[167.11726379 626.31335449]
[156.18495178 636.59759521]
[144.40902710 645.90399170]
[131.87664795 654.16357422]
[118.68063354 661.31530762]
[104.91867065 667.30609131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 180]
[42 179]
[43 178]
[44 177]
[45 175]
[46 174]
[47 172]
[48 171]
[49 170]
[51 168]
[52 167]
[53 166]
[54 165]
[59 164]
[60 163]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[80 147]
[81 146]
[82 145]
[83 142]
[85 140]
[86 139]
[87 135]
[88 134]
[89 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
