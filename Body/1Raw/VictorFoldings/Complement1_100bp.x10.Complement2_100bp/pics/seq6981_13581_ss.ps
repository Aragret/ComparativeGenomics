%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[143.72665405 805.06610107]
[129.32273865 800.86755371]
[115.15406036 795.93316650]
[101.25817871 790.27587891]
[87.67195892 783.91070557]
[74.43141937 776.85461426]
[61.57167816 769.12628174]
[49.12683105 760.74621582]
[37.12988281 751.73657227]
[25.61264610 742.12127686]
[14.60566330 731.92590332]
[4.13812494 721.17736816]
[-5.76221275 709.90423584]
[-15.06909561 698.13635254]
[-23.75784302 685.90502930]
[-31.80541420 673.24261475]
[-39.19046783 660.18267822]
[-45.89342117 646.75988770]
[-51.89649582 633.00988770]
[-57.18378067 618.96905518]
[-61.74124527 604.67468262]
[-65.55680847 590.16461182]
[-68.62035370 575.47735596]
[-70.92375183 560.65191650]
[-72.46089935 545.72747803]
[-73.22771454 530.74377441]
[-73.22216797 515.74041748]
[-72.44428253 500.75726318]
[-70.89610291 485.83401489]
[-68.58174896 471.01025391]
[-65.50735474 456.32528687]
[-61.68106842 441.81805420]
[-57.11304092 427.52703857]
[-51.81538391 413.49011230]
[-45.80214691 399.74450684]
[-39.08927536 386.32672119]
[-31.69457245 373.27224731]
[-23.63764572 360.61578369]
[-14.93986130 348.39086914]
[-5.62428427 336.62991333]
[4.28438187 325.36407471]
[14.75986099 314.62329102]
[25.77437401 304.43600464]
[37.29871368 294.82925415]
[49.30231476 285.82849121]
[61.75335312 277.45758057]
[74.61880493 269.73873901]
[87.86455536 262.69244385]
[101.45547485 256.33737183]
[115.35552979 250.69035339]
[129.52786255 245.76638794]
[125.34085083 231.36260986]
[121.15383911 216.95883179]
[110.17146301 206.89717102]
[113.74912262 191.48579407]
[111.36022186 190.01905823]
[109.40837860 187.51766968]
[108.29058075 184.14337158]
[108.33799744 180.19847107]
[109.76914215 176.09898376]
[106.44688416 161.47151184]
[96.08286285 150.77403259]
[100.57147980 135.60290527]
[97.24922180 120.97544861]
[93.92696381 106.34799194]
[91.49493408 104.51094055]
[89.67758179 101.74837494]
[88.81899261 98.28625488]
[89.17494202 94.47448730]
[90.86988068 90.75156403]
[88.42414856 75.95229340]
[85.97842407 61.15302277]
[83.53269196 46.35375214]
[73.64884186 33.99980927]
[79.20743561 20.18129730]
[76.76171112 5.38202620]
[74.31597900 -9.41724491]
[63.59180832 1.07046819]
[48.68775177 -0.62337071]
[40.59052658 -13.25012589]
[45.26910782 -27.50182343]
[59.27461624 -32.87264252]
[72.28177643 -25.40477371]
[70.94354248 -40.34495926]
[69.60530853 -55.28514481]
[68.26707458 -70.22532654]
[66.92884064 -85.16551208]
[64.30607605 -88.62601471]
[63.04750061 -92.36506653]
[63.07316589 -95.91960907]
[64.16094971 -98.90010071]
[65.98285675 -101.03054810]
[65.53625488 -116.02389526]
[65.08964539 -131.01724243]
[64.64303589 -146.01058960]
[64.19643402 -161.00395203]
[63.74982834 -175.99729919]
[49.52663803 -181.36099243]
[38.44214249 -191.76303101]
[32.18664932 -205.61717224]
[31.71407318 -220.81076050]
[37.09648132 -235.02688599]
[47.51309204 -246.09768677]
[61.37545013 -252.33496094]
[76.56964874 -252.78753662]
[90.77867889 -247.38644409]
[101.83576202 -236.95527649]
[108.05478668 -223.08471680]
[108.48738861 -207.88993835]
[103.06759644 -193.68803406]
[92.62189484 -182.64466858]
[78.74317932 -176.44390869]
[79.18978119 -161.45054626]
[79.63639069 -146.45719910]
[80.08299255 -131.46385193]
[80.52960205 -116.47050476]
[80.97620392 -101.47714996]
[81.86902618 -86.50374603]
[83.20726013 -71.56356049]
[84.54549408 -56.62337875]
[85.88372803 -41.68319321]
[87.22196198 -26.74300766]
[89.11524963 -11.86297226]
[91.56098175 2.93629885]
[94.00670624 17.73556900]
[103.71562958 29.03097153]
[98.33197021 43.90802383]
[100.77769470 58.70729446]
[103.22341919 73.50656891]
[105.66915131 88.30583954]
[108.55442047 103.02572632]
[111.87667847 117.65319061]
[115.19894409 132.28065491]
[125.80059052 144.02439880]
[121.07434082 158.14926147]
[124.39660645 172.77671814]
[128.15290833 187.29878235]
[139.43476868 198.39068604]
[135.55761719 212.77182007]
[139.74462891 227.17559814]
[143.93164062 241.57937622]
[158.53509521 238.13856506]
[173.29632568 235.45407104]
[188.17617798 233.53303528]
[203.13517761 232.38053894]
[218.13369751 231.99964905]
[233.13191223 232.39135742]
[248.09008789 233.55465698]
[262.96853638 235.48643494]
[277.72784424 238.18157959]
[292.32879639 241.63293457]
[306.73275757 245.83135986]
[320.90145874 250.76571655]
[334.79736328 256.42291260]
[348.38363647 262.78796387]
[361.62420654 269.84396362]
[374.48400879 277.57223511]
[386.92889404 285.95227051]
[398.92590332 294.96182251]
[410.44317627 304.57705688]
[421.45022583 314.77239990]
[431.91781616 325.52087402]
[441.81823730 336.79394531]
[451.12518311 348.56173706]
[459.81399536 360.79302979]
[467.86163330 373.45541382]
[475.24676514 386.51528931]
[481.94979858 399.93801880]
[487.95294189 413.68801880]
[493.24032593 427.72882080]
[497.79785156 442.02319336]
[501.61349487 456.53320312]
[504.67712402 471.22042847]
[506.98062134 486.04589844]
[508.51785278 500.97027588]
[509.28475952 515.95397949]
[509.27929688 530.95733643]
[508.50149536 545.94049072]
[506.95339966 560.86376953]
[504.63912964 575.68756104]
[501.56481934 590.37255859]
[497.73861694 604.87976074]
[493.17068481 619.17083740]
[487.87310791 633.20776367]
[481.85992432 646.95343018]
[475.14715576 660.37127686]
[467.75250244 673.42578125]
[459.69564819 686.08227539]
[450.99795532 698.30725098]
[441.68243408 710.06823730]
[431.77383423 721.33410645]
[421.29843140 732.07501221]
[410.28396606 742.26232910]
[398.75967407 751.86914062]
[386.75613403 760.86999512]
[374.30514526 769.24096680]
[361.43972778 776.95989990]
[348.19403076 784.00622559]
[334.60314941 790.36138916]
[320.70312500 796.00848389]
[306.53082275 800.93255615]
[292.12380981 805.12048340]
[277.52035522 808.56121826]
[262.75909424 811.24560547]
[247.87924194 813.16656494]
[232.92022705 814.31896973]
[217.92172241 814.69976807]
[202.92349243 814.30798340]
[187.96533203 813.14459229]
[173.08688354 811.21276855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 141]
[52 140]
[53 139]
[55 137]
[60 136]
[61 135]
[63 133]
[64 132]
[65 131]
[70 130]
[71 129]
[72 128]
[73 127]
[75 125]
[76 124]
[77 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
