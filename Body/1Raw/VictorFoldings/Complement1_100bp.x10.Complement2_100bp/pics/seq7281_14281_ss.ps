%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[236.67411804 295.03060913]
[243.30389404 281.56164551]
[251.22195435 268.80737305]
[260.35205078 256.89065552]
[249.39613342 246.64526367]
[238.44023132 236.39987183]
[227.48431396 226.15447998]
[216.52841187 215.90908813]
[205.57249451 205.66369629]
[194.61659241 195.41831970]
[183.66067505 185.17292786]
[172.70477295 174.92753601]
[161.74885559 164.68214417]
[150.64163208 154.60099792]
[139.38552856 144.68634033]
[124.72072601 142.08003235]
[119.47916412 127.15232086]
[108.22306824 117.23767090]
[93.75629425 118.04916382]
[82.88326263 108.47193146]
[81.86227417 94.01842499]
[66.39236450 90.70294952]
[61.95591354 76.48439789]
[50.69981766 66.56974792]
[39.44372177 56.65509796]
[28.18762589 46.74044418]
[16.93153000 36.82579422]
[5.67543459 26.91114426]
[-5.58066130 16.99649239]
[-16.83675766 7.08184147]
[-23.23225594 5.40579796]
[-27.22229576 1.35899472]
[-28.27473068 -3.29948378]
[-39.23064041 -13.54487514]
[-50.18655014 -23.79026794]
[-61.14245987 -34.03565979]
[-74.46250916 -32.03792572]
[-86.32789612 -37.98964310]
[-92.50733948 -49.51772308]
[-90.94227600 -62.30756378]
[-101.74443054 -72.71493530]
[-112.54659271 -83.12231445]
[-123.34874725 -93.52968597]
[-134.66499329 -83.66905212]
[-146.79757690 -74.83222961]
[-159.65420532 -67.08646393]
[-173.13697815 -60.49071884]
[-187.14332581 -55.09518051]
[-201.56661987 -50.94092178]
[-216.29710388 -48.05955124]
[-231.22265625 -46.47300720]
[-246.22969055 -46.19335938]
[-261.20401001 -47.22273254]
[-276.03158569 -49.55330276]
[-290.59963989 -53.16732407]
[-304.79730225 -58.03729248]
[-318.51644897 -64.12614441]
[-331.65270996 -71.38754272]
[-344.10610962 -79.76622009]
[-355.78186035 -89.19840240]
[-366.59109497 -99.61231232]
[-376.45156860 -110.92869568]
[-385.28823853 -123.06141663]
[-393.03381348 -135.91813660]
[-399.62936401 -149.40101624]
[-405.02471924 -163.40742493]
[-409.17877197 -177.83078003]
[-412.05993652 -192.56130981]
[-413.64627075 -207.48689270]
[-413.92572021 -222.49392700]
[-412.89611816 -237.46821594]
[-410.56533813 -252.29579163]
[-406.95111084 -266.86380005]
[-402.08096313 -281.06134033]
[-395.99191284 -294.78042603]
[-388.73031616 -307.91659546]
[-380.35147095 -320.36987305]
[-370.91912842 -332.04550171]
[-360.50506592 -342.85458374]
[-349.18853760 -352.71490479]
[-337.05569458 -361.55139160]
[-324.19888306 -369.29678345]
[-310.71591187 -375.89215088]
[-296.70941162 -381.28729248]
[-282.28601074 -385.44116211]
[-267.55545044 -388.32211304]
[-252.62983704 -389.90823364]
[-237.62278748 -390.18746948]
[-222.64851379 -389.15768433]
[-207.82098389 -386.82669067]
[-193.25302124 -383.21224976]
[-179.05552673 -378.34188843]
[-165.33654785 -372.25265503]
[-152.20048523 -364.99090576]
[-139.74731445 -356.61187744]
[-128.07182312 -347.17935181]
[-117.26287842 -336.76513672]
[-107.40271759 -325.44848633]
[-98.56640625 -313.31552124]
[-90.82118225 -300.45858765]
[-84.22600555 -286.97552490]
[-78.83105469 -272.96893311]
[-74.67739868 -258.54547119]
[-71.79665375 -243.81486511]
[-70.21073914 -228.88925171]
[-69.93171692 -213.88220215]
[-70.96172333 -198.90794373]
[-73.29291534 -184.08042908]
[-76.90754700 -169.51252747]
[-81.77811432 -155.31510925]
[-87.86754608 -141.59620667]
[-95.12949371 -128.46025085]
[-103.50869751 -116.00719452]
[-112.94137573 -104.33184052]
[-102.13921356 -93.92446899]
[-91.33705902 -83.51709747]
[-80.53490448 -73.10971832]
[-63.74873734 -74.14089966]
[-51.16273880 -62.48295975]
[-50.89706802 -44.99156952]
[-39.94115829 -34.74617767]
[-28.98524857 -24.50078392]
[-18.02933884 -14.25539303]
[-6.92210579 -4.17425442]
[4.33399010 5.74039698]
[15.59008598 15.65504837]
[26.84618187 25.56969833]
[38.10227585 35.48435211]
[49.35837173 45.39900208]
[60.61446762 55.31365204]
[71.87056732 65.22830200]
[86.53536987 67.83461761]
[91.77693176 82.76232910]
[106.24370575 81.95083618]
[117.11673737 91.52806854]
[118.13772583 105.98157501]
[129.39381409 115.89622498]
[144.86373901 119.21170044]
[149.30018616 133.43025208]
[160.55627441 143.34490967]
[166.95178223 145.02095032]
[170.94181824 149.06774902]
[171.99424744 153.72622681]
[182.95016479 163.97161865]
[193.90606689 174.21701050]
[204.86198425 184.46240234]
[215.81788635 194.70779419]
[226.77380371 204.95318604]
[237.72970581 215.19857788]
[248.68562317 225.44396973]
[259.64154053 235.68936157]
[270.59744263 245.93475342]
[281.87615967 236.02731323]
[294.07168579 227.27311707]
[307.06655884 219.75645447]
[320.73562622 213.54972839]
[334.94723511 208.71270752]
[349.56451416 205.29197693]
[364.44671631 203.32048035]
[379.45050049 202.81721497]
[394.43136597 203.78700256]
[409.24505615 206.22053528]
[423.74884033 210.09436035]
[437.80310059 215.37117004]
[451.27246094 222.00013733]
[464.02719116 229.91743469]
[475.94445801 239.04679871]
[486.90951538 249.30032349]
[496.81671143 260.57925415]
[505.57067871 272.77493286]
[513.08709717 285.76995850]
[519.29351807 299.43914795]
[524.13024902 313.65084839]
[527.55072021 328.26821899]
[529.52191162 343.15048218]
[530.02484131 358.15426636]
[529.05474854 373.13510132]
[526.62097168 387.94873047]
[522.74682617 402.45245361]
[517.46972656 416.50659180]
[510.84051514 429.97583008]
[502.92294312 442.73040771]
[493.79333496 454.64749146]
[483.53961182 465.61233521]
[472.26049805 475.51931763]
[460.06460571 484.27301025]
[447.06945801 491.78915405]
[433.40014648 497.99533081]
[419.18832397 502.83178711]
[404.57089233 506.25195312]
[389.68859863 508.22283936]
[374.68481445 508.72552490]
[359.70397949 507.75512695]
[344.89041138 505.32098389]
[330.38674927 501.44659424]
[316.33273315 496.16921997]
[302.86361694 489.53970337]
[290.10922241 481.62191772]
[278.19229126 472.49206543]
[267.22766113 462.23809814]
[257.32092285 450.95877075]
[248.56744385 438.76272583]
[241.05155945 425.76742554]
[234.84565735 412.09799194]
[230.00949097 397.88607788]
[226.58963013 383.26858521]
[224.61903381 368.38626099]
[224.11665344 353.38244629]
[225.08735657 338.40164185]
[227.52177429 323.58810425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 152]
[5 151]
[6 150]
[7 149]
[8 148]
[9 147]
[10 146]
[11 145]
[12 144]
[13 143]
[14 140]
[15 139]
[17 137]
[18 136]
[21 133]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[29 125]
[30 124]
[33 123]
[34 122]
[35 121]
[36 120]
[40 117]
[41 116]
[42 115]
[43 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
