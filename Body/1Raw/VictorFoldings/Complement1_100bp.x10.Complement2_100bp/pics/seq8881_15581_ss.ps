%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[128.61219788 684.73461914]
[115.50462341 677.43023682]
[102.90284729 669.28424072]
[90.86083221 660.33148193]
[79.43013763 650.61029053]
[68.65972137 640.16229248]
[58.59569168 629.03222656]
[49.28115463 617.26782227]
[40.75599289 604.91937256]
[33.05671310 592.03979492]
[26.21628761 578.68426514]
[20.26400757 564.90991211]
[15.22535801 550.77575684]
[11.12191868 536.34234619]
[7.97126102 521.67144775]
[5.78687620 506.82586670]
[4.57811785 491.86923218]
[4.35016251 476.86553955]
[5.10398626 461.87908936]
[6.83636141 446.97399902]
[9.53986931 432.21417236]
[13.20293236 417.66271973]
[17.80986595 403.38201904]
[23.34094048 389.43319702]
[29.77247429 375.87600708]
[37.07692337 362.76849365]
[45.22300720 350.16674805]
[54.17584991 338.12478638]
[63.89710236 326.69415283]
[74.34514618 315.92379761]
[85.47524261 305.85983276]
[97.23971558 296.54537964]
[109.58820343 288.02026367]
[122.46781921 280.32107544]
[135.82341003 273.48074341]
[149.59779358 267.52853394]
[144.56088257 253.39950562]
[139.52397156 239.27046204]
[134.48704529 225.14143372]
[129.45013428 211.01240540]
[124.24309540 205.76754761]
[124.44511414 196.63536072]
[119.61911774 182.43290710]
[114.79311371 168.23043823]
[109.96711731 154.02798462]
[105.14112091 139.82553101]
[100.31512451 125.62307739]
[95.18675232 120.30127716]
[95.52471161 111.17310333]
[92.65652466 125.89633179]
[84.98504639 138.78619385]
[73.41152954 148.32839966]
[59.29560471 153.40193176]
[44.29560852 153.41076660]
[30.17371941 148.35386658]
[18.58896446 138.82530212]
[10.90230846 125.94449615]
[8.01677227 111.22465515]
[10.27134514 96.39505768]
[17.40116310 83.19787598]
[28.56862259 73.18349457]
[42.46178055 67.52838898]
[57.44848251 66.89692688]
[71.76810455 71.36328888]
[83.73839569 80.40276337]
[91.95372009 92.95484924]
[90.83807373 77.99639893]
[89.72241974 63.03794098]
[88.60677338 48.07949066]
[87.49112701 33.12103653]
[86.37547302 18.16258240]
[75.65742493 3.18910742]
[83.88818359 -12.30997658]
[82.54994965 -27.25016212]
[81.21171570 -42.19034576]
[78.98659515 -57.02439117]
[75.88248444 -71.69969177]
[72.77837372 -86.37499237]
[57.77594757 -85.48908234]
[42.80905533 -86.84915924]
[28.21206665 -90.42484283]
[14.31107903 -96.13625336]
[1.41664875 -103.85579681]
[-10.18315887 -113.41101074]
[-20.22920036 -124.58843231]
[-28.49704170 -137.13835144]
[-34.80197906 -150.78039551]
[-39.00315475 -165.20980835]
[-41.00671387 -180.10421753]
[-40.76789856 -195.13087463]
[-38.29203796 -209.95408630]
[-33.63445282 -224.24270630]
[-26.89918709 -237.67750549]
[-18.23671341 -249.95835876]
[-7.84055233 -260.81088257]
[4.05703974 -269.99267578]
[17.19026756 -277.29855347]
[31.26572990 -282.56533813]
[45.96897507 -285.67535400]
[60.97152710 -286.55914307]
[75.93822479 -285.19692993]
[90.53470612 -281.61917114]
[104.43488312 -275.90576172]
[117.32820892 -268.18438721]
[128.92666626 -258.62753296]
[138.97111511 -247.44866943]
[147.23716736 -234.89758301]
[153.54016113 -221.25463867]
[157.73927307 -206.82463074]
[159.74070740 -191.92993164]
[159.49975586 -176.90330505]
[157.02178955 -162.08044434]
[152.36216736 -147.79249573]
[145.62498474 -134.35864258]
[136.96076965 -122.07903290]
[126.56305695 -111.22798157]
[114.66416168 -102.04790497]
[101.52989197 -94.74388885]
[87.45368195 -89.47910309]
[90.55778503 -74.80380249]
[93.66189575 -60.12850189]
[100.98664093 -73.21850586]
[114.55786896 -79.60769653]
[129.31384277 -76.91307068]
[139.75096130 -66.13965607]
[141.97644043 -51.30566025]
[135.16021729 -37.94380951]
[121.84457397 -31.03773689]
[106.99593353 -33.16323853]
[96.15190125 -43.52857971]
[97.49013519 -28.58839607]
[98.82836914 -13.64821053]
[107.90674591 -5.65386295]
[109.14392090 6.78209925]
[101.33393097 17.04693413]
[102.44957733 32.00538635]
[103.56522369 46.96384048]
[104.68087769 61.92229462]
[105.79652405 76.88074493]
[106.91217041 91.83920288]
[109.79744720 106.55908966]
[114.51757812 120.79708099]
[119.34357452 134.99954224]
[124.16957855 149.20199585]
[128.99557495 163.40444946]
[133.82156372 177.60690308]
[138.64756775 191.80935669]
[143.57916260 205.97549438]
[148.61607361 220.10452271]
[153.65299988 234.23355103]
[158.68991089 248.36257935]
[163.72682190 262.49160767]
[178.16018677 258.38790894]
[192.83103943 255.23699951]
[207.67655945 253.05235291]
[222.63319397 251.84332275]
[237.63685608 251.61511230]
[252.62333679 252.36866760]
[267.52844238 254.10078430]
[282.28833008 256.80401611]
[296.83984375 260.46682739]
[311.12060547 265.07351685]
[325.06951904 270.60433960]
[338.62683105 277.03564453]
[351.73449707 284.33984375]
[364.33636475 292.48571777]
[376.37850952 301.43832397]
[387.80929565 311.15939331]
[398.57983398 321.60723877]
[408.64401245 332.73715210]
[417.95867920 344.50146484]
[426.48397827 356.84982300]
[434.18341064 369.72927856]
[441.02401733 383.08477783]
[446.97644043 396.85903931]
[452.01525879 410.99313354]
[456.11886597 425.42651367]
[459.26971436 440.09738159]
[461.45425415 454.94293213]
[462.66320801 469.89956665]
[462.89132690 484.90322876]
[462.13769531 499.88970947]
[460.40548706 514.79479980]
[457.70214844 529.55468750]
[454.03924561 544.10614014]
[449.43249512 558.38690186]
[443.90158081 572.33581543]
[437.47021484 585.89306641]
[430.16592407 599.00067139]
[422.01998901 611.60247803]
[413.06729126 623.64459229]
[403.34616089 635.07531738]
[392.89825439 645.84582520]
[381.76828003 655.90991211]
[370.00390625 665.22448730]
[357.65551758 673.74975586]
[344.77600098 681.44909668]
[331.42047119 688.28961182]
[317.64617920 694.24194336]
[303.51205444 699.28070068]
[289.07864380 703.38421631]
[274.40774536 706.53497314]
[259.56219482 708.71942139]
[244.60556030 709.92828369]
[229.60188293 710.15631104]
[214.61541748 709.40258789]
[199.71032715 707.67028809]
[184.95046997 704.96685791]
[170.39900208 701.30389404]
[156.11828613 696.69708252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[49 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[73 132]
[74 131]
[75 130]
[76 121]
[77 120]
[78 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
