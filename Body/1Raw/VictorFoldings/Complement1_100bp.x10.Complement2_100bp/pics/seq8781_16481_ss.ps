%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-2.07612014 329.04693604]
[2.35869622 343.39657593]
[4.99645090 358.18243408]
[5.79715633 373.18038940]
[4.74867392 388.16305542]
[1.86689830 402.90332031]
[-2.80448365 417.17767334]
[-9.19465446 430.76980591]
[-17.20674133 443.47357178]
[-26.71928406 455.09643555]
[-37.58807373 465.46221924]
[-49.64833832 474.41372681]
[-62.71725464 481.81527710]
[-76.59669495 487.55468750]
[-91.07625580 491.54492188]
[-105.93643188 493.72549438]
[-120.95194244 494.06332397]
[-135.89515686 492.55334473]
[-150.53953552 489.21841431]
[-164.66307068 484.10910034]
[-178.05166626 477.30285645]
[-190.50236511 468.90286255]
[-201.82638550 459.03643799]
[-211.85206604 447.85317993]
[-220.42744446 435.52261353]
[-227.42250061 422.23168945]
[-232.73118591 408.18188477]
[-236.27302551 393.58615112]
[-237.99433899 378.66580200]
[-237.86903381 363.64703369]
[-235.89898682 348.75747681]
[-232.11407471 334.22290039]
[-226.57168579 320.26361084]
[-219.35581970 307.09127808]
[-210.57589722 294.90551758]
[-200.36499023 283.89111328]
[-188.87791443 274.21502686]
[-176.28878784 266.02395630]
[-162.78848267 259.44207764]
[-148.58164978 254.56913757]
[-133.88365173 251.47903442]
[-118.91732788 250.21861267]
[-103.90955353 250.80697632]
[-89.08782959 253.23521423]
[-74.67687225 257.46649170]
[-60.89513016 263.43670654]
[-47.95154190 271.05529785]
[-38.81274033 259.16067505]
[-29.67393684 247.26603699]
[-20.53513527 235.37141418]
[-18.95267296 228.15216064]
[-11.17065525 223.36906433]
[-1.85577261 211.61180115]
[-0.01686171 196.83116150]
[14.61756325 190.81915283]
[23.93244553 179.06190491]
[24.28219414 174.29884338]
[27.62778091 169.70492554]
[33.70389557 167.09870911]
[43.36470413 155.62400818]
[53.02551651 144.14930725]
[62.68632507 132.67460632]
[72.34713745 121.19991302]
[74.62530518 106.48056030]
[89.43224335 100.90694427]
[98.65933990 89.08067322]
[107.43994904 76.91921997]
[116.22055054 64.75776672]
[125.00115204 52.59630966]
[133.78175354 40.43485260]
[126.85646820 25.42045021]
[128.43890381 9.05611515]
[138.00288391 -4.20084715]
[152.86126709 -10.78752327]
[168.92025757 -8.99273109]
[177.51882935 -21.28356934]
[186.11738586 -33.57440567]
[187.68830872 -49.31743240]
[201.32391357 -55.31070709]
[209.92248535 -67.60154724]
[212.27760315 -76.42714691]
[218.74168396 -80.01007080]
[227.52229309 -92.17152405]
[236.30288696 -104.33298492]
[244.53169250 -116.87438202]
[252.19229126 -129.77070618]
[259.85290527 -142.66703796]
[261.54507446 -151.64335632]
[267.72476196 -155.69712830]
[275.57653809 -168.47798157]
[283.42828369 -181.25881958]
[291.28002930 -194.03965759]
[299.13180542 -206.82051086]
[306.98355103 -219.60134888]
[314.83529663 -232.38218689]
[322.68707275 -245.16304016]
[310.83486938 -254.38195801]
[300.06878662 -264.84878540]
[290.51950073 -276.43646240]
[282.30294800 -289.00433350]
[275.51882935 -302.39984131]
[270.24957275 -316.46035767]
[266.55908203 -331.01519775]
[264.49215698 -345.88769531]
[264.07391357 -360.89727783]
[265.30941772 -375.86181641]
[268.18368530 -390.59957886]
[272.66177368 -404.93170166]
[278.68939209 -418.68417358]
[286.19332886 -431.69012451]
[295.08251953 -443.79159546]
[305.24905396 -454.84170532]
[316.56948853 -464.70632935]
[328.90640259 -473.26571655]
[342.11007690 -480.41598511]
[356.02023315 -486.07031250]
[370.46795654 -490.16003418]
[385.27792358 -492.63555908]
[400.27032471 -493.46679688]
[415.26318359 -492.64367676]
[430.07449341 -490.17620850]
[444.52444458 -486.09429932]
[458.43765259 -480.44754028]
[471.64520264 -473.30444336]
[483.98675537 -464.75173950]
[495.31256104 -454.89324951]
[505.48504639 -443.84863281]
[514.38079834 -431.75198364]
[521.89178467 -418.75012207]
[527.92687988 -405.00091553]
[532.41278076 -390.67123413]
[535.29498291 -375.93502808]
[536.53863525 -360.97116089]
[536.12854004 -345.96133423]
[534.06970215 -331.08773804]
[530.38708496 -316.53088379]
[525.12542725 -302.46752930]
[518.34857178 -289.06835938]
[510.13885498 -276.49603271]
[500.59585571 -264.90316772]
[489.83544922 -254.43049622]
[477.98825073 -245.20513916]
[465.19808960 -237.33909607]
[451.62017822 -230.92784119]
[437.41940308 -226.04920959]
[422.76812744 -222.76242065]
[407.84417725 -221.10737610]
[392.82876587 -221.10415649]
[377.90411377 -222.75280762]
[363.25140381 -226.03330994]
[349.04852295 -230.90585327]
[335.46789551 -237.31127930]
[327.61614990 -224.53044128]
[319.76440430 -211.74958801]
[311.91262817 -198.96875000]
[304.06088257 -186.18791199]
[296.20913696 -173.40705872]
[288.35736084 -160.62622070]
[280.50561523 -147.84538269]
[272.74920654 -135.00643921]
[265.08862305 -122.11011505]
[257.42803955 -109.21378326]
[272.19335938 -111.85673523]
[284.58114624 -103.39845276]
[287.49511719 -88.68421173]
[279.26599121 -76.14300537]
[264.60781860 -72.95900726]
[251.91744995 -80.95615387]
[248.46434021 -95.55238342]
[239.68374634 -83.39092255]
[230.90313721 -71.22946930]
[222.21331787 -59.00298309]
[213.61474609 -46.71214294]
[212.65885925 -31.84824371]
[198.40821838 -24.97584343]
[189.80966187 -12.68500519]
[181.21109009 -0.39416739]
[187.79116821 11.57327652]
[188.57679749 25.27406311]
[183.35772705 38.03770447]
[173.09973145 47.35176849]
[159.76635742 51.35638809]
[145.94320679 49.21545410]
[137.16261292 61.37691116]
[128.38200378 73.53836823]
[119.60140228 85.69982147]
[110.82080078 97.86128235]
[125.81913757 98.08431244]
[135.11642456 109.85548401]
[131.85903931 124.49752808]
[118.44820404 131.21687317]
[104.76989746 125.06026459]
[100.90694427 110.56775665]
[97.93776703 126.10784912]
[83.82183838 130.86071777]
[74.16102600 142.33541870]
[64.50021362 153.81011963]
[54.83940506 165.28482056]
[45.17859650 176.75952148]
[35.68969727 188.37678528]
[26.37481499 200.13403320]
[23.86964035 215.75564575]
[9.90147877 220.92669678]
[0.58659589 232.68394470]
[-8.64050198 244.51020813]
[-17.77930450 256.40484619]
[-26.91810799 268.29946899]
[-36.05690765 280.19412231]
[-25.36093140 290.73809814]
[-16.04179192 302.51660156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 208]
[48 207]
[49 206]
[50 205]
[52 204]
[53 203]
[55 201]
[56 200]
[59 199]
[60 198]
[61 197]
[62 196]
[63 195]
[65 193]
[66 187]
[67 186]
[68 185]
[69 184]
[70 183]
[75 177]
[76 176]
[77 175]
[79 173]
[80 172]
[82 171]
[83 170]
[84 169]
[85 162]
[86 161]
[87 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
