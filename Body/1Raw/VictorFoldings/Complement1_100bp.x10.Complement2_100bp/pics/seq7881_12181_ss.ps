%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[71.98233032 966.40185547]
[57.01197433 965.32714844]
[42.18405151 963.00354004]
[27.60257530 959.44726562]
[13.36981964 954.68328857]
[-0.41437769 948.74511719]
[-13.65332985 941.67425537]
[-26.25417328 933.52038574]
[-38.12852097 924.34075928]
[-49.19308472 914.19964600]
[-59.37024689 903.16821289]
[-68.58862305 891.32391357]
[-76.78355408 878.74975586]
[-83.89756012 865.53393555]
[-89.88073730 851.76916504]
[-94.69111633 837.55206299]
[-98.29495239 822.98223877]
[-100.66696930 808.16198730]
[-101.79053497 793.19525146]
[-101.65776062 778.18695068]
[-100.26958466 763.24237061]
[-97.63573456 748.46643066]
[-93.77469635 733.96264648]
[-88.71353912 719.83288574]
[-82.48777771 706.17614746]
[-75.14107513 693.08825684]
[-66.72496796 680.66101074]
[-57.29848099 668.98162842]
[-46.92774200 658.13201904]
[-35.68549728 648.18823242]
[-23.65060234 639.22009277]
[-10.90747452 631.29046631]
[2.45450211 624.45495605]
[16.34160042 618.76153564]
[30.65641022 614.25012207]
[45.29852295 610.95239258]
[60.16523361 608.89147949]
[75.15225983 608.08178711]
[75.59886932 593.08843994]
[76.04547119 578.09509277]
[73.10251617 571.31561279]
[76.61199188 562.88226318]
[77.28177643 547.89721680]
[77.95156097 532.91223145]
[78.62135315 517.92718506]
[71.46006775 504.86709595]
[79.80586243 491.42617798]
[80.47564697 476.44113159]
[65.67770386 471.51510620]
[52.85287094 462.61444092]
[43.04300690 450.45227051]
[37.04784012 436.00704956]
[35.35977936 420.44393921]
[38.12347031 405.02066040]
[45.12345123 390.98602295]
[55.80091858 379.47872925]
[69.29833984 371.43493652]
[84.52830505 367.51226807]
[84.97490692 352.51892090]
[85.42151642 337.52557373]
[85.86811829 322.53222656]
[86.31472778 307.53887939]
[86.76132965 292.54553223]
[73.10997772 286.49822998]
[62.78594589 275.65573120]
[57.38501740 261.64877319]
[57.75926208 246.60060120]
[63.88278198 232.80508423]
[74.85091400 222.37709045]
[89.01374054 216.92823792]
[89.46034241 201.93489075]
[89.90695190 186.94154358]
[90.35356140 171.94818115]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[82.00934601 97.92842102]
[67.04791260 99.00336456]
[54.82253265 90.31198120]
[50.92248535 75.82786560]
[57.13081741 62.17295837]
[70.60916138 55.59009171]
[85.19541168 59.08887100]
[94.22146606 71.07146454]
[96.22547913 56.20594025]
[94.27063751 47.28313446]
[98.37158966 41.13463593]
[100.59670258 26.30059433]
[102.82182312 11.46654987]
[97.21726227 -3.32870054]
[106.75693512 -14.76740074]
[108.98204803 -29.60144424]
[111.20716858 -44.43548965]
[105.60260773 -59.23073959]
[115.14228058 -70.66944122]
[101.19898987 -76.40076447]
[89.03287506 -85.30297089]
[79.35126495 -96.85847473]
[72.71703339 -110.39547729]
[69.51587677 -125.12694550]
[69.93391418 -140.19641113]
[73.94684601 -154.72773743]
[81.32135773 -167.87612915]
[91.62870026 -178.87713623]
[104.26963043 -187.09115601]
[118.50921631 -192.04067993]
[133.51959229 -193.43791199]
[148.42805481 -191.20162964]
[162.36787415 -185.46185303]
[174.52857971 -176.55227661]
[184.20318604 -164.99089050]
[190.82920837 -151.44987488]
[194.02143860 -136.71647644]
[193.59425354 -121.64726257]
[189.57252502 -107.11836243]
[182.19004822 -93.97444916]
[171.87602234 -82.97969818]
[159.23011780 -74.77333069]
[144.98753357 -69.83245087]
[129.97631836 -68.44432068]
[135.74003601 -54.71010208]
[126.04121399 -42.21037292]
[123.81609344 -27.37632751]
[121.59098053 -12.54228401]
[127.35469818 1.19193649]
[117.65586853 13.69166756]
[115.43074799 28.52571106]
[113.20563507 43.35975647]
[111.09101105 58.20995331]
[109.08699036 73.07547760]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[105.34690857 172.39479065]
[104.90029907 187.38813782]
[104.45369720 202.38148499]
[104.00708771 217.37484741]
[117.82048798 223.65702820]
[128.14848328 234.71936035]
[133.44001770 248.85490417]
[132.91792297 263.89868164]
[126.69286346 277.55932617]
[115.74177551 287.76809692]
[101.75468445 292.99212646]
[101.30807495 307.98547363]
[100.86147308 322.97882080]
[100.41486359 337.97216797]
[99.96826172 352.96551514]
[99.52165222 367.95889282]
[113.33084869 372.23046875]
[125.55121613 379.92800903]
[135.35131836 390.52032471]
[142.06628418 403.27960205]
[145.24295044 417.33120728]
[144.67045593 431.71392822]
[140.39419556 445.44543457]
[132.71229553 457.58956909]
[122.15483856 467.32012939]
[109.44730377 473.97695923]
[95.46068573 477.11093140]
[94.79090118 492.09597778]
[101.90427399 506.22787476]
[93.60639191 518.59692383]
[92.93659973 533.58197021]
[92.26681519 548.56701660]
[91.59703064 563.55206299]
[91.03881836 578.54168701]
[90.59221649 593.53503418]
[90.14560699 608.52838135]
[105.05786896 610.22869873]
[119.77555084 613.17083740]
[134.19541931 617.33422852]
[148.21632385 622.68969727]
[161.73992920 629.19958496]
[174.67135620 636.81829834]
[186.91990662 645.49237061]
[198.39967346 655.16094971]
[209.03012085 665.75622559]
[218.73669434 677.20391846]
[227.45129395 689.42364502]
[235.11280823 702.32977295]
[241.66748047 715.83172607]
[247.06933594 729.83477783]
[251.28050232 744.24078369]
[254.27142334 758.94866943]
[256.02111816 773.85522461]
[256.51730347 788.85589600]
[255.75654602 803.84545898]
[253.74414062 818.71881104]
[250.49420166 833.37164307]
[246.02954102 847.70104980]
[240.38148499 861.60668945]
[233.58961487 874.99090576]
[225.70161438 887.75982666]
[216.77278137 899.82391357]
[206.86575317 911.09857178]
[196.05003357 921.50463867]
[184.40148926 930.96923828]
[172.00180054 939.42584229]
[158.93797302 946.81524658]
[145.30163574 953.08551025]
[131.18841553 958.19274902]
[116.69734955 962.10113525]
[101.93004608 964.78320312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 175]
[39 174]
[40 173]
[42 172]
[43 171]
[44 170]
[45 169]
[47 167]
[48 166]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[79 134]
[87 133]
[88 132]
[90 131]
[91 130]
[92 129]
[94 127]
[95 126]
[96 125]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
