%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[148.30793762 318.32019043]
[150.98812866 303.54953003]
[155.08139038 289.10653687]
[160.54951477 275.12600708]
[167.34144592 261.73849487]
[175.39375305 249.06901550]
[184.63127136 237.23585510]
[194.96774292 226.34948730]
[185.13716125 215.01989746]
[175.30657959 203.69030762]
[170.69050598 202.46524048]
[166.79498291 198.32736206]
[165.35810852 191.87393188]
[155.86920166 180.25666809]
[146.38031006 168.63940430]
[136.89141846 157.02214050]
[127.40251160 145.40487671]
[117.91361237 133.78761292]
[108.42471313 122.17034149]
[98.93582153 110.55307770]
[89.02116394 99.29698181]
[78.69449615 88.41764832]
[68.36782837 77.53831482]
[58.04116058 66.65898132]
[47.31678009 56.17148209]
[36.20954895 46.09034348]
[25.10231400 36.00920486]
[7.02022362 32.52788925]
[2.31963873 15.62015724]
[-8.93645668 5.70550632]
[-20.19255257 -4.20914507]
[-31.44864845 -14.12379646]
[-42.70474243 -24.03844643]
[-53.39302444 -13.50518513]
[-64.79768372 -3.75210500]
[-76.86191559 5.17220306]
[-89.52561188 13.22327900]
[-102.72567749 20.36101151]
[-116.39634705 26.54984093]
[-130.46952820 31.75893402]
[-144.87509155 35.96234131]
[-159.54127502 39.13911438]
[-174.39501953 41.27343750]
[-189.36230469 42.35466766]
[-204.36859131 42.37742615]
[-219.33909607 41.34159088]
[-234.19923401 39.25233078]
[-248.87498474 36.12005234]
[-263.29324341 31.96035576]
[-277.38214111 26.79396820]
[-291.07153320 20.64662933]
[-304.29318237 13.54896450]
[-316.98123169 5.53633404]
[-329.07247925 -3.35134339]
[-340.50665283 -13.06978989]
[-351.22683716 -23.57058716]
[-361.17959595 -34.80141830]
[-370.31533813 -46.70633698]
[-378.58856201 -59.22602844]
[-385.95803833 -72.29811859]
[-392.38708496 -85.85749054]
[-397.84362793 -99.83657837]
[-402.30050659 -114.16574860]
[-405.73553467 -128.77360535]
[-408.13156128 -143.58738708]
[-409.47665405 -158.53327942]
[-409.76412964 -173.53681946]
[-408.99255371 -188.52326965]
[-407.16577148 -203.41795349]
[-404.29287720 -218.14668274]
[-400.38818359 -232.63606262]
[-395.47116089 -246.81393433]
[-389.56625366 -260.60961914]
[-382.70294189 -273.95443726]
[-374.91540527 -286.78186035]
[-366.24240112 -299.02801514]
[-356.72717285 -310.63186646]
[-346.41714478 -321.53561401]
[-335.36361694 -331.68493652]
[-323.62173462 -341.02929688]
[-311.24993896 -349.52209473]
[-298.30987549 -357.12103271]
[-284.86602783 -363.78826904]
[-270.98538208 -369.49057007]
[-256.73706055 -374.19955444]
[-242.19207764 -377.89172363]
[-227.42288208 -380.54870605]
[-212.50303650 -382.15725708]
[-197.50691223 -382.70938110]
[-182.50918579 -382.20230103]
[-167.58457947 -380.63858032]
[-152.80746460 -378.02593994]
[-138.25144958 -374.37747192]
[-123.98905945 -369.71130371]
[-110.09133911 -364.05072021]
[-96.62753296 -357.42388916]
[-83.66471863 -349.86383057]
[-71.26747131 -341.40823364]
[-59.49756241 -332.09921265]
[-48.41362381 -321.98312378]
[-38.07087708 -311.11038208]
[-28.52084923 -299.53515625]
[-19.81111908 -287.31509399]
[-11.98507786 -274.51110840]
[-5.08171511 -261.18698120]
[0.86457628 -247.40908813]
[5.82417202 -233.24604797]
[9.77236366 -218.76846313]
[12.68948174 -204.04843140]
[14.56099129 -189.15928650]
[15.37757111 -174.17523193]
[15.13515091 -159.17089844]
[13.83493996 -144.22103882]
[11.48341465 -129.40013123]
[8.09229088 -114.78201294]
[3.67846298 -100.43952179]
[-1.73607910 -86.44410706]
[-8.12436008 -72.86549377]
[-15.45455360 -59.77132416]
[-23.69014168 -47.22684479]
[-32.79009247 -35.29454422]
[-21.53399658 -25.37989235]
[-10.27790165 -15.46524048]
[0.97819418 -5.55058956]
[12.23429012 4.36406183]
[24.32240295 3.91231346]
[33.78118515 12.08025169]
[35.18345261 24.90196991]
[46.29068756 34.98310852]
[57.39791870 45.06424713]
[59.29092026 30.18417549]
[72.02482605 22.25653076]
[86.21268463 27.12528038]
[91.39572906 41.20136261]
[83.75321198 54.10840988]
[68.92049408 56.33231354]
[79.24716187 67.21164703]
[89.57382965 78.09098053]
[99.90049744 88.97031403]
[102.89498901 74.27225494]
[116.18325806 67.31367493]
[129.96969604 73.22418213]
[134.09144592 87.64677429]
[125.51012421 99.94964600]
[110.55307770 101.06418610]
[120.04197693 112.68144989]
[129.53088379 124.29870605]
[139.01977539 135.91596985]
[148.50866699 147.53323364]
[157.99757385 159.15049744]
[167.48646545 170.76776123]
[176.97537231 182.38502502]
[186.63618469 193.85972595]
[196.46676636 205.18931580]
[206.29734802 216.51890564]
[218.53216553 207.82037354]
[231.54940796 200.34327698]
[245.22753906 194.15747070]
[259.43884277 189.32066345]
[274.05059814 185.87805176]
[288.92642212 183.86177063]
[303.92739868 183.29064941]
[318.91348267 184.17001343]
[333.74472046 186.49163818]
[348.28262329 190.23387146]
[362.39151001 195.36177063]
[375.93957520 201.82743835]
[388.80038452 209.57052612]
[400.85382080 218.51872253]
[411.98736572 228.58848572]
[422.09701538 239.68579102]
[431.08843994 251.70701599]
[438.87765503 264.53991699]
[445.39190674 278.06472778]
[450.57043457 292.15509033]
[454.36483765 306.67947388]
[456.73971558 321.50228882]
[457.67288208 336.48510742]
[457.15560913 351.48803711]
[455.19274902 366.37100220]
[451.80261230 380.99502563]
[447.01687622 395.22360229]
[440.88021851 408.92385864]
[433.44992065 421.96786499]
[424.79534912 434.23382568]
[414.99734497 445.60723877]
[404.14736938 455.98190308]
[392.34674072 465.26095581]
[379.70565796 473.35775757]
[366.34210205 480.19668579]
[352.38085938 485.71389771]
[337.95233154 489.85787964]
[323.19119263 492.58996582]
[308.23526001 493.88461304]
[293.22421265 493.72973633]
[278.29818726 492.12680054]
[263.59655762 489.09075928]
[249.25659180 484.64996338]
[235.41217041 478.84588623]
[222.19256592 471.73269653]
[209.72119141 463.37680054]
[198.11451721 453.85629272]
[187.48091125 443.25997925]
[177.91964722 431.68682861]
[169.52000427 419.24490356]
[162.36039734 406.05035400]
[156.50769043 392.22640991]
[152.01654053 377.90213013]
[148.92884827 363.21127319]
[147.27346802 348.29098511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 155]
[9 154]
[10 153]
[13 152]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[20 145]
[21 139]
[22 138]
[23 137]
[24 136]
[25 130]
[26 129]
[27 128]
[29 125]
[30 124]
[31 123]
[32 122]
[33 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
