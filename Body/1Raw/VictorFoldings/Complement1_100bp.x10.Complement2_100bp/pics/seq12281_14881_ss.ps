%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[162.83552551 455.94555664]
[161.53373718 440.99063110]
[161.65940857 425.97967529]
[163.21142578 411.04861450]
[166.17570496 396.33273315]
[170.52542114 381.96524048]
[176.22116089 368.07626343]
[183.21136475 354.79162598]
[191.43270874 342.23159790]
[200.81076050 330.50994873]
[211.26055908 319.73284912]
[222.68748474 309.99783325]
[214.08892822 297.70700073]
[205.49035645 285.41616821]
[199.08033752 281.73739624]
[196.85687256 272.87771606]
[183.31201172 266.68206787]
[181.97564697 250.91741943]
[173.56103516 238.49992371]
[165.14642334 226.08242798]
[156.73179626 213.66493225]
[143.18693542 207.46929932]
[141.85057068 191.70463562]
[133.43595886 179.28713989]
[131.59495544 194.17373657]
[121.44002533 205.21353149]
[106.75868225 208.28897095]
[93.02671814 202.25297546]
[85.36581421 189.35684204]
[86.63330078 174.41047668]
[96.35643005 162.98854065]
[110.90871429 159.35110474]
[124.86342621 164.85560608]
[117.98401642 151.52618408]
[111.10459900 138.19674683]
[104.22518921 124.86731720]
[97.34577942 111.53788757]
[96.50083160 126.51407623]
[90.05838013 140.06010437]
[78.97412109 150.16648865]
[64.89234161 155.33403015]
[49.90198898 154.79615784]
[36.22679138 148.63262939]
[25.89538574 137.75779724]
[20.44037056 123.78486633]
[20.67096901 108.78663635]
[26.55297089 94.98801422]
[37.21381760 84.43593597]
[51.07203293 78.69573975]
[66.07183838 78.61894989]
[79.98809814 84.21696472]
[90.75532532 94.65777588]
[86.78322601 80.19325256]
[82.81113434 65.72872925]
[78.83903503 51.26420212]
[74.86693573 36.79967880]
[66.52569580 49.26658249]
[51.83955383 52.31900024]
[39.22140503 44.20837021]
[35.89949417 29.58083153]
[43.77676773 16.81570053]
[58.34076309 13.22542381]
[71.24798584 20.86591911]
[68.58219147 6.10470104]
[65.91639709 -8.65651608]
[63.25059891 -23.41773415]
[52.35136414 -28.16570854]
[45.17090607 -37.48997498]
[43.40138245 -49.00356293]
[47.36806488 -59.82858658]
[55.97687912 -67.31554413]
[53.75175858 -82.14958954]
[51.52664185 -96.98362732]
[49.30152512 -111.81767273]
[37.49948883 -125.95250702]
[44.55467606 -142.02082825]
[42.10894775 -156.82009888]
[32.51597595 -145.28863525]
[17.59196854 -143.78065491]
[5.88607693 -153.15998840]
[4.10396814 -168.05375671]
[13.26651382 -179.93011475]
[28.12499237 -181.98573303]
[40.16730118 -173.04389954]
[39.05165100 -188.00234985]
[37.93600464 -202.96081543]
[36.82035446 -217.91926575]
[35.70470428 -232.87771606]
[34.58905792 -247.83616638]
[33.47340775 -262.79461670]
[32.35776138 -277.75308228]
[17.50993729 -280.39749146]
[3.78657269 -286.65209961]
[-7.94967413 -296.12371826]
[-16.96105194 -308.21691895]
[-22.68109894 -322.17156982]
[-24.75024605 -337.11041260]
[-23.03842735 -352.09442139]
[-17.65324783 -366.18167114]
[-8.93322563 -378.48663330]
[2.57349324 -388.23580933]
[16.14358521 -394.81634521]
[30.92402458 -397.81457520]
[45.98569870 -397.04205322]
[60.38181686 -392.54733276]
[73.20743561 -384.61294556]
[83.65631104 -373.73767090]
[91.07163239 -360.60513306]
[94.98725128 -346.04083252]
[95.15704346 -330.96029663]
[91.57032776 -316.31155396]
[84.45257568 -303.01538086]
[74.25120544 -291.90759277]
[61.60748291 -283.68643188]
[47.31621170 -278.86871338]
[48.43186188 -263.91027832]
[49.54751205 -248.95181274]
[50.66315842 -233.99336243]
[51.77880859 -219.03491211]
[52.89445496 -204.07646179]
[54.01010513 -189.11801147]
[55.12575531 -174.15954590]
[56.90821838 -159.26583862]
[59.35394669 -144.46656799]
[69.00177002 -137.16957092]
[71.16046906 -124.86007690]
[64.13556671 -114.04279327]
[66.36068726 -99.20874786]
[68.58580780 -84.37470245]
[70.81092072 -69.54065704]
[86.16056824 -59.56548691]
[89.39989471 -41.22373962]
[78.01181793 -26.08352852]
[80.67761230 -11.32231140]
[83.34340668 3.43890572]
[86.00920105 18.20012283]
[89.33146667 32.82758331]
[93.30355835 47.29210663]
[97.27565765 61.75662994]
[101.24774933 76.22115326]
[105.21984863 90.68567657]
[110.67520905 104.65847778]
[117.55461884 117.98790741]
[124.43402863 131.31733704]
[131.31344604 144.64675903]
[138.19285583 157.97619629]
[145.85345459 170.87251282]
[154.26806641 183.29000854]
[168.41481018 190.37382507]
[169.14929199 205.25030518]
[177.56391907 217.66780090]
[185.97853088 230.08529663]
[194.39314270 242.50279236]
[208.53988647 249.58660889]
[209.27436829 264.46310425]
[217.78120422 276.81759644]
[226.37976074 289.10842896]
[234.97833252 301.39926147]
[248.04058838 294.00183105]
[261.74688721 287.87957764]
[275.97308350 283.08789062]
[290.59033203 279.67022705]
[305.46627808 277.65750122]
[320.46618652 277.06796265]
[335.45422363 277.90695190]
[350.29461670 280.16683960]
[364.85299683 283.82717896]
[378.99752808 288.85482788]
[392.60009766 295.20425415]
[405.53747559 302.81796265]
[417.69256592 311.62695312]
[428.95526123 321.55151367]
[439.22354126 332.50170898]
[448.40444946 344.37841797]
[456.41479492 357.07403564]
[463.18206787 370.47363281]
[468.64498901 384.45581055]
[472.75402832 398.89395142]
[475.47204590 413.65734863]
[476.77438354 428.61221313]
[476.64926147 443.62319946]
[475.09777832 458.55429077]
[472.13403320 473.27029419]
[467.78485107 487.63793945]
[462.08959961 501.52713013]
[455.09988403 514.81201172]
[446.87899780 527.37231445]
[437.50137329 539.09436035]
[427.05197144 549.87182617]
[415.62539673 559.60723877]
[403.32513428 568.21240234]
[390.26260376 575.60937500]
[376.55609131 581.73114014]
[362.32971191 586.52227783]
[347.71234131 589.93939209]
[332.83633423 591.95159912]
[317.83639526 592.54058838]
[302.84838867 591.70104980]
[288.00808716 589.44061279]
[273.44982910 585.77972412]
[259.30548096 580.75158691]
[245.70317078 574.40167236]
[232.76603699 566.78747559]
[220.61126709 557.97802734]
[209.34895325 548.05310059]
[199.08105469 537.10247803]
[189.90060425 525.22546387]
[181.89070129 512.52954102]
[175.12391663 499.12973022]
[169.66152954 485.14733887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 158]
[13 157]
[14 156]
[16 155]
[18 153]
[19 152]
[20 151]
[21 150]
[23 148]
[24 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 142]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[63 136]
[64 135]
[65 134]
[66 133]
[71 130]
[72 129]
[73 128]
[74 127]
[76 124]
[77 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
