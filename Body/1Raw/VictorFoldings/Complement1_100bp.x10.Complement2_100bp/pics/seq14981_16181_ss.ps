%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[158.62821960 727.44683838]
[145.18708801 720.77923584]
[132.14468384 713.36187744]
[119.54282379 705.21850586]
[107.42185974 696.37524414]
[95.82061005 686.86041260]
[84.77625275 676.70446777]
[74.32415771 665.93994141]
[64.49780273 654.60131836]
[55.32867432 642.72491455]
[46.84614182 630.34881592]
[39.07737350 617.51269531]
[32.04725647 604.25750732]
[25.77831078 590.62591553]
[20.29061890 576.66143799]
[15.60175991 562.40887451]
[11.72675228 547.91381836]
[8.67800903 533.22277832]
[6.46529627 518.38281250]
[5.09570312 503.44140625]
[4.57361555 488.44647217]
[4.90070677 473.44598389]
[6.07592869 458.48803711]
[8.09551620 443.62054443]
[10.95300102 428.89111328]
[14.63922882 414.34695435]
[19.14239120 400.03463745]
[24.44806480 386.00000000]
[30.53925323 372.28799438]
[37.39644241 358.94256592]
[44.99766922 346.00650024]
[53.31858444 333.52114868]
[62.33253098 321.52658081]
[72.01063538 310.06115723]
[82.32189941 299.16165161]
[93.23328400 288.86297607]
[104.70984650 279.19812012]
[116.71481323 270.19799805]
[129.20974731 261.89151001]
[142.15460205 254.30520630]
[155.50791931 247.46340942]
[149.43408203 233.74815369]
[143.36024475 220.03288269]
[137.28640747 206.31761169]
[126.11868286 201.66914368]
[120.94622803 190.29243469]
[125.03842926 178.06063843]
[119.16946411 164.25646973]
[113.30050659 150.45228577]
[101.20030975 141.76698303]
[102.92127228 126.03965759]
[97.05230713 112.23548126]
[90.87654114 98.56581116]
[77.93713379 89.46183014]
[79.41757202 74.64097595]
[72.93807983 61.11263275]
[66.45858002 47.58428574]
[59.97908783 34.05594254]
[47.03968430 24.95196152]
[48.52012253 10.13111305]
[42.04062653 -3.39723253]
[35.56113052 -16.92557716]
[22.62172890 -26.02955818]
[24.10216713 -40.85040665]
[17.62267113 -54.37875366]
[11.14317608 -67.90709686]
[4.66367960 -81.43544006]
[-9.61498642 -76.76910400]
[-24.38058662 -74.00648499]
[-39.38046265 -73.19486237]
[-54.35794830 -74.34811401]
[-69.05675507 -77.44651031]
[-83.22537231 -82.43704224]
[-96.62134552 -89.23430634]
[-109.01546478 -97.72198486]
[-120.19564819 -107.75485992]
[-129.97058105 -119.16124725]
[-138.17301941 -131.74597168]
[-144.66258240 -145.29368591]
[-149.32823181 -159.57257080]
[-152.09014893 -174.33830261]
[-152.90106201 -189.33821106]
[-151.74710083 -204.31564331]
[-148.64799500 -219.01431274]
[-143.65679932 -233.18267822]
[-136.85890198 -246.57833862]
[-128.37062073 -258.97204590]
[-118.33721924 -270.15176392]
[-106.93036652 -279.92614746]
[-94.34525299 -288.12799072]
[-80.79723358 -294.61691284]
[-66.51811981 -299.28189087]
[-51.75225830 -302.04309082]
[-36.75230408 -302.85330200]
[-21.77493095 -301.69860840]
[-7.07641840 -298.59881592]
[7.09172153 -293.60693359]
[20.48705292 -286.80841064]
[32.88036728 -278.31954956]
[44.05959320 -268.28558350]
[53.83344269 -256.87826538]
[62.03467178 -244.29278564]
[68.52294922 -230.74444580]
[73.18724823 -216.46511841]
[75.94775391 -201.69912720]
[76.75724030 -186.69912720]
[75.60184479 -171.72180176]
[72.50135040 -157.02343750]
[67.50879669 -142.85554504]
[60.70962524 -129.46054077]
[52.22016907 -117.06762695]
[42.18569946 -105.88887787]
[30.77791786 -96.11557007]
[18.19202614 -87.91493988]
[24.67152023 -74.38659668]
[31.15101624 -60.85824966]
[37.63051224 -47.32990265]
[50.10645676 -39.19356155]
[49.08947754 -23.40507317]
[55.56897354 -9.87672806]
[62.04846954 3.65161729]
[74.52441406 11.78795910]
[73.50743103 27.57644653]
[79.98693085 41.10478973]
[86.46642303 54.63313675]
[92.94592285 68.16148376]
[105.42186737 76.29782104]
[104.40488434 92.08631134]
[107.82390594 93.87031555]
[110.43996429 97.15270233]
[111.60150146 101.54108429]
[110.85648346 106.36651611]
[116.72544861 120.17069244]
[129.24542236 129.84336853]
[127.10468292 144.58332825]
[132.97364807 158.38751221]
[138.84260559 172.19168091]
[153.80824280 182.92066956]
[151.00167847 200.24378967]
[157.07551575 213.95904541]
[163.14935303 227.67431641]
[169.22319031 241.38958740]
[183.26385498 236.09988403]
[197.58129883 231.61302185]
[212.12965393 227.94335938]
[226.86231995 225.10263062]
[241.73211670 223.09997559]
[256.69137573 221.94178772]
[271.69223022 221.63175964]
[286.68655396 222.17092896]
[301.62640381 223.55752563]
[316.46386719 225.78712463]
[331.15139771 228.85260010]
[345.64199829 232.74409485]
[359.88922119 237.44918823]
[373.84744263 242.95277405]
[387.47192383 249.23722839]
[400.71905518 256.28244019]
[413.54638672 264.06579590]
[425.91281128 272.56240845]
[437.77874756 281.74505615]
[449.10617065 291.58432007]
[459.85876465 302.04864502]
[470.00213623 313.10458374]
[479.50378418 324.71664429]
[488.33325195 336.84765625]
[496.46224976 349.45880127]
[503.86474609 362.50961304]
[510.51705933 375.95834351]
[516.39782715 389.76187134]
[521.48822021 403.87600708]
[525.77203369 418.25555420]
[529.23535156 432.85437012]
[531.86724854 447.62579346]
[533.65924072 462.52243042]
[534.60559082 477.49661255]
[534.70324707 492.50030518]
[533.95190430 507.48553467]
[532.35394287 522.40423584]
[529.91455078 537.20867920]
[526.64154053 551.85131836]
[522.54528809 566.28540039]
[517.63903809 580.46459961]
[511.93841553 594.34350586]
[505.46173096 607.87768555]
[498.22973633 621.02374268]
[490.26556396 633.73962402]
[481.59475708 645.98455811]
[472.24505615 657.71929932]
[462.24645996 668.90631104]
[451.63098145 679.50976562]
[440.43258667 689.49560547]
[428.68719482 698.83190918]
[416.43240356 707.48876953]
[403.70745850 715.43847656]
[390.55316162 722.65551758]
[377.01162720 729.11676025]
[363.12625122 734.80157471]
[348.94146729 739.69171143]
[334.50274658 743.77148438]
[319.85635376 747.02789307]
[305.04916382 749.45043945]
[290.12866211 751.03137207]
[275.14257812 751.76568604]
[260.13897705 751.65093994]
[245.16590881 750.68756104]
[230.27131653 748.87860107]
[215.50291443 746.22991943]
[200.90802002 742.74993896]
[186.53338623 738.44976807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 142]
[42 141]
[43 140]
[44 139]
[47 137]
[48 136]
[49 135]
[51 133]
[52 132]
[53 128]
[55 126]
[56 125]
[57 124]
[58 123]
[60 121]
[61 120]
[62 119]
[64 117]
[65 116]
[66 115]
[67 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
