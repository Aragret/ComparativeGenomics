%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[115.28267670 479.54260254]
[105.63134766 468.05380249]
[96.69837189 455.99798584]
[88.51699066 443.41998291]
[81.11763763 430.36660767]
[74.52783203 416.88644409]
[68.77208710 403.02960205]
[63.87182617 388.84762573]
[59.84526825 374.39328003]
[56.70739746 359.72036743]
[54.46988297 344.88342285]
[53.14105606 329.93771362]
[52.72584915 314.93875122]
[53.22581863 299.94238281]
[54.63909531 285.00439453]
[56.96042633 270.18035889]
[60.18117142 255.52540588]
[64.28936005 241.09405518]
[69.26969147 226.94001770]
[75.10366058 213.11590576]
[81.76954651 199.67318726]
[89.24255371 186.66184998]
[97.49489594 174.13029480]
[106.49585724 162.12515259]
[116.21195984 150.69107056]
[126.60706329 139.87059021]
[116.44351196 128.83871460]
[102.12943268 124.72090149]
[98.46932220 109.32888031]
[93.41301727 107.93325043]
[89.49859619 103.80400848]
[88.17343140 97.81394196]
[78.34284973 86.48435211]
[68.51226807 75.15475464]
[58.68169022 63.82516479]
[54.52956009 62.55480576]
[51.32041168 60.26005554]
[49.26048660 57.36314011]
[48.39772034 54.30990601]
[48.62775040 51.51612091]
[39.48894882 39.62148666]
[30.35014534 27.72685623]
[21.21134377 15.83222294]
[12.07254124 3.93758988]
[2.93373847 -7.95704317]
[-6.20506382 -19.85167503]
[-21.62707329 -22.04242706]
[-30.72567368 -34.23546219]
[-28.54208755 -48.92448807]
[-37.68088913 -60.81912231]
[-46.81969070 -72.71375275]
[-59.53861618 -64.74044037]
[-72.95786285 -58.01225281]
[-86.95590973 -52.59012985]
[-101.40598297 -48.52317429]
[-116.17721558 -45.84821320]
[-131.13583374 -44.58947754]
[-146.14637756 -44.75836945]
[-161.07289124 -46.35335159]
[-175.78019714 -49.35998154]
[-190.13510132 -53.75103378]
[-204.00761414 -59.48674011]
[-217.27207947 -66.51515198]
[-229.80839539 -74.77262115]
[-241.50299072 -84.18437195]
[-252.25000000 -94.66515350]
[-261.95205688 -106.12005615]
[-270.52130127 -118.44533539]
[-277.88015747 -131.52937317]
[-283.96194458 -145.25367737]
[-288.71160889 -159.49395752]
[-292.08612061 -174.12124634]
[-294.05493164 -189.00306702]
[-294.60018921 -204.00463867]
[-293.71697998 -218.99012756]
[-291.41329956 -233.82379150]
[-287.70999146 -248.37130737]
[-282.64062500 -262.50094604]
[-276.25106812 -276.08468628]
[-268.59924316 -288.99957275]
[-259.75439453 -301.12860107]
[-249.79664612 -312.36193848]
[-238.81617737 -322.59786987]
[-226.91242981 -331.74368286]
[-214.19322205 -339.71652222]
[-200.77372742 -346.44421387]
[-186.77548218 -351.86584473]
[-172.32525635 -355.93225098]
[-157.55392456 -358.60668945]
[-142.59526062 -359.86486816]
[-127.58473206 -359.69543457]
[-112.65827179 -358.09991455]
[-97.95107269 -355.09274292]
[-83.59632874 -350.70117188]
[-69.72402954 -344.96496582]
[-56.45981598 -337.93606567]
[-43.92381287 -329.67813110]
[-32.22954941 -320.26596069]
[-21.48293304 -309.78479004]
[-11.78129101 -298.32952881]
[-3.21248341 -286.00393677]
[4.14588737 -272.91961670]
[10.22718048 -259.19509888]
[14.97632313 -244.95465088]
[18.35030365 -230.32723999]
[20.31856728 -215.44535828]
[20.86328888 -200.44375610]
[19.97953224 -185.45829773]
[17.67530441 -170.62471008]
[13.97147274 -156.07733154]
[8.90157986 -141.94789124]
[2.51154041 -128.36436462]
[-5.14077473 -115.44977570]
[-13.98606396 -103.32106018]
[-23.94421959 -92.08808136]
[-34.92506027 -81.85255432]
[-25.78625679 -69.95792389]
[-16.64745522 -58.06329346]
[-1.89170074 -56.38898087]
[7.54578781 -44.45631790]
[5.68956900 -28.99047852]
[14.82837105 -17.09584618]
[23.96717453 -5.20121241]
[33.10597610 6.69342041]
[42.24477768 18.58805275]
[51.38357925 30.48268700]
[60.52238464 42.37731934]
[70.01128387 53.99458313]
[79.84186554 65.32417297]
[89.67243958 76.65377045]
[99.50302124 87.98336029]
[109.50119781 99.16533661]
[124.54223633 104.07222748]
[127.47538757 118.67517090]
[137.63893127 129.70704651]
[149.27345276 120.23188019]
[161.46397400 111.48361969]
[174.16516113 103.49482727]
[187.32974243 96.29520416]
[200.90876770 89.91153717]
[214.85169983 84.36758423]
[229.10667419 79.68395996]
[243.62068176 75.87808990]
[258.33969116 72.96413422]
[273.20898438 70.95292664]
[288.17324829 69.85195923]
[303.17678833 69.66532135]
[318.16378784 70.39370728]
[333.07852173 72.03440857]
[347.86547852 74.58132172]
[362.46963501 78.02497864]
[376.83673096 82.35255432]
[390.91323853 87.54795837]
[404.64685059 93.59186554]
[417.98648071 100.46178436]
[430.88244629 108.13216400]
[443.28680420 116.57447052]
[455.15344238 125.75729370]
[466.43814087 135.64646912]
[477.09899902 146.20523071]
[487.09631348 157.39425659]
[496.39288330 169.17196655]
[504.95416260 181.49452209]
[512.74829102 194.31610107]
[519.74627686 207.58897400]
[525.92199707 221.26379395]
[531.25262451 235.28967285]
[535.71826172 249.61444092]
[539.30230713 264.18481445]
[541.99139404 278.94659424]
[543.77551270 293.84481812]
[544.64807129 308.82412720]
[544.60583496 323.82876587]
[543.64886475 338.80291748]
[541.78088379 353.69085693]
[539.00866699 368.43725586]
[535.34265137 382.98721313]
[530.79638672 397.28659058]
[525.38690186 411.28222656]
[519.13415527 424.92205811]
[512.06158447 438.15530396]
[504.19534302 450.93276978]
[495.56478882 463.20690918]
[486.20202637 474.93206787]
[476.14184570 486.06460571]
[465.42169189 496.56314087]
[454.08145142 506.38861084]
[442.16329956 515.50445557]
[429.71157837 523.87677002]
[416.77261353 531.47436523]
[403.39453125 538.26904297]
[389.62707520 544.23547363]
[375.52151489 549.35156250]
[361.13027954 553.59814453]
[346.50692749 556.95947266]
[331.70587158 559.42303467]
[316.78213501 560.97973633]
[301.79125977 561.62365723]
[286.78903198 561.35253906]
[271.83120728 560.16729736]
[256.97348022 558.07238770]
[242.27111816 555.07556152]
[227.77877808 551.18798828]
[213.55039978 546.42413330]
[199.63891602 540.80175781]
[186.09606934 534.34167480]
[172.97224426 527.06805420]
[160.31626892 519.00781250]
[148.17521667 510.19104004]
[136.59425354 500.65048218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 135]
[27 134]
[29 132]
[32 131]
[33 130]
[34 129]
[35 128]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[49 118]
[50 117]
[51 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
