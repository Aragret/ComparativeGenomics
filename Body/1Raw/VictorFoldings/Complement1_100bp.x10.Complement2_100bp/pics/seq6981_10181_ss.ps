%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[78.36293793 739.95721436]
[63.64500427 737.01977539]
[49.21116257 732.90753174]
[35.15502930 727.64715576]
[21.56776237 721.27276611]
[8.53748226 713.82574463]
[-3.85130477 705.35437012]
[-15.51825047 695.91357422]
[-26.38768768 685.56457520]
[-36.38912582 674.37451172]
[-45.45769882 662.41595459]
[-53.53459549 649.76647949]
[-60.56742859 636.50805664]
[-66.51058960 622.72668457]
[-71.32553864 608.51184082]
[-74.98104095 593.95562744]
[-77.45338440 579.15246582]
[-78.72655487 564.19830322]
[-78.79227448 549.19024658]
[-77.65012360 534.22558594]
[-75.30751801 519.40130615]
[-71.77964020 504.81365967]
[-67.08937073 490.55715942]
[-61.26713562 476.72430420]
[-54.35068893 463.40478516]
[-46.38488770 450.68502808]
[-37.42139816 438.64749146]
[-27.51834488 427.37026978]
[-16.73995972 416.92648315]
[-5.15614462 407.38385010]
[7.15797424 398.80432129]
[20.12253380 391.24346924]
[33.65345383 384.75033569]
[47.66297913 379.36706543]
[62.06024933 375.12857056]
[76.75189209 372.06231689]
[91.64263153 370.18820190]
[83.34474182 357.81912231]
[90.45811462 343.68722534]
[89.78833008 328.70217896]
[78.65740204 318.87170410]
[77.76467896 303.68429565]
[88.15124512 292.07580566]
[87.48146057 277.09075928]
[86.81167603 262.10574341]
[86.14189148 247.12069702]
[85.47210693 232.13565063]
[75.41464233 243.26432800]
[60.57460022 245.44908142]
[47.73664474 237.69105530]
[42.77011871 223.53712463]
[47.94564819 209.45828247]
[60.89705276 201.89117432]
[75.70312500 204.29539490]
[85.59540558 215.57347107]
[86.48822021 200.60006714]
[87.38103485 185.62666321]
[88.27385712 170.65325928]
[73.84229279 166.67202759]
[60.55364990 159.77767944]
[48.98855209 150.27143860]
[39.65231323 138.56866455]
[32.95287323 125.18070221]
[29.18294525 110.69250488]
[28.50725365 95.73712158]
[30.95532227 80.96799469]
[36.42018509 67.03044128]
[44.66306305 54.53343582]
[55.32380295 44.02302170]
[67.93659210 35.95842743]
[81.95034027 30.69202995]
[96.75273895 28.45392990]
[97.64555359 13.48052311]
[98.53837585 -1.49288213]
[99.43119049 -16.46628761]
[85.37632751 -22.02671623]
[73.74403381 -31.64608574]
[65.66547394 -44.37264252]
[61.92118835 -58.95329285]
[62.86566544 -73.95697784]
[68.39385986 -87.91513062]
[77.95267487 -99.46541595]
[90.59629822 -107.48471069]
[105.07975006 -111.19827271]
[105.97256470 -126.17167664]
[99.07038879 -140.40791321]
[107.55150604 -152.65208435]
[100.64933014 -166.88832092]
[109.13044739 -179.13250732]
[110.02326202 -194.10591125]
[110.13493347 -209.10549927]
[109.46514893 -224.09053040]
[108.79536438 -239.07557678]
[108.12557983 -254.06060791]
[93.49269104 -257.85137939]
[80.62812042 -265.78826904]
[70.67578125 -277.16555786]
[64.52063751 -290.97155762]
[62.70998001 -305.97863770]
[65.40483093 -320.85241699]
[72.36554718 -334.27032471]
[82.97320557 -345.03921509]
[96.28456879 -352.20153809]
[111.11600494 -355.12045288]
[126.14870453 -353.53637695]
[140.04597473 -347.59017944]
[151.57208252 -337.81060791]
[159.70213318 -325.06723022]
[163.71321106 -310.49319458]
[163.24864197 -295.38439941]
[158.34974670 -281.08432007]
[149.45213318 -268.86450195]
[137.34695435 -259.81152344]
[123.11061859 -254.73039246]
[123.78040314 -239.74536133]
[124.45018768 -224.76031494]
[125.11997223 -209.77528381]
[135.17742920 -220.90396118]
[150.01747131 -223.08869934]
[162.85543823 -215.33067322]
[167.82196045 -201.17675781]
[162.64642334 -187.09790039]
[149.69502258 -179.53080750]
[134.88894653 -181.93501282]
[124.99667358 -193.21308899]
[124.10385895 -178.23968506]
[131.06990051 -165.07444763]
[122.52491760 -151.75927734]
[129.49095154 -138.59403992]
[120.94596863 -125.27886200]
[120.05315399 -110.30545807]
[133.99270630 -104.89711761]
[145.59379578 -95.43219757]
[153.71234131 -82.82786560]
[157.54270935 -68.31169128]
[156.69758606 -53.30208206]
[151.24719238 -39.26968002]
[141.71357727 -27.59328270]
[129.02061462 -19.42434883]
[114.40459442 -15.57347202]
[113.51177979 -0.60006630]
[112.61896515 14.37333965]
[111.72614288 29.34674454]
[126.15770721 33.32797241]
[139.44635010 40.22232437]
[151.01144409 49.72856522]
[160.34768677 61.43133545]
[167.04713440 74.81929779]
[170.81706238 89.30749512]
[171.49275208 104.26287842]
[169.04467773 119.03200531]
[163.57981873 132.96955872]
[155.33692932 145.46656799]
[144.67619324 155.97697449]
[132.06341553 164.04156494]
[118.04965973 169.30796814]
[103.24726105 171.54606628]
[102.35444641 186.51947021]
[101.46162415 201.49288940]
[100.56880951 216.46629333]
[100.45714569 231.46586609]
[101.12693024 246.45091248]
[101.79671478 261.43594360]
[102.46649933 276.42098999]
[103.13628387 291.40603638]
[114.51708984 302.04159546]
[114.98287964 317.24807739]
[104.77336884 328.03240967]
[105.44315338 343.01742554]
[113.78894806 356.45834351]
[106.62767029 369.51843262]
[121.62622833 370.05657959]
[136.53283691 371.79986572]
[151.25083923 374.73703003]
[165.68476868 378.84893799]
[179.74102783 384.10900879]
[193.32843018 390.48306274]
[206.35887146 397.92977905]
[218.74784851 406.40090942]
[230.41500854 415.84143066]
[241.28466797 426.19018555]
[251.28636169 437.38003540]
[260.35519409 449.33840942]
[268.43237305 461.98773193]
[275.46548462 475.24600220]
[281.40896606 489.02719116]
[286.22421265 503.24197388]
[289.88003540 517.79809570]
[292.35272217 532.60119629]
[293.62622070 547.55529785]
[293.69226074 562.56335449]
[292.55044556 577.52807617]
[290.20816040 592.35235596]
[286.68060303 606.94012451]
[281.99066162 621.19671631]
[276.16873169 635.02972412]
[269.25256348 648.34936523]
[261.28704834 661.06933594]
[252.32382202 673.10705566]
[242.42102051 684.38452148]
[231.64286804 694.82849121]
[220.05924988 704.37139893]
[207.74533081 712.95123291]
[194.78092957 720.51232910]
[181.25015259 727.00579834]
[167.24075317 732.38934326]
[152.84356689 736.62817383]
[138.15199280 739.69476318]
[123.26129913 741.56915283]
[108.26806641 742.23931885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 171]
[39 169]
[40 168]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[55 160]
[56 159]
[57 158]
[58 157]
[72 143]
[73 142]
[74 141]
[75 140]
[84 131]
[85 130]
[87 128]
[89 126]
[90 125]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
