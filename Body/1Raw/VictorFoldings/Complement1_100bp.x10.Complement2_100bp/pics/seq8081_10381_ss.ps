%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[162.18759155 520.96893311]
[152.90589905 509.17935181]
[144.36758423 496.84075928]
[136.60504150 483.99993896]
[129.64770508 470.70562744]
[123.52199554 457.00820923]
[118.25112152 442.95965576]
[113.85509491 428.61328125]
[110.35058594 414.02349854]
[107.75087738 399.24563599]
[106.06584930 384.33575439]
[105.30188751 369.35043335]
[105.46188354 354.34649658]
[106.54523468 339.38085938]
[108.54782867 324.51031494]
[111.46207428 309.79125977]
[115.27691650 295.27951050]
[119.97788239 281.03015137]
[125.54713440 267.09719849]
[131.96356201 253.53352356]
[139.20280457 240.39057922]
[147.23741150 227.71821594]
[156.03689575 215.56451416]
[165.56790161 203.97555542]
[175.79425049 192.99533081]
[165.46757507 182.11599731]
[155.14091492 171.23666382]
[144.81423950 160.35733032]
[134.48756409 149.47799683]
[129.82138062 148.46026611]
[125.74499512 144.50045776]
[124.02138519 138.11761475]
[114.02321625 126.93564606]
[104.02503967 115.75366974]
[87.95995331 110.92778015]
[84.70897675 94.47154999]
[74.46358490 83.51564026]
[64.13691711 72.63630676]
[53.81024933 61.75697327]
[43.48358154 50.87763596]
[33.15691376 39.99830246]
[22.83024597 29.11896896]
[7.71781301 24.43655777]
[4.56757021 9.87890625]
[-5.75909853 -1.00042784]
[-17.51603508 8.33081341]
[-30.05166817 16.58645058]
[-43.26788712 23.70186996]
[-57.06125259 29.62138367]
[-71.32381439 34.29866028]
[-85.94394684 37.69709778]
[-100.80722046 39.79009628]
[-115.79731750 40.56127167]
[-130.79690552 40.00459290]
[-145.68859863 38.12441254]
[-160.35585022 34.93545151]
[-174.68385315 30.46266174]
[-188.56048584 24.74105263]
[-201.87713623 17.81540489]
[-214.52957153 9.73992252]
[-226.41877747 0.57780677]
[-237.45170593 -9.59923458]
[-247.54199219 -20.71155167]
[-256.61068726 -32.67217255]
[-264.58679199 -45.38748550]
[-271.40789795 -58.75798035]
[-277.02062988 -72.67900848]
[-281.38104248 -87.04161835]
[-284.45498657 -101.73339081]
[-286.21844482 -116.63935852]
[-286.65759277 -131.64285278]
[-285.76901245 -146.62644958]
[-283.55963135 -161.47286987]
[-280.04678345 -176.06593323]
[-275.25790405 -190.29141235]
[-269.23049927 -204.03797913]
[-262.01177979 -217.19804382]
[-253.65818787 -229.66862488]
[-244.23512268 -241.35209656]
[-233.81634521 -252.15702820]
[-222.48338318 -261.99887085]
[-210.32493591 -270.80056763]
[-197.43617249 -278.49322510]
[-183.91795349 -285.01669312]
[-169.87608337 -290.31988525]
[-155.42047119 -294.36126709]
[-140.66424561 -297.10922241]
[-125.72289276 -298.54229736]
[-110.71335602 -298.64920044]
[-95.75311279 -297.42913818]
[-80.95923615 -294.89166260]
[-66.44751740 -291.05661011]
[-52.33152771 -285.95401001]
[-38.72175598 -279.62377930]
[-25.72471237 -272.11547852]
[-13.44211960 -263.48788452]
[-1.97010660 -253.80848694]
[8.60153961 -243.15307617]
[18.19008064 -231.60502625]
[26.72047234 -219.25471497]
[34.12594986 -206.19882202]
[40.34855652 -192.53950500]
[45.33959198 -178.38368225]
[49.05998993 -163.84214783]
[51.48063278 -149.02870178]
[52.58258057 -134.05929565]
[52.35720062 -119.05106354]
[50.80626678 -104.12149048]
[47.94190979 -89.38741302]
[43.78655243 -74.96414185]
[38.37271118 -60.96457672]
[31.74276352 -47.49826813]
[23.94859505 -34.67061996]
[15.05120659 -22.58202553]
[5.12023592 -11.32709599]
[15.44690418 -0.44776204]
[29.82070351 3.45648527]
[33.70957947 18.79230118]
[44.03624725 29.67163467]
[54.36291504 40.55096817]
[64.68958282 51.43030167]
[75.01625061 62.30963898]
[85.34292603 73.18897247]
[92.22774506 75.87616730]
[95.74085999 84.30800629]
[107.32773590 85.48506165]
[115.15507507 94.10910034]
[115.20701599 105.75550079]
[125.20518494 116.93746948]
[135.20335388 128.11944580]
[145.36691284 139.15132141]
[155.69357300 150.03065491]
[166.02024841 160.90998840]
[176.34690857 171.78932190]
[186.67358398 182.66865540]
[198.17156982 173.02813721]
[210.24124146 164.11372375]
[222.83679199 155.95924377]
[235.91046143 148.59561157]
[249.41264343 142.05079651]
[263.29211426 136.34959412]
[277.49624634 131.51364136]
[291.97113037 127.56127930]
[306.66189575 124.50750732]
[321.51278687 122.36390686]
[336.46743774 121.13860321]
[351.46917725 120.83625793]
[366.46109009 121.45800781]
[381.38629150 123.00148773]
[396.18814087 125.46086121]
[410.81051636 128.82678223]
[425.19796753 133.08650208]
[439.29589844 138.22383118]
[453.05081177 144.21931458]
[466.41055298 151.05018616]
[479.32446289 158.69055176]
[491.74349976 167.11140442]
[503.62060547 176.28082275]
[514.91070557 186.16401672]
[525.57092285 196.72349548]
[535.56091309 207.91920471]
[544.84271240 219.70867920]
[553.38116455 232.04718018]
[561.14385986 244.88792419]
[568.10131836 258.18218994]
[574.22717285 271.87954712]
[579.49816895 285.92803955]
[583.89434814 300.27438354]
[587.39898682 314.86413574]
[589.99884033 329.64196777]
[591.68402100 344.55181885]
[592.44812012 359.53713989]
[592.28826904 374.54107666]
[591.20507812 389.50671387]
[589.20263672 404.37728882]
[586.28851318 419.09637451]
[582.47381592 433.60815430]
[577.77301025 447.85757446]
[572.20385742 461.79055786]
[565.78759766 475.35430908]
[558.54846191 488.49731445]
[550.51397705 501.16976929]
[541.71459961 513.32354736]
[532.18371582 524.91259766]
[521.95751953 535.89294434]
[511.07467651 546.22290039]
[499.57659912 555.86328125]
[487.50683594 564.77758789]
[474.91119385 572.93194580]
[461.83746338 580.29547119]
[448.33523560 586.84014893]
[434.45568848 592.54119873]
[420.25152588 597.37701416]
[405.77658081 601.32922363]
[391.08581543 604.38287354]
[376.23489380 606.52630615]
[361.28021240 607.75146484]
[346.27847290 608.05364990]
[331.28659058 607.43176270]
[316.36141968 605.88812256]
[301.55957031 603.42864990]
[286.93722534 600.06256104]
[272.54980469 595.80273438]
[258.45193481 590.66522217]
[244.69708252 584.66961670]
[231.33740234 577.83862305]
[218.42358398 570.19812012]
[206.00462341 561.77716064]
[194.12760925 552.60760498]
[182.83761597 542.72430420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[32 130]
[33 129]
[34 128]
[36 125]
[37 123]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[44 116]
[45 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
