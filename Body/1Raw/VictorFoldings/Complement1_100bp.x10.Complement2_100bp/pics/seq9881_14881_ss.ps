%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[133.42828369 539.22686768]
[140.21846008 525.70837402]
[150.85516357 514.95129395]
[164.29634094 508.00939941]
[161.85061646 493.21011353]
[159.40489197 478.41085815]
[156.95915222 463.61157227]
[154.51342773 448.81231689]
[152.06770325 434.01303101]
[149.62197876 419.21377563]
[147.17625427 404.41448975]
[132.82437134 403.25323486]
[119.16046143 398.68215942]
[106.98290253 390.96353149]
[97.00436401 380.54376221]
[89.81013489 368.02743530]
[85.82374573 354.14227295]
[85.28205872 339.69686890]
[88.22119904 325.53363037]
[94.47418213 312.47952271]
[103.68040466 301.29788208]
[115.30640411 292.64373779]
[128.67680359 287.02551270]
[119.13713074 275.58682251]
[124.74169159 260.79156494]
[122.51657867 245.95751953]
[120.29145813 231.12347412]
[117.84573364 216.32420349]
[115.17993927 201.56298828]
[112.29466248 186.84310913]
[109.19055176 172.16780090]
[106.08644104 157.49249268]
[102.98233032 142.81719971]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[81.63254547 61.16921616]
[76.80654907 46.96675873]
[71.98055267 32.76430511]
[67.15454865 18.56184769]
[62.32855606 4.35939264]
[57.50255585 -9.84306240]
[52.67655945 -24.04551888]
[47.11733246 -37.97731781]
[40.83997345 -51.60063171]
[34.56261063 -65.22394562]
[28.18400764 -78.80015564]
[21.70451164 -92.32849884]
[15.22501564 -105.85684967]
[8.74551964 -119.38519287]
[2.75267243 -105.63434601]
[-11.15720749 -100.02050018]
[-25.01590919 -105.75952148]
[-30.88453865 -119.56384277]
[-25.40127945 -133.52571106]
[-11.70719051 -139.64714050]
[2.35243297 -134.42214966]
[-2.89428520 -148.47462463]
[-8.14100361 -162.52708435]
[-13.38772202 -176.57955933]
[-19.46155548 -190.29483032]
[-26.34096718 -203.62425232]
[-33.22037888 -216.95368958]
[-40.09979248 -230.28311157]
[-46.97920609 -243.61254883]
[-53.85861969 -256.94198608]
[-68.05540466 -252.01936340]
[-82.80825806 -249.16735840]
[-97.81684113 -248.44401550]
[-112.77559662 -249.86405945]
[-127.37997437 -253.39859009]
[-141.33265686 -258.97564697]
[-154.34957886 -266.48168945]
[-166.16572571 -275.76388550]
[-176.54055786 -286.63327026]
[-185.26284790 -298.86856079]
[-192.15501404 -312.22067261]
[-197.07673645 -326.41775513]
[-199.92782593 -341.17080688]
[-200.65023804 -356.17941284]
[-199.22926331 -371.13809204]
[-195.69383240 -385.74224854]
[-190.11592102 -399.69458008]
[-182.60908508 -412.71102905]
[-173.32615662 -424.52661133]
[-162.45613098 -434.90078735]
[-150.22029114 -443.62231445]
[-136.86775208 -450.51364136]
[-122.67035675 -455.43450928]
[-107.91714478 -458.28466797]
[-92.90847778 -459.00616455]
[-77.94989777 -457.58425903]
[-63.34595871 -454.04791260]
[-49.39397049 -448.46914673]
[-36.37797546 -440.96151733]
[-24.56296921 -431.67785645]
[-14.18948460 -420.80715942]
[-5.46871471 -408.57080078]
[1.42179728 -395.21783447]
[6.34176922 -381.02014160]
[9.19103622 -366.26675415]
[9.91159248 -351.25802612]
[8.48876667 -336.29953003]
[4.95152569 -321.69580078]
[-0.62811518 -307.74417114]
[-8.13656235 -294.72863770]
[-17.42095375 -282.91421509]
[-28.29227257 -272.54141235]
[-40.52919006 -263.82138062]
[-33.64977646 -250.49195862]
[-26.77036476 -237.16252136]
[-19.89095116 -223.83309937]
[-13.01153851 -210.50366211]
[-6.13212633 -197.17424011]
[-2.53518391 -211.73658752]
[8.85967255 -221.49143982]
[23.80244255 -222.80049133]
[36.71984482 -215.17549133]
[42.79400635 -201.46035767]
[39.75941086 -186.77052307]
[28.74789619 -176.58493042]
[13.86647797 -174.70252991]
[0.66474968 -181.82627869]
[5.91146803 -167.77380371]
[11.15818596 -153.72134399]
[16.40490341 -139.66886902]
[22.27386475 -125.86468506]
[28.75336075 -112.33634186]
[35.23285675 -98.80799866]
[41.71235275 -85.27965546]
[47.43678665 -80.60496521]
[48.18592834 -71.50131226]
[54.46328735 -57.87799454]
[60.74065018 -44.25467682]
[65.85259247 -58.35673523]
[78.76971436 -65.98221588]
[93.58648682 -63.64484406]
[103.52887726 -52.41324234]
[104.05136108 -37.42234421]
[94.91506195 -25.52578735]
[80.29697418 -22.16251755]
[66.87901306 -28.87151527]
[71.70500946 -14.66906071]
[76.53101349 -0.46660480]
[81.35700989 13.73585129]
[86.18300629 27.93830681]
[91.00900269 42.14076233]
[95.83499908 56.34321594]
[104.70565796 44.24729156]
[119.68644714 43.48838043]
[129.73408508 54.62592316]
[127.44183350 69.44973755]
[114.49945068 77.03226471]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.73339844 128.18026733]
[119.43022919 132.50161743]
[119.26415253 136.57438660]
[117.65763855 139.71308899]
[120.76174927 154.38838196]
[123.86585236 169.06369019]
[126.96996307 183.73899841]
[131.09765625 188.90365601]
[131.88002014 194.53259277]
[129.94114685 198.89720154]
[132.60694885 213.65841675]
[136.57904053 218.94367981]
[137.19346619 224.59341431]
[135.12550354 228.89836121]
[137.35061646 243.73240662]
[139.57572937 258.56643677]
[149.27456665 271.06619263]
[143.51084900 284.80041504]
[159.06906128 286.51388550]
[173.64556885 292.18585205]
[186.25210571 301.42559814]
[196.03558350 313.60067749]
[202.33580017 327.88034058]
[204.72996521 343.29208374]
[203.06111145 358.78796387]
[197.44836426 373.31573486]
[188.27839661 385.89050293]
[176.17889404 395.66128540]
[161.97552490 401.96875000]
[164.42124939 416.76803589]
[166.86697388 431.56729126]
[169.31269836 446.36657715]
[171.75842285 461.16583252]
[174.20416260 475.96511841]
[176.64988708 490.76440430]
[179.09561157 505.56365967]
[194.05555725 507.81198120]
[207.58764648 514.57495117]
[218.36611938 525.19006348]
[225.33502197 538.61724854]
[227.81161499 553.54107666]
[225.55326843 568.49951172]
[218.78121948 582.02709961]
[208.15893555 592.79846191]
[194.72706604 599.75836182]
[179.80155945 602.22491455]
[164.84463501 599.95654297]
[151.32162476 593.17547607]
[140.55737305 582.54595947]
[133.60647583 569.10943604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[10 190]
[11 189]
[23 178]
[25 176]
[26 175]
[27 174]
[28 171]
[29 170]
[30 167]
[31 166]
[32 165]
[33 164]
[34 160]
[35 159]
[37 157]
[38 156]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 136]
[47 135]
[48 134]
[49 132]
[50 131]
[51 130]
[52 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
