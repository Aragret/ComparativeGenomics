%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[166.67146301 442.20315552]
[177.43969727 431.63397217]
[190.57699585 424.21279907]
[186.82070923 409.69073486]
[183.06440735 395.16870117]
[179.30810547 380.64663696]
[175.55180359 366.12457275]
[171.79550171 351.60250854]
[168.03919983 337.08044434]
[158.29345703 348.48309326]
[143.29771423 348.12570190]
[134.10627747 336.27169800]
[137.49472046 321.65942383]
[150.96522522 315.06051636]
[164.58676147 321.33816528]
[161.92097473 306.57693481]
[159.25517273 291.81573486]
[156.58938599 277.05450439]
[144.54818726 264.28826904]
[150.91854858 247.01112366]
[148.03327942 232.29122925]
[145.14801025 217.57133484]
[142.26274109 202.85144043]
[137.33114624 188.68530273]
[130.45173645 175.35588074]
[123.57231903 162.02644348]
[116.69290161 148.69702148]
[103.98023987 140.93574524]
[104.52668762 125.12397003]
[97.64727783 111.79454041]
[90.57016754 98.56901550]
[83.29694366 85.45032501]
[75.92625427 72.38613892]
[68.45851135 59.37718582]
[60.99076843 46.36823273]
[47.41008377 38.25185776]
[47.78409576 23.36194801]
[40.31635666 10.35299587]
[35.80141830 7.73337460]
[33.02084351 4.01561975]
[32.10249329 0.04426193]
[32.82051086 -3.40780807]
[19.61578751 -12.12249756]
[20.65429688 -26.98085403]
[13.77488422 -40.31028366]
[6.89547205 -53.63971329]
[-6.89659786 -47.72599411]
[-21.07540894 -42.81126404]
[-35.56870651 -38.92056274]
[-50.30263901 -36.07372284]
[-65.20212555 -34.28524780]
[-80.19123840 -33.56425095]
[-95.19358826 -33.91440582]
[-110.13273621 -35.33393097]
[-124.93255615 -37.81559372]
[-139.51762390 -41.34674072]
[-153.81362915 -45.90938568]
[-167.74769592 -51.48027420]
[-181.24885559 -58.03102112]
[-194.24827576 -65.52824402]
[-206.67971802 -73.93373108]
[-218.47985840 -83.20465851]
[-229.58854675 -93.29378510]
[-239.94917297 -104.14968872]
[-249.50894165 -115.71705627]
[-258.21914673 -127.93693542]
[-266.03540039 -140.74707031]
[-272.91787720 -154.08216858]
[-278.83148193 -167.87428284]
[-283.74609375 -182.05313110]
[-287.63668823 -196.54646301]
[-290.48342896 -211.28041077]
[-292.27178955 -226.17991638]
[-292.99267578 -241.16903687]
[-292.64239502 -256.17138672]
[-291.22274780 -271.11053467]
[-288.74096680 -285.91030884]
[-285.20971680 -300.49536133]
[-280.64697266 -314.79132080]
[-275.07595825 -328.72537231]
[-268.52511597 -342.22647095]
[-261.02780151 -355.22583008]
[-252.62220764 -367.65719604]
[-243.35119629 -379.45727539]
[-233.26199341 -390.56588745]
[-222.40600586 -400.92642212]
[-210.83856201 -410.48611450]
[-198.61860657 -419.19622803]
[-185.80842590 -427.01235962]
[-172.47326660 -433.89474487]
[-158.68110657 -439.80825806]
[-144.50221252 -444.72274780]
[-130.00886536 -448.61325073]
[-115.27488708 -451.45983887]
[-100.37537384 -453.24810791]
[-85.38625336 -453.96887207]
[-70.38390350 -453.61846924]
[-55.44477463 -452.19873047]
[-40.64499283 -449.71682739]
[-26.05997849 -446.18545532]
[-11.76405144 -441.62258911]
[2.16993880 -436.05151367]
[15.67098618 -429.50054932]
[28.67029190 -422.00311279]
[41.10161591 -413.59744263]
[52.90160751 -404.32632446]
[64.01013947 -394.23703003]
[74.37059784 -383.38098145]
[83.93019104 -371.81347656]
[92.64021301 -359.59344482]
[100.45626831 -346.78320312]
[107.33853149 -333.44799805]
[113.25193787 -319.65579224]
[118.16634369 -305.47686768]
[122.05670929 -290.98348999]
[124.90320587 -276.24948120]
[126.69134521 -261.34994507]
[127.41199493 -246.36082458]
[127.06149292 -231.35847473]
[125.64162445 -216.41935730]
[123.15962219 -201.61959839]
[119.62813568 -187.03460693]
[115.06516266 -172.73872375]
[109.49395752 -158.80477905]
[102.94290161 -145.30377197]
[95.44538116 -132.30451965]
[87.03960419 -119.87326813]
[77.76840210 -108.07334900]
[67.67902374 -96.96489716]
[56.82288361 -86.60451508]
[45.25529480 -77.04500580]
[33.03521347 -68.33508301]
[20.22490120 -60.51912689]
[27.10431290 -47.18969727]
[33.98372650 -33.86026764]
[46.69638824 -26.09898758]
[46.14994049 -10.28722095]
[53.32530975 2.88525510]
[60.79304886 15.89420795]
[73.83959198 23.08009529]
[73.99972534 38.90048981]
[81.46746063 51.90944290]
[88.93520355 64.91839600]
[94.99147034 69.15436554]
[96.41563416 78.17709351]
[103.68886566 91.29578400]
[108.27302551 93.84518433]
[111.10248566 98.78152466]
[110.97670746 104.91513062]
[117.85611725 118.24456024]
[131.06083679 126.95925140]
[130.02233887 141.81761169]
[136.90174866 155.14703369]
[143.78115845 168.47647095]
[150.66056824 181.80589294]
[150.69442749 166.80593872]
[155.09071350 152.46464539]
[163.46911621 140.02268982]
[175.10484314 130.55642700]
[188.99124146 124.88477325]
[203.92704773 123.49839783]
[218.62011719 126.51721954]
[231.79939270 133.68009949]
[242.32472229 144.36735535]
[249.28555298 157.65444946]
[252.07969666 172.39192200]
[250.46545410 187.30480957]
[244.58245850 201.10299683]
[234.93965149 212.59283447]
[222.37123108 220.78031921]
[207.96449280 224.95713806]
[192.96575928 224.76197815]
[178.67257690 220.21170044]
[166.32144165 211.69996643]
[156.98262024 199.96617126]
[159.86790466 214.68606567]
[162.75317383 229.40594482]
[165.63844299 244.12583923]
[175.88783264 251.95610046]
[177.98794556 264.27572632]
[171.35060120 274.38870239]
[174.01638794 289.14993286]
[176.68218994 303.91113281]
[179.34797668 318.67236328]
[182.56126404 333.32415771]
[186.31756592 347.84622192]
[190.07385254 362.36825562]
[193.83015442 376.89031982]
[197.58645630 391.41238403]
[201.34275818 405.93444824]
[205.09906006 420.45651245]
[220.18707275 420.57687378]
[234.72955322 424.59912109]
[247.73498535 432.24905396]
[258.31661987 443.00503540]
[265.75302124 456.13372803]
[269.53710938 470.73999023]
[269.41091919 485.82794189]
[265.38302612 500.36889648]
[257.72808838 513.37133789]
[246.96803284 523.94885254]
[233.83647156 531.38018799]
[219.22874451 535.15863037]
[204.14082336 535.02661133]
[189.60145569 530.99310303]
[176.60194397 523.33312988]
[166.02861023 512.56896973]
[158.60235596 499.43457031]
[154.82954407 484.82537842]
[154.96739197 469.73751831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[15 184]
[16 183]
[17 182]
[18 181]
[20 178]
[21 177]
[22 176]
[23 175]
[24 155]
[25 154]
[26 153]
[27 152]
[29 150]
[30 149]
[31 146]
[32 145]
[33 143]
[34 142]
[35 141]
[37 139]
[38 138]
[42 137]
[44 135]
[45 134]
[46 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
