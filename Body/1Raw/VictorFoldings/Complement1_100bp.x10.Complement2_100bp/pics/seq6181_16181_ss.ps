%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[39.66206741 690.19744873]
[27.23742867 698.61383057]
[14.22514534 706.08966064]
[0.69628650 712.58404541]
[-13.27525711 718.06158447]
[-27.61317635 722.49230957]
[-42.23916245 725.85198975]
[-57.07333374 728.12237549]
[-72.03466797 729.29101562]
[-87.04145050 729.35150146]
[-102.01172638 728.30352783]
[-116.86371613 726.15283203]
[-131.51631165 722.91119385]
[-145.88949585 718.59619141]
[-159.90475464 713.23150635]
[-173.48553467 706.84637451]
[-186.55766296 699.47576904]
[-199.04975891 691.15979004]
[-210.89358521 681.94396973]
[-222.02444458 671.87866211]
[-232.38156128 661.01873779]
[-241.90835571 649.42358398]
[-250.55279541 637.15655518]
[-258.26766968 624.28454590]
[-265.01083374 610.87799072]
[-270.74548340 597.01000977]
[-275.44027710 582.75634766]
[-279.06958008 568.19488525]
[-281.61355591 553.40521240]
[-283.05834961 538.46801758]
[-283.39599609 523.46490479]
[-282.62472534 508.47784424]
[-280.74871826 493.58865356]
[-277.77822876 478.87866211]
[-273.72946167 464.42825317]
[-268.62457275 450.31628418]
[-262.49139404 436.61990356]
[-255.36344910 423.41384888]
[-247.27966309 410.77029419]
[-238.28419495 398.75827026]
[-228.42616272 387.44338989]
[-217.75941467 376.88745117]
[-206.34220886 367.14810181]
[-194.23690796 358.27856445]
[-181.50961304 350.32727051]
[-168.22985840 343.33761597]
[-154.47015381 337.34777832]
[-140.30566406 332.39053345]
[-125.81375122 328.49288940]
[-111.07356262 325.67617798]
[-96.16559601 323.95574951]
[-81.17128754 323.34103394]
[-66.17252350 323.83535767]
[-51.25122833 325.43600464]
[-36.48889542 328.13430786]
[-21.96615410 331.91546631]
[-7.76231956 336.75885010]
[6.04502726 342.63800049]
[12.92443943 329.30856323]
[19.80385208 315.97912598]
[25.97961998 302.30947876]
[31.43497849 288.33666992]
[36.89033508 274.36386108]
[42.34569168 260.39108276]
[47.27728653 246.22494507]
[43.61468506 231.78767395]
[55.06043243 220.86497498]
[59.46143341 206.52513123]
[63.86243057 192.18527222]
[60.19982910 177.74801636]
[71.64557648 166.82531738]
[76.04657745 152.48545837]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[109.61357880 43.11353683]
[111.06299591 28.18372917]
[101.93198395 15.26339149]
[108.30321503 1.80023277]
[106.74269104 -13.11837196]
[105.18216705 -28.03697586]
[101.61418152 -33.60303497]
[101.42166138 -39.28281784]
[103.80408478 -43.42203522]
[102.68843842 -58.38048935]
[101.57279205 -73.33894348]
[100.45713806 -88.29739380]
[97.51675415 -92.61030579]
[96.61492920 -97.16442871]
[97.50216675 -101.14285278]
[99.64092255 -103.94607544]
[99.19431305 -118.93942261]
[98.74771118 -133.93276978]
[98.30110168 -148.92613220]
[84.33754730 -155.08908081]
[74.43736267 -166.70582581]
[70.56622314 -181.46987915]
[73.49275970 -196.44979858]
[82.63589478 -208.67132568]
[96.18025970 -215.70787048]
[111.43661499 -216.16230774]
[125.37579346 -209.94442749]
[135.23016357 -198.28877258]
[139.04312134 -183.50959778]
[136.05761719 -168.54130554]
[126.86642456 -156.35588074]
[113.29445648 -149.37272644]
[113.74105835 -134.37937927]
[114.18766785 -119.38603210]
[114.63426971 -104.39268494]
[115.41559601 -89.41304779]
[116.53124237 -74.45458984]
[117.64688873 -59.49613953]
[118.76254272 -44.53768539]
[120.10077667 -29.59749985]
[121.66130066 -14.67889500]
[123.22181702 0.23970981]
[132.24121094 12.09296989]
[125.98159790 26.62320709]
[131.17318726 12.55027485]
[139.23120117 -0.10153683]
[149.78906250 -10.75665569]
[162.36645508 -18.93034554]
[176.39118958 -24.25075722]
[191.22525024 -26.47584724]
[206.19375610 -25.50439072]
[220.61575317 -21.38058090]
[233.83514404 -14.29202271]
[245.25053406 -4.56119967]
[254.34259033 7.36920071]
[260.69769287 20.95642471]
[264.02673340 35.58234406]
[264.17825317 50.58158112]
[261.14532471 65.27176666]
[255.06599426 78.98458862]
[246.21679688 91.09622192]
[235.00030518 101.05565643]
[221.92680359 108.40980530]
[207.59103394 112.82410431]
[192.64520264 114.09773254]
[177.76924133 112.17275238]
[163.63989258 107.13672638]
[150.89994812 99.21877289]
[140.12901306 88.77910614]
[131.81706238 76.29264832]
[126.34225464 62.32746124]
[123.95342255 47.51453781]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[90.38642120 156.88645935]
[85.98542786 171.22630310]
[89.33323669 186.68925476]
[78.20227814 196.58627319]
[73.80127716 210.92611694]
[69.40028381 225.26597595]
[72.74809265 240.72891235]
[61.61713409 250.62593079]
[75.88977814 246.01164246]
[88.47990417 254.16571045]
[90.10654449 269.07723999]
[79.57059479 279.75402832]
[64.63877106 278.32553101]
[56.31848907 265.84643555]
[50.86313248 279.81921387]
[45.40777588 293.79202271]
[39.95241928 307.76483154]
[53.65472031 301.66180420]
[68.10838318 305.67324829]
[76.70538330 317.96517944]
[75.51529694 332.91787720]
[65.08220673 343.69519043]
[50.17598343 345.36987305]
[37.61155319 337.17626953]
[33.13328171 322.85855103]
[26.25386810 336.18798828]
[19.37445641 349.51739502]
[32.16543961 357.36584473]
[44.34186172 366.13751221]
[55.83721924 375.78445435]
[66.58872986 386.25405884]
[76.53766632 397.48907471]
[85.62969971 409.42819214]
[93.81516266 422.00616455]
[101.04935455 435.15429688]
[107.29275513 448.80081177]
[112.51127625 462.87115479]
[116.67641449 477.28845215]
[119.76541138 491.97399902]
[121.76140594 506.84756470]
[122.65349579 521.82794189]
[122.43679810 536.83331299]
[121.11251068 551.78161621]
[118.68785095 566.59136963]
[115.17607880 581.18157959]
[110.59635925 595.47265625]
[104.97371674 609.38641357]
[98.33885956 622.84692383]
[90.72801208 635.78070068]
[82.18276215 648.11706543]
[72.74976349 659.78863525]
[62.48054886 670.73168945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 185]
[59 184]
[60 183]
[61 175]
[62 174]
[63 173]
[64 172]
[65 166]
[67 164]
[68 163]
[69 162]
[71 160]
[72 159]
[73 158]
[74 157]
[75 156]
[77 154]
[78 153]
[79 152]
[80 151]
[81 123]
[83 121]
[84 120]
[85 119]
[88 118]
[89 117]
[90 116]
[91 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
