%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[270.48626709 430.61721802]
[280.73699951 419.62722778]
[292.51129150 410.28784180]
[285.04354858 397.27890015]
[277.57580566 384.26995850]
[270.10806274 371.26098633]
[258.71099854 370.73858643]
[248.87959290 364.71704102]
[243.11672974 354.59362793]
[242.95458984 342.82611084]
[248.54913330 332.33624268]
[241.47203064 319.11068726]
[234.39492798 305.88516235]
[227.31782532 292.65963745]
[220.24072266 279.43411255]
[212.96748352 266.31542969]
[205.49975586 253.30647278]
[197.55307007 240.58444214]
[189.13844299 228.16694641]
[180.72383118 215.74945068]
[167.17895508 209.55381775]
[165.84260559 193.78915405]
[157.42799377 181.37165833]
[148.37799072 169.40931702]
[138.71717834 157.93461609]
[129.05636597 146.45991516]
[119.39555359 134.98521423]
[109.73474121 123.51052094]
[100.07393646 112.03582001]
[102.97628784 126.75234985]
[100.73865509 141.58451843]
[93.62391663 154.78984070]
[82.46791077 164.81697083]
[68.58121490 170.48793030]
[53.59524536 171.13652039]
[39.27053070 166.68652344]
[27.28991890 157.66073608]
[19.06088638 145.11947632]
[15.55017090 130.53610229]
[17.17020607 115.62384033]
[23.73067284 102.13457489]
[34.46085358 91.65300751]
[48.10017776 85.41050720]
[63.04631042 84.14043427]
[77.54339600 87.99198914]
[89.88945007 96.51380157]
[83.20925903 83.08342743]
[80.10329437 97.75833893]
[69.63251495 108.49903870]
[55.04138565 111.97740173]
[40.85113907 107.11563110]
[31.45877266 95.42018127]
[29.77461433 80.51502991]
[36.32051849 67.01869202]
[49.06816483 59.11315536]
[64.06755829 59.24803925]
[76.67114258 67.38174438]
[71.84514618 53.17928696]
[67.01914978 38.97683334]
[64.18450165 53.70655823]
[56.28213882 66.45616913]
[44.35174561 75.54824066]
[29.96297646 79.78655243]
[15.00891590 78.61347961]
[1.45703113 72.18335724]
[-8.90969563 61.34218979]
[-14.72734261 47.51630783]
[-15.23049831 32.52474976]
[-10.35296440 18.33991051]
[-0.73646408 6.82805109]
[12.35378647 -0.49624684]
[27.19553947 -2.66934514]
[41.83610916 0.59466475]
[54.34927368 8.86634636]
[63.08972549 21.05957031]
[61.52920151 6.14096546]
[59.96867752 -8.77763939]
[58.40815735 -23.69624329]
[56.84763336 -38.61484909]
[52.84241486 -46.82435989]
[55.37663269 -53.76694489]
[54.03839874 -68.70713043]
[52.70016479 -83.64731598]
[51.36193085 -98.58750153]
[48.35765457 -102.85615540]
[47.38812637 -107.39634705]
[48.21603775 -111.38753510]
[50.31281662 -114.22229767]
[49.64303207 -129.20733643]
[48.97324753 -144.19236755]
[38.70576477 -159.47833252]
[47.39433670 -174.72547913]
[46.50152206 -189.69888306]
[45.60870361 -204.67228699]
[30.96383476 -208.46476746]
[18.20876694 -216.59886169]
[8.59311581 -228.27766418]
[3.05892205 -242.35700989]
[2.14837122 -257.45755005]
[5.95066929 -272.09988403]
[14.09330654 -284.84948730]
[25.77854919 -294.45730591]
[39.86159515 -299.98205566]
[54.96273422 -300.88250732]
[69.60250854 -297.07040405]
[82.34666443 -288.91921997]
[91.94665527 -277.22753906]
[97.46197510 -263.14077759]
[98.35229492 -248.03904724]
[94.53037262 -233.40182495]
[86.37065887 -220.66314697]
[74.67254639 -211.07098389]
[60.58211136 -205.56510925]
[61.47492599 -190.59170532]
[62.36774445 -175.61828613]
[71.20407867 -167.35719299]
[72.07043457 -154.88990784]
[63.95828629 -144.86215210]
[64.62807465 -129.87712097]
[65.29785919 -114.89208221]
[66.30211639 -99.92573547]
[67.64035034 -84.98554993]
[68.97858429 -70.04536438]
[70.31681824 -55.10517883]
[71.76623535 -40.17537308]
[73.32675934 -25.25676727]
[74.88728333 -10.33816242]
[76.44780731 4.58044243]
[78.00833130 19.49904823]
[81.22160339 34.15083313]
[86.04759979 48.35329056]
[90.87359619 62.55574417]
[96.63963318 76.40322876]
[103.31982422 89.83361053]
[111.54863739 102.37500763]
[121.20944214 113.84970856]
[130.87025452 125.32440948]
[140.53106689 136.79910278]
[150.19187927 148.27380371]
[159.85269165 159.74850464]
[161.04782104 144.79618835]
[171.48455811 134.02239990]
[186.39134216 132.35275269]
[198.95300293 140.55059814]
[203.42651367 154.86798096]
[197.76666260 168.75920105]
[184.56103516 175.87336731]
[169.84548950 172.95703125]
[178.26010132 185.37452698]
[192.40684509 192.45834351]
[193.14132690 207.33482361]
[201.55593872 219.75231934]
[209.97056580 232.16981506]
[215.32147217 218.15669250]
[229.56649780 213.45785522]
[242.20475769 221.53713989]
[243.91976929 236.43876648]
[233.44731140 247.17784119]
[218.50869751 245.83872986]
[225.97644043 258.84768677]
[231.49266052 262.49224854]
[233.96855164 267.60763550]
[233.46624756 272.35702515]
[240.54335022 285.58255005]
[247.62045288 298.80807495]
[254.69755554 312.03359985]
[261.77465820 325.25912476]
[280.10278320 330.05438232]
[288.95382690 346.44253540]
[283.11703491 363.79324341]
[290.58477783 376.80221558]
[298.05252075 389.81115723]
[305.52023315 402.82009888]
[319.52279663 397.36239624]
[334.18237305 394.05270386]
[349.17150879 392.96496582]
[364.15536499 394.12353516]
[378.79913330 397.50244141]
[392.77572632 403.02627563]
[405.77288818 410.57159424]
[417.50021362 419.96984863]
[427.69577026 431.01107788]
[436.13174438 443.44857788]
[442.61968994 457.00454712]
[447.01467896 471.37612915]
[449.21847534 486.24221802]
[449.18191528 501.27072144]
[446.90573120 516.12591553]
[442.44085693 530.47595215]
[435.88699341 544.00012207]
[427.39056396 556.39642334]
[417.14138794 567.38787842]
[405.36843872 576.72894287]
[392.33471680 584.21093750]
[378.33142090 589.66662598]
[363.67135620 592.97424316]
[348.68203735 594.05981445]
[333.69836426 592.89916992]
[319.05505371 589.51812744]
[305.07925415 583.99230957]
[292.08319092 576.44512939]
[280.35717773 567.04522705]
[270.16320801 556.00256348]
[261.72900391 543.56384277]
[255.24299622 530.00695801]
[250.85006714 515.63476562]
[248.64837646 500.76834106]
[248.68708801 485.73983765]
[250.96536255 470.88494873]
[255.43229675 456.53561401]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 160]
[17 159]
[18 153]
[19 152]
[20 151]
[22 149]
[23 148]
[24 140]
[25 139]
[26 138]
[27 137]
[28 136]
[29 135]
[46 134]
[47 133]
[57 132]
[58 131]
[59 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[81 124]
[82 123]
[83 122]
[84 121]
[88 120]
[89 119]
[90 118]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
