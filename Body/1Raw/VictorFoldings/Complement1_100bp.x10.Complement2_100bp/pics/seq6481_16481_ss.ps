%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[23.91539764 764.40191650]
[9.01979542 766.19122314]
[-5.94254971 767.29071045]
[-20.93970680 767.69799805]
[-35.93967056 767.41223145]
[-50.91043472 766.43402100]
[-65.82004547 764.76544189]
[-80.63668823 762.41003418]
[-95.32873535 759.37292480]
[-109.86484528 755.66046143]
[-124.21399689 751.28070068]
[-138.34555054 746.24285889]
[-152.22937012 740.55780029]
[-165.83581543 734.23754883]
[-179.13584900 727.29571533]
[-192.10110474 719.74694824]
[-204.70388794 711.60754395]
[-216.91731262 702.89477539]
[-228.71531677 693.62719727]
[-240.07273865 683.82464600]
[-250.96531677 673.50805664]
[-261.36981201 662.69940186]
[-271.26403809 651.42175293]
[-280.62683105 639.69921875]
[-289.43829346 627.55676270]
[-297.67953491 615.02032471]
[-305.33300781 602.11663818]
[-312.38238525 588.87322998]
[-318.81262207 575.31848145]
[-324.60998535 561.48114014]
[-329.76211548 547.39086914]
[-334.25799561 533.07763672]
[-338.08804321 518.57208252]
[-341.24411011 503.90512085]
[-343.71942139 489.10806274]
[-345.50869751 474.21243286]
[-346.60815430 459.25009155]
[-347.01541138 444.25292969]
[-346.72961426 429.25296021]
[-345.75137329 414.28222656]
[-344.08276367 399.37261963]
[-341.72735596 384.55596924]
[-338.69018555 369.86392212]
[-334.97772217 355.32781982]
[-330.59790039 340.97869873]
[-325.56005859 326.84713745]
[-319.87493896 312.96331787]
[-313.55468750 299.35690308]
[-306.61279297 286.05688477]
[-299.06405640 273.09164429]
[-290.92459106 260.48889160]
[-282.21176147 248.27546692]
[-272.94418335 236.47747803]
[-263.14163208 225.12008667]
[-252.82499695 214.22752380]
[-242.01631165 203.82304382]
[-230.73866272 193.92886353]
[-219.01608276 184.56607056]
[-206.87361145 175.75465393]
[-194.33715820 167.51342773]
[-181.43345642 159.85997009]
[-168.19007874 152.81060791]
[-154.63525391 146.38041687]
[-140.79794312 140.58306885]
[-126.70763397 135.43098450]
[-112.39443207 130.93513489]
[-97.88886261 127.10510254]
[-83.22188568 123.94908905]
[-68.42480469 121.47380829]
[-53.52919388 119.68455505]
[-38.56684494 118.58513641]
[-23.56968689 118.17790985]
[-8.56972218 118.46373749]
[6.40103579 119.44201660]
[21.31064034 121.11064911]
[36.12726974 123.46607971]
[50.81930923 126.50328064]
[65.35540771 130.21577454]
[79.70452881 134.59562683]
[84.74144745 120.46659851]
[89.77836609 106.33756256]
[94.60436249 92.13510895]
[99.21836853 77.86238098]
[103.83238220 63.58964539]
[108.44638824 49.31690979]
[113.06040192 35.04417801]
[117.67440796 20.77144432]
[120.55968475 6.05155230]
[121.67533112 -8.90690136]
[122.79097748 -23.86535454]
[123.90662384 -38.82380676]
[125.02227783 -53.78226089]
[126.13792419 -68.74071503]
[127.25357056 -83.69916534]
[112.82511139 -88.01582336]
[99.66214752 -95.33364868]
[88.38034821 -105.31037140]
[79.50737762 -117.47937012]
[73.45823669 -131.27146912]
[70.51586151 -146.04159546]
[70.81787109 -161.09890747]
[74.35013580 -175.73916626]
[80.94744873 -189.27761841]
[90.30123901 -201.08102417]
[101.97401428 -210.59735107]
[115.41982269 -217.38146973]
[130.00976562 -221.11610413]
[145.06146240 -221.62655640]
[159.87091064 -218.88896179]
[173.74543762 -213.03137207]
[186.03611755 -204.32772827]
[196.16809082 -193.18515015]
[203.66746521 -180.12477112]
[208.18347168 -165.75744629]
[209.50491333 -150.75518799]
[207.56994629 -135.81965637]
[202.46911621 -121.64942932]
[194.44096375 -108.90725708]
[183.86099243 -98.18912506]
[171.22406006 -89.99633789]
[157.12120056 -84.71208191]
[142.21202087 -82.58351898]
[141.09637451 -67.62506866]
[139.98072815 -52.66661072]
[138.86508179 -37.70816040]
[137.74943542 -22.74970627]
[136.63378906 -7.79125261]
[135.51812744 7.16720104]
[143.73239136 -5.38373899]
[155.70234680 -14.42364407]
[170.02182007 -18.89051628]
[185.00854492 -18.25959015]
[198.90190125 -12.60498810]
[210.06971741 -2.59100533]
[217.20001221 10.60592461]
[219.45510864 25.43543816]
[216.57009888 40.15538025]
[208.88391113 53.03646851]
[197.29949951 62.56544495]
[183.17779541 67.62284851]
[168.17779541 67.61454773]
[154.06169128 62.54151917]
[142.48782349 52.99973297]
[134.81588745 40.11014557]
[131.94714355 25.38545227]
[127.33312988 39.65818787]
[122.71912384 53.93091965]
[118.10511780 68.20365143]
[113.49110413 82.47638702]
[108.87709808 96.74912262]
[110.14613342 101.83866882]
[108.47325134 107.27693939]
[103.90739441 111.37448120]
[98.87047577 125.50350952]
[93.83356476 139.63253784]
[107.71739960 145.31756592]
[121.32387543 151.63774109]
[134.62394714 158.57955933]
[147.58921814 166.12821960]
[160.19203186 174.26760864]
[172.40550232 182.98034668]
[184.20355225 192.24784851]
[195.56100464 202.05033875]
[206.45362854 212.36689758]
[216.85816956 223.17552185]
[226.75242615 234.45310974]
[236.11529541 246.17562866]
[244.92678833 258.31805420]
[253.16809082 270.85446167]
[260.82162476 283.75808716]
[267.87106323 297.00143433]
[274.30136108 310.55621338]
[280.09875488 324.39349365]
[285.25094604 338.48376465]
[289.74688721 352.79693604]
[293.57699585 367.30249023]
[296.73312378 381.96945190]
[299.20849609 396.76651001]
[300.99783325 411.66210938]
[302.09735107 426.62445068]
[302.50466919 441.62161255]
[302.21893311 456.62158203]
[301.24075317 471.59234619]
[299.57220459 486.50195312]
[297.21685791 501.31860352]
[294.17974854 516.01068115]
[290.46734619 530.54675293]
[286.08758545 544.89593506]
[281.04980469 559.02752686]
[275.36474609 572.91131592]
[269.04455566 586.51782227]
[262.10269165 599.81787109]
[254.55401611 612.78308105]
[246.41459656 625.38592529]
[237.70182800 637.59936523]
[228.43429565 649.39739990]
[218.63179016 660.75482178]
[208.31520081 671.64739990]
[197.50656128 682.05194092]
[186.22895813 691.94616699]
[174.50640869 701.30902100]
[162.36398315 710.12048340]
[149.82756042 718.36175537]
[136.92390442 726.01525879]
[123.68054199 733.06469727]
[110.12574768 739.49493408]
[96.28845215 745.29235840]
[82.19817352 750.44445801]
[67.88498688 754.94036865]
[53.37942886 758.77050781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 155]
[80 154]
[81 153]
[82 150]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
