%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[150.80850220 506.57366943]
[143.63204956 493.39312744]
[137.49859619 479.69607544]
[132.44499207 465.56491089]
[128.50164795 451.08465576]
[125.69229126 436.34234619]
[124.03380585 421.42663574]
[123.53616333 406.42727661]
[124.20236206 391.43447876]
[126.02839661 376.53836060]
[129.00328064 361.82855225]
[133.10911560 347.39352417]
[138.32122803 333.32006836]
[144.60826111 319.69284058]
[151.93240356 306.59378052]
[160.24958801 294.10168457]
[169.50982666 282.29165649]
[179.65740967 271.23477173]
[190.63131714 260.99749756]
[202.36552429 251.64138794]
[193.95091248 239.22389221]
[185.53628540 226.80639648]
[177.12167358 214.38890076]
[168.61483765 202.03439331]
[160.01628113 189.74356079]
[151.41770935 177.45272827]
[142.81915283 165.16188049]
[133.76914978 153.19955444]
[124.28025055 141.58229065]
[114.79135132 129.96502686]
[105.30245209 118.34775543]
[90.89695740 116.78960419]
[81.73097992 105.56770325]
[83.08028412 91.14114380]
[73.59138489 79.52388000]
[64.10248566 67.90661621]
[50.43696594 69.70784760]
[37.76644135 64.56233215]
[29.36020470 53.91316986]
[27.33002853 40.60818863]
[32.10047913 28.13882828]
[22.78559494 16.38157654]
[13.47071266 4.62432528]
[4.15582991 -7.13292599]
[-5.24632120 -18.82050705]
[-14.73521900 -30.43777084]
[-24.22411728 -42.05503464]
[-33.71301651 -53.67229843]
[-43.37382507 -65.14699554]
[-53.20440674 -76.47659302]
[-63.03498840 -87.80618286]
[-72.86557007 -99.13578033]
[-85.17167664 -90.53476715]
[-98.30943298 -83.26722717]
[-112.13489532 -77.41279602]
[-126.49657440 -73.03561401]
[-141.23713684 -70.18363953]
[-156.19505310 -68.88811493]
[-171.20645142 -69.16324615]
[-186.10684204 -71.00600433]
[-200.73300171 -74.39621735]
[-214.92463684 -79.29672241]
[-228.52629089 -85.65383911]
[-241.38890076 -93.39791107]
[-253.37158203 -102.44409180]
[-264.34301758 -112.69326019]
[-274.18298340 -124.03312683]
[-282.78369141 -136.33944702]
[-290.05090332 -149.47737122]
[-295.90499878 -163.30297852]
[-300.28182983 -177.66476440]
[-303.13345337 -192.40539551]
[-304.42861938 -207.36334229]
[-304.15313721 -222.37472534]
[-302.30999756 -237.27508545]
[-298.91943359 -251.90115356]
[-294.01858521 -266.09268188]
[-287.66113281 -279.69415283]
[-279.91674805 -292.55661011]
[-270.87030029 -304.53906250]
[-260.62084961 -315.51022339]
[-249.28074646 -325.34994507]
[-236.97421265 -333.95034790]
[-223.83610535 -341.21725464]
[-210.01036072 -347.07101440]
[-195.64846802 -351.44747925]
[-180.90777588 -354.29873657]
[-165.94979858 -355.59353638]
[-150.93841553 -355.31768799]
[-136.03810120 -353.47421265]
[-121.41211700 -350.08328247]
[-107.22071075 -345.18206787]
[-93.61937714 -338.82431030]
[-80.75712585 -331.07962036]
[-68.77490234 -322.03283691]
[-57.80396652 -311.78314209]
[-47.96454239 -300.44281006]
[-39.36442566 -288.13607788]
[-32.09784698 -274.99777222]
[-26.24442291 -261.17190552]
[-21.86828613 -246.80989075]
[-19.01738358 -232.06913757]
[-17.72295380 -217.11111450]
[-17.99917603 -202.09974670]
[-19.84302521 -187.19947815]
[-23.23429871 -172.57357788]
[-28.13584137 -158.38229370]
[-34.49394989 -144.78111267]
[-42.23895645 -131.91905212]
[-51.28600693 -119.93704224]
[-61.53597641 -108.96635437]
[-51.70539474 -97.63676453]
[-41.87481308 -86.30717468]
[-32.04423523 -74.97757721]
[-27.42814636 -73.75251007]
[-23.53263283 -69.61463928]
[-22.09575272 -63.16119385]
[-12.60685444 -51.54393387]
[-3.11795616 -39.92667007]
[6.37094212 -28.30940628]
[13.03683090 -25.11758423]
[15.91308117 -16.44780922]
[25.22796440 -4.69055748]
[34.54284668 7.06669378]
[43.85773087 18.82394409]
[60.22890854 17.61479187]
[74.23520660 26.49090195]
[80.25067139 42.12149429]
[75.71974945 58.41771317]
[85.20864868 70.03498077]
[94.69754791 81.65224457]
[109.10304260 83.21039581]
[118.26902008 94.43229675]
[116.91971588 108.85885620]
[126.40861511 120.47612000]
[135.89752197 132.09338379]
[145.38641357 143.71064758]
[149.46578979 129.27601624]
[163.23481750 123.32504272]
[176.54347229 130.24456787]
[179.58110046 144.93377686]
[170.10848999 156.56433105]
[155.10998535 156.56332397]
[163.70855713 168.85415649]
[172.30711365 181.14500427]
[180.90568542 193.43583679]
[188.38920593 198.67364502]
[189.53916931 205.97428894]
[197.95378113 218.39178467]
[206.36840820 230.80928040]
[214.78302002 243.22677612]
[227.82171631 235.79570007]
[241.39704895 229.39738464]
[255.42739868 224.07029724]
[269.82836914 219.84648132]
[284.51333618 216.75134277]
[299.39398193 214.80349731]
[314.38085938 214.01464844]
[329.38378906 214.38954163]
[344.31253052 215.92593384]
[359.07733154 218.61457825]
[373.58938599 222.43930054]
[387.76141357 227.37710571]
[401.50820923 233.39830017]
[414.74700928 240.46665955]
[427.39828491 248.53967285]
[439.38592529 257.56881714]
[450.63781738 267.49972534]
[461.08627319 278.27273560]
[470.66848755 289.82305908]
[479.32684326 302.08117676]
[487.00921631 314.97338867]
[493.66946411 328.42214966]
[499.26745605 342.34661865]
[503.76959229 356.66302490]
[507.14877319 371.28524780]
[509.38467407 386.12536621]
[510.46383667 401.09411621]
[510.37979126 416.10147095]
[509.13305664 431.05722046]
[506.73107910 445.87136841]
[503.18832397 460.45480347]
[498.52612305 474.71987915]
[492.77249146 488.58078003]
[485.96206665 501.95410156]
[478.13577271 514.75946045]
[469.34066772 526.91986084]
[459.62966919 538.36212158]
[449.06118774 549.01739502]
[437.69879150 558.82165527]
[425.61077881 567.71600342]
[412.86990356 575.64678955]
[399.55273438 582.56640625]
[385.73937988 588.43328857]
[371.51293945 593.21203613]
[356.95895386 596.87396240]
[342.16494751 599.39709473]
[327.21994019 600.76617432]
[312.21374512 600.97302246]
[297.23666382 600.01635742]
[282.37875366 597.90197754]
[267.72937012 594.64251709]
[253.37661743 590.25769043]
[239.40681458 584.77380371]
[225.90399170 578.22381592]
[212.94934082 570.64715576]
[200.62078857 562.08941650]
[188.99247742 552.60205078]
[178.13433838 542.24206543]
[168.11167908 531.07177734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 151]
[21 150]
[22 149]
[23 148]
[24 146]
[25 145]
[26 144]
[27 143]
[28 137]
[29 136]
[30 135]
[31 134]
[34 131]
[35 130]
[36 129]
[41 125]
[42 124]
[43 123]
[44 122]
[45 120]
[46 119]
[47 118]
[48 117]
[49 114]
[50 113]
[51 112]
[52 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
