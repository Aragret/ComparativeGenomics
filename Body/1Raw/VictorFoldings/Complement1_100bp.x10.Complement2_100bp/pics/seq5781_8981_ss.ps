%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[120.04930115 406.10821533]
[132.56170654 397.74014282]
[126.89891815 383.85012817]
[121.23612976 369.96011353]
[115.57334137 356.07006836]
[109.91055298 342.18005371]
[106.28836823 356.73614502]
[95.94477081 367.59939575]
[81.58355713 371.93014526]
[66.95871735 368.59640503]
[55.89313889 358.46954346]
[51.27934647 344.19674683]
[54.32337189 329.50885010]
[64.22951508 318.24526978]
[78.40832520 313.35025024]
[93.15351105 316.10336304]
[104.61019897 325.78421021]
[101.07052612 311.20782471]
[97.53085327 296.63143921]
[93.99118042 282.05508423]
[90.18797302 296.56491089]
[81.93440247 309.09002686]
[70.10150146 318.30862427]
[55.93801880 323.24783325]
[40.93865967 323.38641357]
[26.68634224 318.70971680]
[14.68514729 309.71130371]
[6.20159054 297.34082031]
[2.13096142 282.90371704]
[2.90284324 267.92358398]
[8.43577766 253.98132324]
[18.14586067 242.54827881]
[31.00836372 234.83102417]
[45.66587830 231.64398193]
[60.57155991 233.32345581]
[74.15237427 239.69224548]
[84.97511292 250.07821655]
[91.89767456 263.38549805]
[84.35072327 250.54444885]
[92.29263306 236.86099243]
[92.51596069 221.86265564]
[84.96900940 209.02160645]
[92.91091156 195.33815002]
[93.13423920 180.33981323]
[93.24591064 165.34024048]
[93.24591064 150.34024048]
[93.13423920 135.34065247]
[92.91091156 120.34231567]
[92.68758392 105.34397888]
[90.32894897 102.29287720]
[89.32663727 98.21694183]
[90.10820007 93.74523163]
[92.80423737 89.67445374]
[93.25084686 74.68110657]
[85.92785645 60.65668488]
[94.04066467 48.16542435]
[94.48727417 33.17207336]
[94.93387604 18.17872429]
[95.38048553 3.18537354]
[95.82708740 -11.80797672]
[81.12044525 -18.30588913]
[70.05991364 -29.92205048]
[64.31771851 -44.85734177]
[64.74552917 -60.81418228]
[71.24826050 -75.34997559]
[82.80319214 -86.25101471]
[97.62067413 -91.86958313]
[97.84400177 -106.86791992]
[98.06732941 -121.86626434]
[97.95566559 -136.86584473]
[87.91690826 -152.30297852]
[96.83152008 -167.41906738]
[96.16173553 -182.40411377]
[95.49195099 -197.38914490]
[94.82216644 -212.37419128]
[94.15238190 -227.35922241]
[82.77157593 -237.99478149]
[82.30578613 -253.20127869]
[92.51529694 -263.98559570]
[91.84551239 -278.97064209]
[91.17572021 -293.95568848]
[90.50593567 -308.94070435]
[89.83615112 -323.92575073]
[86.32667542 -332.35910034]
[89.26963043 -339.13854980]
[88.82302856 -354.13189697]
[88.37641907 -369.12524414]
[87.92980957 -384.11859131]
[79.78505707 -397.68228149]
[87.13999176 -410.63427734]
[86.69338989 -425.62762451]
[86.24678040 -440.62097168]
[71.50688171 -443.78308105]
[57.95234680 -450.38140869]
[46.37121201 -460.03234863]
[37.43679428 -472.17483521]
[31.66852760 -486.10287476]
[29.40177155 -501.00674438]
[30.76831436 -516.01995850]
[35.68870163 -530.26959229]
[43.87687302 -542.92730713]
[54.85678101 -553.25714111]
[67.99005890 -560.65850830]
[82.51316833 -564.70111084]
[97.58174133 -565.14996338]
[112.31971741 -561.97894287]
[125.87025452 -555.37237549]
[137.44554138 -545.71441650]
[146.37258911 -533.56652832]
[152.13241577 -519.63500977]
[154.39013672 -504.72976685]
[153.01448059 -489.71740723]
[148.08546448 -475.47070312]
[139.88961792 -462.81796265]
[128.90345764 -452.49481201]
[115.76568604 -445.10140991]
[101.24012756 -441.06759644]
[101.68673706 -426.07421875]
[102.13333893 -411.08087158]
[110.24614716 -398.58963013]
[102.92316437 -384.56518555]
[103.36976624 -369.57183838]
[103.81637573 -354.57849121]
[104.26297760 -339.58514404]
[104.82118988 -324.59555054]
[105.49097443 -309.61050415]
[106.16075897 -294.62545776]
[106.83055115 -279.64041138]
[107.50033569 -264.65539551]
[118.63126373 -254.82492065]
[119.52398682 -239.63749695]
[109.13742065 -228.02900696]
[109.80720520 -213.04397583]
[110.47698975 -198.05892944]
[111.14677429 -183.07389832]
[111.81655884 -168.08885193]
[120.52891541 -159.69711304]
[121.20956421 -147.21830750]
[112.94901276 -137.31245422]
[115.25082397 -134.64149475]
[116.37329102 -130.72293091]
[115.74413300 -126.12321472]
[113.06566620 -121.64293671]
[112.84233856 -106.64459229]
[112.61901093 -91.64625549]
[125.70533752 -86.57798767]
[136.29818726 -77.32757568]
[143.11170959 -64.99082184]
[145.30963135 -51.03979111]
[142.60777283 -37.14710236]
[135.31069946 -24.98545456]
[124.27742767 -16.02620316]
[110.82044220 -11.36137009]
[110.37383270 3.63197947]
[109.92723083 18.62532997]
[109.48062134 33.61867905]
[109.03401947 48.61203003]
[116.38894653 61.56402588]
[108.24419403 75.12771606]
[107.79759216 90.12106323]
[107.68592072 105.12064362]
[107.90924835 120.11898804]
[108.13257599 135.11732483]
[111.38941193 143.65142822]
[108.24591064 150.34024048]
[108.24591064 165.34024048]
[111.37532043 173.92187500]
[108.13257599 180.56314087]
[107.90924835 195.56147766]
[115.44023132 209.47532654]
[107.51429749 222.08598328]
[107.29096985 237.08432007]
[114.82194519 250.99816895]
[106.89601135 263.60882568]
[108.56755829 278.51541138]
[112.10723114 293.09176636]
[115.64689636 307.66815186]
[119.18656921 322.24453735]
[123.80058289 336.51727295]
[129.46336365 350.40728760]
[135.12615967 364.29730225]
[140.78894043 378.18734741]
[146.45172119 392.07736206]
[161.24826050 389.31195068]
[176.29856873 389.58197021]
[190.98637390 392.87643433]
[204.71018982 399.06042480]
[216.90806580 407.88064575]
[227.08049011 418.97601318]
[234.81091309 431.89208984]
[239.78277588 446.10003662]
[241.79248047 461.01800537]
[240.75773621 476.03515625]
[236.72091675 490.53649902]
[229.84732056 503.92822266]
[220.41841125 515.66198730]
[208.82032776 525.25720215]
[195.52796936 532.32110596]
[181.08566284 536.56427002]
[166.08482361 537.81311035]
[151.13969421 536.01629639]
[136.86230469 531.24755859]
[123.83728790 523.70208740]
[112.59801483 513.68896484]
[103.60472107 501.61810303]
[97.22567749 487.98385620]
[93.72209930 473.34451294]
[93.23746490 458.29959106]
[95.79161835 443.46511841]
[101.27996063 429.44860840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[17 178]
[18 177]
[19 176]
[20 175]
[38 174]
[40 172]
[41 171]
[43 169]
[44 168]
[45 166]
[46 165]
[47 163]
[48 162]
[49 161]
[53 160]
[54 159]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[67 145]
[68 144]
[69 143]
[70 139]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[85 124]
[86 123]
[87 122]
[88 121]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
