%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[124.10835266 822.18591309]
[109.39134216 819.25982666]
[94.88954926 815.40618896]
[80.66136169 810.64050293]
[66.76408386 804.98205566]
[53.25366974 798.45355225]
[40.18451691 791.08135986]
[27.60925674 782.89508057]
[15.57852077 773.92767334]
[4.14075661 764.21533203]
[-6.65798187 753.79705811]
[-16.77420998 742.71490479]
[-26.16719437 731.01342773]
[-34.79911423 718.73980713]
[-42.63520432 705.94335938]
[-49.64392090 692.67572021]
[-55.79703522 678.99029541]
[-61.06977463 664.94213867]
[-65.44090271 650.58782959]
[-68.89282227 635.98516846]
[-71.41163635 621.19299316]
[-72.98719788 606.27087402]
[-73.61315918 591.27886963]
[-73.28701019 576.27734375]
[-72.01005554 561.32666016]
[-69.78743744 546.48712158]
[-66.62811279 531.81842041]
[-62.54479599 517.37957764]
[-57.55393219 503.22885132]
[-51.67561722 489.42312622]
[-44.93352127 476.01803589]
[-37.35479355 463.06753540]
[-28.96994781 450.62377930]
[-19.81275177 438.73687744]
[-9.92007542 427.45471191]
[0.66824591 416.82269287]
[11.90957642 406.88360596]
[23.75865173 397.67755127]
[36.16775894 389.24151611]
[49.08692932 381.60949707]
[62.46414185 374.81225586]
[76.24552917 368.87710571]
[90.37560272 363.82800293]
[104.79747009 359.68524170]
[119.45304108 356.46551514]
[134.28332520 354.18179321]
[132.94508362 339.24160767]
[131.60685730 324.30142212]
[130.26861572 309.36123657]
[128.59707642 294.45468140]
[126.59306335 279.58914185]
[124.58905029 264.72360229]
[115.22074127 253.14414978]
[121.04496002 238.43397522]
[118.48912811 223.65332031]
[115.38501740 208.97802734]
[112.28090668 194.30271912]
[109.17679596 179.62742615]
[106.07268524 164.95211792]
[102.96857452 150.27680969]
[99.86446381 135.60151672]
[89.66086578 124.75090790]
[94.37486267 109.64829254]
[91.16158295 94.99650574]
[87.83932495 80.36904907]
[77.23767090 68.62530518]
[81.96392059 54.50043869]
[78.64166260 39.87297821]
[75.31940460 25.24551773]
[71.99714661 10.61805820]
[58.90736008 2.17440462]
[55.74649048 -12.70724678]
[63.87689209 -25.13432121]
[60.55463028 -39.76177979]
[57.23237228 -54.38924026]
[53.91011429 -69.01670074]
[43.82919312 -57.90926743]
[28.85074043 -58.71300125]
[20.01631546 -70.83541107]
[23.83832359 -85.34031677]
[37.49932480 -91.53524017]
[50.92791748 -84.85480499]
[48.70280075 -99.68885040]
[46.47768402 -114.52289581]
[36.71408844 -103.13552856]
[21.76928139 -101.84990692]
[10.20433331 -111.40249634]
[8.64416790 -126.32113647]
[17.98251915 -138.05975342]
[32.86995697 -139.89393616]
[44.77779770 -130.77380371]
[43.88498306 -145.74720764]
[42.99216843 -160.72061157]
[28.26783371 -164.09266663]
[15.09063148 -171.47764587]
[4.52877378 -182.27690125]
[-2.56153512 -195.61497498]
[-5.60551596 -210.41059875]
[-4.35640717 -225.46438599]
[1.08453238 -239.55598450]
[10.27622986 -251.54302979]
[22.47355461 -260.45379639]
[36.68772507 -265.56594849]
[51.76646042 -266.46505737]
[66.48739624 -263.07821655]
[79.65718079 -255.67999268]
[90.20818329 -244.87013245]
[97.28508759 -231.52494812]
[100.31420135 -216.72625732]
[99.04997253 -201.67373657]
[93.59487915 -187.58761597]
[84.39114380 -175.60981750]
[72.18487549 -166.71128845]
[57.96557236 -161.61343384]
[58.85838699 -146.64001465]
[59.75120544 -131.66661072]
[61.31172943 -116.74800873]
[63.53684616 -101.91397095]
[65.76196289 -87.07992554]
[68.53757477 -72.33895874]
[71.85983276 -57.71150208]
[75.18209076 -43.08404160]
[78.50434875 -28.45658112]
[91.20515442 -20.76078987]
[94.78277588 -5.97379255]
[86.62460327 7.29579878]
[89.94686127 21.92325974]
[93.26912689 36.55072021]
[96.59138489 51.17818069]
[106.95540619 61.87566757]
[102.46678925 77.04679108]
[105.78904724 91.67424774]
[110.50341797 98.21238708]
[109.05016327 106.54418182]
[119.47579193 118.44447327]
[114.53977203 132.49740601]
[117.64388275 147.17269897]
[120.74799347 161.84800720]
[123.85209656 176.52331543]
[126.95620728 191.19860840]
[130.06031799 205.87391663]
[133.16442871 220.54922485]
[143.40960693 209.59310913]
[158.37443542 210.61975098]
[167.02738953 222.87236023]
[162.98985291 237.31874084]
[149.23812866 243.30958557]
[135.91049194 236.42996216]
[145.42213440 249.07270813]
[139.45457458 262.71960449]
[141.45858765 277.58511353]
[143.46260071 292.45065308]
[146.65449524 296.58090210]
[147.82579041 301.07327271]
[147.17691040 305.09744263]
[145.20880127 308.02301025]
[146.54704285 322.96319580]
[147.88526917 337.90338135]
[149.22351074 352.84356689]
[164.22357178 352.45529175]
[179.21804810 353.01919556]
[194.14657593 354.53292847]
[208.94905090 356.99047852]
[223.56584167 360.38189697]
[237.93811035 364.69357300]
[252.00798035 369.90808105]
[265.71881104 376.00448608]
[279.01535034 382.95822144]
[291.84411621 390.74124146]
[304.15338135 399.32226562]
[315.89364624 408.66671753]
[327.01760864 418.73696899]
[337.48046875 429.49249268]
[347.24011230 440.88995361]
[356.25723267 452.88345337]
[364.49554443 465.42468262]
[371.92181396 478.46322632]
[378.50619507 491.94647217]
[384.22213745 505.82022095]
[389.04666138 520.02856445]
[392.96029663 534.51422119]
[395.94732666 549.21899414]
[397.99572754 564.08361816]
[399.09719849 579.04821777]
[399.24734497 594.05255127]
[398.44552612 609.03619385]
[396.69503784 623.93884277]
[394.00286865 638.70043945]
[390.37988281 653.26153564]
[385.84066772 667.56359863]
[380.40347290 681.54895020]
[374.09024048 695.16125488]
[366.92636108 708.34576416]
[358.94070435 721.04937744]
[350.16537476 733.22094727]
[340.63577271 744.81140137]
[330.39022827 755.77410889]
[319.47003174 766.06494141]
[307.91909790 775.64245605]
[295.78399658 784.46813965]
[283.11358643 792.50634766]
[269.95883179 799.72473145]
[256.37277222 806.09429932]
[242.41006470 811.58929443]
[228.12695312 816.18774414]
[213.58094788 819.87097168]
[198.83062744 822.62420654]
[183.93537903 824.43640137]
[168.95516968 825.30023193]
[153.95034790 825.21221924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 159]
[47 158]
[48 157]
[49 156]
[50 152]
[51 151]
[52 150]
[54 148]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[63 134]
[64 132]
[65 131]
[67 129]
[68 128]
[69 127]
[70 126]
[73 123]
[74 122]
[75 121]
[76 120]
[82 119]
[83 118]
[84 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
