%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCU\
) } def
/len { sequence length } bind def

/coor [
[81.81008148 575.71405029]
[67.90613556 570.05303955]
[54.62403107 563.05639648]
[42.09167480 554.79162598]
[30.42977333 545.33819580]
[19.75063515 534.78723145]
[10.15710926 523.24035645]
[1.74158919 510.80871582]
[-5.41487741 497.61206055]
[-11.24336720 483.77746582]
[-15.68774796 469.43820190]
[-18.70521736 454.73239136]
[-20.26671219 439.80157471]
[-20.35719681 424.78964233]
[-18.97579956 409.84109497]
[-16.13582230 395.09997559]
[-11.86461830 380.70816040]
[-6.20332193 366.80435181]
[0.79354447 353.52236938]
[9.05859470 340.99020386]
[18.51223183 329.32849121]
[29.06340599 318.64953613]
[40.61050415 309.05624390]
[53.04231644 300.64099121]
[66.23912048 293.48477173]
[80.07381439 287.65655518]
[94.41315460 283.21246338]
[109.11905670 280.19528198]
[107.55853271 265.27670288]
[105.99800873 250.35809326]
[102.17569733 244.03260803]
[104.52700806 235.20599365]
[103.18877411 220.26580811]
[101.85054016 205.32562256]
[100.51230621 190.38543701]
[88.95352936 181.06179810]
[87.38353729 165.92938232]
[97.24140167 153.86869812]
[95.90316772 138.92851257]
[94.56493378 123.98832703]
[93.22669983 109.04814148]
[84.39836121 121.17498779]
[70.16405487 125.90622711]
[55.83283234 121.47722626]
[46.74988174 109.53988647]
[46.30292130 94.54654694]
[54.65865326 82.08934784]
[68.70059967 76.81452179]
[83.19145203 80.68944550]
[92.72692871 92.26995087]
[93.17353058 77.27659607]
[93.62014008 62.28324890]
[84.51801300 46.27597427]
[94.31655121 31.71728134]
[94.53987885 16.71894264]
[94.76320648 1.72060561]
[94.98653412 -13.27773190]
[92.73802185 -16.99231720]
[91.87526703 -20.84201622]
[92.27058411 -24.37459564]
[93.66254425 -27.22574806]
[95.69620514 -29.15509224]
[96.81185150 -44.11354446]
[97.92749786 -59.07199860]
[99.04315186 -74.03044891]
[84.19763947 -76.22329712]
[69.54905701 -79.48164368]
[55.17377853 -83.78851318]
[41.14675140 -89.12145233]
[27.54110146 -95.45264435]
[14.42776680 -102.74909973]
[1.87511373 -110.97276306]
[-10.05141258 -120.08076477]
[-21.28963280 -130.02561951]
[-31.78095436 -140.75549316]
[-41.47068024 -152.21441650]
[-50.30829239 -164.34265137]
[-58.24771881 -177.07699585]
[-65.24755859 -190.35102844]
[-71.27132416 -204.09555054]
[-76.28760529 -218.23890686]
[-80.27025604 -232.70736694]
[-83.19850159 -247.42549133]
[-85.05709076 -262.31655884]
[-85.83631897 -277.30288696]
[-85.53212738 -292.30639648]
[-84.14611053 -307.24884033]
[-81.68548584 -322.05233765]
[-78.16307831 -336.63967896]
[-73.59726715 -350.93481445]
[-68.01184082 -364.86322021]
[-61.43592453 -378.35229492]
[-53.90380859 -391.33169556]
[-45.45475769 -403.73376465]
[-36.13282013 -415.49383545]
[-25.98659897 -426.55059814]
[-15.06899261 -436.84640503]
[-3.43692017 -446.32757568]
[8.84897423 -454.94470215]
[21.72463608 -462.65280151]
[35.12293625 -469.41174316]
[48.97402191 -475.18627930]
[63.20568085 -479.94628906]
[77.74371338 -483.66696167]
[92.51232910 -486.32888794]
[107.43451691 -487.91818237]
[122.43249512 -488.42660522]
[137.42805481 -487.85147095]
[152.34303284 -486.19580078]
[167.09965515 -483.46817017]
[181.62098694 -479.68286133]
[195.83132935 -474.85958862]
[209.65658569 -469.02349854]
[223.02468872 -462.20501709]
[235.86593628 -454.43969727]
[248.11337280 -445.76800537]
[259.70315552 -436.23519897]
[270.57482910 -425.89093018]
[280.67178345 -414.78912354]
[289.94128418 -402.98770142]
[298.33508301 -390.54815674]
[305.80938721 -377.53536987]
[312.32522583 -364.01718140]
[317.84863281 -350.06405640]
[322.35079956 -335.74874878]
[325.80828857 -321.14587402]
[328.20300293 -306.33160400]
[329.52255249 -291.38311768]
[329.75997925 -276.37841797]
[328.91409302 -261.39569092]
[326.98928833 -246.51306152]
[323.99557495 -231.80810547]
[319.94860840 -217.35751343]
[314.86944580 -203.23660278]
[308.78457642 -189.51901245]
[301.72576904 -176.27624512]
[293.72976685 -163.57736206]
[284.83828735 -151.48855591]
[275.09768677 -140.07284546]
[264.55871582 -129.38977051]
[253.27636719 -119.49501038]
[241.30943298 -110.44015503]
[228.72032166 -102.27241516]
[215.57466125 -95.03437805]
[201.94097900 -88.76377106]
[187.89036560 -83.49329376]
[173.49606323 -79.25041962]
[158.83312988 -76.05727386]
[143.97801208 -73.93049622]
[129.00814819 -72.88118744]
[114.00160217 -72.91480255]
[112.88595581 -57.95634842]
[111.77030182 -42.99789810]
[110.65465546 -28.03944206]
[109.98487091 -13.05440426]
[109.76154327 1.94393337]
[109.53821564 16.94227028]
[109.31488800 31.94060898]
[117.51231384 40.83604431]
[117.44900513 53.33323288]
[108.61348724 62.72985458]
[108.16688538 77.72320557]
[107.72027588 92.71655273]
[108.16688538 107.70990753]
[109.50511932 122.65009308]
[110.84335327 137.59027100]
[112.18158722 152.53045654]
[124.02594757 162.64723206]
[125.17027283 177.81776428]
[115.45249176 189.04719543]
[116.79072571 203.98738098]
[118.12895966 218.92756653]
[119.46719360 233.86775208]
[120.91661072 248.79756165]
[122.47713470 263.71615601]
[124.03765869 278.63476562]
[139.04960632 278.54339600]
[153.99821472 279.92388916]
[168.73953247 282.76296997]
[183.13157654 287.03332520]
[197.03575134 292.69378662]
[210.31813049 299.68984985]
[222.85081482 307.95416260]
[234.51309204 317.40710449]
[245.19265747 327.95761108]
[254.78665161 339.50415039]
[263.20266724 351.93545532]
[270.35964966 365.13183594]
[276.18869019 378.96618652]
[280.63366699 393.30523682]
[283.65170288 408.01095581]
[285.21380615 422.94168091]
[285.30490112 437.95364380]
[283.92410278 452.90222168]
[281.08471680 467.64349365]
[276.81408691 482.03543091]
[271.15332031 495.93951416]
[264.15701294 509.22174072]
[255.89245605 521.75427246]
[246.43928528 533.41638184]
[235.88853455 544.09570312]
[224.34181213 553.68945312]
[211.91033936 562.10522461]
[198.71382141 569.26196289]
[184.87936401 575.09075928]
[170.54019165 579.53540039]
[155.83442688 582.55316162]
[140.90365601 584.11492920]
[125.89171600 584.20574951]
[110.94315338 582.82464600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 176]
[29 175]
[30 174]
[32 173]
[33 172]
[34 171]
[35 170]
[38 167]
[39 166]
[40 165]
[41 164]
[50 163]
[51 162]
[52 161]
[54 158]
[55 157]
[56 156]
[57 155]
[62 154]
[63 153]
[64 152]
[65 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
