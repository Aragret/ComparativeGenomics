%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[102.74116516 259.53253174]
[86.35837555 258.80026245]
[79.04230499 244.12350464]
[88.31909180 230.60044861]
[88.98887634 215.61541748]
[89.65866089 200.63037109]
[90.32845306 185.64533997]
[90.77505493 170.65197754]
[90.99838257 155.65364075]
[91.22171021 140.65530396]
[91.44503784 125.65697479]
[91.66836548 110.65863800]
[84.82483673 124.00652313]
[75.46700287 135.72961426]
[63.96759033 145.36099243]
[50.78461075 152.51704407]
[36.44313431 156.91273499]
[21.51438332 158.37300110]
[6.59295988 156.83966064]
[-7.72682047 152.37380981]
[-20.87460709 145.15328979]
[-32.32672501 135.46572876]
[-41.62704849 123.69695282]
[-48.40513992 110.31571960]
[-52.39103699 95.85499573]
[-53.42598343 80.89073944]
[-51.46875000 66.01898193]
[-46.59730148 51.83205032]
[-39.00566101 38.89501190]
[-28.99620247 27.72313881]
[-16.96759796 18.76140404]
[-3.39894295 12.36675167]
[11.16932964 8.79387665]
[26.15697098 8.18508625]
[40.96702576 10.56462669]
[55.00962067 15.83772373]
[67.72544098 23.79435158]
[78.60802460 34.11759949]
[87.22391510 46.39629745]
[93.22994995 60.14138794]
[96.38690948 74.80541229]
[96.56941986 89.80014801]
[103.04891205 76.27179718]
[109.52841187 62.74345398]
[116.00790405 49.21510696]
[122.48740387 35.68676376]
[128.96690369 22.15841675]
[127.94992065 6.36992979]
[140.42585754 -1.76641202]
[146.90536499 -15.29475784]
[133.67466736 -22.36742973]
[120.76976776 -30.01841736]
[108.21593475 -38.23274612]
[96.03773499 -46.99433136]
[84.25901031 -56.28602219]
[72.90281677 -66.08963776]
[61.99138641 -76.38597107]
[51.54607773 -87.15488434]
[41.58733749 -98.37528992]
[32.13466263 -110.02521515]
[23.20655441 -122.08186340]
[14.82049179 -134.52163696]
[6.99289036 -147.32017517]
[-0.26092684 -160.45242310]
[-6.92676020 -173.89268494]
[-12.99156094 -187.61463928]
[-18.44345665 -201.59143066]
[-23.27177429 -215.79570007]
[-27.46706390 -230.19964600]
[-31.02111244 -244.77505493]
[-33.92695999 -259.49340820]
[-36.17892456 -274.32589722]
[-37.77259064 -289.24346924]
[-38.70484161 -304.21694946]
[-38.97385406 -319.21701050]
[-38.57909775 -334.21426392]
[-37.52135086 -349.17941284]
[-35.80268097 -364.08309937]
[-33.42644882 -378.89617920]
[-30.39731026 -393.58966064]
[-26.72119522 -408.13476562]
[-22.40529823 -422.50302124]
[-17.45806885 -436.66632080]
[-11.88919163 -450.59692383]
[-5.70956707 -464.26754761]
[1.06870747 -477.65145874]
[8.43236351 -490.72241211]
[16.36698532 -503.45489502]
[24.85704231 -515.82391357]
[33.88591385 -527.80529785]
[43.43592453 -539.37554932]
[53.48838043 -550.51208496]
[64.02359772 -561.19305420]
[75.02096558 -571.39758301]
[86.45895386 -581.10559082]
[98.31515503 -590.29821777]
[110.56638336 -598.95739746]
[123.18863678 -607.06622314]
[136.15722656 -614.60876465]
[149.44674683 -621.57025146]
[163.03118896 -627.93713379]
[176.88397217 -633.69683838]
[190.97795105 -638.83819580]
[205.28556824 -643.35107422]
[219.77879333 -647.22662354]
[234.42927551 -650.45733643]
[249.20831299 -653.03686523]
[264.08700562 -654.96014404]
[279.03616333 -656.22338867]
[294.02661133 -656.82409668]
[309.02893066 -656.76123047]
[324.01379395 -656.03472900]
[338.95187378 -654.64617920]
[353.81390381 -652.59820557]
[368.57077026 -649.89483643]
[383.19363403 -646.54132080]
[397.65386963 -642.54431152]
[411.92312622 -637.91162109]
[425.97348022 -632.65222168]
[439.77746582 -626.77655029]
[453.30804443 -620.29595947]
[466.53869629 -613.22326660]
[479.44357300 -605.57220459]
[491.99737549 -597.35784912]
[504.17553711 -588.59619141]
[515.95422363 -579.30450439]
[527.31042480 -569.50085449]
[538.22180176 -559.20446777]
[548.66705322 -548.43548584]
[558.62573242 -537.21508789]
[568.07836914 -525.56512451]
[577.00646973 -513.50842285]
[585.39245605 -501.06860352]
[593.22003174 -488.27005005]
[600.47381592 -475.13778687]
[607.13958740 -461.69747925]
[613.20434570 -447.97549438]
[618.65618896 -433.99868774]
[623.48443604 -419.79440308]
[627.67968750 -405.39044189]
[631.23370361 -390.81503296]
[634.13946533 -376.09664917]
[636.39135742 -361.26416016]
[637.98498535 -346.34658813]
[638.91717529 -331.37310791]
[639.18615723 -316.37304688]
[638.79132080 -301.37579346]
[637.73352051 -286.41067505]
[636.01483154 -271.50698853]
[633.63854980 -256.69390869]
[630.60931396 -242.00044250]
[626.93316650 -227.45533752]
[622.61724854 -213.08709717]
[617.66992188 -198.92382812]
[612.10101318 -184.99324036]
[605.92132568 -171.32263184]
[599.14300537 -157.93875122]
[591.77929688 -144.86779785]
[583.84466553 -132.13536072]
[575.35455322 -119.76637268]
[566.32562256 -107.78502655]
[556.77557373 -96.21478271]
[546.72308350 -85.07830048]
[536.18780518 -74.39737701]
[525.19042969 -64.19291687]
[513.75238037 -54.48489380]
[501.89614868 -45.29231644]
[489.64489746 -36.63317871]
[477.02261353 -28.52443123]
[464.05398560 -20.98194504]
[450.76446533 -14.02048969]
[437.17999268 -7.65368843]
[423.32717896 -1.89400649]
[409.23318481 3.24728179]
[394.92553711 7.76011229]
[380.43231201 11.63565063]
[365.78182983 14.86630917]
[351.00277710 17.44576645]
[336.12408447 19.36897087]
[321.17489624 20.63215637]
[306.18444824 21.23285484]
[291.18212891 21.16988564]
[276.19726562 20.44337463]
[261.25921631 19.05474281]
[246.39718628 17.00671005]
[231.64031982 14.30328465]
[217.01747131 10.94975758]
[202.55726624 6.95269442]
[188.28802490 2.31991982]
[174.23767090 -2.93949747]
[160.43370056 -8.81526184]
[153.95420837 4.71308374]
[155.43464661 19.53393364]
[142.49523926 28.63791275]
[136.01574707 42.16625977]
[129.53625488 55.69460297]
[123.05675507 69.22294617]
[116.57726288 82.75129700]
[110.09776306 96.27964020]
[106.66670227 110.88196564]
[106.44337463 125.88030243]
[106.22004700 140.87863159]
[105.99671936 155.87696838]
[105.77339172 170.87530518]
[108.65467834 176.82591248]
[108.17089844 182.48834229]
[105.31349182 186.31512451]
[104.64369965 201.30015564]
[103.97391510 216.28520203]
[103.30413055 231.27023315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[42 199]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[49 192]
[50 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
