%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[120.52781677 696.85443115]
[106.62426758 691.20416260]
[93.20689392 684.48046875]
[80.35842896 676.72479248]
[68.15807343 667.98492432]
[56.68106079 658.31469727]
[45.99814606 647.77386475]
[36.17518997 636.42736816]
[27.27276230 624.34509277]
[19.34574509 611.60162354]
[12.44301510 598.27545166]
[6.60712862 584.44879150]
[1.87406683 570.20690918]
[-1.72698915 555.63751221]
[-4.17383718 540.83050537]
[-5.45139170 525.87719727]
[-5.55177593 510.86972046]
[-4.47437096 495.90066528]
[-2.22581911 481.06225586]
[1.18001604 466.44601440]
[5.72213602 452.14205933]
[11.37253666 438.23855591]
[18.09638214 424.82125854]
[25.85221481 411.97286987]
[34.59222031 399.77261353]
[44.26250839 388.29568481]
[54.80346298 377.61288452]
[66.15008545 367.79003906]
[78.23242950 358.88772583]
[90.97600555 350.96084595]
[104.30223083 344.05825806]
[118.12894440 338.22250366]
[132.37091064 333.48959351]
[146.94032288 329.88870239]
[144.49459839 315.08941650]
[142.04885864 300.29016113]
[139.38307190 285.52893066]
[136.49780273 270.80905151]
[133.61251831 256.08914185]
[130.72724915 241.36926270]
[127.62313843 226.69395447]
[124.30088043 212.06649780]
[120.54457855 197.54443359]
[116.35756683 183.14065552]
[112.17055511 168.73687744]
[107.98354340 154.33308411]
[103.79653168 139.92930603]
[99.60951996 125.52552795]
[95.42251587 111.12174225]
[91.02151489 96.78189850]
[86.40750885 82.50916290]
[81.79349518 68.23642731]
[77.17948914 53.96369553]
[72.56547546 39.69096375]
[59.94737244 34.97949219]
[52.45602417 24.02092361]
[52.64136505 10.94240284]
[60.21170044 0.51553655]
[55.81070328 -13.82431030]
[51.40970612 -28.16415787]
[47.00870895 -42.50400543]
[33.32716751 -49.95069885]
[29.06820679 -64.55603790]
[36.25180435 -77.55339813]
[31.85080719 -91.89324951]
[27.44981003 -106.23309326]
[23.04881096 -120.57294464]
[20.50511932 -105.79019165]
[14.11736488 -92.21829224]
[4.34668827 -80.83699799]
[-8.10155869 -72.46793365]
[-22.32872581 -67.71527863]
[-37.30774307 -66.92213440]
[-51.95725632 -70.14574432]
[-65.21971130 -77.15340424]
[-76.13768005 -87.43921661]
[-83.92298126 -100.26064301]
[-88.01358795 -114.69210052]
[-88.11419678 -129.69177246]
[-84.21754456 -144.17678833]
[-76.60493469 -157.10150146]
[-65.82592773 -167.53285217]
[-52.65866852 -174.71778870]
[-38.05371094 -178.13761902]
[-23.06540489 -177.54547119]
[-8.77576447 -172.98410034]
[3.78362751 -164.78277588]
[13.70609665 -153.53356934]
[20.27569771 -140.04747009]
[20.49902534 -155.04580688]
[20.72235298 -170.04414368]
[20.94568062 -185.04248047]
[21.16900826 -200.04081726]
[6.55700588 -203.72674561]
[-6.81081438 -210.68362427]
[-18.21354294 -220.53627014]
[-27.03624535 -232.75332642]
[-32.80312347 -246.67596436]
[-35.20317841 -261.55334473]
[-34.10697556 -276.58316040]
[-29.57363510 -290.95483398]
[-21.84763336 -303.89337158]
[-11.34562111 -314.70098877]
[1.36603785 -322.79483032]
[15.60182190 -327.73843384]
[30.59401131 -329.26519775]
[45.53409958 -327.29275513]
[59.61638260 -321.92749023]
[72.08142090 -313.45874023]
[82.25699615 -302.34323120]
[89.59434509 -289.18041992]
[93.69777679 -274.68011475]
[94.34600067 -259.62432861]
[91.50405121 -244.82501221]
[85.32520294 -231.08024597]
[76.14266205 -219.13128662]
[64.45163727 -209.62251282]
[50.88261414 -203.06672668]
[36.16734695 -199.81748962]
[35.94401932 -184.81915283]
[35.72069168 -169.82081604]
[35.49736404 -154.82247925]
[35.27403641 -139.82414246]
[37.38866043 -124.97393799]
[41.78965759 -110.63409424]
[46.19065475 -96.29424286]
[50.59165192 -81.95439911]
[63.82966614 -75.22457123]
[68.49717712 -60.74461746]
[61.34855270 -46.90500259]
[65.74954987 -32.56515503]
[70.15055084 -18.22530937]
[74.55155182 -3.88546157]
[89.73239136 3.35200286]
[95.08712006 19.65052223]
[86.83821106 35.07695389]
[91.45221710 49.34968567]
[96.06623077 63.62242126]
[100.68023682 77.89515686]
[105.29425049 92.16788483]
[109.30242157 95.55144501]
[111.12953186 100.93985748]
[109.82629395 106.93473053]
[114.01330566 121.33851624]
[118.20031738 135.74229431]
[122.38732910 150.14607239]
[126.57434082 164.54986572]
[130.76135254 178.95364380]
[134.94836426 193.35742188]
[138.18777466 196.24880981]
[140.14205933 199.67596436]
[140.80059814 203.16905212]
[140.30642700 206.30313110]
[138.92834473 208.74423218]
[142.25059509 223.37168884]
[146.45472717 228.47433472]
[147.32081604 234.09098816]
[145.44714355 238.48397827]
[148.33241272 253.20387268]
[151.21768188 267.92376709]
[154.10296631 282.64364624]
[158.15330505 287.86920166]
[158.85177612 293.50915527]
[156.84812927 297.84442139]
[159.29386902 312.64370728]
[161.73959351 327.44296265]
[176.69287109 326.16494751]
[191.70033264 326.06411743]
[206.66944885 327.14105225]
[221.50791931 329.38916016]
[236.12425232 332.79452515]
[250.42835999 337.33621216]
[264.33203125 342.98620605]
[277.74954224 349.70962524]
[290.59814453 357.46505737]
[302.79867554 366.20471191]
[314.27590942 375.87463379]
[324.95904541 386.41525269]
[334.78222656 397.76159668]
[343.68490601 409.84365845]
[351.61218262 422.58697510]
[358.51516724 435.91299438]
[364.35134888 449.73953247]
[369.08468628 463.98135376]
[372.68603516 478.55065918]
[375.13320923 493.35760498]
[376.41107178 508.31091309]
[376.51174927 523.31835938]
[375.43466187 538.28747559]
[373.18640137 553.12591553]
[369.78085327 567.74218750]
[365.23904419 582.04626465]
[359.58892822 595.94989014]
[352.86535645 609.36730957]
[345.10977173 622.21588135]
[336.37002563 634.41632080]
[326.69995117 645.89343262]
[316.15924072 656.57641602]
[304.81280518 666.39953613]
[292.73065186 675.30206299]
[279.98724365 683.22918701]
[266.66116333 690.13208008]
[252.83454895 695.96807861]
[238.59268188 700.70129395]
[224.02334595 704.30249023]
[209.21638489 706.74951172]
[194.26307678 708.02722168]
[179.25559998 708.12774658]
[164.28651428 707.05047607]
[149.44808960 704.80212402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 166]
[35 165]
[36 164]
[37 161]
[38 160]
[39 159]
[40 158]
[41 155]
[42 154]
[43 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[58 133]
[59 132]
[60 131]
[61 130]
[64 127]
[65 126]
[66 125]
[67 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
