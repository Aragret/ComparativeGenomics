%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[98.14546204 512.58306885]
[85.45397949 520.59936523]
[72.06759644 527.39190674]
[58.10395432 532.90112305]
[43.68577957 537.07855225]
[28.93977928 539.88745117]
[13.99554062 541.30316162]
[-1.01560116 541.31317139]
[-15.96172428 539.91754150]
[-30.71147919 537.12841797]
[-45.13524246 532.97033691]
[-59.10625076 527.47985840]
[-72.50173187 520.70526123]
[-85.20394897 512.70599365]
[-97.10128784 503.55239868]
[-108.08918762 493.32495117]
[-118.07107544 482.11352539]
[-126.95923615 470.01663208]
[-134.67555237 457.14056396]
[-141.15222168 443.59851074]
[-146.33232117 429.50946045]
[-150.17031860 414.99725342]
[-152.63249207 400.18942261]
[-153.69721985 385.21609497]
[-153.35510254 370.20883179]
[-151.60919189 355.29956055]
[-148.47479248 340.61932373]
[-143.97949219 326.29705811]
[-138.16275024 312.45870972]
[-131.07572937 299.22586060]
[-122.78067780 286.71478271]
[-113.35051727 275.03546143]
[-102.86811066 264.29052734]
[-91.42557526 254.57441711]
[-79.12348938 245.97250366]
[-66.06994629 238.56037903]
[-52.37967300 232.40319824]
[-38.17298508 227.55505371]
[-23.57472801 224.05857849]
[-8.71319962 221.94447327]
[6.28099632 221.23132324]
[21.27608681 221.92541504]
[36.14028931 224.02062988]
[50.74297714 227.49855042]
[55.56897354 213.29609680]
[52.33784866 198.75617981]
[64.10373688 188.17910767]
[68.92973328 173.97665405]
[73.75572968 159.77420044]
[78.36973572 145.50146484]
[82.77073669 131.16162109]
[87.17173767 116.82176971]
[91.57273102 102.48191833]
[90.37809753 99.67793274]
[90.17732239 96.37728882]
[91.15630341 92.94727325]
[93.36269379 89.81867981]
[96.68610382 87.43374634]
[101.93282318 73.38127136]
[107.17954254 59.32880020]
[112.42626190 45.27632904]
[117.67298126 31.22385979]
[122.91970062 17.17138863]
[122.05408478 12.02378559]
[123.14088440 7.51023245]
[125.61163330 4.26824760]
[128.72721863 2.61734700]
[134.59617615 -11.18682957]
[132.87521362 -26.91415787]
[144.97541809 -35.59946442]
[131.56665039 -42.33426666]
[118.61203003 -49.90594482]
[106.16371918 -58.28401566]
[94.27184296 -67.43474579]
[82.98428345 -77.32128143]
[72.34649658 -87.90381622]
[62.40131378 -99.13973236]
[53.18878555 -110.98379517]
[44.74600220 -123.38830566]
[37.10696411 -136.30332947]
[30.30243111 -149.67683411]
[24.35979843 -163.45500183]
[19.30299950 -177.58232117]
[15.15239525 -192.00192261]
[11.92469883 -206.65574646]
[9.63290596 -221.48478699]
[8.28624630 -236.42930603]
[7.89014149 -251.42916870]
[8.44618702 -266.42395020]
[9.95214367 -281.35327148]
[12.40194798 -296.15701294]
[15.78573513 -310.77557373]
[20.08987999 -325.15011597]
[25.29705048 -339.22268677]
[31.38627815 -352.93670654]
[38.33304596 -366.23687744]
[46.10937881 -379.06970215]
[54.68396759 -391.38348389]
[64.02228546 -403.12860107]
[74.08672333 -414.25784302]
[84.83676147 -424.72631836]
[96.22911072 -434.49191284]
[108.21789551 -443.51531982]
[120.75484467 -451.76016235]
[133.78947449 -459.19323730]
[147.26930237 -465.78466797]
[161.14004517 -471.50787354]
[175.34584045 -476.33981323]
[189.82951355 -480.26104736]
[204.53271484 -483.25573730]
[219.39625549 -485.31188965]
[234.36027527 -486.42120361]
[249.36453247 -486.57919312]
[264.34860229 -485.78521729]
[279.25213623 -484.04251099]
[294.01513672 -481.35806274]
[308.57815552 -477.74267578]
[322.88253784 -473.21093750]
[336.87072754 -467.78106689]
[350.48635864 -461.47494507]
[363.67462158 -454.31796265]
[376.38238525 -446.33892822]
[388.55853271 -437.56997681]
[400.15396118 -428.04641724]
[411.12203979 -417.80661011]
[421.41860962 -406.89178467]
[431.00216675 -395.34588623]
[439.83413696 -383.21539307]
[447.87896729 -370.54916382]
[455.10424805 -357.39819336]
[461.48089600 -343.81546021]
[466.98321533 -329.85562134]
[471.58908081 -315.57492065]
[475.27993774 -301.03085327]
[478.04092407 -286.28198242]
[479.86090088 -271.38766479]
[480.73257446 -256.40792847]
[480.65240479 -241.40306091]
[479.62069702 -226.43348694]
[477.64166260 -211.55947876]
[474.72323608 -196.84094238]
[470.87719727 -182.33714294]
[466.11898804 -168.10646057]
[460.46780396 -154.20622253]
[453.94635010 -140.69239807]
[446.58096313 -127.61940002]
[438.40124512 -115.03986359]
[429.44015503 -103.00444031]
[419.73376465 -91.56159973]
[409.32116699 -80.75741577]
[398.24429321 -70.63539886]
[386.54772949 -61.23629761]
[374.27859497 -52.59796524]
[361.48629761 -44.75518799]
[348.22229004 -37.73953629]
[334.54006958 -31.57927132]
[320.49465942 -26.29919052]
[306.14266968 -21.92055702]
[291.54183960 -18.46100426]
[276.75097656 -15.93446159]
[261.82968140 -14.35110188]
[246.83798218 -13.71730042]
[231.83628845 -14.03561115]
[216.88496399 -15.30475044]
[202.04425049 -17.51960945]
[187.37388611 -20.67126846]
[172.93295288 -24.74703789]
[158.77958679 -29.73050499]
[160.92033386 -14.99054337]
[148.40036011 -5.31786919]
[142.53138733 8.48630810]
[136.97216797 22.41810608]
[131.72544861 36.47057724]
[126.47872925 50.52304840]
[121.23201752 64.57552338]
[115.98529816 78.62799072]
[110.73857880 92.68046570]
[105.91258240 106.88291931]
[101.51158142 121.22276306]
[97.11058044 135.56260681]
[92.70958710 149.90246582]
[93.81533051 156.42080688]
[91.77020264 161.72311401]
[87.95818329 164.60018921]
[83.13218689 178.80264282]
[78.30619049 193.00509644]
[81.19213104 208.56086731]
[69.77143097 218.12210083]
[64.94543457 232.32455444]
[78.64394379 238.46337891]
[91.70741272 245.85798645]
[104.02102661 254.44340515]
[115.47657013 264.14416504]
[125.97337341 274.87506104]
[135.41918945 286.54171753]
[143.73100281 299.04165649]
[150.83576965 312.26498413]
[156.67103577 326.09552002]
[161.18554688 340.41174316]
[164.33961487 355.08779907]
[166.10552979 369.99468994]
[166.46774292 385.00146484]
[165.42311096 399.97622681]
[162.98078918 414.78735352]
[159.16224670 429.30468750]
[154.00103760 443.40066528]
[147.54252625 456.95138550]
[139.84347534 469.83776855]
[130.97154236 481.94659424]
[121.00469208 493.17138672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 189]
[45 188]
[47 186]
[48 185]
[49 184]
[50 181]
[51 180]
[52 179]
[53 178]
[58 177]
[59 176]
[60 175]
[61 174]
[62 173]
[63 172]
[67 171]
[68 170]
[70 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
