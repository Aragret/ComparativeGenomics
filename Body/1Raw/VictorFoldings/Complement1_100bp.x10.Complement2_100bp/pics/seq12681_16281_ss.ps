%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[113.36539459 852.83734131]
[98.58129883 850.27893066]
[83.96060181 846.90997314]
[69.54768372 842.74066162]
[55.38633347 837.78375244]
[41.51955414 832.05426025]
[27.98945618 825.56958008]
[14.83713245 818.34936523]
[2.10252595 810.41558838]
[-10.17568874 801.79235840]
[-21.96022224 792.50579834]
[-33.21528625 782.58416748]
[-43.90670013 772.05761719]
[-54.00199127 760.95806885]
[-63.47050095 749.31927490]
[-72.28347778 737.17651367]
[-80.41415405 724.56671143]
[-87.83783722 711.52813721]
[-94.53197479 698.10046387]
[-100.47624969 684.32434082]
[-105.65260315 670.24176025]
[-110.04531097 655.89532471]
[-113.64103699 641.32873535]
[-116.42886353 626.58618164]
[-118.40031433 611.71246338]
[-119.54941559 596.75268555]
[-119.87266541 581.75238037]
[-119.36908722 566.75695801]
[-118.04021454 551.81213379]
[-115.89007568 536.96313477]
[-112.92520142 522.25518799]
[-109.15460205 507.73287964]
[-104.58972168 493.44033813]
[-99.24443054 479.42095947]
[-93.13495636 465.71734619]
[-86.27986145 452.37109375]
[-78.69995117 439.42272949]
[-70.41825867 426.91159058]
[-61.45992661 414.87567139]
[-51.85216522 403.35153198]
[-41.62415314 392.37417603]
[-30.80695343 381.97689819]
[-19.43341637 372.19131470]
[-7.53808212 363.04714966]
[4.84292221 354.57214355]
[17.67199516 346.79208374]
[30.91017723 339.73052979]
[44.51726151 333.40896606]
[58.45192719 327.84658813]
[72.67185211 323.06030273]
[87.13385010 319.06460571]
[101.79399872 315.87167358]
[116.60778046 313.49118042]
[107.58838654 301.63790894]
[113.84799957 287.10766602]
[112.28748322 272.18908691]
[110.72695923 257.27047729]
[95.46730042 252.99626160]
[82.98590088 243.16957092]
[75.21228027 229.27188110]
[73.36257935 213.41683960]
[77.74941254 198.02880859]
[87.72949219 185.47219849]
[101.79778290 177.68814087]
[100.01531219 162.79441833]
[98.23284912 147.90069580]
[96.45037842 133.00698853]
[87.25550842 121.28932190]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[87.67640686 46.48410797]
[86.33817291 31.54392242]
[84.99993896 16.60373878]
[76.06230164 3.54888415]
[82.63327789 -9.81792355]
[73.25412750 -18.67198753]
[72.44708252 -31.14325142]
[80.10050964 -40.51083374]
[78.98486328 -55.46928787]
[77.86921692 -70.42774200]
[68.14755249 -59.00455093]
[53.37913513 -56.37893295]
[40.31588364 -63.75128174]
[34.93014526 -77.75106049]
[39.68420029 -91.97776031]
[52.40456390 -99.92712402]
[67.27565765 -97.96480560]
[77.49934387 -86.98625946]
[70.17635345 -101.01068115]
[78.28916168 -113.50193787]
[78.73576355 -128.49528503]
[79.18237305 -143.48863220]
[79.62898254 -158.48199463]
[80.07558441 -173.47534180]
[65.98290253 -179.05853271]
[54.65172958 -189.12731934]
[47.45037460 -202.46583557]
[45.24842834 -217.46340942]
[48.31179047 -232.30900574]
[56.27053833 -245.20994568]
[68.16362000 -254.60836792]
[82.55489349 -259.36938477]
[97.70652771 -258.91806030]
[111.78890228 -253.30889893]
[123.10149384 -243.21925354]
[130.27825928 -229.86747742]
[132.45256042 -214.86587524]
[129.36184692 -200.02595520]
[121.37933350 -187.13970947]
[109.46895599 -177.76321411]
[95.06893158 -173.02873230]
[94.62232971 -158.03538513]
[94.17572021 -143.04203796]
[93.72911835 -128.04869080]
[93.28250885 -113.05533600]
[100.63744354 -100.10333252]
[92.49269104 -86.53964996]
[92.82766724 -71.54338837]
[93.94331360 -56.58493805]
[95.05896759 -41.62648392]
[105.70668030 -27.67682076]
[97.57345581 -11.15615749]
[106.41537476 0.83007407]
[99.94012451 15.26550388]
[101.27835846 30.20568848]
[102.61659241 45.14587402]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[117.51418304 117.66799164]
[111.34410095 131.22451782]
[113.12656403 146.11824036]
[114.90903473 161.01194763]
[116.69149780 175.90567017]
[130.51100159 179.35133362]
[142.29957581 187.29051208]
[150.65257263 198.75265503]
[154.58308411 212.34889221]
[153.63858032 226.44038391]
[147.95286560 239.33581543]
[138.22753906 249.49438477]
[125.64556122 255.70994568]
[127.20608521 270.62854004]
[128.76660156 285.54714966]
[137.89762878 298.46749878]
[131.52638245 311.93066406]
[146.51213074 311.19403076]
[161.51568604 311.28408813]
[176.49150085 312.20050049]
[191.39408875 313.94052124]
[206.17819214 316.49884033]
[220.79891968 319.86767578]
[235.21186829 324.03686523]
[249.37326050 328.99368286]
[263.24008179 334.72308350]
[276.77023315 341.20770264]
[289.92260742 348.42779541]
[302.65725708 356.36148071]
[314.93551636 364.98464966]
[326.72012329 374.27108765]
[337.97525024 384.19262695]
[348.66674805 394.71911621]
[358.76211548 405.81857300]
[368.23071289 417.45733643]
[377.04376221 429.60003662]
[385.17453003 442.20977783]
[392.59829712 455.24826050]
[399.29254150 468.67593384]
[405.23690796 482.45196533]
[410.41336060 496.53454590]
[414.80618286 510.88092041]
[418.40200806 525.44750977]
[421.18994141 540.19000244]
[423.16149902 555.06378174]
[424.31069946 570.02349854]
[424.63406372 585.02386475]
[424.13058472 600.01922607]
[422.80181885 614.96411133]
[420.65179443 629.81311035]
[417.68701172 644.52105713]
[413.91650391 659.04339600]
[409.35174561 673.33599854]
[404.00653076 687.35540771]
[397.89715576 701.05908203]
[391.04214478 714.40533447]
[383.46234131 727.35375977]
[375.18072510 739.86499023]
[366.22250366 751.90093994]
[356.61480713 763.42517090]
[346.38687134 774.40258789]
[335.56976318 784.79992676]
[324.19628906 794.58557129]
[312.30102539 803.72985840]
[299.92007446 812.20495605]
[287.09103394 819.98510742]
[273.85290527 827.04675293]
[260.24588013 833.36840820]
[246.31124878 838.93084717]
[232.09135437 843.71728516]
[217.62939453 847.71307373]
[202.96925354 850.90606689]
[188.15548706 853.28668213]
[173.23307800 854.84759521]
[158.24734497 855.58410645]
[143.24377441 855.49395752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 151]
[55 149]
[56 148]
[57 147]
[64 139]
[65 138]
[66 137]
[67 136]
[69 134]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[79 126]
[82 124]
[83 123]
[84 122]
[92 121]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
