%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[84.18772888 914.23486328]
[69.21406555 913.31127930]
[54.29093552 911.77380371]
[39.44351196 909.62487793]
[24.69683266 906.86828613]
[10.07575798 903.50854492]
[-4.39505482 899.55133057]
[-18.69120598 895.00341797]
[-32.78858566 889.87237549]
[-46.66342545 884.16693115]
[-60.29233170 877.89660645]
[-73.65231323 871.07208252]
[-86.72085571 863.70477295]
[-99.47591400 855.80718994]
[-111.89598083 847.39257812]
[-123.96011353 838.47515869]
[-135.64796448 829.06994629]
[-146.93983459 819.19281006]
[-157.81668091 808.86047363]
[-168.26016235 798.09027100]
[-178.25265503 786.90039062]
[-187.77732849 775.30969238]
[-196.81813049 763.33770752]
[-205.35977173 751.00469971]
[-213.38789368 738.33135986]
[-220.88894653 725.33911133]
[-227.85028076 712.04992676]
[-234.26014709 698.48608398]
[-240.10774231 684.67053223]
[-245.38320923 670.62658691]
[-250.07766724 656.37786865]
[-254.18316650 641.94842529]
[-257.69281006 627.36260986]
[-260.60067749 612.64501953]
[-262.90185547 597.82043457]
[-264.59246826 582.91387939]
[-265.66967773 567.95050049]
[-266.13165283 552.95544434]
[-265.97760010 537.95416260]
[-265.20782471 522.97180176]
[-263.82357788 508.03366089]
[-261.82720947 493.16494751]
[-259.22210693 478.39074707]
[-256.01263428 463.73596191]
[-252.20419312 449.22531128]
[-247.80325317 434.88320923]
[-242.81719971 420.73391724]
[-237.25445557 406.80123901]
[-231.12438965 393.10867310]
[-224.43733215 379.67935181]
[-217.20458984 366.53585815]
[-209.43832397 353.70040894]
[-201.15165710 341.19464111]
[-192.35855103 329.03958130]
[-183.07382202 317.25579834]
[-173.31314087 305.86315918]
[-163.09297180 294.88079834]
[-152.43052673 284.32733154]
[-141.34381104 274.22048950]
[-129.85148621 264.57733154]
[-117.97296906 255.41413879]
[-105.72826385 246.74632263]
[-93.13802338 238.58853149]
[-80.22348022 230.95451355]
[-67.00641632 223.85714722]
[-53.50910187 217.30838013]
[-39.75431442 211.31927490]
[-25.76523972 205.89991760]
[-11.56546593 201.05944824]
[2.82106066 196.80604553]
[17.37008095 193.14686584]
[32.05706406 190.08807373]
[46.85724258 187.63484192]
[61.74566269 185.79129028]
[76.69721222 184.56054688]
[91.68669128 183.94468689]
[91.68669128 168.94468689]
[83.94938660 156.21740723]
[91.68669128 142.41723633]
[88.54319000 135.72842407]
[91.80001831 127.19432068]
[88.75645447 120.45944977]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[94.20648956 42.59855652]
[83.64823914 31.14599800]
[84.31474304 15.94697094]
[95.29808044 5.95187235]
[87.97509003 -8.07254982]
[96.08789825 -20.56381035]
[96.53450775 -35.55715942]
[96.86948395 -50.55342102]
[97.09281158 -65.55175781]
[97.31613922 -80.55009460]
[89.78515625 -94.46393585]
[97.71109009 -107.07460022]
[83.87486267 -113.43688965]
[73.82749939 -124.88111115]
[69.30975342 -139.42449951]
[71.10436249 -154.54730225]
[78.90039825 -167.62940979]
[91.34715271 -176.40428162]
[106.28813934 -179.35160828]
[121.13475037 -175.96073914]
[133.31472778 -166.81916809]
[140.71780396 -153.51074219]
[142.06135559 -138.34121704]
[137.11259460 -123.93878937]
[126.72895050 -112.79878235]
[112.70942688 -106.85127258]
[120.25637817 -94.01021576]
[112.31447601 -80.32676697]
[112.09114838 -65.32843018]
[111.86782074 -50.33009338]
[114.91138458 -43.59522247]
[111.52785492 -35.11055374]
[111.08125305 -20.11720467]
[118.43618011 -7.16520739]
[110.29142761 6.39847851]
[120.66036987 17.02959442]
[120.42103577 32.24134445]
[109.19983673 43.04516220]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.79835510 127.41764832]
[106.68669128 142.41723633]
[114.42398834 156.21740723]
[106.68669128 168.94468689]
[106.68669128 183.94468689]
[121.67616272 184.56054688]
[136.62771606 185.79129028]
[151.51612854 187.63484192]
[166.31631470 190.08807373]
[181.00329590 193.14686584]
[195.55232239 196.80604553]
[209.93884277 201.05944824]
[224.13861084 205.89991760]
[238.12768555 211.31927490]
[251.88247681 217.30838013]
[265.37979126 223.85714722]
[278.59686279 230.95451355]
[291.51141357 238.58853149]
[304.10165405 246.74632263]
[316.34634399 255.41413879]
[328.22488403 264.57733154]
[339.71719360 274.22048950]
[350.80389404 284.32733154]
[361.46633911 294.88079834]
[371.68652344 305.86315918]
[381.44720459 317.25579834]
[390.73193359 329.03958130]
[399.52502441 341.19464111]
[407.81170654 353.70040894]
[415.57797241 366.53585815]
[422.81072998 379.67935181]
[429.49777222 393.10867310]
[435.62783813 406.80123901]
[441.19058228 420.73391724]
[446.17663574 434.88320923]
[450.57757568 449.22531128]
[454.38598633 463.73596191]
[457.59545898 478.39074707]
[460.20059204 493.16494751]
[462.19696045 508.03366089]
[463.58120728 522.97180176]
[464.35098267 537.95416260]
[464.50503540 552.95544434]
[464.04306030 567.95050049]
[462.96585083 582.91387939]
[461.27523804 597.82043457]
[458.97406006 612.64501953]
[456.06619263 627.36260986]
[452.55654907 641.94842529]
[448.45104980 656.37786865]
[443.75659180 670.62658691]
[438.48110962 684.67053223]
[432.63351440 698.48608398]
[426.22366333 712.04992676]
[419.26232910 725.33911133]
[411.76126099 738.33135986]
[403.73315430 751.00469971]
[395.19149780 763.33770752]
[386.15072632 775.30969238]
[376.62603760 786.90039062]
[366.63354492 798.09027100]
[356.19006348 808.86047363]
[345.31320190 819.19281006]
[334.02133179 829.06994629]
[322.33349609 838.47515869]
[310.26934814 847.39257812]
[297.84930420 855.80718994]
[285.09423828 863.70477295]
[272.02569580 871.07208252]
[258.66571045 877.89660645]
[245.03680420 884.16693115]
[231.16195679 889.87237549]
[217.06457520 895.00341797]
[202.76843262 899.55133057]
[188.29762268 903.50854492]
[173.67654419 906.86828613]
[158.92987061 909.62487793]
[144.08244324 911.77380371]
[129.15931702 913.31127930]
[114.18564606 914.23486328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 135]
[77 134]
[79 132]
[81 131]
[83 130]
[85 128]
[86 127]
[87 126]
[88 125]
[91 122]
[93 120]
[94 119]
[95 117]
[96 116]
[97 115]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
