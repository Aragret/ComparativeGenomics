%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[218.52268982 370.18331909]
[213.06733704 356.21051025]
[207.61198425 342.23770142]
[202.15661621 328.26492310]
[190.32038879 319.22317505]
[192.50885010 303.55407715]
[185.72885132 290.17379761]
[177.68768311 277.51126099]
[169.64651489 264.84875488]
[161.60533142 252.18621826]
[153.56416321 239.52369690]
[145.52299500 226.86117554]
[141.13969421 224.96490479]
[137.90110779 220.29495239]
[137.43743896 213.69975281]
[129.77684021 200.80342102]
[122.11623383 187.90710449]
[114.45564270 175.01077271]
[115.31466675 189.98616028]
[111.77977753 204.56369019]
[104.15677643 217.48228455]
[93.10513306 227.62432861]
[79.58092499 234.11245728]
[64.75413513 236.38537598]
[49.90741730 234.24644470]
[36.32516861 227.88070679]
[25.18238831 217.83888245]
[17.44304085 204.98965454]
[13.77665329 190.44464111]
[14.50040722 175.46211243]
[19.55168915 161.33821106]
[28.49351501 149.29479980]
[40.55232620 140.37374878]
[54.68491364 135.34681702]
[69.66867065 134.64889526]
[84.20734406 138.34036255]
[97.04320526 146.10185242]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[78.41407013 46.49731064]
[74.65776825 31.97525024]
[63.71115875 20.55236435]
[68.01476288 6.29304266]
[57.06815338 -5.12984371]
[61.37175751 -19.38916588]
[57.61545944 -33.91122437]
[46.66884995 -45.33411026]
[50.97245407 -59.59343338]
[47.21615601 -74.11549377]
[32.20889282 -73.10636139]
[17.27571106 -74.87165833]
[2.92500877 -79.34978485]
[-10.35490704 -86.38684845]
[-22.11244965 -95.74188995]
[-31.94810486 -107.09515381]
[-39.52801132 -120.05902863]
[-44.59528351 -134.19125366]
[-46.97872543 -149.01005554]
[-46.59861374 -164.01049805]
[-43.46936035 -178.68174744]
[-37.69896317 -192.52447510]
[-29.48530579 -205.06777954]
[-19.10934258 -215.88529968]
[-6.92550421 -224.60961914]
[6.65041065 -230.94482422]
[2.89410996 -245.46688843]
[-0.86219066 -259.98895264]
[-4.61849117 -274.51101685]
[-8.37479210 -289.03305054]
[-12.13109303 -303.55511475]
[-15.88739300 -318.07717896]
[-30.84227371 -316.57650757]
[-45.85095978 -317.37640381]
[-60.56162262 -320.45809937]
[-74.62942505 -325.74932861]
[-87.72460175 -333.12609863]
[-99.54017639 -342.41549683]
[-109.79918671 -353.39971924]
[-118.26113129 -365.82131958]
[-124.72765350 -379.38906860]
[-129.04718018 -393.78500366]
[-131.11843872 -408.67156982]
[-130.89289856 -423.69985962]
[-128.37582397 -438.51757812]
[-123.62622833 -452.77737427]
[-116.75544739 -466.14498901]
[-107.92454529 -478.30703735]
[-97.34052277 -488.97845459]
[-85.25149536 -497.90905762]
[-71.94084167 -504.88952637]
[-57.72058868 -509.75622559]
[-42.92406845 -512.39508057]
[-27.89813995 -512.74420166]
[-12.99502945 -510.79541016]
[1.43591130 -506.59439087]
[15.05640030 -500.23965454]
[27.54715347 -491.88015747]
[38.61537170 -481.71182251]
[48.00159836 -469.97302246]
[55.48580551 -456.93893433]
[60.89255524 -442.91513062]
[64.09510040 -428.23031616]
[65.01837921 -413.22869873]
[63.64073944 -398.26199341]
[59.99447632 -383.68099976]
[54.16506958 -369.82754517]
[46.28916168 -357.02633667]
[36.55137634 -345.57751465]
[25.17998314 -335.74938965]
[12.44154453 -327.77236938]
[-1.36533415 -321.83349609]
[2.39096665 -307.31143188]
[6.14726734 -292.78936768]
[9.90356827 -278.26730347]
[13.65986824 -263.74523926]
[17.41617012 -249.22319031]
[21.17247009 -234.70112610]
[36.11751175 -235.74320984]
[51.00351715 -234.02081299]
[65.32334137 -229.59115601]
[78.58886719 -222.60368347]
[90.34761810 -213.29507446]
[100.19823456 -201.98121643]
[107.80411530 -189.04644775]
[112.90496826 -174.93054199]
[115.32569885 -160.11375427]
[114.98241425 -145.10044861]
[111.88534546 -130.40199280]
[106.13852692 -116.51924133]
[97.93633270 -103.92557526]
[87.55686188 -93.05069733]
[75.35256195 -84.26598358]
[61.73821259 -77.87179565]
[65.49451447 -63.34973145]
[76.17244720 -52.96556091]
[72.13751984 -37.66752625]
[75.89382172 -23.14546585]
[86.57175446 -12.76129436]
[82.53681946 2.53674197]
[93.21475220 12.92091370]
[89.17982483 28.21895027]
[92.93612671 42.74100876]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[127.35196686 167.35017395]
[135.01255798 180.24650574]
[142.67315674 193.14282227]
[150.33375549 206.03915405]
[158.18551636 218.81999207]
[166.22668457 231.48252869]
[174.26785278 244.14505005]
[182.30903625 256.80758667]
[190.35020447 269.47009277]
[198.39137268 282.13262939]
[198.16873169 267.13427734]
[203.99070740 253.31022644]
[214.87620544 242.99005127]
[228.99082947 237.91290283]
[243.95600891 238.93435669]
[257.24984741 245.88227844]
[266.63211060 257.58581543]
[270.52172852 272.07275391]
[268.26321411 286.90176392]
[260.23715210 299.57388306]
[247.79611206 307.95364380]
[233.03662109 310.62890625]
[218.44589233 307.14886475]
[206.48164368 298.09872437]
[218.70808411 308.13986206]
[216.12942505 322.80953979]
[221.58477783 336.78234863]
[227.04013062 350.75515747]
[232.49549866 364.72793579]
[247.39497375 362.50234985]
[262.41607666 363.64852905]
[276.80538940 368.10900879]
[289.84112549 375.65997314]
[300.86941528 385.92276001]
[309.33709717 398.38256836]
[314.81939697 412.41436768]
[317.04138184 427.31439209]
[315.89157104 442.33523560]
[311.42761230 456.72344971]
[303.87347412 469.75735474]
[293.60800171 480.78314209]
[281.14617920 489.24780273]
[267.11303711 494.72671509]
[252.21247864 496.94509888]
[237.19190979 495.79162598]
[222.80476379 491.32421875]
[209.77270508 483.76690674]
[198.74938965 473.49877930]
[190.28776550 461.03488159]
[184.81224060 447.00039673]
[182.59748840 432.09930420]
[183.75457764 417.07904053]
[188.22549438 402.69296265]
[195.78596497 389.66275024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[6 180]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[15 160]
[16 159]
[17 158]
[18 157]
[38 156]
[39 155]
[40 154]
[41 153]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[49 145]
[51 143]
[52 142]
[54 140]
[55 139]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
