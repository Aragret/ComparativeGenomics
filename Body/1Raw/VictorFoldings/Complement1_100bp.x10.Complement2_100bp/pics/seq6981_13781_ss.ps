%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[66.81964874 868.49047852]
[51.81629181 868.37976074]
[36.84137344 867.44989014]
[21.93957901 865.70361328]
[7.15538406 863.14617920]
[-7.46709061 859.78521729]
[-21.88420486 855.63073730]
[-36.05293274 850.69512939]
[-49.93098831 844.99316406]
[-63.47695541 838.54187012]
[-76.65040588 831.36041260]
[-89.41202545 823.47027588]
[-101.72372437 814.89501953]
[-113.54876709 805.66027832]
[-124.85185242 795.79345703]
[-135.59925842 785.32421875]
[-145.75891113 774.28363037]
[-155.30047607 762.70471191]
[-164.19549561 750.62200928]
[-172.41740417 738.07159424]
[-179.94168091 725.09088135]
[-186.74584961 711.71868896]
[-192.80963135 697.99487305]
[-198.11491394 683.96032715]
[-202.64585876 669.65710449]
[-206.38896179 655.12774658]
[-209.33303833 640.41564941]
[-211.46929932 625.56475830]
[-212.79138184 610.61938477]
[-213.29531860 595.62408447]
[-212.97962952 580.62359619]
[-211.84526062 565.66278076]
[-209.89556885 550.78625488]
[-207.13638306 536.03839111]
[-203.57595825 521.46319580]
[-199.22489929 507.10418701]
[-194.09619141 493.00421143]
[-188.20515442 479.20535278]
[-181.56935120 465.74877930]
[-174.20860291 452.67468262]
[-166.14486694 440.02203369]
[-157.40222168 427.82864380]
[-148.00672913 416.13088989]
[-137.98646545 404.96365356]
[-127.37131500 394.36026001]
[-116.19296265 384.35241699]
[-104.48476410 374.96990967]
[-92.28166962 366.24081421]
[-79.62009430 358.19113159]
[-66.53781891 350.84490967]
[-53.07389832 344.22406006]
[-39.26850510 338.34835815]
[-25.16284561 333.23529053]
[-10.79901314 328.90017700]
[3.78012300 325.35592651]
[18.53105354 322.61312866]
[33.40975571 320.67996216]
[48.37182236 319.56219482]
[63.37260437 319.26315308]
[78.36733246 319.78375244]
[79.70556641 304.84356689]
[81.04380035 289.90338135]
[82.38203430 274.96319580]
[83.72026825 260.02301025]
[71.54524231 268.78479004]
[56.71912384 266.50747681]
[47.73498917 254.49557495]
[49.73936081 239.63009644]
[61.58404160 230.42665100]
[76.48385620 232.15737915]
[85.90325165 243.82994080]
[88.56904602 229.06872559]
[91.23484039 214.30749512]
[93.90063477 199.54627991]
[95.01628876 184.58782959]
[94.56967926 169.59448242]
[94.12307739 154.60113525]
[93.67646790 139.60777283]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[90.32784271 64.68923187]
[80.43717957 75.96641541]
[65.63130951 78.37186432]
[52.67927170 70.80583954]
[47.50256348 56.72742462]
[52.46790695 42.57308578]
[65.30521393 34.81399155]
[80.14543915 36.99749374]
[90.20453644 48.12704468]
[90.87432098 33.14200592]
[91.54411316 18.15696716]
[92.21389771 3.17192817]
[92.54887390 -11.82433128]
[92.54887390 -26.82433128]
[92.54887390 -41.82432938]
[78.29620361 -46.98545456]
[66.67027283 -56.71240616]
[59.07497025 -69.83060455]
[56.42746735 -84.75597382]
[59.04745865 -99.68618774]
[66.61857605 -112.81836700]
[78.22655487 -122.56672668]
[92.46968842 -127.75410461]
[107.62805176 -127.75410461]
[121.87118530 -122.56672668]
[133.47917175 -112.81836700]
[141.05027771 -99.68618774]
[143.67027283 -84.75597382]
[141.02276611 -69.83060455]
[133.42747498 -56.71240616]
[121.80154419 -46.98545456]
[107.54887390 -41.82432938]
[107.54887390 -26.82433128]
[107.54887390 -11.82433128]
[109.77013397 -9.08602619]
[110.77543640 -5.13578367]
[110.00960541 -0.55683213]
[107.19893646 3.84171343]
[106.52915192 18.82675171]
[105.85935974 33.81179047]
[105.18957520 48.79682922]
[105.30124664 63.79641342]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[108.66981506 139.16117859]
[109.11642456 154.15452576]
[109.56302643 169.14787292]
[110.00963593 184.14122009]
[117.24089050 170.99934387]
[128.90269470 161.56524658]
[143.26510620 157.23841858]
[158.19750977 158.66072083]
[171.48481750 165.62117004]
[181.15589905 177.08720398]
[185.77612305 191.35792542]
[184.66011047 206.31634521]
[177.97340393 219.74348450]
[166.70794678 229.64750671]
[152.53489685 234.55918884]
[137.55674744 233.74992371]
[123.99540710 227.33976746]
[113.86262512 216.27961731]
[108.66185760 202.21208191]
[105.99605560 216.97329712]
[103.33026123 231.73451233]
[100.66446686 246.49572754]
[98.66045380 261.36126709]
[97.32221985 276.30145264]
[95.98398590 291.24163818]
[94.64575195 306.18182373]
[93.30751801 321.12200928]
[108.15606689 323.27453613]
[122.86490631 326.23474121]
[137.39015198 329.99377441]
[151.68843079 334.54040527]
[165.71710205 339.86108398]
[179.43426514 345.93991089]
[192.79901123 352.75875854]
[205.77143860 360.29724121]
[218.31283569 368.53292847]
[230.38577271 377.44119263]
[241.95422363 386.99545288]
[252.98365784 397.16720581]
[263.44116211 407.92608643]
[273.29550171 419.23999023]
[282.51733398 431.07513428]
[291.07907104 443.39624023]
[298.95520020 456.16650391]
[306.12219238 469.34783936]
[312.55865479 482.90084839]
[318.24539185 496.78515625]
[323.16543579 510.95928955]
[327.30410767 525.38098145]
[330.64904785 540.00708008]
[333.19027710 554.79406738]
[334.92019653 569.69781494]
[335.83364868 584.67370605]
[335.92791748 599.67718506]
[335.20269775 614.66339111]
[333.66018677 629.58764648]
[331.30499268 644.40545654]
[328.14410400 659.07244873]
[324.18698120 673.54498291]
[319.44543457 687.77984619]
[313.93359375 701.73449707]
[307.66793823 715.36730957]
[300.66714478 728.63763428]
[292.95208740 741.50585938]
[284.54586792 753.93359375]
[275.47348022 765.88366699]
[265.76205444 777.32055664]
[255.44058228 788.20996094]
[244.53982544 798.51953125]
[233.09234619 808.21838379]
[221.13230896 817.27764893]
[208.69538879 825.67022705]
[195.81871033 833.37115479]
[182.54071045 840.35742188]
[168.90100098 846.60809326]
[154.94030762 852.10461426]
[140.70027161 856.83056641]
[126.22341919 860.77185059]
[111.55293274 863.91662598]
[96.73260498 866.25555420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 134]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 126]
[82 125]
[83 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
