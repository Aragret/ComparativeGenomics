%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[79.41020203 556.88647461]
[64.74727631 552.09039307]
[55.02270508 540.11395264]
[53.33956528 524.77868652]
[60.23493958 510.97802734]
[73.50854492 503.11578369]
[73.95514679 488.12243652]
[74.40175629 473.12908936]
[74.84835815 458.13574219]
[75.29496765 443.14236450]
[75.74156952 428.14901733]
[72.79861450 421.36959839]
[76.30809021 412.93624878]
[76.97788239 397.95120239]
[69.81659698 384.89114380]
[78.16239166 371.45022583]
[78.83217621 356.46517944]
[66.20504761 348.56448364]
[59.18121719 335.31600952]
[59.73551941 320.23095703]
[67.81915283 307.36425781]
[81.34595490 300.22473145]
[82.01573944 285.23968506]
[82.68552399 270.25463867]
[73.77090454 255.13853455]
[83.80966187 239.70141602]
[84.25627136 224.70806885]
[76.90133667 211.75607300]
[85.04608917 198.19238281]
[85.49269867 183.19903564]
[83.67079163 181.06858826]
[82.58300781 178.08808899]
[82.55734253 174.53355408]
[83.81591797 170.79449463]
[86.43867493 167.33399963]
[87.77690887 152.39381409]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[87.44477844 63.32764816]
[96.10726166 51.21110153]
[97.22290802 36.25264740]
[98.33855438 21.29419327]
[99.45420837 6.33574057]
[92.76474762 -8.00168228]
[101.42722321 -20.11822891]
[102.54287720 -35.07668304]
[100.87133789 -49.98325729]
[96.47033691 -64.32310486]
[90.96080017 -71.60890198]
[92.11227417 -78.90930176]
[87.92527008 -93.31308746]
[76.64340973 -104.40498352]
[80.52055359 -118.78611755]
[76.33354187 -133.18989563]
[72.14653015 -147.59368896]
[67.95951843 -161.99746704]
[63.77250671 -176.40124512]
[58.42132187 -190.41427612]
[54.11372757 -193.36244202]
[51.61736679 -197.27670288]
[50.99693680 -201.30537415]
[51.96972275 -204.69447327]
[46.10076141 -218.49865723]
[40.23180008 -232.30282593]
[34.36283875 -246.10700989]
[28.49387932 -259.91119385]
[22.62491798 -273.71536255]
[16.75595665 -287.51953125]
[10.88699627 -301.32369995]
[-3.67981625 -297.62121582]
[-18.64110565 -296.18585205]
[-33.64615631 -297.05126953]
[-48.34322739 -300.19711304]
[-62.38779831 -305.54974365]
[-75.45064545 -312.98361206]
[-87.22556305 -322.32446289]
[-97.43652344 -333.35339355]
[-105.84416199 -345.81179810]
[-112.25140381 -359.40765381]
[-116.50804138 -373.82229614]
[-118.51430511 -388.71777344]
[-118.22315216 -403.74493408]
[-115.64141846 -418.55151367]
[-110.82962036 -432.79043579]
[-103.90055847 -446.12792969]
[-95.01664734 -458.25131226]
[-84.38614655 -468.87643433]
[-72.25825500 -477.75418091]
[-58.91725540 -484.67648315]
[-44.67588806 -489.48104858]
[-29.86799049 -492.05526733]
[-14.84068108 -492.33880615]
[0.05378031 -490.32498169]
[14.46624470 -486.06103516]
[28.05886459 -479.64688110]
[40.51300812 -471.23294067]
[51.53673172 -461.01638794]
[60.87162399 -449.23672485]
[68.29886627 -436.17010498]
[73.64434814 -422.12283325]
[76.78276062 -407.42416382]
[77.64054108 -392.41867065]
[76.19758606 -377.45809937]
[72.48770905 -362.89318848]
[66.59787750 -349.06530762]
[58.66616821 -336.29861450]
[48.87849808 -324.89239502]
[37.46431351 -315.11398315]
[24.69117355 -307.19268799]
[30.56013489 -293.38848877]
[36.42909622 -279.58432007]
[42.29805374 -265.78015137]
[48.16701508 -251.97596741]
[54.03597641 -238.17178345]
[59.90493774 -224.36761475]
[65.77389526 -210.56343079]
[71.94966888 -196.89376831]
[74.22655487 -211.71995544]
[83.05827332 -223.84434509]
[96.47180176 -230.55830383]
[111.47051239 -230.36193848]
[124.70366669 -223.29910278]
[133.21493530 -210.94764709]
[135.10289001 -196.06694031]
[129.94573975 -181.98133850]
[118.89562225 -171.83763123]
[104.42115021 -167.90193176]
[89.75596619 -171.05349731]
[78.17629242 -180.58825684]
[82.36330414 -166.18447876]
[86.55031586 -151.78070068]
[90.73731995 -137.37690735]
[94.92433167 -122.97312927]
[105.90670776 -112.91148376]
[102.32904816 -97.50009918]
[106.51605988 -83.09631348]
[110.81018066 -68.72409821]
[115.21118164 -54.38425446]
[117.61062622 -69.19110107]
[123.31613922 -83.06362915]
[132.02842712 -95.27411652]
[143.29045105 -105.18202972]
[156.51144409 -112.26761627]
[170.99783325 -116.15917969]
[185.98973083 -116.65257263]
[200.70065308 -113.72191620]
[214.35890198 -107.52095032]
[226.24801636 -98.37496185]
[235.74429321 -86.76373291]
[242.34957886 -73.29636383]
[245.71739197 -58.67932129]
[245.67105103 -43.67939377]
[242.21298218 -29.08344269]
[235.52459717 -15.65714455]
[225.95674133 -4.10481596]
[214.01135254 4.96753120]
[200.31503296 11.08397961]
[185.58627319 13.92367363]
[170.59773254 13.33764744]
[156.13565063 9.35664272]
[142.95870972 2.18949604]
[131.75811768 -7.78781891]
[123.12145233 -20.05191231]
[117.50132751 -33.96103287]
[116.38568115 -19.00258064]
[123.15493774 -5.73508596]
[114.41265869 7.45138931]
[113.29701233 22.40984344]
[112.18135834 37.36829758]
[111.06571198 52.32674789]
[117.83496857 65.59424591]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[102.71709442 153.73204041]
[101.37886047 168.67222595]
[100.48604584 183.64562988]
[100.03944397 198.63899231]
[107.36242676 212.66340637]
[99.24961853 225.15466309]
[98.80301666 240.14802551]
[107.06356812 250.05387878]
[106.38291931 262.53268433]
[97.67056274 270.92443848]
[97.00077820 285.90945435]
[96.33099365 300.89450073]
[109.16689301 309.21237183]
[116.07038116 322.74893188]
[115.27664948 337.82330322]
[107.09886169 350.39230347]
[93.81721497 357.13494873]
[93.14743042 372.11999512]
[100.26080322 386.25189209]
[91.96292114 398.62097168]
[91.29312897 413.60601807]
[90.73492432 428.59564209]
[90.28831482 443.58898926]
[89.84171295 458.58233643]
[89.39510345 473.57568359]
[88.94850159 488.56903076]
[88.50189209 503.56237793]
[101.28398895 512.20074463]
[107.34571075 526.38732910]
[104.75278473 541.59521484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[13 201]
[14 200]
[16 198]
[17 197]
[22 192]
[23 191]
[24 190]
[26 187]
[27 186]
[29 184]
[30 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 176]
[41 175]
[43 173]
[44 172]
[45 171]
[46 170]
[48 168]
[49 167]
[50 141]
[51 140]
[53 139]
[54 138]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
