%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[44.32234192 809.94476318]
[32.38384247 800.84832764]
[21.25979424 790.77209473]
[11.03034687 779.78881836]
[1.76920640 767.97760010]
[-6.45689964 755.42352295]
[-13.58870125 742.21704102]
[-19.57481194 728.45330811]
[-24.37210274 714.23150635]
[-27.94600868 699.65411377]
[-30.27077484 684.82611084]
[-31.32965660 669.85437012]
[-31.11502075 654.84680176]
[-29.62841606 639.91143799]
[-26.88055229 625.15600586]
[-22.89122963 610.68676758]
[-17.68918991 596.60797119]
[-11.31191444 583.02105713]
[-3.80535436 570.02392578]
[4.77640533 557.71020508]
[14.37153244 546.16870117]
[24.91089249 535.48242188]
[36.31854630 525.72851562]
[48.51230240 516.97717285]
[61.40430450 509.29144287]
[74.90165710 502.72674561]
[88.90711975 497.33035278]
[84.72010803 482.92657471]
[80.53309631 468.52279663]
[76.34608459 454.11901855]
[72.15907288 439.71524048]
[61.17669678 429.65359497]
[64.75435638 414.24218750]
[60.56734848 399.83840942]
[56.38033676 385.43463135]
[53.75426102 400.20297241]
[48.24782562 414.15570068]
[40.08034515 426.73715210]
[29.57713318 437.44613647]
[17.15652657 445.85617065]
[3.31323099 451.63223267]
[-11.40137863 454.54434204]
[-26.40122414 454.47644043]
[-41.08887100 451.43127441]
[-54.87931061 445.53009033]
[-67.22328186 437.00799561]
[-77.62911987 426.20434570]
[-85.68237305 413.54949951]
[-91.06227875 399.54748535]
[-93.55455780 384.75598145]
[-93.05994415 369.76416016]
[-89.59814453 355.16906738]
[-83.30702972 341.55212402]
[-74.43717194 329.45559692]
[-63.34186935 319.36132812]
[-50.46302795 311.67135620]
[-36.31361771 306.69198608]
[-21.45719719 304.62155151]
[-6.48549366 305.54248047]
[8.00517464 309.41812134]
[21.43764877 316.09408569]
[33.27692413 325.30450439]
[43.05143738 336.68249512]
[50.37188339 349.77490234]
[54.94581604 364.05615234]
[57.17093277 349.22210693]
[59.39604950 334.38806152]
[61.62116623 319.55401611]
[63.84628296 304.71997070]
[66.07140350 289.88592529]
[68.29651642 275.05191040]
[70.52163696 260.21786499]
[72.74674988 245.38380432]
[74.97187042 230.54975891]
[68.18371582 222.91209412]
[66.68872070 212.58187866]
[71.21945190 202.93550110]
[80.49858093 197.26042175]
[83.16438293 182.49920654]
[85.83017731 167.73799133]
[88.49597168 152.97677612]
[91.16176605 138.21556091]
[92.50000000 123.27537537]
[92.50000000 108.27537537]
[92.38833618 93.27578735]
[84.44642639 79.59234619]
[91.99337769 66.75128174]
[91.77005005 51.75294876]
[81.96224213 36.16807175]
[91.10092926 21.18636894]
[82.95616913 7.62268257]
[90.31110382 -5.32931519]
[89.86450195 -20.32266426]
[89.41789246 -35.31601334]
[81.27313995 -48.87969971]
[88.62807465 -61.83169937]
[88.18146515 -76.82505035]
[87.73486328 -91.81839752]
[73.77130890 -97.98134613]
[63.87111664 -109.59809875]
[59.99998093 -124.36215210]
[62.92651367 -139.34207153]
[72.06965637 -151.56359863]
[85.61402130 -158.60014343]
[100.87036896 -159.05458069]
[114.80954742 -152.83670044]
[124.66390991 -141.18104553]
[128.47688293 -126.40186310]
[125.49137878 -111.43357849]
[116.30017853 -99.24815369]
[102.72821045 -92.26500702]
[103.17481232 -77.27165222]
[103.62142181 -62.27830505]
[111.73423004 -49.78704453]
[104.41123962 -35.76262283]
[104.85784912 -20.76927185]
[105.30445099 -5.77592087]
[113.41725922 6.71534014]
[106.09427643 20.73976326]
[114.68072510 29.26029205]
[115.17550659 41.74784470]
[106.76838684 51.52962112]
[106.99171448 66.52795410]
[114.91764832 79.13861847]
[107.38667297 93.05245972]
[110.64598846 100.42466736]
[107.50000000 108.27537537]
[107.50000000 123.27537537]
[115.62906647 110.66909790]
[128.37736511 102.76459503]
[143.28337097 101.08811951]
[157.46900940 105.96335602]
[168.19522095 116.44897461]
[173.39096069 130.52038574]
[172.05300903 145.46058655]
[164.43969727 158.38488770]
[152.02104187 166.79779053]
[137.19488525 169.07492065]
[122.82394409 164.77656555]
[111.68299866 154.73269653]
[105.92298126 140.88134766]
[103.25718689 155.64257812]
[100.59139252 170.40379333]
[97.92559814 185.16500854]
[95.25980377 199.92622375]
[102.92527771 218.57032776]
[89.80591583 232.77488708]
[87.58079529 247.60893250]
[85.35567474 262.44296265]
[83.13056183 277.27700806]
[80.90544128 292.11105347]
[78.68032837 306.94509888]
[76.45520782 321.77914429]
[74.23009491 336.61318970]
[72.00497437 351.44723511]
[69.77986145 366.28128052]
[70.78411865 381.24761963]
[74.97113037 395.65139771]
[79.15814209 410.05517578]
[90.43999481 421.14709473]
[86.56285095 435.52822876]
[90.74986267 449.93200684]
[94.93687439 464.33578491]
[99.12388611 478.73956299]
[103.31089783 493.14334106]
[118.02674866 490.19079590]
[132.93997192 488.49685669]
[147.94314575 488.07376099]
[162.92813110 488.92456055]
[177.78698730 491.04315186]
[192.41264343 494.41421509]
[206.69970703 499.01348877]
[220.54527283 504.80783081]
[233.84954834 511.75549316]
[246.51669312 519.80639648]
[258.45541382 528.90258789]
[269.57974243 538.97845459]
[279.80947876 549.96148682]
[289.07092285 561.77246094]
[297.29733276 574.32635498]
[304.42947388 587.53265381]
[310.41595459 601.29620361]
[315.21362305 615.51788330]
[318.78790283 630.09521484]
[321.11303711 644.92315674]
[322.17230225 659.89483643]
[321.95806885 674.90246582]
[320.47183228 689.83782959]
[317.72436523 704.59332275]
[313.73541260 719.06268311]
[308.53372192 733.14160156]
[302.15679932 746.72869873]
[294.65057373 759.72601318]
[286.06915283 772.03991699]
[276.47430420 783.58172607]
[265.93524170 794.26824951]
[254.52783203 804.02246094]
[242.33428955 812.77416992]
[229.44248962 820.46020508]
[215.94531250 827.02526855]
[201.93998718 832.42199707]
[187.52745056 836.61157227]
[172.81152344 839.56372070]
[157.89823914 841.25726318]
[142.89508057 841.67999268]
[127.91010284 840.82879639]
[113.05130768 838.70983887]
[98.42573547 835.33837891]
[84.13877869 830.73876953]
[70.29337311 824.94403076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[33 159]
[34 158]
[35 157]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 128]
[84 127]
[85 125]
[87 123]
[88 122]
[90 119]
[92 117]
[93 116]
[94 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
