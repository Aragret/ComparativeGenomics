%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[45.92510986 424.80764771]
[48.64156342 439.61691284]
[48.21924210 454.66735840]
[44.67660141 469.30099487]
[38.16851807 482.87811279]
[28.97949600 494.80520630]
[17.51123619 504.56085205]
[4.26508474 511.71859741]
[-10.17989445 515.96551514]
[-25.19222832 517.11596680]
[-40.11564255 515.11962891]
[-54.29775238 510.06375122]
[-67.11856842 502.16943359]
[-78.01763153 491.78173828]
[-86.51847076 479.35479736]
[-92.24947357 465.43182373]
[-94.96010590 450.62145996]
[-94.53186035 435.57122803]
[-90.98346710 420.93896484]
[-84.47003937 407.36441040]
[-75.27632904 395.44091797]
[-63.80422974 385.68978882]
[-50.55526352 378.53726196]
[-36.10861206 374.29602051]
[-21.09582710 373.15151978]
[-6.17319918 375.15371704]
[-1.13628280 361.02468872]
[3.90063357 346.89566040]
[8.93754959 332.76663208]
[13.97446632 318.63760376]
[19.01138115 304.50857544]
[9.25803947 293.25076294]
[6.43042994 278.52459717]
[11.38629150 264.26605225]
[22.88924789 254.33737183]
[37.91547012 251.48080444]
[42.95238495 237.35177612]
[47.98929977 223.22274780]
[53.02621841 209.09371948]
[45.17532730 194.22084045]
[50.61745834 177.95130920]
[66.44818115 170.50767517]
[71.27417755 156.30522156]
[70.00421143 151.70127869]
[71.61292267 146.25068665]
[76.46108246 141.75546265]
[73.66429138 127.12580109]
[85.73988342 116.90372467]
[90.98660278 102.85125732]
[89.94609070 97.71011353]
[91.86013031 92.35196686]
[96.60440063 88.46238708]
[102.26718903 74.57236481]
[107.92997742 60.68233490]
[113.59275818 46.79230881]
[119.25554657 32.90227890]
[109.95805359 20.75716400]
[108.00091553 5.68844175]
[113.81044769 -8.24410057]
[125.73399353 -17.33722878]
[140.50859070 -19.22847939]
[146.17137146 -33.11850739]
[151.83416748 -47.00853348]
[157.49694824 -60.89855957]
[150.41825867 -76.89579010]
[156.97038269 -92.75090027]
[172.64747620 -98.83921814]
[178.10282898 -112.81201935]
[183.55818176 -126.78481293]
[189.01354980 -140.75761414]
[194.46890259 -154.73040771]
[199.92425537 -168.70320129]
[205.37962341 -182.67601013]
[210.83497620 -196.64880371]
[215.97692871 -210.73994446]
[220.80293274 -224.94239807]
[225.62892151 -239.14485168]
[230.45492554 -253.34730530]
[235.28092957 -267.54977417]
[232.39498901 -283.10552979]
[243.81568909 -292.66674805]
[230.07888794 -298.71572876]
[216.92158508 -305.93893433]
[204.44389343 -314.28140259]
[192.74079895 -323.67962646]
[181.90133667 -334.06207275]
[172.00802612 -345.34976196]
[163.13616943 -357.45675659]
[155.35327148 -370.29092407]
[148.71856689 -383.75457764]
[143.28254700 -397.74526978]
[139.08660889 -412.15649414]
[136.16265869 -426.87857056]
[134.53297424 -441.79949951]
[134.20993042 -456.80566406]
[135.19601440 -471.78286743]
[137.48370361 -486.61715698]
[141.05558777 -501.19558716]
[145.88449097 -515.40722656]
[151.93365479 -529.14392090]
[159.15704346 -542.30114746]
[167.49967957 -554.77874756]
[176.89807129 -566.48168945]
[187.28068542 -577.32098389]
[198.56851196 -587.21417236]
[210.67562866 -596.08587646]
[223.50990295 -603.86859131]
[236.97364807 -610.50311279]
[250.96441650 -615.93890381]
[265.37570190 -620.13464355]
[280.09783936 -623.05841064]
[295.01876831 -624.68786621]
[310.02493286 -625.01068115]
[325.00213623 -624.02441406]
[339.83636475 -621.73651123]
[354.41476440 -618.16442871]
[368.62634277 -613.33532715]
[382.36297607 -607.28594971]
[395.52008057 -600.06237793]
[407.99752808 -591.71960449]
[419.70037842 -582.32104492]
[430.53955078 -571.93823242]
[440.43252563 -560.65026855]
[449.30404663 -548.54302979]
[457.08660889 -535.70867920]
[463.72091675 -522.24481201]
[469.15652466 -508.25399780]
[473.35208130 -493.84265137]
[476.27560425 -479.12048340]
[477.90487671 -464.19952393]
[478.22750854 -449.19332886]
[477.24099731 -434.21615601]
[474.95288086 -419.38192749]
[471.38058472 -404.80358887]
[466.55130005 -390.59207153]
[460.50173950 -376.85556030]
[453.27798462 -363.69854736]
[444.93499756 -351.22119141]
[435.53628540 -339.51849365]
[425.15338135 -328.67947388]
[413.86526489 -318.78665161]
[401.75790405 -309.91528320]
[388.92340088 -302.13293457]
[375.45947266 -295.49877930]
[361.46856689 -290.06338501]
[347.05715942 -285.86804199]
[332.33493042 -282.94470215]
[317.41397095 -281.31564331]
[302.40777588 -280.99322510]
[287.43060303 -281.97994995]
[272.59643555 -284.26824951]
[258.01812744 -287.84075928]
[261.24926758 -273.30084229]
[249.48338318 -262.72375488]
[244.65737915 -248.52131653]
[239.83139038 -234.31886292]
[235.00538635 -220.11640930]
[230.17938232 -205.91394043]
[231.40155029 -202.60658264]
[231.08247375 -198.54293823]
[228.88415527 -194.45384216]
[224.80776978 -191.19345093]
[219.35241699 -177.22064209]
[213.89706421 -163.24784851]
[208.44169617 -149.27505493]
[202.98634338 -135.30226135]
[197.53099060 -121.32946014]
[192.07562256 -107.35665894]
[186.62026978 -93.38385773]
[193.39411926 -82.42282104]
[192.60621643 -69.36673737]
[184.32055664 -58.99570465]
[171.38697815 -55.23577499]
[165.72419739 -41.34574509]
[160.06140137 -27.45571899]
[154.39862061 -13.56569195]
[163.63954163 -1.88361919]
[165.80677795 12.95413971]
[160.21917725 26.97716141]
[148.28436279 36.38230896]
[133.14556885 38.56506729]
[127.48278809 52.45509338]
[121.81999969 66.34512329]
[116.15721130 80.23514557]
[110.49443054 94.12517548]
[105.03907013 108.09796906]
[99.79235077 122.15044403]
[102.21385956 137.78524780]
[90.51354980 147.00218201]
[85.47663116 161.13121033]
[80.65063477 175.33367920]
[87.95529938 186.64987183]
[87.41661835 199.91337585]
[79.45513916 210.29109192]
[67.15524292 214.13063049]
[62.11833191 228.25965881]
[57.08141327 242.38868713]
[52.04449844 256.51773071]
[61.87502670 268.23556519]
[64.50306702 283.20187378]
[59.32144928 297.37991333]
[47.81582642 306.99639893]
[33.14041138 309.54547119]
[28.10349464 323.67449951]
[23.06657982 337.80355835]
[18.02966309 351.93258667]
[12.99274635 366.06161499]
[7.95583057 380.19064331]
[20.77975464 388.07989502]
[31.68290138 398.46331787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[31 203]
[36 198]
[37 197]
[38 196]
[39 195]
[42 191]
[43 190]
[46 189]
[48 187]
[49 186]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[61 176]
[62 175]
[63 174]
[64 173]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[81 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
