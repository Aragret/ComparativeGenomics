%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[39.90653610 499.06878662]
[28.46101570 489.34872437]
[18.17578697 478.40823364]
[9.18020153 466.38494873]
[1.58738637 453.43005371]
[-4.50716972 439.70648193]
[-9.02682114 425.38681030]
[-11.91472912 410.65115356]
[-13.13457489 395.68478394]
[-12.67101765 380.67596436]
[-10.52988720 365.81341553]
[-6.73811054 351.28402710]
[-1.34337270 337.27059937]
[5.58648109 323.94927979]
[13.96430111 311.48764038]
[23.68472672 300.04241943]
[34.62551498 289.75750732]
[46.64907074 280.76229858]
[59.60418701 273.16986084]
[73.32794189 267.07571411]
[87.64774323 262.55648804]
[84.76246643 247.83660889]
[81.87719727 233.11671448]
[78.99192047 218.39682007]
[76.10665131 203.67692566]
[72.18949890 218.15643311]
[65.18910980 231.42272949]
[55.44704437 242.82852173]
[43.43863678 251.81730652]
[29.74980927 257.95050049]
[15.04846573 260.92883301]
[0.05191878 260.60699463]
[-14.50811672 257.00070190]
[-27.92122459 250.28590393]
[-39.53295135 240.79022217]
[-48.77672958 228.97698975]
[-55.20154190 215.42259216]
[-58.49390411 200.78837585]
[-58.49317169 185.78837585]
[-55.19938660 171.15447998]
[-48.77325439 157.60069275]
[-39.52832031 145.78836060]
[-27.91567039 136.29382324]
[-14.50190926 129.58032227]
[0.05847832 125.97545624]
[15.05505657 125.65508270]
[29.75610924 128.63485718]
[43.44433975 134.76937866]
[55.45186996 143.75932312]
[65.19282532 155.16606140]
[72.19192505 168.43304443]
[76.10665131 182.90638733]
[78.99192047 168.18649292]
[81.87719727 153.46659851]
[76.73249054 139.48872375]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[83.96182251 102.67506409]
[86.28707123 91.26303101]
[95.64781189 84.33355713]
[98.75192261 69.65824890]
[101.85603333 54.98294830]
[104.96014404 40.30764771]
[108.06425476 25.63234329]
[109.40248871 10.69215870]
[108.95588684 -4.30119133]
[108.50927734 -19.29454041]
[107.05986023 -34.22434998]
[104.61413574 -49.02362061]
[102.16840363 -63.82289124]
[99.72267914 -78.62216187]
[97.27694702 -93.42143250]
[94.83122253 -108.22070312]
[84.94736481 -120.57464600]
[90.50596619 -134.39315796]
[88.06023407 -149.19242859]
[85.61450958 -163.99169922]
[70.59858704 -163.53820801]
[55.65621185 -165.09024048]
[41.05404282 -168.62011719]
[27.05266953 -174.06483459]
[13.90196419 -181.32723999]
[1.83661854 -190.27769470]
[-8.92804813 -200.75651550]
[-18.19992828 -212.57664490]
[-25.81355286 -225.52717590]
[-31.63304901 -239.37696838]
[-35.55455780 -253.87887573]
[-37.50810242 -268.77407837]
[-37.45881271 -283.79675293]
[-35.40757370 -298.67883301]
[-31.39098549 -313.15469360]
[-25.48073387 -326.96600342]
[-17.78229523 -339.86630249]
[-8.43305206 -351.62533569]
[2.40014291 -362.03326416]
[14.52396107 -370.90438843]
[27.72203636 -378.08032227]
[41.75883484 -383.43304443]
[56.38385773 -386.86703491]
[71.33609772 -388.32098389]
[86.34871674 -387.76898193]
[101.15379333 -385.22082520]
[115.48712158 -380.72204590]
[129.09289551 -374.35287476]
[141.72831726 -366.22702026]
[153.16789246 -356.48947144]
[163.20745850 -345.31402588]
[171.66784668 -332.90011597]
[178.39807129 -319.46926880]
[183.27803040 -305.26119995]
[186.22064209 -290.52944946]
[187.17338562 -275.53692627]
[186.11924744 -260.55117798]
[183.07705688 -245.83967590]
[178.10108948 -231.66494751]
[171.28015137 -218.27993774]
[162.73597717 -205.92353821]
[152.62104797 -194.81626892]
[141.11585999 -185.15632629]
[128.42576599 -177.11613464]
[114.77721405 -170.83915710]
[100.41378021 -166.43742371]
[102.85950470 -151.63815308]
[105.30523682 -136.83888245]
[115.01415253 -125.54348755]
[109.63049316 -110.66642761]
[112.07621765 -95.86715698]
[114.52194977 -81.06788635]
[116.96767426 -66.26861572]
[119.41340637 -51.46934891]
[121.85913086 -36.67007828]
[129.13401794 -49.78785706]
[142.29530334 -56.98372650]
[157.26481628 -56.02797699]
[169.40409851 -47.21675110]
[174.95167542 -33.28030396]
[172.18853760 -18.53699875]
[161.97090149 -7.55520439]
[147.46478271 -3.73775220]
[133.16510010 -8.26752090]
[123.50262451 -19.74114799]
[123.94923401 -4.74779701]
[124.39584351 10.24555302]
[131.25978088 -3.09184980]
[142.22433472 -13.32799530]
[156.00138855 -19.26035118]
[170.97242737 -20.19199181]
[185.37866211 -16.01346779]
[197.52769470 -7.21566629]
[205.99223328 5.16785336]
[209.77787781 19.68228722]
[208.43991089 34.62249756]
[202.13551331 48.23331833]
[191.60530090 58.91576767]
[178.08638000 65.41488647]
[163.16690063 66.96714783]
[148.59962463 63.39021683]
[136.09590149 55.10429001]
[127.12462616 43.08279800]
[122.73955536 28.73645401]
[119.63544464 43.41175461]
[116.53134155 58.08705902]
[113.42723083 72.76235962]
[110.32312012 87.43766022]
[115.93238068 103.24628448]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[106.63800812 145.35055542]
[96.59708405 156.35188293]
[93.71181488 171.07176208]
[90.82653809 185.79165649]
[90.82653809 200.79165649]
[93.71181488 215.51155090]
[96.59708405 230.23144531]
[99.48236084 244.95133972]
[102.36763000 259.67123413]
[117.33388519 258.45004272]
[132.34275818 258.91226196]
[147.20550537 261.05203247]
[161.73521423 264.84252930]
[175.74914551 270.23599243]
[189.07107544 277.16464233]
[201.53344727 285.54135132]
[212.97955322 295.26077271]
[223.26544189 306.20062256]
[232.26174927 318.22335815]
[239.85533142 331.17779541]
[245.95071411 344.90100098]
[250.47122192 359.22039795]
[253.36000061 373.95590210]
[254.58074951 388.92218018]
[254.11808777 403.93106079]
[251.97784424 418.79373169]
[248.18693542 433.32333374]
[242.79304504 447.33709717]
[235.86398315 460.65881348]
[227.48690796 473.12094116]
[217.76716614 484.56677246]
[206.82699585 494.85232544]
[194.80397034 503.84826660]
[181.84931946 511.44146729]
[168.12593079 517.53643799]
[153.80639648 522.05651855]
[139.07081604 524.94488525]
[124.10448456 526.16516113]
[109.09563446 525.70202637]
[94.23301697 523.56134033]
[79.70353699 519.77001953]
[65.68992615 514.37573242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[52 172]
[53 171]
[54 170]
[56 168]
[57 167]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 144]
[66 143]
[67 142]
[68 132]
[69 131]
[70 130]
[71 129]
[72 128]
[73 127]
[75 125]
[76 124]
[77 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
