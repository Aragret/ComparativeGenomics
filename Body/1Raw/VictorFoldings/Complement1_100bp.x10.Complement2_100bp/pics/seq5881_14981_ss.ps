%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[144.57736206 634.57043457]
[145.42214966 619.56817627]
[148.39346313 604.83886719]
[153.43080139 590.68237305]
[160.43162537 577.38696289]
[169.25340271 565.22320557]
[179.71652222 554.43878174]
[191.60798645 545.25323486]
[204.68568420 537.85357666]
[199.23031616 523.88079834]
[193.77496338 509.90798950]
[188.31961060 495.93521118]
[182.86425781 481.96240234]
[177.40888977 467.98962402]
[171.95353699 454.01681519]
[166.49818420 440.04400635]
[158.17648315 452.52398682]
[143.24452209 453.95104980]
[132.70957947 443.27328491]
[134.33763123 428.36187744]
[146.92852783 420.20901489]
[161.19953918 424.82351685]
[156.79853821 410.48367310]
[152.39753723 396.14382935]
[147.99655151 381.80398560]
[143.59555054 367.46414185]
[132.46458435 357.56710815]
[135.81239319 342.10415649]
[130.56567383 328.05169678]
[124.49184418 314.33642578]
[112.26367950 305.83224487]
[113.75028992 290.08102417]
[107.67646027 276.36575317]
[107.03405762 291.35198975]
[102.87119293 305.76278687]
[95.42329407 318.78311157]
[85.11157227 329.67660522]
[72.51920319 337.82720947]
[58.35834885 342.77395630]
[43.42987823 344.23706055]
[28.57806587 342.13381958]
[14.64285088 336.58316040]
[2.41234112 327.89901733]
[-7.42177057 316.57247925]
[-14.30331707 303.24414062]
[-17.84311295 288.66781616]
[-17.84096718 273.66781616]
[-14.29699993 259.09246826]
[-7.41163969 245.76611328]
[2.42571259 234.44239807]
[14.65870762 225.76174927]
[28.59550858 220.21507263]
[43.44792557 218.11608887]
[58.37597656 219.58348083]
[72.53541565 224.53427124]
[85.12545013 232.68847656]
[95.43405151 243.58493042]
[102.87864685 256.60836792]
[101.98583221 241.63496399]
[101.09301758 226.66156006]
[100.20020294 211.68815613]
[99.30738068 196.71475220]
[98.41456604 181.74133301]
[87.97572327 167.63468933]
[96.35401154 151.23695374]
[95.23835754 136.27850342]
[94.12271118 121.32004547]
[93.00706482 106.36159515]
[89.91053009 102.12774658]
[89.40657043 96.46035767]
[92.08766174 90.94232178]
[83.74186707 77.50140381]
[90.90315247 64.44133759]
[90.23336029 49.45629883]
[87.42269135 45.05775452]
[86.65686035 40.47880173]
[87.66216278 36.52856064]
[89.88343048 33.79025650]
[89.88343048 18.79025650]
[89.88343048 3.79025602]
[86.75402069 -4.79138803]
[89.99675751 -11.43265629]
[90.22008514 -26.43099403]
[90.44341278 -41.42932892]
[88.19489288 -45.14391708]
[87.33214569 -48.99361420]
[87.72746277 -52.52619553]
[89.11942291 -55.37734604]
[91.15308380 -57.30669022]
[92.26873016 -72.26514435]
[93.38437653 -87.22359467]
[94.50003052 -102.18205261]
[95.61567688 -117.14050293]
[96.50849152 -132.11390686]
[89.39511871 -146.24580383]
[97.69300079 -158.61489868]
[98.25121307 -173.60450745]
[98.69782257 -188.59785461]
[99.14442444 -203.59120178]
[85.26570892 -209.79197693]
[74.82000732 -220.83532715]
[69.40021515 -235.03724670]
[69.83281708 -250.23202515]
[76.05184174 -264.10256958]
[87.10892487 -274.53375244]
[101.31795502 -279.93484497]
[116.51215363 -279.48226929]
[130.37451172 -273.24499512]
[140.79112244 -262.17419434]
[146.17353821 -247.95806885]
[145.70095825 -232.76448059]
[139.44546509 -218.91033936]
[128.36096191 -208.50830078]
[114.13777924 -203.14459229]
[113.69116974 -188.15124512]
[113.24456787 -173.15789795]
[116.18752289 -166.37846375]
[112.67803955 -157.94511414]
[119.83932495 -144.88504028]
[111.49353027 -131.44412231]
[113.99813843 -127.37767792]
[113.97481537 -121.69467926]
[110.57412720 -116.02485657]
[109.45848083 -101.06639862]
[108.34283447 -86.10794830]
[107.22718048 -71.14949799]
[106.11153412 -56.19104004]
[105.44174957 -41.20600128]
[105.21842194 -26.20766640]
[104.99509430 -11.20932865]
[104.88343048 3.79025602]
[104.88343048 18.79025650]
[104.88343048 33.79025650]
[105.21839905 48.78651428]
[105.88819122 63.77155304]
[114.18607330 76.14064026]
[107.07270050 90.27253723]
[107.96551514 105.24594879]
[109.08116150 120.20439911]
[110.19681549 135.16285706]
[111.31246185 150.12130737]
[120.55874634 159.11402893]
[121.18002319 171.59593201]
[113.38796997 180.84852600]
[114.28079224 195.82192993]
[115.17360687 210.79533386]
[116.06642151 225.76873779]
[116.95923615 240.74214172]
[117.85205078 255.71554565]
[121.39172363 270.29193115]
[127.46556091 284.00720215]
[140.12815857 293.49240112]
[138.20710754 308.26260376]
[144.28094482 321.97787476]
[148.73828125 307.65542603]
[160.69355774 298.59609985]
[175.68774414 298.17877197]
[188.12840271 306.55911255]
[193.37544250 320.61148071]
[189.47187805 335.09463501]
[177.87362671 344.60678101]
[162.90655518 345.60006714]
[150.15223694 337.70315552]
[161.59799194 348.62585449]
[157.93539429 363.06314087]
[162.33639526 377.40298462]
[166.73739624 391.74282837]
[171.13838196 406.08267212]
[175.53938293 420.42251587]
[180.47097778 434.58865356]
[185.92633057 448.56146240]
[191.38169861 462.53424072]
[196.83705139 476.50704956]
[202.29240417 490.47985840]
[207.74775696 504.45263672]
[213.20312500 518.42541504]
[218.65847778 532.39825439]
[233.29034424 528.97930908]
[248.25985718 527.67761230]
[263.26226807 528.51959229]
[277.99209595 531.48815918]
[292.14950562 536.52288818]
[305.44628906 543.52124023]
[317.61166382 552.34075928]
[328.39804077 562.80187988]
[337.58578491 574.69158936]
[344.98782349 587.76794434]
[350.45352173 601.76464844]
[353.87155151 616.39672852]
[355.17233276 631.36627197]
[354.32940674 646.36865234]
[351.35992432 661.09832764]
[346.32434082 675.25543213]
[339.32516479 688.55175781]
[330.50488281 700.71661377]
[320.04309082 711.50231934]
[308.15277100 720.68933105]
[295.07598877 728.09057617]
[281.07897949 733.55535889]
[266.44668579 736.97247314]
[251.47700500 738.27233887]
[236.47471619 737.42852783]
[221.74523926 734.45812988]
[207.58843994 729.42163086]
[194.29255676 722.42163086]
[182.12825012 713.60064697]
[171.34317017 703.13818359]
[162.15690613 691.24725342]
[154.75646973 678.17004395]
[149.29252625 664.17266846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 171]
[16 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[28 163]
[29 154]
[30 153]
[32 151]
[33 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[65 141]
[66 140]
[67 139]
[68 138]
[71 137]
[73 135]
[74 134]
[78 133]
[79 132]
[80 131]
[82 130]
[83 129]
[84 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 120]
[96 118]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
