%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[1.18473172 508.89093018]
[1.69481170 523.89666748]
[0.60696483 538.87158203]
[-2.06648278 553.64605713]
[-6.29523897 568.05267334]
[-12.03138924 581.92810059]
[-19.20993805 595.11523438]
[-27.74954605 607.46466064]
[-37.55345535 618.83636475]
[-48.51057434 629.10150146]
[-60.49676132 638.14379883]
[-73.37619019 645.86083984]
[-87.00293732 652.16510010]
[-101.22259521 656.98522949]
[-115.87405396 660.26654053]
[-130.79129028 661.97186279]
[-145.80528259 662.08190918]
[-160.74591064 660.59539795]
[-175.44389343 657.52923584]
[-189.73268127 652.91809082]
[-203.45037842 646.81427002]
[-216.44154358 639.28686523]
[-228.55899048 630.42120361]
[-239.66540527 620.31774902]
[-249.63496399 609.09100342]
[-258.35467529 596.86810303]
[-265.72576904 583.78765869]
[-271.66467285 569.99774170]
[-276.10415649 555.65472412]
[-278.99389648 540.92102051]
[-280.30114746 525.96362305]
[-280.01107788 510.95202637]
[-278.12701416 496.05630493]
[-274.67025757 481.44525146]
[-269.68002319 467.28442383]
[-263.21279907 453.73422241]
[-255.34191895 440.94827271]
[-246.15653992 429.07135010]
[-235.76074219 418.23809814]
[-224.27230835 408.57125854]
[-211.82142639 400.18032837]
[-198.54916382 393.16040039]
[-184.60591125 387.59103394]
[-170.14965820 383.53530884]
[-155.34420776 381.03921509]
[-140.35729980 380.13101196]
[-125.35876465 380.82095337]
[-110.51854706 383.10128784]
[-96.00478363 386.94613647]
[-81.98194122 392.31195068]
[-68.60890198 399.13793945]
[-56.03719711 407.34671021]
[-46.54829788 395.72946167]
[-37.05939865 384.11221313]
[-27.57050133 372.49493408]
[-18.08160210 360.87768555]
[-8.59270382 349.26040649]
[0.89619416 337.64315796]
[2.95496321 322.89151001]
[17.67727470 317.09805298]
[27.16617393 305.48080444]
[35.01792908 292.69995117]
[41.09176254 278.98468018]
[47.16559601 265.26940918]
[45.24454498 250.49922180]
[57.90715027 241.01402283]
[63.98098373 227.29875183]
[70.05481720 213.58348083]
[74.45581818 199.24363708]
[77.12161255 184.48242188]
[79.78740692 169.72120667]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[104.45712280 27.46764183]
[105.12690735 12.48260403]
[98.01353455 -1.64929247]
[106.31141663 -14.01838112]
[106.98120117 -29.00341988]
[98.11840820 -45.14443588]
[108.13262177 -59.55563354]
[108.57922363 -74.54898071]
[101.25624084 -88.57340240]
[109.36904907 -101.06466675]
[109.81565094 -116.05801392]
[110.26226044 -131.05136108]
[107.38974762 -139.72238159]
[110.82878113 -146.26416016]
[111.49856567 -161.24919128]
[112.16835022 -176.23423767]
[112.83813477 -191.21926880]
[98.60179138 -196.30041504]
[86.49662018 -205.35337830]
[77.59899902 -217.57319641]
[72.70010376 -231.87326050]
[72.23554230 -246.98205566]
[76.24661255 -261.55609131]
[84.37666321 -274.29946899]
[95.90277100 -284.07907104]
[109.80004883 -290.02523804]
[124.83274841 -291.60931396]
[139.66418457 -288.69042969]
[152.97554016 -281.52807617]
[163.58320618 -270.75918579]
[170.54393005 -257.34130859]
[173.23876953 -242.46752930]
[171.42811584 -227.46043396]
[165.27296448 -213.65443420]
[155.32063293 -202.27716064]
[142.45606995 -194.34025574]
[127.82317352 -190.54948425]
[127.15338898 -175.56445312]
[126.48360443 -160.57940674]
[125.81381989 -145.59437561]
[125.25560760 -130.60476685]
[124.80900574 -115.61141205]
[124.36239624 -100.61805725]
[131.71733093 -87.66606140]
[123.57257843 -74.10237885]
[123.12596893 -59.10902786]
[131.19004822 -50.09252930]
[130.94067383 -37.59766769]
[121.96623993 -28.33363533]
[121.29645538 -13.34859657]
[128.45773315 -0.28853017]
[120.11194611 13.15238953]
[119.44216156 28.13742828]
[129.27416992 16.80907249]
[143.63967896 12.49256992]
[158.08737183 16.52543640]
[168.14048767 27.65804100]
[170.68394470 42.44083023]
[164.92964172 56.29319000]
[152.66059875 64.92282104]
[137.67851257 65.65573883]
[124.62574768 58.26483154]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[94.54862213 172.38699341]
[91.88282776 187.14822388]
[89.21703339 201.90943909]
[98.69244385 190.28117371]
[111.53792572 182.53561401]
[126.24440002 179.58270264]
[141.08416748 181.76934814]
[154.31385803 188.83865356]
[164.37927246 199.96014404]
[170.09793091 213.82725525]
[170.79800415 228.81091309]
[166.39726257 243.15084839]
[157.41270447 255.16239929]
[144.89979553 263.43447876]
[130.32858276 266.99530029]
[115.41083527 265.42651367]
[101.89910126 258.91244507]
[91.38072205 248.21835327]
[85.09138489 234.60057068]
[83.77008820 219.65731812]
[77.69625092 233.37258911]
[71.62241364 247.08786011]
[73.10903168 262.83905029]
[60.88086319 271.34326172]
[54.80702972 285.05853271]
[48.73319626 298.77377319]
[60.50878906 289.48211670]
[74.55742645 284.22512817]
[89.54007721 283.50390625]
[104.02869415 287.38720703]
[116.64231110 295.50488281]
[126.17868042 307.08322144]
[131.72886658 321.01861572]
[132.76383972 335.98287964]
[129.18496704 350.54968262]
[121.33335876 363.33059692]
[109.95738220 373.10748291]
[96.14132690 378.94842529]
[81.20204163 380.29669189]
[66.56345367 377.02383423]
[53.62081909 369.44174194]
[43.60773849 358.27310181]
[37.47860336 344.58245850]
[35.81760025 329.67471313]
[38.78343582 314.96969604]
[29.29453850 326.58694458]
[26.55706024 342.16952515]
[12.51345730 347.13204956]
[3.02455902 358.74929810]
[-6.46433926 370.36657715]
[-15.95323753 381.98382568]
[-25.44213676 393.60110474]
[-34.93103409 405.21835327]
[-44.41993332 416.83563232]
[-33.86644745 427.51531982]
[-24.50794983 439.25631714]
[-16.45048332 451.92553711]
[-9.78534222 465.37945557]
[-4.58805037 479.46563721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 205]
[53 204]
[54 203]
[55 202]
[56 201]
[57 200]
[58 199]
[60 197]
[61 196]
[62 177]
[63 176]
[64 175]
[66 173]
[67 172]
[68 171]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[77 146]
[78 145]
[79 144]
[80 143]
[81 133]
[82 132]
[84 130]
[85 129]
[87 126]
[88 125]
[90 123]
[91 122]
[92 121]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
