%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[111.47061920 806.49694824]
[96.92583466 802.81549072]
[82.59365845 798.37792969]
[68.51336670 793.19628906]
[54.72356033 787.28485107]
[41.26203156 780.65985107]
[28.16568184 773.33935547]
[15.47040176 765.34356689]
[3.21099186 756.69421387]
[-8.57894611 747.41516113]
[-19.86709785 737.53179932]
[-30.62252045 727.07116699]
[-40.81573486 716.06201172]
[-50.41880417 704.53442383]
[-59.40540695 692.52008057]
[-67.75090790 680.05187988]
[-75.43243408 667.16400146]
[-82.42893982 653.89172363]
[-88.72122955 640.27148438]
[-94.29206848 626.34063721]
[-99.12619019 612.13726807]
[-103.21033478 597.70037842]
[-106.53331757 583.06958008]
[-109.08602142 568.28485107]
[-110.86145782 553.38684082]
[-111.85475159 538.41625977]
[-112.06319427 523.41430664]
[-111.48619843 508.42193604]
[-110.12535095 493.48031616]
[-107.98439026 478.63040161]
[-105.06916809 463.91287231]
[-101.38769531 449.36810303]
[-96.95004272 435.03594971]
[-91.76838684 420.95568848]
[-85.85693359 407.16589355]
[-79.23186493 393.70437622]
[-71.91136169 380.60806274]
[-63.91548157 367.91281128]
[-55.26613617 355.65341187]
[-45.98703766 343.86349487]
[-36.10361862 332.57537842]
[-25.64297104 321.81997681]
[-14.63376236 311.62680054]
[-3.10617137 302.02377319]
[8.90820694 293.03720093]
[21.37644196 284.69174194]
[34.26435852 277.01025391]
[47.53662872 270.01379395]
[61.15687943 263.72152710]
[75.08777618 258.15075684]
[89.29113007 253.31666565]
[103.72801971 249.23255920]
[100.40576172 234.60510254]
[97.08350372 219.97764587]
[92.53660583 214.15118408]
[93.82238770 205.10771179]
[90.71827698 190.43240356]
[87.61416626 175.75709534]
[83.76176453 190.25396729]
[76.18865204 203.20185852]
[65.44155121 213.66607666]
[52.29629135 220.89118958]
[37.70184708 224.35560608]
[22.71180344 223.80921936]
[8.40830040 219.29150391]
[-4.17607737 211.12857056]
[-14.13285160 199.90971375]
[-20.74323654 186.44483948]
[-23.53001976 171.70599365]
[-22.29202461 156.75717163]
[-17.11861992 142.67753601]
[-8.38327980 130.48353577]
[3.28338385 121.05543518]
[17.03914642 115.07388306]
[31.89096451 112.97067261]
[46.76667404 114.89765167]
[60.59238815 120.71569824]
[72.37001038 130.00480652]
[81.24930573 142.09439087]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[91.68319702 82.31564331]
[91.60507965 77.67374420]
[93.18524933 73.91633606]
[95.78813934 71.53782654]
[98.01325989 56.70378494]
[100.23837280 41.86974335]
[102.46349335 27.03569984]
[96.85892487 12.24044800]
[106.39860535 0.80174792]
[108.62371826 -14.03229618]
[99.50120544 -26.65835762]
[101.96910095 -41.67049026]
[114.06233978 -50.28960419]
[116.28746033 -65.12364960]
[118.51258087 -79.95769501]
[104.80478668 -86.30381012]
[93.44107819 -96.25583649]
[85.34265137 -109.00700378]
[81.16601562 -123.52362061]
[81.24974823 -138.62890625]
[85.58705902 -153.09834290]
[93.82633972 -165.75894165]
[105.29967499 -175.58438110]
[119.07697296 -181.77815247]
[134.04136658 -183.83815002]
[148.97976685 -181.59736633]
[162.68116760 -175.23748779]
[174.03488159 -165.27404785]
[182.12048340 -152.51475525]
[186.28254700 -137.99394226]
[186.18363953 -122.88874817]
[181.83178711 -108.42368317]
[173.57978821 -95.77136993]
[162.09658813 -85.95745850]
[148.31307983 -79.77753448]
[133.34661865 -77.73257446]
[131.12150574 -62.89853287]
[128.89639282 -48.06448746]
[137.92855835 -36.27654648]
[135.88328552 -21.20101929]
[123.45776367 -11.80717850]
[121.23265076 3.02686501]
[126.99636841 16.76108551]
[117.29753876 29.26081657]
[115.07241821 44.09486008]
[112.84729767 58.92890549]
[110.62218475 73.76294708]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[102.28946686 172.65298462]
[105.39357758 187.32829285]
[108.49768829 202.00360107]
[111.71096039 216.65538025]
[115.03321838 231.28283691]
[118.35547638 245.91030884]
[133.14015198 243.35746765]
[148.03817749 241.58189392]
[163.00869751 240.58845520]
[178.01071167 240.37988281]
[193.00306702 240.95675659]
[207.94468689 242.31745911]
[222.79463196 244.45828247]
[237.51216125 247.37336731]
[252.05696106 251.05471802]
[266.38916016 255.49223328]
[280.46948242 260.67376709]
[294.25933838 266.58511353]
[307.72091675 273.21005249]
[320.81729126 280.53042603]
[333.51263428 288.52618408]
[345.77209473 297.17541504]
[357.56207275 306.45440674]
[368.85028076 316.33773804]
[379.60577393 326.79827881]
[389.79907227 337.80740356]
[399.40219116 349.33489990]
[408.38888550 361.34921265]
[416.73443604 373.81735229]
[424.41604614 386.70520020]
[431.41262817 399.97741699]
[437.70501709 413.59762573]
[443.27593994 427.52844238]
[448.11013794 441.73178101]
[452.19436646 456.16860962]
[455.51745605 470.79943848]
[458.07025146 485.58413696]
[459.84576416 500.48214722]
[460.83914185 515.45269775]
[461.04766846 530.45471191]
[460.47076416 545.44702148]
[459.11001587 560.38867188]
[456.96914673 575.23858643]
[454.05401611 589.95611572]
[450.37261963 604.50091553]
[445.93505859 618.83312988]
[440.75347900 632.91339111]
[434.84210205 646.70324707]
[428.21713257 660.16479492]
[420.89669800 673.26116943]
[412.90090942 685.95648193]
[404.25164795 698.21588135]
[394.97259521 710.00585938]
[385.08926392 721.29406738]
[374.62866211 732.04949951]
[363.61953735 742.24273682]
[352.09197998 751.84582520]
[340.07766724 760.83245850]
[327.60949707 769.17803955]
[314.72161865 776.85961914]
[301.44937134 783.85614014]
[287.82916260 790.14843750]
[273.89831543 795.71936035]
[259.69497681 800.55352783]
[245.25811768 804.63769531]
[230.62728882 807.96075439]
[215.84260559 810.51348877]
[200.94456482 812.28894043]
[185.97402954 813.28228760]
[170.97203064 813.49078369]
[155.97967529 812.91381836]
[141.03805542 811.55303955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 144]
[53 143]
[54 142]
[56 141]
[57 140]
[58 139]
[80 138]
[81 137]
[82 136]
[83 135]
[85 133]
[89 132]
[90 131]
[91 130]
[92 129]
[94 127]
[95 126]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
