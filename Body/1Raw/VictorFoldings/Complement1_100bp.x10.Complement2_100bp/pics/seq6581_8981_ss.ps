%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[123.80442810 795.63177490]
[109.93431854 789.90386963]
[96.50279999 783.21185303]
[83.57678986 775.58898926]
[71.22068787 767.07342529]
[59.49605179 757.70739746]
[48.46128845 747.53771973]
[38.17137909 736.61492920]
[28.67758751 724.99353027]
[20.02720833 712.73144531]
[12.26333904 699.88964844]
[5.42465925 686.53216553]
[-0.45476058 672.72564697]
[-5.34562922 658.53869629]
[-9.22358036 644.04217529]
[-12.06929302 629.30816650]
[-13.86859226 614.41009521]
[-14.61251163 599.42224121]
[-14.29734707 584.41925049]
[-12.92466640 569.47589111]
[-10.50131035 554.66656494]
[-7.03935099 540.06506348]
[-2.55603552 525.74414062]
[2.92629933 511.77514648]
[9.38034058 498.22766113]
[16.77393532 485.16918945]
[25.07024765 472.66479492]
[34.22794724 460.77676392]
[44.20140457 449.56430054]
[54.94094086 439.08331299]
[66.39304352 429.38598633]
[78.50066376 420.52062988]
[91.20348358 412.53140259]
[104.43820953 405.45816040]
[118.13890839 399.33609009]
[132.23731995 394.19570923]
[146.66322327 390.06262207]
[143.55911255 375.38732910]
[140.45500183 360.71203613]
[130.25140381 349.86141968]
[134.96539307 334.75878906]
[131.86128235 320.08349609]
[128.75717163 305.40820312]
[124.29753876 299.51470947]
[125.71781158 290.49136353]
[122.83254242 275.77145386]
[112.79161835 264.77014160]
[117.72994995 249.73939514]
[114.84467316 235.01950073]
[111.95940399 220.29960632]
[102.09859467 213.29310608]
[99.57435608 201.05334473]
[106.27407074 190.03169250]
[103.60827637 175.27047729]
[100.94248199 160.50926208]
[98.26992035 158.20930481]
[96.57858276 154.50061035]
[96.51845551 149.85844421]
[98.50267792 145.03041077]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[81.51643372 73.78381348]
[87.68651581 60.22729111]
[85.90405273 45.33357239]
[84.12158966 30.43985558]
[82.33911896 15.54613876]
[80.55665588 0.65242165]
[78.77419281 -14.24129581]
[76.99172211 -29.13501358]
[67.66935730 -41.91797256]
[73.83943939 -55.47449493]
[71.94614410 -70.35453033]
[69.94213104 -85.22006226]
[67.93811798 -100.08558655]
[60.27589798 -87.19022369]
[46.90620041 -80.38940430]
[31.97177315 -81.79042816]
[20.10021019 -90.95918274]
[14.97004604 -105.05461884]
[18.17091560 -119.70912170]
[28.71099663 -130.38183594]
[43.32432938 -133.76568604]
[57.48281479 -128.81217957]
[66.79938507 -117.05594635]
[66.79938507 -132.05593872]
[66.79938507 -147.05593872]
[66.35278320 -162.04930115]
[65.45996857 -177.02270508]
[64.56715393 -191.99610901]
[63.67433548 -206.96951294]
[62.78151703 -221.94291687]
[48.13665009 -225.73541260]
[35.38158035 -233.86949158]
[25.76592827 -245.54829407]
[20.23173523 -259.62765503]
[19.32118416 -274.72817993]
[23.12348366 -289.37051392]
[31.26612091 -302.12011719]
[42.95136261 -311.72793579]
[57.03441238 -317.25268555]
[72.13555145 -318.15313721]
[86.77532196 -314.34103394]
[99.51947784 -306.18984985]
[109.11946869 -294.49816895]
[114.63478851 -280.41140747]
[115.52510834 -265.30969238]
[111.70318604 -250.67245483]
[103.54347229 -237.93377686]
[91.84536743 -228.34161377]
[77.75492096 -222.83573914]
[78.64774323 -207.86233521]
[79.54055786 -192.88891602]
[80.43337250 -177.91551208]
[81.32618713 -162.94210815]
[83.33090210 -160.98271179]
[84.68025208 -158.11114502]
[85.02293396 -154.57307434]
[84.10295868 -150.73664856]
[81.79938507 -147.05593872]
[81.79938507 -132.05593872]
[81.79938507 -117.05594635]
[82.80364990 -102.08959961]
[84.80766296 -87.22407532]
[86.81167603 -72.35854340]
[90.82062531 -66.14967346]
[88.73315430 -57.25696182]
[97.92803192 -45.53930283]
[91.88544464 -30.91747856]
[93.66790771 -16.02376175]
[95.45037079 -1.13004422]
[97.23284149 13.76367283]
[99.01530457 28.65739059]
[100.79776764 43.55110931]
[102.58023834 58.44482422]
[111.77510834 70.16248322]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[113.36820984 143.02639771]
[115.70369720 157.84346008]
[118.36949158 172.60467529]
[121.03528595 187.36590576]
[133.25294495 201.14306641]
[126.67929077 217.41433716]
[129.56455994 232.13423157]
[132.44984436 246.85412598]
[142.69714355 258.90829468]
[137.55242920 272.88619995]
[140.43769836 287.60607910]
[143.43247986 302.30407715]
[146.53659058 316.97940063]
[149.64070129 331.65469360]
[160.06632996 343.55499268]
[155.13031006 357.60791016]
[158.23442078 372.28320312]
[161.33853149 386.95852661]
[176.20243835 384.89624023]
[191.17480469 383.88757324]
[206.18101501 383.93759155]
[221.14631653 385.04598999]
[235.99615479 387.20727539]
[250.65655518 390.41067505]
[265.05447388 394.64022827]
[279.11816406 399.87487793]
[292.77755737 406.08850098]
[305.96466064 413.25018311]
[318.61370850 421.32424927]
[330.66171265 430.27044678]
[342.04864502 440.04421997]
[352.71780396 450.59686279]
[362.61596680 461.87582397]
[371.69390869 473.82489014]
[379.90631104 486.38455200]
[387.21234131 499.49221802]
[393.57556152 513.08258057]
[398.96426392 527.08801270]
[403.35162354 541.43859863]
[406.71575928 556.06292725]
[409.03994751 570.88818359]
[410.31256104 585.84039307]
[410.52728271 600.84515381]
[409.68307495 615.82769775]
[407.78408813 630.71331787]
[404.83981323 645.42797852]
[400.86489868 659.89825439]
[395.87918091 674.05212402]
[389.90750122 687.81903076]
[382.97955322 701.13037109]
[375.12988281 713.91992188]
[366.39764404 726.12384033]
[356.82626343 737.68145752]
[346.46347046 748.53509521]
[335.36087036 758.63067627]
[323.57382202 767.91796875]
[311.16098022 776.35070801]
[298.18423462 783.88684082]
[284.70825195 790.48883057]
[270.80010986 796.12371826]
[256.52911377 800.76354980]
[241.96640015 804.38519287]
[227.18447876 806.97052002]
[212.25701904 808.50671387]
[197.25839233 808.98614502]
[182.26329041 808.40637207]
[167.34645081 806.77026367]
[152.58218384 804.08605957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 160]
[38 159]
[39 158]
[41 156]
[42 155]
[43 154]
[45 153]
[46 152]
[48 150]
[49 149]
[50 148]
[53 146]
[54 145]
[55 144]
[59 143]
[60 142]
[61 141]
[64 139]
[66 137]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[72 131]
[74 129]
[75 127]
[76 126]
[77 125]
[87 124]
[88 123]
[89 122]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
