%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[122.80780029 410.56643677]
[124.91735077 395.68521118]
[129.27388000 381.30047607]
[135.77528381 367.74938965]
[144.26914978 355.34957886]
[154.55636597 344.39178467]
[166.39579773 335.13281250]
[179.50990295 327.78976440]
[174.26318359 313.73727417]
[169.01646423 299.68481445]
[163.76974487 285.63232422]
[158.52302551 271.57986450]
[153.27630615 257.52740479]
[148.02958679 243.47492981]
[142.78286743 229.42245483]
[136.91390991 215.61827087]
[130.43441772 202.08993530]
[123.95492554 188.56158447]
[119.82802582 186.15788269]
[117.16731262 181.13616943]
[117.49063873 174.53260803]
[111.41680908 160.81733704]
[105.34297180 147.10208130]
[103.01470947 161.92027283]
[94.55900574 174.30982971]
[81.60851288 181.87850952]
[66.66378021 183.16490173]
[52.61038589 177.92063904]
[42.16183472 167.15830994]
[37.33557129 152.95594788]
[39.06347275 138.05580139]
[47.01190948 125.33486176]
[59.64616013 117.24933624]
[74.52675629 115.36042023]
[88.78047180 120.03282928]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[86.55328369 109.14138031]
[83.88928986 97.80363464]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[82.84647369 58.33782959]
[77.89408875 50.66243362]
[79.58535767 43.46789551]
[76.48124695 28.79259300]
[73.37713623 14.11728954]
[70.27302551 -0.55801243]
[67.16891479 -15.23331451]
[62.23732376 -29.39945030]
[55.55712891 -42.82982635]
[48.87693405 -56.26020050]
[42.19673920 -69.69057465]
[35.51654434 -83.12095642]
[28.83634949 -96.55133057]
[27.76852417 -81.58938599]
[21.12510681 -68.14077759]
[9.89160919 -58.20053101]
[-4.26554632 -53.24321747]
[-19.24622917 -54.00422668]
[-32.82814407 -60.37067032]
[-42.99649811 -71.39811707]
[-48.24287033 -85.45071411]
[-47.78899765 -100.44384766]
[-41.70220566 -114.15337372]
[-30.88543701 -124.54555511]
[-16.94329453 -130.07878113]
[-1.94401014 -129.93223572]
[11.88735962 -124.12765503]
[22.49794769 -113.52769470]
[18.74164772 -128.04975891]
[14.98534679 -142.57180786]
[11.22904587 -157.09387207]
[7.47274542 -171.61593628]
[3.71644473 -186.13798523]
[-3.01649094 -172.73397827]
[-16.28888893 -165.74516296]
[-31.15047455 -167.77821350]
[-42.05824280 -178.07484436]
[-44.94386292 -192.79467773]
[-38.73107529 -206.44755554]
[-25.73709488 -213.94131470]
[-10.80835152 -212.48095703]
[0.48770311 -202.61016846]
[-1.51631057 -217.47569275]
[-3.52032423 -232.34123230]
[-5.52433777 -247.20675659]
[-7.52835131 -262.07229614]
[-9.53236485 -276.93780518]
[-24.52947998 -278.41540527]
[-38.78139114 -283.31231689]
[-51.51951599 -291.36444092]
[-62.05690002 -302.13757324]
[-69.82527161 -315.05072021]
[-74.40570068 -329.40747070]
[-75.55117035 -344.43359375]
[-73.19989777 -359.31875610]
[-67.47869110 -373.26022339]
[-58.69608307 -385.50616455]
[-47.32571411 -395.39611816]
[-33.98077011 -402.39678955]
[-19.38092804 -406.13058472]
[-4.31354046 -406.39620972]
[10.40882874 -403.17929077]
[23.99221992 -396.65332031]
[35.70409775 -387.17025757]
[44.91286087 -375.24148560]
[51.12188339 -361.51031494]
[53.99632645 -346.71728516]
[53.38117218 -331.66009521]
[49.30959702 -317.15081787]
[42.00117493 -303.97192383]
[31.85003853 -292.83410645]
[19.40362930 -284.33801270]
[5.33316326 -278.94183350]
[7.33717680 -264.07629395]
[9.34119034 -249.21076965]
[11.34520435 -234.34524536]
[13.34921741 -219.47970581]
[15.35323143 -204.61418152]
[18.23850441 -189.89428711]
[21.99480438 -175.37223816]
[25.75110435 -160.85017395]
[29.50740623 -146.32810974]
[33.26370621 -131.80606079]
[37.02000809 -117.28399658]
[42.26672363 -103.23152161]
[48.94691849 -89.80114746]
[55.62711334 -76.37077332]
[62.30730820 -62.94039536]
[68.98750305 -49.51002121]
[75.66770172 -36.07964325]
[76.16275024 -51.07147217]
[81.43721771 -65.11355591]
[90.93447113 -76.72399139]
[103.65223694 -84.67750549]
[118.24838257 -88.13475037]
[133.18254089 -86.73087311]
[146.87867737 -80.61402130]
[157.89140320 -70.42972565]
[165.05851746 -57.25276184]
[167.62367249 -42.47372437]
[165.31613159 -27.65227509]
[158.37944031 -14.35256386]
[147.54563904 -3.97813749]
[133.95803833 2.37616515]
[119.05058289 4.03975964]
[104.39647675 0.83708256]
[91.54220581 -6.89387989]
[81.84421539 -18.33742523]
[84.94832611 -3.66212249]
[88.05243683 11.01317978]
[91.15654755 25.68848228]
[94.26065826 40.36378479]
[97.47393036 55.01557159]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[115.82865906 96.28079224]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[119.05823517 141.02824402]
[125.13207245 154.74349976]
[131.20590210 168.45877075]
[137.48326111 182.08209229]
[143.96276855 195.61044312]
[150.44226074 209.13877869]
[156.43510437 195.38793945]
[170.34498596 189.77409363]
[184.20368958 195.51310730]
[190.07231140 209.31742859]
[184.58906555 223.27929688]
[170.89497375 229.40074158]
[156.83534241 224.17573547]
[162.08206177 238.22821045]
[167.32878113 252.28068542]
[172.57550049 266.33316040]
[177.82221985 280.38562012]
[183.06893921 294.43807983]
[188.31565857 308.49057007]
[193.56237793 322.54302979]
[208.27998352 319.49468994]
[223.29043579 318.72879028]
[238.24188232 320.26333618]
[252.78382874 324.06234741]
[266.57537842 330.03674316]
[279.29327393 338.04647827]
[290.63934326 347.90380859]
[300.34765625 359.37765503]
[308.19061279 372.19906616]
[313.98437500 386.06747437]
[317.59310913 400.65777588]
[318.93225098 415.62799072]
[317.97039795 430.62716675]
[314.73010254 445.30371094]
[309.28729248 459.31356812]
[301.76959229 472.32836914]
[292.35321045 484.04296875]
[281.25888062 494.18280029]
[268.74664307 502.51016235]
[255.10986328 508.82986450]
[240.66816711 512.99371338]
[225.76010132 514.90417480]
[210.73512268 514.51641846]
[195.94543457 511.83950806]
[181.73774719 506.93627930]
[168.44508362 499.92160034]
[156.37907410 490.95989990]
[145.82252502 480.26132202]
[137.02293396 468.07659912]
[130.18655396 454.69134521]
[125.47365570 440.41940308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 165]
[17 164]
[18 163]
[21 162]
[22 161]
[23 160]
[36 159]
[37 158]
[40 156]
[41 155]
[42 154]
[44 153]
[45 152]
[46 151]
[47 150]
[48 149]
[49 131]
[50 130]
[51 129]
[52 128]
[53 127]
[54 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
