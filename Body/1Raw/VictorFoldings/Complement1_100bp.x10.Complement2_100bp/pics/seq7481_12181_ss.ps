%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[189.21429443 630.51434326]
[200.08198547 620.06652832]
[213.13456726 612.52374268]
[208.94755554 598.11999512]
[204.76054382 583.71618652]
[200.57353210 569.31243896]
[196.38652039 554.90863037]
[192.19950867 540.50488281]
[179.06317139 533.57867432]
[174.61175537 519.03082275]
[181.96563721 505.29919434]
[177.77862549 490.89541626]
[172.95263672 476.69296265]
[167.49726868 462.72015381]
[162.04191589 448.74737549]
[156.58656311 434.77456665]
[151.13121033 420.80175781]
[137.95779419 418.63299561]
[127.49230194 410.17028809]
[122.53559113 397.54092407]
[124.48191833 384.00466919]
[132.92875671 373.11239624]
[127.68202972 359.05993652]
[122.43531799 345.00744629]
[117.18859863 330.95498657]
[111.94187927 316.90249634]
[109.54705048 331.71011353]
[102.02779388 344.68933105]
[90.37339783 354.13259888]
[76.11719513 358.79742432]
[61.13483429 358.07012939]
[47.39751053 352.04635620]
[36.71259689 341.51864624]
[30.48588181 327.87210083]
[29.53659439 312.90216064]
[33.98963165 298.57839966]
[43.25911713 286.78530884]
[56.12549210 279.07452393]
[70.89596558 276.46047974]
[85.62722015 279.28713989]
[98.38111877 287.18261719]
[107.48073578 299.11019897]
[105.47672272 284.24465942]
[103.47270966 269.37911987]
[101.46869659 254.51359558]
[99.46467590 239.64807129]
[89.53262329 250.88880920]
[74.57033539 251.95178223]
[63.14889145 242.22807312]
[61.81101608 227.28785706]
[71.32310486 215.68957520]
[86.23619843 214.07723999]
[98.00693512 223.37365723]
[97.33715057 208.38862610]
[89.03926086 196.01953125]
[96.15263367 181.88763428]
[95.48284912 166.90260315]
[94.81306458 151.91755676]
[86.51518250 139.54846191]
[93.62855530 125.41657257]
[92.95877075 110.43153381]
[91.95450592 95.46518707]
[90.61627197 80.52500153]
[89.27803802 65.58481598]
[87.93980408 50.64463425]
[86.60157013 35.70444870]
[77.66393280 22.64959335]
[84.23490906 9.28278637]
[82.89667511 -5.65739870]
[81.55844116 -20.59758377]
[80.22020721 -35.53776932]
[77.21593475 -39.80642319]
[76.24639893 -44.34661102]
[77.07431793 -48.33780289]
[79.17109680 -51.17256165]
[78.50131226 -66.15760040]
[77.83152008 -81.14263916]
[77.16173553 -96.12767792]
[76.49195099 -111.11271667]
[68.14616394 -124.55363464]
[75.30744171 -137.61370850]
[66.96164703 -151.05462646]
[74.12292480 -164.11468506]
[73.45314026 -179.09973145]
[72.78335571 -194.08476257]
[72.00203705 -209.06440735]
[60.46414185 -219.52932739]
[59.77200317 -234.72721863]
[69.81981659 -245.66233826]
[68.92700195 -260.63574219]
[60.38201904 -273.95092773]
[67.34806061 -287.11614990]
[66.45524597 -302.08956909]
[65.56243134 -317.06295776]
[50.91756058 -320.85546875]
[38.16249084 -328.98956299]
[28.54684067 -340.66836548]
[23.01264763 -354.74768066]
[22.10209656 -369.84823608]
[25.90439415 -384.49053955]
[34.04703140 -397.24017334]
[45.73227310 -406.84799194]
[59.81532288 -412.37274170]
[74.91645813 -413.27319336]
[89.55623627 -409.46105957]
[102.30039215 -401.30990601]
[111.90038300 -389.61822510]
[117.41570282 -375.53146362]
[118.30601501 -360.42971802]
[114.48410034 -345.79251099]
[106.32438660 -333.05383301]
[94.62627411 -323.46166992]
[80.53583527 -317.95578003]
[81.42864990 -302.98239136]
[82.32146454 -288.00897217]
[90.80258942 -275.76480103]
[83.90040588 -261.52856445]
[84.79322815 -246.55516052]
[96.06928253 -236.89151001]
[97.18802643 -221.71905518]
[86.97544098 -209.95721436]
[90.51149750 -203.46737671]
[87.76839447 -194.75454712]
[88.43817902 -179.76951599]
[89.10796356 -164.78446960]
[97.40585327 -152.41539001]
[90.29248047 -138.28349304]
[98.59036255 -125.91439819]
[91.47698975 -111.78250122]
[92.14677429 -96.79746246]
[92.81655884 -81.81242371]
[93.48635101 -66.82738495]
[94.15613556 -51.84234619]
[95.16039276 -36.87600327]
[96.49862671 -21.93581772]
[97.83686066 -6.99563265]
[99.17509460 7.94455194]
[108.01701355 19.93078423]
[101.54175568 34.36621475]
[102.87998962 49.30640030]
[104.21822357 64.24658203]
[105.55645752 79.18676758]
[106.89469147 94.12695312]
[109.47373199 96.99417114]
[110.77642059 100.98426819]
[110.32960510 105.50172424]
[107.94380951 109.76174927]
[108.61359406 124.74678802]
[116.95938873 138.18769836]
[109.79810333 151.24777222]
[110.46788788 166.23280334]
[111.13767242 181.21784973]
[119.48346710 194.65876770]
[112.32218933 207.71884155]
[112.99197388 222.70387268]
[114.33020782 237.64405823]
[116.33422089 252.50958252]
[118.33823395 267.37512207]
[120.34224701 282.24063110]
[122.34626007 297.10617065]
[125.99434662 311.65579224]
[131.24107361 325.70825195]
[136.48779297 339.76074219]
[141.73451233 353.81320190]
[146.98121643 367.86569214]
[163.33845520 372.17111206]
[173.80244446 385.24804688]
[174.40399170 401.81912231]
[165.10400391 415.34640503]
[170.55935669 429.31921387]
[176.01470947 443.29199219]
[181.47007751 457.26480103]
[186.92543030 471.23760986]
[193.92442322 457.97058105]
[208.21330261 453.40682983]
[221.60678101 460.16073608]
[226.43243408 474.36331177]
[219.92591858 487.87866211]
[205.81446838 492.96463013]
[192.18240356 486.70840454]
[196.36941528 501.11218262]
[209.93856812 508.76174927]
[213.97961426 523.42889404]
[206.60330200 536.31787109]
[210.79031372 550.72161865]
[214.97732544 565.12542725]
[219.16433716 579.52917480]
[223.35134888 593.93298340]
[227.53836060 608.33673096]
[242.60044861 607.70690918]
[257.37545776 610.70068359]
[271.00436401 617.14398193]
[282.69482422 626.66223145]
[291.76718140 638.70196533]
[297.69393921 652.56335449]
[300.13052368 667.44036865]
[298.93533325 682.46820068]
[294.17779541 696.77307129]
[286.13452148 709.52331543]
[275.27316284 719.97772217]
[262.22515869 727.52838135]
[247.74911499 731.73638916]
[232.68663025 732.35711670]
[217.91343689 729.35437012]
[204.28843689 722.90283203]
[192.60374451 713.37750244]
[183.53871155 701.33227539]
[177.62036133 687.46734619]
[175.19277954 672.58880615]
[176.39709473 657.56170654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 186]
[7 185]
[8 184]
[11 181]
[12 180]
[13 173]
[14 172]
[15 171]
[16 170]
[17 169]
[22 165]
[23 164]
[24 163]
[25 162]
[26 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[53 155]
[54 154]
[56 152]
[57 151]
[58 150]
[60 148]
[61 147]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[68 137]
[69 136]
[70 135]
[71 134]
[75 133]
[76 132]
[77 131]
[78 130]
[79 129]
[81 127]
[83 125]
[84 124]
[85 123]
[86 121]
[89 118]
[90 117]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
