%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[101.61665344 326.43670654]
[86.58460236 326.81796265]
[71.70436096 324.65313721]
[57.40407181 320.00451660]
[44.09517670 313.00585938]
[32.16060257 303.85852051]
[21.94373131 292.82565308]
[13.73851967 280.22476196]
[7.78105021 266.41836548]
[4.24273062 251.80371094]
[3.22536588 236.80128479]
[4.75822687 221.84272766]
[8.79721069 207.35844421]
[15.22610760 193.76516724]
[23.85994530 181.45399475]
[34.45030975 170.77915955]
[46.69249725 162.04777527]
[60.23427582 155.51109314]
[74.68601990 151.35716248]
[89.63192749 149.70552063]
[90.52474213 134.73211670]
[91.41755676 119.75870514]
[92.31037140 104.78530121]
[90.18519592 101.56723022]
[89.48881531 97.42803192]
[90.60080719 93.02684021]
[93.59214783 89.16786194]
[95.15267181 74.24925232]
[96.71319580 59.33065033]
[98.27371979 44.41204453]
[99.83424377 29.49344063]
[84.98802185 27.33703041]
[70.23995972 24.58835411]
[55.61368561 21.25181389]
[41.13261414 17.33275223]
[26.81993866 12.83744812]
[12.69857979 7.77309752]
[-1.20884931 2.14781141]
[-14.88007736 -4.02940178]
[-28.29321098 -10.74864960]
[-41.42676926 -17.99917221]
[-54.25971985 -25.76935768]
[-66.77151489 -34.04676437]
[-78.94211578 -42.81813431]
[-90.75202942 -52.06942368]
[-102.18235016 -61.78581238]
[-113.21476746 -71.95175171]
[-123.83161163 -82.55094910]
[-134.01588440 -93.56643677]
[-143.75128174 -104.98056793]
[-153.02220154 -116.77507782]
[-161.81381226 -128.93106079]
[-170.11203003 -141.42906189]
[-177.90354919 -154.24906921]
[-185.17591858 -167.37054443]
[-191.91748047 -180.77249146]
[-198.11743164 -194.43341064]
[-203.76583862 -208.33146667]
[-208.85368347 -222.44438171]
[-213.37280273 -236.74955750]
[-217.31594849 -251.22409058]
[-220.67681885 -265.84478760]
[-223.45002747 -280.58825684]
[-225.63113403 -295.43087769]
[-227.21664429 -310.34887695]
[-228.20404053 -325.31835938]
[-228.59170532 -340.31536865]
[-228.37902832 -355.31585693]
[-227.56637573 -370.29583740]
[-226.15501404 -385.23132324]
[-224.14723206 -400.09838867]
[-221.54621887 -414.87319946]
[-218.35617065 -429.53210449]
[-214.58216858 -444.05166626]
[-210.23025513 -458.40859985]
[-205.30743408 -472.57989502]
[-199.82154846 -486.54290771]
[-193.78140259 -500.27526855]
[-187.19667053 -513.75494385]
[-180.07789612 -526.96038818]
[-172.43647766 -539.87042236]
[-164.28463745 -552.46435547]
[-155.63546753 -564.72210693]
[-146.50277710 -576.62396240]
[-136.90121460 -588.15093994]
[-126.84615326 -599.28448486]
[-116.35369110 -610.00683594]
[-105.44063568 -620.30078125]
[-94.12445831 -630.14990234]
[-82.42328644 -639.53833008]
[-70.35585022 -648.45111084]
[-57.94148636 -656.87390137]
[-45.20006561 -664.79333496]
[-32.15199661 -672.19659424]
[-18.81817055 -679.07183838]
[-5.21994400 -685.40814209]
[8.62090683 -691.19531250]
[22.68221855 -696.42407227]
[36.94147110 -701.08605957]
[51.37583160 -705.17382812]
[65.96218109 -708.68078613]
[80.67716980 -711.60131836]
[95.49722290 -713.93084717]
[110.39860535 -715.66546631]
[125.35746765 -716.80255127]
[140.34983826 -717.34027100]
[155.35173035 -717.27764893]
[170.33909607 -716.61486816]
[185.28794861 -715.35302734]
[200.17433167 -713.49401855]
[214.97442627 -711.04095459]
[229.66453552 -707.99768066]
[244.22111511 -704.36914062]
[258.62084961 -700.16107178]
[272.84069824 -695.38024902]
[286.85787964 -690.03430176]
[300.64996338 -684.13183594]
[314.19485474 -677.68231201]
[327.47082520 -670.69598389]
[340.45666504 -663.18408203]
[353.13156128 -655.15863037]
[365.47518921 -646.63250732]
[377.46783447 -637.61938477]
[389.09024048 -628.13360596]
[400.32382202 -618.19042969]
[411.15060425 -607.80572510]
[421.55322266 -596.99621582]
[431.51501465 -585.77911377]
[441.02005005 -574.17242432]
[450.05310059 -562.19476318]
[458.59967041 -549.86529541]
[466.64611816 -537.20373535]
[474.17953491 -524.23034668]
[481.18786621 -510.96597290]
[487.65988159 -497.43182373]
[493.58523560 -483.64956665]
[498.95437622 -469.64126587]
[503.75878906 -455.42935181]
[507.99072266 -441.03662109]
[511.64343262 -426.48608398]
[514.71105957 -411.80102539]
[517.18865967 -397.00503540]
[519.07232666 -382.12173462]
[520.35894775 -367.17501831]
[521.04663086 -352.18875122]
[521.13409424 -337.18701172]
[520.62127686 -322.19375610]
[519.50897217 -307.23303223]
[517.79907227 -292.32876587]
[515.49414062 -277.50488281]
[512.59802246 -262.78506470]
[509.11523438 -248.19293213]
[505.05142212 -233.75181580]
[500.41308594 -219.48484802]
[495.20764160 -205.41488647]
[489.44345093 -191.56445312]
[483.12969971 -177.95573425]
[476.27655029 -164.61053467]
[468.89492798 -151.55020142]
[460.99670410 -138.79565430]
[452.59448242 -126.36734009]
[443.70172119 -114.28514099]
[434.33270264 -102.56841278]
[424.50238037 -91.23592377]
[414.22653198 -80.30580902]
[403.52160645 -69.79557800]
[392.40475464 -59.72206497]
[380.89373779 -50.10140228]
[369.00701904 -40.94898987]
[356.76364136 -32.27949142]
[344.18322754 -24.10678673]
[331.28585815 -16.44396591]
[318.09225464 -9.30329704]
[304.62353516 -2.69621849]
[290.90121460 3.36669040]
[276.94732666 8.87572002]
[262.78421021 13.82204914]
[248.43450928 18.19775581]
[233.92123413 21.99583244]
[219.26762390 25.21019745]
[204.49714661 27.83570290]
[189.63343811 29.86814308]
[174.70033264 31.30426598]
[159.72171021 32.14176941]
[144.72157288 32.37931442]
[129.72395325 32.01651764]
[114.75284576 31.05396461]
[113.19232178 45.97256851]
[111.63179779 60.89117432]
[110.07127380 75.80977631]
[108.51075745 90.72838593]
[107.28377533 105.67811584]
[106.39096069 120.65151978]
[105.49814606 135.62492371]
[104.60533142 150.59832764]
[119.24906921 154.01432800]
[133.10479736 159.85612488]
[145.77386475 167.95568848]
[156.89175415 178.07994080]
[166.13858032 189.93760681]
[173.24829102 203.18751526]
[178.01632690 217.44842529]
[180.30551147 232.31004333]
[180.04997253 247.34477234]
[177.25706482 262.11999512]
[172.00714111 276.21066284]
[164.45124817 289.21127319]
[154.80679321 300.74786377]
[143.35127258 310.48843384]
[130.41427612 318.15277100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 195]
[21 194]
[22 193]
[23 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
