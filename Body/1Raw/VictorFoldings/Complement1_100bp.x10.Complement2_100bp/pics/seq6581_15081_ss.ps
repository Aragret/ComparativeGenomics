%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[40.52304077 515.83569336]
[52.76831055 506.45184326]
[51.43007660 491.51165771]
[50.09184265 476.57147217]
[48.75360870 461.63128662]
[47.41537476 446.69110107]
[41.72126007 460.56829834]
[32.23617554 472.18869019]
[19.78067589 480.54693604]
[5.43228769 484.92001343]
[-9.56770897 484.92959595]
[-23.92166519 480.57482910]
[-36.38782120 472.23248291]
[-45.88772964 460.62420654]
[-51.59955215 446.75427246]
[-53.02915955 431.82257080]
[-50.05287552 417.12078857]
[-42.92818069 403.92083740]
[-32.27143097 393.36462402]
[-19.00454140 386.36538696]
[-4.27523184 383.52856445]
[10.64226627 385.09963989]
[24.45743942 390.94268799]
[35.97513580 400.55218506]
[44.19896317 413.09686279]
[48.41699219 427.48794556]
[51.30226517 412.76806641]
[53.74798965 397.96878052]
[55.75200653 383.10327148]
[57.75601959 368.23773193]
[59.76003265 353.37219238]
[53.79246902 339.72531128]
[63.30412292 327.08258057]
[65.30813599 312.21704102]
[67.31214905 297.35153198]
[61.34458923 283.70462036]
[70.85623932 271.06188965]
[63.32576752 255.21073914]
[74.70172882 240.73078918]
[76.48419189 225.83706665]
[78.26665497 210.94334412]
[80.04912567 196.04963684]
[66.55257416 184.66038513]
[62.55944443 167.29646301]
[69.85255432 150.86813354]
[85.68428040 142.02990723]
[87.02251434 127.08972168]
[77.12791443 138.36344910]
[62.95411682 143.27297974]
[48.20612335 140.53497314]
[36.73902130 130.86515808]
[31.55028343 116.79116821]
[33.99623489 101.99193573]
[43.43750763 90.33593750]
[57.40617752 84.87001801]
[72.25086975 87.02296448]
[84.09120941 96.23199463]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[94.86899567 56.55867004]
[105.39114380 46.01667023]
[108.93081665 31.44029427]
[112.47048950 16.86392021]
[116.01016235 2.28754401]
[119.54982758 -12.28883171]
[113.95729065 -29.83320427]
[126.55651093 -42.04903793]
[129.87876892 -56.67649841]
[133.20103455 -71.30395508]
[136.52328491 -85.93141937]
[139.84555054 -100.55887604]
[135.35693359 -115.72999573]
[145.72094727 -126.42749023]
[147.17036438 -141.35729980]
[146.72377014 -156.35064697]
[146.27716064 -171.34399414]
[145.60737610 -186.32904053]
[144.71455383 -201.30244446]
[143.82174683 -216.27584839]
[142.92892456 -231.24925232]
[142.03611755 -246.22265625]
[132.92474365 -255.35205078]
[132.48936462 -267.84182739]
[140.41830444 -276.97738647]
[139.74851990 -291.96240234]
[131.40274048 -305.40332031]
[138.56401062 -318.46340942]
[137.89422607 -333.44842529]
[137.22444153 -348.43347168]
[136.55465698 -363.41851807]
[135.88487244 -378.40356445]
[121.17813873 -381.81158447]
[107.93680573 -389.06207275]
[97.14344788 -399.61697388]
[89.59902954 -412.69305420]
[85.86337280 -427.32000732]
[86.21370697 -442.41238403]
[90.62402344 -456.85025024]
[98.76705170 -469.56219482]
[110.03852081 -479.60491943]
[123.60202026 -486.23321533]
[138.45104980 -488.95516968]
[153.48370361 -487.56881714]
[167.58445740 -482.17706299]
[179.70695496 -473.17996216]
[188.95161438 -461.24517822]
[194.63241577 -447.25836182]
[196.32783508 -432.25741577]
[193.91203308 -417.35552979]
[187.56428528 -403.65850830]
[177.75563049 -392.18273926]
[165.21394348 -383.77984619]
[150.86991882 -379.07333374]
[151.53970337 -364.08828735]
[152.20948792 -349.10327148]
[152.87927246 -334.11822510]
[153.54905701 -319.13317871]
[161.84693909 -306.76409912]
[154.73356628 -292.63220215]
[155.40335083 -277.64715576]
[165.63101196 -263.38665771]
[157.00952148 -247.11547852]
[157.90232849 -232.14207458]
[158.79515076 -217.16865540]
[159.68795776 -202.19525146]
[160.58078003 -187.22184753]
[163.49484253 -183.43803406]
[164.06288147 -177.78344727]
[161.27050781 -171.79060364]
[161.71711731 -156.79725647]
[162.16372681 -141.80390930]
[168.88728333 -155.21261597]
[179.55413818 -165.75862122]
[193.03860474 -172.32894897]
[207.91761780 -174.23023987]
[222.62097168 -171.26182556]
[235.59698486 -163.73698425]
[245.47625732 -152.44982910]
[251.21621704 -138.59152222]
[252.21110535 -123.62454987]
[248.35592651 -109.12841797]
[240.05754089 -96.63294983]
[228.19169617 -87.45681000]
[214.01060486 -82.56838226]
[199.01084900 -82.48355865]
[184.77537537 -87.21128082]
[172.80648804 -96.25262451]
[164.36730957 -108.65344238]
[160.34841919 -123.10523224]
[165.07466125 -108.98036194]
[154.47300720 -97.23661804]
[151.15074158 -82.60916138]
[147.82849121 -67.98169708]
[144.50622559 -53.35424042]
[141.18397522 -38.72677994]
[147.36312866 -28.32751846]
[144.71501160 -16.11394882]
[134.12620544 -8.74915886]
[130.58653259 5.82721663]
[127.04685974 20.40359116]
[123.50718689 34.97996902]
[119.96751404 49.55634308]
[124.48294830 63.75000763]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[101.96269989 128.42796326]
[100.62446594 143.36814880]
[111.04341888 150.27563477]
[117.49942017 160.89582825]
[118.81974030 173.18142700]
[114.81483459 184.79443359]
[106.30274200 193.55097961]
[94.94284058 197.83209229]
[93.16037750 212.72581482]
[91.37790680 227.61953735]
[89.59544373 242.51324463]
[96.93930054 253.11657715]
[95.14805603 265.48489380]
[85.72177124 273.06588745]
[91.54598999 287.77606201]
[82.17768097 299.35552979]
[80.17366791 314.22106934]
[78.16965485 329.08657837]
[83.99387360 343.79675293]
[74.62555695 355.37622070]
[72.62154388 370.24176025]
[70.61753082 385.10726929]
[68.61351776 399.97280884]
[70.40469360 403.92825317]
[70.80387115 407.85321045]
[69.99156952 411.31378174]
[68.27067566 413.97930908]
[66.02215576 415.65332031]
[63.13688278 430.37322998]
[62.35556030 445.35287476]
[63.69379425 460.29306030]
[65.03202820 475.23324585]
[66.37026215 490.17343140]
[67.70849609 505.11361694]
[81.42653656 512.17187500]
[89.13111115 525.53759766]
[88.36373138 540.94586182]
[79.36925507 553.47991943]
[65.01778412 559.14025879]
[49.88883209 556.12060547]
[38.80998611 545.38452148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[26 198]
[27 197]
[28 192]
[29 191]
[30 190]
[31 189]
[33 187]
[34 186]
[35 185]
[37 183]
[39 180]
[40 179]
[41 178]
[42 177]
[46 171]
[47 170]
[58 169]
[60 167]
[61 166]
[63 164]
[64 163]
[65 162]
[66 161]
[67 160]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[75 151]
[76 133]
[77 132]
[78 131]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[86 122]
[87 121]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
