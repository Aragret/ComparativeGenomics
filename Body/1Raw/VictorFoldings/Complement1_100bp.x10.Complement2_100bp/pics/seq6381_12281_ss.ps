%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[205.80601501 838.05578613]
[191.55755615 833.35852051]
[177.54492188 827.99853516]
[163.79893494 821.98767090]
[150.34979248 815.33905029]
[137.22708130 808.06738281]
[124.45961761 800.18859863]
[112.07549286 791.72009277]
[100.10191345 782.68035889]
[88.56520844 773.08935547]
[77.49073792 762.96813965]
[66.90284729 752.33892822]
[56.82480621 741.22515869]
[47.27877045 729.65118408]
[38.28572464 717.64251709]
[29.86543655 705.22552490]
[22.03641891 692.42749023]
[14.81587791 679.27655029]
[8.21968842 665.80163574]
[2.26234961 652.03234863]
[-3.04304314 637.99902344]
[-7.68482733 623.73236084]
[-11.65279961 609.26385498]
[-14.93823624 594.62524414]
[-17.53391647 579.84869385]
[-19.43413544 564.96673584]
[-20.63471222 550.01208496]
[-21.13301086 535.01763916]
[-20.92793655 520.01623535]
[-20.01993752 505.04098511]
[-18.41101074 490.12472534]
[-16.10469246 475.30029297]
[-13.10605431 460.60025024]
[-9.42168617 446.05691528]
[-5.05968857 431.70227051]
[-0.02964891 417.56787109]
[5.65737534 403.68475342]
[11.98888206 390.08346558]
[18.95095444 376.79388428]
[26.52828789 363.84524536]
[34.70422363 351.26602173]
[43.46079254 339.08383179]
[52.77874374 327.32550049]
[62.63759613 316.01681519]
[73.01567841 305.18267822]
[83.89016724 294.84689331]
[95.23717499 285.03219604]
[107.03174591 275.76013184]
[119.24795532 267.05108643]
[131.85894775 258.92422485]
[144.83700562 251.39741516]
[158.15361023 244.48718262]
[151.87623596 230.86386108]
[145.59887695 217.24053955]
[139.32151794 203.61723328]
[133.04415894 189.99391174]
[120.69073486 181.67272949]
[121.94267273 165.90112305]
[115.66531372 152.27781677]
[109.38795471 138.65449524]
[103.11058807 125.03118134]
[96.83322906 111.40786743]
[95.32040405 126.33138275]
[88.27951813 139.57623291]
[76.75504303 149.17759705]
[62.45656586 153.71121216]
[47.50518036 152.50450134]
[34.11883926 145.73649597]
[24.28332520 134.41119385]
[19.45767593 120.20861816]
[20.35774803 105.23564911]
[26.85002518 91.71343231]
[37.97141266 81.64791107]
[52.07212067 76.53224182]
[67.06038666 77.12530518]
[80.71280670 83.33912659]
[91.00308990 94.25030518]
[80.40143585 82.50656128]
[85.12768555 68.38169861]
[81.80542755 53.75423813]
[78.48316193 39.12677765]
[73.65652466 53.32901382]
[63.53055191 64.39539337]
[49.81166077 70.46103668]
[34.81172180 70.50377655]
[21.05848694 64.51640320]
[10.86962128 53.50790787]
[5.96212435 39.33340836]
[7.16299725 24.38155556]
[14.26987171 11.17200089]
[26.08511353 1.93078601]
[40.61764908 -1.78478205]
[55.41848755 0.65143549]
[67.99343109 8.82889271]
[76.22398376 21.37108803]
[75.77737427 6.37773895]
[75.33077240 -8.61561108]
[61.10758209 -13.97931290]
[50.02308655 -24.38135147]
[43.76759338 -38.23549271]
[43.29501724 -53.42908096]
[48.67742538 -67.64520264]
[59.09403610 -78.71600342]
[72.95639801 -84.95326996]
[88.15058899 -85.40586090]
[102.35961914 -80.00475311]
[113.41670990 -69.57358551]
[119.63573456 -55.70303726]
[120.06833649 -40.50825882]
[114.64854431 -26.30634689]
[104.20284271 -15.26298809]
[90.32411957 -9.06221676]
[90.77072906 5.93113327]
[91.21733093 20.92448235]
[93.11062622 35.80451965]
[96.43288422 50.43198013]
[99.75514221 65.05944061]
[110.11917114 75.75692749]
[105.63054657 90.92804718]
[110.45654297 105.13050079]
[116.73390961 118.75382233]
[123.01126862 132.37713623]
[129.28863525 146.00045776]
[135.56599426 159.62376404]
[148.36840820 168.91938782]
[146.66748047 183.71655273]
[152.94483948 197.33987427]
[159.22219849 210.96318054]
[165.49955750 224.58650208]
[171.77691650 238.20982361]
[185.68203735 232.57681274]
[199.83590698 227.60176086]
[214.20741272 223.29560852]
[228.76495361 219.66781616]
[243.47654724 216.72634888]
[258.30984497 214.47769165]
[273.23223877 212.92677307]
[288.21090698 212.07699585]
[303.21295166 211.93025208]
[318.20538330 212.48684692]
[333.15527344 213.74555969]
[348.02972412 215.70361328]
[362.79602051 218.35673523]
[377.42175293 221.69905090]
[391.87475586 225.72325134]
[406.12322998 230.42047119]
[420.13586426 235.78038025]
[433.88189697 241.79121399]
[447.33105469 248.43974304]
[460.45382690 255.71134949]
[473.22131348 263.59005737]
[485.60546875 272.05856323]
[497.57907104 281.09823608]
[509.11584473 290.68920898]
[520.19036865 300.81036377]
[530.77825928 311.43951416]
[540.85638428 322.55325317]
[550.40246582 334.12716675]
[559.39556885 346.13580322]
[567.81591797 358.55276489]
[575.64495850 371.35073853]
[582.86553955 384.50164795]
[589.46179199 397.97653198]
[595.41918945 411.74578857]
[600.72467041 425.77914429]
[605.36651611 440.04574585]
[609.33453369 454.51428223]
[612.62005615 469.15286255]
[615.21582031 483.92938232]
[617.11608887 498.81130981]
[618.31671143 513.76593018]
[618.81506348 528.76043701]
[618.61004639 543.76184082]
[617.70214844 558.73706055]
[616.09326172 573.65332031]
[613.78704834 588.47778320]
[610.78845215 603.17785645]
[607.10412598 617.72119141]
[602.74218750 632.07586670]
[597.71221924 646.21026611]
[592.02526855 660.09344482]
[585.69378662 673.69476318]
[578.73181152 686.98431396]
[571.15454102 699.93298340]
[562.97863770 712.51226807]
[554.22210693 724.69451904]
[544.90423584 736.45288086]
[535.04541016 747.76159668]
[524.66741943 758.59576416]
[513.79296875 768.93164062]
[502.44598389 778.74639893]
[490.65145874 788.01849365]
[478.43527222 796.72760010]
[465.82431030 804.85449219]
[452.84628296 812.38134766]
[439.52972412 819.29168701]
[425.90390015 825.57019043]
[411.99874878 831.20312500]
[397.84484863 836.17810059]
[383.47332764 840.48419189]
[368.91577148 844.11193848]
[354.20419312 847.05334473]
[339.37088013 849.30194092]
[324.44848633 850.85278320]
[309.46978760 851.70251465]
[294.46774292 851.84918213]
[279.47531128 851.29254150]
[264.52545166 850.03375244]
[249.65100098 848.07562256]
[234.88470459 845.42242432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[77 119]
[79 117]
[80 116]
[81 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
