%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[51.54333115 931.02624512]
[36.54466248 930.70300293]
[21.57216835 929.76019287]
[6.65142584 928.19946289]
[-8.19207287 926.02343750]
[-22.93296814 923.23583984]
[-37.54607391 919.84149170]
[-52.00642776 915.84619141]
[-66.28932190 911.25665283]
[-80.37034607 906.08087158]
[-94.22545624 900.32757568]
[-107.83097839 894.00665283]
[-121.16366577 887.12884521]
[-134.20072937 879.70593262]
[-146.91992188 871.75061035]
[-159.29948425 863.27648926]
[-171.31828308 854.29803467]
[-182.95576477 844.83056641]
[-194.19207764 834.89025879]
[-205.00799561 824.49407959]
[-215.38507080 813.65979004]
[-225.30554199 802.40600586]
[-234.75247192 790.75183105]
[-243.70973206 778.71716309]
[-252.16200256 766.32269287]
[-260.09484863 753.58947754]
[-267.49472046 740.53936768]
[-274.34899902 727.19451904]
[-280.64590454 713.57788086]
[-286.37475586 699.71264648]
[-291.52572632 685.62249756]
[-296.08999634 671.33154297]
[-300.05981445 656.86413574]
[-303.42837524 642.24511719]
[-306.18991089 627.49926758]
[-308.33975220 612.65197754]
[-309.87417603 597.72851562]
[-310.79055786 582.75439453]
[-311.08737183 567.75518799]
[-310.76406860 552.75646973]
[-309.82122803 537.78399658]
[-308.26046753 522.86328125]
[-306.08444214 508.01977539]
[-303.29684448 493.27886963]
[-299.90246582 478.66577148]
[-295.90710449 464.20541382]
[-291.31759644 449.92254639]
[-286.14175415 435.84152222]
[-280.38845825 421.98641968]
[-274.06747437 408.38092041]
[-267.18966675 395.04821777]
[-259.76675415 382.01116943]
[-251.81143188 369.29199219]
[-243.33729553 356.91244507]
[-234.35879517 344.89367676]
[-224.89129639 333.25619507]
[-214.95095825 322.01989746]
[-204.55477905 311.20397949]
[-193.72052002 300.82693481]
[-182.46667480 290.90649414]
[-170.81246948 281.45956421]
[-158.77784729 272.50231934]
[-146.38333130 264.05007935]
[-133.65011597 256.11724854]
[-120.59996033 248.71737671]
[-107.25515747 241.86314392]
[-93.63849640 235.56623840]
[-79.77324677 229.83741760]
[-65.68309784 224.68647766]
[-51.39212036 220.12220764]
[-36.92473602 216.15242004]
[-22.30565834 212.78387451]
[-7.55986309 210.02235413]
[7.28745508 207.87255859]
[22.21092987 206.33816528]
[37.18506622 205.42179871]
[52.18428040 205.12501526]
[67.18294525 205.44831848]
[82.15543365 206.39117432]
[83.71595764 191.47257996]
[85.27648163 176.55397034]
[86.83700562 161.63536072]
[88.28642273 146.70555115]
[89.62465668 131.76538086]
[90.96289062 116.82518768]
[81.75296783 105.63932800]
[83.04565430 91.20758820]
[94.09692383 81.83657837]
[95.43515778 66.89639282]
[96.77339172 51.95620728]
[98.11162567 37.01602173]
[98.55822754 22.02267265]
[98.11162567 7.02932215]
[97.66501617 -7.96402788]
[97.21841431 -22.95737839]
[82.69294739 -27.18421555]
[70.18572235 -35.69446564]
[60.92205429 -47.65438461]
[55.80950928 -61.89225769]
[55.34896088 -77.01320648]
[59.58552933 -91.53583527]
[68.10415649 -104.03736115]
[80.07028198 -113.29300690]
[94.31157684 -118.39601135]
[109.43283081 -118.84642792]
[123.95261383 -114.60012817]
[136.44842529 -106.07312775]
[145.69606018 -94.10079956]
[150.78952026 -79.85608673]
[151.22981262 -64.73453522]
[146.97377014 -50.21760178]
[138.43840027 -37.72750473]
[126.45988464 -28.48789787]
[112.21176147 -23.40398407]
[112.65837097 -8.41063404]
[113.10497284 6.58271646]
[113.55158234 21.57606697]
[123.08606720 9.99619198]
[137.57675171 6.12058115]
[151.61894226 11.39474106]
[159.97526550 23.85154152]
[159.52900696 38.84490204]
[150.44662476 50.78266907]
[136.11561584 55.21235657]
[121.88109589 50.48179245]
[113.05181122 38.35425568]
[111.71357727 53.29444122]
[110.37534332 68.23462677]
[109.03710938 83.17481232]
[118.24703217 94.36067200]
[116.95434570 108.79241180]
[105.90307617 118.16342163]
[104.56484222 133.10360718]
[103.22660828 148.04379272]
[105.57792664 156.87040710]
[101.75560760 163.19589233]
[100.19509125 178.11450195]
[98.63456726 193.03309631]
[97.07404327 207.95170593]
[111.91754913 210.12767029]
[126.65844727 212.91519165]
[141.27156067 216.30949402]
[155.73193359 220.30479431]
[170.01483154 224.89424133]
[184.09588623 230.07002258]
[197.95100403 235.82327271]
[211.55654907 242.14418030]
[224.88925171 249.02192688]
[237.92634583 256.44479370]
[250.64555359 264.40005493]
[263.02514648 272.87414551]
[275.04397583 281.85256958]
[286.68148804 291.32003784]
[297.91781616 301.26031494]
[308.73376465 311.65643311]
[319.11087036 322.49066162]
[329.03137207 333.74447632]
[338.47836304 345.39862061]
[347.43563843 357.43319702]
[355.88793945 369.82769775]
[363.82083130 382.56085205]
[371.22076416 395.61099243]
[378.07504272 408.95578003]
[384.37200928 422.57238770]
[390.10089111 436.43762207]
[395.25189209 450.52774048]
[399.81622314 464.81869507]
[403.78610229 479.28607178]
[407.15469360 493.90512085]
[409.91629028 508.65090942]
[412.06616211 523.49822998]
[413.60061646 538.42169189]
[414.51705933 553.39581299]
[414.81390381 568.39501953]
[414.49066162 583.39367676]
[413.54785156 598.36621094]
[411.98712158 613.28692627]
[409.81112671 628.13043213]
[407.02359009 642.87133789]
[403.62927246 657.48443604]
[399.63397217 671.94482422]
[395.04449463 686.22772217]
[389.86868286 700.30877686]
[384.11541748 714.16387939]
[377.79449463 727.76940918]
[370.91671753 741.10211182]
[363.49383545 754.13916016]
[355.53857422 766.85839844]
[347.06445312 779.23797607]
[338.08599854 791.25677490]
[328.61853027 802.89428711]
[318.67822266 814.13061523]
[308.28207397 824.94653320]
[297.44784546 835.32360840]
[286.19403076 845.24407959]
[274.53985596 854.69104004]
[262.50524902 863.64831543]
[250.11076355 872.10058594]
[237.37757874 880.03350830]
[224.32743835 887.43334961]
[210.98265076 894.28765869]
[197.36601257 900.58459473]
[183.50077820 906.31347656]
[169.41064453 911.46441650]
[155.11968994 916.02874756]
[140.65231323 919.99859619]
[126.03324127 923.36718750]
[111.28746033 926.12872314]
[96.44014740 928.27856445]
[81.51667786 929.81304932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 139]
[80 138]
[81 137]
[82 136]
[83 134]
[84 133]
[85 132]
[88 129]
[89 128]
[90 127]
[91 126]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
