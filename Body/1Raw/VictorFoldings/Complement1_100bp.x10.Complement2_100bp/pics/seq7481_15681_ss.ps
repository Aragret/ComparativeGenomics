%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[67.02890778 608.50463867]
[52.16403198 611.01440430]
[37.13053131 609.89318848]
[22.80242157 605.20605469]
[10.01272869 597.22564697]
[-0.49497420 586.41583252]
[-8.10978317 573.40515137]
[-12.38898373 558.95001221]
[-13.08378696 543.89074707]
[-10.15380001 529.10296631]
[-3.76936722 515.44641113]
[5.69832897 503.71496582]
[17.69884872 494.59075928]
[31.53449631 488.60424805]
[46.40088654 486.10348511]
[47.51653671 471.14505005]
[48.63218689 456.18658447]
[49.30197144 441.20153809]
[49.52529907 426.20321655]
[49.74862671 411.20486450]
[49.97195435 396.20654297]
[50.19528198 381.20819092]
[47.57071304 377.21813965]
[47.42481995 371.53695679]
[50.65518570 365.76840210]
[51.32497025 350.78335571]
[49.53498459 348.62600708]
[48.49169922 345.62966919]
[48.51895905 342.07513428]
[49.83306122 338.35522461]
[52.50705338 334.93417358]
[54.06757736 320.01556396]
[55.62810135 305.09695435]
[57.18862152 290.17834473]
[55.53022003 287.91830444]
[54.66712570 284.86514282]
[54.90590668 281.31854248]
[56.43909454 277.68347168]
[59.31196976 274.42761230]
[61.75769806 259.62835693]
[64.20342255 244.82907104]
[62.19978714 240.49382019]
[62.89826202 234.85385132]
[66.94860077 229.62831116]
[69.83386993 214.90841675]
[72.71914673 200.18852234]
[75.60441589 185.46864319]
[78.48969269 170.74874878]
[64.29024506 164.75254822]
[51.64232635 155.94294739]
[41.09547043 144.70272827]
[33.10791397 131.52026367]
[28.02670288 116.96828461]
[26.07261086 101.67906189]
[27.33053780 86.31689453]
[31.74582863 71.54923248]
[39.12664795 58.01770401]
[49.15230942 46.31023788]
[61.38721848 36.93549728]
[75.29978943 30.30080605]
[90.28553772 26.69442368]
[105.69336700 26.27304459]
[108.35916138 11.51182842]
[111.02495575 -3.24938917]
[99.63687897 -18.38960075]
[102.87620544 -36.73134613]
[118.22585297 -46.70652008]
[120.45096588 -61.54056549]
[122.67608643 -76.37461090]
[124.90119934 -91.20864868]
[127.12631989 -106.04269409]
[125.21420288 -110.89974213]
[125.34343719 -115.54049683]
[127.08979797 -119.22360229]
[129.79631042 -121.48350525]
[132.68157959 -136.20339966]
[135.56684875 -150.92329407]
[138.45211792 -165.64317322]
[140.34541321 -180.52320862]
[141.23823547 -195.49661255]
[142.13104248 -210.47003174]
[142.91236877 -225.44966125]
[143.58215332 -240.43470764]
[144.25193787 -255.41973877]
[144.92172241 -270.40478516]
[145.59150696 -285.38983154]
[138.47813416 -299.52172852]
[146.77601624 -311.89080811]
[147.44580078 -326.87585449]
[148.11558533 -341.86087036]
[148.78536987 -356.84591675]
[141.67199707 -370.97781372]
[149.96989441 -383.34689331]
[150.63967896 -398.33193970]
[151.30946350 -413.31698608]
[151.97924805 -428.30203247]
[137.63520813 -433.00851440]
[125.09352875 -441.41143799]
[115.28488159 -452.88717651]
[108.93712616 -466.58422852]
[106.52132416 -481.48611450]
[108.21673584 -496.48706055]
[113.89754486 -510.47387695]
[123.14220428 -522.40863037]
[135.26470947 -531.40576172]
[149.36546326 -536.79748535]
[164.39811707 -538.18383789]
[179.24713135 -535.46191406]
[192.81063843 -528.83361816]
[204.08210754 -518.79089355]
[212.22512817 -506.07891846]
[216.63545227 -491.64108276]
[216.98577881 -476.54870605]
[213.25013733 -461.92175293]
[205.70570374 -448.84564209]
[194.91235352 -438.29074097]
[181.67102051 -431.04025269]
[166.96427917 -427.63223267]
[166.29449463 -412.64718628]
[165.62471008 -397.66217041]
[164.95492554 -382.67712402]
[172.11621094 -369.61706543]
[163.77041626 -356.17614746]
[163.10063171 -341.19110107]
[162.43084717 -326.20605469]
[161.76106262 -311.22100830]
[168.92234802 -298.16094971]
[160.57655334 -284.72003174]
[159.90676880 -269.73498535]
[159.23698425 -254.74995422]
[158.56719971 -239.76492310]
[157.89739990 -224.77987671]
[160.73910522 -217.95736694]
[157.10444641 -209.57720947]
[156.21163940 -194.60380554]
[155.31881714 -179.63040161]
[165.31840515 -190.81111145]
[179.74658203 -194.91325378]
[194.13262939 -190.66574097]
[204.01889038 -179.38468933]
[206.34197998 -164.56567383]
[200.38206482 -150.80052185]
[187.98588562 -142.35450745]
[172.99455261 -141.84474182]
[160.05328369 -149.42915344]
[153.17201233 -162.75790405]
[150.28674316 -148.03800964]
[147.40147400 -133.31813049]
[144.51618958 -118.59823608]
[141.96035767 -103.81758118]
[139.73524475 -88.98353577]
[137.51013184 -74.14949036]
[135.28501892 -59.31544876]
[133.05989075 -44.48140335]
[141.66871643 -36.99444580]
[145.63539124 -26.16942215]
[143.86585999 -14.65583420]
[136.68540955 -5.33156967]
[125.78617096 -0.58359367]
[123.12037659 14.17762375]
[120.45458221 28.93884087]
[133.96011353 34.31294632]
[146.15345764 42.22512054]
[156.56349182 52.36965179]
[164.78796387 64.35456085]
[170.50912476 77.71677399]
[173.50587463 91.93998718]
[173.66246033 106.47462463]
[170.97279358 120.75909424]
[165.54083252 134.24145508]
[157.57644653 146.40075684]
[147.38737488 156.76719666]
[135.36730957 164.94021606]
[121.98069000 170.60401917]
[107.74475861 173.53976440]
[93.20957947 173.63401794]
[90.32431030 188.35391235]
[87.43903351 203.07380676]
[84.55376434 217.79368591]
[81.66849518 232.51358032]
[79.00269318 247.27479553]
[76.55696869 262.07406616]
[74.11124420 276.87335205]
[72.10723114 291.73886108]
[70.54670715 306.65747070]
[68.98618317 321.57608032]
[67.42565918 336.49468994]
[66.31001282 351.45312500]
[65.64022827 366.43817139]
[65.19361877 381.43151855]
[64.97029114 396.42987061]
[64.74696350 411.42819214]
[64.52363586 426.42654419]
[64.30030823 441.42486572]
[66.54882050 445.13946533]
[67.41157532 448.98916626]
[67.01625824 452.52172852]
[65.62429810 455.37289429]
[63.59063721 457.30224609]
[62.47499084 472.26068115]
[61.35934067 487.21914673]
[75.69028473 491.89755249]
[88.48481750 499.87020874]
[98.99906921 510.67364502]
[106.62176514 523.67968750]
[110.90972900 538.13226318]
[111.61366272 553.19110107]
[108.69264221 567.98065186]
[102.31649017 581.64111328]
[92.85591125 593.37823486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 201]
[16 200]
[17 199]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[25 189]
[26 188]
[31 187]
[32 186]
[33 185]
[34 184]
[39 183]
[40 182]
[41 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[62 161]
[63 160]
[64 159]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 136]
[80 135]
[81 134]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[88 126]
[89 125]
[90 124]
[91 123]
[93 121]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
