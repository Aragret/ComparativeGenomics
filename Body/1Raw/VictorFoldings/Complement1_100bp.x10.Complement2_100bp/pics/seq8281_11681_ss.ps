%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[175.18598938 420.49014282]
[175.57734680 405.48559570]
[177.27496338 390.57226562]
[180.26591492 375.86364746]
[184.52743530 361.47167969]
[190.02708435 347.50588989]
[196.72302246 334.07260132]
[204.56428528 321.27398682]
[213.49118042 309.20751953]
[223.43579102 297.96499634]
[213.10911560 287.08566284]
[202.78245544 276.20632935]
[192.45578003 265.32699585]
[182.12911987 254.44766235]
[171.80244446 243.56832886]
[161.47578430 232.68899536]
[147.10197449 228.78474426]
[143.21310425 213.44892883]
[140.41757202 213.24116516]
[137.53590393 211.91352844]
[134.99505615 209.42768860]
[133.22795105 205.90037537]
[132.61956787 201.60108948]
[122.95875549 190.12640381]
[126.54988861 204.69018555]
[127.07755280 219.68089294]
[124.51931763 234.46113586]
[118.98394775 248.40242004]
[110.70681763 260.91198730]
[100.03987885 271.45791626]
[87.43668365 279.59176636]
[73.43313599 284.96768188]
[58.62467194 287.35711670]
[43.64095306 286.65844727]
[29.11909485 282.90136719]
[15.67657375 276.24563599]
[3.88497424 266.97427368]
[-5.75432014 255.48149109]
[-12.83144188 242.25598145]
[-17.04546738 227.86007690]
[-18.21721458 212.90591431]
[-16.29685974 198.02934265]
[-11.36605740 183.86293030]
[-3.63446856 171.00903320]
[6.56915617 160.01422119]
[18.81095314 151.34597778]
[32.57039642 145.37289429]
[47.26242447 142.34895325]
[62.26232910 142.40270996]
[76.93230438 145.53190613]
[90.64857483 151.60346985]
[102.82791901 160.35925293]
[112.95256805 171.42706299]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.83066559 47.16372299]
[72.64365387 32.75994110]
[69.49213409 47.42513657]
[61.80607605 60.30630493]
[50.39661026 70.04406738]
[36.46780014 75.61077881]
[21.48958778 76.41896820]
[7.04266071 72.38333893]
[-5.34836388 63.92979050]
[-14.37583160 51.95043945]
[-19.08705139 37.70949936]
[-18.98483658 22.70984650]
[-14.07997608 8.53443336]
[-4.89008951 -3.32077646]
[7.61499119 -11.60467339]
[22.11557579 -15.44303894]
[37.08138275 -14.43080139]
[50.93303299 -8.67478371]
[62.20873260 1.21756744]
[69.71859741 14.20246792]
[69.27198792 -0.79088199]
[68.82538605 -15.78423214]
[59.98987198 -25.18085480]
[59.92655945 -37.67804337]
[68.12398529 -46.57347870]
[67.90065765 -61.57181549]
[67.67733002 -76.57015228]
[59.73542404 -90.25360107]
[67.28237915 -103.09465790]
[67.05905151 -118.09299469]
[66.83572388 -133.09133911]
[66.61239624 -148.08967590]
[66.38906860 -163.08801270]
[58.44715881 -176.77145386]
[65.99411011 -189.61251831]
[65.77078247 -204.61085510]
[51.52771759 -209.85484314]
[40.14339066 -219.89285278]
[33.15744400 -233.36730957]
[31.51466179 -248.45590210]
[35.43722153 -263.11804199]
[44.39463043 -275.37075806]
[57.17546844 -283.55700684]
[72.05123138 -286.56964111]
[87.01010132 -284.00125122]
[100.02901459 -276.19915771]
[109.34725952 -264.21856689]
[113.70462799 -249.67973328]
[112.51181793 -234.54890442]
[105.93014526 -220.87243652]
[94.84973907 -210.49992371]
[80.76911926 -204.83418274]
[80.99244690 -189.83584595]
[88.91838074 -177.22517395]
[81.38740540 -163.31134033]
[81.61073303 -148.31300354]
[81.83406067 -133.31466675]
[82.05738831 -118.31632233]
[82.28071594 -103.31798553]
[90.20664978 -90.70732117]
[82.67566681 -76.79347992]
[82.89899445 -61.79514313]
[83.12232208 -46.79680634]
[92.92086029 -32.23811340]
[83.81873322 -16.23083878]
[84.26534271 -1.23748791]
[84.71194458 13.75586224]
[87.04743195 28.57292938]
[91.23444366 42.97671127]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[127.35634613 167.24005127]
[134.43345642 180.46559143]
[144.09426880 191.94029236]
[154.09243774 203.12226868]
[169.20486450 207.80467224]
[172.35511780 222.36231995]
[182.68177795 233.24165344]
[193.00845337 244.12098694]
[203.33511353 255.00032043]
[213.66178894 265.87966919]
[223.98844910 276.75900269]
[234.31512451 287.63833618]
[246.06037903 278.29281616]
[258.57546997 270.00656128]
[271.76510620 262.84262085]
[285.52896118 256.85546875]
[299.76226807 252.09074402]
[314.35665894 248.58465576]
[329.20111084 246.36390686]
[344.18261719 245.44540405]
[359.18719482 245.83613586]
[374.10058594 247.53312683]
[388.80932617 250.52345276]
[403.20147705 254.78437805]
[417.16751099 260.28344727]
[430.60110474 266.97882080]
[443.40002441 274.81951904]
[455.46685791 283.74591064]
[466.70980835 293.69006348]
[477.04327393 304.57623291]
[486.38861084 316.32162476]
[494.67468262 328.83682251]
[501.83847046 342.02658081]
[507.82540894 355.79049683]
[512.58996582 370.02386475]
[516.09582520 384.61831665]
[518.31634521 399.46279907]
[519.23461914 414.44433594]
[518.84368896 429.44888306]
[517.14648438 444.36227417]
[514.15594482 459.07098389]
[509.89486694 473.46307373]
[504.39559937 487.42898560]
[497.70004272 500.86248779]
[489.85913086 513.66131592]
[480.93255615 525.72802734]
[470.98828125 536.97082520]
[460.10195923 547.30413818]
[448.35644531 556.64929199]
[435.84112549 564.93524170]
[422.65127563 572.09881592]
[408.88723755 578.08557129]
[394.65380859 582.84991455]
[380.05932617 586.35559082]
[365.21481323 588.57592773]
[350.23327637 589.49395752]
[335.22872925 589.10284424]
[320.31536865 587.40539551]
[305.60668945 584.41467285]
[291.21466064 580.15338135]
[277.24880981 574.65393066]
[263.81539917 567.95812988]
[251.01670837 560.11706543]
[238.95010376 551.19036865]
[227.70744324 541.24591064]
[217.37428284 530.35943604]
[208.02928162 518.61376953]
[199.74354553 506.09835815]
[192.58013916 492.90838623]
[186.59359741 479.14428711]
[181.82945251 464.91079712]
[178.32398987 450.31625366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 150]
[11 149]
[12 148]
[13 147]
[14 146]
[15 145]
[16 144]
[18 142]
[23 141]
[24 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[81 128]
[82 127]
[83 126]
[86 124]
[87 123]
[88 122]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
