%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[75.66690826 683.38775635]
[67.96029663 696.32232666]
[57.73257446 707.37164307]
[45.43083954 716.05267334]
[31.59287453 721.98602295]
[16.82361603 724.91223145]
[1.76871479 724.70343018]
[-12.91369629 721.36865234]
[-26.58176422 715.05377197]
[-38.63798141 706.03485107]
[-48.55529785 694.70611572]
[-55.90017319 681.56280518]
[-60.35152435 667.17950439]
[-61.71475220 652.18499756]
[-59.93026733 637.23474121]
[-55.07607269 622.98236084]
[-47.36437988 610.05090332]
[-37.13230896 599.00561523]
[-24.82715797 590.32934570]
[-10.98686028 584.40148926]
[3.78354716 581.48107910]
[18.83836555 581.69586182]
[22.16062546 567.06835938]
[25.48288536 552.44091797]
[28.80514526 537.81347656]
[15.93396091 530.20465088]
[6.03135490 518.97485352]
[0.07655965 505.21548462]
[-1.33570528 490.26904297]
[1.94539583 475.59808350]
[9.61081505 462.64212036]
[20.92068291 452.67642212]
[34.77571106 446.68637085]
[49.82402420 445.27014160]
[53.14628601 430.64270020]
[45.01588440 418.21560669]
[48.17675400 403.33398438]
[61.26653671 394.89031982]
[64.58879852 380.26284790]
[67.91105652 365.63540649]
[71.23331451 351.00793457]
[74.55558014 336.38046265]
[77.87783813 321.75302124]
[80.76310730 307.03311157]
[83.20883942 292.23385620]
[85.65456390 277.43457031]
[88.10028839 262.63531494]
[90.54602051 247.83604431]
[84.98741913 234.01753235]
[94.87127686 221.66358948]
[96.09825134 206.71385193]
[96.09825134 191.71385193]
[88.36095428 178.98658752]
[96.09825134 165.18640137]
[95.65164948 150.19305420]
[94.75883484 135.21965027]
[93.86601257 120.24624634]
[92.97319794 105.27284241]
[90.87324524 103.06383514]
[89.53064728 100.04192352]
[89.24803925 96.48614502]
[90.22073364 92.78342438]
[92.50000000 89.38667297]
[92.50000000 74.38667297]
[92.50000000 59.38667297]
[89.37059021 50.80503082]
[92.61332703 44.16376114]
[92.83665466 29.16542435]
[93.05998230 14.16708755]
[93.28330994 -0.83124965]
[79.37791443 -6.90707302]
[68.88636017 -17.81442261]
[63.38494873 -31.86960411]
[63.68301392 -46.91947937]
[69.70400238 -60.67130280]
[80.50187683 -71.04199219]
[94.40963745 -76.47368622]
[94.63296509 -91.47203064]
[94.85630035 -106.47036743]
[95.07962799 -121.46870422]
[86.67250824 -131.25047302]
[87.16728973 -143.73803711]
[95.75373840 -152.25856018]
[96.20034027 -167.25190735]
[88.87735748 -181.27633667]
[96.99016571 -193.76759338]
[89.66717529 -207.79200745]
[97.77998352 -220.28327942]
[89.51943207 -230.18913269]
[90.20008087 -242.66793823]
[98.91243744 -251.05967712]
[99.58222198 -266.04470825]
[92.46884918 -280.17660522]
[100.76673889 -292.54571533]
[101.43652344 -307.53076172]
[102.10630798 -322.51577759]
[87.76226807 -327.22229004]
[75.22058868 -335.62518311]
[65.41194153 -347.10095215]
[59.06418991 -360.79797363]
[56.64838791 -375.69989014]
[58.34379578 -390.70080566]
[64.02461243 -404.68762207]
[73.26927185 -416.62240601]
[85.39176178 -425.61950684]
[99.49252319 -431.01126099]
[114.52517700 -432.39761353]
[129.37419128 -429.67565918]
[142.93769836 -423.04736328]
[154.20916748 -413.00463867]
[162.35220337 -400.29269409]
[166.76251221 -385.85482788]
[167.11283875 -370.76245117]
[163.37719727 -356.13549805]
[155.83276367 -343.05941772]
[145.03941345 -332.50451660]
[131.79808044 -325.25402832]
[117.09134674 -321.84600830]
[116.42156219 -306.86096191]
[115.75177765 -291.87591553]
[122.91305542 -278.81585693]
[114.56726074 -265.37493896]
[113.89747620 -250.38989258]
[122.81209564 -235.27380371]
[112.77333832 -219.83666992]
[120.12826538 -206.88467407]
[111.98351288 -193.32098389]
[119.33844757 -180.36898804]
[111.19369507 -166.80529785]
[110.74708557 -151.81195068]
[119.88577271 -136.83024597]
[110.07796478 -121.24537659]
[109.85463715 -106.24703979]
[109.63130951 -91.24869537]
[109.40798187 -76.25035858]
[123.14785767 -70.40699005]
[133.63217163 -59.71940231]
[139.24104309 -45.79441071]
[139.09088135 -30.74233055]
[133.17344666 -16.85717773]
[122.36178589 -6.26703596]
[108.28164673 -0.60792196]
[108.05831909 14.39041519]
[107.83499146 29.38875198]
[107.61166382 44.38708878]
[107.50000000 59.38667297]
[107.50000000 74.38667297]
[107.50000000 89.38667297]
[107.94660950 104.38002777]
[108.83942413 119.35343170]
[109.73223877 134.32684326]
[110.62505341 149.30024719]
[113.14362335 152.83729553]
[114.29031372 156.61216736]
[114.15882874 160.16436768]
[112.98278046 163.11114502]
[111.09825134 165.18640137]
[118.83555603 178.98658752]
[111.09825134 191.71385193]
[111.09825134 206.71385193]
[119.55616760 194.32580566]
[132.75872803 187.20594788]
[147.75645447 186.94488525]
[161.19882202 193.60093689]
[170.08276367 205.68710327]
[172.42356873 220.50334167]
[167.69833374 234.73962402]
[156.96264648 245.21556091]
[142.61491394 249.59078979]
[127.86045837 246.88787842]
[115.99543762 237.71064758]
[109.67054749 224.10931396]
[115.05421448 238.98637390]
[105.34529114 250.28176880]
[102.89955902 265.08102417]
[100.45383453 279.88031006]
[98.00811005 294.67959595]
[95.56237793 309.47885132]
[97.23499298 313.48590088]
[97.51713562 317.42098999]
[96.60215759 320.85583496]
[94.80265808 323.46896362]
[92.50529480 325.07528687]
[89.18303680 339.70272827]
[85.86077881 354.33020020]
[82.53852081 368.95764160]
[79.21625519 383.58511353]
[75.89399719 398.21258545]
[84.05216980 411.48217773]
[80.47454834 426.26916504]
[67.77374268 433.96496582]
[64.45148468 448.59240723]
[77.41164398 456.37005615]
[87.31985474 467.75732422]
[93.21525574 481.63076782]
[94.53208923 496.62680054]
[91.15392303 511.27572632]
[83.42384338 524.14575195]
[72.10968781 533.98291016]
[58.32773209 539.83337402]
[43.43260574 541.13574219]
[40.11034393 555.76318359]
[36.78808594 570.39062500]
[33.46582794 585.01806641]
[47.13637924 591.32757568]
[59.19614029 600.34179688]
[69.11791229 611.66662598]
[76.46796417 624.80706787]
[80.92497253 639.18859863]
[82.29409790 654.18255615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 204]
[23 203]
[24 202]
[25 201]
[34 192]
[35 191]
[38 188]
[39 187]
[40 186]
[41 185]
[42 184]
[43 183]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[50 172]
[51 160]
[52 159]
[54 157]
[55 152]
[56 151]
[57 150]
[58 149]
[63 148]
[64 147]
[65 146]
[67 145]
[68 144]
[69 143]
[70 142]
[77 135]
[78 134]
[79 133]
[80 132]
[83 130]
[84 129]
[86 127]
[88 125]
[91 123]
[92 122]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
