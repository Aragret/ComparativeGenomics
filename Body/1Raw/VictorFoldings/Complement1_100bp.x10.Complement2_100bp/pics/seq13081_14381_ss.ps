%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[90.76319122 990.46282959]
[75.78311920 989.66204834]
[60.83911133 988.35028076]
[45.94860840 986.52905273]
[31.12895966 984.20056152]
[16.39744949 981.36743164]
[1.77125454 978.03302002]
[-12.73257351 974.20117188]
[-27.09712219 969.87640381]
[-41.30564499 965.06372070]
[-55.34157181 959.76873779]
[-69.18854523 953.99768066]
[-82.83040619 947.75720215]
[-96.25126648 941.05462646]
[-109.43546295 933.89776611]
[-122.36763000 926.29492188]
[-135.03269958 918.25500488]
[-147.41587830 909.78735352]
[-159.50274658 900.90191650]
[-171.27922058 891.60894775]
[-182.73155212 881.91937256]
[-193.84638977 871.84442139]
[-204.61077881 861.39593506]
[-215.01216125 850.58593750]
[-225.03842163 839.42718506]
[-234.67787170 827.93261719]
[-243.91925049 816.11566162]
[-252.75181580 803.99005127]
[-261.16522217 791.57000732]
[-269.14971924 778.86993408]
[-276.69595337 765.90466309]
[-283.79513550 752.68927002]
[-290.43899536 739.23925781]
[-296.61978149 725.57025146]
[-302.33029175 711.69818115]
[-307.56387329 697.63928223]
[-312.31439209 683.40985107]
[-316.57635498 669.02655029]
[-320.34475708 654.50610352]
[-323.61523438 639.86547852]
[-326.38394165 625.12170410]
[-328.64767456 610.29205322]
[-330.40377808 595.39367676]
[-331.65023804 580.44409180]
[-332.38555908 565.46069336]
[-332.60888672 550.46087646]
[-332.31997681 535.46221924]
[-331.51916504 520.48211670]
[-330.20739746 505.53811646]
[-328.38616943 490.64761353]
[-326.05764771 475.82797241]
[-323.22451782 461.09646606]
[-319.89007568 446.47027588]
[-316.05822754 431.96643066]
[-311.73342896 417.60189819]
[-306.92074585 403.39337158]
[-301.62576294 389.35745239]
[-295.85467529 375.51049805]
[-289.61419678 361.86862183]
[-282.91162109 348.44778442]
[-275.75473022 335.26358032]
[-268.15188599 322.33142090]
[-260.11196899 309.66638184]
[-251.64433289 297.28320312]
[-242.75885010 285.19631958]
[-233.46589661 273.41986084]
[-223.77630615 261.96752930]
[-213.70135498 250.85270691]
[-203.25280762 240.08833313]
[-192.44285583 229.68695068]
[-181.28407288 219.66070557]
[-169.78950500 210.02127075]
[-157.97253418 200.77989197]
[-145.84692383 191.94734192]
[-133.42684937 183.53393555]
[-120.72676086 175.54945374]
[-107.76148224 168.00323486]
[-94.54612732 160.90405273]
[-81.09609985 154.26020813]
[-67.42708588 148.07943726]
[-53.55501938 142.36894226]
[-39.49607849 137.13537598]
[-25.26665497 132.38485718]
[-10.88333797 128.12290955]
[3.63710117 124.35451508]
[18.27773285 121.08406067]
[33.02148438 118.31536102]
[47.85116959 116.05163574]
[62.74949646 114.29553986]
[77.69908905 113.04911804]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[88.39232635 34.38040543]
[91.53582764 27.69159317]
[91.53582764 12.69159317]
[77.76195526 6.11562920]
[68.21202850 -5.79074097]
[64.78218842 -20.66349983]
[68.15343475 -35.54964828]
[77.65640259 -47.49353409]
[91.40426636 -54.12368774]
[106.66738892 -54.12368774]
[120.41525269 -47.49353409]
[129.91821289 -35.54964828]
[133.28945923 -20.66349983]
[129.85961914 -5.79074097]
[120.30969238 6.11562920]
[106.53582764 12.69159317]
[106.53582764 27.69159317]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[122.67954254 112.37934875]
[137.65962219 113.18011475]
[152.60362244 114.49185944]
[167.49414062 116.31303406]
[182.31378174 118.64153290]
[197.04530334 121.47463226]
[211.67150879 124.80902863]
[226.17533875 128.64083862]
[240.53988647 132.96559143]
[254.74842834 137.77824402]
[268.78436279 143.07319641]
[282.63134766 148.84425354]
[296.27322388 155.08470154]
[309.69409180 161.78724670]
[322.87829590 168.94410706]
[335.81048584 176.54690552]
[348.47555542 184.58680725]
[360.85876465 193.05439758]
[372.94564819 201.93984985]
[384.72210693 211.23277283]
[396.17446899 220.92234802]
[407.28930664 230.99725342]
[418.05374146 241.44577026]
[428.45513916 252.25570679]
[438.48141479 263.41445923]
[448.12088013 274.90899658]
[457.36227417 286.72595215]
[466.19485474 298.85153198]
[474.60830688 311.27160645]
[482.59280396 323.97164917]
[490.13906860 336.93692017]
[497.23828125 350.15225220]
[503.88214111 363.60226440]
[510.06295776 377.27127075]
[515.77349854 391.14331055]
[521.00708008 405.20223999]
[525.75762939 419.43167114]
[530.01965332 433.81497192]
[533.78808594 448.33538818]
[537.05853271 462.97601318]
[539.82727051 477.71975708]
[542.09106445 492.54943848]
[543.84716797 507.44775391]
[545.09362793 522.39733887]
[545.82897949 537.38079834]
[546.05236816 552.38061523]
[545.76348877 567.37927246]
[544.96270752 582.35937500]
[543.65093994 597.30334473]
[541.82977295 612.19384766]
[539.50122070 627.01348877]
[536.66815186 641.74505615]
[533.33374023 656.37121582]
[529.50189209 670.87506104]
[525.17712402 685.23962402]
[520.36444092 699.44812012]
[515.06951904 713.48406982]
[509.29843140 727.33105469]
[503.05798340 740.97290039]
[496.35540771 754.39379883]
[489.19854736 767.57800293]
[481.59573364 780.51013184]
[473.55584717 793.17523193]
[465.08822632 805.55841064]
[456.20275879 817.64532471]
[446.90982056 829.42175293]
[437.22024536 840.87408447]
[427.14532471 851.98895264]
[416.69680786 862.75335693]
[405.88687134 873.15472412]
[394.72808838 883.18103027]
[383.23355103 892.82049561]
[371.41659546 902.06188965]
[359.29098511 910.89440918]
[346.87094116 919.30786133]
[334.17086792 927.29235840]
[321.20559692 934.83862305]
[307.99023438 941.93780518]
[294.54022217 948.58166504]
[280.87121582 954.76245117]
[266.99917603 960.47302246]
[252.94024658 965.70660400]
[238.71081543 970.45715332]
[224.32751465 974.71911621]
[209.80708313 978.48748779]
[195.16645813 981.75799561]
[180.42269897 984.52673340]
[165.59303284 986.79046631]
[150.69470215 988.54656982]
[135.74511719 989.79302979]
[120.76168060 990.52838135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 119]
[93 117]
[94 116]
[95 115]
[96 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
