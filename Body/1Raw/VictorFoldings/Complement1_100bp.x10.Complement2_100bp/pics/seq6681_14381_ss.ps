%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[33.28409195 513.31518555]
[26.74728584 526.87084961]
[17.69125748 538.89062500]
[6.46409655 548.91241455]
[-6.50265408 556.55114746]
[-20.71058846 561.51306152]
[-35.61359024 563.60754395]
[-50.63882446 562.75402832]
[-65.20877075 558.98535156]
[-78.76338959 552.44635010]
[-90.78167725 543.38836670]
[-100.80168915 532.15954590]
[-108.43828583 519.19158936]
[-113.39792633 504.98284912]
[-115.48998260 490.07949829]
[-114.63403320 475.05441284]
[-110.86299133 460.48507690]
[-104.32179260 446.93151855]
[-95.26187897 434.91470337]
[-84.03147125 424.89648438]
[-71.06224823 417.26199341]
[-56.85271072 412.30465698]
[-41.94903183 410.21502686]
[-26.92407036 411.07339478]
[-23.16777039 396.55133057]
[-19.41147041 382.02926636]
[-15.65516949 367.50723267]
[-11.89886856 352.98516846]
[-8.14256763 338.46310425]
[-4.38626719 323.94104004]
[-0.62996656 309.41897583]
[3.12633419 294.89691162]
[6.88263464 280.37487793]
[-4.71772146 289.88442993]
[-19.50233650 292.41723633]
[-33.60654831 287.31124878]
[-43.34354782 275.90112305]
[-46.16810608 261.16946411]
[-41.34189606 246.96707153]
[-30.12647057 237.00643921]
[-15.45351791 233.89123535]
[-1.15851343 238.43577576]
[9.02186394 249.45213318]
[12.42651463 264.05975342]
[18.29547501 250.25556946]
[15.23131275 232.97616577]
[30.03555298 222.02555847]
[35.69834137 208.13552856]
[41.36112595 194.24549866]
[39.00115967 179.53904724]
[51.37574387 169.68104553]
[38.60889435 177.55552673]
[23.61843491 178.09040833]
[10.32283115 171.14584351]
[2.19752431 158.53713989]
[1.36644888 143.56018066]
[8.04684639 130.12989807]
[20.49247742 121.75695038]
[35.45008469 120.62999725]
[49.00978088 127.04362488]
[57.62710190 139.32131958]
[59.04963684 154.25285339]
[66.71023560 141.35652161]
[74.37083435 128.46020508]
[82.03143311 115.56387329]
[89.69202423 102.66754150]
[96.27205658 89.18781281]
[101.72740936 75.21501160]
[107.18276978 61.24221420]
[112.63812256 47.26941681]
[118.09348297 33.29661942]
[121.95778656 18.80292511]
[124.18290710 3.96888161]
[126.40802002 -10.86516190]
[128.63313293 -25.69920540]
[130.85826111 -40.53324890]
[125.25369263 -55.32849884]
[134.79336548 -66.76720428]
[127.76847076 -77.58448792]
[129.92716980 -89.89398193]
[139.57499695 -97.19097137]
[142.02072144 -111.99024200]
[144.02473450 -126.85577393]
[145.58525085 -141.77436829]
[147.14578247 -156.69297791]
[148.70629883 -171.61158752]
[150.26683044 -186.53018188]
[151.82734680 -201.44879150]
[137.26808167 -205.16975403]
[123.40577698 -210.97100830]
[110.53591919 -218.72886658]
[98.93282318 -228.27801514]
[88.84380341 -239.41487122]
[80.48392487 -251.90206909]
[74.03136444 -265.47344971]
[69.62366486 -279.83972168]
[67.35477448 -294.69470215]
[67.27306366 -309.72171021]
[69.38025665 -324.60046387]
[73.63145447 -339.01385498]
[79.93602753 -352.65460205]
[88.15961456 -365.23199463]
[98.12690735 -376.47790527]
[109.62546539 -386.15267944]
[122.41019440 -394.05004883]
[136.20858765 -400.00170898]
[150.72651672 -403.88079834]
[165.65455627 -405.60461426]
[180.67449951 -405.13644409]
[195.46620178 -402.48626709]
[209.71437073 -397.71051025]
[223.11529541 -390.91104126]
[235.38336182 -382.23278809]
[246.25704956 -371.86065674]
[255.50460815 -360.01580811]
[262.92889404 -346.95068359]
[268.37170410 -332.94375610]
[271.71697998 -318.29360962]
[272.89343262 -303.31250000]
[271.87600708 -288.31973267]
[268.68637085 -273.63491821]
[263.39248657 -259.57104492]
[256.10723877 -246.42787170]
[246.98587036 -234.48554993]
[236.22283936 -223.99865723]
[224.04756165 -215.19070435]
[210.71951294 -208.24942017]
[196.52282715 -203.32278442]
[181.76008606 -200.51579285]
[166.74595642 -199.88827515]
[165.18542480 -184.96966553]
[163.62490845 -170.05105591]
[162.06437683 -155.13246155]
[160.50386047 -140.21385193]
[158.94334412 -125.29524994]
[160.60174561 -123.03519440]
[161.46482849 -119.98205566]
[161.22605896 -116.43544769]
[159.69287109 -112.80036163]
[156.81999207 -109.54451752]
[154.37426758 -94.74524689]
[161.42944336 -78.67691040]
[149.62741089 -64.54208374]
[155.39112854 -50.80786133]
[145.69230652 -38.30813217]
[143.46717834 -23.47408867]
[141.24206543 -8.64004517]
[139.01695251 6.19399881]
[136.79183960 21.02804184]
[146.06623840 9.23883438]
[158.93582153 1.53340447]
[173.70738220 -1.07446420]
[188.43746948 1.75833797]
[201.18806458 9.65910721]
[210.28163147 21.58836174]
[214.52174377 35.97660065]
[213.35054016 50.93080902]
[206.92211914 64.48349762]
[196.08224487 74.85157776]
[182.25709534 80.67095947]
[167.26559448 81.17598724]
[153.08015442 76.30023193]
[141.56707764 66.68517303]
[134.24114990 53.59583664]
[132.06628418 38.75197601]
[126.61092377 52.72477341]
[121.15556335 66.69757080]
[115.70021057 80.67037201]
[110.24485016 94.64316559]
[122.62898254 86.17951965]
[137.51686096 84.34888458]
[151.58248901 89.56022644]
[161.68356323 100.64932251]
[165.56350708 115.13883972]
[162.35549927 129.79177856]
[152.77624512 141.33464050]
[138.96574402 147.18872070]
[124.00931549 146.04620361]
[111.24826813 138.16232300]
[103.53343964 125.29836273]
[102.58835602 110.32814026]
[94.92775726 123.22447205]
[87.26715851 136.12078857]
[79.60655975 149.01712036]
[71.94596100 161.91345215]
[65.26576996 175.34382629]
[67.22069550 191.04379272]
[55.25115204 199.90827942]
[49.58836746 213.79830933]
[43.92557907 227.68833923]
[48.19944000 239.85784912]
[43.19693756 251.31030273]
[32.09965134 256.12454224]
[26.23069191 269.92871094]
[21.40469360 284.13116455]
[17.64839363 298.65322876]
[13.89209270 313.17529297]
[10.13579178 327.69735718]
[6.37949133 342.21939087]
[2.62319064 356.74145508]
[-1.13310993 371.26351929]
[-4.88941050 385.78558350]
[-8.64571095 400.30764771]
[-12.40201187 414.82971191]
[1.15472305 421.36431885]
[13.17594624 430.41839600]
[23.19959450 441.64392090]
[30.84038353 454.60943604]
[35.80462265 468.81658936]
[37.90150452 483.71923828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[31 197]
[32 196]
[33 195]
[44 194]
[45 193]
[47 190]
[48 189]
[49 188]
[51 186]
[62 185]
[63 184]
[64 183]
[65 182]
[66 181]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[78 143]
[81 141]
[82 140]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
