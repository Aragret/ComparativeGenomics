%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[110.91419983 656.58862305]
[95.97609711 654.86779785]
[81.54373932 650.64703369]
[68.03237152 644.04772949]
[55.83073807 635.25976562]
[45.28990555 624.53601074]
[36.71315765 612.18499756]
[30.34726143 598.56213379]
[26.37537766 584.05926514]
[24.91178703 569.09381104]
[25.99859619 554.09625244]
[29.60453796 539.49810791]
[35.62586212 525.71942139]
[43.88932419 513.15667725]
[54.15716171 502.17123413]
[66.13395691 493.07925415]
[79.47511292 486.14227295]
[93.79676819 481.55990601]
[108.68687439 479.46398926]
[109.13347626 464.47064209]
[109.58008575 449.47729492]
[109.91506195 434.48101807]
[110.13838959 419.48269653]
[110.36171722 404.48434448]
[110.58504486 389.48602295]
[110.80837250 374.48767090]
[111.03170013 359.48934937]
[96.24904633 354.07064819]
[84.19502258 343.90032959]
[76.33889771 330.19400024]
[73.64646912 314.59970093]
[76.46138763 298.99978638]
[84.46139526 285.28366089]
[96.69510651 275.11892700]
[111.69512939 269.74871826]
[111.69512939 254.74873352]
[103.95782471 242.02145386]
[111.69512939 228.22128296]
[111.69512939 213.22128296]
[110.57948303 198.26283264]
[108.35436249 183.42878723]
[106.12924194 168.59474182]
[103.90412903 153.76071167]
[101.12851715 139.01974487]
[97.80625916 124.39228058]
[94.48400116 109.76482391]
[86.56442261 122.50375366]
[72.34888458 127.29108429]
[58.33654404 121.93811798]
[50.93364716 108.89215851]
[53.52470016 94.11763763]
[64.92510986 84.36927032]
[79.92276764 84.10388184]
[91.66191101 93.44437408]
[89.87944031 78.55065918]
[88.09697723 63.65694046]
[86.31451416 48.76322174]
[84.53204346 33.86950302]
[82.74958038 18.97578812]
[80.74556732 4.11025906]
[78.52044678 -10.72378445]
[72.65085602 3.08012509]
[61.72985840 13.36271763]
[47.59782028 18.39119530]
[32.63624954 17.31817245]
[19.36643028 10.32446957]
[10.02455902 -1.41134906]
[6.18490553 -15.91159248]
[8.49452019 -30.73271561]
[16.56419182 -43.37709808]
[29.03403664 -51.71393967]
[43.80266953 -54.33833694]
[58.38131714 -50.80802917]
[70.31321716 -41.71794128]
[77.58812714 -28.59832382]
[78.25791931 -43.58336258]
[78.92770386 -58.56840134]
[79.59748840 -73.55344391]
[80.26727295 -88.53848267]
[71.40447998 -104.67949677]
[81.41868591 -119.09069061]
[81.86529541 -134.08404541]
[82.31189728 -149.07739258]
[82.75850677 -164.07073975]
[83.20510864 -179.06408691]
[72.64686584 -190.51664734]
[73.31336975 -205.71568298]
[84.29669952 -215.71078491]
[84.74330902 -230.70413208]
[85.18991852 -245.69747925]
[85.63652039 -260.69082642]
[86.08312988 -275.68417358]
[86.52973175 -290.67752075]
[83.65721893 -299.34854126]
[87.09625244 -305.89031982]
[87.76603699 -320.87536621]
[88.43582916 -335.86038208]
[89.10561371 -350.84542847]
[75.01015472 -356.37686157]
[63.47609711 -366.18728638]
[55.75457001 -379.21252441]
[52.68314743 -394.03970337]
[54.59499359 -409.06045532]
[61.28272629 -422.64550781]
[72.02090454 -433.32116699]
[85.64473724 -439.92950439]
[100.67641449 -441.75363159]
[115.48540497 -438.59570312]
[128.46534729 -430.79827881]
[138.20826721 -419.20715332]
[143.65733337 -405.07965088]
[144.22146606 -389.94821167]
[139.83947754 -375.45419312]
[130.98669434 -363.16976929]
[118.62339020 -354.42749023]
[104.09065247 -350.17565918]
[103.42086792 -335.19061279]
[102.75107574 -320.20556641]
[102.08129120 -305.22052002]
[101.52308655 -290.23092651]
[101.07647705 -275.23757935]
[100.62986755 -260.24423218]
[100.18326569 -245.25086975]
[99.73665619 -230.25752258]
[99.29005432 -215.26417542]
[109.65899658 -204.63305664]
[109.41965485 -189.42131042]
[98.19846344 -178.61749268]
[97.75185394 -163.62413025]
[97.30525208 -148.63078308]
[96.85864258 -133.63743591]
[96.41204071 -118.64408875]
[104.47611237 -109.62758636]
[104.22674561 -97.13272858]
[95.25231171 -87.86869812]
[94.58252716 -72.88365173]
[93.91274261 -57.89861679]
[93.24295807 -42.91357803]
[92.57316589 -27.92853928]
[93.35449219 -12.94890213]
[95.57960510 1.88514197]
[98.81963348 5.39388847]
[99.88987732 10.97525024]
[97.64329529 17.19332123]
[99.42575836 32.08703995]
[101.20822906 46.98075485]
[102.99069214 61.87447357]
[104.77316284 76.76818848]
[106.55562592 91.66191101]
[109.11145782 106.44255829]
[112.43371582 121.07002258]
[115.75597382 135.69747925]
[125.83689880 124.59004974]
[140.81535339 125.39378357]
[149.64978027 137.51618958]
[145.82775879 152.02110291]
[132.16676331 158.21601868]
[118.73817444 151.53558350]
[120.96328735 166.36962891]
[123.18840790 181.20367432]
[125.41352081 196.03771973]
[132.36833191 182.74746704]
[144.98329163 174.63188171]
[159.96089172 173.81236267]
[173.38601685 180.50311279]
[181.74935913 192.95518494]
[182.86479187 207.91366577]
[176.44070435 221.46841431]
[164.15637207 230.07626343]
[149.22286987 231.48713684]
[135.54379272 225.33224487]
[126.69512939 213.22128296]
[126.69512939 228.22128296]
[134.43243408 242.02145386]
[126.69512939 254.74873352]
[126.69512939 269.74871826]
[140.26885986 274.33737183]
[151.74468994 282.88095093]
[160.00856018 294.53350830]
[164.26333618 308.14816284]
[164.10566711 322.38983154]
[159.56420898 335.86630249]
[151.09555054 347.26416016]
[139.53828430 355.47702026]
[126.03003693 359.71267700]
[125.80670929 374.71099854]
[125.58338165 389.70935059]
[125.36005402 404.70767212]
[125.13672638 419.70602417]
[124.91339874 434.70434570]
[127.91468811 443.33163452]
[124.57343292 449.92388916]
[124.12683105 464.91723633]
[123.68022156 479.91058350]
[138.41917419 482.88906860]
[152.44268799 488.31576538]
[165.34730530 496.03451538]
[176.76168823 505.82327271]
[186.35746765 517.40032959]
[193.85852051 530.43267822]
[199.04905701 544.54534912]
[201.77970886 559.33221436]
[201.97192383 574.36785889]
[199.62016296 589.21972656]
[194.79209900 603.46038818]
[187.62663269 616.68023682]
[178.32994080 628.49890137]
[167.16950989 638.57623291]
[154.46644592 646.62231445]
[140.58622742 652.40570068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 194]
[20 193]
[21 192]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[27 185]
[35 176]
[36 175]
[38 173]
[39 172]
[40 161]
[41 160]
[42 159]
[43 158]
[44 152]
[45 151]
[46 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 141]
[61 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
