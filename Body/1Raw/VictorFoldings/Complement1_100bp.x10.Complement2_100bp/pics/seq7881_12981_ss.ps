%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[164.72012329 505.48587036]
[171.79154968 492.20770264]
[181.18261719 480.45513916]
[192.57345581 470.62847900]
[205.57611084 463.06240845]
[200.53919983 448.93338013]
[195.50228882 434.80435181]
[190.46536255 420.67532349]
[178.90357971 411.28518677]
[181.55760193 395.68817139]
[176.52069092 381.55914307]
[164.95890808 372.16903687]
[167.61291504 356.57202148]
[162.57600403 342.44299316]
[157.53907776 328.31396484]
[152.50216675 314.18493652]
[148.64773560 311.36492920]
[146.52389526 306.09365845]
[147.53247070 299.55957031]
[142.91845703 285.28683472]
[138.30444336 271.01409912]
[133.69044495 256.74136353]
[129.07643127 242.46862793]
[126.12055206 240.54635620]
[123.94889832 237.09687805]
[123.26911163 232.50436401]
[124.59051514 227.45451355]
[113.75916290 217.23046875]
[117.56587982 201.87405396]
[113.59378052 187.40953064]
[109.62168884 172.94500732]
[105.64958954 158.48048401]
[100.84706879 152.86286926]
[101.72775269 143.77099609]
[97.97145081 129.24893188]
[89.44551849 141.59027100]
[74.71555328 144.42369080]
[62.21955872 136.12609863]
[59.11580276 121.45071411]
[67.18225098 108.80428314]
[81.79808807 105.43123627]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[83.27342224 44.78485870]
[80.82769012 29.98558807]
[78.38196564 15.18631649]
[75.60635376 0.44535390]
[72.50224304 -14.22994804]
[69.39813232 -28.90525055]
[66.29402161 -43.58055496]
[62.16633224 -48.74521255]
[61.38396454 -54.37414932]
[63.32283783 -58.73875809]
[60.65703964 -73.49997711]
[50.59034729 -85.70539856]
[55.94259262 -99.60513306]
[53.27679443 -114.36634827]
[50.61100006 -129.12756348]
[47.94520569 -143.88877869]
[44.62294388 -158.51625061]
[40.65084839 -172.98077393]
[36.67875290 -187.44529724]
[32.70665741 -201.90982056]
[28.73456001 -216.37434387]
[23.44439316 -223.82095337]
[24.81271935 -231.08383179]
[21.05641937 -245.60589600]
[17.30011940 -260.12796021]
[12.58692932 -245.88766479]
[2.22427821 -235.04258728]
[-11.78697014 -229.68676758]
[-26.74146271 -230.85429382]
[-39.75172424 -238.31976318]
[-48.30567169 -250.64169312]
[-50.75167465 -265.44091797]
[-46.61745071 -279.85992432]
[-36.70124817 -291.11465454]
[-22.91773605 -297.03198242]
[-7.92829084 -296.46939087]
[5.37285900 -289.53543091]
[14.41799736 -277.56787109]
[5.67571783 -290.75433350]
[12.44497681 -304.02185059]
[11.32932758 -318.98028564]
[10.21367931 -333.93875122]
[9.09803009 -348.89718628]
[7.98238182 -363.85565186]
[5.04199362 -368.16857910]
[4.14016724 -372.72268677]
[5.02741003 -376.70111084]
[7.16616297 -379.50433350]
[6.71955681 -394.49768066]
[6.27295113 -409.49102783]
[-8.12706661 -414.22552490]
[-20.03744888 -423.60202026]
[-28.01996040 -436.48825073]
[-31.11067390 -451.32818604]
[-28.93637085 -466.32977295]
[-21.75960922 -479.68154907]
[-10.44701481 -489.77120972]
[3.63535762 -495.38037109]
[18.78699493 -495.83166504]
[33.17826462 -491.07067871]
[45.07134628 -481.67224121]
[53.03009796 -468.77130127]
[56.09345627 -453.92572021]
[53.89151001 -438.92813110]
[46.69015503 -425.58963013]
[35.35898590 -415.52084351]
[21.26630020 -409.93765259]
[21.71290779 -394.94430542]
[22.15951347 -379.95092773]
[22.94083595 -364.97131348]
[24.05648422 -350.01284790]
[25.17213249 -335.05438232]
[26.28778076 -320.09594727]
[27.40342903 -305.13748169]
[36.06591034 -293.02093506]
[29.37644958 -278.68353271]
[31.82217789 -263.88424683]
[35.57847977 -249.36219788]
[39.33477783 -234.84013367]
[43.19908524 -220.34643555]
[47.17118073 -205.88191223]
[51.14327621 -191.41738892]
[55.11537170 -176.95286560]
[59.08747101 -162.48834229]
[67.42871094 -174.95524597]
[82.11485291 -178.00765991]
[94.73300171 -169.89703369]
[98.05491638 -155.26950073]
[90.17764282 -142.50436401]
[75.61364746 -138.91409302]
[62.70642090 -146.55458069]
[65.37221527 -131.79336548]
[68.03800964 -117.03215027]
[70.70381165 -102.27092743]
[80.57982635 -91.12133026]
[75.41825867 -76.16577148]
[78.08405304 -61.40455627]
[80.96932983 -46.68466187]
[84.07343292 -32.00936127]
[87.17754364 -17.33405876]
[90.28165436 -2.65875626]
[93.02150726 -0.43939677]
[94.82251740 3.21729898]
[95.02082825 7.85561419]
[93.18123627 12.74058914]
[95.62696075 27.53985977]
[98.07269287 42.33913040]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[112.49350739 125.49263000]
[116.24980927 140.01469421]
[120.11411285 154.50837708]
[124.08621216 168.97290039]
[128.05830383 183.43743896]
[132.03039551 197.90196228]
[143.14587402 209.16059875]
[139.05503845 223.48240662]
[143.34916687 237.85462952]
[147.96316528 252.12736511]
[152.57717896 266.40008545]
[157.19119263 280.67282104]
[161.80520630 294.94555664]
[166.63119507 309.14801025]
[171.66812134 323.27703857]
[176.70503235 337.40606689]
[181.74194336 351.53509521]
[193.66400146 361.93582153]
[190.64971924 376.52224731]
[195.68663025 390.65127563]
[207.60868835 401.05200195]
[204.59439087 415.63839722]
[209.63131714 429.76742554]
[214.66822815 443.89645386]
[219.70515442 458.02548218]
[234.56175232 455.65991211]
[249.60005188 456.06472778]
[264.30789185 459.22616577]
[278.18426514 465.03656006]
[290.75659180 473.29800415]
[301.59664917 483.72909546]
[310.33523560 495.97457886]
[316.67471313 509.61737061]
[320.39913940 524.19281006]
[321.38171387 539.20440674]
[319.58892822 554.14099121]
[315.08184814 568.49371338]
[308.01400757 581.77380371]
[298.62609863 593.52886963]
[287.23791504 603.35858154]
[274.23727417 610.92816162]
[260.06704712 615.97979736]
[245.20979309 618.34136963]
[230.17160034 617.93249512]
[215.46463013 614.76708984]
[201.58981323 608.95294189]
[189.01971436 600.68811035]
[178.18246460 590.25408936]
[169.44718933 578.00628662]
[163.11138916 564.36175537]
[159.39088440 549.78533936]
[158.41236877 534.77343750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[10 178]
[11 177]
[13 175]
[14 174]
[15 173]
[16 172]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[27 166]
[29 164]
[30 163]
[31 162]
[32 161]
[34 160]
[35 159]
[42 158]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[50 147]
[51 146]
[52 145]
[53 144]
[56 143]
[57 142]
[59 140]
[60 139]
[61 138]
[62 137]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[69 125]
[70 124]
[71 123]
[84 122]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
