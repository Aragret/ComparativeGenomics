%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[74.36062622 579.71850586]
[65.10291290 591.72143555]
[52.29660416 599.83160400]
[37.48811722 603.06958008]
[22.46565056 601.04437256]
[9.04324055 594.00061035]
[-1.15829074 582.78881836]
[-6.90706015 568.76287842]
[-7.50887489 553.61645508]
[-2.89106321 539.17858887]
[6.38875151 527.19274902]
[19.20998573 519.10620117]
[34.02441406 515.89556885]
[36.02843094 501.03002930]
[38.03244400 486.16448975]
[32.06488037 472.51760864]
[41.57653427 459.87484741]
[35.60897064 446.22796631]
[45.12062454 433.58523560]
[47.12463760 418.71969604]
[49.12865067 403.85415649]
[51.13266373 388.98864746]
[45.16510391 375.34176636]
[54.67675781 362.69900513]
[56.68077087 347.83346558]
[58.68478394 332.96795654]
[57.09440231 330.65951538]
[56.32259750 327.58203125]
[56.66686630 324.04412842]
[58.30760574 320.45629883]
[61.27614594 317.28741455]
[64.16142273 302.56753540]
[67.04669189 287.84762573]
[69.93196869 273.12774658]
[72.81723785 258.40786743]
[75.70250702 243.68797302]
[78.58778381 228.96807861]
[76.78958893 221.79951477]
[81.62714386 214.05123901]
[84.73125458 199.37593079]
[87.83536530 184.70062256]
[90.93947601 170.02532959]
[92.50000000 155.10671997]
[92.50000000 140.10671997]
[92.50000000 125.10671997]
[92.50000000 110.10671997]
[92.16502380 95.11045837]
[91.49523926 80.12541962]
[90.82545471 65.14038086]
[77.70173645 53.57373047]
[77.01730347 36.43178177]
[88.70766449 24.34152603]
[87.81484985 9.36811924]
[74.52037811 -2.00185847]
[73.58080292 -19.13171768]
[85.08985901 -31.39468575]
[83.97421265 -46.35313797]
[69.41619873 -50.51122665]
[57.18215179 -59.38253403]
[48.73731232 -71.88072968]
[45.08491898 -86.48654938]
[46.64706802 -101.43249512]
[53.21603012 -114.91667938]
[63.98161316 -125.32010651]
[77.63107300 -131.40103149]
[76.51541901 -146.35948181]
[75.39977264 -161.31793213]
[61.93749237 -172.48872375]
[60.74298477 -189.60269165]
[72.06818390 -202.03565979]
[70.72994995 -216.97584534]
[69.39171600 -231.91603088]
[68.05348206 -246.85621643]
[66.71524811 -261.79638672]
[65.37701416 -276.73657227]
[54.11580658 -284.12573242]
[49.23766327 -296.47134399]
[52.31508636 -309.18402100]
[62.00678635 -317.67520142]
[60.89113998 -332.63366699]
[59.77548981 -347.59210205]
[58.65983963 -362.55056763]
[57.54419327 -377.50903320]
[56.42854309 -392.46746826]
[55.31289673 -407.42593384]
[47.38886642 -394.68975830]
[34.20523453 -387.53491211]
[19.20816994 -387.83163452]
[6.31786823 -395.50238037]
[-1.09617543 -408.54199219]
[-1.09594858 -423.54199219]
[6.31848955 -436.58142090]
[19.20902252 -444.25173950]
[34.20609665 -444.54803467]
[47.38951111 -437.39279175]
[55.31289673 -424.65722656]
[56.42854309 -439.61569214]
[57.54419327 -454.57412720]
[43.46544647 -460.07687378]
[31.63518143 -469.48626709]
[23.10533714 -481.96557617]
[18.63438034 -496.40515137]
[18.61986542 -511.52108765]
[23.06308365 -525.96923828]
[31.56894875 -538.46490479]
[43.38112259 -547.89697266]
[57.44927597 -553.42675781]
[72.52247620 -554.56256104]
[87.26042938 -551.20336914]
[100.35263824 -543.64788818]
[110.63496399 -532.56793213]
[117.19309998 -518.94873047]
[119.44390106 -504.00131226]
[117.18723297 -489.05477905]
[110.62375641 -475.43817139]
[100.33708954 -464.36224365]
[87.24191284 -456.81188965]
[72.50264740 -453.45849609]
[71.38700104 -438.50003052]
[70.27134705 -423.54156494]
[70.27134705 -408.54156494]
[71.38700104 -393.58312988]
[72.50264740 -378.62466431]
[73.61829376 -363.66622925]
[74.73394012 -348.70776367]
[75.84959412 -333.74929810]
[76.96524048 -318.79086304]
[90.16606903 -308.37081909]
[91.77794647 -291.29110718]
[80.31719971 -278.07479858]
[81.65543365 -263.13461304]
[82.99366760 -248.19444275]
[84.33190155 -233.25425720]
[85.67013550 -218.31407166]
[87.00836945 -203.37388611]
[97.95485687 -196.57653809]
[103.06387329 -184.53576660]
[100.26394653 -171.55999756]
[90.35822296 -162.43359375]
[91.47387695 -147.47512817]
[92.58952332 -132.51667786]
[106.99001312 -128.52781677]
[119.17974854 -119.83646393]
[127.67629242 -107.47590637]
[131.43826294 -92.92705536]
[129.99291992 -77.94103241]
[123.49550629 -64.32839203]
[112.71279144 -53.74042130]
[98.93266296 -47.46878815]
[100.04830933 -32.51033401]
[110.89237976 -25.55076027]
[115.82156372 -13.43526554]
[112.82875061 -0.50261176]
[102.78825378 8.47530365]
[103.68106842 23.44870949]
[114.42031860 30.56896400]
[119.16857910 42.75650406]
[115.98354340 55.64316559]
[105.81049347 64.47059631]
[106.48027802 79.45563507]
[107.15006256 94.44067383]
[109.59850311 97.42019653]
[110.72171783 101.46447754]
[110.07363892 105.95747375]
[107.50000000 110.10671997]
[107.50000000 125.10671997]
[107.50000000 140.10671997]
[107.50000000 155.10671997]
[115.11933136 142.18597412]
[127.05686188 133.10327148]
[141.54171753 129.20597839]
[156.42517090 131.07225037]
[169.49932861 138.42521667]
[178.82475281 150.17411804]
[183.01803589 164.57608032]
[181.45713806 179.49464417]
[174.37362671 192.71673584]
[162.81828308 202.28094482]
[148.50527954 206.76846313]
[133.55786133 205.51361084]
[120.19338989 198.70251465]
[110.39440155 187.34558105]
[105.61477661 173.12944031]
[102.51066589 187.80473328]
[99.40656281 202.48004150]
[96.30245209 217.15534973]
[93.30767822 231.85334778]
[90.42240143 246.57324219]
[87.53713226 261.29312134]
[84.65185547 276.01303101]
[81.76658630 290.73291016]
[78.88130951 305.45278931]
[75.99604034 320.17269897]
[73.55030823 334.97195435]
[71.54629517 349.83749390]
[69.54228210 364.70303345]
[75.36650848 379.41317749]
[65.99819183 390.99264526]
[63.99417877 405.85818481]
[61.99016571 420.72372437]
[59.98615265 435.58923340]
[65.81037140 450.29940796]
[56.44206238 461.87887573]
[62.26628494 476.58905029]
[52.89797211 488.16848755]
[50.89395905 503.03402710]
[48.88994217 517.89953613]
[62.32530975 524.91857910]
[72.54748535 536.11157227]
[78.32209778 550.12689209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 207]
[14 206]
[15 205]
[17 203]
[19 201]
[20 200]
[21 199]
[22 198]
[24 196]
[25 195]
[26 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 168]
[44 167]
[45 166]
[46 165]
[47 161]
[48 160]
[49 159]
[52 155]
[53 154]
[56 150]
[57 149]
[65 141]
[66 140]
[67 139]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
