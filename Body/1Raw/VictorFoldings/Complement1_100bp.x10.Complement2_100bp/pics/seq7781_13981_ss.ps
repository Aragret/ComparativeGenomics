%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[132.06970215 855.66766357]
[117.39838409 852.52850342]
[102.90976715 848.63214111]
[88.64292145 843.98895264]
[74.63629913 838.61157227]
[60.92767334 832.51440430]
[47.55398560 825.71392822]
[34.55129623 818.22845459]
[21.95466042 810.07818604]
[9.79803371 801.28509521]
[-1.88581228 791.87292480]
[-13.06537914 781.86694336]
[-23.71052742 771.29418945]
[-33.79256058 760.18322754]
[-43.28430176 748.56390381]
[-52.16015625 736.46752930]
[-60.39620209 723.92681885]
[-67.97023773 710.97552490]
[-74.86183929 697.64855957]
[-81.05242920 683.98187256]
[-86.52531433 670.01232910]
[-91.26575470 655.77746582]
[-95.26095581 641.31579590]
[-98.50016022 626.66625977]
[-100.97462463 611.86828613]
[-102.67768097 596.96185303]
[-103.60474396 581.98718262]
[-103.75331116 566.98449707]
[-103.12297821 551.99432373]
[-101.71544647 537.05712891]
[-99.53451538 522.21307373]
[-96.58605957 507.50225830]
[-92.87802887 492.96429443]
[-88.42041779 478.63836670]
[-83.22524261 464.56314087]
[-77.30651093 450.77655029]
[-70.68018341 437.31570435]
[-63.36410904 424.21697998]
[-55.37802887 411.51562500]
[-46.74345779 399.24588013]
[-37.48368073 387.44088745]
[-27.62365913 376.13238525]
[-17.18997192 365.35092163]
[-6.21074772 355.12551880]
[5.28441429 345.48379517]
[17.26452637 336.45169067]
[29.69729042 328.05358887]
[42.54919434 320.31210327]
[55.78558350 313.24810791]
[69.37078094 306.88067627]
[83.26816559 301.22692871]
[97.44026184 296.30215454]
[111.84887695 292.11959839]
[126.45516205 288.69052124]
[123.78936768 273.92932129]
[121.12356567 259.16809082]
[118.45777130 244.40687561]
[108.58175659 233.25727844]
[113.74332428 218.30172729]
[99.67992401 213.39395142]
[89.89621735 202.03018188]
[87.09564972 187.19700623]
[92.12875366 172.85948181]
[103.73831177 162.90129089]
[101.07250977 148.14007568]
[98.40671539 133.37886047]
[95.74092102 118.61763763]
[83.89768982 110.26994324]
[81.32261658 96.01107788]
[89.49786377 84.04815674]
[86.83206177 69.28694153]
[84.16626740 54.52572250]
[81.50047302 39.76450348]
[78.83467865 25.00328636]
[68.76798248 12.79786777]
[74.12023163 -1.10187113]
[64.05353546 -13.30729008]
[69.40577698 -27.20702934]
[66.73998260 -41.96824646]
[51.71783066 -41.52940369]
[36.79806900 -43.33449936]
[22.31401253 -47.34320450]
[8.58923817 -53.46596909]
[-4.06963634 -61.56600189]
[-15.37980747 -71.46234894]
[-25.08860016 -82.93392181]
[-32.97911835 -95.72444153]
[-38.87508774 -109.54816437]
[-42.64478302 -124.09625244]
[-44.20399094 -139.04371643]
[-43.51787949 -154.05661011]
[-40.60177612 -168.79953003]
[-35.52082825 -182.94314575]
[-28.38854599 -196.17144775]
[-19.36426735 -208.18894958]
[-8.64959526 -218.72712708]
[3.51609826 -227.55059814]
[16.86102676 -234.46221924]
[31.08706093 -239.30758667]
[45.87638474 -241.97846985]
[60.89860153 -242.41517639]
[75.81810760 -240.60795593]
[90.30158997 -236.59718323]
[104.02548981 -230.47245789]
[116.68321228 -222.37062073]
[127.99197388 -212.47267151]
[137.69914246 -200.99971008]
[145.58782959 -188.20806885]
[151.48182678 -174.38351440]
[155.24945068 -159.83488464]
[156.80653381 -144.88719177]
[156.11828613 -129.87440491]
[153.20008850 -115.13188934]
[148.11712646 -100.98900604]
[140.98295593 -87.76171112]
[131.95695496 -75.74550629]
[121.24079132 -65.20883942]
[109.07383728 -56.38710785]
[95.72792816 -49.47738647]
[81.50120544 -44.63404083]
[84.16699982 -29.87282372]
[94.04301453 -18.72322655]
[88.88144684 -3.76766658]
[98.75746155 7.38193130]
[93.59589386 22.33749199]
[96.26168823 37.09870911]
[98.92749023 51.85992432]
[101.59328461 66.62113953]
[104.25907898 81.38236237]
[116.10231018 89.73005676]
[118.67738342 103.98892212]
[110.50213623 115.95184326]
[113.16793823 130.71305847]
[115.83373260 145.47427368]
[118.49952698 160.23548889]
[132.85890198 165.50382996]
[142.58908081 177.17520142]
[145.15377808 192.05096436]
[139.96293640 206.11904907]
[128.50454712 215.63592529]
[138.57122803 227.84133911]
[133.21899414 241.74108887]
[135.88478088 256.50228882]
[138.55058289 271.26351929]
[141.21638489 286.02474976]
[156.09942627 284.12817383]
[171.06083679 283.00668335]
[186.06030273 282.66323853]
[201.05738831 283.09878540]
[216.01164246 284.31216431]
[230.88275146 286.30007935]
[245.63064575 289.05718994]
[260.21554565 292.57604980]
[274.59814453 296.84719849]
[288.73968506 301.85910034]
[302.60202026 307.59823608]
[316.14776611 314.04913330]
[329.34045410 321.19442749]
[342.14447021 329.01486206]
[354.52532959 337.48931885]
[366.44964600 346.59494019]
[377.88525391 356.30725098]
[388.80136108 366.60000610]
[399.16848755 377.44546509]
[408.95874023 388.81439209]
[418.14572144 400.67617798]
[426.70462036 412.99880981]
[434.61239624 425.74905396]
[441.84774780 438.89254761]
[448.39111328 452.39389038]
[454.22491455 466.21667480]
[459.33337402 480.32360840]
[463.70275879 494.67666626]
[467.32125854 509.23715210]
[470.17913818 523.96588135]
[472.26870728 538.82305908]
[473.58428955 553.76861572]
[474.12237549 568.76239014]
[473.88150024 583.76385498]
[472.86230469 598.73260498]
[471.06756592 613.62823486]
[468.50207520 628.41070557]
[465.17282104 643.04003906]
[461.08868408 657.47686768]
[456.26074219 671.68225098]
[450.70202637 685.61791992]
[444.42745972 699.24621582]
[437.45397949 712.53051758]
[429.80038452 725.43499756]
[421.48733521 737.92480469]
[412.53723145 749.96624756]
[402.97415161 761.52697754]
[392.82394409 772.57574463]
[382.11395264 783.08276367]
[370.87301636 793.01971436]
[359.13150024 802.35986328]
[346.92098999 811.07800293]
[334.27444458 819.15057373]
[321.22595215 826.55590820]
[307.81066895 833.27392578]
[294.06478882 839.28662109]
[280.02532959 844.57775879]
[265.73019409 849.13305664]
[251.21786499 852.94024658]
[236.52751160 855.98901367]
[221.69869995 858.27124023]
[206.77142334 859.78070068]
[191.78593445 860.51330566]
[176.78260803 860.46716309]
[161.80189514 859.64233398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 145]
[55 144]
[56 143]
[57 142]
[59 140]
[64 135]
[65 134]
[66 133]
[67 132]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[76 123]
[78 121]
[79 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
