%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[72.46060944 426.59866333]
[65.65670776 439.97793579]
[57.69695282 452.70349121]
[48.64365387 464.67575073]
[38.56766129 475.80105591]
[27.54783440 485.99227905]
[15.67042065 495.16967773]
[3.02837968 503.26141357]
[-10.27934647 510.20419312]
[-24.14860344 515.94366455]
[-38.47084427 520.43487549]
[-53.13397980 523.64270020]
[-68.02323914 525.54199219]
[-83.02210236 526.11798096]
[-98.01317596 525.36608887]
[-112.87913513 523.29223633]
[-127.50362396 519.91259766]
[-141.77218628 515.25366211]
[-155.57316589 509.35189819]
[-168.79852295 502.25347900]
[-181.34475708 494.01397705]
[-193.11369324 484.69787598]
[-204.01319885 474.37805176]
[-213.95797729 463.13534546]
[-222.87020874 451.05767822]
[-230.68011475 438.23959351]
[-237.32659912 424.78143311]
[-242.75761414 410.78854370]
[-246.93067932 396.37039185]
[-249.81312561 381.63983154]
[-251.38238525 366.71215820]
[-251.62619019 351.70422363]
[-250.54261780 336.73345947]
[-248.14016724 321.91708374]
[-244.43762207 307.37097168]
[-239.46397400 293.20904541]
[-233.25814819 279.54211426]
[-225.86869812 266.47711182]
[-217.35348511 254.11634827]
[-207.77912903 242.55653381]
[-197.22056580 231.88813782]
[-185.76045227 222.19468689]
[-173.48844910 213.55200195]
[-160.50064087 206.02775574]
[-146.89865112 199.68083191]
[-132.78894043 194.56089783]
[-118.28193665 190.70803833]
[-103.49118805 188.15238953]
[-88.53244781 186.91395569]
[-73.52278900 187.00244141]
[-58.57969284 188.41714478]
[-43.82010269 191.14700317]
[-29.35953712 195.17065430]
[-15.31117249 200.45657349]
[-1.78495860 206.96343994]
[11.11324215 214.64028931]
[19.89384460 202.47883606]
[28.67444801 190.31736755]
[37.45505142 178.15591431]
[46.23565674 165.99446106]
[55.01625824 153.83300781]
[63.79685974 141.67155457]
[72.21147919 129.25405884]
[80.25265503 116.59152985]
[88.29382324 103.92900848]
[75.32379150 111.46413422]
[60.72259521 114.89998627]
[45.75338745 113.93933105]
[31.71115875 108.66526794]
[19.81069565 99.53405762]
[11.08151150 87.33563995]
[6.27876711 73.12530518]
[5.81794739 58.13238525]
[9.73891830 43.65391922]
[17.70247650 30.94243813]
[29.01969528 21.09761238]
[42.71152115 14.97111988]
[57.59347153 13.09296131]
[72.37811279 15.62561703]
[85.78643036 22.34998703]
[96.65845490 32.68434525]
[104.05366516 45.73466873]
[107.33229065 60.37196732]
[106.21070099 75.32997894]
[100.78766632 89.31162262]
[112.04376221 79.39697266]
[123.29985809 69.48231506]
[128.54141235 54.55460358]
[143.20622253 51.94829559]
[154.46231079 42.03364182]
[165.71841431 32.11899185]
[176.97450256 22.20433998]
[167.91384888 10.24140644]
[159.76144409 -2.35801411]
[152.56179810 -15.52510738]
[146.35424805 -29.18795776]
[141.17268372 -43.27194214]
[137.04541016 -57.70013809]
[133.99497986 -72.39374542]
[132.03804016 -87.27251434]
[131.18528748 -102.25516510]
[131.44137573 -117.25988770]
[132.80491638 -132.20472717]
[135.26844788 -147.00804138]
[138.81851196 -161.58898926]
[143.43572998 -175.86795044]
[149.09489441 -189.76690674]
[155.76506042 -203.20997620]
[163.40983582 -216.12371826]
[171.98745728 -228.43759155]
[181.45106506 -240.08436584]
[191.74897766 -251.00042725]
[202.82495117 -261.12612915]
[214.61848450 -270.40621948]
[227.06517029 -278.78994751]
[240.09704590 -286.23156738]
[253.64289856 -292.69042969]
[267.62878418 -298.13122559]
[281.97827148 -302.52429199]
[296.61303711 -305.84561157]
[311.45312500 -308.07702637]
[326.41748047 -309.20635986]
[341.42437744 -309.22747803]
[356.39184570 -308.14019775]
[371.23812866 -305.95053101]
[385.88217163 -302.67037964]
[400.24395752 -298.31768799]
[414.24508667 -292.91622925]
[427.80905151 -286.49548340]
[440.86178589 -279.09054565]
[453.33200073 -270.74182129]
[465.15161133 -261.49496460]
[476.25601196 -251.40042114]
[486.58456421 -240.51336670]
[496.08087158 -228.89324951]
[504.69308472 -216.60353088]
[512.37414551 -203.71133423]
[519.08209229 -190.28709412]
[524.78033447 -176.40408325]
[529.43768311 -162.13818359]
[533.02868652 -147.56726074]
[535.53387451 -132.77093506]
[536.93939209 -117.82999420]
[537.23767090 -102.82604980]
[536.42706299 -87.84105682]
[534.51196289 -72.95684814]
[531.50286865 -58.25471878]
[527.41619873 -43.81497192]
[522.27423096 -29.71647453]
[516.10516357 -16.03622246]
[508.94253540 -2.84893799]
[500.82559204 9.77335644]
[491.79861450 21.76172066]
[481.91091919 33.05067825]
[471.21649170 43.57856750]
[459.77374268 53.28789520]
[447.64520264 62.12562943]
[434.89709473 70.04350281]
[421.59902954 76.99826050]
[407.82363892 82.95192719]
[393.64617920 87.87198639]
[379.14407349 91.73155975]
[364.39654541 94.50957489]
[349.48413086 96.19084930]
[334.48825073 96.76621246]
[319.49084473 96.23250580]
[304.57379150 94.59265900]
[289.81860352 91.85562897]
[275.30581665 88.03635406]
[261.11474609 83.15569305]
[247.32289124 77.24031830]
[234.00556946 70.32251740]
[221.23550415 62.44009399]
[209.08244324 53.63608551]
[197.61279297 43.95858002]
[186.88916016 33.46043777]
[175.63305664 43.37508774]
[164.37696838 53.28973770]
[153.12086487 63.20439148]
[148.68441772 77.42294312]
[133.21450806 80.73841095]
[121.95841217 90.65306854]
[110.70231628 100.56771851]
[100.95635223 111.97017670]
[92.91517639 124.63270569]
[84.87400818 137.29522705]
[84.84546661 141.63725281]
[83.56545258 145.36901855]
[81.37948608 148.17204285]
[78.70102692 149.87277222]
[75.95832062 150.45214844]
[67.17771149 162.61361694]
[58.39710999 174.77507019]
[49.61650848 186.93652344]
[40.83590317 199.09797668]
[32.05530167 211.25942993]
[23.27469826 223.42088318]
[34.62030792 233.24813843]
[45.05297852 244.03965759]
[54.49106216 255.71099854]
[62.86068344 268.17080688]
[70.09634399 281.32159424]
[76.14141083 295.06039429]
[80.94857788 309.27969360]
[84.48021698 323.86822510]
[86.70868683 338.71179199]
[87.61654663 353.69424438]
[87.19669342 368.69827271]
[85.45240784 383.60650635]
[82.39734650 398.30221558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 197]
[57 196]
[58 195]
[59 194]
[60 193]
[61 192]
[62 191]
[63 186]
[64 185]
[65 184]
[85 183]
[86 182]
[87 181]
[89 179]
[90 178]
[91 177]
[92 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
