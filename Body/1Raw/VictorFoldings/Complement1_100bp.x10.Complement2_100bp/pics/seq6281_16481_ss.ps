%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[125.99314117 568.28100586]
[114.02218628 559.21679688]
[103.12104034 548.89068604]
[93.42202759 537.42803955]
[85.04290009 524.96801758]
[78.08536530 511.66174316]
[72.63388062 497.67086792]
[68.75461578 483.16522217]
[66.49467468 468.32083130]
[65.88148499 453.31790161]
[66.92248535 438.33862305]
[69.60504913 423.56475830]
[73.89659882 409.17565918]
[79.74505615 395.34603882]
[87.07941437 382.24371338]
[95.81063843 370.02780151]
[105.83274841 358.84652710]
[117.02407837 348.83569336]
[129.24877930 340.11676025]
[142.35845947 332.79556274]
[156.19396973 326.96102905]
[170.58735657 322.68395996]
[167.92156982 307.92272949]
[165.25576782 293.16152954]
[162.58998108 278.40029907]
[159.92417908 263.63906860]
[157.25837708 248.87786865]
[152.53825378 234.63987732]
[145.85804749 221.20950317]
[142.64973450 219.74696350]
[139.99040222 216.65779114]
[138.63687134 212.21693420]
[139.19456482 207.02693176]
[126.96639252 198.52273560]
[128.45300293 182.77153015]
[122.37917328 169.05627441]
[116.30533600 155.34100342]
[110.23150635 141.62573242]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[81.80129242 105.44495392]
[67.73043823 110.64215851]
[54.04875183 104.49305725]
[48.59372711 90.52012634]
[54.49025345 76.72770691]
[68.36052704 71.01670837]
[82.25835419 76.65799713]
[77.43235779 62.45554352]
[72.60635376 48.25308990]
[67.78035736 34.05063248]
[62.95436096 19.84817696]
[59.02762222 16.40901947]
[57.01408768 12.22584152]
[56.87678528 8.15199852]
[58.24540710 4.90250397]
[54.05839539 -9.50127792]
[49.87138367 -23.90505981]
[45.68437195 -38.30884171]
[41.49736023 -52.71262360]
[26.40187645 -52.79210663]
[11.95500565 -57.11763382]
[-0.67489302 -65.33047485]
[-10.46892071 -76.75786591]
[-16.63983536 -90.46814728]
[-18.69532585 -105.34668732]
[-16.47727776 -120.18653107]
[-10.17389774 -133.78628540]
[-0.30378625 -145.04737854]
[12.32673168 -153.06282043]
[8.13972092 -167.46659851]
[3.95270944 -181.87037659]
[-0.23430173 -196.27416992]
[-15.10498524 -194.12733459]
[-30.12973022 -194.07106018]
[-45.01607513 -196.10646057]
[-59.47425461 -200.19390869]
[-73.22283173 -206.25382996]
[-85.99419403 -214.16827393]
[-97.53974152 -223.78318787]
[-107.63472748 -234.91140747]
[-116.08265686 -247.33633423]
[-122.71909332 -260.81610107]
[-127.41484833 -275.08828735]
[-130.07852173 -289.87515259]
[-130.65824890 -304.88882446]
[-129.14277649 -319.83703613]
[-125.56158447 -334.42886353]
[-119.98438263 -348.38024902]
[-112.51972961 -361.41961670]
[-103.31293488 -373.29315186]
[-92.54321289 -383.76974487]
[-80.42018890 -392.64547729]
[-67.17984772 -399.74755859]
[-53.07991791 -404.93774414]
[-38.39485550 -408.11502075]
[-23.41050911 -409.21752930]
[-8.41855526 -408.22381592]
[6.28918266 -405.15319824]
[20.42641640 -400.06549072]
[33.71795654 -393.05972290]
[45.90508652 -384.27221680]
[56.75057220 -373.87405396]
[66.04330444 -362.06765747]
[73.60240936 -349.08282471]
[79.28073120 -335.17230225]
[82.96774292 -320.60684204]
[84.59168243 -305.67001343]
[84.12093353 -290.65252686]
[81.56465912 -275.84674072]
[76.97262573 -261.54083252]
[70.43421173 -248.01324463]
[62.07668686 -235.52734375]
[52.06274033 -224.32614136]
[40.58728790 -214.62767029]
[27.87371254 -206.62072754]
[14.16948032 -200.46118164]
[18.35649109 -186.05738831]
[22.54350281 -171.65361023]
[26.73051453 -157.24983215]
[41.68970108 -157.25439453]
[56.05856323 -153.03929138]
[68.67020416 -144.93791199]
[78.49793243 -133.59963989]
[84.73881531 -119.93773651]
[86.87930298 -105.05585480]
[84.73747253 -90.15885162]
[78.47843170 -76.45521545]
[68.60166931 -65.05908966]
[55.90114212 -56.89963531]
[60.08815384 -42.49585342]
[64.27516937 -28.09207153]
[68.46218109 -13.68828964]
[72.64918518 0.71549261]
[77.15681458 15.02217960]
[81.98281097 29.22463417]
[86.80881500 43.42708969]
[91.63481140 57.62954712]
[96.46080780 71.83200073]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[123.94676971 135.55189514]
[130.02059937 149.26716614]
[136.09443665 162.98243713]
[142.16827393 176.69769287]
[154.83087158 186.18289185]
[152.90982056 200.95309448]
[159.28843689 214.52931213]
[165.96862793 227.95968628]
[166.22579956 212.96188354]
[170.83512878 198.68763733]
[179.39784241 186.37181091]
[191.17320251 177.07983398]
[205.14251709 171.61555481]
[220.09730530 170.45170593]
[234.74380493 173.68894958]
[247.81497192 181.04725647]
[258.18002319 191.89004517]
[264.94226074 205.27929688]
[267.51666260 220.05673218]
[265.68057251 234.94392395]
[259.59280396 248.65301514]
[249.77998352 259.99798584]
[237.09106445 267.99743652]
[222.62373352 271.95932007]
[207.62956238 271.54086304]
[193.40571594 266.77828979]
[181.18267822 258.08361816]
[172.01959229 246.21206665]
[174.68539429 260.97329712]
[177.35119629 275.73449707]
[180.01698303 290.49572754]
[182.68278503 305.25692749]
[185.34857178 320.01815796]
[200.32879639 318.99050903]
[215.33116150 319.61709595]
[230.17352295 321.89028931]
[244.67572021 325.78250122]
[258.66171265 331.24645996]
[271.96176147 338.21588135]
[284.41433716 346.60610962]
[295.86834717 356.31533813]
[306.18469238 367.22570801]
[315.23818970 379.20474243]
[322.91891479 392.10705566]
[329.13363647 405.77600098]
[333.80691528 420.04568481]
[336.88201904 434.74285889]
[338.32162476 449.68911743]
[338.10824585 464.70303345]
[336.24447632 479.60235596]
[332.75292969 494.20620728]
[327.67602539 508.33731079]
[321.07534790 521.82415771]
[313.03106689 534.50292969]
[303.64080811 546.21984863]
[293.01855469 556.83264160]
[281.29327393 566.21246338]
[268.60726929 574.24542236]
[255.11456299 580.83404541]
[240.97892761 585.89837646]
[226.37196350 589.37683105]
[211.47099304 591.22729492]
[196.45689392 591.42730713]
[181.51193237 589.97436523]
[166.81750488 586.88616943]
[152.55200195 582.20013428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[27 172]
[28 152]
[29 151]
[33 150]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[42 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[71 121]
[72 120]
[73 119]
[74 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
