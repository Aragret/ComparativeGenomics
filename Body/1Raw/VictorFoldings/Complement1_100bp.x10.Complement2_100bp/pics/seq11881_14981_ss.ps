%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[53.88226318 544.90197754]
[43.08423233 555.32543945]
[31.48247147 564.84619141]
[19.15222168 573.40258789]
[6.17344809 580.93902588]
[-7.36967325 587.40661621]
[-21.38930893 592.76348877]
[-35.79453659 596.97491455]
[-50.49192810 600.01348877]
[-65.38616180 601.85955811]
[-80.38065338 602.50115967]
[-95.37814331 601.93408203]
[-110.28137970 600.16204834]
[-124.99369049 597.19659424]
[-139.41966248 593.05682373]
[-153.46575928 587.76971436]
[-167.04086304 581.36944580]
[-180.05693054 573.89764404]
[-192.42955017 565.40270996]
[-204.07849121 555.93969727]
[-214.92820740 545.57000732]
[-224.90830994 534.36090088]
[-233.95408630 522.38507080]
[-242.00686646 509.72021484]
[-249.01443481 496.44842529]
[-254.93133545 482.65579224]
[-259.71917725 468.43176270]
[-263.34695435 453.86862183]
[-265.79110718 439.06076050]
[-267.03576660 424.10424805]
[-267.07290649 409.09609985]
[-265.90225220 394.13360596]
[-263.53140259 379.31384277]
[-259.97576904 364.73291016]
[-255.25834656 350.48538208]
[-249.40975952 336.66363525]
[-242.46795654 323.35733032]
[-234.47795105 310.65277100]
[-225.49153137 298.63232422]
[-215.56701660 287.37399292]
[-204.76876831 276.95074463]
[-193.16679382 267.43020630]
[-180.83634949 258.87414551]
[-167.85740662 251.33798218]
[-154.31414795 244.87066650]
[-140.29438782 239.51409912]
[-125.88907623 235.30302429]
[-111.19161224 232.26477051]
[-96.29734039 230.41902161]
[-81.30283356 229.77775574]
[-66.30535126 230.34513855]
[-51.40216446 232.11749268]
[-36.68991470 235.08331299]
[-22.26402664 239.22335815]
[-8.21805573 244.51080322]
[5.35690355 250.91133118]
[12.82464504 237.90238953]
[20.29238701 224.89343262]
[27.66307640 211.82923889]
[34.93630600 198.71055603]
[31.90555000 186.99983215]
[37.85763168 176.01089478]
[50.08131409 171.89454651]
[57.54905319 158.88558960]
[65.01679230 145.87663269]
[72.48453522 132.86769104]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[114.50650787 59.66457367]
[101.57959747 67.27344513]
[86.78892517 69.77066040]
[72.08046722 66.82766724]
[59.38936996 58.83166122]
[50.38536453 46.83466721]
[46.25308609 32.41508865]
[47.53620529 17.47006798]
[54.06590271 3.96588302]
[64.98309326 -6.32076025]
[78.85142517 -12.03647614]
[93.84627533 -12.42926502]
[107.99482727 -7.44744825]
[119.43559265 2.25353098]
[126.66333008 15.39734173]
[128.72712708 30.25468826]
[125.35448456 44.87301636]
[135.51803589 33.84114075]
[145.68157959 22.80926323]
[155.84512329 11.77738571]
[159.50523376 -3.61462879]
[173.81932068 -7.73244810]
[183.98286438 -18.76432610]
[173.84622192 -29.83330154]
[164.68481445 -41.72205734]
[156.56465149 -54.34492874]
[149.54425049 -67.61096954]
[143.67419434 -81.42459106]
[138.99676514 -95.68627167]
[135.54566956 -110.29325104]
[133.34579468 -125.14028168]
[132.41294861 -140.12039185]
[132.75389099 -155.12564087]
[134.36613464 -170.04792786]
[137.23808289 -184.77972412]
[141.34904480 -199.21487427]
[146.66938782 -213.24940491]
[153.16079712 -226.78216553]
[160.77647400 -239.71565247]
[169.46156311 -251.95669556]
[179.15348816 -263.41708374]
[189.78240967 -274.01425171]
[201.27175903 -283.67181396]
[213.53872681 -292.32022095]
[226.49496460 -299.89718628]
[240.04708862 -306.34805298]
[254.09747314 -311.62634277]
[268.54486084 -315.69409180]
[283.28518677 -318.52194214]
[298.21221924 -320.08953857]
[313.21844482 -320.38555908]
[328.19567871 -319.40786743]
[343.03607178 -317.16357422]
[357.63265991 -313.66876221]
[371.88027954 -308.94869995]
[385.67626953 -303.03729248]
[398.92123413 -295.97723389]
[411.51974487 -287.81933594]
[423.38104248 -278.62237549]
[434.41961670 -268.45266724]
[444.55596924 -257.38342285]
[453.71707153 -245.49443054]
[461.83691406 -232.87135315]
[468.85696411 -219.60513306]
[474.72665405 -205.79135132]
[479.40371704 -191.52954102]
[482.85443115 -176.92248535]
[485.05395508 -162.07539368]
[485.98638916 -147.09526062]
[485.64508057 -132.09001160]
[484.03244019 -117.16777802]
[481.16009521 -102.43605804]
[477.04876709 -88.00100708]
[471.72805786 -73.96662140]
[465.23632812 -60.43402863]
[457.62030029 -47.50073242]
[448.93490601 -35.25991821]
[439.24267578 -23.79978180]
[428.61346436 -13.20289612]
[417.12387085 -3.54561281]
[404.85668945 5.10248613]
[391.90026855 12.67908955]
[378.34796143 19.12960815]
[364.29745483 24.40756226]
[349.84994507 28.47492790]
[335.10955811 31.30239487]
[320.18246460 32.86959076]
[305.17623901 33.16522980]
[290.19903564 32.18717575]
[275.35870361 29.94247627]
[260.76220703 26.44730568]
[246.51470947 21.72684860]
[232.71887207 15.81511497]
[219.47409058 8.75469971]
[206.87577820 0.59647518]
[195.01473999 -8.60077858]
[184.85119629 2.43109870]
[181.91804504 17.03404045]
[166.87699890 21.94093323]
[156.71345520 32.97280884]
[146.54991150 44.00468826]
[136.38635254 55.03656387]
[127.51546478 67.13231659]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[85.49349213 140.33541870]
[78.02574921 153.34437561]
[70.55800629 166.35333252]
[63.09026718 179.36228943]
[63.56328201 197.77037048]
[48.05500031 205.98377991]
[40.78176880 219.10247803]
[39.35760117 228.12519836]
[33.30133820 232.36117554]
[25.83359718 245.37013245]
[18.36585617 258.37908936]
[30.73867035 266.87377930]
[42.38782120 276.33651733]
[53.23775101 286.70596313]
[63.21810532 297.91482544]
[72.26414490 309.89044189]
[80.31720734 322.55514526]
[87.32506561 335.82678223]
[93.24227142 349.61929321]
[98.03044128 363.84320068]
[101.65853119 378.40628052]
[104.10300446 393.21408081]
[105.34800720 408.17056274]
[105.38547516 423.17871094]
[104.21514893 438.14123535]
[101.84463501 452.96102905]
[98.28929901 467.54205322]
[93.57219696 481.78970337]
[87.72392273 495.61157227]
[80.78240967 508.91802979]
[72.79267120 521.62274170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 190]
[57 189]
[58 188]
[59 186]
[60 185]
[63 183]
[64 182]
[65 181]
[66 180]
[67 179]
[68 178]
[70 176]
[71 175]
[72 174]
[88 173]
[89 172]
[90 171]
[91 170]
[93 168]
[94 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
