%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[97.50854492 640.44775391]
[84.36660004 633.19482422]
[71.93865967 624.77691650]
[60.32770157 615.26373291]
[49.62993622 604.73406982]
[39.93401718 593.27526855]
[31.32028961 580.98223877]
[23.86012459 567.95684814]
[17.61534500 554.30700684]
[12.63769817 540.14581299]
[8.96843052 525.59069824]
[6.63794708 510.76223755]
[5.66555977 495.78323364]
[6.05932570 480.77792358]
[7.81598282 465.87054443]
[10.92097378 451.18469238]
[15.34856987 436.84204102]
[21.06208229 422.96145630]
[28.01416397 409.65792847]
[36.14720917 397.04171753]
[45.39382172 385.21734619]
[55.67737961 374.28283691]
[66.91267395 364.32876587]
[79.00659180 355.43762207]
[91.85892487 347.68310547]
[105.36317444 341.12942505]
[119.40744019 335.83093262]
[133.87533569 331.83154297]
[131.20953369 317.07031250]
[128.54374695 302.30911255]
[118.66772461 291.15951538]
[123.82929230 276.20394897]
[121.16349792 261.44271851]
[118.49769592 246.68150330]
[115.83190155 231.92028809]
[113.16610718 217.15907288]
[110.50031281 202.39785767]
[107.83451843 187.63664246]
[105.05890656 172.89567566]
[102.17363739 158.17578125]
[99.28836060 143.45588684]
[96.58185577 141.19598389]
[94.83549500 137.51287842]
[94.70625305 132.87213135]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[84.17978668 66.18755341]
[86.40147400 59.13872910]
[76.88981628 46.49598312]
[82.85738373 32.84909821]
[80.85337067 17.98357201]
[71.34171295 5.34082508]
[77.30927277 -8.30605984]
[71.87013245 5.67305851]
[62.03000259 16.99435425]
[48.94488144 24.32781410]
[34.15200043 26.81190872]
[19.38921547 24.15480995]
[6.39084244 16.66867065]
[-3.31608415 5.23295546]
[-8.59120369 -8.80887890]
[-8.81480026 -23.80721283]
[-3.96060538 -38.00005722]
[5.40111399 -49.72004700]
[18.17055321 -57.59033585]
[32.84757233 -60.68632507]
[47.70792389 -58.64430237]
[61.00583649 -51.70416260]
[71.17908478 -40.68122864]
[77.03287506 -26.86893463]
[78.59339142 -41.78754044]
[80.15391541 -56.70614243]
[81.71443939 -71.62474823]
[83.27496338 -86.54335022]
[84.83548737 -101.46195984]
[70.13391876 -104.50209808]
[55.80810928 -108.99095154]
[42.00044250 -114.88391113]
[28.84814644 -122.12240601]
[16.48194122 -130.63449097]
[5.02472925 -140.33555603]
[-5.40961981 -151.12921143]
[-14.71740150 -162.90817261]
[-22.80610847 -175.55535889]
[-29.59535027 -188.94509888]
[-35.01765060 -202.94427490]
[-39.01911545 -217.41380310]
[-41.55997849 -232.20982361]
[-42.61498642 -247.18533325]
[-42.17365646 -262.19146729]
[-40.24036789 -277.07907104]
[-36.83434296 -291.70019531]
[-31.98942757 -305.90954590]
[-25.75377655 -319.56588745]
[-18.18936157 -332.53344727]
[-9.37136745 -344.68341064]
[0.61256963 -355.89498901]
[11.66322136 -366.05679321]
[23.67075729 -375.06774902]
[36.51583862 -382.83837891]
[50.07080460 -389.29141235]
[64.20092773 -394.36270142]
[78.76578522 -398.00189209]
[93.62061310 -400.17276001]
[108.61777496 -400.85375977]
[123.60821533 -400.03814697]
[138.44294739 -397.73397827]
[152.97454834 -393.96420288]
[167.05857849 -388.76623535]
[180.55505371 -382.19177246]
[193.32986450 -374.30615234]
[205.25601196 -365.18774414]
[216.21498108 -354.92715454]
[226.09786987 -343.62637329]
[234.80642700 -331.39773560]
[242.25410461 -318.36276245]
[248.36689758 -304.65100098]
[253.08406067 -290.39874268]
[256.35867310 -275.74761963]
[258.15823364 -260.84326172]
[258.46481323 -245.83377075]
[257.27539062 -230.86834717]
[254.60180664 -216.09571838]
[250.47059631 -201.66270447]
[244.92282104 -187.71276855]
[238.01364136 -174.38453674]
[229.81172180 -161.81047058]
[220.39855957 -150.11555481]
[209.86773682 -139.41601562]
[198.32388306 -129.81819153]
[185.88175964 -121.41747284]
[172.66500854 -114.29734802]
[158.80499268 -108.52859497]
[144.43945312 -104.16853333]
[129.71118164 -101.26050568]
[114.76655579 -99.83341217]
[99.75408936 -99.90143585]
[98.19356537 -84.98283386]
[96.63304901 -70.06422424]
[95.07252502 -55.14562225]
[93.51200104 -40.22701645]
[91.95147705 -25.30841064]
[92.17480469 -10.31007385]
[101.54311371 1.26939058]
[95.71889496 15.97955799]
[97.72290802 30.84508514]
[107.09122467 42.42454910]
[101.26699829 57.13471603]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[114.00825500 140.57061768]
[116.89352417 155.29051208]
[119.77880096 170.01040649]
[124.50045776 177.82984924]
[122.59573364 184.97084045]
[125.26152802 199.73205566]
[127.92732239 214.49328613]
[130.59312439 229.25450134]
[133.25891113 244.01571655]
[135.92471313 258.77691650]
[138.59049988 273.53814697]
[148.65719604 285.74356079]
[143.30496216 299.64331055]
[145.97074890 314.40451050]
[148.63655090 329.16574097]
[163.58944702 327.85192871]
[178.59985352 327.90328979]
[193.54341125 329.31942749]
[208.29627991 332.08862305]
[222.73619080 336.18789673]
[236.74351501 341.58328247]
[250.20216370 348.23007202]
[263.00061035 356.07321167]
[275.03280640 365.04769897]
[286.19906616 375.07916260]
[296.40682983 386.08444214]
[305.57153320 397.97241211]
[313.61724854 410.64450073]
[320.47723389 423.99575806]
[326.09472656 437.91549683]
[330.42312622 452.28839111]
[333.42657471 466.99533081]
[335.08020020 481.91448975]
[335.37030029 496.92218018]
[334.29443359 511.89407349]
[331.86157227 526.70611572]
[328.09182739 541.23553467]
[323.01647949 555.36199951]
[316.67752075 568.96832275]
[309.12756348 581.94189453]
[300.42910767 594.17510986]
[290.65423584 605.56671143]
[279.88400269 616.02215576]
[268.20758057 625.45489502]
[255.72178650 633.78674316]
[242.53005981 640.94873047]
[228.74169922 646.88134766]
[214.47097778 651.53558350]
[199.83615112 654.87280273]
[184.95848083 656.86541748]
[169.96127319 657.49682617]
[154.96876526 656.76177979]
[140.10522461 654.66650391]
[125.49380493 651.22821045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 171]
[29 170]
[30 169]
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 159]
[40 158]
[41 157]
[45 156]
[46 155]
[48 153]
[49 152]
[51 151]
[53 149]
[54 148]
[56 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
