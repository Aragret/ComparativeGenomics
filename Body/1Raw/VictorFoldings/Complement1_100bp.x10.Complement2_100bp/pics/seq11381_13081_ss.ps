%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[97.97824860 636.59210205]
[84.03330994 631.05059814]
[70.48963928 624.59008789]
[57.40773773 617.23937988]
[44.84602356 609.03131104]
[32.86060333 600.00250244]
[21.50500488 590.19335938]
[10.82994938 579.64758301]
[0.88311225 568.41241455]
[-8.29108047 556.53790283]
[-16.65165520 544.07720947]
[-24.16127014 531.08581543]
[-30.78638458 517.62194824]
[-36.49740982 503.74554443]
[-41.26884079 489.51873779]
[-45.07936478 475.00497437]
[-47.91196442 460.26910400]
[-49.75398636 445.37695312]
[-50.59720230 430.39501953]
[-50.43785095 415.39022827]
[-49.27664185 400.42959595]
[-47.11876297 385.57989502]
[-43.97384644 370.90753174]
[-39.85594559 356.47796631]
[-34.78344345 342.35568237]
[-28.77900505 328.60372925]
[-21.86944008 315.28356934]
[-14.08561420 302.45462036]
[-5.46228838 290.17425537]
[3.96202183 278.49728394]
[14.14522552 267.47586060]
[25.04183960 257.15924072]
[36.60319901 247.59344482]
[48.77766800 238.82124329]
[61.51086807 230.88179016]
[74.74593353 223.81056213]
[88.42375183 217.63912964]
[102.48323059 212.39506531]
[116.86158752 208.10177612]
[113.53932953 193.47431946]
[103.17530060 182.77682495]
[107.66392517 167.60571289]
[104.34165955 152.97825623]
[101.01940155 138.35078430]
[97.69714355 123.72332764]
[94.37488556 109.09587097]
[89.33796692 94.96684265]
[82.65777588 81.53646088]
[75.97757721 68.10608673]
[71.62656403 65.22237396]
[69.07220459 61.34571075]
[68.39186859 57.32673264]
[69.31407928 53.92351913]
[63.24024963 40.20825577]
[57.16641617 26.49298668]
[51.09258270 12.77772045]
[35.92073059 13.07880974]
[21.82745361 7.56314278]
[10.94899368 -2.89978027]
[4.92146921 -16.69313240]
[4.63484526 -31.70255280]
[10.10166359 -45.64024353]
[20.45987701 -56.39369583]
[14.38604355 -70.10896301]
[8.31221008 -83.82422638]
[2.23837566 -97.53949738]
[-3.83545828 -111.25476074]
[-9.90929222 -124.97003174]
[-15.98312569 -138.68530273]
[-22.05695915 -152.40055847]
[-28.13079453 -166.11582947]
[-34.20462799 -179.83110046]
[-48.73104858 -175.96720886]
[-63.68307877 -174.42344666]
[-78.69252014 -175.23782349]
[-93.38974762 -178.39030457]
[-107.41282654 -183.80322266]
[-120.41641998 -191.34330750]
[-132.08032227 -200.82487488]
[-142.11727905 -212.01441956]
[-150.28013611 -224.63639832]
[-156.36785889 -238.37997437]
[-160.23056030 -252.90670776]
[-161.77308655 -267.85885620]
[-160.95745850 -282.86825562]
[-157.80377197 -297.56521606]
[-152.38969421 -311.58782959]
[-144.84854126 -324.59082031]
[-135.36601257 -336.25393677]
[-124.17564392 -346.28997803]
[-111.55299377 -354.45178223]
[-97.80890656 -360.53839111]
[-83.28185272 -364.39987183]
[-68.32955933 -365.94116211]
[-53.32025909 -365.12429810]
[-38.62355423 -361.96942139]
[-24.60136795 -356.55416870]
[-11.59901237 -349.01193237]
[0.06331948 -339.52844238]
[10.09843254 -328.33724976]
[18.25920296 -315.71392822]
[24.34466553 -301.96932983]
[28.20495796 -287.44195557]
[29.74501801 -272.48956299]
[28.92692184 -257.48031616]
[25.77081299 -242.78387451]
[20.35441589 -228.76213074]
[12.81111336 -215.76039124]
[3.32666564 -204.09884644]
[-7.86536407 -194.06465149]
[-20.48936081 -185.90492249]
[-14.41552734 -172.18966675]
[-8.34169292 -158.47439575]
[-2.26785946 -144.75912476]
[3.80597448 -131.04386902]
[9.87980843 -117.32859802]
[15.95364285 -103.61332703]
[22.02747726 -89.89806366]
[28.10131073 -76.18279266]
[34.17514420 -62.46752930]
[49.09938812 -62.91046906]
[63.09412003 -57.59136200]
[74.01569366 -47.29165268]
[80.17847443 -33.55819702]
[80.61492920 -18.47101212]
[75.22743225 -4.32824469]
[64.80784607 6.70388699]
[70.88168335 20.41915321]
[76.95551300 34.13441849]
[83.02935028 47.84968567]
[89.40795135 61.42589569]
[96.08815002 74.85626984]
[102.76834106 88.28664398]
[103.42073822 73.30084229]
[109.09524536 59.41559601]
[119.12521362 48.26213455]
[132.33235168 41.15076065]
[147.16508484 38.91690445]
[161.88087463 41.82299805]
[174.75093079 49.52764130]
[184.26330566 61.12569427]
[189.30047607 75.25463867]
[189.27067566 90.25460815]
[184.17742920 104.36342621]
[174.61906433 115.92360687]
[161.71850586 123.57706451]
[146.99128723 126.42469025]
[132.16754150 124.13193512]
[118.98876190 116.96815491]
[109.00234222 105.77361298]
[112.32460022 120.40106964]
[115.64686584 135.02853394]
[118.96912384 149.65599060]
[122.29138184 164.28344727]
[132.89303589 176.02719116]
[128.16677856 190.15205383]
[131.48904419 204.77952576]
[146.31127930 202.44062805]
[161.25665283 201.09696960]
[176.25837708 200.75456238]
[191.24948120 201.41493225]
[206.16300964 203.07511902]
[220.93232727 205.72772217]
[235.49150085 209.36088562]
[249.77548218 213.95838928]
[263.72048950 219.49969482]
[277.26425171 225.96003723]
[290.34622192 233.31059265]
[302.90805054 241.51852417]
[314.89358521 250.54714966]
[326.24929810 260.35617065]
[336.92449951 270.90176392]
[346.87149048 282.13684082]
[356.04580688 294.01123047]
[364.40655518 306.47186279]
[371.91632080 319.46310425]
[378.54162598 332.92694092]
[384.25280762 346.80322266]
[389.02441406 361.02999878]
[392.83511353 375.54370117]
[395.66790771 390.27954102]
[397.51013184 405.17166138]
[398.35351562 420.15359497]
[398.19436646 435.15838623]
[397.03335571 450.11904907]
[394.87564087 464.96875000]
[391.73092651 479.64117432]
[387.61318970 494.07077026]
[382.54086304 508.19311523]
[376.53662109 521.94512939]
[369.62719727 535.26544189]
[361.84353638 548.09442139]
[353.22036743 560.37493896]
[343.79620361 572.05200195]
[333.61315918 583.07354736]
[322.71667480 593.39031982]
[311.15542603 602.95623779]
[298.98104858 611.72863770]
[286.24795532 619.66821289]
[273.01296997 626.73962402]
[259.33523560 632.91119385]
[245.27583313 638.15545654]
[230.89753723 642.44891357]
[216.26457214 645.77246094]
[201.44230652 648.11114502]
[186.49691772 649.45458984]
[171.49517822 649.79681396]
[156.50408936 649.13629150]
[141.59059143 647.47589111]
[126.82129669 644.82312012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 157]
[40 156]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[47 133]
[48 132]
[49 131]
[53 130]
[54 129]
[55 128]
[56 127]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
