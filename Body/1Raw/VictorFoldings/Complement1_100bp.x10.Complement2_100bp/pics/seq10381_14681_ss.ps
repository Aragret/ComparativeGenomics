%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[84.29839325 449.48013306]
[83.18774414 434.31982422]
[87.96797943 419.89007568]
[97.91014862 408.39129639]
[111.49814606 401.57699585]
[110.38249969 386.61856079]
[109.26685333 371.66009521]
[108.15119934 356.70162964]
[107.03555298 341.74319458]
[105.91990662 326.78472900]
[104.80425262 311.82629395]
[94.15653992 297.87661743]
[102.28975677 281.35595703]
[100.95152283 266.41577148]
[99.61328888 251.47558594]
[97.15658569 248.94636536]
[95.80286407 245.10156250]
[96.15713501 240.47254944]
[98.56417847 235.84078979]
[97.89439392 220.85575867]
[89.59650421 208.48666382]
[96.70987701 194.35476685]
[96.04009247 179.36973572]
[95.37030792 164.38468933]
[94.70052338 149.39965820]
[94.03073883 134.41461182]
[85.73285675 122.04552460]
[92.84622955 107.91362762]
[90.73160553 93.06343079]
[87.19193268 78.48705292]
[83.65225983 63.91067886]
[80.11258698 49.33430481]
[76.57291412 34.75792694]
[73.03324127 20.18155289]
[69.49356842 5.60517740]
[58.71824265 -5.97942162]
[63.23366928 -20.17308807]
[59.69399643 -34.74946213]
[56.15432739 -49.32584000]
[52.61465454 -63.90221405]
[49.07498169 -78.47859192]
[38.29965591 -90.06318665]
[42.81508255 -104.25685883]
[39.27540970 -118.83322906]
[35.73573685 -133.40960693]
[32.19606781 -147.98597717]
[28.65639305 -162.56236267]
[23.59028435 -170.16316223]
[25.17424774 -177.38209534]
[21.85198784 -192.00955200]
[18.52972794 -206.63700867]
[14.99005604 -221.21339417]
[11.23375511 -235.73544312]
[7.47745466 -250.25750732]
[3.72115421 -264.77957153]
[-10.56322861 -270.54693604]
[-18.61845779 -283.46850586]
[-17.53326035 -298.47802734]
[-7.93284082 -309.83453369]
[-11.68914127 -324.35659790]
[-15.44544220 -338.87866211]
[-19.20174217 -353.40072632]
[-22.95804405 -367.92276001]
[-37.77180481 -365.50042725]
[-52.74446869 -364.43524170]
[-67.75196075 -364.73602295]
[-82.66992188 -366.40026855]
[-97.37473297 -369.41418457]
[-111.74454498 -373.75280762]
[-125.66028595 -379.38021851]
[-139.00663757 -386.24972534]
[-151.67300415 -394.30441284]
[-163.55442810 -403.47756958]
[-174.55247498 -413.69317627]
[-184.57597351 -424.86657715]
[-193.54188538 -436.90515137]
[-201.37590027 -449.70919800]
[-208.01312256 -463.17257690]
[-213.39854431 -477.18371582]
[-217.48753357 -491.62655640]
[-220.24621582 -506.38137817]
[-221.65171814 -521.32592773]
[-221.69241333 -536.33636475]
[-220.36795044 -551.28833008]
[-217.68930054 -566.05792236]
[-213.67866516 -580.52270508]
[-208.36929321 -594.56286621]
[-201.80516052 -608.06201172]
[-194.04066467 -620.90832520]
[-185.14015198 -632.99536133]
[-175.17736816 -644.22290039]
[-164.23487854 -654.49798584]
[-152.40335083 -663.73541260]
[-139.78083801 -671.85870361]
[-126.47192383 -678.80047607]
[-112.58689880 -684.50317383]
[-98.24081421 -688.91967773]
[-83.55255890 -692.01324463]
[-68.64383698 -693.75836182]
[-53.63819885 -694.14050293]
[-38.65998459 -693.15649414]
[-23.83330727 -690.81451416]
[-9.28102970 -687.13397217]
[4.87625885 -682.14532471]
[18.52124596 -675.88995361]
[31.54086113 -668.41967773]
[43.82722092 -659.79644775]
[55.27851105 -650.09161377]
[65.79984283 -639.38568115]
[75.30402374 -627.76739502]
[83.71231079 -615.33288574]
[90.95502472 -602.18536377]
[96.97214508 -588.43365479]
[101.71380615 -574.19171143]
[105.14073181 -559.57763672]
[107.22451019 -544.71246338]
[107.94787598 -529.71942139]
[107.30484772 -514.72271729]
[105.30073547 -499.84658813]
[101.95216370 -485.21432495]
[97.28686523 -470.94723511]
[91.34351349 -457.16348267]
[84.17134094 -443.97729492]
[75.82979584 -431.49798584]
[66.38799286 -419.82888794]
[55.92417145 -409.06674194]
[44.52503967 -399.30072021]
[32.28505707 -390.61175537]
[19.30565262 -383.07186890]
[5.69437456 -376.74346924]
[-8.43598461 -371.67907715]
[-4.67968369 -357.15701294]
[-0.92338282 -342.63494873]
[2.83291793 -328.11288452]
[6.58921862 -313.59082031]
[20.49210930 -308.31375122]
[28.71905518 -295.71289062]
[27.93954659 -280.50613403]
[18.24321365 -268.53585815]
[21.99951363 -254.01380920]
[25.75581551 -239.49174500]
[29.51211548 -224.96969604]
[33.09958649 -221.81706238]
[34.74468231 -216.37731934]
[33.15718842 -209.95927429]
[36.47945023 -195.33181763]
[39.80170822 -180.70434570]
[43.23276901 -166.10203552]
[46.77244186 -151.52565002]
[50.31211472 -136.94927979]
[53.85178757 -122.37290192]
[57.39146042 -107.79653168]
[67.91360474 -97.25453186]
[63.65135574 -82.01826477]
[67.19103241 -67.44188690]
[70.73069763 -52.86551285]
[74.27037048 -38.28913498]
[77.81004333 -23.71276093]
[88.33219147 -13.17076206]
[84.06994629 2.06550479]
[87.60961914 16.64188004]
[91.14929199 31.21825600]
[94.68895721 45.79463196]
[98.22863007 60.37100601]
[101.76830292 74.94738007]
[105.30797577 89.52375793]
[109.92263794 75.25123596]
[119.88272095 64.03532410]
[133.50978088 57.76609802]
[148.50743103 57.50003433]
[162.34828186 63.28197479]
[172.69992065 74.13755035]
[177.81790161 88.23741913]
[176.83978271 103.20549011]
[169.93035889 116.51939392]
[158.25401306 125.93549347]
[143.77841187 129.86701965]
[128.94294739 127.65143585]
[116.24764252 119.66210938]
[107.83126831 107.24384308]
[116.17705536 120.68476105]
[109.01577759 133.74482727]
[109.68556213 148.72985840]
[110.35534668 163.71490479]
[111.02513123 178.69995117]
[111.69491577 193.68498230]
[120.04071045 207.12590027]
[112.87943268 220.18597412]
[113.54921722 235.17100525]
[114.55347443 250.13734436]
[115.89170837 265.07754517]
[117.22994232 280.01773071]
[126.60909271 288.87179565]
[127.41613770 301.34304810]
[119.76271057 310.71063232]
[120.87835693 325.66909790]
[121.99400330 340.62753296]
[123.10965729 355.58599854]
[124.22530365 370.54443359]
[125.34095001 385.50289917]
[126.45660400 400.46136475]
[140.90510559 405.18460083]
[152.44302368 415.08132935]
[159.31089783 428.64233398]
[160.46142578 443.79965210]
[155.71917725 458.24194336]
[145.80728149 469.76681519]
[132.23725891 476.61685181]
[117.07843018 477.74743652]
[102.64240265 472.98620605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[13 192]
[14 191]
[15 190]
[19 189]
[20 188]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[28 180]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[49 147]
[50 146]
[51 145]
[52 142]
[53 141]
[54 140]
[55 139]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
