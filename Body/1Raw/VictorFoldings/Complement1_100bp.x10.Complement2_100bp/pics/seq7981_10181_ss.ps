%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[89.23267365 912.60791016]
[74.26394653 911.60784912]
[59.34846878 909.99810791]
[44.51106644 907.78125000]
[29.77643394 904.96105957]
[15.16909313 901.54223633]
[0.71335888 897.53045654]
[-13.56670952 892.93237305]
[-27.64734459 887.75561523]
[-41.50510788 882.00885010]
[-55.11693954 875.70166016]
[-68.46018219 868.84448242]
[-81.51261902 861.44879150]
[-94.25254059 853.52685547]
[-106.65872955 845.09185791]
[-118.71054840 836.15783691]
[-130.38792419 826.73968506]
[-141.67143250 816.85302734]
[-152.54228210 806.51440430]
[-162.98239136 795.74096680]
[-172.97438049 784.55065918]
[-182.50161743 772.96209717]
[-191.54824829 760.99456787]
[-200.09919739 748.66802979]
[-208.14025879 736.00299072]
[-215.65803528 723.02044678]
[-222.64001465 709.74206543]
[-229.07458496 696.19000244]
[-234.95101929 682.38671875]
[-240.25955200 668.35522461]
[-244.99134827 654.11889648]
[-249.13851929 639.70141602]
[-252.69416809 625.12677002]
[-255.65237427 610.41925049]
[-258.00823975 595.60327148]
[-259.75778198 580.70355225]
[-260.89816284 565.74487305]
[-261.42745972 550.75213623]
[-261.34475708 535.75024414]
[-260.65020752 520.76422119]
[-259.34500122 505.81903076]
[-257.43127441 490.93951416]
[-254.91223145 476.15042114]
[-251.79206848 461.47637939]
[-248.07595825 446.94183350]
[-243.77008057 432.57092285]
[-238.88163757 418.38763428]
[-233.41874695 404.41552734]
[-227.39048767 390.67788696]
[-220.80690002 377.19757080]
[-213.67897034 363.99697876]
[-206.01852417 351.09814453]
[-197.83831787 338.52246094]
[-189.15199280 326.29092407]
[-179.97398376 314.42388916]
[-170.31956482 302.94107056]
[-160.20481873 291.86160278]
[-149.64657593 281.20391846]
[-138.66239929 270.98574829]
[-127.27058411 261.22412109]
[-115.49008942 251.93527222]
[-103.34051514 243.13467407]
[-90.84208679 234.83695984]
[-78.01560211 227.05593872]
[-64.88242340 219.80456543]
[-51.46439743 213.09490967]
[-37.78385925 206.93815613]
[-23.86358261 201.34452820]
[-9.72673225 196.32333374]
[4.60315990 191.88294983]
[19.10224342 188.03076172]
[33.74638748 184.77317810]
[48.51121521 182.11561584]
[63.37215805 180.06250000]
[78.30447388 178.61724854]
[93.28330994 177.78227234]
[93.05998230 162.78393555]
[92.83665466 147.78559875]
[92.61332703 132.78726196]
[89.37059021 126.14598846]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.50000000 52.43565369]
[77.36809540 48.43320084]
[63.79424667 40.66168976]
[52.69781876 29.65411949]
[44.82865143 16.16243553]
[40.71640778 1.10617518]
[40.63492584 -14.49021435]
[44.58398056 -29.56707191]
[52.28971100 -43.10152435]
[63.22357178 -54.17688370]
[76.63861847 -62.04471970]
[91.62050629 -66.17545319]
[91.39717865 -81.17378998]
[91.17385101 -96.17213440]
[77.48841858 -103.02542114]
[68.56488037 -115.46041107]
[66.45378113 -130.61962891]
[71.64025879 -145.01959229]
[82.93247986 -155.35130310]
[97.73558044 -159.24061584]
[112.64792633 -155.79377747]
[124.24275208 -145.80285645]
[129.85566711 -131.56369019]
[128.19685364 -116.34834290]
[119.64750671 -103.65317535]
[106.17218781 -96.39546204]
[106.39551544 -81.39711761]
[106.61884308 -66.39878082]
[120.63967133 -63.12140274]
[133.47431946 -56.57397079]
[144.37217712 -47.13432693]
[152.69462585 -35.34960938]
[157.95257568 -21.90454102]
[159.83511353 -7.58165359]
[158.22796631 6.78426218]
[153.22035217 20.35481262]
[145.10008240 32.33692551]
[134.33702087 42.02920151]
[121.55589294 48.86297226]
[107.50000000 52.43565369]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.61166382 132.56393433]
[107.83499146 147.56227112]
[108.05831909 162.56060791]
[108.28164673 177.55894470]
[123.27870941 177.94757080]
[138.24743652 178.94758606]
[153.16291809 180.55732727]
[168.00032043 182.77410889]
[182.73497009 185.59423828]
[197.34231567 189.01303101]
[211.79806519 193.02479553]
[226.07814026 197.62284851]
[240.15879822 202.79954529]
[254.01657104 208.54624939]
[267.62841797 214.85342407]
[280.97167969 221.71055603]
[294.02413940 229.10623169]
[306.76409912 237.02815247]
[319.17031860 245.46311951]
[331.22213745 254.39709473]
[342.89953613 263.81521606]
[354.18307495 273.70181274]
[365.05395508 284.04040527]
[375.49411011 294.81381226]
[385.48611450 306.00408936]
[395.01339722 317.59262085]
[404.06005859 329.56011963]
[412.61105347 341.88662720]
[420.65216064 354.55169678]
[428.16995239 367.53417969]
[435.15197754 380.81253052]
[441.58657837 394.36459351]
[447.46307373 408.16784668]
[452.77163696 422.19931030]
[457.50344849 436.43563843]
[461.65066528 450.85308838]
[465.20635986 465.42773438]
[468.16461182 480.13525391]
[470.52050781 494.95123291]
[472.27011108 509.85095215]
[473.41052246 524.80963135]
[473.93984985 539.80236816]
[473.85720825 554.80426025]
[473.16271973 569.79028320]
[471.85754395 584.73547363]
[469.94387817 599.61499023]
[467.42486572 614.40411377]
[464.30471802 629.07812500]
[460.58865356 643.61273193]
[456.28283691 657.98364258]
[451.39443970 672.16693115]
[445.93157959 686.13903809]
[439.90335083 699.87670898]
[433.31982422 713.35705566]
[426.19189453 726.55767822]
[418.53149414 739.45654297]
[410.35134888 752.03222656]
[401.66503906 764.26379395]
[392.48706055 776.13085938]
[382.83267212 787.61370850]
[372.71795654 798.69317627]
[362.15975952 809.35089111]
[351.17559814 819.56909180]
[339.78381348 829.33074951]
[328.00335693 838.61962891]
[315.85379028 847.42028809]
[303.35540771 855.71801758]
[290.52893066 863.49908447]
[277.39578247 870.75048828]
[263.97778320 877.46020508]
[250.29724121 883.61700439]
[236.37698364 889.21063232]
[222.24015808 894.23187256]
[207.91027832 898.67230225]
[193.41119385 902.52453613]
[178.76705933 905.78216553]
[164.00224304 908.43975830]
[149.14131165 910.49291992]
[134.20899963 911.93823242]
[119.23015594 912.77325439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 134]
[77 133]
[78 132]
[79 131]
[81 130]
[84 127]
[85 126]
[86 125]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
