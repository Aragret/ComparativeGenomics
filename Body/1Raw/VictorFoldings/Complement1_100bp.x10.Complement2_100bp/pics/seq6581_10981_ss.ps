%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[120.52506256 668.53710938]
[107.36602783 661.32006836]
[94.83039856 653.06750488]
[82.99947357 643.83306885]
[71.94998932 633.67651367]
[61.75360489 622.66375732]
[52.47644043 610.86627197]
[44.17867279 598.36059570]
[36.91411591 585.22766113]
[30.72987747 571.55285645]
[25.66606903 557.42468262]
[21.75553131 542.93493652]
[19.02362823 528.17742920]
[17.48807335 513.24798584]
[17.15882874 498.24340820]
[18.03802872 483.26095581]
[20.11997223 468.39785767]
[23.39115524 453.75048828]
[27.83036232 439.41381836]
[33.40880203 425.48086548]
[40.09030151 412.04196167]
[47.83152390 399.18429565]
[56.58226013 386.99124146]
[66.28576660 375.54183960]
[76.87909698 364.91040039]
[88.29356384 355.16586304]
[100.45513153 346.37139893]
[113.28493500 338.58404541]
[126.69975281 331.85433960]
[140.61257935 326.22592163]
[154.93321228 321.73526001]
[151.61094666 307.10778809]
[148.28869629 292.48031616]
[144.96643066 277.85287476]
[141.64418030 263.22540283]
[138.32191467 248.59794617]
[134.99964905 233.97048950]
[131.13534546 219.47679138]
[126.73435211 205.13694763]
[115.60339355 195.23992920]
[118.95120239 179.77697754]
[114.33719635 165.50425720]
[102.91649628 155.94302368]
[105.80243683 140.38725281]
[100.97644043 126.18480682]
[96.15043640 111.98234558]
[91.00847626 97.89120483]
[85.55312347 83.91841125]
[80.09776306 69.94561005]
[74.64241028 55.97281265]
[73.04822540 70.88786316]
[67.18379211 84.69396210]
[57.55644989 96.19675446]
[44.99905396 104.40113068]
[30.59794807 108.59733582]
[15.59896851 108.42234802]
[1.29967928 103.89130402]
[-11.06288910 95.39619446]
[-20.41925049 83.67192841]
[-25.95998573 69.73276520]
[-27.20576477 54.78458405]
[-24.04881668 40.12055969]
[-16.76225090 27.00926781]
[-5.97642374 16.58497238]
[7.37557936 9.74947548]
[22.13867760 7.09411812]
[37.03571701 8.84861469]
[50.77795029 14.86118317]
[62.17654037 24.61167717]
[70.24395752 37.25336838]
[68.90572357 22.31318474]
[67.56748962 7.37299919]
[58.62985611 -5.68185472]
[65.20082855 -19.04866219]
[63.86259460 -33.98884583]
[62.52436066 -48.92903137]
[61.18612671 -63.86921692]
[50.76205063 -53.08317947]
[35.76722336 -52.68936539]
[24.79135895 -62.91337585]
[24.12193108 -77.89842987]
[34.14242172 -89.06040955]
[49.11263657 -90.00522614]
[60.45652771 -80.19248962]
[60.45652771 -95.19248962]
[50.88183975 -110.92166138]
[60.24256516 -125.76564026]
[60.01923752 -140.76397705]
[59.79590988 -155.76231384]
[59.57258224 -170.76065063]
[59.23760605 -185.75691223]
[58.79100037 -200.75025940]
[58.34439468 -215.74362183]
[57.89778900 -230.73696899]
[57.45118332 -245.73031616]
[57.00457764 -260.72366333]
[42.60456085 -265.45812988]
[30.69417763 -274.83462524]
[22.71166611 -287.72088623]
[19.62095261 -302.56079102]
[21.79525566 -317.56240845]
[28.97201920 -330.91418457]
[40.28461075 -341.00384521]
[54.36698532 -346.61297607]
[69.51862335 -347.06430054]
[83.90988922 -342.30328369]
[95.80297089 -332.90487671]
[103.76172638 -320.00393677]
[106.82508087 -305.15835571]
[104.62313843 -290.16076660]
[97.42178345 -276.82223511]
[86.09061432 -266.75344849]
[71.99792480 -261.17025757]
[72.44453430 -246.17692566]
[72.89113617 -231.18357849]
[73.33774567 -216.19021606]
[73.78435516 -201.19686890]
[74.23095703 -186.20352173]
[77.57221222 -179.61126709]
[74.57092285 -170.98397827]
[74.79425049 -155.98564148]
[75.01757812 -140.98730469]
[75.24090576 -125.98896790]
[83.69954681 -117.34154510]
[84.00835419 -104.84801483]
[75.45652771 -95.19248962]
[75.45652771 -80.19248962]
[76.12631226 -65.20745087]
[77.46454620 -50.26726532]
[78.80278015 -35.32708359]
[80.14101410 -20.38689613]
[88.98293304 -8.40066528]
[82.50767517 6.03476477]
[83.84590912 20.97495079]
[85.18414307 35.91513443]
[88.61520386 50.51745605]
[94.07056427 64.49025726]
[99.52591705 78.46305084]
[104.98127747 92.43585205]
[108.25814056 94.46920776]
[110.62282562 97.93708038]
[111.45475006 102.39969635]
[110.35289764 107.15634918]
[115.17889404 121.35881042]
[120.00489044 135.56126404]
[131.77076721 146.13833618]
[128.53964233 160.67825317]
[133.25181580 165.31582642]
[134.69752502 170.81190491]
[133.29104614 175.37599182]
[144.73680115 186.29869080]
[141.07420349 200.73594666]
[145.47520447 215.07580566]
[154.70205688 203.24934387]
[169.69880676 202.93679810]
[179.41038513 214.36856079]
[176.67779541 229.11756897]
[163.51538086 236.31138611]
[149.62712097 230.64822388]
[152.94937134 245.27569580]
[156.27163696 259.90313721]
[159.59388733 274.53060913]
[162.91615295 289.15808105]
[166.23841858 303.78552246]
[169.56066895 318.41299438]
[184.41610718 316.27703857]
[199.39524841 315.34338379]
[214.40093994 315.61810303]
[229.33587646 317.09936523]
[244.10317993 319.77761841]
[258.60708618 323.63546753]
[272.75354004 328.64788818]
[286.45077515 334.78237915]
[299.60995483 341.99914551]
[312.14578247 350.25140381]
[323.97689819 359.48562622]
[335.02661133 369.64193726]
[345.22323608 380.65441895]
[354.50067139 392.45169067]
[362.79870605 404.95724487]
[370.06356812 418.08996582]
[376.24810791 431.76467896]
[381.31222534 445.89270020]
[385.22308350 460.38241577]
[387.95529175 475.13983154]
[389.49118042 490.06924438]
[389.82077026 505.07382202]
[388.94189453 520.05627441]
[386.86026001 534.91943359]
[383.58941650 549.56689453]
[379.15051270 563.90362549]
[373.57238770 577.83673096]
[366.89117432 591.27575684]
[359.15023804 604.13360596]
[350.39978027 616.32684326]
[340.69653320 627.77642822]
[330.10342407 638.40814209]
[318.68917847 648.15295410]
[306.52780151 656.94769287]
[293.69818115 664.73529053]
[280.28350830 671.46527100]
[266.37078857 677.09405518]
[252.05026245 681.58502197]
[237.41479492 684.90905762]
[222.55931091 687.04473877]
[207.58015442 687.97802734]
[192.57446289 687.70300293]
[177.63957214 686.22137451]
[162.87232971 683.54278564]
[148.36849976 679.68463135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 153]
[39 152]
[41 150]
[42 147]
[44 145]
[45 144]
[46 143]
[47 139]
[48 138]
[49 137]
[50 136]
[70 135]
[71 134]
[72 133]
[74 131]
[75 130]
[76 129]
[77 128]
[84 127]
[85 126]
[87 123]
[88 122]
[89 121]
[90 120]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
