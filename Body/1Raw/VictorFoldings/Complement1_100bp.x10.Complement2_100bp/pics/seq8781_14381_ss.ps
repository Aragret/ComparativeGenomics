%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[16.38819504 707.04626465]
[5.05763674 716.89001465]
[-7.07720184 725.72332764]
[-19.92647743 733.48077393]
[-33.39505768 740.10485840]
[-47.38322449 745.54663086]
[-61.78741074 749.76574707]
[-76.50096893 752.73095703]
[-91.41497040 754.42034912]
[-106.41899109 754.82141113]
[-121.40194702 753.93109131]
[-136.25289917 751.75610352]
[-150.86190796 748.31250000]
[-165.12078857 743.62579346]
[-178.92399597 737.73065186]
[-192.16932678 730.67071533]
[-204.75872803 722.49822998]
[-216.59895325 713.27380371]
[-227.60237122 703.06567383]
[-237.68751526 691.94940186]
[-246.77970886 680.00732422]
[-254.81163025 667.32781982]
[-261.72381592 654.00476074]
[-267.46508789 640.13684082]
[-271.99295044 625.82672119]
[-275.27386475 611.18035889]
[-277.28356934 596.30609131]
[-278.00714111 581.31420898]
[-277.43927002 566.31555176]
[-275.58410645 551.42126465]
[-272.45544434 536.74157715]
[-268.07638550 522.38519287]
[-262.47940063 508.45843506]
[-255.70591736 495.06436157]
[-247.80607605 482.30215454]
[-238.83836365 470.26629639]
[-228.86918640 459.04592896]
[-217.97235107 448.72409058]
[-206.22853088 439.37719727]
[-193.72467041 431.07449341]
[-180.55335999 423.87744141]
[-166.81208801 417.83926392]
[-152.60263062 413.00476074]
[-138.03016663 409.40963745]
[-123.20259857 407.08059692]
[-108.22969818 406.03479004]
[-93.22232056 406.28005981]
[-78.29158020 407.81448364]
[-63.54802704 410.62680054]
[-49.10081482 414.69613647]
[-35.05690384 419.99234009]
[-28.57740593 406.46398926]
[-22.09790993 392.93566895]
[-23.57834816 378.11480713]
[-10.63894558 369.01083374]
[-4.15945005 355.48248291]
[2.32004571 341.95413208]
[8.79954147 328.42578125]
[15.27903748 314.89746094]
[21.75853348 301.36911011]
[27.21389008 287.39630127]
[31.61488914 273.05645752]
[36.01588821 258.71661377]
[40.41688538 244.37675476]
[26.14424133 248.99105835]
[13.55411434 240.83699036]
[11.92747498 225.92544556]
[22.46342278 215.24865723]
[37.39524841 216.67715454]
[45.71552658 229.15626526]
[51.17088318 215.18347168]
[56.62623978 201.21067810]
[62.08160019 187.23786926]
[67.22355652 173.14672852]
[72.04955292 158.94427490]
[76.87555695 144.74182129]
[81.70155334 130.53936768]
[78.47042847 115.99945068]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[104.18446350 62.63891983]
[101.06724548 47.12784195]
[112.34432220 37.39764404]
[116.95832825 23.12491035]
[121.57234192 8.85217762]
[126.18634796 -5.42055607]
[121.01920319 -17.23848152]
[125.15605164 -29.03128624]
[135.86453247 -34.65756226]
[140.69053650 -48.86001587]
[145.51652527 -63.06247330]
[150.23666382 -77.30046082]
[154.85067749 -91.57319641]
[159.46467590 -105.84592438]
[161.91041565 -120.64520264]
[154.37942505 -134.55903625]
[162.30535889 -147.16970825]
[162.52868652 -162.16804504]
[148.69245911 -168.53033447]
[138.64509583 -179.97454834]
[134.12734985 -194.51792908]
[135.92196655 -209.64074707]
[143.71800232 -222.72285461]
[156.16474915 -231.49772644]
[171.10574341 -234.44505310]
[185.95234680 -231.05418396]
[198.13232422 -221.91261292]
[205.53540039 -208.60418701]
[206.87895203 -193.43464661]
[201.93020630 -179.03222656]
[191.54655457 -167.89222717]
[177.52702332 -161.94471741]
[177.30369568 -146.94638062]
[184.85064697 -134.10531616]
[176.90875244 -120.42187500]
[183.93836975 -133.67269897]
[194.37513733 -144.44645691]
[207.39595032 -151.89349365]
[221.97393799 -155.42649841]
[236.95942688 -154.76684570]
[251.17059326 -149.96655273]
[263.48669434 -141.40420532]
[272.93640137 -129.75505066]
[278.77450562 -115.93778992]
[280.54058838 -101.04212189]
[278.09533691 -86.24276733]
[271.63162231 -72.70687866]
[261.65917969 -61.50194168]
[248.96449280 -53.51163101]
[234.54872131 -49.36609268]
[219.54875183 -49.39226151]
[205.14752197 -53.58807373]
[192.48080444 -61.62263107]
[182.54753113 -72.86229706]
[176.13107300 -86.42065430]
[173.73741150 -101.23191833]
[169.12341309 -86.95918274]
[164.50939941 -72.68645477]
[165.44300842 -65.35500336]
[159.71897888 -58.23647308]
[154.89299011 -44.03401947]
[150.06698608 -29.83156395]
[154.40785217 -12.82792091]
[140.45907593 -0.80654675]
[135.84507751 13.46618652]
[131.23106384 27.73892021]
[126.61705780 42.01165390]
[130.06430054 56.50185013]
[118.45719910 67.25292969]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[107.32470703 125.80414581]
[95.90400696 135.36535645]
[91.07801056 149.56782532]
[86.25201416 163.77027893]
[81.42601013 177.97273254]
[82.44450378 183.09228516]
[81.49256897 187.63618469]
[79.11944580 190.95030212]
[76.05439758 192.69323730]
[70.59903717 206.66603088]
[65.14368439 220.63882446]
[59.68832397 234.61161804]
[54.75673294 248.77775574]
[50.35573196 263.11761475]
[45.95473480 277.45745850]
[41.55373764 291.79730225]
[53.56714630 282.81521606]
[68.45011139 280.94509888]
[82.31226349 286.67578125]
[91.53005981 298.50930786]
[93.69400024 313.35238647]
[88.23843384 327.32510376]
[76.58942413 336.77502441]
[61.79201126 339.23193359]
[47.71418762 334.05361938]
[38.03586960 322.59368896]
[35.28688049 307.84860229]
[28.80738258 321.37695312]
[22.32788658 334.90527344]
[15.84839153 348.43362427]
[9.36889553 361.96197510]
[2.88939953 375.49032593]
[3.90638041 391.27880859]
[-8.56956482 399.41516113]
[-15.04906082 412.94351196]
[-21.52855682 426.47183228]
[-8.59902096 434.09472656]
[3.62734485 442.80090332]
[15.06001949 452.52590942]
[25.61435699 463.19769287]
[35.21221542 474.73730469]
[43.78253937 487.05929565]
[51.26186752 500.07238770]
[57.59482956 513.68029785]
[62.73453903 527.78222656]
[66.64293671 542.27380371]
[69.29109192 557.04772949]
[70.65940094 571.99462891]
[70.73772430 587.00378418]
[69.52548218 601.96411133]
[67.03166199 616.76489258]
[63.27471161 631.29644775]
[58.28245544 645.45129395]
[52.09185791 659.12457275]
[44.74874496 672.21502686]
[36.30748749 684.62573242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 190]
[52 189]
[53 188]
[55 186]
[56 185]
[57 184]
[58 183]
[59 182]
[60 181]
[61 170]
[62 169]
[63 168]
[64 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 159]
[75 158]
[76 157]
[77 156]
[79 154]
[80 152]
[81 151]
[82 150]
[84 148]
[85 147]
[86 146]
[87 145]
[90 143]
[91 142]
[92 141]
[93 139]
[94 138]
[95 137]
[96 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
