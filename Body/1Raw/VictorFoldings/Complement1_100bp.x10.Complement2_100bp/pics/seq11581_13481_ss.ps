%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[140.88179016 645.71221924]
[125.98837280 647.63653564]
[110.97227478 647.81872559]
[96.03655243 646.25640869]
[81.38320160 642.97070312]
[67.21039581 638.00604248]
[53.70980453 631.42950439]
[41.06400299 623.33013916]
[29.44401741 613.81738281]
[19.00698853 603.01989746]
[9.89406776 591.08380127]
[2.22849751 578.17041016]
[-3.88605380 564.45440674]
[-8.36689472 550.12127686]
[-11.15342617 535.36486816]
[-12.20796394 520.38470459]
[-11.51624680 505.38345337]
[-9.08762932 490.56393433]
[-4.95495510 476.12655640]
[0.82588500 462.26660156]
[8.17671204 449.17150879]
[16.99811554 437.01834106]
[27.17079544 425.97146606]
[38.55717850 416.18029785]
[51.00327301 407.77725220]
[64.34076691 400.87597656]
[78.38927460 395.56976318]
[92.95881653 391.93041992]
[107.85235596 390.00711060]
[122.86846924 389.82589722]
[124.42899323 374.90728760]
[125.98951721 359.98867798]
[127.55004120 345.07009888]
[129.11056519 330.15148926]
[128.44078064 315.16644287]
[125.55550385 300.44656372]
[122.67023468 285.72665405]
[119.78495789 271.00677490]
[116.89968872 256.28686523]
[107.15285492 253.06660461]
[99.56287384 246.03611755]
[95.54484558 236.41487122]
[95.88564301 225.91310120]
[100.59075928 216.42788696]
[108.87125397 209.70054626]
[106.64613342 194.86650085]
[104.42102051 180.03245544]
[102.19589996 165.19841003]
[99.97078705 150.36436462]
[97.74566650 135.53031921]
[88.20599365 124.09162903]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[78.30516815 90.16774750]
[63.40111160 88.47390747]
[55.30388641 75.84715271]
[59.98246765 61.59545898]
[73.98797607 56.22463989]
[86.99513245 63.69250870]
[85.65689850 48.75232315]
[84.31866455 33.81213760]
[82.98043060 18.87195206]
[81.64219666 3.93176794]
[80.30396271 -11.00841713]
[78.96572876 -25.94860268]
[77.62749481 -40.88878632]
[68.68985748 -53.94364166]
[75.26083374 -67.31044769]
[73.92259979 -82.25063324]
[72.58436584 -97.19081879]
[71.24613190 -112.13100433]
[69.90789795 -127.07118988]
[63.67741394 -113.42636871]
[52.98959351 -102.90161133]
[39.25060654 -96.88162994]
[24.26804924 -96.15844727]
[10.01313686 -100.82722473]
[-1.63865268 -110.27369690]
[-9.15432644 -123.25501251]
[-11.54506683 -138.06326294]
[-8.49633312 -152.75016785]
[-0.40923616 -165.38342285]
[11.65222549 -174.30088806]
[26.10116005 -178.32931519]
[41.03656387 -176.93870544]
[54.49342346 -170.31202698]
[64.70125580 -159.32112122]
[70.31752777 -145.40969849]
[72.32154083 -160.27522278]
[74.32556152 -175.14074707]
[76.32957458 -190.00628662]
[78.33358765 -204.87181091]
[80.33760071 -219.73733521]
[73.15242767 -230.44883728]
[75.12760925 -242.78910828]
[84.66572571 -250.22892761]
[86.89084625 -265.06295776]
[89.11595917 -279.89700317]
[75.27788544 -285.91119385]
[63.46852112 -295.30273438]
[54.49304199 -307.43133545]
[48.96341705 -321.47006226]
[47.25665665 -336.46170044]
[49.48913956 -351.38412476]
[55.50864792 -365.21987915]
[64.90476227 -377.02560425]
[77.03683472 -385.99639893]
[91.07769012 -391.52059937]
[106.06999207 -393.22158813]
[120.99153900 -390.98333740]
[134.82496643 -384.95849609]
[146.62707520 -375.55783081]
[155.59318542 -363.42227173]
[161.11196899 -349.37930298]
[162.80714417 -334.38632202]
[160.56314087 -319.46563721]
[154.53295898 -305.63455200]
[145.12773132 -293.83609009]
[132.98872375 -284.87466431]
[118.94361877 -279.36129761]
[103.95000458 -277.67190552]
[101.72488403 -262.83786011]
[99.49977112 -248.00381470]
[106.79341125 -232.04229736]
[95.20312500 -217.73332214]
[93.19911194 -202.86779785]
[91.19509888 -188.00227356]
[89.19108582 -173.13673401]
[87.18707275 -158.27120972]
[85.18305969 -143.40568542]
[84.84808350 -128.40942383]
[86.18631744 -113.46923828]
[87.52455139 -98.52905273]
[88.86278534 -83.58886719]
[90.20101929 -68.64868164]
[99.04293823 -56.66245270]
[92.56768036 -42.22702026]
[93.90591431 -27.28683662]
[95.24414825 -12.34665108]
[96.58238220 2.59353375]
[97.92061615 17.53371811]
[99.25885010 32.47390366]
[100.59708405 47.41408920]
[101.93531799 62.35427475]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[118.34342957 119.57099152]
[112.57971191 133.30520630]
[114.80483246 148.13925171]
[117.02994537 162.97329712]
[119.25506592 177.80734253]
[121.48017883 192.64138794]
[123.70529938 207.47543335]
[140.47291565 218.54460144]
[143.64509583 238.07511902]
[131.61958313 253.40159607]
[134.50485229 268.12149048]
[137.39012146 282.84140015]
[140.27539062 297.56127930]
[143.16067505 312.28115845]
[147.29598999 297.86245728]
[155.27731323 285.16210938]
[166.47517395 275.18176270]
[180.00648499 268.70843506]
[194.80409241 266.25271606]
[209.70101929 268.00820923]
[223.52239990 273.83654785]
[235.17825317 283.27798462]
[243.74932861 295.58801270]
[248.55969238 309.79577637]
[249.22996521 324.78079224]
[245.70729065 339.36129761]
[238.26948547 352.38735962]
[227.50311279 362.83175659]
[214.25727844 369.87078857]
[199.57658386 372.94927979]
[184.61880493 371.82449341]
[170.56359863 366.58511353]
[158.51939392 357.64434814]
[149.43606567 345.70730591]
[144.02917480 331.71200562]
[142.46864319 346.63061523]
[140.90812683 361.54922485]
[139.34759521 376.46780396]
[137.78707886 391.38641357]
[152.44064331 394.67117310]
[166.61378479 399.63488770]
[180.11480713 406.21051025]
[192.76115417 414.30905151]
[204.38177490 423.82104492]
[214.81953430 434.61779785]
[223.93324280 446.55331421]
[231.59967041 459.46618652]
[237.71514893 473.18179321]
[242.19694519 487.51461792]
[244.98445129 502.27084351]
[246.03999329 517.25091553]
[245.34927368 532.25219727]
[242.92164612 547.07189941]
[238.78993225 561.50952148]
[233.01002502 575.36987305]
[225.66006470 588.46551514]
[216.83947754 600.61926270]
[206.66754150 611.66680908]
[195.28181458 621.45867920]
[182.83627319 629.86260986]
[169.49923706 636.76477051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[45 156]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[52 149]
[53 147]
[54 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
