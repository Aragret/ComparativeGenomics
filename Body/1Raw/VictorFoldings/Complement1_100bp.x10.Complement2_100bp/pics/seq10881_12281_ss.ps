%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[115.55072784 565.39843750]
[105.62191010 554.14361572]
[96.64350128 542.11694336]
[88.67526245 529.39843750]
[81.77022552 516.07281494]
[75.97433472 502.22866821]
[71.32615662 487.95816040]
[67.85664368 473.35626221]
[65.58886719 458.52014160]
[64.53793335 443.54855347]
[64.71082306 428.54113770]
[66.10638428 413.59774780]
[68.71534729 398.81781006]
[72.52033234 384.29974365]
[77.49602509 370.14010620]
[83.60931396 356.43313599]
[90.81951141 343.27008057]
[99.07863617 330.73855591]
[108.33172607 318.92190552]
[118.51719666 307.89880371]
[129.56727600 297.74258423]
[141.40840149 288.52084351]
[153.96180725 280.29498291]
[167.14392090 273.11968994]
[161.07008362 259.40441895]
[154.99624634 245.68916321]
[148.92240906 231.97389221]
[142.84858704 218.25862122]
[136.77474976 204.54335022]
[130.70091248 190.82809448]
[119.53318024 186.17961121]
[114.36072540 174.80290222]
[118.45292664 162.57112122]
[112.58396149 148.76693726]
[106.71500397 134.96276855]
[94.61480713 126.27745819]
[96.33576965 110.55012512]
[90.36420441 96.79002380]
[84.29036713 83.07476044]
[78.21653748 69.35948944]
[72.14270020 55.64422607]
[57.67320633 49.87608719]
[51.70885468 35.88033295]
[57.29706192 22.12142563]
[51.22322845 8.40615845]
[45.14939499 -5.30910826]
[39.07556152 -19.02437401]
[32.49553299 -32.50410843]
[25.41842842 -45.72963715]
[18.34132195 -58.95516586]
[3.48288798 -63.63113403]
[-3.50590062 -77.14451599]
[1.04348946 -91.28094482]
[-6.03361607 -104.50646973]
[-13.11072159 -117.73200226]
[-20.18782616 -130.95753479]
[-34.02803040 -125.14519501]
[-48.35169983 -120.65443420]
[-63.03295898 -117.52471161]
[-77.94277954 -115.78353119]
[-92.95013428 -115.44618988]
[-107.92313385 -116.51566315]
[-122.73019409 -118.98254395]
[-137.24118042 -122.82515717]
[-151.32856750 -128.00973511]
[-164.86857605 -134.49069214]
[-177.74217224 -142.21110535]
[-189.83625793 -151.10311890]
[-201.04452515 -161.08856201]
[-211.26847839 -172.07971191]
[-220.41825867 -183.97994995]
[-228.41348267 -196.68472290]
[-235.18385315 -210.08235168]
[-240.66989136 -224.05509949]
[-244.82337952 -238.48019409]
[-247.60781860 -253.23081970]
[-248.99873352 -268.17739868]
[-248.98390198 -283.18853760]
[-247.56344604 -298.13232422]
[-244.74987793 -312.87744141]
[-240.56788635 -327.29428101]
[-235.05424500 -341.25616455]
[-228.25740051 -354.64038086]
[-220.23710632 -367.32931519]
[-211.06381226 -379.21145630]
[-200.81816101 -390.18237305]
[-189.59017944 -400.14566040]
[-177.47856140 -409.01376343]
[-164.58972168 -416.70870972]
[-151.03694153 -423.16290283]
[-136.93933105 -428.31964111]
[-122.42078400 -432.13357544]
[-107.60887909 -434.57119751]
[-92.63379669 -435.61105347]
[-77.62713623 -435.24407959]
[-62.72078323 -433.47341919]
[-48.04574203 -430.31469727]
[-33.73097229 -425.79565430]
[-19.90228081 -419.95596313]
[-6.68119621 -412.84701538]
[5.81609249 -404.53121948]
[17.47975540 -395.08169556]
[28.20729065 -384.58148193]
[37.90442276 -373.12286377]
[46.48592758 -360.80651855]
[53.87638855 -347.74072266]
[60.01086426 -334.04025269]
[64.83543396 -319.82553101]
[68.30770874 -305.22149658]
[70.39716339 -290.35647583]
[71.08543396 -275.36114502]
[70.36648560 -260.36721802]
[68.24662781 -245.50650024]
[64.74448395 -230.90960693]
[59.89084244 -216.70478821]
[53.72835159 -203.01690674]
[46.31117630 -189.96623230]
[37.70449066 -177.66748047]
[27.98394012 -166.22871399]
[17.23494530 -155.75047302]
[5.55197573 -146.32482910]
[-6.96229935 -138.03463745]
[0.11480618 -124.80910492]
[7.19191170 -111.58358002]
[14.26901722 -98.35804749]
[28.55431747 -94.30023956]
[35.91991043 -80.98849487]
[31.56684875 -66.03227234]
[38.64395523 -52.80674362]
[45.72106171 -39.58121490]
[52.50078964 -52.96162033]
[67.15736389 -56.15297318]
[78.88651276 -46.80272293]
[79.04193115 -31.80352783]
[67.50906372 -22.21223640]
[52.79082870 -25.09820938]
[58.86466217 -11.38294220]
[64.93849182 2.33232474]
[71.01232910 16.04759216]
[84.95625305 21.15665245]
[91.31136322 34.97935867]
[85.85797119 49.57039261]
[91.93180084 63.28565598]
[98.00563812 77.00092316]
[104.07946777 90.71619415]
[109.96343231 96.22541809]
[110.13994598 104.68116760]
[122.65992737 114.35384369]
[120.51918030 129.09379578]
[126.38813782 142.89797974]
[132.25709534 156.70216370]
[147.22273254 167.43115234]
[144.41618347 184.75425720]
[150.49002075 198.46952820]
[156.56384277 212.18478394]
[162.63768005 225.90005493]
[168.71151733 239.61532593]
[174.78535461 253.33059692]
[180.85919189 267.04586792]
[195.03173828 262.10705566]
[209.55967712 258.33990479]
[224.34635925 255.76947021]
[239.29333496 254.41282654]
[254.30116272 254.27903748]
[269.26995850 255.36897278]
[284.10009766 257.67538452]
[298.69290161 261.18292236]
[312.95126343 265.86825562]
[326.78027344 271.70019531]
[340.08789062 278.63992310]
[352.78558350 286.64126587]
[364.78881836 295.65097046]
[376.01776123 305.60910034]
[386.39764404 316.44934082]
[395.85940552 328.09957886]
[404.34005737 340.48226929]
[411.78320312 353.51501465]
[418.13925171 367.11108398]
[423.36596680 381.17999268]
[427.42852783 395.62814331]
[430.29989624 410.35931396]
[431.96096802 425.27554321]
[432.40069580 440.27752686]
[431.61614990 455.26544189]
[429.61257935 470.13952637]
[426.40325928 484.80078125]
[422.00958252 499.15170288]
[416.46081543 513.09674072]
[409.79382324 526.54309082]
[402.05300903 539.40124512]
[393.28988647 551.58569336]
[383.56277466 563.01531982]
[372.93640137 573.61401367]
[361.48150635 583.31134033]
[349.27426147 592.04266357]
[336.39596558 599.74993896]
[322.93231201 606.38189697]
[308.97286987 611.89434814]
[294.61056519 616.25061035]
[279.94097900 619.42169189]
[265.06173706 621.38653564]
[250.07182312 622.13201904]
[235.07104492 621.65319824]
[220.15919495 619.95330811]
[205.43553162 617.04357910]
[190.99804688 612.94335938]
[176.94279480 607.68005371]
[163.36332703 601.28857422]
[150.35000610 593.81152344]
[137.98944092 585.29864502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[33 151]
[34 150]
[35 149]
[37 147]
[38 145]
[39 144]
[40 143]
[41 142]
[44 139]
[45 138]
[46 137]
[47 136]
[48 130]
[49 129]
[50 128]
[53 125]
[54 124]
[55 123]
[56 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
