%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[101.12404633 492.13790894]
[105.15088654 477.63003540]
[112.10643005 464.27661133]
[121.68662262 452.66137695]
[133.47265625 443.29211426]
[146.94929504 436.57836914]
[143.19299316 422.05633545]
[139.43669128 407.53427124]
[134.71833801 401.84576416]
[135.73428345 392.76800537]
[125.21213531 382.22601318]
[129.47438049 366.98974609]
[125.93471527 352.41336060]
[115.41256714 341.87136841]
[119.67481232 326.63510132]
[112.74305725 339.93740845]
[99.36808014 346.72781372]
[84.53841400 344.47372437]
[73.78515625 334.01583862]
[71.11901093 319.25469971]
[77.53437805 305.69580078]
[90.63848877 298.39636230]
[105.54383850 300.07879639]
[116.69168091 310.11669922]
[114.90921021 295.22296143]
[105.71434021 283.50531006]
[111.75692749 268.88348389]
[109.97446442 253.98976135]
[106.05839539 247.72189331]
[108.27803040 238.86125183]
[106.71751404 223.94264221]
[105.15699005 209.02404785]
[103.59646606 194.10543823]
[101.92492676 179.19886780]
[100.14245605 164.30514526]
[98.35999298 149.41142273]
[86.52873993 140.43606567]
[84.50889587 125.35711670]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[72.88991547 62.31698227]
[70.30062866 42.70068359]
[82.77713776 27.73903275]
[80.33141327 12.93976212]
[70.44755554 0.58581799]
[76.00614929 -13.23269367]
[73.56042480 -28.03196526]
[71.00459290 -42.81261826]
[68.33879852 -57.57383347]
[65.67300415 -72.33505249]
[51.97037888 -87.12020111]
[59.29253387 -105.01637268]
[56.18842316 -119.69168091]
[53.08431244 -134.36697388]
[49.98020172 -149.04228210]
[46.87609100 -163.71759033]
[43.11979294 -178.23963928]
[38.71879196 -192.57949829]
[34.31779480 -206.91934204]
[29.91679764 -221.25918579]
[25.34479904 -226.03500366]
[24.06336212 -231.57168579]
[25.60511017 -236.09187317]
[21.63301277 -250.55639648]
[8.17925549 -258.40713501]
[4.35703754 -273.13281250]
[11.92443180 -285.91052246]
[7.95233536 -300.37506104]
[3.98023915 -314.83956909]
[-2.55238438 -301.33679199]
[-15.71925831 -294.15115356]
[-30.60946465 -295.96270752]
[-41.66932678 -306.09579468]
[-44.77378464 -320.77102661]
[-38.76495743 -334.51492310]
[-25.88398552 -342.20129395]
[-10.93515491 -340.96337891]
[0.50660914 -331.26184082]
[-1.71850801 -346.09588623]
[-3.94362521 -360.92993164]
[-13.64245510 -373.42968750]
[-7.87873650 -387.16387939]
[-22.91293335 -387.70016479]
[-37.59255219 -390.99008179]
[-51.41761017 -396.92153931]
[-63.91722870 -405.29257202]
[-74.66567993 -415.81805420]
[-83.29687500 -428.13946533]
[-89.51683807 -441.83715820]
[-93.11371613 -456.44458008]
[-93.96500397 -471.46423340]
[-92.04170227 -486.38455200]
[-87.40933228 -500.69732666]
[-80.22565460 -513.91510010]
[-70.73534393 -525.58764648]
[-59.26165009 -535.31744385]
[-46.19535065 -542.77307129]
[-31.98148346 -547.70062256]
[-17.10416603 -549.93225098]
[-2.07011557 -549.39190674]
[12.60861492 -546.09802246]
[26.43207359 -540.16284180]
[38.92943573 -531.78845215]
[49.67505264 -521.26007080]
[58.30292511 -508.93634033]
[64.51919556 -495.23696899]
[68.11213684 -480.62857056]
[68.95937347 -465.60870361]
[67.03205109 -450.68890381]
[62.39582062 -436.37738037]
[55.20858002 -423.16152954]
[45.71512985 -411.49151611]
[34.23881149 -401.76483154]
[21.17050171 -394.31271362]
[6.95530701 -389.38900757]
[16.49498177 -377.95031738]
[10.89041901 -363.15505981]
[13.11553574 -348.32101440]
[15.34065247 -333.48696899]
[18.44476318 -318.81167603]
[22.41685867 -304.34713745]
[26.38895607 -289.88262939]
[39.42072678 -282.76162720]
[43.65504837 -268.14913940]
[36.09753799 -254.52848816]
[40.06963348 -240.06396484]
[44.25664520 -225.66018677]
[48.65764236 -211.32034302]
[53.05863953 -196.98048401]
[57.45964050 -182.64064026]
[65.42599487 -195.35037231]
[80.01474762 -198.83869934]
[92.86878967 -191.10734558]
[96.62474060 -176.58520508]
[89.13102722 -163.59118652]
[74.68038177 -159.56887817]
[61.55139542 -166.82170105]
[64.65550232 -152.14639282]
[67.75961304 -137.47108459]
[70.86372375 -122.79579163]
[73.96783447 -108.12048340]
[82.99870300 -103.33964539]
[88.01257324 -94.18489838]
[87.14216614 -83.56309509]
[80.43421936 -75.00084686]
[83.10001373 -60.23963165]
[85.76580811 -45.47841263]
[90.04800415 -39.45474243]
[88.35969543 -30.47769165]
[90.80542755 -15.67842102]
[100.51434326 -4.38301992]
[95.13068390 10.49403477]
[97.57640839 25.29330635]
[107.22304535 28.80235291]
[114.60034180 36.05569458]
[118.33012390 45.79230881]
[117.67679596 56.27928925]
[112.69136047 65.62019348]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[121.03733063 120.98542786]
[122.63284302 136.11517334]
[113.25370789 147.62896729]
[115.03617859 162.52267456]
[116.81864166 177.41639709]
[120.94564056 185.56536865]
[118.51506805 192.54490662]
[120.07559204 207.46351624]
[121.63611603 222.38212585]
[123.19664001 237.30073547]
[124.86817932 252.20730591]
[126.65064240 267.10101318]
[135.97300720 279.88397217]
[129.80293274 293.44049072]
[131.58538818 308.33422852]
[134.25119019 323.09542847]
[145.02651978 334.68002319]
[140.51109314 348.87371826]
[144.05076599 363.45007324]
[154.82608032 375.03466797]
[150.31065369 389.22833252]
[153.95874023 403.77795410]
[157.71504211 418.30001831]
[161.47134399 432.82208252]
[176.51309204 432.15917969]
[191.36390686 434.63851929]
[205.37457275 440.15170288]
[217.93258667 448.45773315]
[228.48898315 459.19348145]
[236.58227539 471.88961792]
[241.85865784 485.99114990]
[244.08747864 500.88162231]
[243.17129517 515.91009521]
[239.15016174 530.41955566]
[232.19987488 543.77569580]
[222.62425232 555.39471436]
[210.84190369 564.76861572]
[197.36791992 571.48760986]
[182.79130554 575.25805664]
[167.74928284 575.91497803]
[152.89945984 573.42980957]
[138.89097595 567.91113281]
[126.33621979 559.60015869]
[115.78404999 548.86029053]
[107.69574738 536.16094971]
[102.42491150 522.05731201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[8 186]
[10 185]
[12 183]
[13 182]
[15 180]
[24 179]
[25 178]
[27 176]
[28 175]
[30 174]
[31 173]
[32 172]
[33 171]
[34 169]
[35 168]
[36 167]
[39 164]
[41 162]
[42 161]
[45 155]
[46 154]
[48 152]
[49 151]
[50 149]
[51 148]
[52 147]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 132]
[60 131]
[61 130]
[62 129]
[65 128]
[66 127]
[69 124]
[70 123]
[71 122]
[80 121]
[81 120]
[82 119]
[84 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
