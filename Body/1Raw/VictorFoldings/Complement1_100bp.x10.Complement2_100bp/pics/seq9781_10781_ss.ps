%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[99.50140381 347.37979126]
[96.43225861 332.68875122]
[94.55521393 317.79837036]
[93.88243866 302.80526733]
[94.41829681 287.80661011]
[96.15931702 272.89974976]
[99.09420013 258.18130493]
[103.20391846 243.74673462]
[108.46182251 229.68968201]
[114.83380890 216.10128784]
[122.27854919 203.06971741]
[130.74775696 190.67944336]
[140.18650818 179.01084900]
[150.53359985 168.13958740]
[140.53543091 156.95761108]
[130.53726196 145.77565002]
[120.53908539 134.59367371]
[110.54091644 123.41169739]
[100.54274750 112.22972107]
[104.16213989 126.78650665]
[103.16880798 141.75358582]
[97.65742493 155.70437622]
[88.15331268 167.30918884]
[75.56233215 175.46192932]
[61.08457947 179.38552856]
[46.09997559 178.70600891]
[32.03676605 173.48814392]
[20.23536301 164.22927856]
[11.82059860 151.81187439]
[7.59451771 137.41950989]
[7.95992136 122.42395782]
[12.88198280 108.25450897]
[21.89156151 96.26169586]
[34.12992477 87.58860779]
[48.43058395 83.06189728]
[63.43049622 83.11302948]
[77.69996643 87.73712921]
[89.87972260 96.49424744]
[83.19953156 83.06387329]
[76.51933289 69.63349152]
[59.83605576 64.37159729]
[52.26908875 48.97497940]
[58.06256485 33.18655396]
[51.18315125 19.85712433]
[44.30374146 6.52769566]
[37.42432785 -6.80173397]
[30.54491425 -20.13116264]
[23.66550255 -33.46059036]
[16.78608894 -46.79001999]
[9.90667725 -60.11944962]
[-3.92848992 -54.30376053]
[-18.17730331 -49.59150314]
[-32.75191498 -46.01172638]
[-47.56246567 -43.58650208]
[-62.51763916 -42.33078766]
[-77.52523804 -42.25231934]
[-92.49272156 -43.35158157]
[-107.32782745 -45.62179947]
[-121.93907166 -49.04897690]
[-136.23638916 -53.61198044]
[-150.13160706 -59.28267670]
[-163.53907776 -66.02610779]
[-176.37612915 -73.80069733]
[-188.56361389 -82.55850983]
[-200.02639771 -92.24554443]
[-210.69380188 -102.80208588]
[-220.50006104 -114.16304779]
[-229.38470459 -126.25837708]
[-237.29298401 -139.01350403]
[-244.17610168 -152.34980774]
[-249.99165344 -166.18502808]
[-254.70376587 -180.43388367]
[-258.28338623 -195.00854492]
[-260.70846558 -209.81910706]
[-261.96401978 -224.77430725]
[-262.04235840 -239.78189087]
[-260.94293213 -254.74937439]
[-258.67254639 -269.58444214]
[-255.24523926 -284.19567871]
[-250.68208313 -298.49291992]
[-245.01124573 -312.38809204]
[-238.26766968 -325.79550171]
[-230.49295044 -338.63247681]
[-221.73501587 -350.81985474]
[-212.04786682 -362.28256226]
[-201.49121094 -372.94985962]
[-190.13015747 -382.75598145]
[-178.03472900 -391.64050293]
[-165.27952576 -399.54864502]
[-151.94316101 -406.43164062]
[-138.10787964 -412.24703979]
[-123.85896301 -416.95901489]
[-109.28427887 -420.53848267]
[-94.47367859 -422.96340942]
[-79.51847839 -424.21884155]
[-64.51087952 -424.29699707]
[-49.54341507 -423.19741821]
[-34.70836258 -420.92691040]
[-20.09718323 -417.49942017]
[-5.79996586 -412.93612671]
[8.09514332 -407.26513672]
[21.50247383 -400.52145386]
[34.33936691 -392.74658203]
[46.52667618 -383.98852539]
[57.98925781 -374.30126953]
[68.65644836 -363.74450684]
[78.46247101 -352.38333130]
[87.34687805 -340.28784180]
[95.25488281 -327.53253174]
[102.13774109 -314.19610596]
[107.95300293 -300.36074829]
[112.66482544 -286.11178589]
[116.24415588 -271.53707886]
[118.66893005 -256.72644043]
[119.92418671 -241.77124023]
[120.00219727 -226.76364136]
[118.90247345 -211.79618835]
[116.63179779 -196.96115112]
[113.20417786 -182.35000610]
[108.64073181 -168.05284119]
[102.96961212 -154.15779114]
[96.22576904 -140.75053406]
[88.45079041 -127.91371918]
[79.69260406 -115.72650146]
[70.00521088 -104.26401520]
[59.44834518 -93.59693146]
[48.08708572 -83.79102325]
[35.99148178 -74.90673828]
[23.23610687 -66.99886322]
[30.11551857 -53.66943359]
[36.99493027 -40.34000397]
[43.87434387 -27.01057625]
[50.75375748 -13.68114662]
[57.63317108 -0.35171708]
[64.51258087 12.97771168]
[71.39199066 26.30714226]
[84.09458923 28.46899223]
[93.37117004 37.69001007]
[95.67703247 50.76263046]
[89.94970703 62.95330048]
[96.62990570 76.38367462]
[103.31009674 89.81404877]
[111.72471619 102.23154449]
[121.72289276 113.41352081]
[131.72106934 124.59549713]
[141.71923828 135.77746582]
[151.71740723 146.95944214]
[161.71557617 158.14141846]
[173.67214966 149.07022095]
[186.31990051 140.99055481]
[199.57676697 133.95481873]
[213.35679626 128.00863647]
[227.57061768 123.19058228]
[242.12603760 119.53189087]
[256.92868042 117.05629730]
[271.88250732 115.77985382]
[286.89053345 115.71083832]
[301.85546875 116.84970856]
[316.68023682 119.18907166]
[331.26870728 122.71375275]
[345.52621460 127.40089417]
[359.36035156 133.22009277]
[372.68136597 140.13362122]
[385.40289307 148.09663391]
[397.44238281 157.05749512]
[408.72177124 166.95806885]
[419.16793823 177.73417664]
[428.71307373 189.31588745]
[437.29534912 201.62812805]
[444.85903931 214.59103394]
[451.35510254 228.12052917]
[456.74145508 242.12887573]
[460.98309326 256.52520752]
[464.05258179 271.21618652]
[465.92996216 286.10650635]
[466.60305786 301.09960938]
[466.06753540 316.09826660]
[464.32684326 331.00518799]
[461.39227295 345.72369385]
[457.28286743 360.15835571]
[452.02526855 374.21551514]
[445.65359497 387.80404663]
[438.20913696 400.83581543]
[429.74020386 413.22625732]
[420.30169678 424.89505005]
[409.95486450 435.76654053]
[398.76675415 445.77017212]
[386.80999756 454.84112549]
[374.16207886 462.92050171]
[360.90502930 469.95596313]
[347.12487793 475.90182495]
[332.91094971 480.71957397]
[318.35543823 484.37796021]
[303.55276489 486.85321045]
[288.59890747 488.12933350]
[273.59085083 488.19799805]
[258.62594604 487.05880737]
[243.80123901 484.71911621]
[229.21286011 481.19412231]
[214.95542908 476.50665283]
[201.12142944 470.68716431]
[187.80056763 463.77331543]
[175.07923889 455.81002808]
[163.03994751 446.84890747]
[151.76075745 436.94808960]
[141.31484985 426.17175293]
[131.76994324 414.58981323]
[123.18796539 402.27740479]
[115.62455750 389.31433105]
[109.12877655 375.78469849]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 148]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[38 142]
[39 141]
[40 140]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
