%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[193.73548889 340.91967773]
[205.74180603 331.86666870]
[198.86239624 318.53726196]
[191.98297119 305.20782471]
[179.27030945 297.44653320]
[179.81675720 281.63476562]
[172.93734741 268.30535889]
[166.05793762 254.97592163]
[159.17852783 241.64648438]
[152.29911804 228.31706238]
[145.41969299 214.98762512]
[142.79328918 214.00779724]
[140.39674377 211.92855835]
[138.65075684 208.83227539]
[137.93849182 204.95191956]
[138.55436707 200.65370178]
[132.48052979 186.93844604]
[126.40670013 173.22317505]
[114.17853546 164.71897888]
[115.66514587 148.96777344]
[109.28653717 135.39157104]
[102.60634613 121.96118927]
[95.92614746 108.53081512]
[91.46039581 105.77926636]
[88.85417938 100.72150421]
[89.25371552 94.59963226]
[82.97635651 80.97631836]
[76.69898987 67.35300446]
[70.42163086 53.72968674]
[55.61840057 56.54924393]
[40.57963562 55.74432373]
[26.17929077 51.36605453]
[13.25317192 43.67309189]
[2.55043578 33.11634827]
[-5.30983353 20.31256294]
[-9.87442970 6.00827169]
[-10.88215637 -8.96371746]
[-8.27876759 -23.73281479]
[-2.21987009 -37.44126511]
[6.93836880 -49.29397202]
[18.66016006 -58.60461426]
[12.38279819 -72.22792816]
[6.10543776 -85.85124207]
[-9.17300701 -96.12989807]
[-6.88346624 -113.52888489]
[-13.36296177 -127.05723572]
[-19.84245872 -140.58557129]
[-26.32195473 -154.11392212]
[-38.20561600 -159.12803650]
[-43.32389450 -170.52922058]
[-39.43053055 -181.98210144]
[-45.70788956 -195.60540771]
[-58.51031494 -204.90103149]
[-56.80937958 -219.69819641]
[-63.08674240 -233.32151794]
[-69.28365326 -219.66140747]
[-83.27557373 -214.25529480]
[-97.04729462 -220.20001221]
[-102.70974731 -234.09017944]
[-97.01922607 -247.96885681]
[-83.23551178 -253.88572693]
[-69.25524139 -248.45198059]
[-74.29216003 -262.58102417]
[-79.32907104 -276.71005249]
[-84.36598969 -290.83908081]
[-89.40290833 -304.96810913]
[-94.43981934 -319.09713745]
[-99.47673798 -333.22616577]
[-104.51365662 -347.35519409]
[-109.55056763 -361.48422241]
[-124.22788239 -358.28973389]
[-139.19320679 -356.99841309]
[-154.20079041 -357.63146973]
[-169.00419617 -360.17852783]
[-183.36033630 -364.59771729]
[-197.03349304 -370.81652832]
[-209.79910278 -378.73278809]
[-221.44757080 -388.21655273]
[-231.78761292 -399.11203003]
[-240.64942932 -411.24038696]
[-247.88751221 -424.40237427]
[-253.38298035 -438.38195801]
[-257.04562378 -452.94949341]
[-258.81530762 -467.86581421]
[-258.66290283 -482.88595581]
[-256.59100342 -497.76330566]
[-252.63356018 -512.25354004]
[-246.85560608 -526.11877441]
[-239.35198975 -539.13122559]
[-230.24594116 -551.07727051]
[-219.68698120 -561.76074219]
[-207.84851074 -571.00622559]
[-194.92491150 -578.66186523]
[-181.12841797 -584.60198975]
[-166.68557739 -588.72900391]
[-151.83354187 -590.97521973]
[-136.81619263 -591.30371094]
[-121.88015747 -589.70904541]
[-107.27066803 -586.21740723]
[-93.22764587 -580.88623047]
[-79.98168182 -573.80291748]
[-67.75028229 -565.08392334]
[-56.73430634 -554.87231445]
[-47.11464310 -543.33587646]
[-39.04925537 -530.66394043]
[-32.67058563 -517.06463623]
[-28.08337402 -502.76126099]
[-25.36294937 -487.98873901]
[-24.55398560 -472.98962402]
[-25.66976166 -458.01019287]
[-28.69195938 -443.29641724]
[-33.57094955 -429.08996582]
[-40.22661591 -415.62405396]
[-48.54966736 -403.11984253]
[-58.40343094 -391.78268433]
[-69.62609863 -381.79867554]
[-82.03337860 -373.33181763]
[-95.42153931 -366.52114868]
[-90.38462830 -352.39212036]
[-85.34770966 -338.26306152]
[-80.31079102 -324.13403320]
[-75.27387238 -310.00500488]
[-70.23696136 -295.87597656]
[-65.20004272 -281.74694824]
[-60.16312790 -267.61791992]
[-55.12621307 -253.48889160]
[-49.46342468 -239.59887695]
[-43.18606567 -225.97555542]
[-30.83263969 -217.65437317]
[-32.08457565 -201.88276672]
[-25.80721474 -188.25946045]
[-10.95277119 -178.91534424]
[-12.79360867 -160.59341431]
[-6.31411266 -147.06507874]
[0.16538337 -133.53672791]
[6.64487934 -120.00838470]
[17.94606209 -115.69447327]
[23.45495415 -104.47681427]
[19.72875404 -92.12860870]
[26.00611496 -78.50528717]
[32.28347397 -64.88197327]
[46.97710037 -67.74304962]
[61.93749619 -67.00373840]
[76.29482269 -62.70269012]
[89.21326447 -55.08575439]
[99.93968201 -44.59194946]
[107.84753418 -31.82816315]
[112.47344971 -17.53405190]
[113.54441071 -2.53917074]
[110.99382019 12.28515816]
[104.96567535 26.07648087]
[95.80639648 38.03139114]
[84.04495239 47.45232773]
[90.32231140 61.07564163]
[96.59967041 74.69895935]
[102.87702942 88.32227325]
[109.35652924 101.85061646]
[116.03672028 115.28099823]
[122.71691895 128.71136475]
[127.06792450 131.59507751]
[129.62228394 135.47175598]
[130.30262756 139.49072266]
[129.38041687 142.89393616]
[142.04301453 152.37913513]
[140.12196350 167.14933777]
[146.19580078 180.86460876]
[152.26963806 194.57986450]
[158.74913025 208.10821533]
[165.62854004 221.43765259]
[172.50794983 234.76707458]
[179.38735962 248.09651184]
[186.26678467 261.42593384]
[193.14619446 274.75537109]
[206.35092163 283.47006226]
[205.31240845 298.32839966]
[212.19181824 311.65783691]
[219.07122803 324.98727417]
[233.40582275 320.44552612]
[248.30181885 318.39184570]
[263.33059692 318.88531494]
[278.05978394 321.91171265]
[292.06558228 327.38397217]
[304.94500732 335.14468384]
[316.32748413 344.97052002]
[325.88555908 356.57876587]
[333.34417725 369.63543701]
[338.48876953 383.76489258]
[341.17129517 398.56054688]
[341.31460571 413.59677124]
[338.91455078 428.44088745]
[334.04016113 442.66580200]
[326.83175659 455.86227417]
[317.49667358 467.65057373]
[306.30349731 477.69155884]
[293.57434082 485.69631958]
[279.67538452 491.43450928]
[265.00656128 494.74108887]
[249.98989868 495.52090454]
[235.05746460 493.75146484]
[220.63891602 489.48376465]
[207.14909363 482.84054565]
[194.97610474 474.01293945]
[184.47021484 463.25494385]
[175.93370056 450.87609863]
[169.61215210 437.23257446]
[165.68746948 422.71688843]
[164.27256775 407.74670410]
[165.40815735 392.75277710]
[169.06156921 378.16644287]
[175.12768555 364.40744019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[16 167]
[17 166]
[18 165]
[20 163]
[21 159]
[22 158]
[23 157]
[26 156]
[27 155]
[28 154]
[29 153]
[41 141]
[42 140]
[43 139]
[45 136]
[46 135]
[47 134]
[48 133]
[51 131]
[52 130]
[54 128]
[55 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
