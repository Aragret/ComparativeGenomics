%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[131.75859070 742.55053711]
[128.66421509 727.80194092]
[129.05513000 712.73724365]
[132.91023254 698.16900635]
[140.02162170 684.88275146]
[150.00581360 673.59497070]
[162.32435608 664.91455078]
[176.31291199 659.30944824]
[174.08779907 644.47540283]
[171.86268616 629.64135742]
[169.63755798 614.80731201]
[167.41244507 599.97326660]
[165.18733215 585.13922119]
[162.96220398 570.30523682]
[148.05400085 568.95104980]
[133.89462280 564.06518555]
[121.30853271 555.92749023]
[111.02971649 545.00732422]
[103.65882874 531.93652344]
[99.62810516 517.47271729]
[99.17603302 502.45550537]
[102.33322906 487.75769043]
[108.92041016 474.23455811]
[118.55857849 462.67407227]
[130.69082642 453.75100708]
[144.61447144 447.98757935]
[142.38935852 433.15353394]
[140.16424561 418.31948853]
[125.23142242 417.21823120]
[110.91122437 412.81933594]
[97.92278290 405.34036255]
[86.91911316 395.15356445]
[78.45426178 382.76748657]
[72.95540619 368.80154419]
[70.70133209 353.95495605]
[71.80826569 338.97183228]
[76.22389221 324.60388184]
[83.72983551 311.57260132]
[93.95243835 300.53314209]
[106.38137054 292.04138184]
[120.39510345 286.52584839]
[118.16999054 271.69180298]
[115.94487000 256.85775757]
[113.71974945 242.02371216]
[99.06246948 239.11695862]
[86.26006317 231.35630798]
[76.86772156 219.66194153]
[72.03408051 205.43318176]
[72.36080933 190.38116455]
[77.82776642 176.32298279]
[87.79311371 164.96235657]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[74.89733124 72.44483948]
[62.18294907 67.20664978]
[51.27099228 58.85963821]
[42.90331650 47.97960663]
[37.64664459 35.31428146]
[35.85418701 21.73192024]
[37.64191055 8.16180134]
[42.88105392 -4.46936417]
[51.20740128 -15.30071926]
[62.04656219 -23.59592819]
[74.65361786 -28.79322815]
[72.87115479 -43.68694305]
[71.08869171 -58.58066177]
[69.30622101 -73.47438049]
[67.52375793 -88.36809540]
[65.74128723 -103.26181030]
[63.95882416 -118.15553284]
[61.84420013 -133.00572205]
[59.39847183 -147.80499268]
[56.95274734 -162.60426331]
[54.50701904 -177.40353394]
[52.06129074 -192.20280457]
[49.18841553 -195.45866394]
[47.65522766 -199.09375000]
[47.41644669 -202.64035034]
[48.27953720 -205.69349670]
[49.93794250 -207.95355225]
[48.37742233 -222.87214661]
[46.81689835 -237.79075623]
[45.25637436 -252.70936584]
[43.69585037 -267.62796021]
[42.13533020 -282.54656982]
[27.21535492 -284.74774170]
[13.31185055 -290.59097290]
[1.29880190 -299.70895386]
[-8.06864166 -311.52850342]
[-14.20163345 -325.30667114]
[-16.71464920 -340.17727661]
[-15.44971943 -355.20562744]
[-10.48635769 -369.44696045]
[-2.13656473 -382.00610352]
[9.07478333 -392.09353638]
[22.44293213 -399.07516479]
[37.12754822 -402.51214600]
[52.20554733 -402.18841553]
[66.72911072 -398.12432861]
[79.78527069 -390.57531738]
[90.55331421 -380.01596069]
[98.35635376 -367.11001587]
[102.70387268 -352.66876221]
[103.32259369 -337.59997559]
[100.17362213 -322.85092163]
[93.45489502 -309.34872437]
[83.58876801 -297.94213867]
[71.19542694 -289.34817505]
[57.05393219 -284.10708618]
[58.61445618 -269.18847656]
[60.17498016 -254.26988220]
[61.73550415 -239.35127258]
[63.29602432 -224.43267822]
[64.85654449 -209.51406860]
[66.86056519 -194.64854431]
[69.30628967 -179.84927368]
[71.75201416 -165.05000305]
[74.19774628 -150.25073242]
[76.64347076 -135.45146179]
[79.28148651 -133.11196899]
[80.91741943 -129.37849426]
[80.90842438 -124.73595428]
[78.85253906 -119.93799591]
[80.63500977 -105.04428101]
[82.41747284 -90.15056610]
[84.19994354 -75.25684357]
[85.98240662 -60.36312866]
[87.76486969 -45.46940994]
[89.54734039 -30.57569313]
[105.59204865 -27.67993927]
[119.97547913 -19.96352386]
[131.28703308 -8.17014885]
[138.41336060 6.55602503]
[140.64788818 22.78136635]
[137.76091003 38.92234421]
[130.02316284 53.40007019]
[118.18041229 64.79475403]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[130.72959900 158.52185059]
[143.58958435 166.45866394]
[152.94061279 178.29414368]
[157.66921997 192.58786011]
[157.22302246 207.60858154]
[151.67517090 221.54400635]
[141.71316528 232.71932983]
[128.55380249 239.79859924]
[130.77891541 254.63264465]
[133.00402832 269.46667480]
[135.22914124 284.30072021]
[150.24440002 285.46191406]
[164.61781311 289.93328857]
[177.62948608 297.48757935]
[188.62846375 307.74310303]
[197.06532288 320.18319702]
[202.51957703 334.18212891]
[204.72068787 349.03665161]
[203.56146240 364.00134277]
[199.10321045 378.32586670]
[191.57261658 391.29281616]
[181.35014343 402.25344849]
[168.95080566 410.66030884]
[154.99829102 416.09436035]
[157.22340393 430.92840576]
[159.44851685 445.76245117]
[174.45039368 447.18704224]
[188.66671753 452.15780640]
[201.27255249 460.38168335]
[211.53752136 471.37698364]
[218.86810303 484.50161743]
[222.84196472 498.99053955]
[223.23231506 514.00042725]
[220.02079773 528.65856934]
[213.39833069 542.11395264]
[203.75375366 553.58624268]
[191.65104675 562.41149902]
[177.79624939 568.08007812]
[180.02137756 582.91412354]
[182.24649048 597.74816895]
[184.47160339 612.58221436]
[186.69671631 627.41625977]
[188.92184448 642.25030518]
[191.14695740 657.08435059]
[206.16441345 658.33850098]
[220.48765564 663.02264404]
[233.34423828 670.88427734]
[244.04086304 681.49932861]
[252.00062561 694.29534912]
[256.79431152 708.58233643]
[258.16336060 723.58972168]
[256.03396606 738.50823975]
[250.52095032 752.53338623]
[241.92164612 764.90869141]
[230.69978333 774.96685791]
[217.46055603 782.16540527]
[202.91792297 786.11614990]
[187.85615540 786.60607910]
[173.08752441 783.60870361]
[159.40847778 777.28570557]
[147.55670166 767.97808838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[26 175]
[27 174]
[28 173]
[41 160]
[42 159]
[43 158]
[44 157]
[52 149]
[53 148]
[54 147]
[55 146]
[57 144]
[58 143]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
