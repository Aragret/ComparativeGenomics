%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[99.33921051 520.38787842]
[89.60768890 531.82702637]
[78.56824493 542.00976562]
[66.38187408 550.78759766]
[53.22629166 558.03247070]
[39.29334259 563.63873291]
[24.78620529 567.52465820]
[9.91643906 569.63354492]
[-5.09910870 569.93463135]
[-20.04146957 568.42364502]
[-34.69273758 565.12243652]
[-48.83925629 560.07928467]
[-62.27472687 553.36773682]
[-74.80322266 545.08557129]
[-86.24203491 535.35357666]
[-96.42436218 524.31378174]
[-105.20170593 512.12707520]
[-112.44606781 498.97122192]
[-118.05181122 485.03805542]
[-121.93718719 470.53079224]
[-124.04553223 455.66094971]
[-124.34609222 440.64538574]
[-122.83449554 425.70306396]
[-119.53278351 411.05194092]
[-114.48910522 396.90560913]
[-107.77700806 383.47036743]
[-99.49437714 370.94219971]
[-89.76200104 359.50375366]
[-78.72180176 349.32183838]
[-66.53477478 340.54495239]
[-53.37865067 333.30105591]
[-39.44527817 327.69583130]
[-24.93785095 323.81100464]
[-10.06792736 321.70321655]
[4.94764280 321.40322876]
[19.88989067 322.91537476]
[34.54091263 326.21765137]
[39.57782745 312.08862305]
[44.61474609 297.95959473]
[49.65166092 283.83056641]
[54.68857574 269.70150757]
[58.66067123 255.23699951]
[61.54594421 240.51710510]
[59.74774933 233.34854126]
[64.58531189 225.60026550]
[67.68942261 210.92495728]
[70.79352570 196.24966431]
[73.89763641 181.57435608]
[72.20637512 174.37982178]
[77.15875244 166.70442200]
[80.48101807 152.07696533]
[83.80327606 137.44949341]
[87.12553406 122.82204437]
[90.44779205 108.19458008]
[93.44256592 93.49657440]
[96.10836029 78.73535919]
[90.94679260 63.77980042]
[100.82281494 52.63019943]
[103.48860931 37.86898422]
[106.15440369 23.10776711]
[108.82019806 8.34654903]
[103.65863037 -6.60901070]
[113.53464508 -17.75860786]
[116.20044708 -32.51982498]
[111.03887177 -47.47538757]
[120.91489410 -58.62498474]
[123.58068848 -73.38619995]
[126.24648285 -88.14741516]
[121.08491516 -103.10298157]
[130.96093750 -114.25257874]
[133.62672424 -129.01379395]
[136.29252625 -143.77500916]
[138.95831299 -158.53622437]
[141.62411499 -173.29743958]
[144.28991699 -188.05865479]
[146.95570374 -202.81988525]
[149.62150574 -217.58110046]
[135.14871216 -221.56163025]
[121.09100342 -226.82347107]
[107.56155396 -233.32426453]
[94.66931152 -241.01167297]
[82.51806641 -249.82379150]
[71.20566559 -259.68969727]
[60.82318115 -270.52990723]
[51.45421219 -282.25717163]
[43.17419815 -294.77703857]
[36.04980087 -307.98876953]
[30.13838387 -321.78591919]
[25.48754501 -336.05743408]
[22.13473129 -350.68838501]
[20.10693550 -365.56097412]
[19.42048645 -380.55548096]
[20.08090973 -395.55114746]
[22.08288956 -410.42724609]
[25.41030502 -425.06399536]
[30.03636551 -439.34356689]
[35.92382812 -453.15093994]
[43.02528381 -466.37500000]
[51.28355408 -478.90924072]
[60.63215256 -490.65274048]
[70.99580383 -501.51095581]
[82.29106903 -511.39648438]
[94.42700195 -520.22967529]
[107.30588531 -527.93945312]
[120.82402802 -534.46374512]
[134.87258911 -539.74993896]
[149.33843994 -543.75561523]
[164.10513306 -546.44836426]
[179.05375671 -547.80664062]
[194.06394958 -547.81945801]
[209.01487732 -546.48669434]
[223.78613281 -543.81909180]
[238.25880432 -539.83807373]
[252.31634521 -534.57580566]
[265.84561157 -528.07458496]
[278.73760986 -520.38677979]
[290.88858032 -511.57431030]
[302.20068359 -501.70806885]
[312.58282471 -490.86755371]
[321.95144653 -479.14001465]
[330.23107910 -466.61987305]
[337.35507202 -453.40792847]
[343.26608276 -439.61059570]
[347.91647339 -425.33895874]
[351.26882935 -410.70788574]
[353.29617310 -395.83523560]
[353.98217773 -380.84069824]
[353.32128906 -365.84506226]
[351.31884766 -350.96902466]
[347.99099731 -336.33236694]
[343.36450195 -322.05294800]
[337.47662354 -308.24572754]
[330.37475586 -295.02191162]
[322.11608887 -282.48791504]
[312.76715088 -270.74468994]
[302.40316772 -259.88677979]
[291.10760498 -250.00163269]
[278.97140503 -241.16880798]
[266.09228516 -233.45942688]
[252.57392883 -226.93556213]
[238.52522278 -221.64974976]
[224.05923462 -217.64456177]
[209.29246521 -214.95222473]
[194.34379578 -213.59440613]
[179.33360291 -213.58207703]
[164.38272095 -214.91529846]
[161.71691895 -200.15408325]
[159.05113220 -185.39286804]
[156.38533020 -170.63165283]
[153.71954346 -155.87043762]
[151.05374146 -141.10920715]
[148.38793945 -126.34799957]
[145.72215271 -111.58677673]
[151.07440186 -97.68704224]
[141.00770569 -85.48162079]
[138.34190369 -70.72040558]
[135.67611694 -55.95918655]
[141.02835083 -42.05944824]
[130.96165466 -29.85403061]
[128.29586792 -15.09281254]
[133.64811707 -1.19307375]
[123.58141327 11.01234531]
[120.91561890 25.77356148]
[118.24982452 40.53477859]
[115.58403015 55.29599762]
[120.93627167 69.19573212]
[110.86958313 81.40115356]
[108.20378113 96.16236877]
[109.93149567 99.61018372]
[110.13108063 103.80279541]
[108.50396729 108.04066467]
[105.07525635 111.51683807]
[101.75299072 126.14430237]
[98.43073273 140.77175903]
[95.10847473 155.39921570]
[91.78621674 170.02668762]
[88.57294464 184.67846680]
[85.46883392 199.35377502]
[82.36472321 214.02906799]
[79.26061249 228.70437622]
[76.26583862 243.40237427]
[73.38056183 258.12228394]
[84.39433289 247.93910217]
[99.00198364 244.53077698]
[113.38510132 248.78823853]
[123.78398132 259.59857178]
[127.48037720 274.13598633]
[123.50806427 288.60046387]
[112.90538788 299.21096802]
[98.44387054 303.19400024]
[83.90371704 299.50839233]
[73.08567810 289.11752319]
[68.81760406 274.73843384]
[63.78068924 288.86746216]
[58.74377441 302.99649048]
[53.70685577 317.12551880]
[48.66994095 331.25454712]
[62.10591507 337.96514893]
[74.63502502 346.24636841]
[86.07456970 355.97747803]
[96.25772095 367.01651001]
[105.03597260 379.20257568]
[112.28132629 392.35787964]
[117.88811493 406.29061890]
[121.77456665 420.79760742]
[123.88402557 435.66729736]
[124.18570709 450.68283081]
[122.67523193 465.62524414]
[119.37461853 480.27664185]
[114.33199310 494.42333984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 182]
[43 181]
[45 180]
[46 179]
[47 178]
[48 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[55 168]
[56 167]
[58 165]
[59 164]
[60 163]
[61 162]
[63 160]
[64 159]
[66 157]
[67 156]
[68 155]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
