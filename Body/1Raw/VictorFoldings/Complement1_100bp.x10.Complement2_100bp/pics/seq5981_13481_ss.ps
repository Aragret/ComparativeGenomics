%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[140.82647705 553.48083496]
[153.30352783 544.52429199]
[151.74301147 529.60571289]
[150.18247986 514.68713379]
[148.62196350 499.76849365]
[136.92564392 490.61798096]
[135.13053894 475.51062012]
[144.80773926 463.30450439]
[143.24720764 448.38589478]
[141.68669128 433.46728516]
[129.99037170 424.31680298]
[128.19526672 409.20944214]
[137.87246704 397.00329590]
[128.85307312 385.15005493]
[135.11268616 370.61981201]
[133.55216980 355.70120239]
[131.99163818 340.78259277]
[130.43112183 325.86398315]
[128.87059021 310.94540405]
[125.04827881 304.61990356]
[127.39959717 295.79330444]
[126.06136322 280.85311890]
[124.72312927 265.91293335]
[123.38489532 250.97273254]
[114.54297638 238.98651123]
[121.01823425 224.55107117]
[117.99279785 220.85569763]
[117.25666046 215.22053528]
[119.86936188 209.14720154]
[118.97654724 194.17379761]
[118.08373260 179.20039368]
[115.08895874 164.50238037]
[110.05204010 150.37335205]
[105.01512146 136.24432373]
[99.97821045 122.11530304]
[94.94129181 107.98626709]
[90.83415222 104.72354889]
[88.84741211 99.39192200]
[89.97158813 93.36090851]
[85.35758209 79.08817291]
[80.74356842 64.81543732]
[66.95267487 57.57326889]
[62.47673798 43.03295898]
[69.46602631 29.93008232]
[64.85202026 15.65734959]
[60.23801041 1.38461626]
[43.94676590 1.97633183]
[28.15938187 -2.03093243]
[14.14655399 -10.30654240]
[3.03387332 -22.17663956]
[-4.28858852 -36.67900467]
[-7.23756790 -52.64105988]
[-5.58306313 -68.77466583]
[0.53374940 -83.78008270]
[10.61252308 -96.45068359]
[23.83465958 -105.76995850]
[11.91260338 -116.17068481]
[14.92689323 -130.75709534]
[9.88997650 -144.88612366]
[4.85306025 -159.01515198]
[-0.18385579 -173.14418030]
[-5.22077179 -187.27320862]
[-17.14282990 -197.67393494]
[-14.12854004 -212.26034546]
[-26.05059624 -222.66107178]
[-23.03630638 -237.24748230]
[-28.07322311 -251.37651062]
[-33.11013794 -265.50555420]
[-45.03219604 -275.90628052]
[-42.01790619 -290.49267578]
[-47.05482483 -304.62170410]
[-58.97687912 -315.02243042]
[-55.96258926 -329.60885620]
[-70.70077515 -326.67562866]
[-85.70898438 -325.91967773]
[-100.66732025 -327.35705566]
[-115.25694275 -330.95718384]
[-129.16687012 -336.64328003]
[-142.10061646 -344.29415894]
[-153.78248596 -353.74676514]
[-163.96350098 -364.79959106]
[-172.42663574 -377.21704102]
[-178.99150085 -390.73446655]
[-183.51815796 -405.06369019]
[-185.91014099 -419.89935303]
[-186.11645508 -434.92517090]
[-184.13270569 -449.82089233]
[-180.00115967 -464.26901245]
[-173.80990601 -477.96157837]
[-165.69088745 -490.60671997]
[-155.81718445 -501.93490601]
[-144.39923096 -511.70465088]
[-131.68043518 -519.70776367]
[-117.93186188 -525.77362061]
[-103.44658661 -529.77294922]
[-88.53335571 -531.62054443]
[-73.51004791 -531.27691650]
[-58.69688797 -528.74945068]
[-44.40961075 -524.09204102]
[-30.95275879 -517.40386963]
[-18.61316299 -508.82763672]
[-7.65384102 -498.54605103]
[1.69160640 -486.77825928]
[9.22398090 -473.77514648]
[14.78273010 -459.81384277]
[18.24936867 -445.19192505]
[19.55000496 -430.22106934]
[18.65691376 -415.22039795]
[15.58913612 -400.50964355]
[10.41205788 -386.40234375]
[3.23602986 -373.19921875]
[-5.78598976 -361.18170166]
[-16.46169662 -350.60592651]
[-28.56353760 -341.69729614]
[-41.83356094 -334.64575195]
[-30.27177811 -325.25564575]
[-32.92579269 -309.65863037]
[-27.88887787 -295.52960205]
[-16.32709503 -286.13946533]
[-18.98110962 -270.54244995]
[-13.94419384 -256.41342163]
[-8.90727806 -242.28439331]
[2.65450549 -232.89427185]
[0.00048993 -217.29725647]
[11.56227303 -207.90713501]
[8.90825748 -192.31011963]
[13.94517326 -178.18109131]
[18.98209000 -164.05206299]
[24.01900673 -149.92303467]
[29.05592155 -135.79400635]
[40.61770630 -126.40388489]
[37.96369171 -110.80686951]
[51.67923355 -112.07426453]
[65.30788422 -110.01140594]
[78.05228424 -104.73418427]
[89.16564178 -96.54667664]
[97.99553680 -85.92365265]
[104.02216339 -73.48302460]
[106.88896179 -59.94991684]
[106.42370605 -46.11441040]
[102.64883423 -32.78540421]
[95.78043365 -20.74332237]
[86.21585846 -10.69442654]
[74.51074219 -3.22939301]
[79.12474823 11.04334068]
[83.73876190 25.31607437]
[97.07550049 31.84806633]
[101.95808411 46.25691986]
[95.01630402 60.20143127]
[99.63031006 74.47416687]
[104.24432373 88.74689484]
[109.07032013 102.94935608]
[114.10723877 117.07838440]
[119.14414978 131.20741272]
[124.18106842 145.33644104]
[129.21798706 159.46546936]
[131.25553894 144.60450745]
[137.52842712 130.97912598]
[147.49398804 119.76807404]
[160.29008484 111.94121552]
[174.80975342 108.17565155]
[189.79685974 108.79713440]
[203.95491028 113.75190735]
[216.05906677 122.61133575]
[225.06221008 134.60897827]
[230.18545532 148.70692444]
[230.98562622 163.68557739]
[227.39347839 178.24909973]
[219.71977234 191.13763428]
[208.62835693 201.23617554]
[195.07875061 207.67109680]
[180.24313354 209.88572693]
[165.40493774 207.68847656]
[151.84780884 201.26940918]
[140.74458313 191.18386841]
[133.05712891 178.30757141]
[133.94995117 193.28097534]
[134.84277344 208.25439453]
[135.95841980 223.21284485]
[144.89605713 236.26770020]
[138.32507324 249.63450623]
[139.66331482 264.57467651]
[141.00154114 279.51486206]
[142.33978271 294.45504761]
[143.78919983 309.38485718]
[145.34971619 324.30346680]
[146.91024780 339.22207642]
[148.47076416 354.14068604]
[150.03129578 369.05929565]
[159.16230774 381.97961426]
[152.79107666 395.44277954]
[164.78474426 405.38208008]
[166.15481567 420.53390503]
[156.60530090 431.90676880]
[158.16581726 446.82537842]
[159.72633362 461.74398804]
[171.72001648 471.68328857]
[173.09007263 486.83511353]
[163.54055786 498.20797729]
[165.10108948 513.12658691]
[166.66160583 528.04516602]
[168.22213745 542.96380615]
[182.28256226 549.14440918]
[191.35598755 561.53668213]
[193.00172424 576.80712891]
[186.77706909 590.84814453]
[174.35641479 599.88269043]
[159.08087158 601.48052979]
[145.05946350 595.21191406]
[136.06388855 582.76300049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[8 196]
[9 195]
[10 194]
[13 191]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[21 184]
[22 183]
[23 182]
[24 181]
[26 179]
[29 178]
[30 177]
[31 176]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[39 151]
[40 150]
[41 149]
[44 146]
[45 145]
[46 144]
[56 132]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
[64 124]
[66 122]
[67 121]
[68 120]
[70 118]
[71 117]
[73 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
