%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[8.09438038 221.60855103]
[13.77932644 235.50358582]
[18.02934456 249.90249634]
[20.80082512 264.65750122]
[22.06532669 279.61715698]
[21.80987167 294.62802124]
[20.03708458 309.53601074]
[16.76515579 324.18817139]
[12.02765942 338.43411255]
[5.87321234 352.12768555]
[-1.63503253 365.12835693]
[-10.42002773 377.30270386]
[-20.39162445 388.52581787]
[-31.44749832 398.68252563]
[-43.47419739 407.66860962]
[-56.34830856 415.39181519]
[-69.93772125 421.77294922]
[-84.10298920 426.74652100]
[-98.69874573 430.26144409]
[-113.57522583 432.28170776]
[-128.57975769 432.78656006]
[-143.55839539 431.77078247]
[-158.35740662 429.24487305]
[-172.82493591 425.23468018]
[-186.81253052 419.78140259]
[-200.17665100 412.94100952]
[-212.78015137 404.78363037]
[-224.49371338 395.39303589]
[-235.19712830 384.86553955]
[-244.78056335 373.30920410]
[-253.14567566 360.84262085]
[-260.20663452 347.59368896]
[-265.89096069 333.69839478]
[-270.14035034 319.29931641]
[-272.91119385 304.54418945]
[-274.17501831 289.58444214]
[-273.91891479 274.57360840]
[-272.14547729 259.66571045]
[-268.87289429 245.01368713]
[-264.13476562 230.76794434]
[-257.97970581 217.07464600]
[-250.47090149 204.07431030]
[-241.68536377 191.90034485]
[-231.71328735 180.67767334]
[-220.65695190 170.52145386]
[-208.62986755 161.53591919]
[-195.75541687 153.81324768]
[-182.16572571 147.43270874]
[-168.00022888 142.45977783]
[-153.40431213 138.94548035]
[-138.52775574 136.92588806]
[-123.52319336 136.42170715]
[-108.54460907 137.43811035]
[-93.74571228 139.96469116]
[-79.27835846 143.97550964]
[-65.29100037 149.42939758]
[-51.92718506 156.27041626]
[-39.32403946 164.42832947]
[-27.61089134 173.81945801]
[-16.90793800 184.34741211]
[-5.36163616 174.77229309]
[-3.92576647 162.76126099]
[5.61528397 154.68957520]
[18.49896622 155.30073547]
[30.18654823 145.89859009]
[41.87413025 136.49642944]
[53.56171036 127.09428406]
[53.14394379 114.21581268]
[60.32722855 103.28501129]
[72.67629242 98.41560364]
[85.76499176 101.59372711]
[91.18876648 88.70674133]
[105.00791168 86.58000946]
[116.83418274 77.35290527]
[128.66044617 68.12580872]
[140.48672485 58.89871216]
[152.31298828 49.67161179]
[164.13925171 40.44451523]
[175.96553040 31.21741676]
[187.79179382 21.99031830]
[199.61807251 12.76321983]
[204.45896912 5.01702595]
[211.68980408 3.48835039]
[223.65213013 -5.56164980]
[235.61447144 -14.61164951]
[247.57681274 -23.66164970]
[259.53915405 -32.71165085]
[271.50149536 -41.76165009]
[276.45718384 -49.43490982]
[283.70996094 -50.85576248]
[295.80572510 -59.72665787]
[307.90145874 -68.59754944]
[319.99722290 -77.46844482]
[311.99810791 -90.16502380]
[304.91452026 -103.39422607]
[298.78176880 -117.09014130]
[293.63037109 -131.18453979]
[289.48602295 -145.60720825]
[286.36938477 -160.28630066]
[284.29595947 -175.14865112]
[283.27606201 -190.12025452]
[283.31478882 -205.12649536]
[284.41195679 -220.09263611]
[286.56210327 -234.94409180]
[289.75448608 -249.60688782]
[293.97323608 -264.00796509]
[299.19729614 -278.07559204]
[305.40069580 -291.73965454]
[312.55245972 -304.93212891]
[320.61703491 -317.58724976]
[329.55416870 -329.64196777]
[339.31939697 -341.03622437]
[349.86401367 -351.71328735]
[361.13555908 -361.61993408]
[373.07778931 -370.70681763]
[385.63128662 -378.92868042]
[398.73345947 -386.24453735]
[412.31906128 -392.61795044]
[426.32040405 -398.01718140]
[440.66772461 -402.41531372]
[455.28952026 -405.79043579]
[470.11300659 -408.12573242]
[485.06427002 -409.40957642]
[500.06887817 -409.63558960]
[515.05200195 -408.80261230]
[529.93908691 -406.91479492]
[544.65594482 -403.98156738]
[559.12921143 -400.01754761]
[573.28680420 -395.04244995]
[587.05816650 -389.08108521]
[600.37475586 -382.16314697]
[613.17016602 -374.32308960]
[625.38067627 -365.60000610]
[636.94543457 -356.03729248]
[647.80682373 -345.68267822]
[657.91082764 -334.58764648]
[667.20697021 -322.80755615]
[675.64898682 -310.40109253]
[683.19482422 -297.42999268]
[689.80694580 -283.95895386]
[695.45233154 -270.05505371]
[700.10284424 -255.78755188]
[703.73541260 -241.22755432]
[706.33184814 -226.44758606]
[707.87927246 -211.52128601]
[708.36993408 -196.52301025]
[707.80139160 -181.52749634]
[706.17651367 -166.60942078]
[703.50335693 -151.84313965]
[699.79528809 -137.30220032]
[695.07067871 -123.05904388]
[689.35321045 -109.18463898]
[682.67126465 -95.74810028]
[675.05816650 -82.81636810]
[666.55181885 -70.45388031]
[657.19464111 -58.72221375]
[647.03320312 -47.67982101]
[636.11816406 -37.38171387]
[624.50390625 -27.87919617]
[612.24829102 -19.21961212]
[599.41235352 -11.44610405]
[586.06005859 -4.59739685]
[572.25787354 1.29238737]
[558.07464600 6.19390631]
[543.58099365 10.08274078]
[528.84912109 12.93951607]
[513.95245361 14.75000000]
[498.96517944 15.50517273]
[483.96197510 15.20127201]
[469.01754761 13.83981228]
[454.20642090 11.42757511]
[439.60232544 7.97658014]
[425.27804565 3.50401855]
[411.30493164 -1.96782660]
[397.75259399 -8.41169453]
[384.68856812 -15.79548264]
[372.17794800 -24.08240318]
[360.28305054 -33.23117447]
[349.06311035 -43.19621277]
[338.57403564 -53.92787552]
[328.86810303 -65.37269592]
[316.77236938 -56.50180054]
[304.67660522 -47.63090515]
[292.58087158 -38.76000977]
[280.55148315 -29.79931259]
[268.58914185 -20.74931335]
[256.62680054 -11.69931316]
[244.66447449 -2.64931273]
[232.70213318 6.40068722]
[220.73979187 15.45068741]
[208.84516907 24.58948898]
[197.01889038 33.81658936]
[185.19262695 43.04368591]
[173.36636353 52.27078247]
[161.54008484 61.49788284]
[149.71382141 70.72498322]
[137.88754272 79.95207977]
[126.06127930 89.17917633]
[114.23500824 98.40627289]
[108.81123352 111.29325867]
[94.99208832 113.41999054]
[93.16697693 130.81793213]
[79.59109497 141.30651855]
[62.96386337 138.78186035]
[51.27627945 148.18402100]
[39.58869934 157.58616638]
[27.90111732 166.98831177]
[21.64689445 184.30784607]
[4.21348333 186.31858826]
[-7.33281803 195.89370728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 210]
[61 209]
[64 207]
[65 206]
[66 205]
[67 204]
[71 201]
[73 199]
[74 198]
[75 197]
[76 196]
[77 195]
[78 194]
[79 193]
[80 192]
[81 191]
[83 190]
[84 189]
[85 188]
[86 187]
[87 186]
[88 185]
[90 184]
[91 183]
[92 182]
[93 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
