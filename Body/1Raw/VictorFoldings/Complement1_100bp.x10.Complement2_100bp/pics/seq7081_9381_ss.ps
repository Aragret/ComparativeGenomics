%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[126.69448090 592.49237061]
[124.73246002 577.57708740]
[125.54475403 562.55529785]
[129.10371399 547.93853760]
[135.28808594 534.22479248]
[143.88726807 521.88098145]
[154.60836792 511.32766724]
[167.08621216 502.92422485]
[180.89582825 496.95687866]
[177.57356262 482.32940674]
[174.25131226 467.70196533]
[170.92904663 453.07449341]
[167.49798584 438.47216797]
[163.95831299 423.89578247]
[160.41864014 409.31942749]
[156.87896729 394.74304199]
[146.35682678 384.20104980]
[150.61907959 368.96478271]
[147.07940674 354.38839722]
[143.53973389 339.81201172]
[138.90660095 334.05392456]
[140.05758667 324.99227905]
[127.35678101 317.29650879]
[123.77915955 302.50949097]
[131.93733215 289.23989868]
[128.61506653 274.61245728]
[125.29280853 259.98498535]
[121.97055054 245.35752869]
[109.11444855 243.49623108]
[97.62780762 237.36178589]
[88.88804626 227.66519165]
[83.95156097 215.54606628]
[83.42601013 202.43872070]
[87.39562988 189.90237427]
[95.40863800 179.43574524]
[106.52850342 172.29782104]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[83.22040558 60.34334946]
[77.76505280 46.37055206]
[72.30969238 32.39775467]
[66.85433960 18.42495728]
[60.78050232 4.70969057]
[54.10030746 -8.72068596]
[47.42011642 -22.15106201]
[40.73992157 -35.58143616]
[37.63396072 -20.90652657]
[27.16317558 -10.16582584]
[12.57205009 -6.68745899]
[-1.61819768 -11.54923534]
[-11.01056385 -23.24468231]
[-12.69472218 -38.14983368]
[-6.14881754 -51.64617157]
[6.59883022 -59.55170822]
[21.59822273 -59.41682434]
[34.20180511 -51.28311920]
[29.37580872 -65.48557281]
[24.54981232 -79.68803406]
[19.72381401 -93.89048767]
[16.35852051 -96.63434601]
[14.25315475 -99.97080994]
[13.43930149 -103.43101501]
[13.79303360 -106.58403015]
[15.06074715 -109.08423615]
[11.08865166 -123.54875946]
[7.11655521 -138.01329041]
[3.14445901 -152.47781372]
[-0.82763731 -166.94233704]
[-4.79973364 -181.40686035]
[-8.77182961 -195.87138367]
[-12.85149670 -210.30593872]
[-17.03850746 -224.70971680]
[-21.22551918 -239.11349487]
[-25.41253090 -253.51727295]
[-29.59954071 -267.92105103]
[-44.58131790 -266.52719116]
[-59.55611801 -267.99411011]
[-73.98261261 -272.26879883]
[-87.33929443 -279.19668579]
[-99.14331818 -288.52734375]
[-108.96798706 -299.92352295]
[-116.45813751 -312.97317505]
[-121.34300995 -327.20465088]
[-123.44602203 -342.10342407]
[-122.69113922 -357.13098145]
[-119.10566711 -371.74401855]
[-112.81920624 -385.41430664]
[-104.05901337 -397.64767456]
[-93.14175415 -408.00189209]
[-80.46209717 -416.10269165]
[-66.47838593 -421.65719604]
[-51.69614029 -424.46459961]
[-36.64971924 -424.42349243]
[-21.88304329 -421.53527832]
[-7.92991734 -415.90438843]
[4.70525980 -407.73440552]
[15.56573582 -397.32061768]
[24.25891113 -385.03955078]
[30.47053146 -371.33508301]
[33.97605133 -356.70263672]
[34.64875031 -341.67120361]
[32.46430969 -326.78414917]
[27.50169373 -312.57962036]
[19.94029999 -299.57107544]
[10.05346775 -288.22882080]
[-1.80140078 -278.96282959]
[-15.19575977 -272.10806274]
[-11.00874805 -257.70428467]
[-6.82173681 -243.30050659]
[-2.63472581 -228.89672852]
[1.55228555 -214.49295044]
[6.43791389 -208.94744873]
[5.69269419 -199.84347534]
[9.66479015 -185.37895203]
[13.63688660 -170.91442871]
[17.60898209 -156.44990540]
[21.58107948 -141.98538208]
[25.55317497 -127.52085876]
[29.52527237 -113.05633545]
[33.92626953 -98.71648407]
[38.75226593 -84.51403046]
[43.57826614 -70.31157684]
[48.40426254 -56.10911942]
[54.17029572 -42.26163101]
[60.85049057 -28.83125687]
[67.53068542 -15.40087986]
[74.21087646 -1.97050428]
[79.99832916 -15.80905151]
[93.82308960 -21.62937164]
[107.76570129 -16.09731865]
[113.83920288 -2.38190699]
[108.56442261 11.66005516]
[94.96298981 17.98469353]
[80.82713318 12.96959972]
[86.28249359 26.94239807]
[91.73784637 40.91519547]
[97.19320679 54.88799286]
[100.18080902 40.18852997]
[109.18130493 28.18890190]
[122.45684052 21.20605087]
[137.44410706 20.58825302]
[151.24931335 26.45479584]
[161.20687866 37.67294693]
[165.39416504 52.07664871]
[163.00265503 66.88478088]
[154.49412537 79.23811340]
[141.51144409 86.75142670]
[126.56134796 87.97400665]
[112.53047943 82.66979218]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[121.24839783 169.41253662]
[137.94284058 173.43566895]
[151.15660095 184.31628418]
[158.26202393 199.82797241]
[157.87356567 216.82980347]
[150.11775208 231.90232849]
[136.59800720 242.03527832]
[139.92027283 256.66271973]
[143.24253845 271.29019165]
[146.56478882 285.91766357]
[159.65457153 294.36129761]
[162.81544495 309.24295044]
[154.68504333 321.67004395]
[158.11610413 336.27233887]
[161.65577698 350.84872437]
[165.19544983 365.42510986]
[175.97077942 377.00970459]
[171.45535278 391.20336914]
[174.99502563 405.77975464]
[178.53469849 420.35610962]
[182.07437134 434.93249512]
[187.14047241 442.53329468]
[185.55650330 449.75222778]
[188.87876892 464.37969971]
[192.20103455 479.00714111]
[195.52328491 493.63461304]
[210.55572510 493.05120850]
[225.43937683 495.24017334]
[239.66731262 500.12698364]
[252.75491333 507.54513550]
[264.25643921 517.24200439]
[273.78015137 528.88732910]
[281.00167847 542.08447266]
[285.67504883 556.38391113]
[287.64108276 571.29864502]
[286.83282471 586.32067871]
[283.27783203 600.93835449]
[277.09713745 614.65380859]
[268.50128174 626.99993896]
[257.78305054 637.55615234]
[245.30744934 645.96295166]
[231.49945068 651.93402100]
[216.82931519 655.26593018]
[201.79672241 655.84533691]
[186.91366577 653.65234375]
[172.68705750 648.76171875]
[159.60144043 641.34002686]
[148.10252380 631.64001465]
[138.58195496 619.99212646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 187]
[10 186]
[11 185]
[12 184]
[13 182]
[14 181]
[15 180]
[16 179]
[18 177]
[19 176]
[20 175]
[22 174]
[25 171]
[26 170]
[27 169]
[28 168]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[42 156]
[43 155]
[44 142]
[45 141]
[46 140]
[47 139]
[48 132]
[49 131]
[50 130]
[51 129]
[61 128]
[62 127]
[63 126]
[64 125]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
