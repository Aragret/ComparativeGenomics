%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[54.87206650 395.87686157]
[45.84116745 407.85906982]
[36.12262344 419.29061890]
[25.74993896 430.13211060]
[14.75887108 440.34616089]
[3.18730640 449.89755249]
[-8.92486382 458.75338745]
[-21.53588676 466.88311768]
[-34.60229111 474.25872803]
[-48.07902908 480.85479736]
[-61.91964722 486.64855957]
[-76.07643127 491.62008667]
[-90.50058746 495.75216675]
[-105.14237976 499.03063965]
[-119.95133972 501.44415283]
[-134.87641907 502.98443604]
[-149.86618042 503.64608765]
[-164.86892700 503.42694092]
[-179.83294678 502.32763672]
[-194.70666504 500.35205078]
[-209.43881226 497.50698853]
[-223.97859192 493.80218506]
[-238.27587891 489.25048828]
[-252.28138733 483.86755371]
[-265.94686890 477.67196655]
[-279.22515869 470.68502808]
[-292.07052612 462.93087769]
[-304.43869019 454.43621826]
[-316.28698730 445.23034668]
[-327.57461548 435.34500122]
[-338.26260376 424.81423950]
[-348.31417847 413.67437744]
[-357.69464111 401.96380615]
[-366.37167358 389.72290039]
[-374.31533813 376.99383545]
[-381.49829102 363.82055664]
[-387.89572144 350.24841309]
[-393.48565674 336.32421875]
[-398.24874878 322.09594727]
[-402.16857910 307.61267090]
[-405.23168945 292.92431641]
[-407.42749023 278.08151245]
[-408.74844360 263.13540649]
[-409.18994141 248.13755798]
[-408.75048828 233.13964844]
[-407.43157959 218.19337463]
[-405.23779297 203.35028076]
[-402.17669678 188.66149902]
[-398.25881958 174.17768860]
[-393.49765015 159.94877625]
[-387.90963745 146.02381897]
[-381.51403809 132.45080566]
[-374.33288574 119.27652740]
[-366.39096069 106.54640198]
[-357.71560669 94.30431366]
[-348.33673096 82.59246826]
[-338.28671265 71.45123291]
[-327.60012817 60.91901016]
[-316.31387329 51.03211212]
[-304.46679688 41.82462692]
[-292.09982300 33.32828522]
[-279.25549316 25.57238007]
[-265.97814941 18.58364677]
[-252.31352234 12.38617802]
[-238.30873108 7.00133753]
[-224.01206970 2.44768834]
[-209.47279358 -1.25907254]
[-194.74104309 -4.10616684]
[-179.86759949 -6.08378029]
[-164.90371704 -7.18509531]
[-149.90100098 -7.40631533]
[-134.91116333 -6.74667788]
[-119.98587036 -5.20845699]
[-105.17657471 -2.79695535]
[-90.53433228 0.47951439]
[-76.10961914 4.60965729]
[-61.95215607 9.57923603]
[-48.11074829 15.37111855]
[-34.63311005 21.96533966]
[-21.56570244 29.33916855]
[-8.95357132 37.46718216]
[3.15980530 46.32136917]
[14.73267174 55.87119675]
[25.72513199 66.08375549]
[36.09929276 76.92382812]
[45.81939316 88.35405731]
[54.85192490 100.33503723]
[63.16575241 112.82546234]
[76.11875153 105.26108551]
[89.07175446 97.69670105]
[101.96807861 90.03610992]
[114.80701447 82.27971649]
[127.64595795 74.52332306]
[140.48489380 66.76692963]
[153.32383728 59.01054001]
[166.16278076 51.25415039]
[179.00172424 43.49776077]
[172.18878174 30.12683678]
[166.35841370 16.29916000]
[161.54103088 2.08682132]
[157.76174927 -12.43608189]
[155.04025269 -27.19383430]
[153.39074707 -42.10949326]
[152.82182312 -57.10529327]
[153.33645630 -72.10305786]
[154.93194580 -87.02458954]
[157.60000610 -101.79209900]
[161.32669067 -116.32859039]
[166.09259033 -130.55827332]
[171.87286377 -144.40696716]
[178.63734436 -157.80245972]
[186.35079956 -170.67492676]
[194.97300720 -182.95726013]
[204.45899963 -194.58540344]
[214.75932312 -205.49873352]
[225.82028198 -215.64038086]
[237.58421326 -224.95744324]
[249.98979187 -233.40135193]
[262.97232056 -240.92808533]
[276.46411133 -247.49841309]
[290.39483643 -253.07806396]
[304.69186401 -257.63796997]
[319.28067017 -261.15432739]
[334.08517456 -263.60879517]
[349.02819824 -264.98864746]
[364.03182983 -265.28662109]
[379.01785278 -264.50115967]
[393.90811157 -262.63641357]
[408.62503052 -259.70205688]
[423.09182739 -255.71342468]
[437.23312378 -250.69128418]
[450.97515869 -244.66181946]
[464.24627686 -237.65647888]
[476.97732544 -229.71177673]
[489.10189819 -220.86914062]
[500.55682373 -211.17466736]
[511.28231812 -200.67890930]
[521.22253418 -189.43656921]
[530.32556152 -177.50627136]
[538.54406738 -164.95021057]
[545.83508301 -151.83384705]
[552.16064453 -138.22557068]
[557.48773193 -124.19634247]
[561.78863525 -109.81928253]
[565.04095459 -95.16934967]
[567.22766113 -80.32292938]
[568.33734131 -65.35742950]
[568.36425781 -50.35086060]
[567.30828857 -35.38146973]
[565.17486572 -20.52729988]
[561.97515869 -5.86579514]
[557.72589111 8.52660751]
[552.44915771 22.57487106]
[546.17242432 36.20575333]
[538.92852783 49.34819031]
[530.75518799 61.93365860]
[521.69500732 73.89654541]
[511.79519653 85.17448425]
[501.10742188 95.70867157]
[489.68737793 105.44419098]
[477.59460449 114.33027649]
[464.89215088 122.32061005]
[451.64624023 129.37351990]
[437.92593384 135.45225525]
[423.80276489 140.52511597]
[409.35037231 144.56564331]
[394.64410400 147.55278015]
[379.76058960 149.47096252]
[364.77749634 150.31016541]
[349.77288818 150.06604004]
[334.82501221 148.73983765]
[320.01181030 146.33848572]
[305.41049194 142.87451172]
[291.09716797 138.36595154]
[277.14651489 132.83631897]
[263.63122559 126.31445312]
[250.62178040 118.83435059]
[238.18598938 110.43501282]
[226.38870239 101.16021729]
[215.29141235 91.05834198]
[204.95198059 80.18202972]
[195.42433167 68.58800507]
[186.75811768 56.33670044]
[173.91917419 64.09309387]
[161.08023071 71.84947968]
[148.24128723 79.60587311]
[135.40234375 87.36226654]
[122.56340790 95.11865997]
[109.72447205 102.87504578]
[105.00197601 109.40731812]
[96.63613129 110.64970398]
[83.68312836 118.21408081]
[70.73013306 125.77845764]
[77.52337646 139.15689087]
[83.51975250 152.91093445]
[88.69860840 166.99319458]
[93.04207611 181.35511780]
[96.53518677 195.94718933]
[99.16590881 210.71911621]
[100.92515564 225.61997986]
[101.80687714 240.59838867]
[101.80802917 255.60273743]
[100.92860413 270.58129883]
[99.17163849 285.48242188]
[96.54318237 300.25476074]
[93.05230713 314.84735107]
[88.71104431 329.20996094]
[83.53434753 343.29299927]
[77.54007721 357.04797363]
[70.74888611 370.42742920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 193]
[89 192]
[90 191]
[91 189]
[92 188]
[93 187]
[94 186]
[95 185]
[96 184]
[97 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
