%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[30.52794266 901.67822266]
[15.60702038 903.25036621]
[0.62392420 904.03277588]
[-14.37958622 904.02343750]
[-29.36169243 903.22222900]
[-44.28063583 901.63146973]
[-59.09483719 899.25561523]
[-73.76300049 896.10119629]
[-88.24425507 892.17706299]
[-102.49822235 887.49414062]
[-116.48519135 882.06549072]
[-130.16616821 875.90625000]
[-143.50300598 869.03356934]
[-156.45857239 861.46655273]
[-168.99671936 853.22644043]
[-181.08251953 844.33605957]
[-192.68228149 834.82019043]
[-203.76367188 824.70544434]
[-214.29580688 814.02001953]
[-224.24934387 802.79357910]
[-233.59652710 791.05749512]
[-242.31130981 778.84448242]
[-250.36938477 766.18853760]
[-257.74832153 753.12493896]
[-264.42755127 739.69018555]
[-270.38842773 725.92163086]
[-275.61434937 711.85766602]
[-280.09075928 697.53747559]
[-283.80517578 683.00103760]
[-286.74728394 668.28881836]
[-288.90881348 653.44183350]
[-290.28378296 638.50146484]
[-290.86834717 623.50933838]
[-290.66085815 608.50726318]
[-289.66195679 593.53704834]
[-287.87435913 578.64038086]
[-285.30310059 563.85882568]
[-281.95529175 549.23358154]
[-277.84033203 534.80541992]
[-272.96963501 520.61450195]
[-267.35678101 506.70043945]
[-261.01745605 493.10198975]
[-253.96926880 479.85702515]
[-246.23191833 467.00250244]
[-237.82693481 454.57424927]
[-228.77777100 442.60687256]
[-219.10961914 431.13375854]
[-208.84945679 420.18688965]
[-198.02586365 409.79672241]
[-186.66900635 399.99227905]
[-174.81053162 390.80087280]
[-162.48352051 382.24807739]
[-149.72229004 374.35778809]
[-136.56243896 367.15197754]
[-123.04064941 360.65072632]
[-109.19458771 354.87216187]
[-95.06285095 349.83236694]
[-80.68483734 345.54541016]
[-66.10060883 342.02322388]
[-51.35082245 339.27563477]
[-36.47658539 337.31030273]
[-21.51935959 336.13272095]
[-6.52082729 335.74612427]
[8.47720432 336.15164185]
[23.43293381 337.34811401]
[38.30467606 339.33224487]
[53.05097961 342.09844971]
[56.59065247 327.52206421]
[60.13032532 312.94567871]
[63.66999817 298.36932373]
[67.20967102 283.79293823]
[70.74934387 269.21655273]
[73.19506836 254.41728210]
[74.53330231 239.47709656]
[75.87153625 224.53691101]
[77.20977020 209.59674072]
[78.54800415 194.65655518]
[79.88623810 179.71636963]
[66.87743378 187.18435669]
[52.87243652 181.81222534]
[48.19520187 167.56007385]
[56.29362106 154.93408203]
[71.19783783 153.24165344]
[81.92044830 163.72883606]
[84.36617279 148.92956543]
[86.81190491 134.13029480]
[89.25762939 119.33102417]
[91.70336151 104.53175354]
[89.69337463 99.68675995]
[90.54102325 94.06050110]
[94.44853210 89.33098602]
[97.33380890 74.61109924]
[100.21907806 59.89120483]
[102.99468994 45.15024185]
[104.33292389 30.21005821]
[104.33292389 15.21005821]
[104.33292389 0.21005864]
[104.33292389 -14.78994179]
[104.33292389 -29.78994179]
[90.55905151 -36.36590576]
[81.00912476 -48.27227402]
[77.57928467 -63.14503479]
[80.95053101 -78.03118134]
[90.45349884 -89.97506714]
[104.20136261 -96.60522461]
[119.46448517 -96.60522461]
[133.21234131 -89.97506714]
[142.71531677 -78.03118134]
[146.08656311 -63.14503479]
[142.65672302 -48.27227402]
[133.10679626 -36.36590576]
[119.33292389 -29.78994179]
[119.33292389 -14.78994179]
[119.33292389 0.21005864]
[119.33292389 15.21005821]
[119.33292389 30.21005821]
[127.46199036 17.60378075]
[140.21028137 9.69928360]
[155.11630249 8.02280235]
[169.30192566 12.89803982]
[180.02815247 23.38366318]
[185.22387695 37.45506287]
[183.88592529 52.39527512]
[176.27261353 65.31957245]
[163.85395813 73.73248291]
[149.02781677 76.00959778]
[134.65686035 71.71125031]
[123.51592255 61.66737747]
[117.75590515 47.81604004]
[119.66062927 54.95703506]
[114.93897247 62.77647781]
[112.05369568 77.49636841]
[109.16842651 92.21626282]
[106.50263214 106.97747803]
[104.05690002 121.77674866]
[101.61117554 136.57601929]
[99.16544342 151.37528992]
[96.71971893 166.17456055]
[94.82642365 181.05459595]
[93.48818970 195.99478149]
[92.14995575 210.93496704]
[90.81172180 225.87515259]
[89.47348785 240.81533813]
[88.13525391 255.75552368]
[98.02985382 244.48179626]
[112.20365143 239.57226562]
[126.95164490 242.31027222]
[138.41874695 251.98010254]
[143.60748291 266.05407715]
[141.16154480 280.85330200]
[131.72026062 292.50930786]
[117.75159454 297.97521973]
[102.90690613 295.82229614]
[91.06655884 286.61325073]
[85.32572174 272.75622559]
[81.78604889 287.33261108]
[78.24637604 301.90899658]
[74.70670319 316.48535156]
[71.16703033 331.06173706]
[67.62735748 345.63812256]
[82.00000000 349.94305420]
[96.12542725 355.00048828]
[109.96424866 360.79638672]
[123.47791290 367.31454468]
[136.62873840 374.53680420]
[149.38008118 382.44305420]
[161.69639587 391.01123047]
[173.54336548 400.21746826]
[184.88795471 410.03610229]
[195.69856262 420.43975830]
[205.94503784 431.39947510]
[215.59883118 442.88467407]
[224.63302612 454.86334229]
[233.02246094 467.30209351]
[240.74374390 480.16629028]
[247.77534485 493.42004395]
[254.09768677 507.02642822]
[259.69311523 520.94750977]
[264.54608154 535.14447021]
[268.64300537 549.57775879]
[271.97250366 564.20721436]
[274.52529907 578.99194336]
[276.29425049 593.89080811]
[277.27447510 608.86224365]
[277.46316528 623.86462402]
[276.85986328 638.85595703]
[275.46621704 653.79461670]
[273.28613281 668.63891602]
[270.32565308 683.34741211]
[266.59304810 697.87921143]
[262.09872437 712.19378662]
[256.85522461 726.25122070]
[250.87713623 740.01232910]
[244.18113708 753.43872070]
[236.78587341 766.49304199]
[228.71197510 779.13891602]
[219.98193359 791.34100342]
[210.62008667 803.06542969]
[200.65252686 814.27935791]
[190.10702515 824.95166016]
[179.01300049 835.05255127]
[167.40135193 844.55389404]
[155.30444336 853.42913818]
[142.75599670 861.65362549]
[129.79100037 869.20440674]
[116.44556427 876.06042480]
[102.75690460 882.20251465]
[88.76316071 887.61370850]
[74.50334167 892.27880859]
[60.01720047 896.18481445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[78 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[91 133]
[92 132]
[93 131]
[94 129]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
