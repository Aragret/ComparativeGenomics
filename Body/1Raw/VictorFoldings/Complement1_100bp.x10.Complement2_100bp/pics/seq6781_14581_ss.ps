%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[151.79060364 876.97485352]
[137.08294678 874.01379395]
[122.53023529 870.36663818]
[108.16447449 866.04138184]
[94.01723480 861.04754639]
[80.11962128 855.39605713]
[66.50218201 849.09936523]
[53.19485092 842.17126465]
[40.22687531 834.62713623]
[27.62677002 826.48339844]
[15.42222881 817.75799561]
[3.64008069 808.47015381]
[-7.69377518 798.64025879]
[-18.55442429 788.28991699]
[-28.91799164 777.44189453]
[-38.76169586 766.12005615]
[-48.06389999 754.34924316]
[-56.80415344 742.15533447]
[-64.96324921 729.56518555]
[-72.52323914 716.60644531]
[-79.46751404 703.30755615]
[-85.78081512 689.69781494]
[-91.44924927 675.80706787]
[-96.46036530 661.66595459]
[-100.80313873 647.30548096]
[-104.46804047 632.75720215]
[-107.44699860 618.05316162]
[-109.73346710 603.22564697]
[-111.32242584 588.30725098]
[-112.21038055 573.33081055]
[-112.39537048 558.32916260]
[-111.87700653 543.33538818]
[-110.65641022 528.38232422]
[-108.73627472 513.50292969]
[-106.12081909 498.72991943]
[-102.81578827 484.09570312]
[-98.82845306 469.63250732]
[-94.16757202 455.37210083]
[-88.84339905 441.34582520]
[-82.86763763 427.58453369]
[-76.25341797 414.11846924]
[-69.01528168 400.97720337]
[-61.16913605 388.18966675]
[-52.73223495 375.78396606]
[-43.72312164 363.78735352]
[-34.16160202 352.22619629]
[-24.06869507 341.12591553]
[-13.46658230 330.51089478]
[-2.37857413 320.40451050]
[9.17095757 310.82894897]
[21.15662384 301.80526733]
[33.55207825 293.35330200]
[46.33007050 285.49163818]
[59.46251297 278.23751831]
[72.92053986 271.60693359]
[86.67456818 265.61447144]
[100.69435883 260.27325439]
[114.94908905 255.59504700]
[129.40744019 251.59013367]
[126.08517456 236.96267700]
[113.38437653 229.26689148]
[109.80675507 214.47988892]
[117.96492004 201.21029663]
[114.64266205 186.58283997]
[111.32040405 171.95538330]
[107.99814606 157.32792664]
[104.67588806 142.70045471]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[73.40282440 65.27153015]
[77.06542206 50.83426285]
[72.66442871 36.49441910]
[66.53672791 50.18570328]
[53.58963394 57.76018524]
[38.65209198 56.39276505]
[27.29543495 46.59346390]
[23.75541496 32.01716995]
[29.35237312 18.10048866]
[41.99878311 10.03399277]
[56.97784424 10.82628727]
[68.70338440 20.18283844]
[66.03759003 5.42162228]
[63.37179184 -9.33959484]
[60.70599747 -24.10081291]
[45.66011047 -25.04138756]
[31.27673149 -29.55602074]
[18.39209747 -37.38223267]
[7.75529957 -48.06502151]
[-0.01525056 -60.98330307]
[-4.46778393 -75.38602448]
[-5.34343624 -90.43582916]
[-2.59129810 -105.25774384]
[3.62862468 -118.99004364]
[12.95471382 -130.83435059]
[24.84476471 -140.10203552]
[38.60750198 -146.25431824]
[53.44277954 -148.93348694]
[68.48809814 -147.98379517]
[82.86872864 -143.46043396]
[95.74861908 -135.62641907]
[106.37893677 -124.93717957]
[114.14165497 -112.01419067]
[118.58545685 -97.60877228]
[119.45198822 -82.55843353]
[116.69086456 -67.73818970]
[110.46261597 -54.00966644]
[101.12934875 -42.17102051]
[89.23368073 -32.91053772]
[75.46721649 -26.76660728]
[78.13301086 -12.00539017]
[80.79880524 2.75582671]
[83.46459961 17.51704407]
[87.00427246 32.09341812]
[91.40527344 46.43326569]
[102.53623199 56.33028412]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[124.37828827 111.97931671]
[139.37503052 111.66677856]
[149.08660889 123.09854126]
[146.35401917 137.84753418]
[133.19160461 145.04135132]
[119.30334473 139.37820435]
[122.62560272 154.00566101]
[125.94786072 168.63311768]
[129.27012634 183.26057434]
[132.59237671 197.88804626]
[145.68217468 206.33169556]
[148.84303284 221.21334839]
[140.71263123 233.64042664]
[144.03489685 248.26788330]
[158.80471802 245.63435364]
[173.68174744 243.69599915]
[188.63327026 242.45710754]
[203.62643433 241.92039490]
[218.62828064 242.08702087]
[233.60581970 242.95664978]
[248.52613831 244.52734375]
[263.35644531 246.79566956]
[278.06411743 249.75663757]
[292.61685181 253.40373230]
[306.98260498 257.72894287]
[321.12988281 262.72274780]
[335.02752686 268.37417603]
[348.64498901 274.67080688]
[361.95236206 281.59878540]
[374.92034912 289.14291382]
[387.52050781 297.28659058]
[399.72506714 306.01193237]
[411.50726318 315.29971313]
[422.84115601 325.12957764]
[433.70184326 335.47985840]
[444.06546021 346.32781982]
[453.90921021 357.64962769]
[463.21148682 369.42041016]
[471.95178223 381.61425781]
[480.11093140 394.20440674]
[487.67098999 407.16311646]
[494.61532593 420.46197510]
[500.92868042 434.07168579]
[506.59716797 447.96237183]
[511.60833740 462.10351562]
[515.95117188 476.46395874]
[519.61614990 491.01220703]
[522.59515381 505.71621704]
[524.88171387 520.54370117]
[526.47070312 535.46209717]
[527.35876465 550.43859863]
[527.54382324 565.44018555]
[527.02551270 580.43402100]
[525.80499268 595.38702393]
[523.88488770 610.26641846]
[521.26947021 625.03948975]
[517.96453857 639.67370605]
[513.97723389 654.13690186]
[509.31643677 668.39733887]
[503.99234009 682.42364502]
[498.01663208 696.18493652]
[491.40246582 709.65106201]
[484.16439819 722.79235840]
[476.31829834 735.57989502]
[467.88143921 747.98565674]
[458.87240601 759.98229980]
[449.31091309 771.54351807]
[439.21804810 782.64385986]
[428.61599731 793.25891113]
[417.52801514 803.36535645]
[405.97854614 812.94091797]
[393.99291992 821.96466064]
[381.59750366 830.41668701]
[368.81954956 838.27844238]
[355.68713379 845.53259277]
[342.22912598 852.16320801]
[328.47512817 858.15576172]
[314.45535278 863.49707031]
[300.20065308 868.17529297]
[285.74230957 872.18029785]
[271.11215210 875.50317383]
[256.34231567 878.13659668]
[241.46530151 880.07489014]
[226.51376343 881.31372070]
[211.52059937 881.85040283]
[196.51875305 881.68365479]
[181.54121399 880.81396484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 137]
[60 136]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 123]
[69 122]
[71 120]
[72 119]
[74 117]
[75 116]
[84 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
