%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[110.93495178 551.16644287]
[107.83124542 536.46185303]
[106.95390320 521.45892334]
[108.32253265 506.49282837]
[111.90656281 491.89788818]
[117.62591553 478.00015259]
[125.35282898 465.11013794]
[134.91467285 453.51580811]
[146.09782410 443.47616577]
[158.65246582 435.21548462]
[172.29811096 428.91833496]
[168.11109924 414.51455688]
[163.92410278 400.11077881]
[152.94172668 390.04913330]
[156.51937866 374.63775635]
[152.33236694 360.23397827]
[148.14535522 345.83016968]
[143.95834351 331.42639160]
[133.51177979 325.32757568]
[129.90562439 313.36181641]
[135.59532166 301.78640747]
[131.62321472 287.32186890]
[127.65112305 272.85736084]
[123.67903137 258.39282227]
[119.70693207 243.92831421]
[115.73483276 229.46379089]
[104.90348053 219.23974609]
[108.71019745 203.88333130]
[106.34339905 202.38119507]
[104.42901611 199.85102844]
[103.36157990 196.46044922]
[103.46772766 192.51669312]
[104.95974731 188.43896484]
[94.71456909 199.39508057]
[79.74974823 198.36842346]
[71.09678650 186.11582947]
[75.13432312 171.66943359]
[88.88604736 165.67858887]
[102.21369171 172.55821228]
[100.20967865 157.69268799]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[77.34253693 59.73340225]
[84.63617706 43.77189636]
[82.41106415 28.93785095]
[80.18594360 14.10380745]
[77.96083069 -0.73023641]
[73.40104675 13.55991268]
[65.81526184 26.50039101]
[55.57361984 37.45980072]
[43.17581940 45.90341568]
[29.22678375 51.41924286]
[14.40711403 53.73816299]
[-0.56010449 52.74702072]
[-14.94458866 48.49418640]
[-28.04448700 41.18715668]
[-39.22062683 31.18246269]
[-47.92769623 18.96825218]
[-53.74086380 5.14048767]
[-56.37648773 -9.62614632]
[-55.70597458 -24.61115265]
[-51.76203537 -39.08337784]
[-44.73710632 -52.33669281]
[-34.97394562 -63.72443771]
[-22.94892502 -72.69097900]
[-9.24876881 -78.79882050]
[5.45806217 -81.74994659]
[20.45398712 -81.40036011]
[35.00732422 -77.76712799]
[48.40798187 -71.02751160]
[60.00211334 -61.51036453]
[69.22401428 -49.68004227]
[75.62372589 -36.11377335]
[78.88828278 -21.48006439]
[82.42795563 -36.05643845]
[78.16571045 -51.29270554]
[88.68785095 -61.83470535]
[92.22752380 -76.41107941]
[95.76719666 -90.98745728]
[99.30686951 -105.56383514]
[102.84654236 -120.14020538]
[105.07165527 -134.97425842]
[105.96447754 -149.94766235]
[106.85729218 -164.92106628]
[107.75010681 -179.89447021]
[108.64292145 -194.86787415]
[109.53573608 -209.84127808]
[110.42855072 -224.81468201]
[111.32137299 -239.78808594]
[103.35941315 -249.93550110]
[104.41130066 -262.38851929]
[113.36965179 -270.51715088]
[114.48529816 -285.47558594]
[115.60094452 -300.43405151]
[116.71659851 -315.39248657]
[102.79207611 -321.34115601]
[91.55522919 -331.49063110]
[84.22493744 -344.73999023]
[81.59633636 -359.65203857]
[83.95455933 -374.60922241]
[91.04380035 -387.98913574]
[102.09507751 -398.34036255]
[115.90962219 -404.54010010]
[130.98895264 -405.91589355]
[145.69735718 -402.31845093]
[158.43937683 -394.13803101]
[167.83287048 -382.26196289]
[172.85890198 -367.97845459]
[172.97225952 -352.83694458]
[168.16067505 -338.47979736]
[158.94606018 -326.46441650]
[146.32794189 -318.09411621]
[131.67504883 -314.27685547]
[130.55940247 -299.31838989]
[129.44375610 -284.35995483]
[128.32810974 -269.40148926]
[136.78869629 -254.02667236]
[126.29477692 -238.89527893]
[125.40196228 -223.92187500]
[124.50914764 -208.94847107]
[123.61632538 -193.97505188]
[122.72351074 -179.00164795]
[121.83069611 -164.02824402]
[120.93788147 -149.05484009]
[120.04506683 -134.08143616]
[128.91006470 -146.18151855]
[142.10623169 -153.31320190]
[157.08561707 -154.09948730]
[170.95590210 -148.38854980]
[181.03898621 -137.28308105]
[185.38796997 -122.92737579]
[183.16313171 -108.09329224]
[174.79405212 -95.64505768]
[161.89666748 -87.98623657]
[146.96127319 -86.59562683]
[132.87164307 -91.74172974]
[122.34827423 -102.43091583]
[117.42292023 -116.60053253]
[113.88324738 -102.02416229]
[110.34357452 -87.44778442]
[106.80390167 -72.87140656]
[103.26422882 -58.29503250]
[107.77965546 -44.10136795]
[97.00433350 -32.51676941]
[93.46466064 -17.94039154]
[92.79487610 -2.95535350]
[95.01998901 11.87868977]
[97.24510956 26.71273422]
[99.47022247 41.54677582]
[109.00833893 48.98659897]
[110.98352051 61.32687378]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[115.07520294 155.68867493]
[117.07921600 170.55419922]
[119.63504791 185.33485413]
[123.17472076 199.91123962]
[134.29019165 211.16987610]
[130.19935608 225.49168396]
[134.17146301 239.95620728]
[138.14355469 254.42073059]
[142.11564636 268.88525391]
[146.08773804 283.34979248]
[150.05984497 297.81430054]
[163.45791626 310.44653320]
[158.36213684 327.23937988]
[162.54914856 341.64315796]
[166.73614502 356.04696655]
[170.92315674 370.45074463]
[182.20501709 381.54263306]
[178.32788086 395.92376709]
[182.51489258 410.32754517]
[186.70190430 424.73132324]
[201.59687805 422.73205566]
[216.62347412 422.97515869]
[231.44598389 425.45529175]
[245.73326111 430.11697388]
[259.16613770 436.85607910]
[271.44448853 445.52206421]
[282.29403687 455.92135620]
[291.47241211 467.82156372]
[298.77453613 480.95687866]
[304.03729248 495.03387451]
[307.14309692 509.73800659]
[308.02255249 524.74078369]
[306.65606689 539.70709229]
[303.07412720 554.30255127]
[297.35675049 568.20111084]
[289.63165283 581.09222412]
[280.07147217 592.68792725]
[268.88973999 602.72918701]
[256.33627319 610.99163818]
[242.69152832 617.29071045]
[228.26033020 621.48571777]
[213.36505127 623.48284912]
[198.33850098 623.23760986]
[183.51634216 620.75537109]
[169.22972107 616.09167480]
[155.79782104 609.35064697]
[143.52069092 600.68286133]
[132.67262268 590.28204346]
[123.49594879 578.38055420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 181]
[12 180]
[13 179]
[15 177]
[16 176]
[17 175]
[18 174]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[28 165]
[33 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[45 157]
[46 156]
[48 153]
[49 152]
[50 151]
[51 150]
[78 149]
[79 148]
[81 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
