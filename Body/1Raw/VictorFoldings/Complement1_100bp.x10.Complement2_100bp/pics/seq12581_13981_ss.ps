%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[94.10655212 595.99707031]
[81.58830261 587.71459961]
[69.86289215 578.34332275]
[59.02473450 567.95867920]
[49.16108322 556.64434814]
[40.35136414 544.49133301]
[32.66650772 531.59759521]
[26.16838646 518.06683350]
[20.90932274 504.00808716]
[16.93165970 489.53451538]
[14.26742554 474.76263428]
[12.93806839 459.81143188]
[12.95429420 444.80123901]
[14.31597042 429.85290527]
[17.01213455 415.08685303]
[21.02107811 400.62188721]
[26.31052399 386.57455444]
[32.83787918 373.05789185]
[40.55059433 360.18078613]
[49.38656616 348.04687500]
[59.27465439 336.75384521]
[70.13523865 326.39266968]
[81.88088226 317.04675293]
[94.41700745 308.79135132]
[107.64268494 301.69293213]
[121.45141602 295.80862427]
[135.73204041 291.18582153]
[132.40977478 276.55834961]
[129.08750916 261.93090820]
[125.76525116 247.30343628]
[122.44299316 232.67597961]
[109.74219513 224.98017883]
[106.16457367 210.19319153]
[114.32273865 196.92359924]
[111.00048065 182.29612732]
[107.67822266 167.66867065]
[104.35596466 153.04121399]
[101.03370667 138.41375732]
[97.71144104 123.78629303]
[94.38918304 109.15883636]
[88.62315369 95.31134796]
[80.58197784 82.64881897]
[72.54080200 69.98629761]
[64.49963379 57.32377243]
[59.87222672 54.90836716]
[56.92841721 51.31847763]
[55.83365250 47.39208984]
[56.39681244 43.91139984]
[48.92907333 30.90244865]
[41.46133041 17.89349556]
[33.99359131 4.88454342]
[20.39748383 11.24162292]
[6.31711245 16.43870544]
[-8.14876080 20.43933678]
[-22.89866638 23.21545410]
[-37.82914352 24.74758530]
[-52.83546066 25.02498245]
[-67.81236267 24.04570007]
[-82.65479279 21.81660843]
[-97.25863647 18.35334206]
[-111.52146149 13.68019485]
[-125.34322357 7.82994509]
[-138.62696838 0.84362853]
[-151.27952576 -7.22974968]
[-163.21214294 -16.33355904]
[-174.34111023 -26.40394402]
[-184.58836365 -37.37026596]
[-193.88204956 -49.15559769]
[-202.15695190 -61.67728043]
[-209.35502625 -74.84748077]
[-215.42581177 -88.57381439]
[-220.32669067 -102.75999451]
[-224.02331543 -117.30652618]
[-226.48974609 -132.11137390]
[-227.70866394 -147.07067871]
[-227.67153931 -162.07951355]
[-226.37863159 -177.03259277]
[-223.83901978 -191.82505798]
[-220.07048035 -206.35311890]
[-215.09948730 -220.51489258]
[-208.96089172 -234.21102905]
[-201.69773865 -247.34545898]
[-193.36100769 -259.82604980]
[-184.00914001 -271.56527710]
[-173.70776367 -282.48077393]
[-162.52911377 -292.49600220]
[-150.55162048 -301.54064941]
[-137.85928345 -309.55136108]
[-124.54114532 -316.47189331]
[-110.69061279 -322.25369263]
[-96.40484619 -326.85623169]
[-81.78404999 -330.24722290]
[-66.93077850 -332.40286255]
[-51.94921494 -333.30804443]
[-36.94445038 -332.95642090]
[-22.02173805 -331.35046387]
[-7.28574419 -328.50143433]
[7.16016340 -324.42929077]
[21.21465683 -319.16262817]
[34.77915192 -312.73837280]
[47.75849915 -305.20156860]
[60.06166077 -296.60513306]
[71.60233307 -287.00933838]
[82.29956818 -276.48147583]
[92.07833862 -265.09542847]
[100.87003326 -252.93103027]
[108.61299896 -240.07362366]
[115.25292206 -226.61338806]
[120.74322510 -212.64474487]
[125.04539490 -198.26565552]
[128.12925720 -183.57701111]
[129.97319031 -168.68183899]
[130.56423950 -153.68458557]
[129.89826965 -138.69049072]
[127.97994995 -123.80471039]
[124.82273865 -109.13165283]
[120.44878387 -94.77424622]
[114.88875580 -80.83320618]
[108.18167114 -67.40631104]
[100.37456512 -54.58774185]
[91.52220154 -42.46742249]
[81.68666840 -31.13036156]
[70.93696594 -20.65608597]
[59.34849930 -11.11806297]
[47.00254059 -2.58319783]
[54.47028351 10.42575455]
[61.93802643 23.43470764]
[69.40576935 36.44366074]
[77.16215515 49.28260040]
[85.20333099 61.94512558]
[93.24450684 74.60765076]
[101.28567505 87.27017212]
[99.72769165 72.35130310]
[101.87826538 57.50627136]
[107.60588074 43.64285278]
[116.56030273 31.60880089]
[128.19395447 22.14000511]
[141.79544067 15.81548691]
[156.53302002 13.02199078]
[171.50549316 13.93033981]
[185.79728699 18.48498917]
[198.53443909 26.40742111]
[208.93807983 37.21317291]
[216.37200928 50.24147415]
[220.38166809 64.69563293]
[220.72183228 79.69177246]
[217.37171936 94.31288147]
[210.53617859 107.66486359]
[200.63320923 118.93124390]
[188.26840210 127.42308044]
[174.19783020 132.62109375]
[159.28195190 134.20741272]
[144.43286133 132.08505249]
[130.55857849 126.38378143]
[118.50753784 117.45223999]
[109.01664734 105.83657074]
[112.33890533 120.46403503]
[115.66116333 135.09149170]
[118.98342133 149.71894836]
[122.30567932 164.34642029]
[125.62794495 178.97387695]
[128.95019531 193.60133362]
[142.03999329 202.04498291]
[145.20085144 216.92663574]
[137.07044983 229.35371399]
[140.39271545 243.98117065]
[143.71498108 258.60864258]
[147.03723145 273.23608398]
[150.35949707 287.86355591]
[165.23593140 285.86407471]
[180.23170471 285.20614624]
[195.22608948 285.89511108]
[210.09835815 287.92538452]
[224.72874451 291.28067017]
[238.99948120 295.93386841]
[252.79563904 301.84759521]
[266.00616455 308.97421265]
[278.52465820 317.25631714]
[290.25036621 326.62725830]
[301.08883667 337.01156616]
[310.95281982 348.32562256]
[319.76290894 360.47833252]
[327.44818115 373.37185669]
[333.94671631 386.90240479]
[339.20620728 400.96096802]
[343.18429565 415.43444824]
[345.84899902 430.20623779]
[347.17880249 445.15740967]
[347.16302490 460.16760254]
[345.80181885 475.11596680]
[343.10610962 489.88211060]
[339.09759521 504.34716797]
[333.80859375 518.39471436]
[327.28164673 531.91156006]
[319.56930542 544.78887939]
[310.73370361 556.92309570]
[300.84597778 568.21636963]
[289.98568726 578.57788086]
[278.24035645 587.92419434]
[265.70446777 596.17993164]
[252.47900391 603.27880859]
[238.67045593 609.16351318]
[224.38998413 613.78674316]
[209.75256348 617.11126709]
[194.87606812 619.11029053]
[179.88027954 619.76776123]
[164.88591003 619.07836914]
[150.01371765 617.04760742]
[135.38342285 613.69189453]
[121.11283112 609.03826904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[41 132]
[42 131]
[43 130]
[44 129]
[48 128]
[49 127]
[50 126]
[51 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
