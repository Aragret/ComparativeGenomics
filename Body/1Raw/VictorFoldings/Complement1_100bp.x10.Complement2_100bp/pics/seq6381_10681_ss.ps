%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[138.30772400 721.72344971]
[123.78984070 717.93164062]
[109.53578186 713.24462891]
[95.60068512 707.68048096]
[82.03847504 701.26074219]
[68.90160370 694.01031494]
[56.24090958 685.95715332]
[44.10536575 677.13244629]
[32.54192734 667.57037354]
[21.59533310 657.30792236]
[11.30792999 646.38470459]
[1.71951926 634.84307861]
[-7.13280344 622.72772217]
[-15.21478939 610.08538818]
[-22.49517059 596.96508789]
[-28.94578171 583.41754150]
[-34.54166412 569.49517822]
[-39.26117325 555.25183105]
[-43.08604431 540.74261475]
[-46.00148010 526.02368164]
[-47.99620819 511.15197754]
[-49.06250000 496.18502808]
[-49.19623947 481.18075562]
[-48.39690781 466.19717407]
[-46.66759491 451.29226685]
[-44.01499176 436.52371216]
[-40.44935989 421.94863892]
[-35.98449707 407.62344360]
[-30.63767433 393.60351562]
[-24.42957878 379.94314575]
[-17.38422966 366.69512939]
[-9.52888107 353.91076660]
[-0.89392740 341.63949585]
[8.48722553 329.92880249]
[18.57828522 318.82397461]
[29.34020805 308.36801147]
[40.73135757 298.60131836]
[52.70766830 289.56170654]
[65.22280121 281.28414917]
[78.22834015 273.80065918]
[91.67396545 267.14022827]
[105.50766754 261.32855225]
[119.67591095 256.38818359]
[134.12390137 252.33821106]
[148.79571533 249.19429016]
[146.57060242 234.36024475]
[144.34547424 219.52619934]
[142.12036133 204.69215393]
[139.89524841 189.85810852]
[137.67013550 175.02406311]
[132.21476746 161.05126953]
[123.80015564 148.63377380]
[115.38553619 136.21627808]
[106.97091675 123.79878235]
[98.55629730 111.38128662]
[98.02476501 126.37186432]
[90.15312195 139.14047241]
[76.99899292 146.34941101]
[62.00083160 146.11428833]
[49.07913208 138.49658203]
[41.61158752 125.48751068]
[41.55019760 110.48764038]
[48.91101074 97.41788483]
[61.76992798 89.69465637]
[76.76565552 89.33678436]
[89.97770691 96.43721008]
[83.49820709 82.90886688]
[70.55880737 73.80488586]
[72.03924561 58.98403931]
[65.55974579 45.45569229]
[51.19007111 49.85683060]
[36.32492065 52.06702423]
[21.29639053 52.03689194]
[6.44022131 49.76711273]
[-7.91169262 45.30838776]
[-21.43872452 38.76033020]
[-33.83867645 30.26922417]
[-44.83452606 20.02476692]
[-54.18062592 8.25582123]
[-61.66817856 -4.77468967]
[-67.12991333 -18.77565956]
[-70.44380188 -33.43429947]
[-71.53582001 -48.42313385]
[-70.38157654 -63.40730667]
[-67.00684357 -78.05206299]
[-61.48702240 -92.03022766]
[-53.94543076 -105.02954102]
[-44.55054474 -116.75957489]
[-33.51224899 -126.95829010]
[-21.07714653 -135.39782715]
[-7.52304220 -141.88966370]
[6.84726191 -146.28875732]
[21.71272659 -148.49682617]
[36.74125290 -148.46456909]
[51.59709930 -146.19265747]
[65.94837952 -141.73190308]
[79.47447968 -135.18191528]
[91.87322235 -126.68904114]
[102.86761475 -116.44301605]
[112.21203613 -104.67273712]
[119.69773102 -91.64115906]
[125.15747070 -77.63941193]
[128.46926880 -62.98030090]
[129.55915833 -47.99131393]
[128.40277100 -33.00730515]
[125.02595520 -18.36303139]
[119.50415039 -4.38564777]
[111.96070099 8.61258602]
[102.56414795 20.34128571]
[91.52439880 30.53842354]
[79.08809662 38.97619629]
[85.56758881 52.50454330]
[98.04353333 60.64088440]
[97.02655792 76.42937469]
[103.50605011 89.95771790]
[110.97379303 102.96666718]
[119.38841248 115.38416290]
[127.80303192 127.80165863]
[136.21765137 140.21916199]
[144.63226318 152.63665771]
[142.60687256 137.77401733]
[143.47961426 122.79943085]
[147.21788025 108.27272034]
[153.68191528 94.73697662]
[162.63003540 82.69824982]
[173.72773743 72.60660553]
[186.56008911 64.83934021]
[200.64738464 59.68682480]
[215.46292114 57.34170151]
[230.45283508 57.89163971]
[245.05671692 61.31608200]
[258.72857666 67.48699951]
[270.95730591 76.17369080]
[281.28567505 87.05139923]
[289.32760620 99.71344757]
[294.78240967 113.68645477]
[297.44616699 128.44804382]
[297.21929932 143.44631958]
[294.11026001 158.12059021]
[288.23532104 171.92222595]
[279.81411743 184.33523560]
[269.16143799 194.89556885]
[256.67556763 203.20841980]
[242.82331848 208.96298218]
[228.12255859 211.94415283]
[213.12286377 212.04045105]
[198.38502502 209.24827576]
[184.46002197 203.67204285]
[171.86846924 195.52018738]
[161.08108521 185.09750366]
[152.50416565 172.79895020]
[154.72929382 187.63299561]
[156.95440674 202.46704102]
[159.17951965 217.30108643]
[161.40464783 232.13513184]
[163.62976074 246.96916199]
[178.57829285 245.67001343]
[193.57867432 245.30271912]
[208.57289124 245.86869812]
[223.50289917 247.36578369]
[238.31095886 249.78816223]
[252.93977356 253.12646484]
[267.33273315 257.36779785]
[281.43420410 262.49572754]
[295.18957520 268.49041748]
[308.54562378 275.32867432]
[321.45074463 282.98403931]
[333.85494995 291.42694092]
[345.71026611 300.62463379]
[356.97082520 310.54162598]
[367.59307861 321.13946533]
[377.53588867 332.37719727]
[386.76083374 344.21133423]
[395.23223877 356.59609985]
[402.91726685 369.48355103]
[409.78622437 382.82388306]
[415.81250000 396.56542969]
[420.97283936 410.65505981]
[425.24725342 425.03823853]
[428.61917114 439.65933228]
[431.07559204 454.46179199]
[432.60699463 469.38830566]
[433.20745850 484.38116455]
[432.87466431 499.38238525]
[431.60986328 514.33386230]
[429.41799927 529.17779541]
[426.30752563 543.85675049]
[422.29049683 558.31390381]
[417.38241577 572.49334717]
[411.60229492 586.34027100]
[404.97250366 599.80102539]
[397.51867676 612.82360840]
[389.26968384 625.35754395]
[380.25738525 637.35443115]
[370.51666260 648.76782227]
[360.08523560 659.55352783]
[349.00344849 669.66992188]
[337.31414795 679.07769775]
[325.06259155 687.74060059]
[312.29617310 695.62506104]
[299.06427002 702.70062256]
[285.41806030 708.93981934]
[271.41036987 714.31854248]
[257.09536743 718.81604004]
[242.52845764 722.41491699]
[227.76599121 725.10113525]
[212.86506653 726.86444092]
[197.88336182 727.69793701]
[182.87879944 727.59838867]
[167.90946960 726.56616211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 156]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[66 115]
[67 114]
[69 112]
[70 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
