%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[43.02124405 576.28778076]
[38.04216766 590.54913330]
[29.24577332 602.82916260]
[17.34515190 612.13250732]
[3.30502915 617.70489502]
[-11.73642349 619.09466553]
[-26.55986214 616.18908691]
[-39.96361923 609.22375488]
[-50.86111069 598.76330566]
[-58.36892319 585.65570068]
[-61.87843704 570.96350098]
[-61.10514832 555.87780762]
[-56.11174774 541.62145996]
[-47.30302048 529.35021973]
[-35.39305878 520.05889893]
[-21.34734535 514.50061035]
[-6.30450535 513.12597656]
[-3.41923261 498.40606689]
[-0.53395998 483.68615723]
[2.35131264 468.96627808]
[5.23658514 454.24636841]
[8.12185764 439.52648926]
[11.00713062 424.80661011]
[13.89240265 410.08670044]
[8.74769878 396.10882568]
[18.99499702 384.05462646]
[6.59544802 392.49566650]
[-8.34104061 391.11679077]
[-18.98570633 380.54840088]
[-20.47195244 365.62222290]
[-12.12028790 353.16229248]
[2.25102067 348.86514282]
[16.07160378 354.69534302]
[23.02312851 367.98928833]
[27.42412758 353.64944458]
[31.82512474 339.30960083]
[23.31795883 324.80212402]
[28.02818871 308.30578613]
[43.51074600 300.16271973]
[38.41496277 283.36987305]
[51.81303406 270.73764038]
[55.78512955 256.27310181]
[59.75722504 241.80857849]
[63.40531540 227.25897217]
[66.72757721 212.63150024]
[70.04983521 198.00404358]
[73.37209320 183.37658691]
[76.69435120 168.74913025]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[82.15268707 93.49508667]
[67.76374054 89.25738525]
[60.46494293 76.15290070]
[64.43738556 61.68847275]
[77.40547180 54.14998245]
[91.94049072 57.85582352]
[99.71597290 70.68218231]
[104.32997894 56.40945053]
[108.94399261 42.13671494]
[113.55799866 27.86398315]
[118.17201233 13.59124947]
[106.35600281 5.36490345]
[97.34764099 -5.84589481]
[91.87036896 -19.12649918]
[90.36001587 -33.39663315]
[92.93012238 -47.49825668]
[99.36346436 -60.28955460]
[109.13037872 -70.73737335]
[121.43236542 -78.00068665]
[135.26734924 -81.49827576]
[149.51133728 -80.95523071]
[154.33732605 -95.15768433]
[159.16333008 -109.36013794]
[163.98931885 -123.56259155]
[168.49694824 -137.86927795]
[172.68395996 -152.27305603]
[169.10630798 -167.68444824]
[180.08868408 -177.74609375]
[184.27569580 -192.14988708]
[188.46270752 -206.55366516]
[192.64971924 -220.95744324]
[196.62181091 -235.42196655]
[200.37811279 -249.94403076]
[204.13441467 -264.46609497]
[207.89071655 -278.98815918]
[203.85578918 -294.28619385]
[214.53372192 -304.67034912]
[218.29000854 -319.19241333]
[204.40846252 -324.94122314]
[191.46212769 -332.56607056]
[179.70300293 -341.91857910]
[169.36000061 -352.81665039]
[160.63442993 -365.04818726]
[153.69613647 -378.37509155]
[148.68020630 -392.53796387]
[145.68423462 -407.26107788]
[144.76657104 -422.25787354]
[145.94506836 -437.23645020]
[149.19677734 -451.90521240]
[154.45841980 -465.97863770]
[161.62756348 -479.18276978]
[170.56465149 -491.26062012]
[181.09573364 -501.97708130]
[193.01582336 -511.12353516]
[206.09289551 -518.52197266]
[220.07237244 -524.02832031]
[234.68217468 -527.53546143]
[249.63789368 -528.97509766]
[264.64840698 -528.31921387]
[279.42156982 -525.58056641]
[293.66976929 -520.81250000]
[307.11569214 -514.10778809]
[319.49761963 -505.59695435]
[330.57449341 -495.44564819]
[340.13073730 -483.85150146]
[347.98028564 -471.04016113]
[353.97042847 -457.26101685]
[357.98446655 -442.78228760]
[359.94433594 -427.88580322]
[359.81188965 -412.86154175]
[357.58963013 -398.00195312]
[353.32092285 -383.59625244]
[347.08874512 -369.92486572]
[339.01449585 -357.25393677]
[329.25534058 -345.83007812]
[318.00115967 -335.87567139]
[305.47113037 -327.58450317]
[291.90905762 -321.11791992]
[277.57897949 -316.60180664]
[262.75985718 -314.12408447]
[247.74008179 -313.73297119]
[232.81207275 -315.43612671]
[229.05577087 -300.91406250]
[233.35937500 -286.65472412]
[222.41276550 -275.23184204]
[218.65646362 -260.70977783]
[214.90016174 -246.18772888]
[211.14387512 -231.66566467]
[212.75274658 -227.16894531]
[211.55387878 -221.61378479]
[207.05349731 -216.77043152]
[202.86648560 -202.36665344]
[198.67947388 -187.96287537]
[194.49246216 -173.55908203]
[198.36959839 -159.17794800]
[187.08775330 -148.08605957]
[182.90074158 -133.68226624]
[184.26936340 -130.43276978]
[184.13204956 -126.35893250]
[182.11851501 -122.17575836]
[178.19178772 -118.73659515]
[173.36578369 -104.53414154]
[168.53977966 -90.33168793]
[163.71379089 -76.12922668]
[176.35877991 -66.88637543]
[185.54002380 -54.17258453]
[190.34899902 -39.22537231]
[190.30354309 -23.50424194]
[185.39608765 -8.54815960]
[176.09562683 4.17508221]
[163.30285645 13.41292286]
[148.26304626 18.25133705]
[132.44474792 18.20525932]
[127.83073425 32.47799301]
[123.21672058 46.75072479]
[118.60271454 61.02346039]
[113.98870850 75.29619598]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[91.32181549 172.07138062]
[87.99954987 186.69883728]
[84.67729187 201.32630920]
[81.35503387 215.95376587]
[78.03277588 230.58122253]
[79.57834625 235.56703186]
[79.10430908 240.18531799]
[77.08884430 243.72833252]
[74.22174835 245.78068542]
[70.24965668 260.24520874]
[66.27755737 274.70971680]
[71.96725464 286.28515625]
[68.36109924 298.25091553]
[57.91452789 304.34973145]
[65.71719360 315.32849121]
[65.77130127 328.60278320]
[58.28115082 339.32565308]
[46.16497040 343.71060181]
[41.76397324 358.05044556]
[37.36297607 372.39028931]
[33.71488953 386.93991089]
[38.65321732 401.97067261]
[28.61229515 412.97198486]
[25.72702217 427.69186401]
[22.84174919 442.41177368]
[19.95647621 457.13165283]
[17.07120323 471.85153198]
[14.18593121 486.57144165]
[11.30065918 501.29132080]
[8.41538620 516.01123047]
[21.82613373 522.96307373]
[32.73412704 533.41259766]
[40.25510406 546.51269531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[26 198]
[34 197]
[35 196]
[36 195]
[39 191]
[41 188]
[42 187]
[43 186]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[54 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[75 158]
[76 157]
[77 156]
[78 155]
[79 151]
[80 150]
[82 148]
[83 147]
[84 146]
[85 145]
[86 142]
[87 141]
[88 140]
[89 139]
[91 137]
[92 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
