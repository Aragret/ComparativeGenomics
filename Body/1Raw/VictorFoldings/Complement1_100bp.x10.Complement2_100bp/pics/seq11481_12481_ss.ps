%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[107.07685089 810.97253418]
[92.24015045 808.74334717]
[77.53539276 805.76556396]
[63.00032806 802.04687500]
[48.67227173 797.59667969]
[34.58800507 792.42657471]
[20.78367615 786.54968262]
[7.29472685 779.98120117]
[-5.84422064 772.73791504]
[-18.59943771 764.83843994]
[-30.93818092 756.30310059]
[-42.82877731 747.15368652]
[-54.24070358 737.41387939]
[-65.14466858 727.10845947]
[-75.51268005 716.26403809]
[-85.31811523 704.90844727]
[-94.53582001 693.07073975]
[-103.14211273 680.78137207]
[-111.11492157 668.07183838]
[-118.43376923 654.97485352]
[-125.07986450 641.52398682]
[-131.03614807 627.75372314]
[-136.28735352 613.69946289]
[-140.81996155 599.39727783]
[-144.62236023 584.88391113]
[-147.68479919 570.19653320]
[-149.99938965 555.37292480]
[-151.56021118 540.45104980]
[-152.36323547 525.46936035]
[-152.40643311 510.46618652]
[-151.68966675 495.48007202]
[-150.21479797 480.54949951]
[-147.98558044 465.71279907]
[-145.00776672 451.00805664]
[-141.28900146 436.47302246]
[-136.83880615 422.14495850]
[-131.66862488 408.06069946]
[-125.79170990 394.25640869]
[-119.22316742 380.76745605]
[-111.97985077 367.62854004]
[-104.08036041 354.87335205]
[-95.54496002 342.53463745]
[-86.39556885 330.64404297]
[-76.65567780 319.23214722]
[-66.35027313 308.32821655]
[-55.50582886 297.96023560]
[-44.15016937 288.15481567]
[-32.31244659 278.93716431]
[-20.02305222 270.33090210]
[-7.31352997 262.35812378]
[5.78349543 255.03932190]
[19.23440361 248.39324951]
[33.00466537 242.43699646]
[47.05892944 237.18585205]
[61.36112595 232.65327454]
[75.87453461 228.85090637]
[90.56190491 225.78851318]
[105.38552856 223.47396851]
[103.82500458 208.55535889]
[102.26448822 193.63674927]
[100.70396423 178.71815491]
[99.14344025 163.79954529]
[97.58291626 148.88093567]
[88.56352234 137.02767944]
[94.82313538 122.49744415]
[93.26261139 107.57884216]
[89.35857391 100.52681732]
[91.79161835 92.42674255]
[90.45338440 77.48655701]
[82.22299194 90.02692413]
[68.56295776 96.22397614]
[53.70598602 94.15748596]
[42.25566864 84.46778870]
[37.76001740 70.15733337]
[41.61205292 55.66037369]
[52.61818314 45.46895218]
[67.36803436 42.74098587]
[81.29121399 48.32176971]
[90.07354736 60.48228073]
[90.74333954 45.49724197]
[91.41312408 30.51220131]
[92.08290863 15.52716351]
[92.75269318 0.54212445]
[77.95549011 -2.04073691]
[63.61008072 -6.49466944]
[49.95202255 -12.74653530]
[37.20560074 -20.69367409]
[25.58011627 -30.20558548]
[15.26647377 -41.12607574]
[6.43403196 -53.27582169]
[-0.77217269 -66.45530701]
[-6.23380756 -80.44812775]
[-9.86118793 -95.02449036]
[-11.59474850 -109.94505310]
[-11.40602398 -124.96479034]
[-9.29811096 -139.83708191]
[-5.30562592 -154.31770325]
[0.50587296 -168.16886902]
[8.04095459 -181.16313171]
[17.17588615 -193.08711243]
[27.76066399 -203.74501038]
[39.62147522 -212.96182251]
[52.56356049 -220.58618164]
[66.37438965 -226.49288940]
[80.82717896 -230.58497620]
[95.68460846 -232.79521179]
[110.70269775 -233.08734131]
[125.63483429 -231.45654297]
[140.23582458 -227.92958069]
[154.26591492 -222.56440735]
[167.49470520 -215.44911194]
[179.70495605 -206.70051575]
[190.69619751 -196.46229553]
[200.28791809 -184.90257263]
[208.32261658 -172.21116638]
[214.66835022 -158.59646606]
[219.22093201 -144.28205872]
[221.90560913 -129.50299072]
[222.67826843 -114.50194550]
[221.52624512 -99.52526093]
[218.46846008 -84.81885529]
[213.55509949 -70.62423706]
[206.86686707 -57.17448425]
[198.51358032 -44.69045639]
[188.63241577 -33.37715149]
[177.38562012 -23.42034721]
[164.95788574 -14.98353958]
[151.55328369 -8.20527172]
[137.39192200 -3.19684815]
[122.70635986 -0.04051088]
[107.73773193 1.21190953]
[107.06794739 16.19694901]
[106.39816284 31.18198776]
[105.72837830 46.16702652]
[105.05858612 61.15206528]
[105.39356232 76.14832306]
[106.73179626 91.08850861]
[108.18122101 106.01831818]
[109.74174500 120.93692017]
[118.87275696 133.85725403]
[112.50151825 147.32041931]
[114.06204224 162.23902893]
[115.62256622 177.15762329]
[117.18309021 192.07623291]
[118.74361420 206.99484253]
[120.30413818 221.91343689]
[135.28585815 221.11029053]
[150.28903198 221.06697083]
[165.27513123 221.78361511]
[180.20571899 223.25836182]
[195.04243469 225.48745728]
[209.74720764 228.46514893]
[224.28228760 232.18380737]
[238.61036682 236.63388062]
[252.69467163 241.80393982]
[266.49902344 247.68074036]
[279.98800659 254.24917603]
[293.12701416 261.49237061]
[305.88226318 269.39178467]
[318.22103882 277.92706299]
[330.11169434 287.07635498]
[341.52368164 296.81616211]
[352.42770386 307.12145996]
[362.79577637 317.96582031]
[372.60125732 329.32141113]
[381.81903076 341.15905762]
[390.42538452 353.44839478]
[398.39828491 366.15783691]
[405.71719360 379.25482178]
[412.36337280 392.70565796]
[418.31973267 406.47586060]
[423.57098389 420.53009033]
[428.10369873 434.83224487]
[431.90615845 449.34564209]
[434.96868896 464.03298950]
[437.28335571 478.85659790]
[438.84426880 493.77841187]
[439.64736938 508.76013184]
[439.69064331 523.76330566]
[438.97396851 538.74938965]
[437.49917603 553.67999268]
[435.27005005 568.51666260]
[432.29229736 583.22143555]
[428.57360840 597.75653076]
[424.12350464 612.08459473]
[418.95339966 626.16888428]
[413.07656860 639.97320557]
[406.50808716 653.46221924]
[399.26483154 666.60113525]
[391.36541748 679.35638428]
[382.83007812 691.69519043]
[373.68075562 703.58575439]
[363.94091797 714.99774170]
[353.63558960 725.90173340]
[342.79119873 736.26977539]
[331.43560791 746.07525635]
[319.59793091 755.29296875]
[307.30856323 763.89929199]
[294.59909058 771.87213135]
[281.50210571 779.19104004]
[268.05123901 785.83715820]
[254.28100586 791.79345703]
[240.22677612 797.04473877]
[225.92460632 801.57739258]
[211.41120911 805.37982178]
[196.72386169 808.44226074]
[181.90025330 810.75689697]
[166.97842407 812.31774902]
[151.99670410 813.12084961]
[136.99353027 813.16406250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[65 139]
[66 138]
[68 137]
[69 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
