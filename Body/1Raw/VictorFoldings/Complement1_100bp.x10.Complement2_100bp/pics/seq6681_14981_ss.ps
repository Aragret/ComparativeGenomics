%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[203.13363647 392.61434937]
[204.97006226 377.71316528]
[208.35406494 363.08557129]
[213.24853516 348.89184570]
[219.59986877 335.28750610]
[227.33847046 322.42160034]
[236.37954712 310.43508911]
[246.62405396 299.45928955]
[257.95974731 289.61450195]
[249.36117554 277.32366943]
[240.76261902 265.03283691]
[232.16404724 252.74198914]
[223.56549072 240.45115662]
[214.96691895 228.16030884]
[205.73982239 216.33404541]
[195.90924072 205.00445557]
[186.07865906 193.67485046]
[176.24807739 182.34526062]
[166.41749573 171.01567078]
[156.58691406 159.68608093]
[145.94091797 149.11903381]
[134.53845215 139.37306213]
[123.13598633 129.62709045]
[111.73352051 119.88113403]
[100.33106232 110.13516998]
[92.64457703 107.70812225]
[88.83277893 100.15821838]
[77.57668304 90.24356842]
[64.77807617 96.23876190]
[50.70379257 96.90107727]
[37.48029709 92.16349792]
[27.09292412 82.77238464]
[21.08781052 70.17008209]
[20.34179688 56.27348709]
[24.93454742 43.18246460]
[13.82731247 33.10132599]
[2.72007918 23.02018547]
[-8.38715458 12.93904686]
[-19.49438858 2.85790825]
[-37.57647705 -0.62340516]
[-42.27706146 -17.53113747]
[-53.53315735 -27.44578934]
[-64.41072083 -17.10285568]
[-76.15983582 -7.76176500]
[-88.68854523 0.50437355]
[-101.89879608 7.63086605]
[-115.68719482 13.56193638]
[-129.94583130 18.25116539]
[-144.56311035 21.66185188]
[-159.42463684 23.76730347]
[-174.41407776 24.55104065]
[-189.41412354 24.00693130]
[-204.30738831 22.13923264]
[-218.97731018 18.96256065]
[-233.30905151 14.50178051]
[-247.19047546 8.79180336]
[-260.51290894 1.87731755]
[-273.17211914 -6.18756008]
[-285.06900024 -15.33970928]
[-296.11044312 -25.50750160]
[-306.21005249 -36.61135864]
[-315.28875732 -48.56437683]
[-323.27554321 -61.27300262]
[-330.10784912 -74.63777161]
[-335.73223877 -88.55409241]
[-340.10467529 -102.91304016]
[-343.19094849 -117.60224152]
[-344.96688843 -132.50672913]
[-345.41860962 -147.50984192]
[-344.54257202 -162.49417114]
[-342.34564209 -177.34243774]
[-338.84500122 -191.93844604]
[-334.06805420 -206.16793823]
[-328.05218506 -219.91954041]
[-320.84448242 -233.08566284]
[-312.50134277 -245.56323242]
[-303.08807373 -257.25460815]
[-292.67834473 -268.06826782]
[-281.35363770 -277.91958618]
[-269.20257568 -286.73147583]
[-256.32025146 -294.43493652]
[-242.80751038 -300.96972656]
[-228.77009583 -306.28466797]
[-214.31788635 -310.33816528]
[-199.56396484 -313.09851074]
[-184.62380981 -314.54406738]
[-169.61437988 -314.66357422]
[-154.65310669 -313.45605469]
[-139.85710144 -310.93096924]
[-125.34217834 -307.10806274]
[-111.22192383 -302.01730347]
[-97.60684967 -295.69848633]
[-84.60352325 -288.20108032]
[-72.31370544 -279.58377075]
[-60.83358383 -269.91400146]
[-50.25300980 -259.26745605]
[-40.65479660 -247.72743225]
[-32.11405563 -235.38427734]
[-24.69764137 -222.33459473]
[-18.46359062 -208.68049622]
[-13.46069622 -194.52886963]
[-9.72811413 -179.99046326]
[-7.29505682 -165.17904663]
[-6.18056679 -150.21055603]
[-6.39336634 -135.20214844]
[-7.93179083 -120.27128601]
[-10.78379917 -105.53481293]
[-14.92706966 -91.10806274]
[-20.32917595 -77.10396576]
[-26.94783783 -63.63210678]
[-34.73125458 -50.79793167]
[-43.61850739 -38.70188522]
[-32.36241150 -28.78723335]
[-20.27429962 -29.23898125]
[-10.81551743 -21.07104301]
[-9.41324997 -8.24932575]
[1.69398415 1.83181322]
[12.80121803 11.91295242]
[23.90845108 21.99409103]
[35.01568604 32.07522964]
[49.70806122 25.79154396]
[65.72814178 26.54693794]
[79.86628723 34.24086761]
[89.26773071 47.37757492]
[92.00902557 63.35659409]
[87.49134064 78.98747253]
[98.74742889 88.90212250]
[110.07702637 98.73270416]
[121.47948456 108.47866821]
[132.88195801 118.22463226]
[144.28440857 127.97060394]
[155.68687439 137.71656799]
[152.22982788 123.12037659]
[156.43927002 108.72312927]
[167.21484375 98.28823853]
[181.73985291 94.54335022]
[196.21748352 98.46737671]
[206.86332703 109.03458405]
[210.89459229 123.48273468]
[207.25750732 138.03511047]
[196.90278625 148.88775635]
[182.53715515 153.20381165]
[167.91651917 149.85549927]
[177.74708557 161.18508911]
[187.57766724 172.51467896]
[197.40824890 183.84426880]
[207.23883057 195.17387390]
[217.06941223 206.50346375]
[218.04180908 191.53501892]
[228.31697083 180.60702515]
[243.19725037 178.71562195]
[255.87956238 186.72552490]
[260.56576538 200.97473145]
[255.11334229 214.94866943]
[242.01509094 222.25866699]
[227.25776672 219.56175232]
[235.85632324 231.85258484]
[244.45489502 244.14341736]
[253.05345154 256.43426514]
[261.65200806 268.72509766]
[270.25057983 281.01593018]
[283.38470459 273.74185181]
[297.20724487 267.88055420]
[311.56677246 263.49621582]
[326.30590820 260.63690186]
[341.26315308 259.33392334]
[356.27468872 259.60159302]
[371.17602539 261.43692017]
[385.80383301 264.81985474]
[399.99792480 269.71328735]
[413.60275269 276.06362915]
[426.46920776 283.80130005]
[438.45639038 292.84152222]
[449.43292236 303.08520508]
[459.27853394 314.42016602]
[467.88537598 326.72219849]
[475.15914917 339.85653687]
[481.02011108 353.67919922]
[485.40411377 368.03881836]
[488.26306152 382.77801514]
[489.56567383 397.73532104]
[489.29763794 412.74685669]
[487.46194458 427.64813232]
[484.07867432 442.27587891]
[479.18487549 456.46984863]
[472.83419800 470.07449341]
[465.09622192 482.94079590]
[456.05572510 494.92773438]
[445.81173706 505.90402222]
[434.47656250 515.74938965]
[422.17431641 524.35589600]
[409.03982544 531.62933350]
[395.21697998 537.48999023]
[380.85726929 541.87359619]
[366.11801147 544.73223877]
[351.16067505 546.03448486]
[336.14913940 545.76605225]
[321.24792480 543.92999268]
[306.62023926 540.54638672]
[292.42642212 535.65222168]
[278.82189941 529.30126953]
[265.95581055 521.56292725]
[253.96907043 512.52215576]
[242.99304199 502.27792358]
[233.14796448 490.94247437]
[224.54171753 478.64001465]
[217.26860046 465.50537109]
[211.40829468 451.68240356]
[207.02500916 437.32257080]
[204.16676331 422.58322144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 148]
[16 147]
[17 146]
[18 145]
[19 144]
[20 143]
[21 132]
[22 131]
[23 130]
[24 129]
[25 128]
[27 127]
[28 126]
[35 120]
[36 119]
[37 118]
[38 117]
[39 116]
[41 113]
[42 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
