%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[114.17435455 286.02471924]
[110.54116821 300.58651733]
[105.74801636 314.80877686]
[99.82598877 328.59918213]
[92.81348419 341.86837769]
[84.75598907 354.53024292]
[75.70574951 366.50268555]
[65.72147369 377.70806885]
[54.86791229 388.07373047]
[43.21545410 397.53237915]
[30.83966446 406.02276611]
[17.82081413 413.48974609]
[4.24333239 419.88491821]
[-9.80472183 425.16680908]
[-24.23224258 429.30117798]
[-38.94565964 432.26119995]
[-53.84954834 434.02767944]
[-68.84725189 434.58914185]
[-83.84149933 433.94198608]
[-98.73504639 432.09036255]
[-113.43130493 429.04629517]
[-127.83496857 424.82955933]
[-141.85260010 419.46746826]
[-155.39332581 412.99481201]
[-168.36929321 405.45355225]
[-180.69635010 396.89260864]
[-192.29457092 387.36749268]
[-203.08871460 376.94000244]
[-213.00880432 365.67773438]
[-221.99046326 353.65377808]
[-229.97547913 340.94604492]
[-236.91203308 327.63702393]
[-242.75515747 313.81295776]
[-247.46696472 299.56356812]
[-251.01687622 284.98123169]
[-253.38186646 270.16055298]
[-254.54663086 255.19760132]
[-254.50357056 240.18945312]
[-253.25300598 225.23344421]
[-250.80302429 210.42655945]
[-247.16950989 195.86482239]
[-242.37605286 181.64270020]
[-236.45370483 167.85240173]
[-229.44091797 154.58337402]
[-221.38313293 141.92167664]
[-212.33264160 129.94941711]
[-202.34811401 118.74426270]
[-191.49432373 108.37886047]
[-179.84165955 98.92044830]
[-167.46568298 90.43035889]
[-154.44667053 82.96366119]
[-140.86904907 76.56878662]
[-126.82087708 71.28719330]
[-112.39326477 67.15314484]
[-97.67977905 64.19345093]
[-82.77585602 62.42730331]
[-67.77813721 61.86616135]
[-52.78390503 62.51366043]
[-37.89039612 64.36560822]
[-23.19420242 67.40998077]
[-8.79063702 71.62704468]
[5.22688580 76.98944855]
[18.76745605 83.46241760]
[31.74325752 91.00395966]
[44.07013321 99.56517792]
[55.66814423 109.09053802]
[66.46205902 119.51827240]
[77.71815491 109.60362244]
[88.97425079 99.68897247]
[74.39781189 96.14958954]
[67.93856049 82.61156464]
[74.35802460 69.05462646]
[88.92401123 65.47245026]
[100.89901733 74.50567627]
[101.45616913 89.49382782]
[113.41850281 80.44383240]
[125.38084412 71.39382935]
[137.34318542 62.34383011]
[149.30551147 53.29383087]
[161.26785278 44.24383163]
[162.81333923 40.18607330]
[165.31781006 37.13775635]
[168.34613037 35.27640533]
[171.45028687 34.61999130]
[174.22239685 35.03654861]
[186.70219421 26.71460724]
[199.18197632 18.39266205]
[211.66177368 10.07071877]
[224.14157104 1.74877501]
[216.61703491 -11.23316479]
[209.92248535 -24.66195869]
[204.08435059 -38.48461151]
[199.12567139 -52.64656448]
[195.06600952 -67.09193420]
[191.92140198 -81.76371002]
[189.70425415 -96.60398102]
[188.42330933 -111.55418396]
[188.08363342 -126.55532074]
[188.68655396 -141.54818726]
[190.22969055 -156.47360229]
[192.70697021 -171.27267456]
[196.10859680 -185.88700867]
[200.42115784 -200.25889587]
[205.62763977 -214.33163452]
[211.70747375 -228.04969788]
[218.63668823 -241.35891724]
[226.38792419 -254.20678711]
[234.93058777 -266.54260254]
[244.23095703 -278.31768799]
[254.25234985 -289.48553467]
[264.95520020 -300.00213623]
[276.29730225 -309.82589722]
[288.23382568 -318.91812134]
[300.71774292 -327.24288940]
[313.69970703 -334.76736450]
[327.12854004 -341.46185303]
[340.95123291 -347.29989624]
[355.11318970 -352.25851440]
[369.55859375 -356.31808472]
[384.23037720 -359.46261597]
[399.07067871 -361.67968750]
[414.02087402 -362.96057129]
[429.02200317 -363.30017090]
[444.01489258 -362.69717407]
[458.94027710 -361.15393066]
[473.73934937 -358.67660522]
[488.35366821 -355.27487183]
[502.72552490 -350.96224976]
[516.79821777 -345.75570679]
[530.51623535 -339.67578125]
[543.82543945 -332.74652100]
[556.67327881 -324.99520874]
[569.00903320 -316.45248413]
[580.78411865 -307.15203857]
[591.95190430 -297.13058472]
[602.46844482 -286.42767334]
[612.29211426 -275.08554077]
[621.38427734 -263.14895630]
[629.70898438 -250.66500854]
[637.23339844 -237.68299866]
[643.92779541 -224.25413513]
[649.76580811 -210.43142700]
[654.72430420 -196.26940918]
[658.78381348 -181.82400513]
[661.92828369 -167.15219116]
[664.14526367 -152.31190491]
[665.42608643 -137.36167908]
[665.76562500 -122.36054230]
[665.16253662 -107.36768341]
[663.61920166 -92.44227600]
[661.14178467 -77.64322662]
[657.73999023 -63.02894592]
[653.42730713 -48.65709686]
[648.22070312 -34.58440781]
[642.14068604 -20.86641884]
[635.21136475 -7.55726242]
[627.45996094 5.29053164]
[618.91717529 17.62625885]
[609.61669922 29.40123749]
[599.59515381 40.56899261]
[588.89221191 51.08545685]
[577.55004883 60.90911865]
[565.61340332 70.00121307]
[553.12939453 78.32585144]
[540.14733887 85.85018921]
[526.71844482 92.54453278]
[512.89569092 98.38244629]
[498.73367310 103.34090424]
[484.28823853 107.40032959]
[469.61642456 110.54470825]
[454.77612305 112.76162720]
[439.82589722 114.04233551]
[424.82473755 114.38179016]
[409.83187866 113.77863312]
[394.90649414 112.23525238]
[380.10745239 109.75775146]
[365.49319458 106.35588837]
[351.12136841 102.04309845]
[337.04870605 96.83640289]
[323.33074951 90.75634766]
[310.02163696 83.82693481]
[297.17385864 76.07550049]
[284.83819580 67.53264618]
[273.06326294 58.23207855]
[261.89556885 48.21051025]
[251.37915039 37.50748825]
[241.55554199 26.16525269]
[232.46351624 14.22856903]
[219.98371887 22.55051231]
[207.50392151 30.87245560]
[195.02413940 39.19440079]
[182.54434204 47.51634216]
[170.31785583 56.20616913]
[158.35551453 65.25616455]
[146.39317322 74.30616760]
[134.43084717 83.35617065]
[122.46850586 92.40616608]
[110.50617218 101.45616913]
[98.88890839 110.94506836]
[87.63281250 120.85971832]
[76.37671661 130.77436829]
[85.35864258 142.79814148]
[93.34393311 155.50567627]
[100.28078461 168.81455994]
[106.12422180 182.63848877]
[110.83633423 196.88777161]
[114.38656616 211.47003174]
[116.75189209 226.29067993]
[117.91697693 241.25358582]
[117.87425995 256.26174927]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 201]
[68 200]
[69 199]
[75 198]
[76 197]
[77 196]
[78 195]
[79 194]
[80 193]
[85 192]
[86 191]
[87 190]
[88 189]
[89 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
