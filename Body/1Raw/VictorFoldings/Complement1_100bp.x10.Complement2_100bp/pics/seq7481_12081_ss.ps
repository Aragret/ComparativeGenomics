%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[94.83680725 498.23535156]
[91.14991760 483.58666992]
[91.74076080 468.49270630]
[96.56143188 454.17706299]
[105.22115326 441.80023193]
[117.01790619 432.36553955]
[130.99539185 426.63784790]
[129.43487549 411.71923828]
[127.87434387 396.80062866]
[126.31381989 381.88201904]
[124.75330353 366.96340942]
[123.19277954 352.04483032]
[114.17338562 340.19155884]
[120.43299866 325.66131592]
[118.87247467 310.74270630]
[117.31195068 295.82412720]
[101.94699860 293.14770508]
[87.94371796 286.24795532]
[76.43824005 275.67556763]
[68.36658478 262.27951050]
[64.38854218 247.13897705]
[64.83375549 231.47637939]
[69.67437744 216.55863953]
[78.52670288 203.59474182]
[90.68157196 193.63774109]
[105.16114044 187.49923706]
[103.37866974 172.60551453]
[101.59620667 157.71179199]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[83.27342224 44.78485870]
[75.37148285 57.53473663]
[61.52850342 63.31157303]
[46.90756226 59.96074295]
[36.96191025 48.73202896]
[35.40103149 33.81346130]
[42.80709457 20.76929855]
[56.41782379 14.46468830]
[71.15674591 17.25109673]
[81.52713013 28.09031105]
[80.85734558 13.10527229]
[80.18756104 -1.87976623]
[79.51777649 -16.86480522]
[78.84799194 -31.84984398]
[78.17819977 -46.83488083]
[77.50841522 -61.81991959]
[76.83863068 -76.80496216]
[76.16884613 -91.79000092]
[65.64984894 -96.34684753]
[57.62719727 -104.46334839]
[53.23268509 -114.94000244]
[53.06587982 -126.24845123]
[57.11258698 -136.75439453]
[64.75245667 -144.95381165]
[74.85373688 -149.68824768]
[74.85373688 -164.68824768]
[74.85373688 -179.68824768]
[74.85373688 -194.68824768]
[63.95918655 -205.82136536]
[64.17286682 -221.03350830]
[74.85373688 -231.35118103]
[74.85373688 -246.35118103]
[74.85373688 -261.35119629]
[74.85373688 -276.35119629]
[74.85373688 -291.35119629]
[74.85373688 -306.35119629]
[74.85373688 -321.35119629]
[74.85373688 -336.35119629]
[74.85373688 -351.35119629]
[74.85373688 -366.35119629]
[74.85373688 -381.35119629]
[74.85373688 -396.35119629]
[74.85373688 -411.35119629]
[63.95918655 -422.48431396]
[64.17286682 -437.69644165]
[74.85373688 -448.01412964]
[74.85373688 -463.01412964]
[74.85373688 -478.01412964]
[74.85373688 -493.01412964]
[74.85373688 -508.01412964]
[59.99273300 -510.25198364]
[45.63127518 -514.67987061]
[32.09021378 -521.19891357]
[19.67205811 -529.66333008]
[8.65423393 -539.88415527]
[-0.71711588 -551.63299561]
[-8.23263264 -564.64739990]
[-13.72441578 -578.63665771]
[-17.06977844 -593.28814697]
[-18.19398117 -608.27459717]
[-17.07191277 -623.26116943]
[-13.72863674 -637.91314697]
[-8.23884583 -651.90313721]
[-0.72518331 -664.91864014]
[8.64449310 -676.66882324]
[19.66086197 -686.89117432]
[32.07781219 -695.35742188]
[45.61794662 -701.87835693]
[59.97877121 -706.30828857]
[74.83946228 -708.54827881]
[89.86801910 -708.54827881]
[104.72871399 -706.30828857]
[119.08953857 -701.87835693]
[132.62966919 -695.35742188]
[145.04661560 -686.89117432]
[156.06298828 -676.66882324]
[165.43266296 -664.91864014]
[172.94631958 -651.90313721]
[178.43611145 -637.91314697]
[181.77938843 -623.26116943]
[182.90145874 -608.27459717]
[181.77725220 -593.28814697]
[178.43190002 -578.63665771]
[172.94010925 -564.64739990]
[165.42459106 -551.63299561]
[156.05325317 -539.88415527]
[145.03541565 -529.66333008]
[132.61726379 -521.19891357]
[119.07620239 -514.67987061]
[104.71475220 -510.25198364]
[89.85373688 -508.01412964]
[89.85373688 -493.01412964]
[89.85373688 -478.01412964]
[89.85373688 -463.01412964]
[89.85373688 -448.01412964]
[100.53461456 -437.69644165]
[100.74829102 -422.48431396]
[89.85373688 -411.35119629]
[89.85373688 -396.35119629]
[89.85373688 -381.35119629]
[89.85373688 -366.35119629]
[89.85373688 -351.35119629]
[89.85373688 -336.35119629]
[89.85373688 -321.35119629]
[89.85373688 -306.35119629]
[89.85373688 -291.35119629]
[89.85373688 -276.35119629]
[89.85373688 -261.35119629]
[89.85373688 -246.35118103]
[89.85373688 -231.35118103]
[100.53461456 -221.03350830]
[100.74829102 -205.82136536]
[89.85373688 -194.68824768]
[89.85373688 -179.68824768]
[89.85373688 -164.68824768]
[89.85373688 -149.68824768]
[105.58424377 -139.59645081]
[112.10601044 -121.92174530]
[106.61389160 -103.74356842]
[91.15388489 -92.45978546]
[91.82366943 -77.47474670]
[92.49345398 -62.48970795]
[93.16323853 -47.50466919]
[93.83303070 -32.51963043]
[94.50281525 -17.53458977]
[95.17259979 -2.54955149]
[95.84238434 12.43548775]
[96.51216888 27.42052650]
[98.07269287 42.33913040]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[117.59429169 144.44924927]
[118.89882660 148.90475464]
[118.37005615 152.94647217]
[116.48992157 155.92933655]
[118.27239227 170.82304382]
[120.05485535 185.71676636]
[134.34492493 187.89262390]
[147.57194519 193.69221497]
[158.83489990 202.71359253]
[167.36828613 214.33557129]
[172.59425354 227.76051331]
[174.16163635 242.06901550]
[171.96965027 256.28295898]
[166.17420959 269.43228149]
[157.17700195 280.62127686]
[145.59753418 289.08950806]
[132.23056030 294.26358032]
[133.79107666 309.18218994]
[135.35160828 324.10079956]
[144.48262024 337.02114868]
[138.11138916 350.48428345]
[139.67190552 365.40289307]
[141.23242188 380.32150269]
[142.79295349 395.24011230]
[144.35346985 410.15872192]
[145.91400146 425.07733154]
[160.77421570 427.78854370]
[174.26803589 434.57775879]
[185.30155945 444.89462280]
[192.98037720 457.90280151]
[196.68197632 472.54776001]
[196.10630798 487.64230347]
[191.30001831 501.96276855]
[182.65274048 514.34832764]
[170.86546326 523.79486084]
[156.89373779 529.53656006]
[141.87019348 531.10809326]
[127.01270294 528.38195801]
[113.52571869 521.57916260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[14 190]
[15 189]
[16 188]
[26 177]
[27 176]
[28 175]
[29 171]
[30 170]
[31 169]
[33 167]
[34 166]
[35 165]
[36 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[60 151]
[61 150]
[62 149]
[63 148]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
