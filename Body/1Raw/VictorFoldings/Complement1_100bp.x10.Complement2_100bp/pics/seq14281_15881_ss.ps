%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[186.22413635 494.31228638]
[191.68870544 480.30554199]
[199.38430786 467.38937378]
[209.10099792 455.91610718]
[220.57369995 446.19876099]
[233.48944092 438.50244141]
[228.03408813 424.52963257]
[222.57872009 410.55682373]
[217.12336731 396.58404541]
[211.66801453 382.61123657]
[199.83177185 373.56951904]
[202.02023315 357.90039062]
[187.74830627 347.68869019]
[190.67640686 329.50881958]
[185.01362610 315.61880493]
[179.35084534 301.72875977]
[173.48187256 287.92459106]
[167.40805054 274.20932007]
[161.82533264 269.36627197]
[161.34756470 260.24435425]
[155.47860718 246.44017029]
[149.60964966 232.63600159]
[143.74069214 218.83181763]
[131.23406982 215.73118591]
[122.66901398 205.84574890]
[121.34183502 192.63783264]
[127.95999146 180.90690613]
[122.29720306 167.01687622]
[116.63441467 153.12684631]
[110.56058502 139.41159058]
[104.08108521 125.88323975]
[97.60159302 112.35489655]
[90.82160187 98.97462463]
[83.74449158 85.74909210]
[76.66738892 72.52356720]
[69.10301208 59.57056808]
[61.06183624 46.90804291]
[53.02066422 34.24551773]
[47.34721375 30.85089111]
[44.64537048 25.85118484]
[44.93510437 21.08410072]
[37.27450943 8.18777370]
[29.61391068 -4.70855379]
[21.95331383 -17.60488129]
[14.29271698 -30.50120735]
[6.44096088 -43.28205109]
[-1.60021186 -55.94457626]
[-9.64138508 -68.60710144]
[-17.68255806 -81.26962280]
[-25.72373009 -93.93215179]
[-33.76490402 -106.59467316]
[-41.80607605 -119.25720215]
[-56.97113800 -122.81510162]
[-64.94564819 -135.77125549]
[-61.46027756 -150.20689392]
[-69.50144958 -162.86941528]
[-83.43100739 -170.37129211]
[-83.72223663 -185.26304626]
[-97.65179443 -192.76490784]
[-97.94302368 -207.65667725]
[-105.98419189 -220.31919861]
[-114.02536774 -232.98171997]
[-127.61353302 -226.58132935]
[-141.89674377 -221.93450928]
[-156.64974976 -219.11453247]
[-171.63986206 -218.16589355]
[-186.63066101 -219.10354614]
[-201.38571167 -221.91268921]
[-215.67233276 -226.54902649]
[-229.26519775 -232.93945312]
[-241.94990540 -240.98316956]
[-253.52642822 -250.55329895]
[-263.81216431 -261.49893188]
[-272.64489746 -273.64743042]
[-279.88534546 -286.80718994]
[-285.41928101 -300.77066040]
[-289.15945435 -315.31762695]
[-291.04684448 -330.21868896]
[-291.05172729 -345.23876953]
[-289.17401123 -360.14102173]
[-285.44329834 -374.69042969]
[-279.91842651 -388.65750122]
[-272.68652344 -401.82196045]
[-263.86166382 -413.97619629]
[-253.58305359 -424.92849731]
[-242.01275635 -434.50613403]
[-229.33326721 -442.55810547]
[-215.74455261 -448.95733643]
[-201.46095276 -453.60296631]
[-186.70771790 -456.42169189]
[-171.71752930 -457.36907959]
[-156.72680664 -456.43017578]
[-141.97198486 -453.61978149]
[-127.68575287 -448.98223877]
[-114.09342957 -442.59066772]
[-101.40939331 -434.54589844]
[-89.83367920 -424.97476196]
[-79.54886627 -414.02828979]
[-70.71714783 -401.87902832]
[-63.47782135 -388.71865845]
[-57.94505310 -374.75473022]
[-54.20611191 -360.20742798]
[-52.31996155 -345.30624390]
[-52.31634521 -330.28613281]
[-54.19532776 -315.38403320]
[-57.92727280 -300.83496094]
[-63.45331955 -286.86834717]
[-70.68631744 -273.70449829]
[-79.51219177 -261.55102539]
[-89.79174042 -250.59957886]
[-101.36283875 -241.02290344]
[-93.32167053 -228.36036682]
[-85.28049469 -215.69784546]
[-71.92610168 -209.10168457]
[-71.05971527 -193.30421448]
[-57.70531464 -186.70805359]
[-56.83892822 -170.91058350]
[-48.79775238 -158.24806213]
[-34.25021744 -155.26399231]
[-25.91493988 -142.53694153]
[-29.14355087 -127.29837036]
[-21.10237885 -114.63584900]
[-13.06120586 -101.97332001]
[-5.02003288 -89.31079865]
[3.02114010 -76.64826965]
[11.06231308 -63.98574829]
[19.10348511 -51.32322311]
[23.48677254 -49.42695236]
[26.72537231 -44.75699615]
[27.18904305 -38.16180420]
[34.84963989 -25.26547813]
[42.51023865 -12.36915112]
[50.17083740 0.52717590]
[57.83143234 13.42350292]
[65.68318939 26.20434570]
[73.72436523 38.86687088]
[81.76553345 51.52939606]
[87.53129578 37.68179703]
[101.90991211 33.40917587]
[114.30200958 41.86115646]
[115.57259369 56.80724716]
[104.78503418 67.22974396]
[89.89291382 65.44646454]
[96.97002411 78.67198944]
[104.04712677 91.89751434]
[107.54239655 93.52706909]
[110.30241394 96.68937683]
[111.65874481 101.02151489]
[111.12993622 105.87539673]
[117.60943604 119.40374756]
[124.08892822 132.93208313]
[127.75643158 135.25660706]
[130.24336243 138.31924438]
[131.46261597 141.65821838]
[131.48606873 144.83093262]
[130.52444458 147.46406555]
[136.18722534 161.35409546]
[141.85002136 175.24412537]
[158.09571838 181.73228455]
[164.49658203 197.64906311]
[157.54486084 212.96286011]
[163.41383362 226.76704407]
[169.28279114 240.57121277]
[175.15174866 254.37539673]
[181.12330627 268.13549805]
[187.19714355 281.85076904]
[192.30426025 286.04943848]
[194.23455811 291.39462280]
[193.24085999 296.06597900]
[198.90365601 309.95602417]
[204.56643677 323.84603882]
[216.13058472 329.55859375]
[220.56118774 341.24420166]
[215.99302673 352.44503784]
[228.21946716 362.48620605]
[225.64080811 377.15588379]
[231.09616089 391.12869263]
[236.55152893 405.10147095]
[242.00688171 419.07427979]
[247.46223450 433.04705811]
[262.17602539 429.95611572]
[277.19790649 429.32925415]
[292.11807251 431.18362427]
[306.52947998 435.46862793]
[320.03897095 442.06735229]
[332.27801514 450.79980469]
[342.91271973 461.42776489]
[351.65295410 473.66125488]
[358.26025391 487.16653442]
[362.55441284 501.57522583]
[364.41824341 516.49420166]
[363.80093384 531.51647949]
[360.71932983 546.23223877]
[355.25744629 560.23999023]
[347.56433105 573.15765381]
[337.84985352 584.63281250]
[326.37902832 594.35235596]
[313.46478271 602.05120850]
[299.45941162 607.51928711]
[284.74502563 610.60742188]
[269.72302246 611.23138428]
[254.80322266 609.37414551]
[240.39263916 605.08636475]
[226.88441467 598.48498535]
[214.64704895 589.75018311]
[204.01440430 579.12017822]
[195.27653503 566.88500977]
[188.67182922 553.37841797]
[184.38044739 538.96893311]
[182.51947021 524.04962158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[12 174]
[14 171]
[15 170]
[16 169]
[17 166]
[18 165]
[20 164]
[21 163]
[22 162]
[23 161]
[27 158]
[28 157]
[29 156]
[30 151]
[31 150]
[32 149]
[33 145]
[34 144]
[35 143]
[36 137]
[37 136]
[38 135]
[41 134]
[42 133]
[43 132]
[44 131]
[45 130]
[46 127]
[47 126]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[55 118]
[56 117]
[58 115]
[60 113]
[61 112]
[62 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
