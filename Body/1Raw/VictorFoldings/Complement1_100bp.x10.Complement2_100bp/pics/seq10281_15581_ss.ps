%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[87.04264832 898.92187500]
[72.09400940 897.65002441]
[57.21940231 895.69415283]
[42.45010757 893.05834961]
[27.81718254 889.74822998]
[13.35140228 885.77069092]
[-0.91681045 881.13415527]
[-14.95744991 875.84832764]
[-28.74098778 869.92437744]
[-42.23843765 863.37469482]
[-55.42141724 856.21307373]
[-68.26219177 848.45458984]
[-80.73377228 840.11560059]
[-92.80992126 831.21356201]
[-104.46524048 821.76727295]
[-115.67522430 811.79650879]
[-126.41629791 801.32232666]
[-136.66586304 790.36669922]
[-146.40237427 778.95263672]
[-155.60536194 767.10424805]
[-164.25544739 754.84637451]
[-172.33447266 742.20483398]
[-179.82542419 729.20617676]
[-186.71253967 715.87774658]
[-192.98136902 702.24761963]
[-198.61869812 688.34436035]
[-203.61268616 674.19726562]
[-207.95283508 659.83612061]
[-211.62998962 645.29113770]
[-214.63645935 630.59277344]
[-216.96588135 615.77209473]
[-218.61338806 600.86016846]
[-219.57548523 585.88842773]
[-219.85017395 570.88830566]
[-219.43687439 555.89129639]
[-218.33644104 540.92907715]
[-216.55120850 526.03302002]
[-214.08489990 511.23449707]
[-210.94273376 496.56457520]
[-207.13130188 482.05416870]
[-202.65863037 467.73373413]
[-197.53410339 453.63342285]
[-191.76852417 439.78289795]
[-185.37400818 426.21124268]
[-178.36399841 412.94702148]
[-170.75323486 400.01815796]
[-162.55773926 387.45181274]
[-153.79472351 375.27441406]
[-144.48263550 363.51156616]
[-134.64105225 352.18801880]
[-124.29067230 341.32757568]
[-113.45326233 330.95309448]
[-102.15161133 321.08636475]
[-90.40948486 311.74816895]
[-78.25158691 302.95812988]
[-65.70346832 294.73474121]
[-52.79153824 287.09527588]
[-39.54293823 280.05581665]
[-25.98553467 273.63113403]
[-12.14783669 267.83480835]
[1.94105327 262.67898560]
[16.25150681 258.17449951]
[30.75342751 254.33082581]
[45.41631699 251.15608215]
[60.20934296 248.65690613]
[75.10139465 246.83857727]
[90.06114197 245.70489502]
[89.61454010 230.71154785]
[89.16793060 215.71820068]
[88.72132874 200.72485352]
[88.27471924 185.73150635]
[87.82811737 170.73815918]
[87.38150787 155.74479675]
[86.93490601 140.75144958]
[79.70364380 153.89332581]
[68.04183960 163.32742310]
[53.67943954 167.65425110]
[38.74702072 166.23194885]
[25.45972443 159.27151489]
[15.78863907 147.80546570]
[11.16841316 133.53474426]
[12.28442860 118.57632446]
[18.97113228 105.14918518]
[30.23659134 95.24517822]
[44.40964127 90.33348846]
[59.38779449 91.14275360]
[72.94913483 97.55290985]
[83.08190918 108.61306000]
[88.28268433 122.68059540]
[90.94847870 107.91938019]
[93.39421082 93.12010956]
[95.61932373 78.28606415]
[90.01476288 63.49081421]
[99.55443573 52.05211258]
[101.77955627 37.21807098]
[104.00466919 22.38402557]
[89.90270233 17.10877800]
[77.20590210 9.01650810]
[66.46930695 -1.53902102]
[58.16227722 -14.09636784]
[52.64796448 -28.10658073]
[50.16742706 -42.95719147]
[50.82910919 -57.99899292]
[54.60407639 -72.57443237]
[61.32731247 -86.04631805]
[70.70490265 -97.82572937]
[82.32689667 -107.39772034]
[95.68522644 -114.34383392]
[110.19593811 -118.36042786]
[125.22467041 -119.27191162]
[140.11444092 -117.03843689]
[154.21432495 -111.75763702]
[166.90795898 -103.66037750]
[177.64039612 -93.10062408]
[185.94248962 -80.54000854]
[191.45127869 -66.52762604]
[193.92597961 -51.67604446]
[193.25837708 -36.63450241]
[189.47767639 -22.06055450]
[182.74914551 -8.59131050]
[173.36691284 3.18441081]
[161.74116516 12.75182533]
[148.38009644 19.69268799]
[133.86781311 23.70357323]
[118.83871460 24.60914421]
[116.61359406 39.44318771]
[114.38848114 54.27722931]
[120.15219879 68.01145172]
[110.45336914 80.51118469]
[108.22824860 95.34522247]
[110.31015015 100.15975189]
[109.54635620 105.79801178]
[105.70969391 110.58517456]
[103.04389954 125.34638977]
[101.92825317 140.30484009]
[102.37486267 155.29820251]
[102.82146454 170.29154968]
[103.26807404 185.28489685]
[103.71467590 200.27824402]
[104.16128540 215.27159119]
[104.60788727 230.26493835]
[105.05449677 245.25830078]
[120.05520630 245.49954224]
[135.02908325 246.42825317]
[149.94462585 248.04249573]
[164.77049255 250.33886719]
[179.47547913 253.31254578]
[194.02867126 256.95727539]
[208.39945984 261.26538086]
[222.55763245 266.22781372]
[236.47340393 271.83413696]
[250.11750793 278.07254028]
[263.46124268 284.92993164]
[276.47659302 292.39187622]
[289.13613892 300.44268799]
[301.41323853 309.06542969]
[313.28213501 318.24194336]
[324.71783447 327.95300293]
[335.69628906 338.17810059]
[346.19442749 348.89578247]
[356.19012451 360.08352661]
[365.66241455 371.71774292]
[374.59133911 383.77401733]
[382.95816040 396.22695923]
[390.74523926 409.05041504]
[397.93621826 422.21737671]
[404.51599121 435.70019531]
[410.47067261 449.47048950]
[415.78778076 463.49929810]
[420.45614624 477.75714111]
[424.46591187 492.21401978]
[427.80865479 506.83953857]
[430.47735596 521.60290527]
[432.46640015 536.47314453]
[433.77160645 551.41888428]
[434.39022827 566.40875244]
[434.32098389 581.41125488]
[433.56396484 596.39477539]
[432.12081909 611.32788086]
[429.99453735 626.17907715]
[427.18963623 640.91717529]
[423.71197510 655.51123047]
[419.56890869 669.93041992]
[414.76910400 684.14459229]
[409.32266235 698.12371826]
[403.24105835 711.83843994]
[396.53710938 725.25988770]
[389.22485352 738.35992432]
[381.31970215 751.11090088]
[372.83825684 763.48608398]
[363.79837036 775.45941162]
[354.21905518 787.00567627]
[344.12048340 798.10058594]
[333.52383423 808.72088623]
[322.45144653 818.84417725]
[310.92654419 828.44921875]
[298.97344971 837.51580811]
[286.61721802 846.02478027]
[273.88388062 853.95837402]
[260.80020142 861.29980469]
[247.39370728 868.03369141]
[233.69256592 874.14587402]
[219.72563171 879.62341309]
[205.52224731 884.45495605]
[191.11228943 888.63012695]
[176.52606201 892.14031982]
[161.79423523 894.97808838]
[146.94779968 897.13751221]
[132.01799011 898.61395264]
[117.03617096 899.40435791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[89 134]
[90 133]
[91 130]
[92 129]
[94 127]
[95 126]
[96 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
