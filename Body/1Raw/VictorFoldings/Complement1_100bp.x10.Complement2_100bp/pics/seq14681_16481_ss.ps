%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[31.01114655 504.02185059]
[32.39534378 519.08636475]
[29.05462837 533.84082031]
[21.31628990 546.83984375]
[9.93845463 556.80975342]
[-3.96419597 562.77398682]
[-19.02962112 564.14807129]
[-33.78186417 560.79748535]
[-46.77565002 553.05041504]
[-56.73797989 541.66589355]
[-62.69284821 527.75927734]
[-64.05685425 512.69293213]
[-60.69636917 497.94293213]
[-52.94061661 484.95434570]
[-41.54943085 474.99963379]
[-27.63879967 469.05407715]
[-12.57154655 467.70016479]
[-9.24928761 453.07272339]
[-5.92702770 438.44525146]
[-2.60476828 423.81777954]
[-10.73516941 411.39071655]
[-7.57429981 396.50906372]
[5.51548481 388.06542969]
[8.83774471 373.43795776]
[12.16000366 358.81048584]
[15.48226357 344.18304443]
[3.35173512 353.00631714]
[-11.64775753 353.12966919]
[-23.92177391 344.50711060]
[-28.89241028 330.35464478]
[-24.70574188 315.95077515]
[-12.92329311 306.66778564]
[2.06037569 305.96798706]
[14.65672493 314.11245728]
[20.16770554 328.06460571]
[25.20462227 313.93557739]
[30.24153709 299.80654907]
[35.27845383 285.67752075]
[40.31536865 271.54849243]
[45.35228729 257.41943359]
[50.38920212 243.29042053]
[55.21519852 229.08796692]
[59.82920837 214.81523132]
[64.44322205 200.54249573]
[68.73734283 186.17028809]
[72.70944214 171.70576477]
[76.68153381 157.24124146]
[80.65363312 142.77671814]
[76.56280518 128.45489502]
[87.67826843 117.19625854]
[91.65036774 102.73172760]
[90.37277222 99.96455383]
[90.07381439 96.67135620]
[90.95024109 93.21370697]
[93.06250763 90.02081299]
[96.31343079 87.53797913]
[101.13942719 73.33552551]
[105.96542358 59.13307190]
[110.79142761 44.93061447]
[115.61742401 30.72815895]
[120.44342041 16.52570343]
[125.26941681 2.32324839]
[128.48269653 -12.32853889]
[130.04321289 -27.24714279]
[122.15686798 -43.88706589]
[133.01109314 -57.67665482]
[134.34931946 -72.61684418]
[135.68756104 -87.55702209]
[137.02578735 -102.49720764]
[138.36402893 -117.43739319]
[139.70225525 -132.37757874]
[141.04049683 -147.31776428]
[142.37872314 -162.25794983]
[143.49436951 -177.21640015]
[144.38719177 -192.18980408]
[145.28001404 -207.16322327]
[146.17282104 -222.13662720]
[139.27064514 -236.37286377]
[147.75177002 -248.61703491]
[136.59111023 -238.59507751]
[121.60430145 -237.96606445]
[109.64311218 -247.01757812]
[106.17604065 -261.61138916]
[112.78817749 -275.07540894]
[126.45654297 -281.25405884]
[140.93215942 -277.32254028]
[149.59744263 -265.07650757]
[152.04316711 -279.87579346]
[154.48889160 -294.67504883]
[156.93461609 -309.47433472]
[142.62265015 -314.05529785]
[129.13021851 -320.67135620]
[116.74492645 -329.18148804]
[105.73077393 -339.40432739]
[96.32252502 -351.12194824]
[88.72071838 -364.08459473]
[83.08738708 -378.01596069]
[79.54259491 -392.61914062]
[78.16191101 -407.58282471]
[78.97476196 -422.58804321]
[81.96382141 -437.31500244]
[87.06538391 -451.44979858]
[94.17069244 -464.69110107]
[103.12831879 -476.75671387]
[113.74730682 -487.38943481]
[125.80133057 -496.36264038]
[139.03344727 -503.48504639]
[153.16163635 -508.60485840]
[167.88471985 -511.61294556]
[182.88888550 -512.44519043]
[197.85433960 -511.08386230]
[212.46206665 -507.55792236]
[226.40071106 -501.94259644]
[239.37318420 -494.35754395]
[251.10295105 -484.96444702]
[261.33999634 -473.96353149]
[269.86614990 -461.58923340]
[276.49963379 -448.10537720]
[281.09906006 -433.79931641]
[283.56643677 -418.97601318]
[283.84912109 -403.95144653]
[281.94110107 -389.04583740]
[277.88305664 -374.57690430]
[271.76144409 -360.85305786]
[263.70681763 -348.16680908]
[253.89082336 -336.78857422]
[242.52268982 -326.96090698]
[229.84472656 -318.89324951]
[216.12716675 -312.75756836]
[201.66239929 -308.68466187]
[186.75875854 -306.76135254]
[171.73388672 -307.02859497]
[169.28816223 -292.22933960]
[166.84243774 -277.43005371]
[164.39671326 -262.63079834]
[162.72517395 -247.72421265]
[169.69120789 -234.55897522]
[161.14622498 -221.24380493]
[160.25341797 -206.27040100]
[159.36059570 -191.29699707]
[158.46778870 -176.32359314]
[160.91156006 -172.22030640]
[160.80363464 -166.53828430]
[157.31890869 -160.91972351]
[155.98068237 -145.97953796]
[154.64244080 -131.03935242]
[153.30421448 -116.09915924]
[151.96597290 -101.15897369]
[150.62774658 -86.21878815]
[149.28950500 -71.27861023]
[147.95127869 -56.33842087]
[155.46438599 -46.85792923]
[154.47175598 -34.40006256]
[144.96182251 -25.68662071]
[143.40129089 -10.76801586]
[152.14002991 -22.95958900]
[164.65272522 -31.23199081]
[179.29310608 -34.49684525]
[194.13497925 -32.32460022]
[207.22564697 -25.00105476]
[216.84281921 -13.48974800]
[221.72116089 0.69481039]
[221.21887207 15.68639851]
[215.40202332 29.51261330]
[205.03591919 40.35438156]
[191.48440552 46.78527832]
[176.53041077 47.95921326]
[162.14140320 43.72172928]
[150.21047974 34.63034439]
[142.30738831 21.88118744]
[139.47187805 7.14924622]
[134.64587402 21.35170174]
[129.81987000 35.55415726]
[124.99388123 49.75661469]
[120.16788483 63.95906830]
[115.34188080 78.16152191]
[110.51588440 92.36398315]
[106.11489105 106.70382690]
[102.14279175 121.16835022]
[105.94950867 136.52476501]
[95.11815643 146.74880981]
[91.14605713 161.21333313]
[87.17396545 175.67785645]
[83.20186615 190.14237976]
[84.52326965 195.19223022]
[83.84348297 199.78474426]
[81.67182922 203.23422241]
[78.71595001 205.15650940]
[74.10194397 219.42924500]
[69.48793030 233.70196533]
[70.49650574 240.23605347]
[68.37266541 245.50733948]
[64.51823425 248.32733154]
[59.48131561 262.45635986]
[54.44440079 276.58538818]
[49.40748215 290.71441650]
[44.37056732 304.84344482]
[39.33365250 318.97247314]
[34.29673386 333.10150146]
[30.10972404 347.50527954]
[26.78746414 362.13275146]
[23.46520424 376.76022339]
[20.14294434 391.38766479]
[28.30111313 404.65725708]
[24.72349548 419.44427490]
[12.02269173 427.14004517]
[8.70043278 441.76751709]
[5.37817287 456.39498901]
[2.05591321 471.02243042]
[15.06006908 478.75204468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[20 206]
[23 203]
[24 202]
[25 201]
[26 200]
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 190]
[43 189]
[44 188]
[45 184]
[46 183]
[47 182]
[48 181]
[50 179]
[51 178]
[56 177]
[57 176]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 155]
[64 154]
[66 151]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 141]
[75 140]
[76 139]
[77 138]
[79 136]
[87 135]
[88 134]
[89 133]
[90 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
