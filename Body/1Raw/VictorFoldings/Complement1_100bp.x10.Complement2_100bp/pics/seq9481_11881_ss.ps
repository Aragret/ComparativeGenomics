%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[96.12809753 886.79986572]
[81.16883087 885.65136719]
[66.28772736 883.74053955]
[51.52359390 881.07238770]
[36.91496658 877.65380859]
[22.49994469 873.49377441]
[8.31614113 868.60314941]
[-5.59944105 862.99462891]
[-19.21049690 856.68292236]
[-32.48151779 849.68444824]
[-45.37788010 842.01745605]
[-57.86594009 833.70202637]
[-69.91311646 824.75976562]
[-81.48797607 815.21398926]
[-92.56032562 805.08966064]
[-103.10128021 794.41320801]
[-113.08333588 783.21246338]
[-122.48045349 771.51660156]
[-131.26811218 759.35620117]
[-139.42338562 746.76293945]
[-146.92500305 733.76971436]
[-153.75340271 720.41033936]
[-159.89074707 706.71978760]
[-165.32102966 692.73370361]
[-170.03010559 678.48858643]
[-174.00566101 664.02160645]
[-177.23735046 649.37048340]
[-179.71672058 634.57348633]
[-181.43730164 619.66918945]
[-182.39462280 604.69647217]
[-182.58618164 589.69439697]
[-182.01147461 574.70214844]
[-180.67199707 559.75878906]
[-178.57124329 544.90325928]
[-175.71470642 530.17443848]
[-172.10983276 515.61065674]
[-167.76602173 501.24996948]
[-162.69461060 487.12979126]
[-156.90882874 473.28698730]
[-150.42376709 459.75765991]
[-143.25634766 446.57711792]
[-135.42527771 433.77972412]
[-126.95097351 421.39889526]
[-117.85555267 409.46691895]
[-108.16274261 398.01495361]
[-97.89782715 387.07281494]
[-87.08759308 376.66909790]
[-75.76023102 366.83093262]
[-63.94530869 357.58395386]
[-51.67364120 348.95236206]
[-38.97724533 340.95858765]
[-25.88924408 333.62356567]
[-12.44378185 326.96636963]
[1.32406080 321.00439453]
[15.37836647 315.75317383]
[29.68247032 311.22647095]
[44.19905090 307.43600464]
[58.89023972 304.39172363]
[73.71770477 302.10156250]
[88.64276886 300.57150269]
[103.62648773 299.80551147]
[103.62648773 284.80551147]
[103.62648773 269.80551147]
[103.62648773 254.80551147]
[103.62648773 239.80551147]
[103.06828308 224.81590271]
[101.95262909 209.85743713]
[100.83698273 194.89898682]
[99.61000824 179.94924927]
[98.27177429 165.00906372]
[96.93354034 150.06887817]
[88.09162140 138.08265686]
[94.56687927 123.64722443]
[93.22864532 108.70703888]
[81.75413513 118.36807251]
[67.01734161 115.57041168]
[59.88167572 102.37638855]
[65.60729218 88.51214600]
[79.97347260 84.19788361]
[92.38916779 92.61249542]
[92.16584015 77.61415863]
[91.94251251 62.61582184]
[91.71918488 47.61748123]
[91.38420868 32.62122345]
[78.43415833 20.86046028]
[78.00502014 3.71022058]
[89.87408447 -8.20464325]
[89.20429993 -23.18968201]
[80.85851288 -36.63059998]
[88.01979065 -49.69066620]
[87.35000610 -64.67570496]
[86.68022156 -79.66074371]
[78.33442688 -93.10166168]
[85.49570465 -106.16172791]
[84.82592010 -121.14676666]
[70.29318237 -125.39861298]
[57.92987823 -134.14089966]
[49.07708740 -146.42530823]
[44.69509888 -160.91934204]
[45.25923157 -176.05078125]
[50.70829773 -190.17828369]
[60.45122147 -201.76940918]
[73.43115997 -209.56683350]
[88.24015808 -212.72474670]
[103.27182770 -210.90061951]
[116.89566803 -204.29229736]
[127.63384247 -193.61662292]
[134.32157898 -180.03158569]
[136.23342896 -165.01081848]
[133.16200256 -150.18363953]
[125.44047546 -137.15841675]
[113.90641785 -127.34799194]
[99.81095886 -121.81655121]
[100.48074341 -106.83151245]
[108.77863312 -94.46242523]
[101.66526031 -80.33052826]
[102.33504486 -65.34548950]
[103.00482941 -50.36045456]
[111.30271149 -37.99136353]
[104.18933868 -23.85946846]
[104.85912323 -8.87442875]
[115.49117279 -1.59507179]
[120.05744934 10.66181278]
[116.68091583 23.49962616]
[106.37755585 32.17461777]
[109.71881866 38.76686859]
[106.71752167 47.39415359]
[106.94084930 62.39249039]
[107.16417694 77.39083099]
[107.38750458 92.38916779]
[108.16882324 107.36880493]
[109.50706482 122.30899048]
[118.44470215 135.36384583]
[111.87372589 148.73065186]
[113.21195984 163.67083740]
[114.55019379 178.61102295]
[118.43273926 186.87925720]
[115.79543304 193.78334045]
[116.91108704 208.74179077]
[118.02673340 223.70024109]
[129.64381409 214.21112061]
[144.33731079 217.22787476]
[151.27574158 230.52668762]
[145.34434509 244.30415344]
[130.91552734 248.40403748]
[118.62648773 239.80551147]
[118.62648773 254.80551147]
[118.62648773 269.80551147]
[118.62648773 284.80551147]
[118.62648773 299.80551147]
[133.61021423 300.57150269]
[148.53527832 302.10156250]
[163.36274719 304.39172363]
[178.05392456 307.43600464]
[192.57051086 311.22647095]
[206.87461853 315.75317383]
[220.92892456 321.00439453]
[234.69676208 326.96636963]
[248.14222717 333.62356567]
[261.23022461 340.95858765]
[273.92663574 348.95236206]
[286.19830322 357.58395386]
[298.01321411 366.83093262]
[309.34057617 376.66909790]
[320.15081787 387.07281494]
[330.41571045 398.01495361]
[340.10852051 409.46691895]
[349.20394897 421.39889526]
[357.67825317 433.77972412]
[365.50933838 446.57711792]
[372.67675781 459.75765991]
[379.16180420 473.28698730]
[384.94760132 487.12979126]
[390.01901245 501.24996948]
[394.36282349 515.61065674]
[397.96768188 530.17443848]
[400.82421875 544.90325928]
[402.92498779 559.75878906]
[404.26446533 574.70214844]
[404.83917236 589.69439697]
[404.64761353 604.69647217]
[403.69027710 619.66918945]
[401.96969604 634.57348633]
[399.49032593 649.37048340]
[396.25863647 664.02160645]
[392.28308105 678.48858643]
[387.57400513 692.73370361]
[382.14373779 706.71978760]
[376.00637817 720.41033936]
[369.17797852 733.76971436]
[361.67636108 746.76293945]
[353.52108765 759.35620117]
[344.73342896 771.51660156]
[335.33630371 783.21246338]
[325.35424805 794.41320801]
[314.81329346 805.08966064]
[303.74096680 815.21398926]
[292.16610718 824.75976562]
[280.11892700 833.70202637]
[267.63085938 842.01745605]
[254.73449707 849.68444824]
[241.46347046 856.68292236]
[227.85241699 862.99462891]
[213.93684387 868.60314941]
[199.75303650 873.49377441]
[185.33801270 877.65380859]
[170.72938538 881.07238770]
[155.96525574 883.74053955]
[141.08415222 885.65136719]
[126.12488556 886.79986572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 140]
[67 139]
[68 138]
[69 136]
[70 135]
[71 134]
[73 132]
[74 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 125]
[87 121]
[88 120]
[90 118]
[91 117]
[92 116]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
