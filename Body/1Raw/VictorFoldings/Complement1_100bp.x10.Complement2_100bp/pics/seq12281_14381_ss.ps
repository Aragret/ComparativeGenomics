%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[184.09588623 256.75366211]
[196.60829163 248.38558960]
[190.94551086 234.49555969]
[185.28271484 220.60554504]
[179.61993408 206.71551514]
[173.95713806 192.82548523]
[165.82192993 180.22317505]
[155.49525452 169.34384155]
[145.16859436 158.46450806]
[130.31872559 158.33439636]
[119.69103241 147.44830322]
[119.92819214 131.87327576]
[109.60152435 120.99394226]
[99.27485657 110.11460876]
[91.88257599 106.90107727]
[88.87691498 98.99558258]
[73.83587646 94.08868408]
[70.90272522 79.48574829]
[60.73917770 68.45386505]
[50.57563019 57.42199326]
[40.41208267 46.39011383]
[30.24853706 35.35823822]
[31.36230087 50.31682968]
[24.30580330 63.55336380]
[11.26557350 70.96635437]
[-3.71772981 70.25880432]
[-16.00136757 61.64995575]
[-21.77911949 47.80735779]
[-19.26068878 33.02028656]
[-9.22643757 21.87067604]
[5.21441317 17.81335640]
[19.58742523 22.10567284]
[10.98886013 9.81483459]
[2.39029646 -2.47600293]
[-6.20826721 -14.76684093]
[-14.80683136 -27.05767822]
[-23.40539551 -39.34851837]
[-36.23147964 -31.56067657]
[-49.53477478 -24.61940193]
[-63.25947571 -18.55380821]
[-77.34802246 -13.38933659]
[-91.74131775 -9.14764690]
[-106.37899780 -5.84653187]
[-121.19965363 -3.49983764]
[-136.14112854 -2.11740708]
[-151.14076233 -1.70503819]
[-166.13562012 -2.26446104]
[-181.06283569 -3.79332900]
[-195.85977173 -6.28522921]
[-210.46437073 -9.72971058]
[-224.81538391 -14.11232471]
[-238.85261536 -19.41469002]
[-252.51718140 -25.61456490]
[-265.75177002 -32.68594742]
[-278.50088501 -40.59917450]
[-290.71102905 -49.32105637]
[-302.33099365 -58.81501007]
[-313.31207275 -69.04121399]
[-323.60815430 -79.95677948]
[-333.17608643 -91.51591492]
[-341.97570801 -103.67014313]
[-349.97015381 -116.36848450]
[-357.12588501 -129.55767822]
[-363.41284180 -143.18238831]
[-368.80468750 -157.18548584]
[-373.27880859 -171.50823975]
[-376.81643677 -186.09056091]
[-379.40274048 -200.87129211]
[-381.02685547 -215.78843689]
[-381.68197632 -230.77941895]
[-381.36535645 -245.78137207]
[-380.07830811 -260.73138428]
[-377.82626343 -275.56671143]
[-374.61865234 -290.22515869]
[-370.46890259 -304.64523315]
[-365.39447021 -318.76644897]
[-359.41659546 -332.52960205]
[-352.56036377 -345.87692261]
[-344.85455322 -358.75247192]
[-336.33148193 -371.10220337]
[-327.02685547 -382.87432861]
[-316.97973633 -394.01947021]
[-306.23226929 -404.49090576]
[-294.82952881 -414.24468994]
[-282.81933594 -423.23992920]
[-270.25207520 -431.43887329]
[-257.18045044 -438.80715942]
[-243.65928650 -445.31384277]
[-229.74530029 -450.93167114]
[-215.49685669 -455.63705444]
[-200.97370911 -459.41024780]
[-186.23678589 -462.23547363]
[-171.34788513 -464.10086060]
[-156.36946106 -464.99853516]
[-141.36434937 -464.92480469]
[-126.39547729 -463.87994385]
[-111.52562714 -461.86834717]
[-96.81717682 -458.89840698]
[-82.33181763 -454.98266602]
[-68.13030243 -450.13745117]
[-54.27220154 -444.38317871]
[-40.81563950 -437.74389648]
[-27.81705666 -430.24752808]
[-15.33097649 -421.92544556]
[-3.40976954 -412.81262207]
[7.89656210 -402.94723511]
[18.54059601 -392.37069702]
[28.47768593 -381.12731934]
[37.66615295 -369.26431274]
[46.06745529 -356.83142090]
[53.64635849 -343.88076782]
[60.37107086 -330.46670532]
[66.21338654 -316.64547729]
[71.14880371 -302.47506714]
[75.15661621 -288.01489258]
[78.22001648 -273.32565308]
[80.32614899 -258.46890259]
[81.46619415 -243.50695801]
[81.63536072 -228.50262451]
[80.83293915 -213.51879883]
[79.06230164 -198.61833191]
[76.33086395 -183.86373901]
[72.65009308 -169.31687927]
[68.03542328 -155.03880310]
[62.50620651 -141.08937073]
[56.08563614 -127.52709198]
[48.80064774 -114.40886688]
[40.68179321 -101.78971100]
[31.76312828 -89.72255707]
[22.08205795 -78.25801086]
[11.67919159 -67.44416046]
[0.59815997 -57.32637405]
[-11.11455727 -47.94708252]
[-2.51599336 -35.65624237]
[6.08257055 -23.36540413]
[14.68113422 -11.07456684]
[23.27969933 1.21627104]
[31.87826157 13.50710869]
[41.28041458 25.19469070]
[51.44396210 36.22656631]
[61.60750580 47.25844574]
[71.77105713 58.29032135]
[81.93460083 69.32219696]
[96.24868011 73.44001770]
[99.90879822 88.83203125]
[110.15419006 99.78794098]
[120.48085785 110.66727448]
[130.80752563 121.54660797]
[146.37376404 122.12104797]
[156.69149780 133.30134583]
[156.04792786 148.13783264]
[166.37458801 159.01716614]
[176.70126343 169.89649963]
[172.25544739 155.57049561]
[171.18585205 140.60867310]
[173.54856873 125.79592133]
[179.21968079 111.90928650]
[187.90165710 99.67723083]
[199.13908386 89.74142456]
[212.34245300 82.62307739]
[226.81916809 78.69561005]
[241.80978394 78.16503906]
[256.52792358 81.05921173]
[270.20150757 87.22628784]
[282.11325073 96.34277344]
[291.63830566 107.93041992]
[298.27697754 121.38137054]
[301.68099976 135.99002075]
[301.67187500 150.99002075]
[298.25000000 165.59449768]
[291.59490967 179.03733826]
[282.05575562 190.61335754]
[270.13287354 199.71528625]
[256.45178223 205.86567688]
[241.73010254 208.74188232]
[226.74015808 208.19302368]
[212.26824951 204.24789429]
[199.07357788 197.11344910]
[187.84716797 187.16270447]
[193.50996399 201.05271912]
[199.17274475 214.94274902]
[204.83552551 228.83277893]
[210.49832153 242.72280884]
[225.29484558 239.95738220]
[240.34516907 240.22741699]
[255.03295898 243.52188110]
[268.75677490 249.70584106]
[280.95465088 258.52609253]
[291.12707520 269.62142944]
[298.85751343 282.53753662]
[303.82937622 296.74548340]
[305.83908081 311.66345215]
[304.80432129 326.68057251]
[300.76748657 341.18191528]
[293.89389038 354.57366943]
[284.46499634 366.30740356]
[272.86691284 375.90267944]
[259.57455444 382.96652222]
[245.13224792 387.20974731]
[230.13140869 388.45852661]
[215.18629456 386.66174316]
[200.90890503 381.89300537]
[187.88388062 374.34756470]
[176.64460754 364.33438110]
[167.65130615 352.26351929]
[161.27226257 338.62927246]
[157.76869202 323.98995972]
[157.28405762 308.94503784]
[159.83821106 294.11056519]
[165.32655334 280.09402466]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 153]
[8 152]
[9 151]
[12 148]
[13 147]
[14 146]
[16 145]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[32 138]
[33 137]
[34 136]
[35 135]
[36 134]
[37 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
