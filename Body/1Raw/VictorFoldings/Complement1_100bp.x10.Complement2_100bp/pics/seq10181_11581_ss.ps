%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[210.35299683 247.01518250]
[198.00276184 255.52076721]
[185.00032043 262.99139404]
[171.43223572 269.37734985]
[157.38877869 274.63613892]
[142.96340942 278.73275757]
[128.25212097 281.63992310]
[113.35282898 283.33834839]
[98.36467743 283.81668091]
[83.38740540 283.07174683]
[68.52069092 281.10852051]
[53.86346054 277.94006348]
[39.51325989 273.58746338]
[25.56558609 268.07965088]
[12.11325741 261.45330811]
[-0.75420374 253.75251770]
[-12.95116711 245.02854919]
[-24.39646530 235.33944702]
[-35.01393127 224.74969482]
[-44.73290634 213.32975769]
[-53.48871613 201.15562439]
[-61.22309494 188.30833435]
[-67.88456726 174.87336731]
[-73.42879486 160.94013977]
[-77.81890106 146.60136414]
[-81.02565765 131.95245361]
[-83.02772522 117.09091949]
[-83.81178284 102.11564636]
[-83.37261200 87.12629700]
[-81.71314240 72.22261810]
[-78.84439850 57.50379181]
[-74.78549194 43.06776428]
[-69.56342316 29.01061249]
[-63.21294785 15.42587948]
[-55.77632141 2.40396929]
[-47.30303955 -9.96846008]
[-37.84948730 -21.60907364]
[-27.47857475 -32.44040298]
[-16.25932121 -42.39037323]
[-4.26638556 -51.39276505]
[8.42042065 -59.38766861]
[21.71666908 -66.32188416]
[35.53387451 -72.14925385]
[49.78009033 -76.83101654]
[64.36051178 -80.33600616]
[79.17810059 -82.64089203]
[94.13426208 -83.73034668]
[109.12944794 -83.59711456]
[124.06388855 -82.24208069]
[138.83818054 -79.67427063]
[153.35401917 -75.91075897]
[167.51480103 -70.97660828]
[173.58863831 -84.69187164]
[179.66247559 -98.40713501]
[185.73629761 -112.12240601]
[191.81013489 -125.83766937]
[197.88397217 -139.55293274]
[203.95780945 -153.26820374]
[210.03164673 -166.98347473]
[196.64421082 -173.75672913]
[183.62321472 -181.21017456]
[171.00317383 -189.32405090]
[158.81756592 -198.07682800]
[147.09869385 -207.44529724]
[135.87763977 -217.40461731]
[125.18415070 -227.92839050]
[115.04660034 -238.98869324]
[105.49185944 -250.55619812]
[96.54526520 -262.60021973]
[88.23055267 -275.08886719]
[80.56976318 -287.98895264]
[73.58321381 -301.26632690]
[67.28943634 -314.88574219]
[61.70510864 -328.81109619]
[56.84505081 -343.00546265]
[52.72214508 -357.43121338]
[49.34732437 -372.05004883]
[46.72954178 -386.82327271]
[44.87573624 -401.71163940]
[43.79082870 -416.67568970]
[43.47768784 -431.67578125]
[43.93715286 -446.67208862]
[45.16799927 -461.62484741]
[47.16696548 -476.49441528]
[49.92874908 -491.24139404]
[53.44602585 -505.82662964]
[57.70947266 -520.21142578]
[62.70778275 -534.35772705]
[68.42769623 -548.22790527]
[74.85404968 -561.78527832]
[81.96979523 -574.99389648]
[89.75607300 -587.81860352]
[98.19223022 -600.22552490]
[107.25589752 -612.18170166]
[116.92303467 -623.65545654]
[127.16800690 -634.61633301]
[137.96365356 -645.03527832]
[149.28134155 -654.88464355]
[161.09104919 -664.13836670]
[173.36146545 -672.77185059]
[186.06007385 -680.76220703]
[199.15316772 -688.08825684]
[212.60603333 -694.73059082]
[226.38301086 -700.67156982]
[240.44754028 -705.89544678]
[254.76235962 -710.38836670]
[269.28948975 -714.13842773]
[283.99038696 -717.13568115]
[298.82611084 -719.37219238]
[313.75726318 -720.84197998]
[328.74432373 -721.54119873]
[343.74746704 -721.46795654]
[358.72698975 -720.62249756]
[373.64309692 -719.00701904]
[388.45626831 -716.62579346]
[403.12722778 -713.48516846]
[417.61703491 -709.59350586]
[431.88729858 -704.96105957]
[445.90017700 -699.60009766]
[459.61849976 -693.52490234]
[473.00588989 -686.75158691]
[486.02685547 -679.29809570]
[498.64685059 -671.18414307]
[510.83239746 -662.43127441]
[522.55120850 -653.06274414]
[533.77221680 -643.10333252]
[544.46563721 -632.57952881]
[554.60314941 -621.51916504]
[564.15783691 -609.95159912]
[573.10430908 -597.90753174]
[581.41894531 -585.41882324]
[589.07971191 -572.51867676]
[596.06616211 -559.24127197]
[602.35986328 -545.62182617]
[607.94409180 -531.69647217]
[612.80407715 -517.50207520]
[616.92694092 -503.07629395]
[620.30163574 -488.45742798]
[622.91937256 -473.68420410]
[624.77307129 -458.79583740]
[625.85791016 -443.83175659]
[626.17095947 -428.83166504]
[625.71136475 -413.83538818]
[624.48046875 -398.88259888]
[622.48138428 -384.01303101]
[619.71954346 -369.26611328]
[616.20214844 -354.68087769]
[611.93865967 -340.29608154]
[606.94024658 -326.14984131]
[601.22027588 -312.27966309]
[594.79382324 -298.72232056]
[587.67797852 -285.51379395]
[579.89166260 -272.68908691]
[571.45544434 -260.28222656]
[562.39172363 -248.32609558]
[552.72448730 -236.85241699]
[542.47943115 -225.89160156]
[531.68377686 -215.47271729]
[520.36602783 -205.62339783]
[508.55624390 -196.36976624]
[496.28576660 -187.73635864]
[483.58712769 -179.74606323]
[470.49398804 -172.42008972]
[457.04107666 -165.77783203]
[443.26406860 -159.83692932]
[429.19952393 -154.61312866]
[414.88467407 -150.12026978]
[400.35754395 -146.37030029]
[385.65661621 -143.37312317]
[370.82089233 -141.13671875]
[355.88970947 -139.66700745]
[340.90264893 -138.96788025]
[325.89947510 -139.04119873]
[310.91998291 -139.88674927]
[296.00387573 -141.50231934]
[281.19073486 -143.88362122]
[266.51980591 -147.02432251]
[252.02999878 -150.91609192]
[237.75975037 -155.54862976]
[223.74690247 -160.90963745]
[217.67306519 -147.19436646]
[211.59924316 -133.47911072]
[205.52540588 -119.76383972]
[199.45156860 -106.04856873]
[193.37773132 -92.33330536]
[187.30390930 -78.61803436]
[181.23007202 -64.90277100]
[194.40084839 -57.73309326]
[206.94340515 -49.51373672]
[218.77426147 -40.29940033]
[229.81472778 -30.15139771]
[239.99128723 -19.13726616]
[249.23623657 -7.33030128]
[257.48806763 5.19092321]
[264.69183350 18.34308243]
[270.79959106 32.03865051]
[275.77075195 46.18648529]
[279.57217407 60.69244003]
[282.17858887 75.45997620]
[283.57263184 90.39082336]
[283.74505615 105.38561249]
[282.69467163 120.34456635]
[280.42852783 135.16813660]
[276.96163940 149.75765991]
[272.31713867 164.01606750]
[266.52587891 177.84844971]
[259.62643433 191.16276550]
[251.66470337 203.87042236]
[242.69367981 215.88684082]
[232.77307129 227.13206482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 182]
[58 181]
[59 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
