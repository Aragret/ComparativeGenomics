%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[99.29100800 392.19436646]
[100.43373108 377.21411133]
[103.60568237 362.52899170]
[108.74778748 348.41259766]
[115.76423645 335.12789917]
[124.52433014 322.92239380]
[134.86486816 312.02343750]
[146.59320068 302.63409424]
[159.49085999 294.92929077]
[153.62188721 281.12509155]
[147.75292969 267.32092285]
[141.88397217 253.51675415]
[129.78378296 244.83143616]
[131.50473022 229.10411072]
[125.63577271 215.29994202]
[113.53557587 206.61462402]
[115.25653839 190.88729858]
[109.38758087 177.08311462]
[107.43109131 191.95498657]
[99.99897766 204.98431396]
[88.19374847 214.23831177]
[73.76662445 218.34419250]
[58.85779953 216.69287109]
[45.67890167 209.52929688]
[36.18494034 197.91616821]
[31.78429604 183.57621765]
[33.12977219 168.63668823]
[40.02177429 155.31376648]
[51.43791962 145.58381653]
[65.68469238 140.89025879]
[80.64865875 141.92932129]
[94.11000824 148.54685974]
[104.07086182 159.75958252]
[101.18559265 145.03968811]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[86.15850830 108.53182983]
[84.00343323 97.08644867]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[82.05809784 42.85222244]
[79.39230347 28.09100533]
[69.32560730 15.88558769]
[74.67785645 1.98584831]
[71.02976990 -12.56377220]
[66.41575623 -26.83650589]
[61.80175018 -41.10923767]
[57.18774033 -55.38197327]
[52.57373047 -69.65470886]
[47.93113327 -74.36191559]
[46.56740570 -79.87891388]
[48.04168320 -84.42155457]
[43.85467148 -98.82533264]
[39.66765976 -113.22911835]
[35.48064804 -127.63289642]
[31.29363823 -142.03668213]
[27.10662651 -156.44046021]
[22.91961670 -170.84423828]
[8.20735550 -167.87507629]
[-6.70176220 -166.14743042]
[-21.70315742 -165.67341614]
[-36.69160461 -166.45635986]
[-51.56196976 -168.49076843]
[-66.20994568 -171.76235962]
[-80.53278351 -176.24821472]
[-94.43002319 -181.91683960]
[-107.80417633 -188.72848511]
[-120.56143951 -196.63537598]
[-132.61231995 -205.58203125]
[-143.87228394 -215.50572205]
[-154.26237488 -226.33682251]
[-163.70968628 -237.99935913]
[-172.14796448 -250.41152954]
[-179.51802063 -263.48626709]
[-185.76814270 -277.13186646]
[-190.85450745 -291.25262451]
[-194.74142456 -305.74945068]
[-197.40164185 -320.52072144]
[-198.81648254 -335.46276855]
[-198.97604370 -350.47079468]
[-197.87919617 -365.43954468]
[-195.53363037 -380.26400757]
[-191.95579529 -394.84020996]
[-187.17080688 -409.06591797]
[-181.21220398 -422.84130859]
[-174.12179565 -436.06979370]
[-165.94931030 -448.65856934]
[-156.75209045 -460.51931763]
[-146.59463501 -471.56887817]
[-135.54818726 -481.72970581]
[-123.69023895 -490.93054199]
[-111.10396576 -499.10687256]
[-97.87765503 -506.20132446]
[-84.10408020 -512.16412354]
[-69.87985229 -516.95349121]
[-55.30474091 -520.53576660]
[-40.48099136 -522.88586426]
[-25.51257706 -523.98730469]
[-10.50449562 -523.83233643]
[4.43798256 -522.42205811]
[19.21004486 -519.76635742]
[33.70807266 -515.88385010]
[47.83037186 -510.80181885]
[61.47788620 -504.55584717]
[74.55487823 -497.18981934]
[86.96963501 -488.75534058]
[98.63506317 -479.31158447]
[109.46933746 -468.92480469]
[119.39646149 -457.66787720]
[128.34681702 -445.61972046]
[136.25759888 -432.86486816]
[143.07333374 -419.49279785]
[148.74620056 -405.59732056]
[153.23643494 -391.27584839]
[156.51251221 -376.62887573]
[158.55146790 -361.75912476]
[159.33898926 -346.77090454]
[158.86955261 -331.76937866]
[157.14646912 -316.85974121]
[154.18179321 -302.14657593]
[149.99635315 -287.73306274]
[144.61949158 -273.72036743]
[138.08892822 -260.20672607]
[130.45046997 -247.28697205]
[121.75769043 -235.05168152]
[112.07156372 -223.58671570]
[101.46004486 -212.97247314]
[89.99755096 -203.28341675]
[77.76449585 -194.58750916]
[64.84668732 -186.94572449]
[51.33472443 -180.41169739]
[37.32339859 -175.03125000]
[41.51041031 -160.62747192]
[45.69742203 -146.22369385]
[49.88443375 -131.81991577]
[54.07144165 -117.41612244]
[58.25845337 -103.01234436]
[62.44546509 -88.60855865]
[66.84646606 -74.26871490]
[71.46047211 -59.99598312]
[76.07448578 -45.72324753]
[80.68849182 -31.45051575]
[85.30249786 -17.17778206]
[90.55098724 -31.22959137]
[102.49921417 -40.29821014]
[117.44489288 -41.57363129]
[130.75694275 -34.66064453]
[138.31048584 -21.70132065]
[137.76495361 -6.71124411]
[129.28941345 5.66474676]
[115.51008606 11.59181595]
[100.69664764 9.23339653]
[89.43907166 -0.67994714]
[99.31509399 10.46965027]
[94.15351868 25.42521095]
[96.81932068 40.18642807]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[115.97894287 96.99128723]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[115.90548706 142.15441895]
[118.79075623 156.87431335]
[123.19175720 171.21415710]
[129.06071472 185.01834106]
[141.58070374 194.69100952]
[139.43995667 209.43096924]
[145.30891418 223.23515320]
[157.82888794 232.90782166]
[155.68814087 247.64778137]
[161.55711365 261.45196533]
[167.42607117 275.25613403]
[173.29502869 289.06030273]
[187.79232788 285.11795044]
[202.69142151 283.18643188]
[217.71475220 283.30172729]
[232.58244324 285.46166992]
[247.01751709 289.62606812]
[260.75106812 295.71734619]
[273.52725220 303.62197876]
[285.10803223 313.19271851]
[295.27767944 324.25128174]
[303.84674072 336.59167480]
[310.65557861 349.98394775]
[315.57733154 364.17868042]
[318.52035522 378.91137695]
[319.42977905 393.90759277]
[318.28869629 408.88796997]
[315.11831665 423.57342529]
[309.97775269 437.69036865]
[302.96273804 450.97583008]
[294.20397949 463.18228149]
[283.86462402 474.08236694]
[272.13729858 483.47296143]
[259.24047852 491.17919922]
[245.41441345 497.05746460]
[230.91670227 500.99826050]
[216.01739502 502.92816162]
[200.99407959 502.81124878]
[186.12661743 500.64965820]
[171.69198608 496.48370361]
[157.95909119 490.39096069]
[145.18377686 482.48495483]
[133.60403442 472.91296387]
[123.43558502 461.85327148]
[114.86785126 449.51199341]
[108.06046295 436.11895752]
[103.14023590 421.92370605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[12 172]
[14 170]
[15 169]
[17 167]
[18 166]
[33 165]
[34 164]
[35 163]
[36 162]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[45 154]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
