%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[205.15653992 558.18853760]
[212.51026917 545.08044434]
[221.77886963 533.24853516]
[232.74504089 522.97021484]
[245.15173340 514.48645020]
[238.67224121 500.95809937]
[232.19274902 487.42977905]
[225.71324158 473.90142822]
[223.11717224 472.84381104]
[220.78359985 470.69415283]
[219.13058472 467.54727173]
[218.53414917 463.64743042]
[219.27772522 459.36944580]
[213.61494446 445.47943115]
[207.95216370 431.58938599]
[202.28936768 417.69937134]
[196.62658691 403.80932617]
[186.44233704 402.52401733]
[177.64176941 397.08477783]
[171.84811401 388.41604614]
[170.16250610 378.04483032]
[172.95527649 367.83172607]
[179.78712463 359.63723755]
[174.75019836 345.50820923]
[169.71328735 331.37918091]
[164.67637634 317.25015259]
[153.11459351 307.86001587]
[155.76860046 292.26300049]
[150.73168945 278.13397217]
[145.69477844 264.00494385]
[129.77578735 262.61331177]
[116.00725555 254.38890076]
[107.17167664 240.93467712]
[105.08039856 224.91635132]
[110.20240784 209.53425598]
[121.56041718 197.88395691]
[116.31369781 183.83149719]
[111.06698608 169.77902222]
[105.82026672 155.72654724]
[100.57354736 141.67407227]
[97.95494843 156.44374084]
[89.94846344 169.12821960]
[77.74178314 177.84585571]
[63.14572144 181.30343628]
[48.32549667 178.98803711]
[35.47961426 171.24314880]
[26.51367950 159.21768188]
[22.75773430 144.69552612]
[24.76895332 129.83097839]
[32.24898529 116.82908630]
[44.08820724 107.61861420]
[58.53034210 103.56587219]
[73.43299103 105.27207184]
[86.58542633 112.48410797]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[74.62413788 69.75484467]
[71.90755463 52.81568527]
[82.07838440 39.42191696]
[79.41259003 24.66070175]
[66.71289062 15.64097977]
[64.21967316 0.63303071]
[72.89686584 -11.41860676]
[70.23107147 -26.17982483]
[67.56526947 -40.94104004]
[64.89947510 -55.70225906]
[62.23368073 -70.46347809]
[59.12957382 -85.13877869]
[55.58990097 -99.71515656]
[51.94181061 -114.26477051]
[48.18551254 -128.78683472]
[44.42921066 -143.30889893]
[40.67290878 -157.83094788]
[27.46439934 -170.66125488]
[32.80963516 -187.37638855]
[28.83753967 -201.84091187]
[24.86544418 -216.30543518]
[20.89334679 -230.76995850]
[16.92125130 -245.23448181]
[1.91073692 -244.15249634]
[-13.02240086 -246.02001953]
[-27.30417252 -250.76524353]
[-40.38562393 -258.20581055]
[-51.76393890 -268.05569458]
[-61.00176620 -279.93627930]
[-67.74403381 -293.39096069]
[-71.73157501 -307.90252686]
[-72.81112671 -322.91320801]
[-70.94119263 -337.84603882]
[-66.19364929 -352.12704468]
[-58.75097275 -365.20730591]
[-48.89925003 -376.58401489]
[-37.01715088 -385.81991577]
[-23.56139183 -392.56002808]
[-9.04917336 -396.54519653]
[5.96169043 -397.62231445]
[20.89422226 -395.74996948]
[35.17445755 -391.00012207]
[48.25350189 -383.55532837]
[59.62862778 -373.70178223]
[68.86260986 -361.81817627]
[75.60051727 -348.36132812]
[79.58335876 -333.84844971]
[80.65805054 -318.83743286]
[78.78328705 -303.90518188]
[74.03112030 -289.62573242]
[66.58421326 -276.54788208]
[56.72880554 -265.17434692]
[44.84371567 -255.94230652]
[31.38577461 -249.20657349]
[35.35787201 -234.74205017]
[39.32996750 -220.27752686]
[43.30206299 -205.81300354]
[47.27415848 -191.34848022]
[57.62877655 -185.09480286]
[61.05637360 -173.07667542]
[55.19496918 -161.58724976]
[58.95127106 -147.06518555]
[62.70756912 -132.54313660]
[66.46387482 -118.02107239]
[71.18222046 -112.33258057]
[70.16627502 -103.25482941]
[73.70594788 -88.67845154]
[76.02696991 -87.10651398]
[77.86517334 -84.52046967]
[78.83119202 -81.09961700]
[78.60766602 -77.16076660]
[76.99489594 -73.12927246]
[79.66069794 -58.36805344]
[82.32649231 -43.60683823]
[84.99228668 -28.84561920]
[87.65808105 -14.08440208]
[100.00257874 -5.82916784]
[102.91635895 9.10283089]
[94.17380524 21.99490547]
[96.83959961 36.75612259]
[108.34886932 42.54977036]
[114.51174164 54.08671570]
[112.88061523 67.26055145]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[114.62601471 136.42736816]
[119.87273407 150.47982788]
[125.11945343 164.53230286]
[130.36616516 178.58477783]
[135.61288452 192.63725281]
[149.72601318 193.38973999]
[162.44783020 199.44612122]
[171.87179565 209.86219788]
[176.59956360 223.04319763]
[175.94842529 236.98793030]
[170.04966736 249.59254456]
[159.82380676 258.96804810]
[164.86071777 273.09707642]
[169.89762878 287.22610474]
[181.81968689 297.62683105]
[178.80540466 312.21322632]
[183.84231567 326.34225464]
[188.87922668 340.47128296]
[193.91615295 354.60031128]
[212.49981689 362.23751831]
[219.36949158 380.79315186]
[210.51661682 398.14654541]
[216.17939758 412.03659058]
[221.84217834 425.92660522]
[227.50497437 439.81661987]
[233.16775513 453.70666504]
[239.24159241 467.42193604]
[245.72108459 480.95028687]
[252.20057678 494.47860718]
[258.68008423 508.00695801]
[273.06704712 503.65771484]
[287.94931030 501.55572510]
[302.97802734 501.75024414]
[317.80093384 504.23672485]
[332.07049561 508.95687866]
[345.45223999 515.80004883]
[357.63250732 524.60583496]
[368.32574463 535.16778564]
[377.28131104 547.23834229]
[384.28924561 560.53454590]
[389.18527222 574.74475098]
[391.85467529 589.53576660]
[392.23480225 604.56097412]
[390.31680298 619.46807861]
[386.14559937 633.90765381]
[379.81900024 647.54119873]
[371.48529053 660.04919434]
[361.33981323 671.13836670]
[349.62042236 680.54882812]
[336.60183716 688.05993652]
[322.58920288 693.49560547]
[307.91104126 696.72845459]
[292.91137695 697.68273926]
[277.94183350 696.33599854]
[263.35336304 692.71984863]
[249.48788452 686.91906738]
[236.67045593 679.06958008]
[225.20153809 669.35546875]
[215.34996033 658.00439453]
[207.34667969 645.28240967]
[201.37928772 631.48785400]
[197.58767700 616.94396973]
[196.06071472 601.99176025]
[196.83421326 586.98168945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[7 174]
[8 173]
[13 172]
[14 171]
[15 170]
[16 169]
[17 168]
[23 165]
[24 164]
[25 163]
[26 162]
[28 160]
[29 159]
[30 158]
[36 151]
[37 150]
[38 149]
[39 148]
[40 147]
[55 146]
[56 145]
[57 143]
[58 142]
[61 138]
[62 137]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 125]
[71 124]
[72 122]
[73 121]
[74 120]
[75 119]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
