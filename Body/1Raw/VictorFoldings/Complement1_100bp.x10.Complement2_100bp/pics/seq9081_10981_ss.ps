%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[145.52384949 712.59747314]
[132.80831909 704.63061523]
[120.62936401 695.86541748]
[109.03701019 686.33795166]
[98.07891083 676.08728027]
[87.80008698 665.15557861]
[78.24278259 653.58782959]
[69.44626617 641.43145752]
[61.44668961 628.73651123]
[54.27692032 615.55505371]
[47.96642303 601.94134521]
[42.54112625 587.95129395]
[38.02332306 573.64239502]
[34.43158722 559.07336426]
[31.78066826 544.30419922]
[30.08146286 529.39556885]
[29.34095383 514.40863037]
[29.56218529 499.40509033]
[30.74424553 484.44653320]
[32.88227844 469.59445190]
[35.96749878 454.90985107]
[39.98722839 440.45312500]
[44.92494965 426.28363037]
[50.76037216 412.45959473]
[57.46951294 399.03787231]
[65.02481079 386.07357788]
[73.39521027 373.61996460]
[82.54631805 361.72824097]
[92.44053650 350.44729614]
[103.03719330 339.82342529]
[114.29276276 329.90032959]
[126.16098022 320.71875000]
[138.59307861 312.31646729]
[151.53797913 304.72796631]
[164.94247437 297.98443604]
[159.07351685 284.18026733]
[153.20454407 270.37609863]
[147.69456482 265.45046997]
[147.35266113 256.32241821]
[141.68988037 242.43240356]
[136.02709961 228.54237366]
[130.36430359 214.65234375]
[124.70152283 200.76232910]
[120.72501373 198.11724854]
[118.36791229 192.94606018]
[119.08371735 186.37345886]
[113.83699799 172.32098389]
[105.33041382 184.67565918]
[90.37886810 185.88026428]
[80.00407410 175.04681396]
[81.85395050 160.16133118]
[94.56483459 152.19682312]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[79.80423737 68.60427094]
[81.06427765 61.32181931]
[77.09217834 46.85729599]
[73.12008667 32.39277267]
[69.14798737 17.92824745]
[58.03252411 6.66960621]
[62.12335205 -7.65220928]
[58.15125275 -22.11673355]
[54.17915726 -36.58125687]
[46.83630371 -23.50140572]
[32.84871292 -18.08408928]
[18.61132431 -22.80603218]
[10.63327885 -35.50842667]
[12.56203175 -50.38390732]
[23.51578331 -60.63160324]
[38.48662567 -61.56641006]
[50.63113785 -52.75941467]
[48.18540955 -67.55868530]
[45.73968124 -82.35795593]
[30.71925545 -81.99343109]
[15.79428101 -83.72296906]
[1.25528121 -87.51290131]
[-12.61473942 -93.28946686]
[-25.54579544 -100.94020844]
[-37.28618240 -110.31621552]
[-47.60736847 -121.23497009]
[-56.30845261 -133.48394775]
[-63.22005844 -146.82470703]
[-68.20765686 -160.99755859]
[-71.17415619 -175.72665405]
[-72.06181335 -190.72525024]
[-70.85335541 -205.70143127]
[-67.57230377 -220.36364746]
[-62.28252411 -234.42652893]
[-55.08698273 -247.61630249]
[-46.12574005 -259.67623901]
[-35.57323456 -270.37161255]
[-23.63487244 -279.49420166]
[-10.54303646 -286.86645508]
[3.44743705 -292.34484863]
[18.06421852 -295.82275391]
[33.02278900 -297.23245239]
[48.03197479 -296.54653931]
[62.79961777 -293.77835083]
[77.03826141 -288.98178101]
[90.47074890 -282.25018311]
[102.83560944 -273.71459961]
[113.89215851 -263.54113770]
[123.42517090 -251.92790222]
[131.24909973 -239.10087585]
[137.21163940 -225.30978394]
[141.19671631 -210.82305908]
[143.12678528 -195.92268372]
[142.96424866 -180.89871216]
[140.71229553 -166.04359436]
[136.41474915 -151.64646912]
[130.15525818 -137.98757935]
[122.05567932 -125.33283234]
[112.27366638 -113.92852020]
[100.99961853 -103.99665070]
[88.45299530 -95.73054504]
[74.87802887 -89.29110718]
[60.53895187 -84.80368042]
[62.98468018 -70.00440979]
[65.43040466 -55.20513916]
[68.64368439 -40.55335236]
[72.61577606 -26.08882904]
[76.58787537 -11.62430573]
[87.41922760 -1.40026355]
[83.61251068 13.95615101]
[87.58460999 28.42067528]
[91.55670166 42.88520050]
[95.52880096 57.34972382]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[127.88947296 167.07426453]
[133.13618469 181.12673950]
[138.59155273 195.09953308]
[144.25433350 208.98956299]
[149.91711426 222.87959290]
[155.57991028 236.76962280]
[161.24269104 250.65963745]
[167.00872803 264.50714111]
[172.87768555 278.31130981]
[178.74664307 292.11547852]
[192.90333557 287.14114380]
[207.34962463 283.08404541]
[222.02619934 279.96087646]
[236.87269592 277.78445435]
[251.82815552 276.56372070]
[266.83108521 276.30368042]
[281.81985474 277.00546265]
[296.73287964 278.66610718]
[311.50885010 281.27883911]
[326.08706665 284.83288574]
[340.40759277 289.31365967]
[354.41165161 294.70278931]
[368.04162598 300.97805786]
[381.24154663 308.11370850]
[393.95718384 316.08044434]
[406.13623047 324.84552002]
[417.72869873 334.37286377]
[428.68688965 344.62338257]
[438.96585083 355.55496216]
[448.52328491 367.12261963]
[457.31991577 379.27890015]
[465.31964111 391.97378540]
[472.48956299 405.15512085]
[478.80020142 418.76876831]
[484.22564697 432.75878906]
[488.74362183 447.06765747]
[492.33551025 461.63656616]
[494.98660278 476.40573120]
[496.68597412 491.31436157]
[497.42663574 506.30126953]
[497.20559692 521.30480957]
[496.02368164 536.26336670]
[493.88583374 551.11547852]
[490.80075073 565.80010986]
[486.78118896 580.25689697]
[481.84362793 594.42645264]
[476.00836182 608.25054932]
[469.29937744 621.67236328]
[461.74420166 634.63671875]
[453.37396240 647.09045410]
[444.22296143 658.98223877]
[434.32888794 670.26330566]
[423.73233032 680.88732910]
[412.47689819 690.81054688]
[400.60876465 699.99224854]
[388.17675781 708.39465332]
[375.23196411 715.98327637]
[361.82754517 722.72698975]
[348.01858521 728.59796143]
[333.86184692 733.57214355]
[319.41549683 737.62908936]
[304.73889160 740.75207520]
[289.89236450 742.92834473]
[274.93688965 744.14892578]
[259.93395996 744.40875244]
[244.94520569 743.70684814]
[230.03221130 742.04602051]
[215.25627136 739.43316650]
[200.67810059 735.87890625]
[186.35758972 731.39801025]
[172.35360718 726.00872803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 149]
[36 148]
[37 147]
[39 146]
[40 145]
[41 144]
[42 143]
[43 142]
[46 141]
[47 140]
[53 139]
[54 138]
[55 137]
[56 136]
[58 134]
[59 133]
[61 132]
[62 131]
[63 130]
[64 129]
[66 127]
[67 126]
[68 125]
[76 124]
[77 123]
[78 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
