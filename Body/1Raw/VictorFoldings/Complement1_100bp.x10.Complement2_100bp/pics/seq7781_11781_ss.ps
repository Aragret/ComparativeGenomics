%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-51.67073059 588.30523682]
[-60.45104980 600.47564697]
[-70.11631012 611.95581055]
[-80.61247253 622.68164062]
[-91.88082123 632.59301758]
[-103.85835266 641.63464355]
[-116.47808075 649.75592041]
[-129.66941833 656.91137695]
[-143.35861206 663.06103516]
[-157.46908569 668.17053223]
[-171.92193604 672.21124268]
[-186.63633728 675.16052246]
[-201.53001404 677.00201416]
[-216.51963806 677.72534180]
[-231.52140808 677.32641602]
[-246.45141602 675.80755615]
[-261.22616577 673.17718506]
[-275.76306152 669.45007324]
[-289.98074341 664.64703369]
[-303.79974365 658.79492188]
[-317.14279175 651.92645264]
[-329.93524170 644.08007812]
[-342.10552979 635.29968262]
[-353.58566284 625.63427734]
[-364.31137085 615.13806152]
[-374.22268677 603.86956787]
[-383.26422119 591.89196777]
[-391.38534546 579.27221680]
[-398.54071045 566.08081055]
[-404.69024658 552.39154053]
[-409.79959106 538.28100586]
[-413.84014893 523.82812500]
[-416.78936768 509.11370850]
[-418.63070679 494.22003174]
[-419.35388184 479.23037720]
[-418.95483398 464.22860718]
[-417.43582153 449.29861450]
[-414.80535889 434.52389526]
[-411.07809448 419.98703003]
[-406.27493286 405.76937866]
[-400.42269897 391.95043945]
[-393.55410767 378.60745239]
[-385.70761108 365.81509399]
[-376.92709351 353.64486694]
[-367.26162720 342.16482544]
[-356.76528931 331.43920898]
[-345.49673462 321.52798462]
[-333.51907349 312.48657227]
[-320.89920044 304.36553955]
[-307.70773315 297.21029663]
[-294.01843262 291.06088257]
[-279.90786743 285.95166016]
[-265.45492554 281.91122437]
[-250.74047852 278.96215820]
[-235.84678650 277.12094116]
[-220.85714722 276.39791870]
[-205.85537720 276.79705811]
[-190.92539978 278.31619263]
[-176.15068054 280.94680786]
[-161.61387634 284.67419434]
[-147.39625549 289.47750854]
[-133.57736206 295.32986450]
[-120.23444366 302.19854736]
[-107.44213867 310.04513550]
[-95.27198792 318.82577515]
[-85.61117554 307.35107422]
[-75.95036316 295.87637329]
[-66.28955841 284.40170288]
[-56.62874603 272.92700195]
[-46.96793365 261.45230103]
[-37.30712509 249.97758484]
[-27.64631271 238.50288391]
[-17.98550224 227.02818298]
[-8.32469273 215.55348206]
[1.33611774 204.07878113]
[10.99692822 192.60408020]
[20.65773773 181.12939453]
[30.31854820 169.65469360]
[39.97935867 158.17999268]
[37.09220123 145.62236023]
[42.03878784 133.51396179]
[53.22060776 126.36013031]
[66.67620850 126.96127319]
[76.50679016 115.63168335]
[86.33737183 104.30208588]
[89.18103790 90.61248779]
[102.33303833 85.86733246]
[112.16362000 74.53773499]
[115.24025726 56.38241196]
[132.03880310 51.30541992]
[141.52769470 39.68815994]
[150.84257507 27.93090630]
[160.15747070 16.17365646]
[169.47235107 4.41640425]
[178.78723145 -7.34084702]
[188.10211182 -19.09809875]
[197.41699219 -30.85535049]
[206.73187256 -42.61260223]
[195.98460388 -53.09592438]
[186.37220764 -64.62874603]
[177.99661255 -77.08881378]
[170.94656372 -90.34403992]
[165.29682922 -104.25390625]
[161.10728455 -118.67097473]
[158.42234802 -133.44239807]
[157.27046204 -148.41160583]
[157.66387939 -163.41992188]
[159.59838867 -178.30822754]
[163.05349731 -192.91870117]
[167.99256897 -207.09649658]
[174.36326599 -220.69128418]
[182.09805298 -233.55895996]
[191.11492920 -245.56312561]
[201.31831360 -256.57653809]
[212.60003662 -266.48242188]
[224.84051514 -275.17578125]
[237.90998840 -282.56448364]
[251.66990662 -288.57019043]
[265.97442627 -293.12924194]
[280.67190552 -296.19329834]
[295.60650635 -297.72985840]
[310.61996460 -297.72268677]
[325.55313110 -296.17181396]
[340.24765015 -293.09371948]
[354.54779053 -288.52099609]
[368.30197144 -282.50213623]
[381.36437988 -275.10092163]
[393.59652710 -266.39584351]
[404.86877441 -256.47915649]
[415.06161499 -245.45600891]
[424.06701660 -233.44322205]
[431.78945923 -220.56814575]
[438.14715576 -206.96726990]
[443.07269287 -192.78477478]
[446.51382446 -178.17098999]
[448.43408203 -163.28083801]
[448.81311035 -148.27215576]
[447.64694214 -133.30406189]
[444.94784546 -118.53520966]
[440.74453735 -104.12215424]
[435.08148193 -90.21769714]
[428.01876831 -76.96922302]
[419.63125610 -64.51717377]
[410.00781250 -52.99355316]
[399.25051880 -42.52051544]
[387.47338867 -33.20907974]
[374.80123901 -25.15795326]
[361.36840820 -18.45248032]
[347.31732178 -13.16374588]
[332.79687500 -9.34781170]
[317.96105957 -7.04512882]
[302.96710205 -6.28010798]
[287.97396851 -7.06085825]
[273.14056396 -9.37910366]
[258.62414551 -13.21026802]
[244.57861328 -18.51374054]
[231.15283203 -25.23330116]
[218.48913574 -33.29771805]
[209.17425537 -21.54046631]
[199.85935974 -9.78321552]
[190.54447937 1.97403574]
[181.22959900 13.73128700]
[171.91471863 25.48853874]
[162.59983826 37.24578857]
[153.28495789 49.00304031]
[152.93519592 53.76609802]
[149.58961487 58.36001587]
[143.51350403 60.96623230]
[144.23509216 73.04124451]
[136.28041077 82.68006897]
[123.49320984 84.36831665]
[113.66262817 95.69791412]
[110.81896210 109.38751221]
[97.66696167 114.13266754]
[87.83638000 125.46226501]
[78.00580597 136.79185486]
[79.56128693 154.21597290]
[68.25641632 167.12002563]
[51.45405960 167.84080505]
[41.79324722 179.31549072]
[32.13243866 190.79019165]
[22.47162819 202.26489258]
[12.81081772 213.73959351]
[3.15000725 225.21429443]
[-6.51080322 236.68899536]
[-16.17161369 248.16369629]
[-25.83242416 259.63839722]
[-35.49323273 271.11309814]
[-45.15404510 282.58779907]
[-54.81485367 294.06250000]
[-64.47566223 305.53720093]
[-74.13647461 317.01190186]
[-83.79728699 328.48660278]
[-73.07138824 338.98266602]
[-63.15986252 350.25091553]
[-54.11813354 362.22839355]
[-45.99676514 374.84802246]
[-38.84118271 388.03930664]
[-32.69139862 401.72845459]
[-27.58180618 415.83886719]
[-23.54098320 430.29168701]
[-20.59152412 445.00607300]
[-18.74992561 459.89971924]
[-18.02648735 474.88934326]
[-18.42525291 489.89111328]
[-19.94399452 504.82113647]
[-22.57421684 519.59594727]
[-26.30121231 534.13281250]
[-31.10413742 548.35058594]
[-36.95613098 562.16961670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[73 185]
[74 184]
[75 183]
[76 182]
[77 181]
[78 180]
[79 179]
[83 176]
[84 175]
[85 174]
[87 172]
[88 171]
[90 168]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[97 159]
[98 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
