%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[309.38909912 117.07962036]
[307.63714600 131.97372437]
[304.82714844 146.70487976]
[300.97338867 161.19804382]
[296.09552002 175.37936401]
[290.21841431 189.17657471]
[283.37200928 202.51934814]
[275.59115601 215.33972168]
[266.91555786 227.57235718]
[257.38940430 239.15490723]
[247.06120300 250.02836609]
[235.98364258 260.13729858]
[224.21313477 269.43023682]
[211.80967712 277.85980225]
[198.83645630 285.38302612]
[185.35958862 291.96157837]
[171.44775391 297.56195068]
[157.17184448 302.15560913]
[142.60459900 305.71911621]
[127.82024384 308.23434448]
[112.89412689 309.68844604]
[97.90231323 310.07406616]
[82.92118073 309.38916016]
[68.02707672 307.63726807]
[53.29590607 304.82733154]
[38.80272293 300.97363281]
[24.62138557 296.09582520]
[10.82415867 290.21875000]
[-2.51865053 283.37240601]
[-15.33905125 275.59161377]
[-27.57171249 266.91604614]
[-39.15430069 257.38992310]
[-50.02779388 247.06178284]
[-60.13678360 235.98425293]
[-69.42975616 224.21379089]
[-77.85935974 211.81034851]
[-85.38263702 198.83715820]
[-91.96125031 185.36032104]
[-97.56168365 171.44851685]
[-102.15538788 157.17262268]
[-105.71895599 142.60537720]
[-108.23423767 127.82104492]
[-109.68840790 112.89493561]
[-110.07405853 97.90311432]
[-109.38922882 82.92198181]
[-107.63740540 68.02787781]
[-104.82750702 53.29669189]
[-100.97386932 38.80349350]
[-96.09611511 24.62213707]
[-90.21910095 10.82488823]
[-83.37278748 -2.51794696]
[-75.59204865 -15.33837700]
[-66.91653442 -27.57107162]
[-57.39045715 -39.15369797]
[-47.06235886 -50.02722931]
[-35.98487091 -60.13626480]
[-24.21443558 -69.42928314]
[-11.81103516 -77.85893250]
[1.16212511 -85.38225555]
[14.63893795 -91.96092224]
[28.55072975 -97.56140900]
[42.82660675 -102.15516663]
[57.39382935 -105.71879578]
[72.17816162 -108.23413086]
[87.10426331 -109.68835449]
[102.09607697 -110.07406616]
[117.07720947 -109.38929749]
[131.97132874 -107.63752747]
[146.70252991 -104.82769012]
[161.19573975 -100.97409821]
[175.37710571 -96.09640503]
[189.17437744 -90.21944427]
[202.51724243 -83.37317657]
[215.33770752 -75.59249115]
[227.57043457 -66.91702271]
[239.15309143 -57.39099121]
[250.02667236 -47.06293488]
[260.13574219 -35.98548508]
[269.42880249 -24.21508598]
[277.85848999 -11.81171799]
[285.38186646 1.16141367]
[298.86160278 -5.41861391]
[312.34133911 -11.99864101]
[325.82107544 -18.57866859]
[339.30081177 -25.15869713]
[352.78054810 -31.73872375]
[366.26028442 -38.31875229]
[379.74002075 -44.89878082]
[373.93148804 -58.73287201]
[368.91491699 -72.87342072]
[364.70639038 -87.27513885]
[361.31936646 -101.89189148]
[358.76473999 -116.67684937]
[357.05062866 -131.58265686]
[356.18258667 -146.56156921]
[356.16339111 -161.56559753]
[356.99304199 -176.54667664]
[358.66894531 -191.45683289]
[361.18569946 -206.24827576]
[364.53527832 -220.87365723]
[368.70687866 -235.28611755]
[373.68722534 -249.43946838]
[379.46029663 -263.28839111]
[386.00765991 -276.78851318]
[393.30825806 -289.89660645]
[401.33880615 -302.57067871]
[410.07351685 -314.77011108]
[419.48440552 -326.45584106]
[429.54135132 -337.59042358]
[440.21212769 -348.13821411]
[451.46255493 -358.06539917]
[463.25659180 -367.34017944]
[475.55648804 -375.93286133]
[488.32278442 -383.81591797]
[501.51464844 -390.96408081]
[515.08978271 -397.35446167]
[529.00469971 -402.96661377]
[543.21484375 -407.78253174]
[557.67468262 -411.78677368]
[572.33789062 -414.96655273]
[587.15753174 -417.31167603]
[602.08612061 -418.81460571]
[617.07580566 -419.47052002]
[632.07861328 -419.27737427]
[647.04644775 -418.23571777]
[661.93139648 -416.34893799]
[676.68572998 -413.62307739]
[691.26220703 -410.06683350]
[705.61419678 -405.69161987]
[719.69561768 -400.51144409]
[733.46148682 -394.54293823]
[746.86755371 -387.80514526]
[759.87103271 -380.31970215]
[772.43011475 -372.11059570]
[784.50469971 -363.20410156]
[796.05603027 -353.62872314]
[807.04718018 -343.41519165]
[817.44287109 -332.59616089]
[827.20977783 -321.20635986]
[836.31671143 -309.28219604]
[844.73443604 -296.86193848]
[852.43597412 -283.98532104]
[859.39672852 -270.69360352]
[865.59429932 -257.02938843]
[871.00891113 -243.03642273]
[875.62322998 -228.75953674]
[879.42242432 -214.24446106]
[882.39428711 -199.53768921]
[884.52941895 -184.68634033]
[885.82086182 -169.73799133]
[886.26458740 -154.74050903]
[885.85906982 -139.74194336]
[884.60565186 -124.79035187]
[882.50842285 -109.93361664]
[879.57397461 -95.21932983]
[875.81176758 -80.69462585]
[871.23382568 -66.40603638]
[865.85485840 -52.39932632]
[859.69207764 -38.71936798]
[852.76519775 -25.40997887]
[845.09643555 -12.51379585]
[836.71038818 -0.07212920]
[827.63385010 11.87516689]
[817.89593506 23.28982162]
[807.52783203 34.13526917]
[796.56280518 44.37677002]
[785.03582764 53.98151398]
[772.98400879 62.91873932]
[760.44580078 71.15981293]
[747.46148682 78.67833710]
[734.07257080 85.45022583]
[720.32202148 91.45379639]
[706.25378418 96.66979980]
[691.91302490 101.08154297]
[677.34564209 104.67488861]
[662.59826660 107.43832397]
[647.71820068 109.36299896]
[632.75305176 110.44274902]
[617.75079346 110.67411041]
[602.75946045 110.05635071]
[587.82714844 108.59143829]
[573.00158691 106.28408051]
[558.33026123 103.14164734]
[543.86029053 99.17422485]
[529.63793945 94.39451599]
[515.70874023 88.81782532]
[502.11740112 82.46202087]
[488.90737915 75.34746552]
[476.12106323 67.49694824]
[463.79934692 58.93561172]
[451.98171997 49.69088364]
[440.70602417 39.79237747]
[430.00842285 29.27180481]
[419.92315674 18.16286278]
[410.48254395 6.50113726]
[401.71679688 -5.67601490]
[393.65402222 -18.32958603]
[386.32003784 -31.41904449]
[372.84030151 -24.83901787]
[359.36056519 -18.25898933]
[345.88085938 -11.67896271]
[332.40112305 -5.09893465]
[318.92138672 1.48109281]
[305.44165039 8.06112003]
[291.96191406 14.64114761]
[297.56222534 28.55300331]
[302.15582275 42.82893372]
[305.71926880 57.39619446]
[308.23443604 72.18055725]
[309.68850708 87.10667419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 205]
[82 204]
[83 203]
[84 202]
[85 201]
[86 200]
[87 199]
[88 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
