%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[104.32247162 926.72894287]
[89.37583923 925.43914795]
[74.49580383 923.52868652]
[59.70811462 921.00091553]
[45.03837967 917.86022949]
[30.51199341 914.11193848]
[16.15410233 909.76263428]
[1.98956287 904.81988525]
[-11.95710278 899.29211426]
[-25.66174889 893.18902588]
[-39.10065460 886.52111816]
[-52.25054932 879.29992676]
[-65.08866882 871.53796387]
[-77.59279633 863.24865723]
[-89.74127197 854.44641113]
[-101.51307678 845.14642334]
[-112.88781738 835.36474609]
[-123.84581757 825.11840820]
[-134.36810303 814.42510986]
[-144.43644714 803.30334473]
[-154.03341675 791.77233887]
[-163.14242554 779.85211182]
[-171.74768066 767.56329346]
[-179.83428955 754.92718506]
[-187.38825989 741.96557617]
[-194.39649963 728.70098877]
[-200.84687805 715.15631104]
[-206.72824097 701.35504150]
[-212.03041077 687.32104492]
[-216.74418640 673.07867432]
[-220.86143494 658.65252686]
[-224.37500000 644.06762695]
[-227.27880859 629.34912109]
[-229.56784058 614.52264404]
[-231.23814392 599.61370850]
[-232.28678894 584.64825439]
[-232.71200562 569.65209961]
[-232.51303101 554.65124512]
[-231.69020081 539.67163086]
[-230.24496460 524.73925781]
[-228.17980957 509.87988281]
[-225.49832153 495.11929321]
[-222.20513916 480.48303223]
[-218.30595398 465.99642944]
[-213.80751038 451.68453979]
[-208.71762085 437.57220459]
[-203.04508972 423.68380737]
[-196.79971313 410.04339600]
[-189.99234009 396.67459106]
[-182.63473511 383.60052490]
[-174.73962402 370.84387207]
[-166.32069397 358.42666626]
[-157.39251709 346.37042236]
[-147.97055054 334.69601440]
[-138.07109070 323.42364502]
[-127.71129608 312.57284546]
[-116.90908051 302.16238403]
[-105.68316650 292.21029663]
[-94.05297089 282.73379517]
[-82.03863525 273.74929810]
[-69.66095734 265.27236938]
[-56.94136429 257.31765747]
[-43.90187836 249.89897156]
[-30.56507301 243.02911377]
[-16.95403481 236.71998596]
[-3.09232807 230.98252869]
[10.99604988 225.82666016]
[25.28670883 221.26130676]
[39.75490952 217.29438782]
[54.37560654 213.93275452]
[69.12348175 211.18222046]
[83.97301483 209.04756165]
[98.89849091 207.53247070]
[98.00567627 192.55906677]
[97.11286163 177.58566284]
[96.22004700 162.61225891]
[95.32723236 147.63885498]
[84.05117798 137.97520447]
[82.93243408 122.80275726]
[93.14501190 111.04091644]
[91.80677795 96.10073090]
[90.02431488 81.20701599]
[88.24184418 66.31329346]
[78.91947937 53.53033829]
[85.08956146 39.97381210]
[83.30709839 25.08009529]
[81.52462769 10.18637848]
[79.74216461 -4.70733881]
[77.95970154 -19.60105705]
[75.23506927 -22.98193741]
[73.86573029 -26.68185997]
[73.78554535 -30.23558617]
[74.78411102 -33.24714661]
[76.54177856 -35.43089294]
[75.64896393 -50.40429688]
[74.75614166 -65.37770081]
[60.37956238 -70.31555176]
[48.99027634 -80.38294983]
[42.32506561 -94.04470062]
[41.40032959 -109.21748352]
[46.35708237 -123.58755493]
[56.43945694 -134.96359253]
[70.10996246 -141.61082458]
[85.28395081 -142.51559448]
[99.64749146 -137.53994751]
[111.01025391 -127.44261932]
[117.63949585 -113.76337433]
[118.52430725 -98.58821869]
[113.52976990 -84.23123169]
[103.41749573 -72.88175964]
[89.72955322 -66.27051544]
[90.62236786 -51.29711151]
[91.51518250 -36.32370758]
[92.85341644 -21.38352203]
[94.63587952 -6.48980474]
[96.41835022 8.40391254]
[98.20081329 23.29763031]
[99.98328400 38.19134903]
[109.17815399 49.90900803]
[103.13556671 64.53083038]
[104.91802979 79.42454529]
[106.70049286 94.31826782]
[108.92820740 96.39836121]
[110.44829559 99.33500671]
[110.94204712 102.86766052]
[110.19146729 106.62171173]
[108.11841583 110.14810181]
[119.65631104 120.61302948]
[120.34844971 135.81091309]
[110.30063629 146.74603271]
[111.19345093 161.71943665]
[112.08626556 176.69285583]
[112.97908020 191.66625977]
[113.87190247 206.63966370]
[128.87165833 206.37040710]
[143.86964417 206.72535706]
[158.83987427 207.70388794]
[173.75643921 209.30430603]
[188.59352112 211.52384949]
[203.32542419 214.35868835]
[217.92666626 217.80387878]
[232.37193298 221.85348511]
[246.63624573 226.50048828]
[260.69491577 231.73684692]
[274.52359009 237.55348206]
[288.09832764 243.94033813]
[301.39559937 250.88636780]
[314.39245605 258.37951660]
[327.06634521 266.40682983]
[339.39535522 274.95443726]
[351.35809326 284.00747681]
[362.93389893 293.55032349]
[374.10272217 303.56646729]
[384.84521484 314.03851318]
[395.14279175 324.94839478]
[404.97763062 336.27719116]
[414.33267212 348.00531006]
[423.19174194 360.11239624]
[431.53952026 372.57754517]
[439.36154175 385.37918091]
[446.64425659 398.49508667]
[453.37506104 411.90261841]
[459.54232788 425.57852173]
[465.13534546 439.49911499]
[470.14443970 453.64035034]
[474.56094360 467.97772217]
[478.37722778 482.48638916]
[481.58663940 497.14123535]
[484.18368530 511.91690063]
[486.16381836 526.78784180]
[487.52365112 541.72827148]
[488.26077271 556.71234131]
[488.37396240 571.71405029]
[487.86300659 586.70751953]
[486.72875977 601.66680908]
[484.97323608 616.56591797]
[482.59945679 631.37908936]
[479.61151123 646.08068848]
[476.01458740 660.64532471]
[471.81491089 675.04766846]
[467.01974487 689.26287842]
[461.63742065 703.26629639]
[455.67721558 717.03369141]
[449.14947510 730.54125977]
[442.06549072 743.76556396]
[434.43750000 756.68371582]
[426.27877808 769.27343750]
[417.60336304 781.51281738]
[408.42633057 793.38073730]
[398.76358032 804.85662842]
[388.63177490 815.92065430]
[378.04852295 826.55358887]
[367.03210449 836.73712158]
[355.60159302 846.45355225]
[343.77682495 855.68609619]
[331.57818604 864.41870117]
[319.02685547 872.63635254]
[306.14456177 880.32476807]
[292.95358276 887.47064209]
[279.47677612 894.06158447]
[265.73742676 900.08618164]
[251.75938416 905.53411865]
[237.56680298 910.39581299]
[223.18428040 914.66290283]
[208.63668823 918.32800293]
[193.94923401 921.38482666]
[179.14733887 923.82800293]
[164.25660706 925.65325928]
[149.30285645 926.85760498]
[134.31193542 927.43878174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[80 127]
[81 122]
[82 121]
[83 120]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
