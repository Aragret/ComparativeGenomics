%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[68.72431183 629.73626709]
[65.36543274 614.04876709]
[75.64720154 601.73358154]
[75.64720154 586.73358154]
[75.64720154 571.73358154]
[75.64720154 556.73358154]
[67.31824493 547.96112061]
[67.19548035 535.46441650]
[75.89011383 525.93725586]
[76.11344147 510.93893433]
[76.33676910 495.94061279]
[66.97604370 481.09661865]
[76.55072784 465.36743164]
[76.55072784 450.36743164]
[76.55072784 435.36743164]
[76.55072784 420.36743164]
[76.55072784 405.36743164]
[76.55072784 390.36743164]
[76.55072784 375.36743164]
[64.26006317 383.96624756]
[49.83162689 379.86499023]
[43.90153122 366.08697510]
[50.84122086 352.78881836]
[65.53501129 349.77346802]
[77.15048981 359.26217651]
[78.26613617 344.30374146]
[79.38178253 329.34527588]
[80.49743652 314.38684082]
[81.61308289 299.42837524]
[78.97577667 292.52429199]
[82.85832214 284.25604248]
[84.19655609 269.31585693]
[85.53479004 254.37568665]
[77.30403900 238.87660217]
[88.02208710 223.90312195]
[88.80341339 208.92349243]
[81.44847870 195.97149658]
[89.59323120 182.40780640]
[90.03984070 167.41445923]
[90.48644257 152.42111206]
[90.93305206 137.42774963]
[87.99009705 130.64831543]
[91.49957275 122.21496582]
[92.16935730 107.22992706]
[91.49957275 92.24488831]
[89.49555969 77.37936401]
[87.49154663 62.51383209]
[85.48753357 47.64830399]
[83.48351288 32.78277588]
[73.97186279 20.14002991]
[79.93942261 6.49314451]
[63.72884369 -1.62934315]
[55.70944214 -17.71563339]
[58.92325211 -35.24053955]
[71.89778137 -47.22107315]
[69.45205688 -62.02034760]
[67.00632477 -76.81961823]
[64.56060028 -91.61888885]
[54.67674255 -103.97283173]
[60.23534012 -117.79134369]
[57.78961182 -132.59060669]
[55.34388351 -147.38987732]
[52.89815521 -162.18914795]
[44.99622345 -149.43927002]
[31.15323830 -143.66244507]
[16.53229713 -147.01327515]
[6.58664608 -158.24198914]
[5.02576828 -173.16055298]
[12.43183231 -186.20471191]
[26.04255867 -192.50932312]
[40.78148651 -189.72291565]
[51.15186691 -178.88369751]
[42.80607224 -192.32461548]
[49.96735382 -205.38468933]
[49.29756927 -220.36972046]
[48.62778473 -235.35476685]
[47.84646225 -250.33439636]
[46.95364380 -265.30780029]
[46.06082916 -280.28121948]
[45.16801453 -295.25460815]
[31.87354469 -306.62460327]
[30.93396759 -323.75445557]
[42.44302368 -336.01742554]
[41.32737350 -350.97589111]
[40.21172714 -365.93432617]
[39.09607697 -380.89279175]
[37.98043060 -395.85122681]
[36.86478043 -410.80969238]
[35.74913025 -425.76815796]
[34.63348389 -440.72659302]
[31.23279953 -446.39642334]
[31.20947647 -452.07940674]
[33.71408081 -456.14587402]
[33.04429626 -471.13092041]
[32.37451172 -486.11593628]
[28.86503410 -494.54928589]
[31.80798912 -501.32873535]
[31.36138344 -516.32208252]
[17.39783096 -522.48504639]
[7.49764013 -534.10180664]
[3.62650371 -548.86584473]
[6.55303764 -563.84576416]
[15.69617653 -576.06726074]
[29.24054337 -583.10382080]
[44.49689484 -583.55828857]
[58.43606949 -577.34039307]
[68.29043579 -565.68475342]
[72.10340118 -550.90557861]
[69.11789703 -535.93725586]
[59.92670441 -523.75183105]
[46.35473251 -516.76867676]
[46.80133820 -501.77532959]
[47.35955048 -486.78573608]
[48.02933502 -471.80068970]
[48.69911957 -456.81564331]
[49.59193802 -441.84225464]
[50.70758438 -426.88378906]
[51.82323456 -411.92535400]
[52.93888092 -396.96688843]
[54.05453110 -382.00842285]
[55.17018127 -367.04998779]
[56.28582764 -352.09152222]
[57.40147781 -337.13308716]
[68.24554443 -330.17349243]
[73.17472839 -318.05801392]
[70.18191528 -305.12536621]
[60.14141846 -296.14743042]
[61.03423309 -281.17404175]
[61.92705154 -266.20062256]
[62.81986618 -251.22721863]
[66.35591888 -244.73736572]
[63.61282349 -236.02455139]
[64.28260803 -221.03950500]
[64.95239258 -206.05447388]
[73.25027466 -193.68537903]
[66.13690186 -179.55348206]
[67.69742584 -164.63488770]
[70.14315796 -149.83561707]
[72.58888245 -135.03634644]
[75.03460693 -120.23706818]
[84.74353027 -108.94166565]
[79.35987091 -94.06461334]
[81.80559540 -79.26534271]
[84.25132751 -64.46607208]
[86.69705200 -49.66680145]
[98.23678589 -45.89720535]
[107.13138580 -37.52947235]
[111.65084076 -26.10688400]
[110.88042450 -13.77456951]
[104.90507507 -2.87669277]
[94.80495453 4.48913050]
[104.17326355 16.06859398]
[98.34904480 30.77876282]
[100.35305786 45.64429092]
[102.35707092 60.50981903]
[104.36108398 75.37534332]
[106.36509705 90.24087524]
[112.73708344 76.66156006]
[124.31504059 67.12474060]
[138.86344910 63.47183228]
[153.57324219 66.40814972]
[165.60418701 75.36673737]
[172.63330078 88.61783600]
[173.30335999 103.60286713]
[167.48500061 117.42844391]
[156.30165100 127.42507935]
[141.91264343 131.66256714]
[127.09626007 129.32272339]
[114.71332550 120.85733032]
[107.15439606 107.89971161]
[106.48461151 122.88475037]
[105.92639923 137.87435913]
[105.47978973 152.86770630]
[105.03318787 167.86105347]
[104.58657837 182.85441589]
[111.90956879 196.87882996]
[103.79676056 209.37010193]
[106.27249908 213.96549988]
[106.69564819 218.58872986]
[105.39932251 222.45326233]
[102.98054504 225.01876831]
[110.79053497 235.28361511]
[109.55335999 247.71957397]
[100.47497559 255.71391296]
[99.13674164 270.65411377]
[97.79850769 285.59429932]
[96.57153320 300.54403687]
[95.45588684 315.50247192]
[94.34024048 330.46093750]
[93.22458649 345.41937256]
[92.10894012 360.37783813]
[91.55072784 375.36743164]
[91.55072784 390.36743164]
[91.55072784 405.36743164]
[91.55072784 420.36743164]
[91.55072784 435.36743164]
[91.55072784 450.36743164]
[91.55072784 465.36743164]
[100.10255432 475.02297974]
[99.79374695 487.51651001]
[91.33510590 496.16394043]
[91.11177826 511.16226196]
[90.88845062 526.16058350]
[100.22789001 542.03057861]
[90.64720154 556.73358154]
[90.64720154 571.73358154]
[90.64720154 586.73358154]
[90.64720154 601.73358154]
[100.92897034 614.04876709]
[97.57008362 629.73626709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[9 203]
[10 202]
[11 201]
[13 198]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[31 186]
[32 185]
[33 184]
[35 181]
[36 177]
[38 175]
[39 174]
[40 173]
[41 172]
[43 171]
[44 170]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[51 151]
[55 145]
[56 144]
[57 143]
[58 142]
[60 140]
[61 139]
[62 138]
[63 137]
[72 136]
[74 134]
[75 133]
[76 132]
[77 130]
[78 129]
[79 128]
[80 127]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[93 115]
[94 114]
[95 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
