%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[261.27764893 410.61593628]
[273.71502686 402.14260864]
[267.84606934 388.33840942]
[261.97711182 374.53424072]
[256.10815430 360.73007202]
[249.22874451 347.40063477]
[241.37698364 334.61978149]
[233.52523804 321.83895874]
[225.67347717 309.05810547]
[217.82173157 296.27725220]
[201.95935059 298.21005249]
[186.78688049 293.01293945]
[175.35833740 281.67837524]
[169.99748230 266.43957520]
[171.82543945 250.33049011]
[180.52667236 236.58193970]
[172.48550415 223.91941833]
[164.44432068 211.25689697]
[156.40315247 198.59437561]
[148.36198425 185.93183899]
[140.32081604 173.26931763]
[132.09199524 160.72792053]
[123.67738342 148.31042480]
[115.26276398 135.89292908]
[106.84814453 123.47543335]
[98.43352509 111.05793762]
[89.92669678 98.70343018]
[81.32813263 86.41259003]
[72.72956848 74.12174988]
[64.13100433 61.83091354]
[61.60665512 76.61697388]
[50.25035477 86.41669464]
[35.25405502 86.74976349]
[23.47385788 77.46391296]
[20.29551506 62.80451202]
[27.17212105 49.47363281]
[40.95978165 43.56597900]
[55.35646820 47.78354263]
[48.08323669 34.66484833]
[40.81000900 21.54615402]
[27.35166740 13.22848320]
[27.94732857 -1.65420675]
[28.64449883 13.32958317]
[25.78390121 28.05428886]
[19.52731514 41.68716049]
[10.22858047 53.45718765]
[-1.58641195 62.69871902]
[-15.24946880 68.88910675]
[-29.98787689 71.67824554]
[-44.96810913 70.90840912]
[-59.34296036 66.62312317]
[-72.29946136 59.06474686]
[-83.10485840 48.66073990]
[-91.14806366 35.99950027]
[-95.97418213 21.79708672]
[-97.31027222 6.85671139]
[-95.08078766 -7.97667646]
[-89.41180420 -21.86417389]
[-80.62393188 -34.02037811]
[-69.21416473 -43.75779724]
[-55.82778931 -50.52573013]
[-41.22186279 -53.94141769]
[-26.22242546 -53.81168747]
[-11.67776489 -50.14387894]
[1.58954751 -43.14542007]
[12.82917976 -33.21210861]
[21.40598106 -20.90477562]
[19.18086433 -35.73881912]
[16.95574760 -50.57286072]
[14.73062992 -65.40690613]
[12.39514256 -80.22397614]
[9.94941521 -95.02324677]
[7.50368786 -109.82251740]
[5.05796051 -124.62178802]
[-9.94450283 -123.94175720]
[-24.92209244 -125.04092407]
[-39.66454697 -127.90386963]
[-53.96490097 -132.49038696]
[-67.62240601 -138.73609924]
[-80.44532776 -146.55332947]
[-92.25365448 -155.83232117]
[-102.88161469 -166.44282532]
[-112.18000793 -178.23588562]
[-120.01830292 -191.04594421]
[-126.28645325 -204.69316101]
[-130.89646912 -218.98596191]
[-133.78364563 -233.72369385]
[-134.90742493 -248.69944763]
[-134.25205994 -263.70300293]
[-131.82673645 -278.52374268]
[-127.66548920 -292.95358276]
[-121.82675934 -306.78997803]
[-114.39249420 -319.83865356]
[-105.46707916 -331.91647339]
[-95.17579651 -342.85382080]
[-83.66312408 -352.49719238]
[-71.09068298 -360.71121216]
[-57.63497162 -367.38055420]
[-43.48488617 -372.41162109]
[-28.83907318 -375.73373413]
[-13.90313530 -377.30029297]
[1.11325049 -377.08929443]
[15.99927711 -375.10369873]
[30.54596710 -371.37139893]
[44.54911041 -365.94476318]
[57.81211853 -358.89999390]
[70.14881134 -350.33596802]
[81.38598633 -340.37292480]
[91.36589813 -329.15072632]
[99.94844818 -316.82690430]
[107.01314545 -303.57449341]
[112.46081543 -289.57952881]
[116.21498108 -275.03845215]
[118.22293091 -260.15542603]
[118.45649719 -245.13938904]
[116.91237640 -230.20111084]
[113.61226654 -215.55032349]
[108.60247803 -201.39268494]
[101.95335388 -187.92697144]
[93.75823975 -175.34220886]
[84.13216400 -163.81506348]
[73.21028137 -153.50735474]
[61.14590454 -144.56379700]
[48.10840607 -137.10993958]
[34.28080750 -131.25042725]
[19.85723114 -127.06751251]
[22.30295944 -112.26824188]
[24.74868584 -97.46897125]
[27.19441414 -82.66970062]
[31.38644791 -76.58293915]
[29.56467438 -67.63202667]
[31.78979111 -52.79798126]
[34.01490784 -37.96393585]
[36.24002457 -23.12989235]
[41.06602097 -8.92743587]
[54.00413132 -1.54810119]
[53.92870331 14.27292538]
[61.20193100 27.39161873]
[68.47515869 40.51031494]
[76.42184448 53.23234940]
[85.02040863 65.52318573]
[93.61897278 77.81402588]
[102.21753693 90.10486603]
[109.05133057 94.37942505]
[110.85102081 102.64331818]
[119.26564026 115.06081390]
[127.68025970 127.47830963]
[136.09487915 139.89579773]
[144.50949097 152.31329346]
[150.28150940 155.53750610]
[153.13101196 160.45454407]
[152.98333740 165.22814941]
[161.02450562 177.89067078]
[169.06567383 190.55319214]
[177.10685730 203.21571350]
[185.14802551 215.87825012]
[193.18919373 228.54077148]
[207.15255737 226.35639954]
[220.85229492 229.64901733]
[232.22776794 237.88941956]
[239.58087158 249.80673218]
[241.82955933 263.58435059]
[238.66691589 277.13681030]
[230.60256958 288.42550659]
[238.45431519 301.20635986]
[246.30607605 313.98718262]
[254.15783691 326.76803589]
[262.00958252 339.54888916]
[263.20996094 324.59698486]
[271.64389038 312.19259644]
[285.10681152 305.57821655]
[300.07949829 306.48281860]
[312.64816284 314.66992188]
[319.52737427 327.99945068]
[318.91891479 342.98709106]
[310.98187256 355.71514893]
[297.79089355 362.85647583]
[282.79415894 362.54440308]
[269.91232300 354.86111450]
[275.78131104 368.66528320]
[281.65026855 382.46945190]
[287.51922607 396.27365112]
[302.25061035 393.19592285]
[317.29937744 393.05163574]
[332.08709717 395.84625244]
[346.04531860 401.47241211]
[358.63760376 409.71383667]
[369.37985229 420.25375366]
[377.85925293 432.68704224]
[383.74978638 446.53579712]
[386.82510376 461.26766968]
[386.96697998 476.31646729]
[384.16995239 491.10372925]
[378.54153442 505.06106567]
[370.29806519 517.65197754]
[359.75640869 528.39257812]
[347.32177734 536.86993408]
[333.47207642 542.75823975]
[318.73968506 545.83117676]
[303.69085693 545.97058105]
[288.90408325 543.17114258]
[274.94766235 537.54046631]
[262.35806274 529.29498291]
[251.61918640 518.75158691]
[243.14384460 506.31558228]
[237.25776672 492.46493530]
[234.18722534 477.73205566]
[234.05023193 462.68319702]
[236.85203552 447.89685059]
[242.48497009 433.94134521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[21 152]
[22 149]
[23 148]
[24 147]
[25 146]
[26 145]
[27 143]
[28 142]
[29 141]
[30 140]
[38 139]
[39 138]
[40 137]
[42 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 129]
[72 128]
[73 127]
[74 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
