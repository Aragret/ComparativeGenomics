%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[227.72749329 585.12182617]
[236.77420044 573.10534668]
[247.82130432 562.89739990]
[260.51370239 554.82629395]
[254.85090637 540.93627930]
[249.18811035 527.04620361]
[243.52532959 513.15618896]
[237.86254883 499.26617432]
[232.19975281 485.37615967]
[222.01550293 484.09082031]
[213.21493530 478.65158081]
[207.42127991 469.98287964]
[205.73568726 459.61166382]
[208.52844238 449.39852905]
[215.36029053 441.20404053]
[210.32337952 427.07501221]
[205.28645325 412.94598389]
[190.42066956 414.73767090]
[175.52174377 413.17544556]
[161.33726501 408.33444214]
[148.57962036 400.45446777]
[137.89036560 389.92791748]
[129.80783081 377.28048706]
[124.74008179 363.14471436]
[122.94432068 348.22845459]
[124.51378632 333.27944946]
[129.37298584 319.04772949]
[137.28123474 306.24810791]
[147.84466553 295.52420044]
[160.53578186 287.41610718]
[155.49887085 273.28704834]
[150.46195984 259.15802002]
[145.42503357 245.02900696]
[140.38812256 230.89997864]
[135.35121155 216.77095032]
[130.31428528 202.64192200]
[125.17233276 188.55078125]
[119.92561340 174.49830627]
[114.67889404 160.44583130]
[102.97858429 151.22888184]
[105.40009308 135.59408569]
[100.15337372 121.54161835]
[94.90665436 107.48914337]
[91.66043091 105.40722656]
[89.34764099 101.90453339]
[88.58225250 97.43002319]
[89.75479889 92.69029999]
[85.14079285 78.41757202]
[80.52677917 64.14483643]
[75.91277313 49.87210083]
[71.19263458 35.63411331]
[66.36663818 21.43165779]
[54.60075760 10.85458183]
[57.83188248 -3.68533206]
[53.00588226 -17.88778877]
[48.17988586 -32.09024429]
[31.89925957 -31.25604057]
[16.05396271 -35.02780914]
[1.91947556 -43.09387207]
[-9.36870193 -54.79720306]
[-16.90627098 -69.18894196]
[-20.09257507 -85.10532379]
[-18.67845917 -101.26177216]
[-12.78573227 -116.35659790]
[-2.89672208 -129.17584229]
[10.18519974 -138.69094849]
[4.93848133 -152.74342346]
[-0.30823666 -166.79588318]
[-12.38382339 -177.01795959]
[-9.58703804 -191.64762878]
[-14.83375645 -205.70010376]
[-26.90934372 -215.92218018]
[-24.11255836 -230.55184937]
[-29.35927582 -244.60432434]
[-34.60599518 -258.65679932]
[-39.85271072 -272.70925903]
[-54.64052963 -269.97219849]
[-69.67897797 -269.84475708]
[-84.51105499 -272.33084106]
[-98.68602753 -277.35491943]
[-111.77313995 -284.76428223]
[-123.37467957 -294.33377075]
[-133.13810730 -305.77258301]
[-140.76670837 -318.73312378]
[-146.02865601 -332.82153320]
[-148.76405334 -347.60964966]
[-148.88978577 -362.64813232]
[-146.40200806 -377.47991943]
[-141.37632751 -391.65432739]
[-133.96548462 -404.74060059]
[-124.39467621 -416.34106445]
[-112.95474243 -426.10317993]
[-99.99333954 -433.73031616]
[-85.90434265 -438.99066162]
[-71.11590576 -441.72439575]
[-56.07743073 -441.84838867]
[-41.24592209 -439.35894775]
[-27.07208633 -434.33166504]
[-13.98665714 -426.91934204]
[-2.38728189 -417.34719849]
[7.37354612 -405.90615845]
[14.99920559 -392.94390869]
[20.25796318 -378.85430908]
[22.99000931 -364.06555176]
[23.11232185 -349.02706909]
[20.62118340 -334.19583130]
[15.59229469 -320.02258301]
[8.17848110 -306.93798828]
[-1.39496171 -295.33969116]
[-12.83710670 -285.58016968]
[-25.80024147 -277.95599365]
[-20.55352402 -263.90350342]
[-15.30680466 -249.85104370]
[-10.06008720 -235.79856873]
[1.64021981 -226.58161926]
[-0.78128517 -210.94682312]
[4.46543312 -196.89434814]
[16.16573906 -187.67739868]
[13.74423504 -172.04260254]
[18.99095345 -157.99014282]
[24.23767090 -143.93766785]
[37.93282700 -145.40911865]
[51.59067917 -143.54939270]
[64.41223145 -138.46250916]
[75.64626312 -130.44137573]
[84.63333893 -119.95098877]
[90.84452057 -107.60146332]
[93.91248322 -94.11254120]
[93.65326691 -80.27164459]
[90.07727051 -66.88790894]
[83.38891602 -54.74490356]
[73.97501373 -44.55471802]
[62.38234329 -36.91624069]
[67.20833588 -22.71378517]
[72.03433990 -8.51132965]
[83.45503235 1.04989159]
[80.56909943 16.60565948]
[85.39509583 30.80811501]
[90.52346802 36.12991714]
[90.18550873 45.25809479]
[94.79951477 59.53082657]
[99.41352081 73.80355835]
[104.02753448 88.07629395]
[108.95912933 102.24243164]
[114.20584869 116.29489899]
[119.45256042 130.34736633]
[131.52815247 140.56944275]
[128.73136902 155.19911194]
[133.97808838 169.25158691]
[139.22480774 183.30406189]
[145.15823364 190.24900818]
[144.44331360 197.60499573]
[149.48023987 211.73402405]
[154.51715088 225.86305237]
[159.55406189 239.99208069]
[164.59098816 254.12112427]
[169.62789917 268.25015259]
[174.66481018 282.37918091]
[189.62301636 280.63046265]
[204.58810425 282.25360107]
[218.80987549 287.16400146]
[231.57614136 295.11236572]
[242.24830627 305.69729614]
[250.29342651 318.38568115]
[255.31074524 332.53942871]
[257.05163574 347.44763184]
[255.43197632 362.36221313]
[250.53622437 376.53555298]
[242.61293030 389.25781250]
[232.06221008 399.89270020]
[219.41549683 407.90908813]
[224.45240784 422.03811646]
[229.48931885 436.16714478]
[248.07299805 443.80432129]
[254.94265747 462.35995483]
[246.08978271 479.71337891]
[251.75256348 493.60339355]
[257.41534424 507.49340820]
[263.07815552 521.38342285]
[268.74093628 535.27349854]
[274.40371704 549.16351318]
[289.12130737 546.05993652]
[304.15655518 545.63439941]
[319.02615356 547.90057373]
[333.25204468 552.78558350]
[346.37698364 560.13238525]
[357.97903442 569.70483398]
[367.68527222 581.19525146]
[375.18362427 594.23419189]
[380.23306274 608.40258789]
[382.67132568 623.24487305]
[382.41995239 638.28405762]
[379.48709106 653.03662109]
[373.96697998 667.02838135]
[366.03710938 679.80944824]
[355.95233154 690.96905518]
[344.03686523 700.14849854]
[330.67376709 707.05261230]
[316.29254150 711.45947266]
[301.35556030 713.22747803]
[286.34292603 712.29974365]
[271.73724365 708.70611572]
[258.00805664 702.56207275]
[245.59667969 694.06518555]
[234.90208435 683.48852539]
[226.26806641 671.17211914]
[219.97216797 657.51190186]
[216.21678162 642.94702148]
[215.12261963 627.94561768]
[216.72485352 612.98992920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[15 173]
[16 172]
[17 171]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 150]
[38 149]
[39 148]
[41 146]
[42 145]
[43 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 138]
[52 137]
[54 135]
[55 134]
[56 133]
[66 121]
[67 120]
[68 119]
[70 117]
[71 116]
[73 114]
[74 113]
[75 112]
[76 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
