%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[0.69575495 298.30322266]
[0.17230523 313.30252075]
[-1.57199323 328.20922852]
[-4.52553225 342.92416382]
[-8.66865635 357.34939575]
[-13.97379303 371.38891602]
[-20.40563774 384.94931030]
[-27.92138672 397.94030762]
[-36.47101974 410.27548218]
[-45.99764633 421.87274170]
[-56.43786240 432.65487671]
[-67.72219086 442.55017090]
[-79.77553558 451.49276733]
[-92.51767731 459.42312622]
[-105.86383057 466.28848267]
[-119.72516632 472.04315186]
[-134.00942993 476.64883423]
[-148.62158203 480.07489014]
[-163.46437073 482.29849243]
[-178.43902588 483.30487061]
[-193.44586182 483.08734131]
[-208.38504028 481.64730835]
[-223.15713501 478.99438477]
[-237.66384888 475.14620972]
[-251.80860901 470.12838745]
[-265.49731445 463.97433472]
[-278.63885498 456.72500610]
[-291.14575195 448.42861938]
[-302.93481445 439.14041138]
[-313.92758179 428.92218018]
[-324.05087280 417.84194946]
[-333.23730469 405.97341919]
[-341.42581177 393.39559937]
[-348.56182861 380.19219971]
[-354.59786987 366.45104980]
[-359.49383545 352.26364136]
[-363.21707153 337.72439575]
[-365.74282837 322.93002319]
[-367.05429077 307.97900391]
[-367.14273071 292.97082520]
[-366.00756836 278.00540161]
[-363.65637207 263.18228149]
[-360.10473633 248.60015869]
[-355.37634277 234.35603333]
[-349.50265503 220.54470825]
[-342.52273560 207.25811768]
[-334.48306274 194.58465576]
[-325.43713379 182.60868835]
[-315.44515991 171.40989685]
[-304.57357788 161.06282043]
[-292.89480591 151.63630676]
[-280.48654175 143.19309998]
[-267.43136597 135.78938293]
[-253.81616211 129.47442627]
[-239.73152161 124.29025269]
[-225.27117920 120.27137756]
[-210.53137207 117.44452667]
[-195.61019897 115.82852173]
[-180.60696411 115.43412018]
[-165.62149048 116.26393890]
[-150.75354004 118.31246185]
[-136.10202026 121.56605530]
[-121.76445007 126.00306702]
[-107.83625793 131.59396362]
[-94.41011810 138.30154419]
[-81.57539368 146.08117676]
[-69.41748810 154.88107300]
[-58.01731873 164.64266968]
[-47.45074844 175.30102539]
[-37.78810120 186.78518677]
[-25.56161308 178.09536743]
[-13.33512783 169.40553284]
[-1.10864234 160.71571350]
[2.52230358 154.27847290]
[11.36519337 151.98912048]
[23.71970177 143.48229980]
[36.07421112 134.97547913]
[38.51484680 120.32696533]
[50.92289352 111.52383423]
[66.27104950 114.18312073]
[78.62556458 105.67629242]
[90.98007202 97.16946411]
[93.07457733 92.36041260]
[97.71441650 89.06720734]
[103.83147430 88.59972382]
[116.43378448 80.46450806]
[129.03610229 72.32929230]
[134.54878235 65.04586792]
[141.88716125 64.16838837]
[154.60919189 56.22170639]
[167.33122253 48.27502060]
[174.93658447 34.40169907]
[189.83010864 34.22134018]
[202.55213928 26.27465630]
[215.27416992 18.32797241]
[227.99621582 10.38128757]
[240.71824646 2.43460298]
[253.44027710 -5.51208162]
[246.46302795 -18.79854202]
[240.49816895 -32.56926346]
[235.57910156 -46.74723816]
[231.73330688 -61.25317001]
[228.98229980 -76.00593567]
[227.34147644 -90.92304230]
[226.81999207 -105.92105103]
[227.42077637 -120.91609192]
[229.14047241 -135.82431030]
[231.96946716 -150.56231689]
[235.89192200 -165.04771423]
[240.88591003 -179.19946289]
[246.92349243 -192.93846130]
[253.97093201 -206.18783569]
[261.98876953 -218.87350464]
[270.93222046 -230.92451477]
[280.75125122 -242.27348328]
[291.39089966 -252.85694885]
[302.79174805 -262.61569214]
[314.88995361 -271.49517822]
[327.61791992 -279.44573975]
[340.90444946 -286.42288208]
[354.67523193 -292.38760376]
[368.85324097 -297.30654907]
[383.35922241 -301.15222168]
[398.11199951 -303.90307617]
[413.02911377 -305.54379272]
[428.02713013 -306.06512451]
[443.02215576 -305.46420288]
[457.93035889 -303.74438477]
[472.66836548 -300.91525269]
[487.15371704 -296.99267578]
[501.30541992 -291.99856567]
[515.04437256 -285.96087646]
[528.29370117 -278.91329956]
[540.97924805 -270.89535522]
[553.03021240 -261.95181274]
[564.37908936 -252.13269043]
[574.96246338 -241.49291992]
[584.72113037 -230.09201050]
[593.60046387 -217.99369812]
[601.55090332 -205.26567078]
[608.52795410 -191.97908020]
[614.49255371 -178.20825195]
[619.41137695 -164.03019714]
[623.25689697 -149.52420044]
[626.00762939 -134.77137756]
[627.64825439 -119.85424805]
[628.16943359 -104.85623169]
[627.56835938 -89.86119843]
[625.84844971 -74.95301056]
[623.01916504 -60.21504974]
[619.09649658 -45.72972870]
[614.10223389 -31.57805634]
[608.06439209 -17.83917809]
[601.01672363 -4.58992624]
[592.99865723 8.09560108]
[584.05499268 20.14646149]
[574.23577881 31.49526215]
[563.59594727 42.07853317]
[552.19494629 51.83708954]
[540.09655762 60.71635437]
[527.36846924 68.66667175]
[514.08178711 75.64358521]
[500.31091309 81.60806274]
[486.13281250 86.52676392]
[471.62677002 90.37217712]
[456.87393188 93.12278748]
[441.95678711 94.76322174]
[426.95877075 95.28430176]
[411.96374512 94.68312073]
[397.05557251 92.96302795]
[382.31762695 90.13365173]
[367.83236694 86.21081543]
[353.68072510 81.21645355]
[339.94189453 75.17849731]
[326.69271851 68.13072205]
[314.00726318 60.11252975]
[301.95648193 51.16876602]
[290.60775757 41.34945297]
[280.02456665 30.70950127]
[270.26611328 19.30841446]
[261.38696289 7.20995474]
[248.66493225 15.15663910]
[235.94290161 23.10332298]
[223.22085571 31.05000877]
[210.49882507 38.99669266]
[197.77677917 46.94337845]
[191.08139038 60.24829865]
[175.27790833 60.99705887]
[162.55587769 68.94374084]
[149.83384705 76.89042664]
[137.17131042 84.93160248]
[124.56900024 93.06681824]
[111.96669006 101.20203400]
[99.48690033 109.52397919]
[87.13238525 118.03079987]
[74.77787781 126.53762817]
[71.78679657 141.82458496]
[59.13638687 150.27572632]
[44.58103943 147.32998657]
[32.22652817 155.83680725]
[19.87202072 164.34364319]
[7.58118200 172.94219971]
[-4.64530373 181.63201904]
[-16.87178993 190.32185364]
[-29.09827423 199.01167297]
[-21.42934418 211.91284180]
[-14.83750629 225.39619446]
[-9.36662674 239.37196350]
[-5.05311537 253.74716187]
[-1.92567813 268.42611694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 205]
[71 204]
[72 203]
[73 202]
[75 201]
[76 200]
[77 199]
[80 196]
[81 195]
[82 194]
[85 193]
[86 192]
[87 191]
[89 190]
[90 189]
[91 188]
[93 186]
[94 185]
[95 184]
[96 183]
[97 182]
[98 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
