%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[212.19273376 199.33851624]
[199.59042358 191.20330811]
[186.98811340 183.06808472]
[174.38578796 174.93287659]
[161.78347778 166.79765320]
[149.18116760 158.66244507]
[137.29380798 160.90235901]
[126.72803497 154.22790527]
[123.43929291 141.75605774]
[130.95797729 154.73564148]
[135.55299377 169.01449585]
[137.01528931 183.94305420]
[135.27833557 198.84214783]
[130.42117310 213.03398132]
[122.66476440 225.87290955]
[112.36196136 236.77484131]
[99.98148346 245.24383545]
[86.08655548 250.89459229]
[71.30931091 253.47003174]
[56.32200623 252.85301208]
[41.80646896 249.07157898]
[28.42305756 242.29779053]
[16.78062820 232.83978271]
[7.40883541 221.12785339]
[0.73403203 207.69479370]
[-2.94012308 193.15173340]
[-3.44648051 178.16027832]
[-0.76200384 163.40245056]
[4.99118090 149.54962158]
[13.55134201 137.23200989]
[24.52904892 127.00997162]
[37.42489243 119.34855652]
[51.65219116 114.59630585]
[66.56370544 112.96940613]
[81.48105621 114.54187775]
[95.72560120 119.24217987]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[64.76610565 74.07608795]
[64.25318909 59.19031906]
[56.02438354 46.64891815]
[55.26972580 61.62992477]
[47.20884705 74.27991486]
[33.94884491 81.29221344]
[18.95584869 80.83381653]
[6.14899635 73.02455902]
[-1.12403488 59.90575790]
[-0.96209121 44.90663147]
[6.59249544 31.94791985]
[19.56497383 24.41699791]
[34.56436920 24.28243065]
[47.66923904 31.57877731]
[41.39188004 17.95546150]
[35.11451721 4.33214521]
[28.83715630 -9.29117107]
[22.55979729 -22.91448784]
[18.31619835 -8.52727509]
[6.49713039 0.70904630]
[-8.48918819 1.34955645]
[-21.05323029 -6.84463835]
[-26.50892067 -20.81730652]
[-22.82141876 -35.35698700]
[-11.36607456 -45.04074097]
[3.58455396 -46.25676727]
[16.45502281 -38.55063629]
[11.84101295 -52.82336807]
[7.22700357 -67.09609985]
[2.61299443 -81.36883545]
[-2.00101495 -95.64157104]
[-6.61502409 -109.91430664]
[-21.41519547 -107.32566071]
[-36.43160629 -106.82207489]
[-51.37195206 -108.41335297]
[-65.94541931 -112.06851196]
[-79.86833191 -117.71640015]
[-92.86967468 -125.24708557]
[-104.69636536 -134.51397705]
[-115.11820984 -145.33671570]
[-123.93233490 -157.50459290]
[-130.96716309 -170.78077698]
[-136.08576965 -184.90686035]
[-139.18852234 -199.60784912]
[-140.21502686 -214.59759521]
[-139.14527893 -229.58430481]
[-136.00012207 -244.27629089]
[-130.84077454 -258.38754272]
[-123.76766968 -271.64337158]
[-114.91847992 -283.78576660]
[-104.46545410 -294.57836914]
[-92.61206818 -303.81112671]
[-79.58905029 -311.30426025]
[-65.64990234 -316.91195679]
[-51.06594849 -320.52505493]
[-36.12107468 -322.07321167]
[-21.10618019 -321.52630615]
[-6.31353951 -318.89495850]
[7.96890593 -314.23043823]
[21.46314430 -307.62350464]
[33.90650558 -299.20275879]
[45.05677414 -289.13211060]
[54.69691086 -277.60763550]
[62.63926697 -264.85360718]
[68.72924042 -251.11830139]
[72.84828949 -236.66909790]
[74.91622925 -221.78724670]
[74.89281464 -206.76240540]
[72.77850342 -191.88706970]
[68.61444092 -177.45075989]
[62.48169327 -163.73451233]
[54.49962616 -151.00531006]
[44.82361984 -139.51091003]
[33.64201736 -129.47508240]
[21.17247200 -121.09316254]
[7.65770912 -114.52831268]
[12.27171898 -100.25557709]
[16.88572693 -85.98284912]
[21.49973679 -71.71011353]
[26.11374664 -57.43737793]
[30.72775650 -43.16464615]
[36.18311310 -29.19184685]
[42.46047211 -15.56853104]
[48.73783493 -1.94521534]
[55.01519394 11.67810059]
[61.29255676 25.30141640]
[68.56578827 38.42011261]
[76.79459381 50.96150970]
[90.24571991 57.35811615]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[131.76124573 129.27627563]
[150.15969849 130.03674316]
[157.31639099 146.06013489]
[169.91870117 154.19534302]
[182.52101135 162.33056641]
[195.12332153 170.46577454]
[207.72563171 178.60099792]
[220.32794189 186.73620605]
[229.56600952 174.90554810]
[239.82737732 163.95062256]
[251.02943420 153.95960999]
[263.08200073 145.01300049]
[275.88800049 137.18278503]
[289.34436035 130.53202820]
[303.34274292 125.11428070]
[317.77038574 120.97315979]
[332.51119995 118.14200592]
[347.44641113 116.64361572]
[362.45584106 116.49005127]
[377.41860962 117.68255615]
[392.21423340 120.21152496]
[406.72357178 124.05659485]
[420.82986450 129.18681335]
[434.41949463 135.56085205]
[447.38302612 143.12742615]
[459.61611938 151.82557678]
[471.02023315 161.58529663]
[481.50360107 172.32798767]
[490.98178101 183.96716309]
[499.37844849 196.40910339]
[506.62603760 209.55364990]
[512.66613770 223.29493713]
[517.45019531 237.52235413]
[520.93963623 252.12132263]
[523.10632324 266.97433472]
[523.93292236 281.96176147]
[523.41271973 296.96295166]
[521.54986572 311.85711670]
[518.35943604 326.52432251]
[513.86700439 340.84649658]
[508.10888672 354.70831299]
[501.13134766 367.99816895]
[492.99060059 380.60906982]
[483.75219727 392.43942261]
[473.49047852 403.39404297]
[462.28811646 413.38470459]
[450.23529053 422.33096313]
[437.42901611 430.16079712]
[423.97244263 436.81112671]
[409.97393799 442.22845459]
[395.54614258 446.36914062]
[380.80526733 449.19982910]
[365.86999512 450.69775391]
[350.86056519 450.85086060]
[335.89785767 449.65789795]
[321.10229492 447.12847900]
[306.59304810 443.28298950]
[292.48690796 438.15234375]
[278.89749146 431.77786255]
[265.93420410 424.21090698]
[253.70137024 415.51239014]
[242.29754639 405.75231934]
[231.81451416 395.00930786]
[222.33668518 383.36984253]
[213.94038391 370.92764282]
[206.69320679 357.78286743]
[200.65350342 344.04141235]
[195.86990356 329.81384277]
[192.38092041 315.21475220]
[190.21464539 300.36169434]
[189.38851929 285.37423706]
[189.90921021 270.37307739]
[191.77250671 255.47895813]
[194.96340942 240.81184387]
[199.45622253 226.48980713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 143]
[2 142]
[3 141]
[4 140]
[5 139]
[6 138]
[9 136]
[37 135]
[38 134]
[40 132]
[41 131]
[43 129]
[44 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[68 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
