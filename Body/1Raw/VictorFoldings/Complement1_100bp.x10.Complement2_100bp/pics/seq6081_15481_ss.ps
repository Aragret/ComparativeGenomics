%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[88.81960297 621.65106201]
[79.52546692 633.46923828]
[68.41278076 643.59631348]
[55.78471375 651.75610352]
[41.98575974 657.72589111]
[27.39237022 661.34295654]
[12.40266228 662.50848389]
[-2.57443571 661.19073486]
[-17.13033485 657.42572021]
[-30.86794281 651.31604004]
[-43.41248703 643.02844238]
[-54.42173767 632.78900146]
[-63.59535980 620.87701416]
[-70.68309021 607.61755371]
[-75.49156952 593.37225342]
[-77.88961792 578.52978516]
[-77.81182098 563.49505615]
[-75.26029205 548.67816162]
[-70.30463409 534.48339844]
[-63.08005905 521.29797363]
[-53.78364944 509.48159790]
[-42.66901398 499.35665894]
[-30.03937149 491.19931030]
[-16.23926926 485.23214722]
[-1.64518368 481.61795044]
[13.34474945 480.45529175]
[28.32159233 481.77590942]
[32.07789230 467.25384521]
[35.83419418 452.73178101]
[39.59049606 438.20971680]
[33.99698639 421.57604980]
[47.01300812 408.55050659]
[50.55268097 393.97412109]
[54.09235382 379.39773560]
[57.63202667 364.82138062]
[56.29043579 362.36001587]
[55.84298325 359.21893311]
[56.55345154 355.73602295]
[58.55854416 352.33834839]
[61.84065247 349.49551392]
[66.24164581 335.15567017]
[70.64264679 320.81582642]
[75.04364777 306.47598267]
[73.63716125 301.91189575]
[75.08287811 296.41580200]
[79.79504395 291.77825928]
[84.62104034 277.57580566]
[89.44704437 263.37332153]
[94.27304077 249.17088318]
[96.49815369 234.33683777]
[96.05155182 219.34349060]
[95.60494232 204.35012817]
[84.62161255 194.35504150]
[83.95510101 179.15600586]
[94.51335144 167.70344543]
[94.06674957 152.71009827]
[93.62014008 137.71675110]
[93.17353058 122.72340393]
[92.72692871 107.73004913]
[91.38869476 92.78986359]
[89.16357422 77.95581818]
[86.93846130 63.12177658]
[84.71334076 48.28773499]
[82.48822784 33.45368958]
[72.78939819 20.95396042]
[78.55311584 7.21973896]
[76.32799530 -7.61430454]
[74.10288239 -22.44834900]
[71.87776184 -37.28239059]
[62.17893219 -49.78212357]
[67.94264984 -63.51634216]
[65.71753693 -78.35038757]
[56.01870346 -90.85012054]
[61.78242111 -104.58433533]
[59.55730438 -119.41838074]
[57.33218765 -134.25242615]
[55.10707092 -149.08647156]
[52.88195419 -163.92051697]
[41.07991409 -178.05534363]
[48.13510513 -194.12367249]
[45.68937683 -208.92294312]
[43.24364853 -223.72221375]
[40.79792023 -238.52148438]
[38.24208832 -253.30213928]
[35.57629395 -268.06335449]
[32.91049957 -282.82458496]
[30.24470329 -297.58578491]
[15.19881439 -298.52636719]
[0.81543738 -303.04098511]
[-12.06919765 -310.86721802]
[-22.70599556 -321.54998779]
[-30.47654533 -334.46829224]
[-34.92907715 -348.87100220]
[-35.80472946 -363.92080688]
[-33.05259323 -378.74273682]
[-26.83267021 -392.47503662]
[-17.50658035 -404.31933594]
[-5.61653090 -413.58700562]
[8.14620686 -419.73928833]
[22.98148537 -422.41845703]
[38.02680206 -421.46878052]
[52.40743637 -416.94540405]
[65.28732300 -409.11138916]
[75.91764069 -398.42214966]
[83.68035889 -385.49917603]
[88.12416077 -371.09375000]
[88.99069214 -356.04342651]
[86.22956848 -341.22317505]
[80.00131989 -327.49465942]
[70.66805267 -315.65600586]
[58.77238464 -306.39550781]
[45.00592041 -300.25158691]
[47.67171478 -285.49035645]
[50.33750916 -270.72915649]
[53.00330734 -255.96794128]
[57.28549957 -249.94425964]
[55.59719086 -240.96720886]
[58.04291916 -226.16793823]
[60.48864746 -211.36866760]
[62.93437576 -196.56939697]
[72.58219910 -189.27241516]
[74.74089813 -176.96292114]
[67.71599579 -166.14562988]
[69.94111633 -151.31158447]
[72.16622925 -136.47753906]
[74.39134979 -121.64350128]
[76.61646271 -106.80945587]
[86.15614319 -95.37075806]
[80.55157471 -80.57550812]
[82.77669525 -65.74146271]
[92.31636810 -54.30276108]
[86.71180725 -39.50751114]
[88.93692017 -24.67346573]
[91.16204071 -9.83942223]
[93.38716125 4.99462175]
[102.92683411 16.43332291]
[97.32226562 31.22857285]
[99.54738617 46.06261826]
[101.77250671 60.89665985]
[103.99761963 75.73070526]
[106.22274017 90.56475067]
[114.31362152 77.93392944]
[128.24107361 72.36383820]
[142.81051636 75.93197632]
[152.58787537 87.30752563]
[153.92646790 102.24768066]
[146.32702637 115.18013000]
[132.62393188 121.28139496]
[117.92813110 118.27585602]
[107.72027588 107.28344727]
[108.16688538 122.27679443]
[108.61348724 137.27014160]
[109.06009674 152.26348877]
[109.50669861 167.25685120]
[120.72789764 178.06066895]
[120.96723175 193.27241516]
[110.59829712 203.90353394]
[111.04489899 218.89688110]
[111.49150848 233.89022827]
[117.74395752 220.25546265]
[127.03912354 208.48262024]
[138.85131836 199.23750305]
[152.51249695 193.04296875]
[167.25006104 190.24935913]
[182.23051453 191.01466370]
[196.60667419 195.29559326]
[209.56546021 202.85003662]
[220.37400818 213.25076294]
[228.42105103 225.90956116]
[233.25148010 240.11051941]
[234.59210205 255.05049133]
[232.36711121 269.88455200]
[226.70233154 283.77377319]
[217.91815186 295.93264771]
[206.51133728 305.67352295]
[193.12701416 312.44549561]
[178.52212524 315.86563110]
[163.52264404 315.74044800]
[148.97688293 312.07702637]
[135.70744324 305.08261108]
[124.46479797 295.15270996]
[115.88477325 282.84890747]
[110.45260620 268.86709595]
[108.47549438 253.99687195]
[103.64949799 268.19934082]
[98.82350159 282.40179443]
[93.99750519 296.60424805]
[89.38349152 310.87698364]
[84.98249054 325.21682739]
[80.58149719 339.55667114]
[76.18049622 353.89651489]
[72.20840454 368.36105347]
[68.66873169 382.93740845]
[65.12905884 397.51379395]
[61.58938599 412.09017944]
[67.62120056 423.49105835]
[64.37290955 435.55886841]
[54.11255264 441.96603394]
[50.35625458 456.48809814]
[46.59995270 471.01013184]
[42.84365082 485.53219604]
[56.58243561 491.63922119]
[69.12857819 499.92440796]
[80.13980103 510.16171265]
[89.31571960 522.07189941]
[96.40600586 535.33001709]
[101.21722412 549.57440186]
[103.61813354 564.41638184]
[103.54322815 579.45117188]
[100.99455261 594.26855469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 201]
[28 200]
[29 199]
[30 198]
[32 195]
[33 194]
[34 193]
[35 192]
[40 191]
[41 190]
[42 189]
[43 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 159]
[51 158]
[52 157]
[55 154]
[56 153]
[57 152]
[58 151]
[59 150]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[66 135]
[67 134]
[68 133]
[69 132]
[71 130]
[72 129]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[80 120]
[81 119]
[82 118]
[83 117]
[84 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
