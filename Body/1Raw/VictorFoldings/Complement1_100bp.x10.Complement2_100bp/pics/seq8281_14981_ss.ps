%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[220.65489197 486.29684448]
[231.21492004 475.59469604]
[243.39251709 466.77676392]
[236.71232605 453.34637451]
[230.03211975 439.91601562]
[223.35192871 426.48562622]
[220.74038696 425.46679688]
[218.37507629 423.35211182]
[216.67538452 420.23019409]
[216.02096558 416.33966064]
[216.70077515 412.05108643]
[210.83180237 398.24691772]
[204.96284485 384.44271851]
[199.09388733 370.63854980]
[193.22492981 356.83438110]
[181.12472534 348.14907837]
[182.84568787 332.42175293]
[176.97673035 318.61755371]
[171.10777283 304.81338501]
[165.23880005 291.00921631]
[153.13861084 282.32391357]
[154.85957336 266.59655762]
[148.99061584 252.79238892]
[137.89332581 247.97816467]
[132.89082336 236.52571106]
[137.16468811 224.35620117]
[131.50189209 210.46617126]
[119.04282379 207.17967224]
[110.62590027 197.16781616]
[109.49551392 183.94160461]
[116.28759003 172.31050110]
[110.83223724 158.33770752]
[105.37687683 144.36491394]
[99.92152405 130.39212036]
[96.93391418 145.09158325]
[87.93341827 157.09120178]
[74.65789032 164.07406616]
[59.67061615 164.69184875]
[45.86540985 158.82531738]
[35.90784454 147.60716248]
[31.72056389 133.20346069]
[34.11206818 118.39533234]
[42.62059784 106.04199219]
[55.60328293 98.52867889]
[70.55337524 97.30610657]
[84.58425140 102.61031342]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.63687134 45.30735016]
[78.75160217 30.58745766]
[75.86633301 15.86756706]
[65.61903381 3.81337929]
[70.76373291 -10.16450596]
[67.87846375 -24.88439751]
[55.45704269 -38.47814178]
[61.78770447 -54.84547424]
[58.68359756 -69.52077484]
[55.57948685 -84.19608307]
[45.33430862 -73.23996735]
[30.36948586 -74.26661682]
[21.71652222 -86.51921844]
[25.75406456 -100.96560669]
[39.50578690 -106.95645142]
[52.83342743 -100.07682800]
[50.82941437 -114.94235992]
[48.82540131 -129.80789185]
[46.82138824 -144.67341614]
[44.81737137 -159.53894043]
[35.05222702 -167.96537781]
[33.68911743 -180.38816833]
[40.91662598 -190.08815002]
[39.13415909 -204.98185730]
[29.81179237 -217.76481628]
[35.98187637 -231.32135010]
[34.19940948 -246.21507263]
[30.07240868 -254.36402893]
[32.50297928 -261.34359741]
[30.94245720 -276.26217651]
[29.38193512 -291.18078613]
[27.82141113 -306.09939575]
[26.26088905 -321.01800537]
[11.09931469 -332.37762451]
[9.09008121 -350.89453125]
[21.04519844 -364.75781250]
[19.04118538 -379.62335205]
[4.04407024 -381.10095215]
[-10.20784283 -385.99783325]
[-22.94596672 -394.04998779]
[-33.48334885 -404.82312012]
[-41.25172424 -417.73623657]
[-45.83215332 -432.09301758]
[-46.97761917 -447.11914062]
[-44.62634659 -462.00430298]
[-38.90513992 -475.94577026]
[-30.12253189 -488.19168091]
[-18.75216293 -498.08166504]
[-5.40721941 -505.08230591]
[9.19262123 -508.81613159]
[24.26000977 -509.08172607]
[38.98237991 -505.86480713]
[52.56576920 -499.33886719]
[64.27764893 -489.85577393]
[73.48641205 -477.92703247]
[79.69543457 -464.19586182]
[82.56987762 -449.40280151]
[81.95471954 -434.34564209]
[77.88314819 -419.83636475]
[70.57472229 -406.65747070]
[60.42358780 -395.51962280]
[47.97717667 -387.02352905]
[33.90671158 -381.62734985]
[35.91072464 -366.76184082]
[46.26722336 -361.97549438]
[53.09786987 -352.68795776]
[54.61251831 -341.13809204]
[50.32018661 -330.18011475]
[41.17949295 -322.57852173]
[42.74001694 -307.65991211]
[44.30054092 -292.74130249]
[45.86106110 -277.82272339]
[47.42158508 -262.90411377]
[49.09312820 -247.99752808]
[50.87559128 -233.10382080]
[60.07046509 -221.38615417]
[54.02787781 -206.76432800]
[55.81034088 -191.87060547]
[67.07032013 -178.41030884]
[59.68289948 -161.54295349]
[61.68691635 -146.67742920]
[63.69092941 -131.81190491]
[65.69493866 -116.94637299]
[67.69895935 -102.08084106]
[70.25479126 -87.30018616]
[73.35890198 -72.62488556]
[76.46300507 -57.94958496]
[86.42704010 -51.09067535]
[89.13323212 -38.88984299]
[82.59835815 -27.76967049]
[85.48362732 -13.04977894]
[95.52455139 -2.04845595]
[90.58621979 12.98229408]
[93.47149658 27.70218658]
[96.35676575 42.42207718]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[113.89431763 124.93675995]
[119.34967804 138.90956116]
[124.80503082 152.88235474]
[130.26039124 166.85514832]
[146.40769958 173.58447266]
[152.57087708 189.59478760]
[145.39192200 204.80339050]
[151.05470276 218.69342041]
[165.85894775 229.64402771]
[162.79478455 246.92343140]
[168.66374207 260.72760010]
[181.18373108 270.40029907]
[179.04298401 285.14025879]
[184.91194153 298.94442749]
[190.78089905 312.74859619]
[196.64987183 326.55276489]
[209.16984558 336.22546387]
[207.02909851 350.96542358]
[212.89805603 364.76959229]
[218.76702881 378.57376099]
[224.63598633 392.37792969]
[230.50494385 406.18212891]
[236.78230286 419.80545044]
[243.46249390 433.23580933]
[250.14270020 446.66619873]
[256.82287598 460.09655762]
[271.20223999 455.70523071]
[286.10830688 453.74069214]
[301.13439941 454.25653076]
[315.87063599 457.23873901]
[329.91497803 462.60589600]
[342.88427734 470.21160889]
[354.42474365 479.84838867]
[364.22152710 491.25335693]
[372.00738525 504.11532593]
[377.56988525 518.08343506]
[380.75732422 532.77661133]
[381.48269653 547.79406738]
[379.72622681 562.72607422]
[375.53585815 577.16528320]
[369.02587891 590.71777344]
[360.37387085 603.01385498]
[349.81591797 613.71801758]
[337.64001465 622.53833008]
[324.17834473 629.23406982]
[309.79815674 633.62261963]
[294.89172363 635.58428955]
[279.86572266 635.06555176]
[265.13006592 632.08050537]
[251.08676147 626.71063232]
[238.11892700 619.10241699]
[226.58030701 609.46343994]
[216.78572083 598.05657959]
[209.00234985 585.19311523]
[203.44252014 571.22393799]
[200.25793457 556.53009033]
[199.53546143 541.51251221]
[201.29479980 526.58087158]
[205.48796082 512.14245605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[11 173]
[12 172]
[13 171]
[14 170]
[15 169]
[17 167]
[18 166]
[19 165]
[20 164]
[22 162]
[23 161]
[26 159]
[27 158]
[31 155]
[32 154]
[33 153]
[34 152]
[47 151]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[56 142]
[57 141]
[59 138]
[60 137]
[61 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[74 129]
[75 128]
[77 126]
[78 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
