%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[123.86430359 730.47247314]
[110.34550476 723.96343994]
[97.22415924 716.68634033]
[84.54385376 708.66540527]
[72.34671021 699.92724609]
[60.67325211 690.50091553]
[49.56225586 680.41766357]
[39.05063248 669.71105957]
[29.17329788 658.41662598]
[19.96306419 646.57189941]
[11.45052814 634.21624756]
[3.66396761 621.39068604]
[-3.37075186 608.13781738]
[-9.63026142 594.50164795]
[-15.09376717 580.52758789]
[-19.74312019 566.26190186]
[-23.56287384 551.75207520]
[-26.54034233 537.04626465]
[-28.66563225 522.19335938]
[-29.93168449 507.24267578]
[-30.33429527 492.24389648]
[-29.87212372 477.24682617]
[-28.54670525 462.30130005]
[-26.36244583 447.45693970]
[-23.32659912 432.76309204]
[-19.44925117 418.26855469]
[-14.74328232 404.02145386]
[-9.22432327 390.06915283]
[-2.91070986 376.45797729]
[4.17658615 363.23315430]
[12.01401997 350.43859863]
[20.57555771 338.11685181]
[29.83275795 326.30880737]
[39.75486755 315.05368042]
[50.30892944 304.38891602]
[61.45988464 294.34988403]
[73.17068481 284.96997070]
[85.40242767 276.28033447]
[98.11448669 268.30978394]
[111.26463318 261.08486938]
[124.80918121 254.62957764]
[119.14639282 240.73954773]
[113.48360443 226.84951782]
[107.82081604 212.95948792]
[102.15803528 199.06945801]
[96.49524689 185.17944336]
[95.43640137 200.14201355]
[91.11852264 214.50711060]
[83.75230408 227.57382202]
[73.69714355 238.70457458]
[61.44366837 247.35629272]
[47.58974457 253.10684204]
[32.81133652 255.67562866]
[17.82951927 254.93733215]
[3.37528396 250.92794800]
[-9.84611225 243.84313965]
[-21.18956947 234.02854919]
[-30.10161209 221.96308899]
[-36.14740753 208.23542786]
[-39.03196335 193.51539612]
[-38.61453629 178.52120972]
[-34.91549301 163.98446655]
[-28.11532211 150.61444092]
[-18.54581451 139.06347656]
[-6.67389011 129.89520264]
[6.92119455 123.55693054]
[21.57610512 120.35792542]
[36.57579422 120.45428467]
[51.18839645 123.84129333]
[64.70092773 130.35369873]
[76.45408630 139.67375183]
[85.87440491 151.34669495]
[92.50000000 164.79675293]
[92.50000000 149.79675293]
[92.50000000 134.79675293]
[92.50000000 119.79676056]
[82.53501892 111.96395111]
[78.83075714 99.84239960]
[82.71508026 87.77734375]
[92.79557800 80.09377289]
[93.01890564 65.09543610]
[93.24223328 50.09709549]
[93.46556091 35.09875870]
[93.68888855 20.10042191]
[93.91221619 5.10208464]
[94.13554382 -9.89625263]
[94.35887146 -24.89459038]
[86.82788849 -38.80842972]
[94.75382233 -51.41909409]
[94.97714996 -66.41743469]
[95.20047760 -81.41577148]
[80.50154114 -84.66015625]
[66.75671387 -90.79731750]
[54.52885437 -99.57594299]
[44.31867981 -110.63655853]
[36.54428482 -123.52622986]
[31.52403450 -137.71714783]
[29.46349907 -152.62817383]
[30.44705963 -167.64874268]
[34.43443680 -182.16377258]
[41.26235199 -195.57884216]
[50.65120697 -207.34466553]
[62.21653366 -216.97940063]
[75.48474121 -224.08851624]
[89.91249847 -228.38092041]
[104.90900421 -229.68081665]
[119.86015320 -227.93498230]
[134.15371704 -223.21492004]
[147.20437622 -215.71391296]
[158.47770691 -205.73910522]
[167.51208496 -193.69897461]
[173.93756104 -180.08654785]
[177.49101257 -165.45924377]
[178.02691650 -150.41604614]
[175.52333069 -135.57296753]
[170.08279419 -121.53781891]
[161.92807007 -108.88533020]
[151.39311218 -98.13362122]
[138.90928650 -89.72295380]
[124.98783875 -83.99774170]
[110.19881439 -81.19244385]
[109.97548676 -66.19410706]
[109.75215912 -51.19576645]
[117.29911041 -38.35470963]
[109.35720825 -24.67126274]
[109.13388062 -9.67292500]
[108.91055298 5.32541227]
[108.68722534 20.32374954]
[108.46389771 35.32208633]
[108.24057007 50.32042313]
[108.01724243 65.31876373]
[107.79391479 80.31710052]
[119.55626678 91.89357758]
[119.43340302 108.39669037]
[107.50000000 119.79676056]
[107.50000000 134.79675293]
[107.50000000 149.79675293]
[107.50000000 164.79675293]
[110.38526917 179.51664734]
[116.04805756 193.40667725]
[121.71084595 207.29670715]
[127.37363434 221.18673706]
[133.03642273 235.07675171]
[138.69920349 248.96678162]
[152.89633179 244.11216736]
[167.34956360 240.08354187]
[182.01087952 236.89428711]
[196.83158875 234.55500793]
[211.76246643 233.07345581]
[226.75387573 232.45455933]
[241.75605774 232.70039368]
[256.71914673 233.81011963]
[271.59347534 235.78005981]
[286.32955933 238.60366821]
[300.87854004 242.27156067]
[315.19201660 246.77156067]
[329.22247314 252.08871460]
[342.92327881 258.20535278]
[356.24893188 265.10119629]
[369.15518188 272.75326538]
[381.59915161 281.13619995]
[393.53948975 290.22213745]
[404.93652344 299.98089600]
[415.75241089 310.38003540]
[425.95120239 321.38504028]
[435.49905396 332.95935059]
[444.36422729 345.06448364]
[452.51724243 357.66027832]
[459.93109131 370.70486450]
[466.58105469 384.15487671]
[472.44512939 397.96569824]
[477.50375366 412.09143066]
[481.74020386 426.48510742]
[485.14031982 441.09896851]
[487.69290161 455.88442993]
[489.38937378 470.79241943]
[490.22418213 485.77334595]
[490.19451904 500.77752686]
[489.30047607 515.75506592]
[487.54501343 530.65618896]
[484.93399048 545.43145752]
[481.47607422 560.03173828]
[477.18276978 574.40856934]
[472.06826782 588.51416016]
[466.14965820 602.30169678]
[459.44653320 615.72528076]
[451.98117065 628.74047852]
[443.77835083 641.30389404]
[434.86538696 653.37390137]
[425.27185059 664.91033936]
[415.02960205 675.87487793]
[404.17266846 686.23120117]
[392.73712158 695.94476318]
[380.76092529 704.98339844]
[368.28390503 713.31707764]
[355.34750366 720.91802979]
[341.99465942 727.76110840]
[328.26977539 733.82354736]
[314.21838379 739.08514404]
[299.88723755 743.52850342]
[285.32388306 747.13879395]
[270.57672119 749.90411377]
[255.69473267 751.81518555]
[240.72735596 752.86572266]
[225.72433472 753.05224609]
[210.73547363 752.37408447]
[195.81059265 750.83343506]
[180.99925232 748.43554688]
[166.35064697 745.18835449]
[151.91346741 741.10260010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[73 138]
[74 137]
[75 136]
[76 135]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[89 123]
[90 122]
[91 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
