%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[90.96216583 760.97357178]
[75.99714661 759.77917480]
[61.22541428 757.10064697]
[46.79378891 752.96459961]
[32.84570312 747.41217041]
[19.51977921 740.49853516]
[6.94846296 732.29235840]
[-4.74330425 722.87530518]
[-15.43932152 712.34088135]
[-25.03328323 700.79382324]
[-33.42984009 688.34887695]
[-40.54553604 675.12976074]
[-46.30965424 661.26782227]
[-50.66490936 646.90081787]
[-53.56800842 632.17156982]
[-54.99010468 617.22650146]
[-54.91706085 602.21405029]
[-53.34960556 587.28350830]
[-50.30331421 572.58319092]
[-45.80846405 558.25927734]
[-39.90972900 544.45404053]
[-32.66573715 531.30480957]
[-24.14847755 518.94213867]
[-14.44260883 507.48898315]
[-3.64458942 497.05917358]
[8.13825989 487.75631714]
[20.78883362 479.67291260]
[34.18140030 472.88925171]
[48.18285751 467.47280884]
[62.65404510 463.47741699]
[77.45114136 460.94274902]
[92.42707825 459.89398193]
[92.87368774 444.90063477]
[93.32028961 429.90728760]
[93.76689911 414.91394043]
[93.99022675 399.91561890]
[93.99022675 384.91561890]
[86.25292206 372.18832397]
[93.99022675 358.38815308]
[93.99022675 343.38815308]
[93.99022675 328.38815308]
[93.99022675 313.38815308]
[81.60096741 302.01516724]
[81.26388550 284.86285400]
[93.67587280 272.53558350]
[93.45254517 257.53723145]
[90.20980072 250.89598083]
[93.33921051 242.31433105]
[93.33921051 227.31433105]
[93.33921051 212.31433105]
[93.33921051 197.31433105]
[85.60191345 184.58706665]
[93.33921051 170.78689575]
[83.75852203 156.08392334]
[93.09796143 140.21394348]
[92.87463379 125.21559906]
[92.65130615 110.21726227]
[92.09309387 95.22765350]
[91.20027924 80.25424957]
[90.30746460 65.28084564]
[89.41464996 50.30743790]
[88.52182770 35.33403015]
[87.62901306 20.36062622]
[86.73619843 5.38721991]
[73.80846405 1.70852208]
[62.66223526 -5.76200151]
[54.37438583 -16.28569031]
[49.74043274 -28.82974052]
[49.19816589 -42.16855621]
[52.78632355 -55.00348663]
[60.14220810 -66.08927155]
[70.53827667 -74.35485077]
[82.95409393 -79.00685120]
[82.50749207 -94.00019836]
[82.06088257 -108.99354553]
[73.91613007 -122.55723572]
[81.27106476 -135.50923157]
[80.82445526 -150.50257874]
[70.78569794 -165.93971252]
[79.70031738 -181.05581665]
[79.03052521 -196.04084778]
[70.68473816 -209.48176575]
[77.84601593 -222.54183960]
[77.17623138 -237.52687073]
[76.50644684 -252.51191711]
[75.83666229 -267.49694824]
[75.16687775 -282.48199463]
[74.38555145 -297.46163940]
[73.49273682 -312.43502808]
[64.94775391 -325.75021362]
[71.91379547 -338.91543579]
[57.08628464 -341.63726807]
[43.34130096 -347.82910156]
[31.47795677 -357.13098145]
[22.18597412 -369.00204468]
[16.00557518 -382.75216675]
[13.29608059 -397.58193970]
[14.21501732 -412.62918091]
[18.70895958 -427.01901245]
[26.51663399 -439.91491699]
[37.18411255 -450.56704712]
[50.09120560 -458.35617065]
[64.48751068 -462.82940674]
[79.53604126 -463.72671509]
[94.36190033 -460.99588013]
[108.10312653 -454.79571533]
[119.96083069 -445.48666382]
[129.24562073 -433.60995483]
[135.41767883 -419.85610962]
[138.11817932 -405.02468872]
[137.19012451 -389.97802734]
[132.68745422 -375.59088135]
[124.87196350 -362.69973755]
[114.19802856 -352.05407715]
[101.28621674 -344.27276611]
[86.88719940 -339.80825806]
[95.36832428 -327.56408691]
[88.46614075 -313.32785034]
[89.35896301 -298.35443115]
[92.89501190 -291.86459351]
[90.15191650 -283.15176392]
[90.82170105 -268.16674805]
[91.49148560 -253.18170166]
[92.16127014 -238.19665527]
[92.83105469 -223.21162415]
[101.12894440 -210.84252930]
[94.01557159 -196.71063232]
[94.68535614 -181.72560120]
[103.39771271 -173.33384705]
[104.07836151 -160.85505676]
[95.81781006 -150.94918823]
[96.26441193 -135.95584106]
[104.37722015 -123.46457672]
[97.05422974 -109.44015503]
[97.50083923 -94.44680786]
[97.94744873 -79.45345306]
[113.64891815 -73.91092682]
[126.04451752 -62.73815155]
[133.21372986 -47.62813568]
[134.03125000 -30.88676834]
[128.34342957 -15.08093452]
[116.99625397 -2.64493728]
[101.70960236 4.49440384]
[102.60241699 19.46780968]
[103.49523926 34.44121552]
[104.38805389 49.41461945]
[105.28086853 64.38802338]
[106.17368317 79.36143494]
[107.06649780 94.33483887]
[109.55902863 97.27757263]
[110.74234009 101.30468750]
[110.16122437 105.80683136]
[107.64964294 109.99393463]
[107.87297058 124.99227142]
[108.09629822 139.99061584]
[116.79093170 149.51774597]
[116.66816711 162.01448059]
[108.33921051 170.78689575]
[116.07651520 184.58706665]
[108.33921051 197.31433105]
[108.33921051 212.31433105]
[108.33921051 227.31433105]
[108.33921051 242.31433105]
[108.45088196 257.31390381]
[108.67420959 272.31225586]
[119.35464478 280.51852417]
[123.30105591 293.19274902]
[119.28662872 305.64132690]
[108.99022675 313.38815308]
[108.99022675 328.38815308]
[108.99022675 343.38815308]
[108.99022675 358.38815308]
[116.72752380 372.18832397]
[108.99022675 384.91561890]
[108.99022675 399.91561890]
[111.95978546 405.82266235]
[111.56036377 411.49163818]
[108.76024628 415.36053467]
[108.31364441 430.35391235]
[107.86703491 445.34725952]
[107.42043304 460.34060669]
[122.30739594 462.27886963]
[136.92738342 465.68978882]
[151.13511658 470.53945923]
[164.78935242 476.77966309]
[177.75440979 484.34841919]
[189.90141296 493.17047119]
[201.10966492 503.15817261]
[211.26774597 514.21221924]
[220.27470398 526.22277832]
[228.04101562 539.07043457]
[234.48950195 552.62756348]
[239.55609131 566.75939941]
[243.19038391 581.32543945]
[245.35630798 596.18103027]
[246.03230286 611.17840576]
[245.21165466 626.16857910]
[242.90252686 641.00256348]
[239.12788391 655.53289795]
[233.92521667 669.61517334]
[227.34623718 683.10943604]
[219.45632935 695.88159180]
[210.33392334 707.80468750]
[200.06968689 718.76025391]
[188.76560974 728.63934326]
[176.53405762 737.34381104]
[163.49659729 744.78710938]
[149.78279114 750.89532471]
[135.52894592 755.60772705]
[120.87672424 758.87744141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 181]
[33 180]
[34 179]
[35 178]
[36 175]
[37 174]
[39 172]
[40 171]
[41 170]
[42 169]
[45 165]
[46 164]
[48 163]
[49 162]
[50 161]
[51 160]
[53 158]
[55 155]
[56 154]
[57 153]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[73 136]
[74 135]
[75 134]
[77 132]
[78 131]
[80 128]
[81 127]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 119]
[89 118]
[91 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
