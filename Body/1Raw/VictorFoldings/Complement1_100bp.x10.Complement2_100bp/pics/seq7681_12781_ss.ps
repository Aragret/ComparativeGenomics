%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[39.01956177 854.44824219]
[24.02298164 854.89678955]
[9.02306080 854.57897949]
[-5.94106674 853.49572754]
[-20.83036041 851.64978027]
[-35.60597610 849.04595947]
[-50.22936630 845.69110107]
[-64.66238403 841.59393311]
[-78.86736298 836.76513672]
[-92.80725098 831.21734619]
[-106.44568634 824.96502686]
[-119.74708557 818.02441406]
[-132.67674255 810.41375732]
[-145.20091248 802.15277100]
[-157.28694153 793.26306152]
[-168.90330505 783.76788330]
[-180.01966858 773.69189453]
[-190.60705566 763.06146240]
[-200.63781738 751.90435791]
[-210.08581543 740.24957275]
[-218.92639160 728.12756348]
[-227.13647461 715.56994629]
[-234.69464111 702.60955811]
[-241.58119202 689.28009033]
[-247.77815247 675.61639404]
[-253.26933289 661.65411377]
[-258.04043579 647.42962646]
[-262.07901001 632.98010254]
[-265.37451172 618.34326172]
[-267.91833496 603.55718994]
[-269.70385742 588.66052246]
[-270.72644043 573.69213867]
[-270.98336792 558.69104004]
[-270.47399902 543.69641113]
[-269.19964600 528.74731445]
[-267.16366577 513.88281250]
[-264.37133789 499.14169312]
[-260.82998657 484.56234741]
[-256.54879761 470.18283081]
[-251.53895569 456.04067993]
[-245.81356812 442.17279053]
[-239.38752747 428.61532593]
[-232.27761841 415.40368652]
[-224.50239563 402.57229614]
[-216.08212280 390.15466309]
[-207.03878784 378.18316650]
[-197.39598083 366.68902588]
[-187.17884827 355.70227051]
[-176.41404724 345.25155640]
[-165.12968445 335.36410522]
[-153.35516357 326.06573486]
[-141.12123108 317.38073730]
[-128.45979309 309.33172607]
[-115.40388489 301.93969727]
[-101.98756409 295.22399902]
[-88.24583435 289.20205688]
[-74.21454620 283.88967896]
[-59.93030548 279.30062866]
[-45.43037796 275.44696045]
[-30.75259781 272.33868408]
[-15.93525124 269.98394775]
[-1.01699805 268.38882446]
[13.96324158 267.55755615]
[28.96638680 267.49224854]
[43.95329666 268.19311523]
[58.88486862 269.65829468]
[61.10998535 254.82424927]
[63.33510208 239.99020386]
[65.56021881 225.15615845]
[67.78533936 210.32211304]
[54.35509491 217.00256348]
[40.69467545 210.80636597]
[36.87403870 196.30108643]
[45.70961380 184.17951965]
[60.68814087 183.37719727]
[70.76753235 194.48400879]
[74.08979034 179.85655212]
[77.41204834 165.22908020]
[80.73431396 150.60162354]
[84.05657196 135.97416687]
[87.37882996 121.34670258]
[90.70108795 106.71924591]
[79.38900757 116.56997681]
[64.68636322 119.54186249]
[50.43637848 114.85806274]
[40.36397552 103.74290466]
[37.10205078 89.10187531]
[41.50326538 74.76209259]
[52.41715240 64.47194672]
[66.99084473 60.92125702]
[81.41482544 65.03816986]
[91.91868591 75.74652100]
[95.75675201 90.24629974]
[101.21210480 76.27349854]
[106.66746521 62.30070496]
[111.28147125 48.02796936]
[115.03777313 33.50591278]
[118.79407501 18.98385239]
[122.55037689 4.46179295]
[109.03215790 -2.15959334]
[97.12374878 -11.36690998]
[87.31278992 -22.78312302]
[80.00102997 -35.94074631]
[75.48787689 -50.30097961]
[73.95815277 -65.27578735]
[75.47448730 -80.25195312]
[79.97480011 -94.61621857]
[87.27479553 -107.78037262]
[97.07554626 -119.20535278]
[108.97571564 -128.42330933]
[122.48800659 -135.05677795]
[137.05909729 -138.83412170]
[152.09230042 -139.60066223]
[166.97203064 -137.32501221]
[181.08895874 -132.10034180]
[193.86500549 -124.14060974]
[204.77702332 -113.77176666]
[213.37814331 -101.41840363]
[219.31617737 -87.58638763]
[222.34794617 -72.84212494]
[222.34930420 -57.78938675]
[219.32020569 -43.04457474]
[213.38468933 -29.21147728]
[204.78581238 -16.85655403]
[193.87568665 -6.48573065]
[181.10107422 1.47631621]
[166.98509216 6.70354462]
[152.10577393 8.98190308]
[137.07243347 8.21809387]
[133.31613159 22.74015236]
[129.55982971 37.26221085]
[125.80353546 51.78427124]
[138.19139099 43.32607269]
[153.18789673 43.64935303]
[165.19975281 52.63352966]
[169.74681091 66.92773438]
[165.13314819 81.20057678]
[153.07952881 90.12863922]
[138.08166504 90.38198090]
[125.73339081 81.86610413]
[120.64025879 67.75605774]
[115.18490601 81.72885895]
[109.72954559 95.70166016]
[105.32855225 110.04150391]
[102.00628662 124.66896057]
[98.68402863 139.29641724]
[95.36177063 153.92388916]
[92.03951263 168.55134583]
[88.71725464 183.17880249]
[85.39498901 197.80625916]
[82.61938477 212.54722595]
[80.39426422 227.38127136]
[78.16914368 242.21531677]
[75.94403076 257.04934692]
[73.71891022 271.88339233]
[88.42322540 274.86361694]
[102.95619202 278.59075928]
[117.27988434 283.05511475]
[131.35694885 288.24502563]
[145.15063477 294.14694214]
[158.62498474 300.74548340]
[171.74482727 308.02340698]
[184.47593689 315.96176147]
[196.78511047 324.53979492]
[208.64021301 333.73519897]
[220.01034546 343.52389526]
[230.86581421 353.88040161]
[241.17831421 364.77770996]
[250.92094421 376.18734741]
[260.06826782 388.07955933]
[268.59646606 400.42333984]
[276.48321533 413.18646240]
[283.70800781 426.33566284]
[290.25198364 439.83657837]
[296.09802246 453.65405273]
[301.23092651 467.75198364]
[305.63729858 482.09362793]
[309.30560303 496.64154053]
[312.22628784 511.35781860]
[314.39178467 526.20397949]
[315.79635620 541.14141846]
[316.43640137 556.13104248]
[316.31021118 571.13378906]
[315.41815186 586.11053467]
[313.76254272 601.02215576]
[311.34768677 615.82983398]
[308.17987061 630.49487305]
[304.26739502 644.97906494]
[299.62045288 659.24456787]
[294.25119019 673.25421143]
[288.17355347 686.97137451]
[281.40344238 700.36035156]
[273.95852661 713.38616943]
[265.85821533 726.01483154]
[257.12362671 738.21343994]
[247.77757263 749.95013428]
[237.84442139 761.19427490]
[227.35009766 771.91656494]
[216.32197571 782.08905029]
[204.78881836 791.68511963]
[192.78073120 800.67980957]
[180.32904053 809.04962158]
[167.46620178 816.77276611]
[154.22581482 823.82897949]
[140.64239502 830.19995117]
[126.75138092 835.86901855]
[112.58902740 840.82147217]
[98.19227600 845.04425049]
[83.59867859 848.52642822]
[68.84632111 851.25891113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[93 143]
[94 142]
[95 141]
[96 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
