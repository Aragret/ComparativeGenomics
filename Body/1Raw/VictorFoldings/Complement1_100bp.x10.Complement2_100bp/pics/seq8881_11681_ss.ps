%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[134.53575134 594.10455322]
[127.40008545 580.90203857]
[121.29599762 567.19213867]
[116.25931549 553.05511475]
[112.31958771 538.57403564]
[109.49994659 523.83386230]
[107.81693268 508.92114258]
[107.28042603 493.92330933]
[107.89356995 478.92840576]
[109.65277100 464.02444458]
[112.54770660 449.29888916]
[116.56138611 434.83816528]
[121.67024994 420.72708130]
[127.84432220 407.04849243]
[135.04736328 393.88269043]
[143.23712158 381.30688477]
[152.36552429 369.39489746]
[162.37898254 358.21667480]
[173.21876526 347.83773804]
[184.82124329 338.31906128]
[176.22267151 326.02822876]
[167.62411499 313.73739624]
[159.02554321 301.44653320]
[150.42698669 289.15570068]
[141.82841492 276.86486816]
[133.22985840 264.57403564]
[133.40083313 279.57305908]
[126.66415405 292.97518921]
[114.52483368 301.78637695]
[99.69480896 304.03814697]
[85.48715973 299.22747803]
[75.07589722 288.42904663]
[70.78693390 274.05529785]
[73.57843781 259.31735229]
[82.82676697 247.50767517]
[96.46582794 241.26460266]
[111.44862366 241.98284912]
[124.42797089 249.50196838]
[117.94847107 235.97361755]
[111.46897888 222.44528198]
[104.98947906 208.91693115]
[98.50998688 195.38858032]
[98.32701111 210.38746643]
[95.16923523 225.05131531]
[89.16243744 238.79608154]
[80.54586029 251.07429504]
[69.66270447 261.39694214]
[56.94644547 269.35284424]
[42.90355682 274.62518311]
[28.09336853 277.00387573]
[13.10576057 276.39425659]
[-1.46231318 272.82058716]
[-15.03061390 266.42517090]
[-27.05871964 257.46276855]
[-37.06755829 246.29034424]
[-44.65847778 233.35287476]
[-49.52914047 219.16567993]
[-51.48554230 204.29380798]
[-50.44976807 189.32962036]
[-46.46306610 174.86911011]
[-39.68423080 161.48825073]
[-30.38325500 149.72000122]
[-18.93059540 140.03306580]
[-5.78240871 132.81329346]
[8.53761959 128.34822083]
[23.45912933 126.81571960]
[38.38779831 128.27680969]
[52.72903061 132.67329407]
[65.91161346 139.83007812]
[77.41049194 149.46209717]
[86.76766968 161.18571472]
[93.60893250 174.53009033]
[93.38560486 159.53175354]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.51079559 40.83127975]
[89.61797333 25.85787582]
[78.58176422 18.13669586]
[74.07335663 5.65131664]
[77.52791595 -6.96407461]
[87.46813965 -15.16294861]
[83.95865631 -23.59629822]
[86.90161896 -30.37573814]
[86.45500946 -45.36908722]
[86.00839996 -60.36243820]
[71.19341278 -63.04751205]
[57.26056671 -68.75449371]
[44.81895828 -77.23388672]
[34.41248322 -88.11501312]
[26.49605942 -100.92219543]
[21.41576576 -115.09555817]
[19.39368820 -130.01550293]
[20.51822281 -145.02980042]
[24.74021149 -159.48208618]
[31.87508392 -172.74057007]
[41.61093903 -184.22563171]
[53.52216339 -193.43522644]
[67.08805084 -199.96672058]
[81.71555328 -203.53459167]
[96.76522827 -203.98287964]
[111.57917023 -201.29196167]
[125.50976562 -195.57951355]
[137.94802856 -187.09523010]
[148.35023499 -176.21000671]
[156.26161194 -163.39970398]
[161.33633423 -149.22434998]
[163.35253906 -134.30360413]
[162.22209167 -119.28974915]
[157.99443054 -104.83912659]
[150.85433960 -91.58345795]
[141.11396790 -80.10221863]
[129.19911194 -70.89731598]
[115.63066101 -64.37116241]
[101.00175476 -60.80904388]
[101.44835663 -45.81569290]
[101.89496613 -30.82234383]
[102.45317841 -15.83273411]
[115.33790588 -5.02428818]
[116.44054413 12.09584808]
[104.59138489 24.96505928]
[105.48419952 39.93846512]
[108.39826202 43.72228241]
[108.96630096 49.37686920]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[108.38394165 159.30842590]
[108.60726929 174.30676270]
[112.03833008 188.90908813]
[118.51782990 202.43743896]
[124.99732208 215.96577454]
[131.47682190 229.49412537]
[137.95631409 243.02247620]
[145.52069092 255.97546387]
[154.11926270 268.26629639]
[162.71781921 280.55715942]
[171.31639099 292.84799194]
[179.91494751 305.13882446]
[188.51351929 317.42965698]
[197.11207581 329.72048950]
[210.03131104 322.08401489]
[223.49722290 315.45886230]
[237.43075562 309.88400269]
[251.75016785 305.39208984]
[266.37142944 302.00952148]
[281.20870972 299.75610352]
[296.17492676 298.64511108]
[311.18231201 298.68304443]
[326.14276123 299.86965942]
[340.96844482 302.19799805]
[355.57241821 305.65441895]
[369.86895752 310.21865845]
[383.77413940 315.86386108]
[397.20639038 322.55694580]
[410.08688354 330.25863647]
[422.33999634 338.92373657]
[433.89385986 348.50134277]
[444.68066406 358.93533325]
[454.63708496 370.16439819]
[463.70471191 382.12271118]
[471.83032227 394.74005127]
[478.96624756 407.94235229]
[485.07058716 421.65219116]
[490.10754395 435.78909302]
[494.04754639 450.27008057]
[496.86746216 465.01019287]
[498.55075073 479.92291260]
[499.08755493 494.92074585]
[498.47470093 509.91564941]
[496.71575928 524.81964111]
[493.82110596 539.54522705]
[489.80770874 554.00610352]
[484.69912720 568.11724854]
[478.52529907 581.79595947]
[471.32250977 594.96191406]
[463.13299561 607.53784180]
[454.00482178 619.45001221]
[443.99157715 630.62841797]
[433.15197754 641.00756836]
[421.54968262 650.52648926]
[409.25277710 659.12927246]
[396.33337402 666.76550293]
[382.86737061 673.39038086]
[368.93371582 678.96502686]
[354.61422729 683.45666504]
[339.99291992 686.83892822]
[325.15557861 689.09204102]
[310.18933105 690.20275879]
[295.18194580 690.16461182]
[280.22152710 688.97766113]
[265.39587402 686.64904785]
[250.79196167 683.19232178]
[236.49552917 678.62786865]
[222.59043884 672.98236084]
[209.15832520 666.28900146]
[196.27798462 658.58709717]
[184.02502441 649.92181396]
[172.47134399 640.34393311]
[161.68475342 629.90972900]
[151.72853088 618.68048096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[26 144]
[38 143]
[39 142]
[40 141]
[41 140]
[42 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[78 131]
[79 130]
[80 129]
[81 126]
[82 125]
[86 122]
[88 121]
[89 120]
[90 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
