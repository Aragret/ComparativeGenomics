%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[182.68676758 731.05816650]
[170.53797913 722.24902344]
[159.04859924 712.59564209]
[148.27716064 702.14727783]
[138.27854919 690.95703125]
[129.10371399 679.08203125]
[120.79941559 666.58276367]
[113.40797424 653.52288818]
[106.96704102 639.96899414]
[101.50944519 625.99017334]
[97.06300354 611.65759277]
[93.65036774 597.04437256]
[91.28893280 582.22491455]
[89.99072266 567.27471924]
[89.76236725 552.27001953]
[90.60501862 537.28723145]
[92.51438141 522.40277100]
[95.48073578 507.69241333]
[99.48896027 493.23120117]
[104.51863098 479.09274292]
[110.54411316 465.34912109]
[117.53470612 452.07040405]
[125.45478821 439.32418823]
[134.26399231 427.17550659]
[143.91744995 415.68618774]
[154.36593628 404.91482544]
[165.55624390 394.91629028]
[177.43130493 385.74154663]
[189.93064880 377.43734741]
[202.99055481 370.04598999]
[216.54449463 363.60516357]
[211.08912659 349.63238525]
[205.63377380 335.65957642]
[200.17842102 321.68676758]
[194.72306824 307.71398926]
[189.26770020 293.74118042]
[183.81234741 279.76840210]
[178.35699463 265.79559326]
[171.87750244 252.26724243]
[164.40975952 239.25830078]
[156.94201660 226.24934387]
[149.47427368 213.24038696]
[142.00653076 200.23143005]
[139.33898926 199.36985779]
[136.85198975 197.39970398]
[134.96949768 194.38447571]
[134.08467102 190.53979492]
[134.50799561 186.21836853]
[127.82780457 172.78797913]
[121.14761353 159.35760498]
[114.46741486 145.92723083]
[107.78722382 132.49685669]
[101.10702515 119.06648254]
[87.40441132 114.35643768]
[80.95155334 101.38312531]
[85.46259308 87.61370850]
[78.78240204 74.18333435]
[72.10220337 60.75296021]
[72.14910126 75.75288391]
[68.78183746 90.37004852]
[62.17704010 103.83766937]
[52.68119049 115.44924927]
[40.79241943 124.59567261]
[27.13438988 130.79714966]
[12.42357349 133.72834778]
[-2.56832743 133.23550415]
[-17.05487061 129.34446716]
[-30.27611732 122.25937653]
[-41.53851318 112.35188293]
[-50.25124741 100.14170837]
[-55.95727539 86.26939392]
[-58.35726547 71.46263885]
[-57.32532120 56.49817276]
[-52.91557312 42.16101456]
[-45.35935211 29.20325661]
[-35.05303955 18.30463600]
[-22.53728676 10.03687286]
[-8.46864223 4.83367920]
[6.41488075 2.96800327]
[21.33252144 4.53771448]
[35.50173187 9.46046925]
[48.17921829 17.47802925]
[58.69995499 28.16980934]
[66.51273346 40.97644806]
[65.17449951 26.03626251]
[63.83626175 11.09607697]
[56.10273361 23.94880104]
[43.02708817 31.29914093]
[28.02726746 31.22573471]
[15.02418995 23.74777031]
[7.41682673 10.81997013]
[7.19372606 -4.17837048]
[14.41320515 -17.32672119]
[27.18810844 -25.18813515]
[42.17911148 -25.70765495]
[55.46759415 -18.74948311]
[63.57971191 -6.13331079]
[64.47252655 -21.10671616]
[65.36534882 -36.08012390]
[66.25816345 -51.05352783]
[52.57021332 -57.66477203]
[42.45794296 -69.01424408]
[37.46340179 -83.37122345]
[38.34821701 -98.54638672]
[44.97745895 -112.22562408]
[56.34022141 -122.32295227]
[70.70376587 -127.29860687]
[85.87774658 -126.39382935]
[99.54825592 -119.74659729]
[109.63063049 -108.37056732]
[114.58737946 -94.00048828]
[113.66264343 -78.82771301]
[106.99743652 -65.16596222]
[95.60814667 -55.09855652]
[81.23156738 -50.16071320]
[80.33875275 -35.18730545]
[79.44593811 -20.21389961]
[78.55311584 -5.24049473]
[78.77644348 9.75784302]
[80.11467743 24.69802856]
[81.45291138 39.63821411]
[85.53258514 54.07276535]
[92.21277618 67.50314331]
[98.89297485 80.93351746]
[112.59558868 85.64356232]
[119.04844666 98.61687469]
[114.53740692 112.38629150]
[121.21759796 125.81666565]
[127.89779663 139.24703979]
[134.57798767 152.67741394]
[141.25817871 166.10778809]
[147.93838501 179.53816223]
[155.01548767 192.76370239]
[162.48323059 205.77264404]
[169.95095825 218.78160095]
[177.41870117 231.79055786]
[184.88644409 244.79949951]
[186.53144836 229.88998413]
[195.33097839 217.74220276]
[208.98486328 211.53158569]
[223.92398071 212.88157654]
[236.24331665 221.43925476]
[242.72261047 234.96769714]
[241.66818237 249.93060303]
[233.35568237 262.41668701]
[219.95794678 269.16210938]
[204.97714233 268.40365601]
[192.32978821 260.34024048]
[197.78514099 274.31301880]
[203.24050903 288.28582764]
[208.69586182 302.25863647]
[214.15121460 316.23141479]
[219.60656738 330.20422363]
[225.06193542 344.17703247]
[230.51728821 358.14981079]
[244.84974670 353.70303345]
[259.46292114 350.29006958]
[274.28234863 347.92828369]
[289.23251343 346.62976074]
[304.23718262 346.40103149]
[319.21997070 347.24334717]
[334.10449219 349.15237427]
[348.81491089 352.11837769]
[363.27624512 356.12628174]
[377.41479492 361.15560913]
[391.15853882 367.18078613]
[404.43743896 374.17108154]
[417.18383789 382.09088135]
[429.33273315 390.89981079]
[440.82226562 400.55297852]
[451.59387207 411.00122070]
[461.59265137 422.19128418]
[470.76766968 434.06616211]
[479.07214355 446.56530762]
[486.46380615 459.62506104]
[492.90493774 473.17883301]
[498.36273193 487.15759277]
[502.80941772 501.49008179]
[506.22225952 516.10327148]
[508.58392334 530.92272949]
[509.88235474 545.87286377]
[510.11096191 560.87756348]
[509.26852417 575.86035156]
[507.35940552 590.74487305]
[504.39328003 605.45526123]
[500.38528442 619.91656494]
[495.35580444 634.05505371]
[489.33053589 647.79876709]
[482.34014893 661.07763672]
[474.42025757 673.82391357]
[465.61123657 685.97277832]
[455.95797729 697.46221924]
[445.50964355 708.23376465]
[434.31948853 718.23248291]
[422.44458008 727.40734863]
[409.94534302 735.71179199]
[396.88555908 743.10333252]
[383.33172607 749.54437256]
[369.35293579 755.00207520]
[355.02038574 759.44860840]
[340.40716553 762.86132812]
[325.58770752 765.22290039]
[310.63754272 766.52124023]
[295.63284302 766.74969482]
[280.65005493 765.90716553]
[265.76559448 763.99792480]
[251.05522156 761.03167725]
[236.59394836 757.02355957]
[222.45545959 751.99401855]
[208.71180725 745.96862793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 155]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[39 137]
[40 136]
[41 135]
[42 134]
[43 133]
[48 132]
[49 131]
[50 130]
[51 129]
[52 128]
[53 127]
[56 124]
[57 123]
[58 122]
[84 121]
[85 120]
[86 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
