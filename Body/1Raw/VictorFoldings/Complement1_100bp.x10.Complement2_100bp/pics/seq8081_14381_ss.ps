%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[68.28863525 451.01797485]
[59.87083435 463.44299316]
[50.49246979 475.15991211]
[40.21283722 486.09469604]
[29.09692192 496.17816162]
[17.21500778 505.34658813]
[4.64221525 513.54199219]
[-8.54196358 520.71264648]
[-22.25417328 526.81304932]
[-36.40772247 531.80474854]
[-50.91312027 535.65618896]
[-65.67866516 538.34295654]
[-80.61100006 539.84814453]
[-95.61571503 540.16217041]
[-110.59794617 539.28302002]
[-125.46296692 537.21636963]
[-140.11680603 533.97515869]
[-154.46679688 529.57995605]
[-168.42222595 524.05853271]
[-181.89485168 517.44580078]
[-194.79951477 509.78356934]
[-207.05461121 501.12026978]
[-218.58264160 491.51068115]
[-229.31076050 481.01556396]
[-239.17111206 469.70123291]
[-248.10137939 457.63928223]
[-256.04507446 444.90594482]
[-262.95196533 431.58175659]
[-268.77844238 417.75088501]
[-273.48760986 403.50085449]
[-277.04971313 388.92169189]
[-279.44223022 374.10562134]
[-280.65005493 359.14630127]
[-280.66549683 344.13830566]
[-279.48852539 329.17654419]
[-277.12655640 314.35556030]
[-273.59448242 299.76910400]
[-268.91470337 285.50939941]
[-263.11676025 271.66656494]
[-256.23730469 258.32815552]
[-248.31988525 245.57846069]
[-239.41450500 233.49813843]
[-229.57748413 222.16354370]
[-218.87101746 211.64631653]
[-207.36280823 202.01300049]
[-195.12559509 193.32444763]
[-182.23675537 185.63563538]
[-168.77778625 178.99514771]
[-154.83375549 173.44497681]
[-140.49285889 169.02021790]
[-125.84573364 165.74884033]
[-110.98500061 163.65153503]
[-96.00460815 162.74154663]
[-80.99928284 163.02462769]
[-66.06387329 164.49900818]
[-51.29282761 167.15536499]
[-36.77952194 170.97688293]
[-22.61571503 175.93942261]
[-8.89096260 182.01158142]
[4.30796528 189.15499878]
[16.89761925 197.32449341]
[26.03642082 185.42987061]
[35.17522430 173.53523254]
[44.31402588 161.64059448]
[53.45282745 149.74597168]
[62.50283051 137.78363037]
[71.46352386 125.75425720]
[80.42421722 113.72487640]
[89.38491821 101.69549561]
[95.96494293 88.21576691]
[99.93704224 73.75124359]
[103.90913391 59.28671646]
[107.88123322 44.82219315]
[111.85333252 30.35766792]
[115.82542419 15.89314461]
[119.79752350 1.42862070]
[105.51985931 -8.29441833]
[95.44339752 -22.29450417]
[90.76995087 -38.87297821]
[92.04701996 -56.02542877]
[99.10372925 -71.68404388]
[111.07344055 -83.96689606]
[126.50019836 -91.40409851]
[143.51576233 -93.11373138]
[146.83801270 -107.74118805]
[150.16027832 -122.36864471]
[153.48254395 -136.99610901]
[139.33351135 -142.03012085]
[125.87918854 -148.70227051]
[113.30846405 -156.91891479]
[101.79781342 -166.56471252]
[91.50881195 -177.50421143]
[82.58591461 -189.58387756]
[75.15438843 -202.63412476]
[69.31854248 -216.47172546]
[65.16031647 -230.90243530]
[62.73808670 -245.72367859]
[62.08584976 -260.72738647]
[63.21276855 -275.70291138]
[66.10301971 -290.44003296]
[70.71602631 -304.73187256]
[76.98703003 -318.37777710]
[84.82800293 -331.18618774]
[94.12886047 -342.97729492]
[104.75903320 -353.58557129]
[116.56929779 -362.86212158]
[129.39385986 -370.67666626]
[143.05265808 -376.91952515]
[157.35397339 -381.50305176]
[172.09703064 -384.36291504]
[187.07484436 -385.45895386]
[202.07716370 -384.77578735]
[216.89338684 -382.32299805]
[231.31549072 -378.13504028]
[245.14103699 -372.27069092]
[258.17593384 -364.81225586]
[270.23718262 -355.86447144]
[281.15545654 -345.55294800]
[290.77746582 -334.02243042]
[298.96820068 -321.43478394]
[305.61260986 -307.96676636]
[310.61743164 -293.80737305]
[313.91241455 -279.15542603]
[315.45129395 -264.21661377]
[315.21246338 -249.20063782]
[313.19931030 -234.31832886]
[309.44006348 -219.77856445]
[303.98748779 -205.78550720]
[296.91815186 -192.53556824]
[288.33126831 -180.21476746]
[278.34744263 -168.99606323]
[267.10678101 -159.03695679]
[254.76708984 -150.47726440]
[241.50160217 -143.43713379]
[227.49656677 -138.01539612]
[212.94856262 -134.28817749]
[198.06184387 -132.30780029]
[183.04539490 -132.10206604]
[168.11000061 -133.67384338]
[164.78773499 -119.04638672]
[161.46548462 -104.41893005]
[158.14321899 -89.79146576]
[169.40902710 -83.58743286]
[178.69317627 -74.66777039]
[185.35714722 -63.63622284]
[188.94010925 -51.24211121]
[189.19082642 -38.32943344]
[186.08517456 -25.77938271]
[179.82833862 -14.45021057]
[170.84124756 -5.11855125]
[159.73225403 1.57383394]
[147.25598145 5.16418028]
[134.26203918 5.40071678]
[130.28994751 19.86524010]
[126.31785583 34.32976532]
[122.34575653 48.79428864]
[118.37365723 63.25881195]
[114.40156555 77.72333527]
[110.42946625 92.18785858]
[120.39263153 80.97467804]
[132.64581299 72.32253265]
[146.54621887 66.68528748]
[161.36468506 64.35867310]
[176.32385254 65.46472931]
[190.63899231 69.94543457]
[203.55915833 77.56575012]
[214.40660095 87.92591858]
[222.61225891 100.48247528]
[227.74571228 114.57672119]
[229.53762817 129.46929932]
[227.89404297 144.37898254]
[222.90116882 158.52363586]
[214.82090759 171.16125488]
[204.07714844 181.62890625]
[191.23347473 189.37745667]
[176.96365356 194.00045776]
[162.01623535 195.25537109]
[147.17535400 193.07638550]
[133.21951294 187.57780457]
[120.88080597 179.04806519]
[110.80651093 167.93463135]
[103.52509308 154.82046509]
[99.41853333 140.39355469]
[98.70224762 125.41065979]
[101.41429138 110.65619659]
[92.45359802 122.68556976]
[83.49290466 134.71495056]
[74.53220367 146.74432373]
[71.91535950 155.49589539]
[65.34745789 158.88476562]
[56.20866013 170.77940369]
[47.06985855 182.67404175]
[37.93105316 194.56866455]
[28.79225159 206.46330261]
[39.92935181 216.52337646]
[50.23196030 227.43650818]
[59.63494873 239.13368225]
[68.07885742 251.54095459]
[75.51031494 264.57986450]
[81.88232422 278.16802979]
[87.15460205 292.21945190]
[91.29381561 306.64538574]
[94.27380371 321.35455322]
[96.07570648 336.25399780]
[96.68814850 351.24948120]
[96.10724640 366.24624634]
[94.33667755 381.14944458]
[91.38764191 395.86483765]
[87.27877808 410.29943848]
[82.03606415 424.36193848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 194]
[62 193]
[63 192]
[64 191]
[65 190]
[66 188]
[67 187]
[68 186]
[69 185]
[70 159]
[71 158]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[84 142]
[85 141]
[86 140]
[87 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
