%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[-28.06373215 442.99050903]
[-20.50326538 456.02075195]
[-16.03235245 470.40679932]
[-14.87525558 485.42709351]
[-17.09001160 500.32818604]
[-22.56552887 514.36267090]
[-31.02716064 526.82653809]
[-42.05047226 537.09466553]
[-55.08254242 544.65197754]
[-69.46968079 549.11938477]
[-84.49024200 550.27282715]
[-99.39080048 548.05450439]
[-113.42395020 542.57556152]
[-125.88578796 534.11090088]
[-136.15122986 523.08514404]
[-143.70538330 510.05120850]
[-148.16932678 495.66299438]
[-149.31915283 480.64215088]
[-147.09716797 465.74212646]
[-141.61485291 451.71032715]
[-133.14718628 439.25051880]
[-122.11889648 428.98776245]
[-109.08316803 421.43676758]
[-94.69386292 416.97631836]
[-79.67274475 415.83013916]
[-64.77326202 418.05572510]
[-59.31790543 404.08291626]
[-53.86254883 390.11010742]
[-56.44121170 375.44042969]
[-44.21477127 365.39929199]
[-38.75941467 351.42648315]
[-33.30405426 337.45367432]
[-39.50105667 323.95803833]
[-34.16759872 309.70989990]
[-19.97009468 303.30142212]
[-14.51473713 289.32861328]
[-28.21703911 295.43164062]
[-42.67070007 291.42022705]
[-51.26770401 279.12829590]
[-50.07761383 264.17556763]
[-39.64452362 253.39825439]
[-24.73830032 251.72357178]
[-12.17387199 259.91717529]
[-7.69560003 274.23489380]
[-0.81618756 260.90548706]
[6.06322479 247.57604980]
[5.02471542 232.71768188]
[18.22944069 224.00299072]
[17.50656319 221.29457092]
[17.81297493 218.13661194]
[19.32526779 214.91972351]
[22.07551003 212.09117126]
[25.93577194 210.10311890]
[33.59637070 197.20678711]
[41.25696564 184.31047058]
[48.91756439 171.41413879]
[56.57816315 158.51780701]
[64.23876190 145.62149048]
[60.32513046 131.29602051]
[67.91035461 118.10817719]
[82.96276093 114.10033417]
[90.62335968 101.20401001]
[90.51309204 95.95979309]
[93.34891510 91.02709961]
[98.70891571 88.04258728]
[106.75009155 75.38006592]
[114.79125977 62.71754074]
[122.83243561 50.05501556]
[119.60382080 34.81645203]
[127.93910217 22.08939934]
[142.48663330 19.10532188]
[150.52781677 6.44279671]
[156.08703613 -7.48900175]
[158.97230530 -22.20889282]
[161.85757446 -36.92878342]
[164.74285889 -51.64867401]
[158.37249756 -68.92582703]
[170.41368103 -81.69206238]
[173.07948303 -96.45328522]
[175.74526978 -111.21450043]
[177.19468689 -126.14431000]
[169.66371155 -140.05815125]
[177.58964539 -152.66880798]
[177.81297302 -167.66714478]
[178.03630066 -182.66548157]
[167.30871582 -193.95957947]
[167.74885559 -209.16683960]
[178.58215332 -219.32435608]
[178.80548096 -234.32269287]
[179.02880859 -249.32102966]
[179.25213623 -264.31936646]
[179.47546387 -279.31771851]
[179.58712769 -294.31729126]
[179.58712769 -309.31729126]
[179.58712769 -324.31729126]
[165.08961487 -328.55978394]
[152.37533569 -336.71597290]
[142.47499084 -348.12475586]
[136.19114685 -361.86120605]
[134.03321838 -376.81176758]
[136.17613220 -391.76452637]
[142.44616699 -405.50726318]
[152.33505249 -416.92596436]
[165.04112244 -425.09497070]
[179.53437805 -429.35198975]
[194.63989258 -429.35198975]
[209.13314819 -425.09497070]
[221.83921814 -416.92596436]
[231.72810364 -405.50726318]
[237.99813843 -391.76452637]
[240.14105225 -376.81176758]
[237.98312378 -361.86120605]
[231.69927979 -348.12475586]
[221.79893494 -336.71597290]
[209.08465576 -328.55978394]
[194.58712769 -324.31729126]
[194.58712769 -309.31729126]
[194.58712769 -294.31729126]
[197.73063660 -287.62847900]
[194.47380066 -279.09439087]
[194.25047302 -264.09603882]
[194.02714539 -249.09770203]
[193.80381775 -234.09936523]
[193.58049011 -219.10102844]
[204.10656738 -208.62547302]
[204.09373474 -193.41184998]
[193.03463745 -182.44215393]
[192.81130981 -167.44381714]
[192.58798218 -152.44548035]
[200.13493347 -139.60443115]
[192.19302368 -125.92098236]
[200.83444214 -138.18173218]
[214.14155579 -145.10421753]
[229.14149475 -145.14196777]
[242.48327637 -138.28652954]
[251.18627930 -126.06941223]
[253.30624390 -111.21997833]
[248.36956787 -97.05561829]
[237.47911072 -86.74067688]
[223.06782532 -82.57955170]
[208.35523987 -85.50184631]
[196.62817383 -94.85470581]
[190.50648499 -108.54870605]
[187.84069824 -93.78748322]
[185.17489624 -79.02626801]
[191.81224060 -68.91329193]
[189.71212769 -56.59366226]
[179.46273804 -48.76340485]
[176.57746887 -34.04351044]
[173.69219971 -19.32361984]
[170.80693054 -4.60372925]
[179.90849304 -16.52687645]
[191.48422241 -26.06641006]
[204.92684937 -32.72190475]
[219.53121948 -36.14422607]
[234.53121948 -36.15384293]
[249.13996887 -32.75025558]
[262.59112549 -26.11200714]
[274.17907715 -16.58732605]
[283.29592896 -4.67586088]
[289.46343994 8.99753857]
[292.35806274 23.71559334]
[291.82794189 38.70622253]
[287.90093994 53.18305206]
[280.78298950 66.38665009]
[270.84753418 77.62438202]
[258.61575317 86.30674744]
[244.72929382 91.97827911]
[229.91662598 94.34146118]
[214.95477295 93.27233124]
[200.62861633 88.82696533]
[187.68968201 81.23855591]
[176.81671143 70.90518951]
[168.58007812 58.36892700]
[163.41186523 44.28739548]
[161.58319092 29.39928055]
[163.19033813 14.48396969]
[155.14915466 27.14649391]
[158.63453674 41.58213806]
[150.66001892 54.53828812]
[135.49496460 58.09618759]
[127.45378876 70.75871277]
[119.41261292 83.42123413]
[111.37143707 96.08376312]
[103.51968384 108.86460114]
[95.85908508 121.76093292]
[99.53997803 136.89660645]
[91.58732605 149.86619568]
[77.13508606 153.28207397]
[69.47448730 166.17840576]
[61.81389236 179.07473755]
[54.15329361 191.97106934]
[46.49269485 204.86738586]
[38.83209991 217.76371765]
[31.55887032 230.88241577]
[32.10531616 246.69418335]
[19.39265442 254.45545959]
[12.51324177 267.78488159]
[5.63382912 281.11431885]
[-0.54193938 294.78399658]
[-5.99729633 308.75677490]
[0.10218471 323.08975220]
[-5.62937117 337.18243408]
[-19.33125877 342.90902710]
[-24.78661537 356.88183594]
[-30.24197197 370.85464478]
[-28.05351448 386.52374268]
[-39.88975143 395.56546021]
[-45.34510803 409.53826904]
[-50.80046463 423.51107788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 210]
[27 209]
[28 208]
[30 206]
[31 205]
[32 204]
[35 201]
[36 200]
[44 199]
[45 198]
[46 197]
[48 195]
[53 194]
[54 193]
[55 192]
[56 191]
[57 190]
[58 189]
[61 186]
[62 185]
[65 184]
[66 183]
[67 182]
[68 181]
[71 178]
[72 177]
[73 151]
[74 150]
[75 149]
[76 148]
[78 145]
[79 144]
[80 143]
[81 131]
[83 129]
[84 128]
[85 127]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
