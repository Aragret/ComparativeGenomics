%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[139.52865601 902.48889160]
[124.62415314 900.78198242]
[109.79760742 898.49487305]
[95.07158661 895.63098145]
[80.46851349 892.19476318]
[66.01062012 888.19140625]
[51.71994019 883.62701416]
[37.61822510 878.50848389]
[23.72695160 872.84368896]
[10.06727314 866.64123535]
[-3.34000802 859.91052246]
[-16.47447586 852.66186523]
[-29.31612587 844.90625000]
[-41.84540558 836.65551758]
[-54.04323578 827.92224121]
[-65.89103699 818.71966553]
[-77.37076569 809.06182861]
[-88.46495056 798.96350098]
[-99.15668488 788.44000244]
[-109.42968750 777.50732422]
[-119.26832581 766.18218994]
[-128.65760803 754.48181152]
[-137.58323669 742.42401123]
[-146.03161621 730.02716064]
[-153.98989868 717.31011963]
[-161.44593811 704.29223633]
[-168.38839722 690.99340820]
[-174.80670166 677.43377686]
[-180.69108582 663.63409424]
[-186.03256226 649.61529541]
[-190.82302856 635.39880371]
[-195.05516052 621.00622559]
[-198.72253418 606.45947266]
[-201.81956482 591.78070068]
[-204.34152222 576.99230957]
[-206.28456116 562.11676025]
[-207.64575195 547.17675781]
[-208.42298889 532.19494629]
[-208.61511230 517.19427490]
[-208.22183228 502.19750977]
[-207.24371338 487.22750854]
[-205.68228149 472.30709839]
[-203.53990173 457.45892334]
[-200.81983948 442.70568848]
[-197.52621460 428.06976318]
[-193.66407776 413.57351685]
[-189.23928833 399.23898315]
[-184.25859070 385.08801270]
[-178.72956848 371.14215088]
[-172.66064453 357.42260742]
[-166.06106567 343.95031738]
[-158.94087219 330.74575806]
[-151.31089783 317.82907104]
[-143.18278503 305.21987915]
[-134.56889343 292.93743896]
[-125.48235321 281.00042725]
[-115.93698883 269.42703247]
[-105.94734955 258.23486328]
[-95.52864075 247.44099426]
[-84.69672394 237.06181335]
[-73.46810150 227.11317444]
[-61.85987854 217.61019897]
[-49.88972092 208.56736755]
[-37.57585907 199.99845886]
[-24.93704987 191.91650391]
[-11.99253654 184.33381653]
[1.23796725 177.26196289]
[14.73431301 170.71168518]
[28.47595024 164.69297791]
[42.44194794 159.21499634]
[56.61104584 154.28607178]
[70.96166229 149.91374207]
[85.47193909 146.10462952]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[85.11899567 59.80123138]
[82.45320129 45.04001236]
[67.41961670 45.24304199]
[52.55767822 42.96870804]
[38.27282715 38.27904892]
[24.95476532 31.30200958]
[12.96681976 22.22792625]
[2.63602996 11.30434322]
[-5.75577259 -1.17073214]
[-11.97965240 -14.85697269]
[-15.86581898 -29.38100624]
[-17.30825424 -44.34660721]
[-16.26760674 -59.34550476]
[-12.77226639 -73.96851349]
[-6.91759014 -87.81671906]
[1.13670421 -100.51231384]
[11.17088890 -111.70896912]
[22.91122246 -121.10121918]
[36.03742218 -128.43284607]
[50.19139481 -133.50382996]
[64.98701477 -136.17584229]
[80.02063751 -136.37597656]
[94.88213348 -134.09877014]
[109.16608429 -129.40637207]
[122.48280334 -122.42675781]
[134.46899414 -113.35036469]
[144.79768372 -102.42478943]
[153.18708801 -89.94809723]
[159.40832520 -76.26065826]
[163.29168701 -61.73587799]
[164.73124695 -46.77000046]
[163.68771362 -31.77130318]
[160.18954468 -17.14896584]
[154.33221436 -3.30189395]
[146.27546692 9.39215183]
[136.23912048 20.58687019]
[124.49697876 29.97686005]
[111.36936951 37.30595779]
[97.21441650 42.37421799]
[99.88021851 57.13543320]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[129.73687744 138.11062622]
[144.66291809 136.60369873]
[159.63638306 135.68026733]
[174.63447571 135.34173584]
[189.63436890 135.58863831]
[204.61318970 136.42059326]
[219.54815674 137.83633423]
[234.41651917 139.83369446]
[249.19561768 142.40963745]
[263.86297607 145.56024170]
[278.39620972 149.28071594]
[292.77325439 153.56538391]
[306.97216797 158.40773010]
[320.97134399 163.80036926]
[334.74945068 169.73510742]
[348.28552246 176.20288086]
[361.55895996 183.19386292]
[374.54949951 190.69740295]
[387.23739624 198.70207214]
[399.60333252 207.19566345]
[411.62844849 216.16526794]
[423.29446411 225.59721375]
[434.58358765 235.47715759]
[445.47866821 245.79000854]
[455.96304321 256.52011108]
[466.02081299 267.65109253]
[475.63662720 279.16601562]
[484.79586792 291.04736328]
[493.48455811 303.27697754]
[501.68948364 315.83630371]
[509.39813232 328.70620728]
[516.59881592 341.86706543]
[523.28045654 355.29882812]
[529.43304443 368.98107910]
[535.04705811 382.89294434]
[540.11401367 397.01324463]
[544.62622070 411.32049561]
[548.57678223 425.79290771]
[551.95965576 440.40844727]
[554.76971436 455.14483643]
[557.00268555 469.97961426]
[558.65515137 484.89025879]
[559.72460938 499.85400391]
[560.20941162 514.84808350]
[560.10882568 529.84967041]
[559.42303467 544.83587646]
[558.15307617 559.78393555]
[556.30084229 574.67108154]
[553.86920166 589.47460938]
[550.86181641 604.17199707]
[547.28332520 618.74084473]
[543.13909912 633.15899658]
[538.43548584 647.40447998]
[533.17962646 661.45562744]
[527.37963867 675.29095459]
[521.04418945 688.88946533]
[514.18304443 702.23046875]
[506.80657959 715.29357910]
[498.92605591 728.05895996]
[490.55349731 740.50714111]
[481.70162964 752.61920166]
[472.38391113 764.37670898]
[462.61459351 775.76165771]
[452.40850830 786.75677490]
[441.78118896 797.34539795]
[430.74884033 807.51123047]
[419.32827759 817.23895264]
[407.53686523 826.51361084]
[395.39257812 835.32122803]
[382.91387939 843.64825439]
[370.11978149 851.48211670]
[357.02981567 858.81079102]
[343.66384888 865.62316895]
[330.04229736 871.90893555]
[316.18585205 877.65838623]
[302.11563110 882.86285400]
[287.85308838 887.51440430]
[273.41989136 891.60595703]
[258.83807373 895.13122559]
[244.12979126 898.08496094]
[229.31748962 900.46252441]
[214.42369080 902.26037598]
[199.47108459 903.47570801]
[184.48245239 904.10681152]
[169.48060608 904.15258789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 125]
[75 124]
[76 123]
[78 121]
[79 120]
[80 119]
[81 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
