%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[31.01945305 819.43206787]
[16.08996773 820.91949463]
[1.10340393 821.63000488]
[-13.89983749 821.56170654]
[-28.87931061 820.71478271]
[-43.79463577 819.09149170]
[-58.60559845 816.69622803]
[-73.27227783 813.53546143]
[-87.75512695 809.61767578]
[-102.01510620 804.95343018]
[-116.01377106 799.55535889]
[-129.71339417 793.43798828]
[-143.07702637 786.61779785]
[-156.06864929 779.11315918]
[-168.65324402 770.94427490]
[-180.79687500 762.13330078]
[-192.46682739 752.70385742]
[-203.63160706 742.68139648]
[-214.26113892 732.09295654]
[-224.32676697 720.96710205]
[-233.80134583 709.33374023]
[-242.65934753 697.22436523]
[-250.87687683 684.67150879]
[-258.43179321 671.70904541]
[-265.30371094 658.37194824]
[-271.47412109 644.69610596]
[-276.92639160 630.71844482]
[-281.64581299 616.47662354]
[-285.61965942 602.00909424]
[-288.83724976 587.35479736]
[-291.28988647 572.55322266]
[-292.97091675 557.64428711]
[-293.87588501 542.66821289]
[-294.00231934 527.66534424]
[-293.34985352 512.67614746]
[-291.92028809 497.74099731]
[-289.71743774 482.90017700]
[-286.74728394 468.19372559]
[-283.01779175 453.66125488]
[-278.53906250 439.34191895]
[-273.32312012 425.27438354]
[-267.38403320 411.49652100]
[-260.73785400 398.04550171]
[-253.40246582 384.95758057]
[-245.39764404 372.26800537]
[-236.74497986 360.01104736]
[-227.46778870 348.21969604]
[-217.59107971 336.92578125]
[-207.14149475 326.15972900]
[-196.14718628 315.95056152]
[-184.63781738 306.32577515]
[-172.64437866 297.31137085]
[-160.19923401 288.93161011]
[-147.33592224 281.20910645]
[-134.08912659 274.16467285]
[-120.49454498 267.81729126]
[-106.58883667 262.18408203]
[-92.40947723 257.28021240]
[-77.99471283 253.11891174]
[-63.38338470 249.71141052]
[-48.61488724 247.06689453]
[-33.72903824 245.19248962]
[-18.76596451 244.09323120]
[-3.76600480 243.77210999]
[11.23040485 244.22996521]
[26.18283463 245.46557617]
[41.05097580 247.47561646]
[55.79475021 250.25466919]
[59.33442307 235.67829895]
[54.81899643 221.48463440]
[65.59432220 209.90002441]
[69.13399506 195.32365417]
[72.67366791 180.74728394]
[76.21334076 166.17089844]
[79.75301361 151.59452820]
[83.29267883 137.01815796]
[86.83235168 122.44178009]
[76.08222961 110.24501801]
[74.67021942 94.04833984]
[83.14760590 80.17534637]
[98.20459747 74.04240417]
[101.52686310 59.41494370]
[104.84912109 44.78748322]
[108.17137909 30.16002464]
[111.49363708 15.53256416]
[114.15943146 0.77134663]
[116.16344452 -14.09418201]
[104.86846924 -4.22385263]
[89.93979645 -2.76278806]
[76.94545746 -10.25592804]
[70.73201752 -23.90851784]
[73.61693573 -38.62847900]
[84.52421570 -48.92562866]
[99.38570404 -50.95938492]
[112.65843201 -43.97120667]
[119.39218903 -30.56636047]
[123.14849091 -45.08842087]
[126.90479279 -59.61047745]
[130.66108704 -74.13253784]
[117.14287567 -80.75392151]
[105.23446655 -89.96124268]
[95.42350769 -101.37745667]
[88.11174774 -114.53507233]
[83.59859467 -128.89530945]
[82.06887054 -143.87011719]
[83.58520508 -158.84628296]
[88.08551788 -173.21055603]
[95.38550568 -186.37471008]
[105.18626404 -197.79968262]
[117.08643341 -207.01763916]
[130.59872437 -213.65110779]
[145.16981506 -217.42845154]
[160.20301819 -218.19499207]
[175.08274841 -215.91934204]
[189.19967651 -210.69467163]
[201.97572327 -202.73493958]
[212.88774109 -192.36608887]
[221.48886108 -180.01272583]
[227.42689514 -166.18070984]
[230.45866394 -151.43644714]
[230.46002197 -136.38371277]
[227.43092346 -121.63890839]
[221.49540710 -107.80580902]
[212.89653015 -95.45088196]
[201.98640442 -85.08006287]
[189.21179199 -77.11801147]
[175.09580994 -71.89078522]
[160.21649170 -69.61242676]
[145.18315125 -70.37623596]
[141.42684937 -55.85417938]
[137.67054749 -41.33211899]
[133.91424561 -26.81005859]
[131.02897644 -12.09016800]
[129.02496338 2.77536035]
[141.57908630 -5.43403244]
[156.28872681 -2.49694824]
[164.72753906 9.90411758]
[162.06138611 24.66526985]
[149.81756592 33.33065414]
[135.00988770 30.93634033]
[126.12110138 18.85482407]
[122.79883575 33.48228455]
[119.47657776 48.10974503]
[116.15431976 62.73720551]
[112.83206177 77.36466217]
[122.30749512 86.60612488]
[126.01055145 99.31344604]
[122.98300934 112.19841766]
[114.00829315 121.92687988]
[101.40872955 125.98144531]
[97.86905670 140.55783081]
[94.32938385 155.13420105]
[90.78971100 169.71057129]
[87.25003815 184.28695679]
[83.71036530 198.86332703]
[80.17069244 213.43969727]
[84.43294525 228.67596436]
[73.91079712 239.21797180]
[70.37112427 253.79434204]
[84.74741364 258.08670044]
[98.88153076 263.11947632]
[112.73537445 268.87905884]
[126.27159882 275.34994507]
[139.45372009 282.51470947]
[152.24618530 290.35400391]
[164.61451721 298.84674072]
[176.52537537 307.96997070]
[187.94664001 317.69912720]
[198.84754944 328.00796509]
[209.19866943 338.86871338]
[218.97213745 350.25210571]
[228.14158630 362.12741089]
[236.68229675 374.46264648]
[244.57125854 387.22457886]
[251.78718567 400.37875366]
[258.31063843 413.88973999]
[264.12399292 427.72109985]
[269.21163940 441.83554077]
[273.55984497 456.19503784]
[277.15686035 470.76086426]
[279.99301147 485.49377441]
[282.06063843 500.35400391]
[283.35415649 515.30151367]
[283.87011719 530.29608154]
[283.60708618 545.29718018]
[282.56582642 560.26440430]
[280.74908447 575.15734863]
[278.16180420 589.93597412]
[274.81094360 604.56042480]
[270.70553589 618.99121094]
[265.85662842 633.18945312]
[260.27731323 647.11688232]
[253.98265076 660.73596191]
[246.98957825 674.00994873]
[239.31697083 686.90307617]
[230.98548889 699.38061523]
[222.01760864 711.40887451]
[212.43750000 722.95544434]
[202.27099609 733.98919678]
[191.54550171 744.48040771]
[180.28991699 754.40081787]
[168.53460693 763.72357178]
[156.31124878 772.42370605]
[143.65280151 780.47760010]
[130.59338379 787.86364746]
[117.16821289 794.56188965]
[103.41346741 800.55432129]
[89.36623383 805.82470703]
[75.06437683 810.35888672]
[60.54645538 814.14465332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 159]
[69 158]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[81 145]
[82 144]
[83 143]
[84 142]
[85 141]
[86 134]
[87 133]
[96 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
