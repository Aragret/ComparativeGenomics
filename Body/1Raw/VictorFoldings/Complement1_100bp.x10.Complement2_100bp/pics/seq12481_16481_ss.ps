%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[185.35403442 628.59655762]
[177.88743591 615.56921387]
[171.89930725 601.79943848]
[167.46234131 587.45452881]
[164.63037109 572.70855713]
[163.43782043 557.74060059]
[163.89912415 542.73223877]
[166.00871277 527.86572266]
[169.74095154 513.32153320]
[175.05055237 499.27621460]
[181.87304688 485.90023804]
[190.12564087 473.35601807]
[199.70812988 461.79577637]
[210.50419617 451.35986328]
[222.38281250 442.17498779]
[235.19973755 434.35263062]
[248.79942322 427.98773193]
[243.97341919 413.78527832]
[239.14743042 399.58282471]
[234.32142639 385.38037109]
[229.49543762 371.17791748]
[224.66943359 356.97546387]
[210.86770630 346.13665771]
[214.60467529 328.10568237]
[209.56776428 313.97665405]
[204.53083801 299.84762573]
[198.25347900 286.22430420]
[190.78573608 273.21536255]
[183.31800842 260.20639038]
[175.85026550 247.19744873]
[161.45046997 243.56675720]
[153.69180298 230.48020935]
[157.59764099 215.40101624]
[150.12989807 202.39205933]
[142.66215515 189.38311768]
[135.19441223 176.37416077]
[127.72666931 163.36520386]
[112.97211456 167.93852234]
[97.57054138 169.12318420]
[82.29013824 166.86013794]
[67.89307404 161.26225281]
[55.09743118 152.60871887]
[44.54143906 141.33117676]
[36.75160599 127.99211121]
[32.11647415 113.25686646]
[30.86723137 97.86038971]
[33.06618881 82.57063293]
[38.60367203 68.15022278]
[47.20347595 55.31840897]
[58.43666077 44.71522522]
[44.73664093 36.80194473]
[44.88892365 21.90811729]
[37.22832489 9.01179123]
[29.56772804 -3.88453603]
[21.90712929 -16.78086281]
[14.24653244 -29.67719078]
[0.54651147 -37.59046936]
[0.69879460 -52.48429489]
[-11.58481789 -56.41820908]
[-17.69985008 -67.31729889]
[-14.84378529 -79.07184601]
[-22.31152725 -92.08080292]
[-29.77926826 -105.08975220]
[-37.24700928 -118.09870911]
[-51.12295151 -112.34661865]
[-65.62055206 -108.41622162]
[-80.50173950 -106.37207031]
[-95.52215576 -106.24771118]
[-110.43514252 -108.04519653]
[-124.99583435 -111.73500824]
[-138.96511841 -117.25656128]
[-152.11360168 -124.51918030]
[-164.22538757 -133.40361023]
[-175.10157776 -143.76394653]
[-184.56358337 -155.43008423]
[-192.45602417 -168.21044922]
[-198.64929199 -181.89517212]
[-203.04171753 -196.25953674]
[-205.56114197 -211.06767273]
[-206.16619873 -226.07641602]
[-204.84696960 -241.03930664]
[-201.62510681 -255.71063232]
[-196.55351257 -269.84948730]
[-189.71546936 -283.22369385]
[-181.22325134 -295.61364746]
[-171.21633911 -306.81588745]
[-159.85903931 -316.64642334]
[-147.33784485 -324.94390869]
[-133.85836792 -331.57202148]
[-119.64195251 -336.42196655]
[-104.92204285 -339.41406250]
[-89.94036102 -340.49923706]
[-74.94291687 -339.65960693]
[-60.17598343 -336.90896606]
[-45.88204193 -332.29254150]
[-32.29581070 -325.88607788]
[-19.64039612 -317.79479980]
[-8.12360668 -308.15155029]
[2.06544089 -297.11474609]
[10.75943375 -284.86553955]
[17.81560898 -271.60510254]
[23.11809540 -257.55120850]
[26.57982254 -242.93463135]
[28.14394760 -227.99536133]
[27.78478432 -212.97872925]
[25.50823212 -198.13131714]
[21.35167122 -183.69692993]
[15.38335800 -169.91261292]
[7.70129681 -157.00469971]
[-1.56836486 -145.18515015]
[-12.27341175 -134.64805603]
[-24.23805618 -125.56644440]
[-16.77031517 -112.55749512]
[-9.30257416 -99.54854584]
[-1.83483279 -86.53958893]
[13.79401588 -78.55798340]
[13.59512138 -60.14489365]
[26.74720573 -53.15404510]
[27.14286041 -37.33778763]
[34.80345535 -24.44145966]
[42.46405411 -11.54513359]
[50.12465286 1.35119343]
[57.78524780 14.24752045]
[70.93733215 21.23836899]
[71.33298492 37.05462646]
[85.08042908 32.46242523]
[99.48304749 30.83606148]
[113.90836334 32.24695587]
[127.72290802 36.63314819]
[140.32003784 43.80202484]
[151.14656067 53.43877411]
[159.72703552 65.12020874]
[165.68466187 78.33335114]
[168.75781250 92.49795532]
[168.81155396 106.99201202]
[165.84350586 121.17901611]
[159.98400879 134.43597412]
[151.49038696 146.18070984]
[140.73562622 155.89746094]
[148.20336914 168.90641785]
[155.67111206 181.91537476]
[163.13885498 194.92431641]
[170.60658264 207.93327332]
[185.59765625 212.16477966]
[192.98568726 225.46409607]
[188.85920715 239.72970581]
[196.32695007 252.73866272]
[203.79469299 265.74761963]
[211.26243591 278.75656128]
[212.03645325 263.77655029]
[219.15733337 250.57453918]
[231.25013733 241.69963074]
[245.97994995 238.86543274]
[260.50265503 242.61920166]
[272.01419067 252.23611450]
[278.29180908 265.85931396]
[278.12341309 280.85836792]
[271.54153442 294.33718872]
[259.81701660 303.69323730]
[245.21366882 307.12002563]
[230.55120850 303.95584106]
[218.65986633 294.81069946]
[223.69679260 308.93972778]
[228.73370361 323.06875610]
[240.03123474 329.29199219]
[243.93562317 341.16378784]
[238.87188721 352.14944458]
[243.69789124 366.35192871]
[248.52388000 380.55438232]
[253.34988403 394.75683594]
[258.17587280 408.95928955]
[263.00189209 423.16174316]
[277.66390991 419.92327881]
[292.59323120 418.31747437]
[307.60861206 418.36376953]
[322.52774048 420.06164551]
[337.16952515 423.39044189]
[351.35626221 428.30981445]
[364.91567993 434.76000977]
[377.68322754 442.66271973]
[389.50390625 451.92202759]
[400.23422241 462.42553711]
[409.74392700 474.04571533]
[417.91754150 486.64154053]
[424.65591431 500.06011963]
[429.87719727 514.13848877]
[433.51800537 528.70587158]
[435.53414917 543.58532715]
[435.90118408 558.59625244]
[434.61465454 573.55645752]
[431.69012451 588.28436279]
[427.16314697 602.60113525]
[421.08865356 616.33294678]
[413.54037476 629.31323242]
[404.60995483 641.38427734]
[394.40579224 652.39965820]
[383.05178833 662.22558594]
[370.68569946 670.74285889]
[357.45773315 677.84802246]
[343.52838135 683.45483398]
[329.06677246 687.49530029]
[314.24844360 689.92028809]
[299.25329590 690.70037842]
[284.26333618 689.82611084]
[269.46054077 687.30810547]
[255.02458191 683.17687988]
[241.13072205 677.48272705]
[227.94763184 670.29461670]
[215.63529968 661.69982910]
[204.34321594 651.80273438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 172]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[24 164]
[25 163]
[26 162]
[27 149]
[28 148]
[29 147]
[30 146]
[33 143]
[34 142]
[35 141]
[36 140]
[37 139]
[50 125]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[58 117]
[61 115]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
