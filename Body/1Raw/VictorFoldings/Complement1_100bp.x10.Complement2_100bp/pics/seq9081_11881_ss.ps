%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[138.04930115 604.14593506]
[127.79958344 615.11816406]
[116.42362976 624.91790771]
[104.05480194 633.43023682]
[90.83812714 640.55529785]
[76.92856598 646.20965576]
[62.48918915 650.32690430]
[47.68930435 652.85882568]
[32.70242691 653.77569580]
[17.70426750 653.06683350]
[2.87067652 650.74047852]
[-11.62443161 646.82397461]
[-25.61111069 641.36322021]
[-38.92536926 634.42218018]
[-51.41110992 626.08233643]
[-62.92194366 616.44134521]
[-73.32290649 605.61236572]
[-82.49205780 593.72229004]
[-90.32189178 580.91052246]
[-96.72061157 567.32733154]
[-101.61318207 553.13189697]
[-104.94226074 538.49072266]
[-106.66880035 523.57543945]
[-106.77256012 508.56088257]
[-105.25232697 493.62313843]
[-102.12593079 478.93731689]
[-97.43001556 464.67562866]
[-91.21964264 451.00527954]
[-83.56762695 438.08654785]
[-74.56368256 426.07089233]
[-64.31338501 415.09915161]
[-52.93689728 405.30004883]
[-40.56761551 396.78839111]
[-27.35055733 389.66403198]
[-13.44068813 384.01046753]
[0.99890596 379.89398193]
[15.79892826 377.36288452]
[30.78585625 376.44677734]
[45.78397751 377.15646362]
[60.61744308 379.48358154]
[75.11234283 383.40087891]
[80.56769562 369.42807007]
[86.02305603 355.45529175]
[91.47840881 341.48248291]
[96.93376923 327.50967407]
[102.38912201 313.53689575]
[106.79012299 299.19705200]
[110.11238098 284.56958008]
[113.43463898 269.94210815]
[116.75690460 255.31465149]
[116.98023224 240.31631470]
[114.09495544 225.59643555]
[111.20968628 210.87654114]
[108.32440948 196.15664673]
[104.93094635 192.79606628]
[103.61254883 187.26806641]
[105.57923889 180.95588684]
[103.13350677 166.15661621]
[100.68778229 151.35734558]
[90.97885895 140.06193542]
[96.36252594 125.18488312]
[93.91679382 110.38561249]
[88.89627838 124.52047729]
[79.39758301 136.12973022]
[66.53660583 143.84953308]
[51.82424545 146.77296448]
[36.98889542 144.55659485]
[23.77339172 137.46078491]
[13.73028564 126.31914520]
[8.03942680 112.44059753]
[7.36937332 97.45556641]
[11.79884243 83.12448883]
[20.80746269 71.13096619]
[33.33691406 62.88397217]
[47.91524506 59.35236359]
[62.82981110 60.95103073]
[76.32846069 67.49216461]
[86.82538605 78.20732117]
[93.08782959 91.83920288]
[94.20347595 76.88074493]
[95.31912231 61.92229462]
[93.29569244 58.08045959]
[92.66360474 54.18623352]
[93.26848602 50.68344879]
[94.82768250 47.92020035]
[96.97257233 46.11532211]
[91.14835358 31.40515709]
[100.51666260 19.82569313]
[102.52067566 4.96016407]
[104.52468872 -9.90536404]
[106.52870178 -24.77089310]
[107.86693573 -39.71107864]
[108.53672028 -54.69611740]
[109.20651245 -69.68115234]
[109.87629700 -84.66619110]
[110.21127319 -99.66245270]
[110.21127319 -114.66245270]
[110.21127319 -129.66246033]
[110.21127319 -144.66246033]
[96.43740082 -151.23841858]
[86.88747406 -163.14479065]
[83.45763397 -178.01754761]
[86.82888031 -192.90370178]
[96.33184814 -204.84757996]
[110.07971191 -211.47773743]
[125.34282684 -211.47773743]
[139.09069824 -204.84757996]
[148.59365845 -192.90370178]
[151.96490479 -178.01754761]
[148.53506470 -163.14479065]
[138.98513794 -151.23841858]
[125.21127319 -144.66246033]
[125.21127319 -129.66246033]
[125.21127319 -114.66245270]
[125.21127319 -99.66245270]
[127.43254089 -96.92414856]
[128.43783569 -92.97390747]
[127.67200470 -88.39495087]
[124.86133575 -83.99640656]
[124.19155121 -69.01136780]
[123.52175903 -54.02632904]
[122.85197449 -39.04129028]
[134.62362671 -48.33797073]
[149.53665161 -46.72492981]
[159.04817200 -35.12619019]
[157.70957947 -20.18603706]
[146.28767395 -10.46286869]
[131.32543945 -11.52655792]
[121.39423370 -22.76687813]
[119.39022064 -7.90135050]
[117.38620758 6.96417809]
[115.38219452 21.82970619]
[121.34975433 35.47659302]
[111.83810425 48.11933899]
[110.27758026 63.03794098]
[109.16192627 77.99639893]
[108.04627991 92.95484924]
[108.71606445 107.93988800]
[111.16179657 122.73915863]
[121.04565430 135.09310913]
[115.48705292 148.91162109]
[117.93277740 163.71089172]
[120.37850952 178.51016235]
[123.04430389 193.27137756]
[125.92957306 207.99127197]
[128.81484985 222.71115112]
[131.70011902 237.43104553]
[135.62110901 222.95259094]
[142.42834473 209.58615112]
[151.83239746 197.90010071]
[163.43339539 188.39132690]
[176.73806763 181.46415710]
[191.18067932 177.41311646]
[206.14714050 176.41047668]
[221.00105286 178.49887085]
[235.11082458 183.58947754]
[247.87649536 191.46586609]
[258.75527954 201.79312134]
[267.28460693 214.13211060]
[273.10177612 227.95819092]
[275.95947266 242.68345642]
[275.73614502 257.68179321]
[272.44134521 272.31546021]
[266.21511841 285.96221924]
[257.32223511 298.04183960]
[246.14082336 308.04061890]
[233.14631653 315.53347778]
[218.89123535 320.20175171]
[203.98173523 321.84698486]
[189.05177307 320.39923096]
[174.73616028 315.92001343]
[161.64361572 308.59982300]
[150.33085632 298.74987793]
[141.27886963 286.78903198]
[134.87258911 273.22586060]
[131.38436890 258.63690186]
[128.06210327 273.26437378]
[124.73984528 287.89184570]
[121.41758728 302.51928711]
[132.72966003 292.66857910]
[147.43231201 289.69668579]
[161.68229675 294.38049316]
[171.75469971 305.49563599]
[175.01661682 320.13665771]
[170.61540222 334.47644043]
[159.70152283 344.76660156]
[145.12782288 348.31729126]
[130.70385742 344.20037842]
[120.19998932 333.49200439]
[116.36192322 318.99224854]
[110.90656281 332.96502686]
[105.45121002 346.93783569]
[99.99584961 360.91064453]
[94.54049683 374.88342285]
[89.08513641 388.85623169]
[102.39977264 395.79653931]
[114.88596344 404.13574219]
[126.39731598 413.77606201]
[136.79885864 424.60449219]
[145.96864319 436.49407959]
[153.79917908 449.30541992]
[160.19862366 462.88827515]
[165.09196472 477.08343506]
[168.42182922 491.72445679]
[170.14916992 506.63967896]
[170.25373840 521.65417480]
[168.73431396 536.59204102]
[165.60870361 551.27801514]
[160.91354370 565.53991699]
[154.70391846 579.21063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[46 190]
[47 179]
[48 178]
[49 177]
[50 176]
[51 147]
[52 146]
[53 145]
[54 144]
[57 143]
[58 142]
[59 141]
[61 139]
[62 138]
[79 137]
[80 136]
[81 135]
[86 134]
[88 132]
[89 131]
[90 130]
[91 129]
[92 122]
[93 121]
[94 120]
[95 119]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
