%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[10.74861813 592.02160645]
[1.47951746 603.82830811]
[-8.82483387 614.74328613]
[-20.07904816 624.67590332]
[-32.18986893 633.54400635]
[-45.05694199 641.27410889]
[-58.57363892 647.80206299]
[-72.62796021 653.07379150]
[-87.10343933 657.04565430]
[-101.88012695 659.68475342]
[-116.83557892 660.96911621]
[-131.84587097 660.88824463]
[-146.78660583 659.44268799]
[-161.53398132 656.64453125]
[-175.96582031 652.51684570]
[-189.96249390 647.09393311]
[-203.40803528 640.42065430]
[-216.19104004 632.55236816]
[-228.20558167 623.55419922]
[-239.35208130 613.50079346]
[-249.53817749 602.47546387]
[-258.67947388 590.56951904]
[-266.70022583 577.88159180]
[-273.53396606 564.51690674]
[-279.12405396 550.58612061]
[-283.42416382 536.20477295]
[-286.39868164 521.49194336]
[-288.02294922 506.56954956]
[-288.28353882 491.56130981]
[-287.17822266 476.59155273]
[-284.71621704 461.78433228]
[-280.91790771 447.26235962]
[-275.81478882 433.14593506]
[-269.44909668 419.55206299]
[-261.87362671 406.59338379]
[-253.15110779 394.37728882]
[-243.35386658 383.00497437]
[-232.56307983 372.57070923]
[-220.86813354 363.16094971]
[-208.36596680 354.85363770]
[-195.16017151 347.71768188]
[-181.36016846 341.81213379]
[-167.08032227 337.18600464]
[-152.43896484 333.87756348]
[-137.55740356 331.91427612]
[-122.55897522 331.31234741]
[-107.56795502 332.07684326]
[-92.70855713 334.20138550]
[-78.10392761 337.66836548]
[-63.87508392 342.44909668]
[-50.13992691 348.50390625]
[-42.86669540 335.38519287]
[-35.59346771 322.26651001]
[-28.32023811 309.14779663]
[-21.04700851 296.02911377]
[-20.55296516 288.65499878]
[-13.56657696 282.77041626]
[-6.09883595 269.76147461]
[-17.26994133 259.78640747]
[-26.12628365 247.70185852]
[-32.27878189 234.03462219]
[-35.45629120 219.38113403]
[-35.51754379 204.38136292]
[-32.45742798 189.69094849]
[-26.40732193 175.95252991]
[-17.62945557 163.76757812]
[-6.50554466 153.67016602]
[6.47981501 146.10342407]
[20.76024818 141.40022278]
[35.71230698 139.76843262]
[50.68269348 141.28181458]
[65.01679230 145.87663269]
[72.48453522 132.86769104]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[114.50650787 59.66457367]
[101.18044281 66.55049133]
[86.18906403 67.05904388]
[72.42697906 61.09203720]
[62.55143738 49.80161667]
[58.46924210 35.36777878]
[60.96860886 20.57747078]
[69.56694031 8.28647232]
[82.60404205 0.86798149]
[97.56265259 -0.24560766]
[111.55448914 5.16072178]
[121.87796021 16.04309273]
[126.53975677 30.30028915]
[124.63932800 45.18066788]
[134.30014038 33.70596695]
[143.96095276 22.23126793]
[147.09405518 13.65097332]
[153.85202026 10.65903473]
[163.68260193 -0.67055827]
[173.51318359 -12.00015163]
[183.34376526 -23.32974434]
[193.17434692 -34.65933609]
[182.92437744 -45.63002014]
[173.87731934 -57.61203003]
[166.13232422 -70.47409058]
[159.77421570 -84.07527161]
[154.87266541 -98.26655579]
[151.48139954 -112.89245605]
[149.63754272 -127.79272461]
[149.36132812 -142.80410767]
[150.65574646 -157.76211548]
[153.50665283 -172.50286865]
[157.88279724 -186.86488342]
[163.73622131 -200.69076538]
[171.00279236 -213.82905579]
[179.60290527 -226.13578796]
[189.44233704 -237.47613525]
[200.41326904 -247.72583008]
[212.39549255 -256.77258301]
[225.25775146 -264.51727295]
[238.85908508 -270.87506104]
[253.05049133 -275.77627563]
[267.67648315 -279.16717529]
[282.57678223 -281.01068115]
[297.58816528 -281.28652954]
[312.54614258 -279.99172974]
[327.28683472 -277.14047241]
[341.64874268 -272.76397705]
[355.47448730 -266.91021729]
[368.61257935 -259.64334106]
[380.91912842 -251.04290771]
[392.25921631 -241.20321655]
[402.50866699 -230.23202515]
[411.55511475 -218.24958801]
[419.29949951 -205.38714600]
[425.65695190 -191.78565979]
[430.55780029 -177.59413147]
[433.94836426 -162.96806335]
[435.79150391 -148.06770325]
[436.06698608 -133.05632019]
[434.77182007 -118.09836578]
[431.92022705 -103.35774231]
[427.54336548 -88.99595642]
[421.68927002 -75.17034912]
[414.42205811 -62.03242111]
[405.82135010 -49.72610474]
[395.98138428 -38.38623810]
[385.00994873 -28.13706779]
[373.02728271 -19.09089088]
[360.16464233 -11.34682083]
[346.56301880 -4.98970509]
[332.37136841 -0.08919648]
[317.74520874 3.30101204]
[302.84481812 5.14377594]
[287.83340454 5.41890478]
[272.87548828 4.12338352]
[258.13494873 1.27140760]
[243.77325439 -3.10577583]
[229.94779968 -8.96020794]
[216.81004333 -16.22774315]
[204.50393677 -24.82875633]
[194.67335510 -13.49916363]
[184.84277344 -2.16957045]
[175.01219177 9.16002274]
[165.18161011 20.48961639]
[155.43565369 31.89207840]
[145.77484131 43.36677933]
[136.11402893 54.84148026]
[127.51546478 67.13231659]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[85.49349213 140.33541870]
[78.02574921 153.34437561]
[89.22209930 163.40522766]
[98.07839966 175.56945801]
[104.20950317 189.30395508]
[107.34963226 204.00737000]
[107.36391449 219.03651428]
[104.25415802 233.73442078]
[98.15866089 247.45916748]
[89.34609985 259.61181641]
[78.20362854 269.66256714]
[65.21994019 277.17395020]
[50.96376419 281.81970215]
[36.05900955 283.39907837]
[21.15742302 281.84548950]
[6.91011620 277.22921753]
[-0.55762476 290.23815918]
[-7.92831421 303.30233765]
[-15.20154381 316.42105103]
[-22.47477341 329.53973389]
[-29.74800301 342.65841675]
[-37.02123260 355.77713013]
[-24.60933495 364.21868896]
[-13.01650143 373.75396729]
[-2.33879900 384.30392456]
[7.33529329 395.78118896]
[15.92561150 408.09060669]
[23.36097145 421.13018799]
[29.57975960 434.79187012]
[34.53044510 448.96246338]
[38.17200470 463.52456665]
[40.47426224 478.35745239]
[41.41814041 493.33825684]
[40.99581528 508.34280396]
[39.21078873 523.24682617]
[36.07785416 537.92669678]
[31.62296867 552.26092529]
[25.88304901 566.13061523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 194]
[52 193]
[53 192]
[54 191]
[55 190]
[57 189]
[58 188]
[72 174]
[73 173]
[74 172]
[75 171]
[77 169]
[78 168]
[79 167]
[92 166]
[93 165]
[94 164]
[96 163]
[97 162]
[98 161]
[99 160]
[100 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
