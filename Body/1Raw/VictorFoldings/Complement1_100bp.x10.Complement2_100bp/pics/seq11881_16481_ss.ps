%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[154.93226624 397.52435303]
[160.55682373 383.58480835]
[168.29286194 370.69683838]
[177.94989014 359.17779541]
[189.29006958 349.31134033]
[202.03414917 341.34045410]
[196.16519165 327.53628540]
[190.29623413 313.73211670]
[184.78625488 308.80648804]
[184.44435120 299.67846680]
[178.78157043 285.78842163]
[173.11877441 271.89840698]
[167.45599365 258.00836182]
[156.43161011 253.02944946]
[151.60017395 241.50378418]
[156.05474854 229.39926147]
[144.21850586 220.35752869]
[146.40696716 204.68841553]
[140.95161438 190.71562195]
[129.11537170 181.67390442]
[131.30383301 166.00477600]
[125.84847260 152.03198242]
[120.39311981 138.05918884]
[112.54136658 125.27834320]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[76.27666473 84.71983337]
[66.27848816 73.53785706]
[56.28031921 62.35588074]
[46.28214645 51.17390442]
[36.11859894 40.14202881]
[25.79192924 29.26269531]
[15.46526146 18.38335991]
[11.26055145 17.29967308]
[7.95213652 15.15050602]
[5.76491261 12.34846115]
[4.76667309 9.33679581]
[4.87172365 6.53552771]
[-9.93521309 0.96191114]
[-12.21338367 -13.75743675]
[-21.87419319 -25.23213768]
[-31.53500366 -36.70683670]
[-41.28097153 -48.10929871]
[-51.11154938 -59.43889236]
[-62.90704727 -57.95467758]
[-73.84244537 -62.30415726]
[-81.24386597 -71.29931641]
[-83.36190033 -82.63199615]
[-79.78406525 -93.46552277]
[-89.27296448 -105.08278656]
[-98.76186371 -116.70005035]
[-108.25076294 -128.31730652]
[-117.73966217 -139.93457031]
[-130.32682800 -131.74856567]
[-143.72526550 -124.97148895]
[-157.77792358 -119.68279266]
[-172.32000732 -115.94448090]
[-187.18103027 -113.80038452]
[-202.18675232 -113.27564240]
[-217.16125488 -114.37641907]
[-231.92895508 -117.08979034]
[-246.31669617 -121.38394928]
[-260.15582275 -127.20855713]
[-273.28405762 -134.49531555]
[-285.54745483 -143.15878296]
[-296.80230713 -153.09741211]
[-306.91656494 -164.19464111]
[-315.77169800 -176.32038879]
[-323.26388550 -189.33248901]
[-329.30526733 -203.07835388]
[-333.82501221 -217.39683533]
[-336.77014160 -232.12007141]
[-338.10610962 -247.07542419]
[-337.81729126 -262.08752441]
[-335.90701294 -276.98043823]
[-332.39770508 -291.57946777]
[-327.33050537 -305.71350098]
[-320.76483154 -319.21679688]
[-312.77764893 -331.93106079]
[-303.46264648 -343.70718384]
[-292.92895508 -354.40716553]
[-281.30017090 -363.90548706]
[-268.71255493 -372.09082031]
[-255.31375122 -378.86715698]
[-241.26081848 -384.15512085]
[-226.71853638 -387.89263916]
[-211.85739136 -390.03594971]
[-196.85163879 -390.55987549]
[-181.87719727 -389.45828247]
[-167.10964966 -386.74414062]
[-152.72212219 -382.44918823]
[-138.88331604 -376.62384033]
[-125.75547791 -369.33636475]
[-113.49253082 -360.67224121]
[-102.23824310 -350.73300171]
[-92.12456512 -339.63522339]
[-83.27008057 -327.50900269]
[-75.77859497 -314.49652100]
[-69.73795319 -300.75033569]
[-65.21897125 -286.43157959]
[-62.27463913 -271.70819092]
[-60.93946838 -256.75277710]
[-61.22911835 -241.74067688]
[-63.14019394 -226.84788513]
[-66.65028381 -212.24903870]
[-71.71823883 -198.11528015]
[-78.28463745 -184.61233521]
[-86.27249908 -171.89851379]
[-95.58815765 -160.12286377]
[-106.12239838 -149.42347717]
[-96.63349915 -137.80621338]
[-87.14459991 -126.18894958]
[-77.65570068 -114.57168579]
[-68.16680145 -102.95442200]
[-49.87548447 -102.21737671]
[-37.72320557 -88.10231018]
[-39.78195953 -69.26947021]
[-29.95137787 -57.93988037]
[-23.19341087 -54.94794083]
[-20.06030464 -46.36764908]
[-10.39949417 -34.89294815]
[-0.73868352 -23.41824722]
[13.37724686 -18.66537857]
[16.34642410 -3.12528276]
[26.34459496 8.05669212]
[36.67126465 18.93602562]
[46.99793243 29.81536102]
[51.66411591 30.83308792]
[55.74051285 34.79288864]
[57.46411896 41.17573547]
[67.46229553 52.35770798]
[77.46046448 63.53968430]
[87.45863342 74.72165680]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[123.72333527 115.28016663]
[119.72481537 100.82292938]
[119.25308228 85.83035278]
[122.33481598 71.15032959]
[128.79573059 57.61310577]
[138.27043152 45.98426056]
[150.22308350 36.92147064]
[163.97770691 30.93727875]
[178.75639343 28.37011909]
[193.72335815 29.36517525]
[208.03211975 33.86617661]
[220.87348938 41.61856461]
[231.52117920 52.18391037]
[239.37304688 64.96468353]
[243.98501587 79.23807526]
[245.09625244 94.19686127]
[242.64392090 108.99504089]
[236.76670837 122.79570007]
[227.79699707 134.81835938]
[216.24208069 144.38307190]
[202.75543213 150.94891357]
[188.09977722 154.14453125]
[173.10398865 153.78923035]
[158.61613464 149.90307617]
[145.45558167 142.70587158]
[134.36592102 132.60382080]
[139.82127380 146.57662964]
[145.27662659 160.54942322]
[157.50306702 170.59057617]
[154.92440796 185.26026917]
[160.37976074 199.23306274]
[172.60620117 209.27421570]
[170.02754211 223.94390869]
[184.66711426 235.11372375]
[181.34602356 252.34558105]
[187.00880432 266.23562622]
[192.67158508 280.12564087]
[198.33438110 294.01565552]
[204.10041809 307.86315918]
[209.96937561 321.66732788]
[215.83833313 335.47149658]
[230.42066956 331.82431030]
[245.39402771 330.50335693]
[260.38967896 331.54110718]
[275.03833008 334.91204834]
[288.97927856 340.53314209]
[301.86917114 348.26602173]
[313.39062500 357.92016602]
[323.25985718 369.25790405]
[331.23388672 382.00003052]
[337.11633301 395.83273315]
[340.76229858 410.41537476]
[342.08203125 425.38882446]
[341.04306030 440.38439941]
[337.67089844 455.03277588]
[332.04864502 468.97323608]
[324.31472778 481.86251831]
[314.65960693 493.38314819]
[303.32104492 503.25146484]
[290.57827759 511.22442627]
[276.74508667 517.10571289]
[262.16217041 520.75048828]
[247.18858337 522.06903076]
[232.19309998 521.02880859]
[217.54499817 517.65539551]
[203.60499573 512.03204346]
[190.71636963 504.29702759]
[179.19653320 494.64096069]
[169.32914734 483.30160522]
[161.35722351 470.55816650]
[155.47706604 456.72451782]
[151.83349609 442.14126587]
[150.51623535 427.16757202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 178]
[7 177]
[8 176]
[10 175]
[11 174]
[12 173]
[13 172]
[16 170]
[18 168]
[19 167]
[21 165]
[22 164]
[23 163]
[24 138]
[25 137]
[27 135]
[28 134]
[29 133]
[30 132]
[31 131]
[32 128]
[33 127]
[34 126]
[39 125]
[41 123]
[42 122]
[43 121]
[44 119]
[45 118]
[50 115]
[51 114]
[52 113]
[53 112]
[54 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
