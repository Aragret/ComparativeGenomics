%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-22.13216972 858.02349854]
[-37.08737946 859.20825195]
[-52.07831955 859.78601074]
[-67.08035278 859.75573730]
[-82.06884003 859.11755371]
[-97.01914978 857.87243652]
[-111.90671539 856.02252197]
[-126.70709229 853.57073975]
[-141.39593506 850.52124023]
[-155.94914246 846.87890625]
[-170.34278870 842.64984131]
[-184.55320740 837.84094238]
[-198.55708313 832.46008301]
[-212.33139038 826.51611328]
[-225.85350037 820.01885986]
[-239.10118103 812.97888184]
[-252.05268860 805.40789795]
[-264.68673706 797.31823730]
[-276.98257446 788.72320557]
[-288.91998291 779.63690186]
[-300.47937012 770.07434082]
[-311.64172363 760.05120850]
[-322.38873291 749.58392334]
[-332.70269775 738.68969727]
[-342.56668091 727.38641357]
[-351.96450806 715.69268799]
[-360.88073730 703.62774658]
[-369.30065918 691.21136475]
[-377.21051025 678.46398926]
[-384.59725952 665.40649414]
[-391.44879150 652.06036377]
[-397.75384521 638.44757080]
[-403.50201416 624.59045410]
[-408.68392944 610.51171875]
[-413.29101562 596.23455811]
[-417.31573486 581.78247070]
[-420.75146484 567.17913818]
[-423.59255981 552.44854736]
[-425.83435059 537.61492920]
[-427.47317505 522.70263672]
[-428.50631714 507.73617554]
[-428.93206787 492.74014282]
[-428.74975586 477.73919678]
[-427.95968628 462.75793457]
[-426.56311035 447.82101440]
[-424.56237793 432.95297241]
[-421.96075439 418.17822266]
[-418.76251221 403.52102661]
[-414.97290039 389.00549316]
[-410.59814453 374.65545654]
[-405.64544678 360.49447632]
[-400.12292480 346.54586792]
[-394.03967285 332.83251953]
[-387.40567017 319.37695312]
[-380.23184204 306.20129395]
[-372.52993774 293.32717896]
[-364.31262207 280.77578735]
[-355.59341431 268.56768799]
[-346.38662720 256.72299194]
[-336.70739746 245.26112366]
[-326.57159424 234.20092773]
[-315.99594116 223.56057739]
[-304.99774170 213.35755920]
[-293.59509277 203.60862732]
[-281.80673218 194.32980347]
[-269.65200806 185.53633118]
[-257.15093994 177.24266052]
[-244.32400513 169.46241760]
[-231.19233704 162.20838928]
[-217.77746582 155.49249268]
[-204.10145569 149.32574463]
[-190.18676758 143.71830750]
[-176.05625916 138.67936707]
[-161.73315430 134.21720886]
[-147.24099731 130.33918762]
[-132.60357666 127.05164337]
[-117.84494781 124.35998535]
[-102.98936462 122.26865387]
[-88.06123352 120.78105927]
[-73.08508301 119.89966583]
[-58.08551407 119.62591553]
[-43.08716965 119.96025085]
[-28.11470032 120.90213776]
[-13.19270134 122.45001221]
[1.65431225 124.60134125]
[16.40194511 127.35258484]
[31.02596664 130.69921875]
[45.50234985 134.63575745]
[59.80730820 139.15573120]
[73.91734314 144.25170898]
[79.58013153 130.36167908]
[85.24291992 116.47165680]
[90.90570068 102.58162689]
[90.01872253 97.41178894]
[92.09144592 92.11300659]
[96.94942474 88.36640167]
[103.02325439 74.65113831]
[109.09709167 60.93587112]
[115.17092896 47.22060394]
[121.24475861 33.50533676]
[108.62076569 25.34560776]
[97.42873383 15.31141758]
[87.94428253 3.64986801]
[80.40098572 -9.35186577]
[74.98458862 -23.37360382]
[71.82847595 -38.07004929]
[71.01038361 -53.07928467]
[72.55043793 -68.03170013]
[76.41073608 -82.55907440]
[82.49619293 -96.30365753]
[90.65696716 -108.92698669]
[100.69207764 -120.11818695]
[112.35440826 -129.60166931]
[125.35676575 -137.14390564]
[139.37895203 -142.55914307]
[154.07565308 -145.71403503]
[169.08496094 -146.53089905]
[184.03724670 -144.98960876]
[198.56430054 -141.12811279]
[212.30839539 -135.04151917]
[224.93104553 -126.87969971]
[236.12141418 -116.84366608]
[245.60394287 -105.18054962]
[253.14509583 -92.17757416]
[258.55917358 -78.15494537]
[261.71286011 -63.45797729]
[262.52847290 -48.44860458]
[260.98596191 -33.49644470]
[257.12326050 -18.96970558]
[251.03553772 -5.22612476]
[242.87268066 7.39585257]
[232.83572388 18.58539772]
[221.17181396 28.06695938]
[208.16822815 35.60704422]
[194.14514160 41.01996994]
[179.44792175 44.17243958]
[164.43847656 44.98682022]
[149.48645020 43.44305801]
[134.96002197 39.57917023]
[128.88619995 53.29443741]
[122.81235504 67.00970459]
[116.73852539 80.72496796]
[110.66468811 94.44023895]
[104.79573059 108.24441528]
[99.13294220 122.13444519]
[93.47015381 136.02447510]
[87.80737305 149.91448975]
[101.45839691 156.13635254]
[114.84606171 162.90631104]
[127.94837952 170.21325684]
[140.74380493 178.04516602]
[153.21133423 186.38920593]
[165.33047485 195.23162842]
[177.08131409 204.55792236]
[188.44453430 214.35276794]
[199.40148926 224.60008240]
[209.93415833 235.28300476]
[220.02525330 246.38398743]
[229.65817261 257.88479614]
[238.81710815 269.76654053]
[247.48699951 282.00970459]
[255.65361023 294.59417725]
[263.30352783 307.49923706]
[270.42416382 320.70373535]
[277.00381470 334.18594360]
[283.03170776 347.92370605]
[288.49792480 361.89450073]
[293.39346313 376.07531738]
[297.71029663 390.44287109]
[301.44131470 404.97360229]
[304.58041382 419.64355469]
[307.12243652 434.42868042]
[309.06317139 449.30468750]
[310.39947510 464.24713135]
[311.12911987 479.23144531]
[311.25091553 494.23303223]
[310.76464844 509.22720337]
[309.67114258 524.18939209]
[307.97219849 539.09490967]
[305.67059326 553.91937256]
[302.77008057 568.63836670]
[299.27548218 583.22778320]
[295.19250488 597.66351318]
[290.52786255 611.92193604]
[285.28921509 625.97967529]
[279.48516846 639.81347656]
[273.12527466 653.40075684]
[266.21997070 666.71911621]
[258.78060913 679.74670410]
[250.81941223 692.46209717]
[242.34944153 704.84442139]
[233.38464355 716.87329102]
[223.93972778 728.52899170]
[214.03021240 739.79235840]
[203.67237854 750.64489746]
[192.88325500 761.06878662]
[181.68055725 771.04681396]
[170.08270264 780.56268311]
[158.10873413 789.60070801]
[145.77832031 798.14605713]
[133.11174011 806.18469238]
[120.12979889 813.70343018]
[106.85382080 820.68988037]
[93.30561066 827.13256836]
[79.50744629 833.02087402]
[65.48198700 838.34521484]
[51.25227356 843.09680176]
[36.84169006 847.26776123]
[22.27391434 850.85131836]
[7.57288074 853.84161377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 147]
[91 146]
[92 145]
[93 144]
[96 143]
[97 142]
[98 141]
[99 140]
[100 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
