%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[15.65997982 553.47094727]
[15.58629513 568.50769043]
[12.97228718 583.31561279]
[7.89316607 597.46875000]
[0.49506840 610.55981445]
[-9.00914764 622.21215820]
[-20.34602737 632.09057617]
[-33.18938446 639.91082764]
[-47.16969299 645.44787598]
[-61.88470840 648.54248047]
[-76.91104889 649.10546875]
[-91.81638336 647.12078857]
[-106.17185211 642.64544678]
[-119.56442261 635.80828857]
[-131.60874939 626.80590820]
[-141.95831299 615.89746094]
[-150.31532288 603.39672852]
[-156.43934631 589.66339111]
[-160.15415955 575.09259033]
[-161.35289001 560.10357666]
[-160.00106812 545.12756348]
[-156.13755798 530.59552002]
[-149.87353516 516.92547607]
[-141.38922119 504.51077271]
[-130.92874146 493.70861816]
[-118.79305267 484.82983398]
[-105.33132172 478.12985229]
[-90.93087006 473.80142212]
[-76.00603485 471.96914673]
[-60.98622894 472.68566895]
[-46.30360413 475.93045044]
[-40.64081573 462.04040527]
[-34.97803116 448.15039062]
[-29.31524277 434.26034546]
[-31.67520905 419.55389404]
[-19.30062675 409.69589233]
[-13.63784027 395.80587769]
[-7.97505331 381.91583252]
[-10.33501911 367.20938110]
[2.03956366 357.35137939]
[7.70235014 343.46136475]
[13.36513710 329.57131958]
[19.02792358 315.68130493]
[24.16988373 301.59014893]
[28.78389168 287.31741333]
[33.39790344 273.04470825]
[32.46429443 265.71325684]
[38.18831253 258.59472656]
[43.01431274 244.39225769]
[30.13309288 236.75224304]
[19.11765480 226.59689331]
[10.45113564 214.36833191]
[4.51434040 200.59967041]
[1.56900406 185.89178467]
[1.74625349 170.88708496]
[5.04077291 156.24147034]
[11.31092930 142.59562683]
[20.28486061 130.54707336]
[31.57225800 120.62387848]
[44.68135071 113.26163483]
[59.04032135 108.78427124]
[74.02225494 107.38981628]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[116.12903595 29.22253418]
[109.39563751 15.17621517]
[114.49220276 0.84165323]
[127.92472076 -5.49105024]
[125.03878021 -21.04681778]
[136.45947266 -30.60803986]
[141.28547668 -44.81049728]
[146.11146545 -59.01295090]
[150.93746948 -73.21540833]
[154.69377136 -87.73746490]
[157.35955811 -102.49868011]
[160.02536011 -117.25990295]
[162.69116211 -132.02111816]
[165.35694885 -146.78233337]
[168.02275085 -161.54354858]
[168.69253540 -176.52859497]
[167.35429382 -191.46878052]
[163.47175598 -199.73701477]
[166.10905457 -206.64109802]
[164.99340820 -221.59954834]
[163.87776184 -236.55799866]
[162.76211548 -251.51644897]
[161.64645386 -266.47491455]
[146.79864502 -269.11935425]
[133.07527161 -275.37393188]
[121.33902740 -284.84555054]
[112.32764435 -296.93875122]
[106.60760498 -310.89340210]
[104.53845215 -325.83224487]
[106.25027466 -340.81625366]
[111.63545227 -354.90350342]
[120.35547638 -367.20846558]
[131.86219788 -376.95764160]
[145.43228149 -383.53817749]
[160.21272278 -386.53640747]
[175.27439880 -385.76388550]
[189.67051697 -381.26916504]
[202.49613953 -373.33477783]
[212.94500732 -362.45950317]
[220.36033630 -349.32696533]
[224.27595520 -334.76266479]
[224.44573975 -319.68212891]
[220.85902405 -305.03338623]
[213.74127197 -291.73721313]
[203.53990173 -280.62942505]
[190.89617920 -272.40826416]
[176.60491943 -267.59054565]
[177.72056580 -252.63211060]
[178.83621216 -237.67364502]
[179.95185852 -222.71519470]
[181.06750488 -207.75674438]
[182.29447937 -192.80700684]
[183.63272095 -177.86682129]
[189.42604065 -191.70291138]
[199.16368103 -203.11248779]
[211.91749573 -211.00807190]
[226.47189331 -214.63708496]
[241.43962097 -213.65364075]
[255.39405823 -208.15148926]
[267.00515747 -198.65504456]
[275.16622925 -186.06945801]
[279.09939575 -171.59429932]
[278.42977905 -156.60925293]
[273.22122192 -142.54260254]
[263.97012329 -130.73507690]
[251.55830383 -122.31211090]
[237.16873169 -118.07651520]
[222.17294312 -118.43200684]
[208.00024414 -123.34469604]
[196.00148010 -132.34634399]
[187.32029724 -144.57896423]
[182.78396606 -158.87776184]
[180.11816406 -144.11654663]
[177.45237732 -129.35531616]
[174.78657532 -114.59410858]
[172.12078857 -99.83288574]
[169.45498657 -85.07167053]
[180.31591797 -95.41768646]
[194.87120056 -99.04311371]
[209.31611633 -95.00028229]
[219.87480164 -84.34597015]
[223.78721619 -69.86519623]
[220.03070068 -55.34318924]
[209.58717346 -44.57597733]
[195.18656921 -40.37808228]
[180.59315491 -43.84682083]
[169.62161255 -54.07547379]
[165.13992310 -68.38941193]
[160.31393433 -54.18695450]
[155.48793030 -39.98449707]
[150.66192627 -25.78204346]
[153.89305115 -11.24212837]
[142.12716675 -0.66505253]
[148.92060852 12.54043293]
[144.22868347 27.01249123]
[130.33148193 34.04853058]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[116.09744263 121.68697357]
[127.12817383 131.92053223]
[135.78663635 144.21923828]
[141.69635010 158.04406738]
[144.60124207 172.78981018]
[144.37672424 187.81141663]
[141.03503418 202.45234680]
[134.72460938 216.07316589]
[125.72350311 228.07951355]
[114.42708588 237.94804382]
[101.33074951 245.24925232]
[87.00811768 249.66609192]
[72.08596802 251.00784302]
[57.21676636 249.21826172]
[52.39076996 263.42071533]
[47.67063522 277.65869141]
[43.05662537 291.93142700]
[38.44261551 306.20416260]
[52.78237534 301.80288696]
[65.24971008 310.14349365]
[66.65415192 325.07760620]
[55.96041489 335.59634399]
[41.05151367 333.94567871]
[32.91794968 321.34408569]
[27.25516319 335.23413086]
[21.59237671 349.12414551]
[15.92959023 363.01416016]
[17.88451576 378.71414185]
[5.91497326 387.57864380]
[0.25218689 401.46865845]
[-5.41059971 415.35867310]
[-3.45567441 431.05865479]
[-15.42521667 439.92315674]
[-21.08800316 453.81317139]
[-26.75078964 467.70318604]
[-32.41357803 481.59323120]
[-19.64747620 489.53897095]
[-8.40795517 499.52801514]
[0.98160648 511.27297974]
[8.25105095 524.43591309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 206]
[32 205]
[33 204]
[34 203]
[36 201]
[37 200]
[38 199]
[40 197]
[41 196]
[42 195]
[43 194]
[44 188]
[45 187]
[46 186]
[48 185]
[49 184]
[63 170]
[65 168]
[66 167]
[67 166]
[68 165]
[69 164]
[72 161]
[74 159]
[75 158]
[76 157]
[77 156]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 121]
[85 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
