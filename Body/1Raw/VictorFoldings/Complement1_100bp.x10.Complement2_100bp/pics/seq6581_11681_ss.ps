%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[109.55313873 444.54049683]
[101.55120850 431.84646606]
[94.41501617 418.64633179]
[88.17644501 404.99899292]
[82.86334229 390.96545410]
[78.49945068 376.60836792]
[75.10424805 361.99188232]
[72.69290924 347.18127441]
[71.27619934 332.24264526]
[70.86045074 317.24276733]
[71.44750977 302.24862671]
[73.03476715 287.32714844]
[75.61512756 272.54504395]
[79.17705536 257.96829224]
[83.70466614 243.66198730]
[89.17771912 229.69004822]
[95.57177734 216.11488342]
[102.85827637 202.99710083]
[111.00468445 190.39529419]
[119.97460938 178.36576843]
[129.72799683 166.96221924]
[140.22126770 156.23559570]
[125.97008514 151.90512085]
[122.53953552 136.46031189]
[112.54136658 125.27834320]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[76.27666473 84.71983337]
[66.27848816 73.53785706]
[52.62969589 79.98691559]
[37.73172760 82.32632446]
[22.79328156 80.37494659]
[9.02389812 74.29938507]
[-2.46396637 64.59985352]
[-10.74482250 52.06895065]
[-15.15470123 37.72692490]
[-15.34438324 22.73860359]
[-11.30704498 8.31878376]
[-3.37811232 -4.36622000]
[-13.37628460 -15.54819489]
[-23.37445641 -26.73016930]
[-33.37262726 -37.91214371]
[-50.99441910 -43.25573349]
[-53.91050339 -60.56074524]
[-64.07405090 -71.59262085]
[-74.23760223 -82.62449646]
[-84.40114594 -93.65637970]
[-94.56468964 -104.68825531]
[-106.54905701 -95.64713287]
[-119.36190796 -87.82424164]
[-132.87985229 -81.29491425]
[-146.97268677 -76.12203217]
[-161.50469971 -72.35542297]
[-176.33593750 -70.03134918]
[-191.32354736 -69.17220306]
[-206.32321167 -69.78625488]
[-221.19044495 -71.86759186]
[-235.78208923 -75.39617157]
[-249.95759583 -80.33800507]
[-263.58044434 -86.64550781]
[-276.51947021 -94.25792694]
[-288.64999390 -103.10194397]
[-299.85525513 -113.09239197]
[-310.02731323 -124.13305664]
[-319.06817627 -136.11759949]
[-326.89080811 -148.93060303]
[-333.41989136 -162.44866943]
[-338.59246826 -176.54161072]
[-342.35879517 -191.07369995]
[-344.68258667 -205.90498352]
[-345.54141235 -220.89262390]
[-344.92706299 -235.89227295]
[-342.84542847 -250.75946045]
[-339.31655884 -265.35104370]
[-334.37445068 -279.52642822]
[-328.06668091 -293.14916992]
[-320.45401001 -306.08804321]
[-311.60974121 -318.21838379]
[-301.61904907 -329.42346191]
[-290.57818604 -339.59527588]
[-278.59347534 -348.63592529]
[-265.78030396 -356.45828247]
[-252.26210022 -362.98709106]
[-238.16905212 -368.15939331]
[-223.63690186 -371.92544556]
[-208.80557251 -374.24890137]
[-193.81791687 -375.10745239]
[-178.81828308 -374.49279785]
[-163.95112610 -372.41088867]
[-149.35963440 -368.88171387]
[-135.18432617 -363.93930054]
[-121.56171417 -357.63125610]
[-108.62300873 -350.01834106]
[-96.49282074 -341.17382812]
[-85.28796387 -331.18292236]
[-75.11635590 -320.14184570]
[-66.07595825 -308.15695190]
[-58.25383759 -295.34362793]
[-51.72531891 -281.82531738]
[-46.55328369 -267.73214722]
[-42.78754425 -253.19992065]
[-40.46435928 -238.36854553]
[-39.60611343 -223.38087463]
[-40.22106552 -208.38125610]
[-42.30329514 -193.51412964]
[-45.83274841 -178.92271423]
[-50.77543640 -164.74749756]
[-57.08375168 -151.12501526]
[-64.69694519 -138.18646240]
[-73.54169464 -126.05645752]
[-83.53281403 -114.85179901]
[-73.36927032 -103.81992340]
[-63.20572281 -92.78804779]
[-53.04217529 -81.75617218]
[-42.87862778 -70.72428894]
[-30.80911064 -69.91600037]
[-22.25140762 -60.80834198]
[-22.19065285 -47.91031647]
[-12.19248199 -36.72834015]
[-2.19430971 -25.54636765]
[7.80386257 -14.36439228]
[21.29342842 -20.83037376]
[36.07334137 -23.23567772]
[50.94717407 -21.37693787]
[64.70845032 -15.39630699]
[76.23851776 -5.77063274]
[84.59748077 6.72655869]
[89.10079193 21.08721542]
[89.37533569 36.15007401]
[85.39032745 50.69455719]
[77.46046448 63.53968430]
[87.45863342 74.72165680]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[123.72333527 115.28016663]
[133.72151184 126.46214294]
[148.68783569 131.59243774]
[151.40324402 146.23742676]
[163.23237610 137.00483704]
[175.65177917 128.58297729]
[188.60595703 121.00943756]
[202.03707886 114.31806183]
[215.88513184 108.53874207]
[230.08828735 103.69727325]
[244.58308411 99.81528473]
[259.30480957 96.91011047]
[274.18771362 94.99474335]
[289.16531372 94.07771301]
[304.17071533 94.16313171]
[319.13690186 95.25061798]
[333.99700928 97.33531189]
[348.68472290 100.40789032]
[363.13436890 104.45465088]
[377.28149414 109.45750427]
[391.06286621 115.39411926]
[404.41693115 122.23796844]
[417.28402710 129.95849609]
[429.60675049 138.52120972]
[441.33001709 147.88786316]
[452.40145874 158.01664734]
[462.77166748 168.86230469]
[472.39428711 180.37638855]
[481.22637939 192.50749207]
[489.22848511 205.20141602]
[496.36483765 218.40147400]
[502.60357666 232.04872131]
[507.91683960 246.08219910]
[512.28094482 260.43920898]
[515.67633057 275.05566406]
[518.08782959 289.86627197]
[519.50476074 304.80487061]
[519.92065430 319.80474854]
[519.33380127 334.79888916]
[517.74670410 349.72036743]
[515.16656494 364.50253296]
[511.60479736 379.07934570]
[507.07739258 393.38568115]
[501.60449219 407.35769653]
[495.21063232 420.93295288]
[487.92428589 434.05081177]
[479.77804565 446.65270996]
[470.80825806 458.68237305]
[461.05502319 470.08602905]
[450.56188965 480.81277466]
[439.37570190 490.81472778]
[427.54644775 500.04714966]
[415.12695312 508.46887207]
[402.17266846 516.04223633]
[388.74145508 522.73345947]
[374.89334106 528.51257324]
[360.69012451 533.35388184]
[346.19528198 537.23565674]
[331.47351074 540.14068604]
[316.59057617 542.05584717]
[301.61297607 542.97271729]
[286.60757446 542.88708496]
[271.64141846 541.79943848]
[256.78131104 539.71453857]
[242.09365845 536.64178467]
[227.64402771 532.59484863]
[213.49697876 527.59179688]
[199.71569824 521.65502930]
[186.36172485 514.81097412]
[173.49470520 507.09030151]
[161.17208862 498.52743530]
[149.44894409 489.16061401]
[138.37762451 479.03170776]
[128.00755310 468.18591309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 140]
[24 138]
[25 137]
[26 136]
[28 134]
[29 133]
[30 132]
[40 122]
[41 121]
[42 120]
[43 119]
[45 116]
[46 115]
[47 114]
[48 113]
[49 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
