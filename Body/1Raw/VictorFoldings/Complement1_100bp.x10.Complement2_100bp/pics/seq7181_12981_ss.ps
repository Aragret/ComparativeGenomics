%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[207.73559570 719.14007568]
[198.03073120 707.67004395]
[190.01670837 694.96093750]
[183.84950256 681.26013184]
[179.64916992 666.83435059]
[177.49748230 651.96441650]
[177.43629456 636.93963623]
[179.46684265 622.05267334]
[183.54956055 607.59313965]
[189.60498047 593.84259033]
[197.51525879 581.06866455]
[207.12640381 569.51995850]
[218.25132751 559.42132568]
[230.67349243 550.96936035]
[244.15107727 544.32849121]
[258.42175293 539.62811279]
[255.75596619 524.86688232]
[253.09016418 510.10565186]
[250.42436218 495.34442139]
[247.75857544 480.58322144]
[243.35757446 466.24337769]
[237.28373718 452.52810669]
[231.20989990 438.81283569]
[218.98173523 430.30865479]
[220.46835327 414.55743408]
[214.39451599 400.84216309]
[208.32067871 387.12689209]
[202.24685669 373.41165161]
[196.17301941 359.69638062]
[190.09918213 345.98110962]
[178.81829834 344.27584839]
[169.66668701 337.26416016]
[164.98828125 326.59616089]
[166.05126953 314.87561035]
[172.70677185 305.02468872]
[167.04399109 291.13464355]
[161.38119507 277.24462891]
[150.35682678 272.26571655]
[145.52537537 260.74005127]
[149.97994995 248.63551331]
[144.52459717 234.66271973]
[132.68835449 225.62098694]
[134.87681580 209.95187378]
[129.42146301 195.97908020]
[123.96610260 182.00627136]
[118.51074982 168.03347778]
[113.05538940 154.06068420]
[107.60003662 140.08789062]
[102.14467621 126.11508942]
[96.68931580 112.14228821]
[90.92328644 98.29480743]
[78.26068115 88.80960846]
[80.18173218 74.03940582]
[74.10790253 60.32413864]
[67.93212891 46.65446854]
[55.12970734 37.35884857]
[56.83064270 22.56168556]
[50.55327988 8.93836880]
[44.27592087 -4.68494749]
[43.88809586 10.31003761]
[40.32902527 24.88168907]
[33.76062775 38.36709595]
[24.48171806 50.15275574]
[12.91442490 59.70250702]
[-0.41501641 66.58189392]
[-14.90020561 70.47795868]
[-29.88216400 71.21344757]
[-44.67930984 68.75489807]
[-58.61847687 63.21416855]
[-71.06552124 54.84332275]
[-81.45418549 44.02317047]
[-89.31185913 31.24596596]
[-94.28105927 17.09298134]
[-96.13573456 2.20808339]
[-94.79150391 -12.73156357]
[-90.30952454 -27.04630470]
[-82.89369202 -40.08491516]
[-72.88137054 -51.25422668]
[-60.72806549 -60.04610825]
[-46.98666763 -66.06059265]
[-32.28231812 -69.02404785]
[-17.28396797 -68.80167389]
[-2.67393875 -65.40357208]
[10.88310719 -58.98434830]
[22.77041626 -49.83602142]
[32.44719696 -38.37478256]
[39.47482681 -25.11802483]
[39.02821732 -40.11137390]
[38.47000885 -55.10098267]
[37.80022430 -70.08602142]
[37.13043594 -85.07106018]
[36.46065140 -100.05609894]
[21.69814873 -103.14143372]
[8.16708946 -109.80185699]
[-3.28194904 -119.61869812]
[-11.92927170 -131.97485352]
[-17.23130035 -146.09361267]
[-18.85474586 -161.08744812]
[-16.69755554 -176.01385498]
[-10.89533424 -189.93452454]
[-1.81281269 -201.97439575]
[9.97907352 -211.37664795]
[23.73907661 -217.55023193]
[38.60223007 -220.10707092]
[53.63422775 -218.88644409]
[67.89014435 -213.96508789]
[80.47383118 -205.65235901]
[90.59428406 -194.47079468]
[97.61530304 -181.12329102]
[101.09555817 -166.44886780]
[100.81627655 -151.36997986]
[96.79500580 -136.83450317]
[89.28452301 -123.75613403]
[78.75695801 -112.95700836]
[65.87406921 -105.11595917]
[51.44569016 -100.72588348]
[52.11547852 -85.74084473]
[52.78526306 -70.75580597]
[53.45504761 -55.77077103]
[56.89408112 -49.22899628]
[54.02156830 -40.55797958]
[54.46817398 -25.56463051]
[57.89923477 -10.96230793]
[64.17659760 2.66100788]
[70.45395660 16.28432465]
[82.80738068 24.60551262]
[81.55544281 40.37710953]
[87.20964813 45.13650131]
[87.82316589 54.25030518]
[93.89700317 67.96556854]
[106.12516785 76.46976471]
[104.63854980 92.22097015]
[108.00294495 94.10597992]
[110.52011108 97.46480560]
[111.55047607 101.88581848]
[110.66211700 106.68693542]
[116.11747742 120.65972900]
[121.57283020 134.63252258]
[127.02819061 148.60533142]
[132.48355103 162.57812500]
[137.93890381 176.55091858]
[143.39425659 190.52371216]
[148.84960938 204.49652100]
[161.07604980 214.53767395]
[158.49739075 229.20735168]
[163.95275879 243.18016052]
[178.59231567 254.34997559]
[175.27122498 271.58184814]
[180.93400574 285.47186279]
[186.59680176 299.36190796]
[204.32658386 306.03787231]
[211.42466736 323.25793457]
[203.81445312 339.90725708]
[209.88829041 353.62252808]
[215.96211243 367.33779907]
[222.03594971 381.05307007]
[228.10978699 394.76834106]
[234.18362427 408.48361206]
[246.84622192 417.96881104]
[244.92517090 432.73901367]
[250.99900818 446.45428467]
[257.07284546 460.16952515]
[258.39373779 445.22781372]
[264.68258667 431.60980225]
[275.20059204 420.91531372]
[288.71209717 414.40075684]
[303.62976074 412.83145142]
[318.20111084 416.39175415]
[330.71432495 424.66339111]
[339.69931030 436.67462158]
[344.10055542 451.01437378]
[343.40103149 465.99807739]
[337.68286133 479.86538696]
[327.61785889 490.98724365]
[314.38839722 498.05700684]
[299.54870605 500.24420166]
[284.84213257 497.29180908]
[271.99639893 489.54672241]
[262.51977539 477.91741943]
[265.18557739 492.67864990]
[267.85137939 507.43984985]
[270.51718140 522.20104980]
[273.18298340 536.96228027]
[288.19631958 536.37414551]
[303.14538574 537.88128662]
[317.73919678 541.45434570]
[331.69366455 547.02380371]
[344.73721313 554.48114014]
[356.61590576 563.68133545]
[367.09851074 574.44519043]
[375.98098755 586.56329346]
[383.09045410 599.79962158]
[388.28851318 613.89666748]
[391.47396851 628.57995605]
[392.58483887 643.56372070]
[391.59948730 658.55621338]
[388.53710938 673.26562500]
[383.45727539 687.40570068]
[376.45892334 700.70117188]
[367.67822266 712.89318848]
[357.28613281 723.74450684]
[345.48489380 733.04382324]
[332.50427246 740.61016846]
[318.59692383 746.29620361]
[304.03353882 749.99139404]
[289.09762573 751.62365723]
[274.07989502 751.16125488]
[259.27267456 748.61328125]
[244.96418762 744.02923584]
[231.43296814 737.49835205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 183]
[17 182]
[18 181]
[19 180]
[20 179]
[21 162]
[22 161]
[23 160]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[35 150]
[36 149]
[37 148]
[40 146]
[41 145]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[50 136]
[51 132]
[53 130]
[54 129]
[55 127]
[57 125]
[58 124]
[59 123]
[87 122]
[88 121]
[89 119]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
