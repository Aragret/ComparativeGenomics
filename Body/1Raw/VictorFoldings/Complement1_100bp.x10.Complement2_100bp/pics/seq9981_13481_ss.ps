%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[177.69990540 461.19299316]
[190.64527893 453.42642212]
[186.67318726 438.96188354]
[182.70108032 424.49737549]
[178.72898865 410.03283691]
[174.64932251 395.59829712]
[170.46231079 381.19451904]
[157.32595825 374.26834106]
[152.87455750 359.72048950]
[160.22843933 345.98883057]
[156.04142761 331.58505249]
[145.59484863 325.48623657]
[141.98869324 313.52047729]
[147.67839050 301.94506836]
[143.70629883 287.48052979]
[139.73419189 273.01602173]
[126.70243073 265.89501953]
[122.46810913 251.28253174]
[130.02561951 237.66188049]
[126.05352020 223.19735718]
[122.08142853 208.73283386]
[118.10932922 194.26831055]
[114.13722992 179.80378723]
[99.69206238 176.17025757]
[88.93354034 165.72467041]
[84.82079315 151.20050049]
[88.55469513 136.47111511]
[99.22953033 125.51688385]
[95.25743103 111.05236053]
[91.07041931 96.64857483]
[86.66942596 82.30873108]
[75.22367859 71.38603210]
[78.88627625 56.94876480]
[74.48527527 42.60891724]
[70.08428192 28.26906967]
[66.80216980 25.42622948]
[64.79708099 22.02856445]
[64.08660889 18.54565811]
[64.53406525 15.40457535]
[65.87565613 12.94322014]
[62.33598328 -1.63315558]
[51.56065750 -13.21775436]
[56.07608414 -27.41142082]
[41.00013733 -27.80004501]
[26.54974937 -32.07458878]
[13.70825291 -39.93791199]
[3.34786963 -50.84887695]
[-3.82952166 -64.05957794]
[-7.33994007 -78.66663361]
[-6.94993258 -93.67291260]
[-2.69208813 -108.05564880]
[5.13759089 -120.83612823]
[16.00026131 -131.14628601]
[29.15131569 -138.28765869]
[25.61164284 -152.86402893]
[22.07196999 -167.44039917]
[18.53229904 -182.01678467]
[14.39483547 -167.59869385]
[5.38651848 -155.60493469]
[-7.30745363 -147.61349487]
[-22.01696968 -144.67578125]
[-36.80674362 -147.17831421]
[-49.73091888 -154.79183960]
[-59.08910370 -166.51464844]
[-63.65007019 -180.80441284]
[-62.81373596 -195.78108215]
[-56.69014359 -209.47421265]
[-46.08495331 -220.08221436]
[-32.39345932 -226.20945740]
[-17.41701698 -227.04977417]
[-3.12603116 -222.49261475]
[8.59927177 -213.13754272]
[16.21704483 -200.21316528]
[15.99371624 -215.21150208]
[15.77038860 -230.20983887]
[15.54706097 -245.20817566]
[15.32373333 -260.20651245]
[6.62910032 -269.73364258]
[6.75186157 -282.23037720]
[15.08081818 -291.00277710]
[15.08081818 -306.00277710]
[15.08081818 -321.00277710]
[15.08081818 -336.00277710]
[0.19676588 -338.04699707]
[-14.27028561 -342.09890747]
[-28.05082321 -348.08309937]
[-40.88812256 -355.88806152]
[-52.54303741 -365.36840820]
[-62.79843903 -376.34750366]
[-71.46327972 -388.62081909]
[-78.37612915 -401.95971680]
[-83.40821838 -416.11569214]
[-86.46579742 -430.82504272]
[-87.49190521 -445.81375122]
[-86.46742249 -460.80255127]
[-83.41143799 -475.51223755]
[-78.38088226 -489.66876221]
[-71.46946716 -503.00839233]
[-62.80595779 -515.28265381]
[-52.55174637 -526.26287842]
[-40.89785767 -535.74444580]
[-28.06140137 -543.55078125]
[-14.28151226 -549.53649902]
[0.18510072 -553.58996582]
[15.06893158 -555.63580322]
[30.09270477 -555.63580322]
[44.97653580 -553.58996582]
[59.44314957 -549.53649902]
[73.22303772 -543.55078125]
[86.05949402 -535.74444580]
[97.71337891 -526.26287842]
[107.96759796 -515.28265381]
[116.63110352 -503.00839233]
[123.54251862 -489.66876221]
[128.57307434 -475.51223755]
[131.62905884 -460.80255127]
[132.65353394 -445.81375122]
[131.62744141 -430.82504272]
[128.56985474 -416.11569214]
[123.53776550 -401.95971680]
[116.62491608 -388.62081909]
[107.96007538 -376.34750366]
[97.70467377 -365.36840820]
[86.04975891 -355.88806152]
[73.21246338 -348.08309937]
[59.43192291 -342.09890747]
[44.96487045 -338.04699707]
[30.08081818 -336.00277710]
[30.08081818 -321.00277710]
[30.08081818 -306.00277710]
[30.08081818 -291.00277710]
[39.66151047 -276.29983521]
[30.32207108 -260.42984009]
[30.54539871 -245.43150330]
[30.76872635 -230.43316650]
[30.99205399 -215.43482971]
[31.21538162 -200.43649292]
[33.10867310 -185.55645752]
[36.64834595 -170.98007202]
[40.18801880 -156.40370178]
[43.72769165 -141.82733154]
[58.68932724 -141.51272583]
[73.07072449 -137.33274841]
[85.88987732 -129.56655884]
[96.26984406 -118.73841858]
[103.49870300 -105.58227539]
[107.07844543 -90.99205780]
[106.75920105 -75.96089935]
[102.55673218 -61.51354599]
[94.75174713 -48.63650894]
[83.87114716 -38.21068192]
[70.65245819 -30.95109367]
[81.17460632 -20.40909386]
[76.91236115 -5.17282820]
[80.45203400 9.40354729]
[84.42412567 23.86807060]
[88.82512665 38.20792007]
[93.22612000 52.54776382]
[104.35708618 62.44478607]
[101.00926971 77.90773010]
[105.41027069 92.24758148]
[109.36762238 95.69043732]
[111.11431122 101.10546112]
[109.72195435 107.08026123]
[113.69405365 121.54478455]
[128.46618652 125.51103210]
[139.19882202 136.26777649]
[143.08045959 150.85540771]
[139.16540527 165.33050537]
[128.60176086 175.83169556]
[132.57385254 190.29621887]
[136.54594421 204.76074219]
[140.51805115 219.22526550]
[144.49014282 233.68978882]
[157.94389343 241.54052734]
[161.76611328 256.26620483]
[154.19871521 269.04391479]
[158.17082214 283.50845337]
[162.14291382 297.97296143]
[175.54098511 310.60519409]
[170.44520569 327.39804077]
[174.63221741 341.80181885]
[188.20137024 349.45138550]
[192.24240112 364.11853027]
[184.86608887 377.00750732]
[189.05310059 391.41128540]
[194.45355225 398.77828979]
[193.19351196 406.06076050]
[197.16560364 420.52526855]
[201.13771057 434.98980713]
[205.10980225 449.45431519]
[220.20610046 449.52038574]
[234.72444153 453.65805054]
[247.58747864 461.56027222]
[257.84066772 472.64065552]
[264.72317505 486.07693481]
[267.72427368 500.87207031]
[266.62124634 515.92816162]
[261.49594116 530.12792969]
[252.72871399 542.41772461]
[240.97013855 551.88543701]
[227.09277344 557.82861328]
[212.12641907 559.80621338]
[197.18167114 557.67144775]
[183.36753845 551.58276367]
[171.70912170 541.99194336]
[163.07154846 529.61071777]
[158.09577942 515.35784912]
[157.15104675 500.29098511]
[160.30746460 485.52819824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 186]
[7 185]
[10 182]
[11 181]
[14 179]
[15 178]
[16 177]
[19 174]
[20 173]
[21 172]
[22 171]
[23 170]
[28 165]
[29 164]
[30 161]
[31 160]
[33 158]
[34 157]
[35 156]
[40 155]
[41 154]
[43 152]
[54 141]
[55 140]
[56 139]
[57 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[80 131]
[81 130]
[82 129]
[83 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
