%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[238.98750305 415.12673950]
[246.08554077 401.88867188]
[254.81819153 389.66702271]
[265.04205322 378.66241455]
[276.58923340 369.05563354]
[268.54806519 356.39309692]
[260.50689697 343.73059082]
[252.46572876 331.06805420]
[244.42454529 318.40551758]
[236.10261536 305.92572021]
[227.50404358 293.63488770]
[218.90548706 281.34405518]
[210.30691528 269.05322266]
[201.70835876 256.76239014]
[193.10978699 244.47154236]
[184.51123047 232.18070984]
[175.91265869 219.88986206]
[167.31410217 207.59902954]
[150.64305115 205.38211060]
[140.53450012 191.52093506]
[143.63829041 174.30506897]
[134.85768127 162.14361572]
[126.07707977 149.98216248]
[114.18913269 147.74536133]
[106.77433014 137.68531799]
[108.24669647 124.87145996]
[99.64813232 112.58061981]
[90.77723694 100.48487091]
[81.63843536 88.59023285]
[72.49963379 76.69560242]
[63.36083221 64.80097198]
[54.22202682 52.90633774]
[44.64690781 41.36003494]
[34.64873505 30.17806053]
[24.65056419 18.99608612]
[14.65239239 7.81411076]
[4.65422058 -3.36786389]
[-5.34395170 -14.54983807]
[-15.50749874 -25.58171654]
[-25.83416748 -36.46105194]
[-36.16083527 -47.34038544]
[-51.72707367 -47.91482162]
[-62.04480362 -59.09511948]
[-61.40123749 -73.93161011]
[-71.72790527 -84.81094360]
[-83.48484039 -75.47970581]
[-96.02047729 -67.22406769]
[-109.23669434 -60.10864639]
[-123.03005981 -54.18913269]
[-137.29261780 -49.51185226]
[-151.91275024 -46.11341858]
[-166.77603149 -44.02042007]
[-181.76612854 -43.24924469]
[-196.76571655 -43.80592346]
[-211.65740967 -45.68610382]
[-226.32466125 -48.87506485]
[-240.65266418 -53.34785461]
[-254.52929688 -59.06946182]
[-267.84594727 -65.99510956]
[-280.49838257 -74.07059479]
[-292.38757324 -83.23271179]
[-303.42050171 -93.40975189]
[-313.51080322 -104.52206421]
[-322.57949829 -116.48268890]
[-330.55560303 -129.19799805]
[-337.37670898 -142.56849670]
[-342.98944092 -156.48951721]
[-347.34985352 -170.85212708]
[-350.42379761 -185.54391479]
[-352.18725586 -200.44987488]
[-352.62640381 -215.45336914]
[-351.73782349 -230.43696594]
[-349.52844238 -245.28338623]
[-346.01559448 -259.87643433]
[-341.22671509 -274.10192871]
[-335.19931030 -287.84851074]
[-327.98059082 -301.00857544]
[-319.62698364 -313.47912598]
[-310.20391846 -325.16259766]
[-299.78515625 -335.96752930]
[-288.45217896 -345.80938721]
[-276.29373169 -354.61108398]
[-263.40496826 -362.30374146]
[-249.88676453 -368.82720947]
[-235.84489441 -374.13037109]
[-221.38928223 -378.17178345]
[-206.63305664 -380.91973877]
[-191.69169617 -382.35281372]
[-176.68215942 -382.45971680]
[-161.72192383 -381.23965454]
[-146.92803955 -378.70217896]
[-132.41632080 -374.86712646]
[-118.30033875 -369.76452637]
[-104.69055939 -363.43429565]
[-91.69351959 -355.92599487]
[-79.41092682 -347.29840088]
[-67.93891144 -337.61901855]
[-57.36726761 -326.96359253]
[-47.77872467 -315.41552734]
[-39.24833298 -303.06521606]
[-31.84285545 -290.00933838]
[-25.62025070 -276.35000610]
[-20.62921715 -262.19421387]
[-16.90881920 -247.65266418]
[-14.48817444 -232.83921814]
[-13.38622856 -217.86981201]
[-13.61160564 -202.86158752]
[-15.16254139 -187.93200684]
[-18.02689743 -173.19792175]
[-22.18225670 -158.77465820]
[-27.59609604 -144.77508545]
[-34.22604370 -131.30879211]
[-42.02021408 -118.48114014]
[-50.91759872 -106.39253998]
[-60.84857178 -95.13761139]
[-50.52190399 -84.25827789]
[-35.67203140 -84.12816620]
[-25.04434204 -73.24208069]
[-25.28150177 -57.66705322]
[-14.95483303 -46.78771973]
[-4.62816381 -35.90838242]
[0.03802026 -34.89065552]
[4.11441469 -30.93085480]
[5.83802319 -24.54800987]
[15.83619499 -13.36603546]
[25.83436775 -2.18406129]
[35.83253860 8.99791336]
[45.83071136 20.17988777]
[55.82888412 31.36186218]
[59.25965500 16.75947189]
[72.74922180 10.19961739]
[86.35356903 16.51797867]
[90.04408264 31.05689621]
[81.10025787 43.09881973]
[66.11666107 43.76753235]
[75.25546265 55.66216660]
[84.39426422 67.55680084]
[93.53306580 79.45143127]
[102.67186737 91.34606171]
[106.38606262 92.38391113]
[109.62475586 95.05388641]
[111.66928101 99.10690308]
[111.93897247 103.98205566]
[120.53753662 116.27289581]
[137.39949036 123.67263794]
[138.23854065 141.20155334]
[147.01913452 153.36300659]
[155.79974365 165.52445984]
[169.25531006 166.12617493]
[179.75431824 174.24906921]
[183.60092163 186.75050354]
[179.60493469 199.00047302]
[188.20349121 211.29130554]
[196.80206299 223.58213806]
[205.40061951 235.87298584]
[213.99919128 248.16381836]
[222.59774780 260.45465088]
[231.19631958 272.74548340]
[239.79487610 285.03631592]
[248.39344788 297.32717896]
[253.12408447 299.53353882]
[256.22525024 302.98840332]
[257.49426270 306.86199951]
[257.08706665 310.36434937]
[265.12826538 323.02688599]
[273.16943359 335.68939209]
[281.21060181 348.35192871]
[289.25177002 361.01446533]
[302.85702515 354.64849854]
[317.16467285 350.07467651]
[331.93972778 347.36807251]
[346.93960571 346.57315063]
[361.91799927 347.70294189]
[376.62890625 350.73892212]
[390.83081055 355.63119507]
[404.29046631 362.29946899]
[416.78689575 370.63421631]
[428.11483765 380.49856567]
[438.08834839 391.73056030]
[446.54357910 404.14578247]
[453.34173584 417.54031372]
[458.37118530 431.69421387]
[461.54931641 446.37509155]
[462.82394409 461.34182739]
[462.17413330 476.34869385]
[459.61059570 491.14926147]
[455.17541504 505.50045776]
[448.94137573 519.16668701]
[441.01086426 531.92346191]
[431.51412964 543.56134033]
[420.60711670 553.88922119]
[408.46893311 562.73754883]
[395.29885864 569.96093750]
[381.31317139 575.44085693]
[366.74154663 579.08721924]
[351.82327271 580.84027100]
[336.80328369 580.67114258]
[321.92825317 578.58264160]
[307.44244385 574.60906982]
[293.58370972 568.81567383]
[280.57962036 561.29754639]
[268.64370728 552.17816162]
[257.97201538 541.60729980]
[248.73974609 529.75854492]
[241.09849548 516.82641602]
[235.17375183 503.02331543]
[231.06282043 488.57589722]
[228.83317566 473.72134399]
[228.52145386 458.70367432]
[230.13276672 443.76940918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[18 152]
[21 148]
[22 147]
[23 146]
[26 144]
[27 143]
[28 139]
[29 138]
[30 137]
[31 136]
[32 135]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[39 121]
[40 120]
[41 119]
[44 116]
[45 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
