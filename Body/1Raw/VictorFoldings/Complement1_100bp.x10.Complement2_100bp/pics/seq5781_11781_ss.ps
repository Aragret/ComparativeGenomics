%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[31.72084236 685.65240479]
[19.67343521 694.60931396]
[6.80609751 702.34228516]
[-6.75725031 708.77673340]
[-20.88598061 713.85076904]
[-35.44402695 717.51550293]
[-50.29117584 719.73559570]
[-65.28444672 720.48974609]
[-80.27943420 719.77062988]
[-95.13172913 717.58514404]
[-109.69828796 713.95446777]
[-123.83882904 708.91345215]
[-137.41716003 702.51068115]
[-150.30252075 694.80780029]
[-162.37081909 685.87902832]
[-173.50581360 675.81030273]
[-183.60026550 664.69866943]
[-192.55696106 652.65106201]
[-200.28964233 639.78356934]
[-206.72384644 626.22009277]
[-211.79759216 612.09124756]
[-215.46202087 597.53314209]
[-217.68183899 582.68597412]
[-218.43566895 567.69268799]
[-217.71624756 552.69769287]
[-215.53051758 537.84545898]
[-211.89950562 523.27893066]
[-206.85820007 509.13851929]
[-200.45515442 495.56030273]
[-192.75202942 482.67510986]
[-183.82299805 470.60699463]
[-173.75407410 459.47219849]
[-162.64222717 449.37796021]
[-150.59445190 440.42150879]
[-137.72680664 432.68908691]
[-124.16320038 426.25515747]
[-110.03427124 421.18170166]
[-95.47608185 417.51754761]
[-80.62883759 415.29803467]
[-65.63554382 414.54449463]
[-50.64058304 415.26422119]
[-35.78837585 417.45025635]
[-21.22196007 421.08154297]
[-16.18504333 406.95251465]
[-20.27226257 389.88613892]
[-6.14606094 378.07376099]
[-1.32006335 363.87130737]
[3.50593424 349.66885376]
[-6.15311718 340.01382446]
[-10.73186970 327.07690430]
[-9.28302479 313.36376953]
[-2.03263426 301.55654907]
[9.65295219 293.98931885]
[23.52425957 292.18664551]
[28.56117630 278.05761719]
[33.59809113 263.92858887]
[38.63500977 249.79954529]
[43.67192459 235.67051697]
[31.54088783 226.91751099]
[22.35854721 215.08889771]
[16.87581444 201.13807678]
[15.54498100 186.19252014]
[18.48241425 171.46270752]
[25.45843887 158.14402771]
[35.91527176 147.31985474]
[49.01161575 139.87332153]
[63.69033432 136.41534424]
[78.76378632 137.23451233]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[99.91862488 71.26674652]
[100.58840942 56.28170395]
[101.25819397 41.29666519]
[101.92797852 26.31162643]
[102.48619080 11.32201767]
[102.93280029 -3.67133236]
[103.37940216 -18.66468239]
[103.82601166 -33.65803146]
[96.50302124 -47.68245316]
[104.61582947 -60.17371750]
[105.06243896 -75.16706848]
[105.50904083 -90.16041565]
[105.95565033 -105.15376282]
[106.40225220 -120.14711761]
[98.14170074 -130.05297852]
[98.82234955 -142.53178406]
[107.53470612 -150.92352295]
[108.20449066 -165.90856934]
[93.53884888 -169.24902344]
[79.70543671 -175.15464783]
[67.14894104 -183.43560791]
[56.27299500 -193.82568359]
[47.42722321 -205.99087524]
[40.89598083 -219.54014587]
[36.88921738 -234.03793335]
[35.53573227 -249.01817322]
[36.87903976 -263.99932861]
[40.87595367 -278.49984741]
[47.39798737 -292.05352783]
[56.23549271 -304.22476196]
[67.10437012 -314.62222290]
[79.65524292 -322.91168213]
[93.48464203 -328.82672119]
[108.14801025 -332.17715454]
[123.17398834 -332.85525513]
[138.07954407 -330.83929443]
[152.38552856 -326.19403076]
[165.63206482 -319.06878662]
[177.39334106 -309.69262695]
[187.29125977 -298.36697388]
[195.00765991 -285.45584106]
[200.29449463 -271.37432861]
[202.98179626 -256.57507324]
[202.98318481 -241.53378296]
[200.29862976 -226.73402405]
[195.01441956 -212.65153503]
[187.30041504 -199.73898315]
[177.40458679 -188.41146851]
[165.64505005 -179.03312683]
[152.39984131 -171.90544128]
[138.09471130 -167.25752258]
[123.18952942 -165.23878479]
[122.51974487 -150.25373840]
[131.43435669 -135.13763428]
[121.39560699 -119.70050812]
[120.94899750 -104.70716095]
[120.50238800 -89.71381378]
[120.05578613 -74.72045898]
[119.60917664 -59.72711182]
[126.96411133 -46.77511215]
[118.81935883 -33.21142578]
[118.37274933 -18.21807671]
[117.92614746 -3.22472644]
[117.47953796 11.76862335]
[120.42250061 18.54806328]
[116.91301727 26.98141289]
[116.24323273 41.96644974]
[115.57344818 56.95148849]
[114.90366364 71.93653107]
[122.32469940 58.90087509]
[133.07760620 48.44263077]
[146.31437683 41.38657379]
[160.99110413 38.28917694]
[175.95030212 39.39471436]
[190.01225281 44.61599350]
[202.06794739 53.54124832]
[211.16664124 65.46659088]
[216.59075928 79.45154572]
[217.91253662 94.39319611]
[215.02774048 109.11318207]
[208.16387939 122.45062256]
[197.86225891 133.35366821]
[184.93530273 140.96247864]
[170.40249634 144.67695618]
[155.40994263 144.20419312]
[141.14002991 139.58146667]
[128.71813965 131.17333984]
[119.12391663 119.64290619]
[113.11399841 105.89951324]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[92.89281464 142.27142334]
[105.08515930 151.17236328]
[114.26610565 163.13615417]
[119.69839478 177.18803406]
[120.94974518 192.18612671]
[117.92726135 206.91421509]
[110.88427734 220.18041992]
[100.39910889 230.91363525]
[87.32762146 238.25000000]
[72.73334503 241.60237122]
[57.80095291 240.70744324]
[52.76403809 254.83647156]
[47.72712326 268.96548462]
[42.69020462 283.09451294]
[37.65328979 297.22354126]
[48.49434280 309.70806885]
[51.54265594 325.86367798]
[46.05928421 341.26333618]
[33.63005829 351.73568726]
[17.70838928 354.49484253]
[12.88239193 368.69729614]
[8.05639458 382.89974976]
[13.04701996 394.79330444]
[8.73504829 406.52322388]
[-2.05601358 411.98944092]
[-7.09292984 426.11846924]
[6.48566246 432.52069092]
[19.37133217 440.22305298]
[31.43997955 449.15136719]
[42.57537460 459.21960449]
[52.67027283 470.33087158]
[61.62745285 482.37808228]
[69.36064911 495.24526978]
[75.79539490 508.80850220]
[80.86969757 522.93713379]
[84.53471375 537.49511719]
[86.75511932 552.34222412]
[87.50955200 567.33544922]
[86.79073334 582.33044434]
[84.60559082 597.18280029]
[80.97517395 611.74945068]
[75.93443298 625.89007568]
[69.53192902 639.46850586]
[61.82931137 652.35406494]
[52.90077209 664.42248535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 191]
[44 190]
[46 187]
[47 186]
[48 185]
[54 180]
[55 179]
[56 178]
[57 177]
[58 176]
[68 166]
[69 165]
[70 164]
[72 162]
[73 141]
[74 140]
[75 139]
[76 138]
[77 136]
[78 135]
[79 134]
[80 133]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[89 125]
[90 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
