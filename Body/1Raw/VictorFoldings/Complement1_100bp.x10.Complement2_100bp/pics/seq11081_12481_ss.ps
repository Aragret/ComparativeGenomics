%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[119.98764038 523.37591553]
[120.47267914 508.36651611]
[122.69694519 493.51495361]
[126.63037872 479.02203369]
[132.21977234 465.08377075]
[139.38954163 451.88867188]
[148.04270935 439.61514282]
[158.06227112 428.42922974]
[169.31272888 418.48214722]
[181.64189148 409.90847778]
[174.56478882 396.68295288]
[167.48768616 383.45742798]
[160.41058350 370.23190308]
[146.12528992 366.17410278]
[138.75968933 352.86233521]
[143.11274719 337.90612793]
[136.03564453 324.68060303]
[128.95854187 311.45507812]
[129.40258789 326.44848633]
[126.15385437 341.09246826]
[119.41098785 354.49148560]
[109.58631897 365.82620239]
[97.28063202 374.40350342]
[83.24642181 379.69885254]
[68.34188843 381.38848877]
[53.47844315 379.36904907]
[39.56500244 373.76403809]
[27.45237160 364.91622925]
[17.88124275 353.36660767]
[11.43689632 339.82147217]
[8.51340580 325.10913086]
[9.28954220 310.12921143]
[13.71784687 295.79779053]
[21.52752495 282.99118042]
[32.24101257 272.49255371]
[45.20317841 264.94390869]
[59.62137604 260.80682373]
[74.61392975 260.33425903]
[89.26404572 263.55517578]
[102.67584991 270.27258301]
[114.02921295 280.07568359]
[122.62989044 292.36508179]
[120.40476990 277.53103638]
[118.17965698 262.69699097]
[115.95453644 247.86296082]
[113.72942352 233.02891541]
[98.29412842 229.44033813]
[85.38639832 220.18078613]
[76.99996185 206.64407349]
[74.44414520 190.88743591]
[78.13948822 175.31886292]
[87.54893494 162.32914734]
[101.25560760 153.92466736]
[98.80988312 139.12539673]
[96.36415863 124.32612610]
[93.91842651 109.52685547]
[86.01649475 122.27673340]
[72.17350769 128.05357361]
[57.55257034 124.70273590]
[47.60691833 113.47402191]
[46.04603958 98.55545807]
[53.45210266 85.51129150]
[67.06282806 79.20668030]
[81.80175781 81.99308777]
[92.17213440 92.83230591]
[91.50234985 77.84726715]
[90.83256531 62.86222839]
[90.16278076 47.87718964]
[89.49299622 32.89215088]
[88.71167755 17.91251373]
[87.81886292 2.93910813]
[86.92604065 -12.03429794]
[76.66824341 -18.04379845]
[70.64667511 -28.15525818]
[70.25785828 -39.79754257]
[75.48278046 -50.07449722]
[84.92028046 -56.48541260]
[84.47367859 -71.47875977]
[84.02706909 -86.47211456]
[75.88231659 -100.03579712]
[83.23725128 -112.98780060]
[82.79064178 -127.98114777]
[82.34403992 -142.97450256]
[80.89462280 -157.90431213]
[78.44889069 -172.70358276]
[76.00316620 -187.50285339]
[73.55743408 -202.30212402]
[71.11170959 -217.10139465]
[56.08716965 -218.41061401]
[41.86052322 -223.41593933]
[29.32605934 -231.80271912]
[19.27171326 -243.04376221]
[12.32950401 -256.43243408]
[8.93582821 -271.12710571]
[9.30401325 -286.20410156]
[13.41091633 -300.71560669]
[20.99837112 -313.74945068]
[31.58942795 -324.48632812]
[44.51832199 -332.25128174]
[58.97233200 -336.55621338]
[74.04286194 -337.13052368]
[88.78257751 -333.93807983]
[102.26491547 -327.17956543]
[113.64237213 -317.27987671]
[122.19975281 -304.86123657]
[127.39912415 -290.70434570]
[128.91365051 -275.69912720]
[126.64813995 -260.78878784]
[120.74499512 -246.91061401]
[111.57529449 -234.93699646]
[99.71544647 -225.62062073]
[85.91098022 -219.54711914]
[88.35670471 -204.74784851]
[90.80243683 -189.94857788]
[93.24816132 -175.14930725]
[95.69389343 -160.35003662]
[102.96877289 -173.46780396]
[116.13005829 -180.66368103]
[131.09957886 -179.70793152]
[143.23886108 -170.89671326]
[148.78642273 -156.96026611]
[146.02330017 -142.21694946]
[135.80564880 -131.23515320]
[121.29955292 -127.41770935]
[106.99985504 -131.94747925]
[97.33738708 -143.42109680]
[97.78399658 -128.42774963]
[98.23059845 -113.43440247]
[106.34340668 -100.94313812]
[99.02042389 -86.91871643]
[99.46702576 -71.92536926]
[99.91363525 -56.93201828]
[113.96915436 -45.20351028]
[115.00596619 -26.60679054]
[101.89945221 -12.92711353]
[102.79226685 2.04629230]
[103.68508148 17.01969719]
[107.22113037 23.50954628]
[104.47803497 32.22236633]
[105.14781952 47.20740509]
[105.81760406 62.19244385]
[106.48738861 77.17748260]
[107.15717316 92.16252136]
[108.71769714 107.08112335]
[111.16342926 121.88039398]
[113.60915375 136.67967224]
[116.05488586 151.47894287]
[130.01445007 154.30409241]
[142.14578247 161.70896912]
[151.00224304 172.78668213]
[155.53594971 186.19386292]
[155.22161865 200.31347656]
[150.11737061 213.44992065]
[140.85534668 224.03262329]
[128.56346130 230.80380249]
[130.78857422 245.63784790]
[133.01370239 260.47189331]
[135.23881531 275.30593872]
[137.46392822 290.13998413]
[142.18406677 304.37796021]
[149.26116943 317.60348511]
[156.33827209 330.82901001]
[171.19671631 335.50497437]
[178.18550110 349.01837158]
[173.63610840 363.15478516]
[180.71321106 376.38034058]
[187.79031372 389.60586548]
[194.86743164 402.83139038]
[208.84078979 397.33032227]
[223.35830688 393.48870850]
[238.22366333 391.35845947]
[253.23580933 390.96844482]
[268.19171143 392.32388306]
[282.88912964 395.40649414]
[297.12930298 400.17456055]
[310.71960449 406.56356812]
[323.47628784 414.48718262]
[335.22683716 423.83819580]
[345.81228638 434.49017334]
[355.08953857 446.29904175]
[362.93310547 459.10507202]
[369.23690796 472.73513794]
[373.91567993 487.00488281]
[376.90618896 501.72131348]
[378.16793823 516.68542480]
[377.68389893 531.69482422]
[375.46063232 546.54656982]
[371.52816772 561.03973389]
[365.93969727 574.97839355]
[358.77081299 588.17395020]
[350.11846924 600.44805908]
[340.09963989 611.63464355]
[328.84985352 621.58245850]
[316.52127075 630.15698242]
[303.28054810 637.24218750]
[289.30682373 642.74230957]
[274.78906250 646.58294678]
[259.92355347 648.71221924]
[244.91139221 649.10119629]
[229.95556641 647.74475098]
[215.25836182 644.66119385]
[201.01850891 639.89221191]
[187.42861938 633.50225830]
[174.67247009 625.57781982]
[162.92256165 616.22601318]
[152.33779907 605.57330322]
[143.06134033 593.76385498]
[135.21864319 580.95727539]
[128.91575623 567.32678223]
[124.23792267 553.05670166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 168]
[11 167]
[12 166]
[13 165]
[16 162]
[17 161]
[18 160]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[53 147]
[54 146]
[55 145]
[56 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 137]
[71 136]
[72 135]
[77 132]
[78 131]
[79 130]
[81 128]
[82 127]
[83 126]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
