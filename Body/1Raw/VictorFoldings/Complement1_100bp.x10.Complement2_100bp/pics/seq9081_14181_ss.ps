%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[78.71841431 541.88946533]
[66.71588898 550.90417480]
[53.93279648 558.77288818]
[40.47818756 565.42858887]
[26.46685982 570.81445312]
[12.01835442 574.88446045]
[-2.74405527 577.60400391]
[-17.69441986 578.94982910]
[-32.70518494 578.91046143]
[-47.64828491 577.48620605]
[-62.39622116 574.68927002]
[-76.82317352 570.54345703]
[-90.80604553 565.08416748]
[-104.22554779 558.35797119]
[-116.96717834 550.42224121]
[-128.92222595 541.34472656]
[-139.98870850 531.20288086]
[-150.07220459 520.08312988]
[-159.08665466 508.08047485]
[-166.95518494 495.29724121]
[-173.61065674 481.84252930]
[-178.99626160 467.83111572]
[-183.06608582 453.38253784]
[-185.78536987 438.62008667]
[-187.13093567 423.66967773]
[-187.09130859 408.65893555]
[-185.66680908 393.71585083]
[-182.86961365 378.96795654]
[-178.72355652 364.54107666]
[-173.26403809 350.55828857]
[-166.53761292 337.13891602]
[-158.60169983 324.39739990]
[-149.52397156 312.44250488]
[-139.38191223 301.37619019]
[-128.26203918 291.29290771]
[-116.25921631 282.27862549]
[-103.47586060 274.41030884]
[-90.02102661 267.75506592]
[-76.00952148 262.36968994]
[-61.56088257 258.30010986]
[-46.79838181 255.58108521]
[-31.84797096 254.23576355]
[-16.83720589 254.27563477]
[-1.89415658 255.70037842]
[12.85368729 258.49783325]
[27.28049850 262.64413452]
[32.73585510 248.67132568]
[38.19121170 234.69853210]
[43.64657211 220.72573853]
[49.10192871 206.75292969]
[54.55728531 192.78013611]
[45.33898926 182.70343018]
[41.34246445 169.57496643]
[43.40218735 155.94020081]
[51.17256546 144.46852112]
[63.18439484 137.43061829]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[91.77663422 71.44594574]
[97.71736908 57.44015503]
[111.50299835 51.91819763]
[117.16578674 38.02817154]
[122.82857513 24.13814354]
[128.49136353 10.24811554]
[134.15414429 -3.64191103]
[121.52005005 -12.77593803]
[111.43876648 -24.65644455]
[104.49061584 -38.59309006]
[101.07403564 -53.77735901]
[101.38269806 -69.32946777]
[105.39457703 -84.34934998]
[112.87343597 -97.96872711]
[123.38274384 -109.40130615]
[136.31115723 -117.98820496]
[150.90805054 -123.23587799]
[166.32717896 -124.84452057]
[181.67562866 -122.72515869]
[187.13098145 -136.69795227]
[192.58633423 -150.67074585]
[198.04168701 -164.64355469]
[203.49705505 -178.61634827]
[190.06861877 -185.32398987]
[177.30580139 -193.22497559]
[165.31433105 -202.25381470]
[154.19358826 -212.33570862]
[144.03573608 -223.38710022]
[134.92492676 -235.31640625]
[126.93667603 -248.02479553]
[120.13716888 -261.40695190]
[114.58274841 -275.35195923]
[110.31944275 -289.74429321]
[107.38257599 -304.46469116]
[105.79649353 -319.39117432]
[105.57433319 -334.40002441]
[106.71792603 -349.36691284]
[109.21781921 -364.16778564]
[113.05327606 -378.67999268]
[118.19252014 -392.78332520]
[124.59297180 -406.36083984]
[132.20158386 -419.30010986]
[140.95530701 -431.49383545]
[150.78163147 -442.84103394]
[161.59909058 -453.24765015]
[173.31806946 -462.62747192]
[185.84144592 -470.90274048]
[199.06546021 -478.00491333]
[212.88052368 -483.87509155]
[227.17216492 -488.46469116]
[241.82194519 -491.73565674]
[256.70846558 -493.66085815]
[271.70840454 -494.22439575]
[286.69741821 -493.42153931]
[301.55133057 -491.25897217]
[316.14703369 -487.75463867]
[330.36361694 -482.93753052]
[344.08322144 -476.84759521]
[357.19219971 -469.53527832]
[369.58190918 -461.06118774]
[381.14968872 -451.49554443]
[391.79971313 -440.91760254]
[401.44366455 -429.41503906]
[410.00164795 -417.08312988]
[417.40280151 -404.02407837]
[423.58572388 -390.34613037]
[428.49923706 -376.16259766]
[432.10260010 -361.59100342]
[434.36593628 -346.75213623]
[435.27053833 -331.76892090]
[434.80883789 -316.76550293]
[432.98474121 -301.86624146]
[429.81332397 -287.19461060]
[425.32086182 -272.87213135]
[419.54458618 -259.01754761]
[412.53234863 -245.74560547]
[404.34228516 -233.16633606]
[395.04226685 -221.38394165]
[384.70932007 -210.49607849]
[373.42910767 -200.59297180]
[361.29504395 -191.75665283]
[348.40774536 -184.06037903]
[334.87399292 -177.56790161]
[320.80587769 -172.33302307]
[306.32003784 -168.39913940]
[291.53646851 -165.79882812]
[276.57772827 -164.55364990]
[261.56768799 -164.67391968]
[246.63079834 -166.15863037]
[231.89079285 -168.99548340]
[217.46984863 -173.16099548]
[212.01449585 -159.18818665]
[206.55912781 -145.21539307]
[201.10377502 -131.24259949]
[195.64842224 -117.26979828]
[207.58462524 -109.11904144]
[217.40757751 -98.50609589]
[224.62005615 -85.96325684]
[228.85583496 -72.12062836]
[229.89837646 -57.67449188]
[227.69180298 -43.35224915]
[222.34397888 -29.87582397]
[214.12110901 -17.92525482]
[203.43466187 -8.10439301]
[190.82063293 -0.91038138]
[176.91270447 3.29150534]
[162.41047668 4.28641033]
[148.04417419 2.02087545]
[142.38139343 15.91090202]
[136.71859741 29.80093002]
[131.05581665 43.69095612]
[125.39302826 57.58098221]
[131.38841248 71.16741180]
[125.84341431 85.33454132]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[101.28516388 154.86805725]
[103.60904694 171.14366150]
[97.44351959 186.28311157]
[84.55907440 196.19003296]
[68.53008270 198.23548889]
[63.07472610 212.20829773]
[57.61936951 226.18109131]
[52.16401291 240.15388489]
[46.70865250 254.12669373]
[41.25329590 268.09948730]
[54.67301941 274.82522583]
[67.41491699 282.76052856]
[79.37027740 291.83764648]
[90.43708801 301.97915649]
[100.52095032 313.09851074]
[109.53581238 325.10089111]
[117.40476227 337.88385010]
[124.06067657 351.33834839]
[129.44676208 365.34957886]
[133.51705933 379.79803467]
[136.23683167 394.56039429]
[137.58290100 409.51074219]
[137.54377747 424.52148438]
[136.11978149 439.46463013]
[133.32305908 454.21261597]
[129.17749023 468.63961792]
[123.71842957 482.62258911]
[116.99246216 496.04220581]
[109.05696869 508.78396606]
[99.97964478 520.73919678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[57 180]
[58 179]
[59 178]
[61 176]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
