%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[130.38442993 295.19732666]
[122.31967926 308.01287842]
[110.52912140 317.51348877]
[96.29172516 322.66857910]
[81.15184021 322.91900635]
[66.75173950 318.23757935]
[54.65343475 309.13208008]
[46.16926193 296.59027100]
[42.21952057 281.97253418]
[43.23264313 266.86450195]
[49.09873962 252.90499878]
[59.18149948 241.60824585]
[72.38721466 234.19961548]
[87.28343964 231.48275757]
[89.50855255 216.64871216]
[91.73367310 201.81466675]
[93.95878601 186.98062134]
[96.18390656 172.14657593]
[96.74211884 157.15696716]
[95.62646484 142.19851685]
[94.51081848 127.24006653]
[93.39517212 112.28160858]
[87.89601135 126.23722839]
[79.37928009 138.58491516]
[68.28751373 148.68305969]
[55.19704437 156.00697327]
[40.78807449 160.17608643]
[25.80929947 160.97377014]
[11.03903198 158.35858154]
[-2.75524974 152.46640015]
[-14.85678387 143.60339355]
[-24.63676262 132.23010254]
[-31.58700943 118.93746185]
[-35.34638596 104.41619873]
[-35.71954727 89.42084503]
[-32.68710709 74.73056793]
[-26.40663147 61.10868454]
[-17.20446014 49.26300812]
[-5.55874681 39.80904770]
[7.92538691 33.23803711]
[22.54729271 29.89141846]
[37.54720306 29.94308090]
[52.14570999 33.39033890]
[65.58425903 40.05407333]
[77.16458130 49.58802414]
[86.28493500 61.49680710]
[92.47143555 75.16162872]
[95.40251923 89.87133026]
[99.15882111 75.34927368]
[102.91512299 60.82721329]
[106.67142487 46.30515671]
[105.79074097 37.21327972]
[110.59326172 31.59566689]
[114.56536102 17.13114166]
[118.53746033 2.66661835]
[122.50955200 -11.79790592]
[126.48165131 -26.26243019]
[130.34594727 -40.75612259]
[134.10224915 -55.27818298]
[137.85855103 -69.80023956]
[123.57299805 -74.38811493]
[109.57548523 -79.79138947]
[95.91252136 -85.99211884]
[82.62948608 -92.96970367]
[69.77050018 -100.70095825]
[57.37829208 -109.16020203]
[45.49402237 -118.31934357]
[34.15716934 -128.14794922]
[23.40539169 -138.61337280]
[13.27440739 -149.68083191]
[3.79787159 -161.31358337]
[-4.99273634 -173.47299194]
[-13.06821537 -186.11863708]
[-20.40173721 -199.20852661]
[-26.96894455 -212.69917297]
[-32.74801636 -226.54576111]
[-37.71976089 -240.70228577]
[-41.86765671 -255.12174988]
[-45.17792892 -269.75622559]
[-47.63957977 -284.55709839]
[-49.24443054 -299.47521973]
[-49.98715210 -314.46099854]
[-49.86527634 -329.46469116]
[-48.87920761 -344.43646240]
[-47.03222275 -359.32653809]
[-44.33045959 -374.08547974]
[-40.78288651 -388.66424561]
[-36.40129089 -403.01440430]
[-31.20023155 -417.08831787]
[-25.19698334 -430.83917236]
[-18.41148758 -444.22137451]
[-10.86628723 -457.19039917]
[-2.58644605 -469.70318604]
[6.40053177 -481.71817017]
[16.06479073 -493.19543457]
[26.37422943 -504.09686279]
[37.29459763 -514.38623047]
[48.78962326 -524.02941895]
[60.82111359 -532.99426270]
[73.34910583 -541.25109863]
[86.33198547 -548.77239990]
[99.72662354 -555.53332520]
[113.48851776 -561.51123047]
[127.57196045 -566.68640137]
[141.93016052 -571.04162598]
[156.51542664 -574.56237793]
[171.27931213 -577.23699951]
[186.17274475 -579.05664062]
[201.14628601 -580.01513672]
[216.15019226 -580.10943604]
[231.13459778 -579.33917236]
[246.04972839 -577.70690918]
[260.84606934 -575.21801758]
[275.47442627 -571.88085938]
[289.88623047 -567.70642090]
[304.03359985 -562.70867920]
[317.86953735 -556.90417480]
[331.34808350 -550.31213379]
[344.42446899 -542.95458984]
[357.05523682 -534.85583496]
[369.19845581 -526.04290771]
[380.81375122 -516.54498291]
[391.86257935 -506.39367676]
[402.30822754 -495.62268066]
[412.11596680 -484.26776123]
[421.25323486 -472.36666870]
[429.68966675 -459.95892334]
[437.39727783 -447.08575439]
[444.35040283 -433.78991699]
[450.52600098 -420.11557007]
[455.90353394 -406.10815430]
[460.46514893 -391.81417847]
[464.19564819 -377.28115845]
[467.08270264 -362.55734253]
[469.11666870 -347.69165039]
[470.29083252 -332.73345947]
[470.60125732 -317.73248291]
[470.04693604 -302.73855591]
[468.62969971 -287.80145264]
[466.35424805 -272.97079468]
[463.22817993 -258.29586792]
[459.26184082 -243.82542419]
[454.46838379 -229.60752869]
[448.86380005 -215.68939209]
[442.46667480 -202.11727905]
[435.29824829 -188.93626404]
[427.38232422 -176.19012451]
[418.74523926 -163.92120361]
[409.41564941 -152.17027283]
[399.42456055 -140.97634888]
[388.80514526 -130.37663269]
[377.59271240 -120.40631866]
[365.82449341 -111.09854126]
[353.53958130 -102.48422241]
[340.77877808 -94.59196472]
[327.58447266 -87.44799042]
[314.00051880 -81.07604218]
[300.07202148 -75.49726868]
[285.84527588 -70.73021698]
[271.36749268 -66.79071808]
[256.68679810 -63.69186020]
[241.85194397 -61.44393158]
[226.91223145 -60.05440521]
[211.91728210 -59.52789688]
[196.91691589 -59.86614990]
[181.96093750 -61.06804657]
[167.09904480 -63.12959290]
[152.38061523 -66.04393768]
[148.62431335 -51.52188110]
[144.86801147 -36.99982071]
[146.23634338 -29.73693848]
[140.94616699 -22.29033279]
[136.97407532 -7.82580948]
[133.00198364 6.63871479]
[129.02989197 21.10323906]
[125.05778503 35.56776428]
[121.19348145 50.06145477]
[117.43717957 64.58351135]
[113.68087769 79.10557556]
[109.92458344 93.62763214]
[112.09589386 97.59878540]
[112.66431427 102.28950500]
[111.40422821 107.04973602]
[108.35362244 111.16596222]
[109.46926880 126.12441254]
[110.58492279 141.08287048]
[111.70056915 156.04132080]
[118.13351440 142.49078369]
[128.97685242 132.12631226]
[142.80393982 126.31154633]
[157.79560852 125.81151581]
[171.97943115 130.69201660]
[183.48927307 140.31091309]
[190.81085205 153.40269470]
[192.98085022 168.24488831]
[189.71379089 182.88478088]
[181.43949890 195.39622498]
[169.24659729 204.13311768]
[154.73928833 207.94598389]
[139.82624817 206.33317566]
[126.46954346 199.50686646]
[116.42647552 188.36520386]
[111.01795197 174.37170410]
[108.79283142 189.20573425]
[106.56771851 204.03977966]
[104.34259796 218.87382507]
[102.11747742 233.70787048]
[115.56098938 240.67572021]
[126.01183319 251.63284302]
[132.33638000 265.39071655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 187]
[20 186]
[21 185]
[22 184]
[48 180]
[49 179]
[50 178]
[51 177]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 170]
[59 169]
[60 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
