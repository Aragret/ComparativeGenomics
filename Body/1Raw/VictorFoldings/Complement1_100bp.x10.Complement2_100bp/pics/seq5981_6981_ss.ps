%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAA\
) } def
/len { sequence length } bind def

/coor [
[41.27873611 379.89263916]
[47.90109253 393.45901489]
[50.61657333 408.30923462]
[49.22367096 423.34127808]
[43.82574844 437.43969727]
[34.82336044 449.55825806]
[22.88455582 458.79769897]
[8.89526367 464.47241211]
[-6.10641384 466.16128540]
[-21.00725365 463.73895264]
[-34.70151138 457.38525391]
[-46.17298889 447.57159424]
[-54.57041931 435.02624512]
[-59.27066040 420.68014526]
[-59.92492294 405.59790039]
[-56.48465729 390.89868164]
[-49.20515442 377.67324829]
[-38.62659836 366.90307617]
[-25.53399277 359.38735962]
[-10.89889240 355.68377686]
[4.19268036 356.06719971]
[8.59367847 341.72735596]
[12.99467659 327.38751221]
[17.39567566 313.04766846]
[21.79667282 298.70782471]
[26.19766998 284.36798096]
[30.59866905 270.02813721]
[34.99966812 255.68827820]
[39.40066528 241.34843445]
[38.35800552 234.03169250]
[43.97540665 226.82873535]
[48.58941650 212.55599976]
[47.25104523 207.97148132]
[48.77842712 202.49752808]
[53.55911636 197.93063354]
[58.59603500 183.80160522]
[57.39475250 179.17927551]
[59.08443832 173.75323486]
[63.99898529 169.33070374]
[69.45433807 155.35789490]
[68.95876312 147.98387146]
[75.09633636 141.21867371]
[80.75912476 127.32864380]
[70.81757355 116.29270172]
[66.63970947 102.03887177]
[69.05066681 87.38235474]
[77.57427979 75.21788025]
[90.52709198 67.94801331]
[105.35084534 67.00856781]
[111.01363373 53.11854172]
[116.67642212 39.22851562]
[122.33921051 25.33848953]
[128.00199890 11.44846249]
[113.79209137 16.25247765]
[100.28664398 9.72538853]
[95.22218323 -4.39379311]
[101.49987030 -18.01695824]
[115.52355957 -23.34013939]
[129.25984192 -17.31397820]
[134.83995056 -3.39147997]
[141.71936035 -16.72090912]
[148.59878540 -30.05033875]
[141.48381042 -48.84014130]
[150.34455872 -66.53168488]
[169.06613159 -71.91842651]
[175.34349060 -85.54174042]
[181.62084961 -99.16506195]
[187.89820862 -112.78837585]
[174.20437622 -106.66638947]
[159.50404358 -109.64969635]
[149.28007507 -120.62559509]
[147.34574890 -135.50035095]
[154.42254639 -148.72605896]
[167.87097168 -155.36982727]
[182.67510986 -152.95372009]
[193.31336975 -142.37887573]
[195.81779480 -127.58829498]
[203.66955566 -140.36914062]
[211.52130127 -153.14997864]
[219.37306213 -165.93083191]
[226.05325317 -179.36120605]
[231.50860596 -193.33399963]
[236.96397400 -207.30679321]
[242.41932678 -221.27958679]
[247.87467957 -235.25239563]
[253.33004761 -249.22518921]
[258.78540039 -263.19799805]
[264.24075317 -277.17077637]
[269.69610596 -291.14358521]
[274.52209473 -305.34603882]
[278.70910645 -319.74981689]
[282.89611816 -334.15359497]
[287.08312988 -348.55737305]
[291.27014160 -362.96118164]
[295.45715332 -377.36495972]
[281.83322144 -383.71231079]
[269.33795166 -392.06503296]
[258.26422119 -402.22735596]
[248.87162781 -413.96105957]
[241.38034058 -426.99108887]
[235.96598816 -441.01196289]
[232.75547791 -455.69503784]
[231.82406616 -470.69613647]
[233.19357300 -485.66360474]
[236.83192444 -500.24655151]
[242.65382385 -514.10321045]
[250.52278137 -526.90863037]
[260.25436401 -538.36279297]
[271.62042236 -548.19708252]
[284.35452271 -556.18096924]
[298.15817261 -562.12738037]
[312.70779419 -565.89685059]
[327.66232300 -567.40100098]
[342.67120361 -566.60467529]
[357.38259888 -563.52648926]
[371.45166016 -558.23852539]
[384.54855347 -550.86486816]
[396.36633301 -541.57824707]
[406.62792969 -530.59649658]
[415.09280396 -518.17687988]
[421.56253052 -504.61062622]
[425.88546753 -490.21575928]
[427.96023560 -475.32965088]
[427.73825073 -460.30130005]
[425.22467041 -445.48300171]
[420.47845459 -431.22207642]
[413.61080933 -417.85284424]
[404.78277588 -405.68872070]
[394.20129395 -395.01480103]
[382.11437988 -386.08132935]
[368.80535889 -379.09771729]
[354.58627319 -374.22766113]
[339.79037476 -371.58535767]
[324.76452637 -371.23266602]
[309.86096191 -373.17794800]
[305.67395020 -358.77416992]
[301.48693848 -344.37036133]
[297.29992676 -329.96658325]
[293.11291504 -315.56280518]
[288.92590332 -301.15902710]
[302.55889893 -307.41531372]
[316.67010498 -302.32867432]
[323.17596436 -288.81298828]
[318.34963989 -274.61062622]
[304.95584106 -267.85739136]
[290.66717529 -272.42181396]
[283.66891479 -285.68823242]
[278.21356201 -271.71542358]
[272.75820923 -257.74264526]
[267.30282593 -243.76983643]
[261.84747314 -229.79702759]
[256.39212036 -215.82423401]
[250.93676758 -201.85144043]
[245.48141479 -187.87864685]
[240.02604675 -173.90583801]
[252.18322754 -182.69238281]
[266.93328857 -185.41914368]
[281.42828369 -181.55964661]
[292.86938477 -171.85908508]
[299.04754639 -158.19049072]
[298.76983643 -143.19306946]
[292.08990479 -129.76255798]
[280.29751587 -120.49221039]
[265.66958618 -117.17196655]
[251.03057861 -120.44291687]
[239.20701599 -129.67349243]
[232.48187256 -143.08140564]
[232.15390015 -158.07907104]
[224.30215454 -145.29823303]
[216.45039368 -132.51737976]
[208.59863281 -119.73654175]
[201.52153015 -106.51101685]
[195.24417114 -92.88769531]
[188.96681213 -79.26438141]
[182.68945312 -65.64106750]
[188.70677185 -57.32464218]
[190.74499512 -47.18161392]
[188.37063599 -37.02900696]
[181.94686890 -28.71404076]
[172.57974243 -23.77803421]
[161.92820740 -23.17092514]
[155.04879761 -9.84149647]
[148.16938782 3.48793244]
[141.89202881 17.11124802]
[136.22923279 31.00127602]
[130.56645203 44.89130402]
[124.90366364 58.78133011]
[119.24087524 72.67135620]
[129.18241882 83.70729828]
[133.36029053 97.96112823]
[130.94932556 112.61764526]
[122.42572021 124.78211975]
[109.47290802 132.05198669]
[94.64915466 132.99142456]
[88.98636627 146.88145447]
[83.42713928 160.81326294]
[77.97177887 174.78605652]
[72.72506714 188.83853149]
[67.68814850 202.96755981]
[62.86214828 217.17001343]
[58.24814224 231.44274902]
[53.74051285 245.74943542]
[49.33951569 260.08926392]
[44.93851471 274.42913818]
[40.53751755 288.76898193]
[36.13652039 303.10882568]
[31.73552132 317.44866943]
[27.33452415 331.78851318]
[22.93352509 346.12835693]
[18.53252792 360.46820068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[31 201]
[32 200]
[35 199]
[36 198]
[39 197]
[40 196]
[42 195]
[43 194]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[60 183]
[61 182]
[62 181]
[65 175]
[66 174]
[67 173]
[68 172]
[77 171]
[78 170]
[79 169]
[80 168]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 147]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
