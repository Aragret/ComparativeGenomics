%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[186.58833313 566.35601807]
[188.21925354 551.42553711]
[191.67265320 536.80865479]
[196.89614868 522.72692871]
[203.81057739 509.39389038]
[212.31112671 497.01162720]
[222.26890564 485.76785278]
[233.53295898 475.83303833]
[245.93254089 467.35778809]
[239.05313110 454.02835083]
[232.17372131 440.69894409]
[225.29431152 427.36950684]
[218.41490173 414.04006958]
[211.53549194 400.71063232]
[204.65606689 387.38122559]
[197.67788696 400.65921021]
[182.97541809 403.63198853]
[171.38677979 394.10815430]
[171.45469666 379.10830688]
[183.12908936 369.68975830]
[197.80271912 372.79455566]
[191.93376160 358.99038696]
[186.06480408 345.18621826]
[180.19583130 331.38201904]
[174.32687378 317.57785034]
[168.45791626 303.77368164]
[157.36062622 298.95944214]
[152.35812378 287.50698853]
[156.63198853 275.33746338]
[150.96920776 261.44744873]
[145.30641174 247.55741882]
[139.64363098 233.66740417]
[127.18456268 230.38088989]
[118.76763153 220.36903381]
[117.63724518 207.14282227]
[124.42932129 195.51173401]
[118.97396851 181.53894043]
[113.51860809 167.56613159]
[105.19691467 180.04609680]
[90.26495361 181.47317505]
[79.73001862 170.79539490]
[81.35806274 155.88400269]
[93.94895935 147.73114014]
[108.21997070 152.34564209]
[103.81896973 138.00579834]
[88.99749756 136.57827759]
[75.84796906 129.59230042]
[66.36859131 118.10948181]
[61.99985123 103.87474060]
[63.40562057 89.05118561]
[70.37228394 75.89141846]
[81.84118652 66.39520264]
[77.44018555 52.05535507]
[75.03427887 66.86115265]
[69.73619080 80.89433289]
[61.75693512 93.59597015]
[51.41432953 104.46015167]
[39.12031174 113.05416870]
[25.36454582 119.03572083]
[10.69492531 122.16656494]
[-4.30426979 122.32200623]
[-19.03562546 119.49584961]
[-32.91239548 113.80065918]
[-45.38187790 105.46327209]
[-55.94741821 94.81576538]
[-64.18818665 82.28221893]
[-69.77597046 68.36185455]
[-72.48819733 53.60909653]
[-72.21684265 38.61154938]
[-68.97271729 23.96656227]
[-62.88504028 10.25743580]
[-54.19626999 -1.96979976]
[-43.25248337 -12.22813797]
[-30.48956299 -20.10899353]
[-16.41585350 -25.29847527]
[-1.59190631 -27.58988762]
[13.39184856 -26.89196396]
[27.93861198 -23.23250389]
[41.46899414 -16.75726318]
[53.44408417 -7.72414398]
[63.38691711 3.50706482]
[70.90148163 16.48902893]
[75.68753052 30.70060921]
[77.69154358 15.83508205]
[79.69555664 0.96955341]
[81.69956970 -13.89597511]
[83.37110901 -28.80254936]
[84.70934296 -43.74273300]
[85.93631744 -58.69246674]
[87.05197144 -73.65091705]
[85.02853394 -77.49275208]
[84.39644623 -81.38697815]
[85.00133514 -84.88977051]
[86.56052399 -87.65301514]
[88.70541382 -89.45789337]
[90.70943451 -104.32341766]
[92.71344757 -119.18894958]
[94.71746063 -134.05447388]
[96.72147369 -148.91999817]
[82.85453033 -154.88745117]
[71.11252594 -164.37576294]
[62.36680984 -176.68084717]
[57.26636505 -190.88957214]
[56.18967438 -205.94757080]
[59.21664047 -220.73742676]
[66.12264252 -234.16165161]
[76.39521027 -245.22407532]
[89.27204132 -253.10377502]
[103.79759979 -257.21603394]
[118.89398956 -257.25570679]
[133.44096375 -253.21983337]
[146.35902405 -245.40791321]
[156.68959045 -234.39962769]
[163.66603088 -221.01188660]
[166.77069092 -206.23812866]
[165.77314758 -191.17468262]
[160.74743652 -176.93934631]
[152.06649780 -164.58847046]
[140.37452698 -155.03858948]
[126.53913879 -148.99835205]
[111.58699799 -146.91598511]
[109.58298492 -132.05046082]
[107.57897186 -117.18493652]
[105.57495880 -102.31940460]
[103.57094574 -87.45388031]
[102.01042175 -72.53527069]
[100.89477539 -57.57682037]
[103.53207397 -50.67272949]
[99.64952850 -42.40449905]
[98.31129456 -27.46431541]
[100.27940369 -24.53875732]
[100.92827606 -20.51457787]
[99.75698090 -16.02221107]
[96.56510162 -11.89196110]
[94.56108093 2.97356701]
[92.55706787 17.83909607]
[90.55305481 32.70462418]
[91.78002930 47.65435791]
[96.18103027 61.99420547]
[111.00250244 63.42172623]
[124.15203094 70.40769196]
[133.63140869 81.89051819]
[138.00015259 96.12525940]
[136.59437561 110.94881439]
[129.62771606 124.10858154]
[118.15881348 133.60479736]
[122.55981445 147.94464111]
[127.49140930 162.11077881]
[132.94676208 176.08357239]
[138.40211487 190.05638123]
[154.54942322 196.78570557]
[160.71260071 212.79602051]
[153.53366089 228.00460815]
[159.19644165 241.89463806]
[164.85922241 255.78466797]
[170.52201843 269.67468262]
[185.32626343 280.62530518]
[182.26210022 297.90472412]
[188.13105774 311.70889282]
[194.00001526 325.51306152]
[199.86897278 339.31723022]
[205.73793030 353.12142944]
[211.60690308 366.92559814]
[217.98550415 380.50180054]
[224.86491394 393.83123779]
[231.74432373 407.16067505]
[238.62373352 420.49008179]
[245.50315857 433.81951904]
[252.38256836 447.14895630]
[259.26196289 460.47839355]
[273.35348511 455.28137207]
[287.97686768 451.85549927]
[302.91040039 450.25268555]
[317.92773438 450.49722290]
[332.80114746 452.58538818]
[347.30523682 456.48556519]
[361.22009277 462.13861084]
[374.33474731 469.45880127]
[386.45040894 478.33517456]
[397.38342285 488.63320923]
[406.96798706 500.19671631]
[415.05889893 512.85046387]
[421.53341675 526.40258789]
[426.29339600 540.64764404]
[429.26672363 555.36975098]
[430.40829468 570.34558105]
[429.70083618 585.34820557]
[427.15499878 600.15020752]
[422.80944824 614.52709961]
[416.73004150 628.26104736]
[409.00894165 641.14373779]
[399.76318359 652.97991943]
[389.13293457 663.59020996]
[377.27935791 672.81365967]
[364.38214111 680.51049805]
[350.63681030 686.56408691]
[336.25173950 690.88256836]
[321.44500732 693.40051270]
[306.44107056 694.07977295]
[291.46737671 692.90997314]
[276.75094604 689.90893555]
[262.51486206 685.12213135]
[248.97492981 678.62213135]
[236.33644104 670.50744629]
[224.79096985 660.90112305]
[214.51354980 649.94873047]
[205.65997314 637.81640625]
[198.36447144 624.68798828]
[192.73764038 610.76251221]
[188.86477661 596.25115967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[29 156]
[30 155]
[31 154]
[32 153]
[36 150]
[37 149]
[38 148]
[44 147]
[45 146]
[52 139]
[53 138]
[83 137]
[84 136]
[85 135]
[86 134]
[87 130]
[88 129]
[89 127]
[90 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
