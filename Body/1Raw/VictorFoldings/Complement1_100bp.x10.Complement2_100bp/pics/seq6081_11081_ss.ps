%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[-18.39491272 261.41543579]
[-14.09032726 275.79690552]
[-11.19386482 290.52667236]
[-9.73256874 305.46722412]
[-9.72008419 320.47906494]
[-11.15652657 335.42202759]
[-14.02848530 350.15658569]
[-18.30914307 364.54516602]
[-23.95853233 378.45343018]
[-30.92390633 391.75152588]
[-39.14022827 404.31527710]
[-48.53078461 416.02734375]
[-59.00789261 426.77844238]
[-70.47373199 436.46813965]
[-82.82123566 445.00595093]
[-95.93513489 452.31219482]
[-109.69297028 458.31866455]
[-123.96629333 462.96920776]
[-138.62182617 466.22048950]
[-153.52275085 468.04208374]
[-168.52990723 468.41702271]
[-183.50320435 467.34179688]
[-198.30281067 464.82644653]
[-212.79055786 460.89447021]
[-226.83117676 455.58251953]
[-240.29356384 448.94027710]
[-253.05203247 441.02969360]
[-264.98742676 431.92465210]
[-275.98834229 421.71020508]
[-285.95205688 410.48165894]
[-294.78552246 398.34390259]
[-302.40628052 385.41021729]
[-308.74316406 371.80142212]
[-313.73699951 357.64456177]
[-317.34118652 343.07177734]
[-319.52203369 328.21920776]
[-320.25921631 313.22546387]
[-319.54583740 298.23059082]
[-317.38854980 283.37454224]
[-313.80749512 268.79608154]
[-308.83612061 254.63130188]
[-302.52084351 241.01246643]
[-294.92065430 228.06672668]
[-286.10644531 215.91496277]
[-276.16058350 204.67062378]
[-265.17587280 194.43870544]
[-253.25492859 185.31474304]
[-240.50904846 177.38392639]
[-227.05722046 170.72032166]
[-213.02503967 165.38610840]
[-198.54354858 161.43112183]
[-183.74795532 158.89228821]
[-168.77638245 157.79330444]
[-153.76864624 158.14442444]
[-138.86486816 159.94238281]
[-124.20418549 163.17039490]
[-109.92350006 167.79829407]
[-96.15615082 173.78291321]
[-83.03067017 181.06832886]
[-70.66963196 189.58656311]
[-59.18842697 199.25804138]
[-48.69427109 209.99247742]
[-37.00669098 200.59033203]
[-25.31910896 191.18817139]
[-13.63152790 181.78602600]
[-1.94394636 172.38386536]
[9.74363518 162.98171997]
[21.43121529 153.57957458]
[33.11879730 144.17741394]
[44.80637741 134.77526855]
[56.49396133 125.37311554]
[61.56087494 111.36684418]
[77.16340637 108.74544525]
[88.85098267 99.34329987]
[100.46824646 89.85440063]
[86.00364685 85.88259125]
[79.95033264 72.15824890]
[86.77059174 58.79845810]
[101.43678284 55.65155029]
[113.13752747 65.03731537]
[113.24817657 80.03541565]
[125.47466278 71.34558868]
[137.70114136 62.65576172]
[149.92762756 53.96593857]
[162.15411377 45.27611542]
[174.31558228 36.49551010]
[186.41133118 27.62461662]
[178.30682373 14.99673271]
[171.00305176 1.88942063]
[164.52830505 -11.64660931]
[158.90760803 -25.55899048]
[154.16271973 -39.79389572]
[150.31199646 -54.29625320]
[147.37031555 -69.00995636]
[145.34909058 -83.87808228]
[144.25611877 -98.84310913]
[144.09562683 -113.84712982]
[144.86825562 -128.83210754]
[146.57099915 -143.74006653]
[149.19726562 -158.51332092]
[152.73690796 -173.09472656]
[157.17622375 -187.42787170]
[162.49804688 -201.45730591]
[168.68177795 -215.12872314]
[175.70350647 -228.38926697]
[183.53605652 -241.18762207]
[192.14910889 -253.47425842]
[201.50938416 -265.20166016]
[211.58062744 -276.32446289]
[222.32389832 -286.79962158]
[233.69761658 -296.58657837]
[245.65779114 -305.64752197]
[258.15814209 -313.94738770]
[271.15032959 -321.45404053]
[284.58404541 -328.13845825]
[298.40737915 -333.97476196]
[312.56680298 -338.94036865]
[327.00753784 -343.01611328]
[341.67373657 -346.18615723]
[356.50863647 -348.43832397]
[371.45486450 -349.76382446]
[386.45455933 -350.15753174]
[401.44973755 -349.61798096]
[416.38238525 -348.14721680]
[431.19467163 -345.75094604]
[445.82934570 -342.43841553]
[460.22976685 -338.22247314]
[474.34024048 -333.11941528]
[488.10617065 -327.14895630]
[501.47427368 -320.33425903]
[514.39282227 -312.70162964]
[526.81188965 -304.28060913]
[538.68341064 -295.10382080]
[549.96142578 -285.20669556]
[560.60235596 -274.62759399]
[570.56494141 -263.40740967]
[579.81072998 -251.58953857]
[588.30395508 -239.21972656]
[596.01165771 -226.34582520]
[602.90411377 -213.01763916]
[608.95465088 -199.28672791]
[614.13977051 -185.20622253]
[618.43951416 -170.83059692]
[621.83721924 -156.21545410]
[624.31976318 -141.41735840]
[625.87744141 -126.49355316]
[626.50433350 -111.50177002]
[626.19793701 -96.50001526]
[624.95953369 -81.54632568]
[622.79382324 -66.69855499]
[619.70922852 -52.01414871]
[615.71765137 -37.54991913]
[610.83459473 -23.36182213]
[605.07885742 -9.50475216]
[598.47283936 3.96768212]
[591.04199219 17.00335693]
[582.81506348 29.55184174]
[573.82391357 41.56458664]
[564.10333252 52.99511337]
[553.69091797 63.79920578]
[542.62701416 73.93505859]
[530.95428467 83.36346436]
[518.71801758 92.04793549]
[505.96551514 99.95488739]
[492.74609375 107.05371857]
[479.11090088 113.31697083]
[465.11270142 118.72040558]
[450.80566406 123.24312592]
[436.24511719 126.86763000]
[421.48739624 129.57989502]
[406.58963013 131.36943054]
[391.60940552 132.22930908]
[376.60470581 132.15620422]
[361.63354492 131.15040588]
[346.75390625 129.21580505]
[332.02331543 126.35987091]
[317.49877930 122.59366608]
[303.23648071 117.93176270]
[289.29162598 112.39218903]
[275.71810913 105.99637604]
[262.56848145 98.76908112]
[249.89361572 90.73825073]
[237.74253845 81.93496704]
[226.16226196 72.39327240]
[215.19760132 62.15010071]
[204.89096069 51.24506760]
[195.28222656 39.72036743]
[183.18647766 48.59126282]
[179.65176392 55.08184433]
[170.84394836 57.50260162]
[158.61746216 66.19242096]
[146.39097595 74.88224792]
[134.16448975 83.57207489]
[121.93800354 92.26189423]
[110.04336548 101.40070343]
[106.34212494 108.56124115]
[98.25313568 111.03087616]
[86.56555176 120.43302917]
[80.66266632 135.11180115]
[65.89611053 137.06069946]
[54.20853043 146.46284485]
[42.52094650 155.86500549]
[30.83336639 165.26715088]
[19.14578629 174.66929626]
[7.45820475 184.07145691]
[-4.22937632 193.47360229]
[-15.91695786 202.87576294]
[-27.60453796 212.27790833]
[-39.29211807 221.68005371]
[-31.05491257 234.23011780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 209]
[63 208]
[64 207]
[65 206]
[66 205]
[67 204]
[68 203]
[69 202]
[70 201]
[71 200]
[73 198]
[74 197]
[75 195]
[81 194]
[82 193]
[83 192]
[84 191]
[85 190]
[86 188]
[87 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
