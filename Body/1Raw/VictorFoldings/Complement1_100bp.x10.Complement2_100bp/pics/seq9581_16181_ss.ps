%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[164.92689514 602.98223877]
[154.14385986 592.54772949]
[144.04432678 581.45037842]
[134.66897583 569.73474121]
[126.05554199 557.44812012]
[118.23873138 544.63989258]
[111.25000000 531.36175537]
[105.11749268 517.66705322]
[99.86591339 503.61096191]
[95.51640320 489.25009155]
[92.08647156 474.64227295]
[89.58993530 459.84634399]
[88.03684235 444.92184448]
[87.43345642 429.92889404]
[87.78219604 414.92788696]
[89.08165741 399.97915649]
[91.32661438 385.14297485]
[94.50802612 370.47903442]
[98.61307526 356.04638672]
[103.62524414 341.90316772]
[109.52433777 328.10632324]
[116.28660583 314.71139526]
[123.88482666 301.77230835]
[132.28840637 289.34118652]
[141.46348572 277.46810913]
[151.37313843 266.20083618]
[161.97744751 255.58476257]
[173.23373413 245.66264343]
[185.09666443 236.47441101]
[176.68203735 224.05691528]
[168.26742554 211.63941956]
[159.85279846 199.22192383]
[151.43818665 186.80442810]
[142.93135071 174.44992065]
[134.33279419 162.15907288]
[125.73423004 149.86824036]
[117.13566589 137.57740784]
[108.53710175 125.28656769]
[99.93853760 112.99572754]
[90.97784424 100.96634674]
[81.66295624 89.20909882]
[72.34807587 77.45184326]
[63.03319550 65.69459534]
[48.39876938 59.68259048]
[46.55985641 44.90193939]
[37.24497604 33.14468765]
[27.93009186 21.38743591]
[18.61520958 9.63018513]
[9.30032635 -2.12706566]
[-3.26379824 6.08621645]
[-16.52274895 13.12294006]
[-30.36665344 18.92479706]
[-44.68079758 23.44370842]
[-59.34656143 26.64222908]
[-74.24242401 28.49385452]
[-89.24494934 28.98324013]
[-104.22982025 28.10633278]
[-119.07286072 25.87039948]
[-133.65107727 22.29396439]
[-147.84365845 17.40666771]
[-161.53302002 11.24900532]
[-174.60569763 3.87200284]
[-186.95338440 -4.66320896]
[-198.47375488 -14.28590393]
[-209.07135010 -24.91634369]
[-218.65835571 -36.46644211]
[-227.15531921 -48.84048462]
[-234.49182129 -61.93593597]
[-240.60708618 -75.64427948]
[-245.45043945 -89.85192108]
[-248.98175049 -104.44113922]
[-251.17173767 -119.29102325]
[-252.00227356 -134.27853394]
[-251.46646118 -149.27947998]
[-249.56874084 -164.16954041]
[-246.32484436 -178.82533264]
[-241.76165771 -193.12542725]
[-235.91699219 -206.95130920]
[-228.83926392 -220.18841553]
[-220.58714294 -232.72706604]
[-211.22900391 -244.46334839]
[-200.84237671 -255.30001831]
[-189.51335144 -265.14727783]
[-177.33580017 -273.92352295]
[-164.41061401 -281.55599976]
[-150.84492493 -287.98153687]
[-136.75112915 -293.14682007]
[-122.24602509 -297.00906372]
[-107.44979858 -299.53628540]
[-92.48505402 -300.70755005]
[-77.47580719 -300.51309204]
[-62.54643250 -298.95458984]
[-47.82063675 -296.04492188]
[-33.42044830 -291.80819702]
[-19.46518898 -286.27954102]
[-6.07050371 -279.50476074]
[6.65261459 -271.54000854]
[18.59873581 -262.45123291]
[29.66886902 -252.31381226]
[39.77127838 -241.21173096]
[48.82225800 -229.23695374]
[56.74679947 -216.48873901]
[63.47923660 -203.07272339]
[68.96379089 -189.10008240]
[73.15499878 -174.68658447]
[76.01814270 -159.95166016]
[77.52949524 -145.01744080]
[77.67652893 -130.00765991]
[76.45802307 -115.04669189]
[73.88408661 -100.25851440]
[69.97603607 -85.76567841]
[64.76625824 -71.68827057]
[58.29792404 -58.14294052]
[50.62463760 -45.24193573]
[41.80998230 -33.09215927]
[31.92699623 -21.79429054]
[21.05757713 -11.44194889]
[30.37246132 0.31530273]
[39.68734360 12.07255363]
[49.00222778 23.82980537]
[58.31710815 35.58705521]
[72.28527069 40.75810242]
[74.79044342 56.37971115]
[84.10533142 68.13696289]
[93.42021179 79.89421082]
[102.73509216 91.65146637]
[105.72206116 92.25772858]
[108.55444336 93.96422577]
[110.82431793 96.71578979]
[112.14984131 100.30734253]
[112.22937775 104.39716339]
[120.82794189 116.68800354]
[129.42649841 128.97883606]
[138.02507019 141.26966858]
[146.62362671 153.56051636]
[155.22219849 165.85134888]
[162.70571899 171.08915710]
[163.85568237 178.38980103]
[172.27029419 190.80729675]
[180.68492126 203.22479248]
[189.09953308 215.64228821]
[197.51416016 228.05978394]
[210.44464111 220.44696045]
[223.83192444 213.66957092]
[237.62211609 207.75489807]
[251.75965881 202.72676086]
[266.18765259 198.60540771]
[280.84799194 195.40744019]
[295.68164062 193.14573669]
[310.62887573 191.82939148]
[325.62951660 191.46371460]
[340.62313843 192.05017090]
[355.54934692 193.58641052]
[370.34811401 196.06623840]
[384.95977783 199.47967529]
[399.32553101 203.81295776]
[413.38754272 209.04866028]
[427.08917236 215.16569519]
[440.37524414 222.13943481]
[453.19226074 229.94177246]
[465.48861694 238.54132080]
[477.21478271 247.90344238]
[488.32357788 257.99044800]
[498.77023315 268.76168823]
[508.51269531 280.17382812]
[517.51177979 292.18087769]
[525.73114014 304.73452759]
[533.13781738 317.78421021]
[539.70184326 331.27737427]
[545.39691162 345.15969849]
[550.20001221 359.37527466]
[554.09185791 373.86685181]
[557.05676270 388.57611084]
[559.08276367 403.44378662]
[560.16168213 418.41003418]
[560.28924561 433.41458130]
[559.46490479 448.39700317]
[557.69195557 463.29696655]
[554.97753906 478.05450439]
[551.33264160 492.61016846]
[546.77191162 506.90533447]
[541.31365967 520.88244629]
[534.97991943 534.48529053]
[527.79620361 547.65899658]
[519.79144287 560.35052490]
[510.99780273 572.50885010]
[501.45074463 584.08496094]
[491.18872070 595.03228760]
[480.25302124 605.30664062]
[468.68768311 614.86676025]
[456.53930664 623.67413330]
[443.85681152 631.69323730]
[430.69119263 638.89184570]
[417.09555054 645.24090576]
[403.12460327 650.71490479]
[388.83459473 655.29180908]
[374.28305054 658.95318604]
[359.52859497 661.68420410]
[344.63064575 663.47399902]
[329.64913940 664.31524658]
[314.64447021 664.20465088]
[299.67703247 663.14263916]
[284.80706787 661.13342285]
[270.09448242 658.18511963]
[255.59851074 654.30969238]
[241.37751770 649.52258301]
[227.48876953 643.84320068]
[213.98820496 637.29443359]
[200.93016052 629.90252686]
[188.36724854 621.69726562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 142]
[30 141]
[31 140]
[32 139]
[33 138]
[34 136]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[40 126]
[41 125]
[42 124]
[43 123]
[45 121]
[46 120]
[47 119]
[48 118]
[49 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
