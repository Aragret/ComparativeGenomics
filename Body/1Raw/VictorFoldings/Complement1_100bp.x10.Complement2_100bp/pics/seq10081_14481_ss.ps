%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[82.06756592 319.97201538]
[75.27378845 333.35064697]
[67.66928101 346.28567505]
[59.28290939 358.72805786]
[50.14648056 370.63055420]
[40.29464722 381.94799805]
[29.76478195 392.63751221]
[18.59683228 402.65853882]
[6.83316183 411.97302246]
[-5.48160791 420.54565430]
[-18.30076027 428.34390259]
[-31.57567024 435.33822632]
[-45.25597763 441.50204468]
[-59.28979111 446.81201172]
[-73.62387848 451.24798584]
[-88.20385742 454.79309082]
[-102.97441864 457.43392944]
[-117.87954712 459.16046143]
[-132.86268616 459.96615601]
[-147.86700439 459.84793091]
[-162.83558655 458.80624390]
[-177.71165466 456.84506226]
[-192.43878174 453.97183228]
[-206.96109009 450.19738770]
[-221.22349548 445.53613281]
[-235.17189026 440.00567627]
[-248.75337219 433.62704468]
[-261.91641235 426.42443848]
[-274.61111450 418.42514038]
[-286.78927612 409.65951538]
[-298.40469360 400.16082764]
[-309.41336060 389.96508789]
[-319.77349854 379.11099243]
[-329.44577026 367.63967896]
[-338.39349365 355.59469604]
[-346.58279419 343.02172852]
[-353.98251343 329.96847534]
[-360.56463623 316.48443604]
[-366.30419922 302.62078857]
[-371.17941284 288.43008423]
[-375.17175293 273.96615601]
[-378.26614380 259.28390503]
[-380.45077515 244.43902588]
[-381.71740723 229.48779297]
[-382.06124878 214.48693848]
[-381.48095703 199.49337769]
[-379.97872925 184.56398010]
[-377.56027222 169.75537109]
[-374.23480225 155.12373352]
[-370.01489258 140.72457886]
[-364.91653442 126.61250305]
[-358.95910645 112.84105682]
[-352.16519165 99.46247864]
[-344.56057739 86.52751923]
[-336.17407227 74.08523560]
[-327.03753662 62.18283844]
[-317.18557739 50.86546707]
[-306.65560913 40.17605972]
[-295.48754883 30.15516663]
[-283.72378540 20.84079361]
[-271.40893555 12.26827812]
[-258.58972168 4.47013855]
[-245.31474304 -2.52404523]
[-231.63436890 -8.68774128]
[-217.60050964 -13.99756718]
[-203.26637268 -18.43338203]
[-188.68635559 -21.97835922]
[-173.91577148 -24.61905289]
[-159.01063538 -26.34544182]
[-144.02748108 -27.15098000]
[-129.02316284 -27.03261185]
[-114.05458832 -25.99078369]
[-99.17853546 -24.02945137]
[-84.45144653 -21.15605354]
[-69.92917633 -17.38148880]
[-55.66681671 -12.72007751]
[-41.71847153 -7.18949986]
[-28.13704872 -0.81073684]
[-14.97406960 6.39201498]
[-2.27946568 14.39143276]
[9.89860725 23.15717316]
[21.51395416 32.65598297]
[32.52251053 42.85182953]
[42.88252258 53.70603561]
[52.55468750 65.17742920]
[61.50231552 77.22249603]
[69.69146729 89.79553986]
[77.09107208 102.84886932]
[90.57080841 96.26884460]
[95.85725403 90.18393707]
[104.30057526 89.69287109]
[117.87678528 83.31427002]
[131.45298767 76.93566132]
[145.02919006 70.55706024]
[158.60540771 64.17845154]
[172.18161011 57.79985046]
[166.70245361 43.83055878]
[162.14866638 29.53282166]
[158.53974915 14.96786404]
[155.89115906 0.19805674]
[154.21423340 -14.71335411]
[153.51615906 -29.70251465]
[153.79991150 -44.70523834]
[155.06428528 -59.65728378]
[157.30387878 -74.49462128]
[160.50907898 -89.15370941]
[164.66616821 -103.57177734]
[169.75735474 -117.68709564]
[175.76081848 -131.43920898]
[182.65087891 -144.76922607]
[190.39799500 -157.62007141]
[198.96902466 -169.93672180]
[208.32725525 -181.66641235]
[218.43261719 -192.75894165]
[229.24182129 -203.16679382]
[240.70858765 -212.84539795]
[252.78381348 -221.75331116]
[265.41580200 -229.85240173]
[278.55044556 -237.10797119]
[292.13153076 -243.48895264]
[306.10083008 -248.96803284]
[320.39859009 -253.52172852]
[334.96359253 -257.13055420]
[349.73339844 -259.77908325]
[364.64483643 -261.45590210]
[379.63400269 -262.15390015]
[394.63671875 -261.87005615]
[409.58874512 -260.60559082]
[424.42608643 -258.36590576]
[439.08514404 -255.16062927]
[453.50320435 -251.00344849]
[467.61846924 -245.91218567]
[481.37054443 -239.90863037]
[494.70053101 -233.01849365]
[507.55133057 -225.27130127]
[519.86791992 -216.70019531]
[531.59759521 -207.34188843]
[542.69006348 -197.23648071]
[553.09783936 -186.42721558]
[562.77636719 -174.96038818]
[571.68420410 -162.88510132]
[579.78320312 -150.25306702]
[587.03869629 -137.11837769]
[593.41961670 -123.53726959]
[598.89862061 -109.56791687]
[603.45220947 -95.27012634]
[607.06097412 -80.70512390]
[609.70941162 -65.93528748]
[611.38616943 -51.02385712]
[612.08404541 -36.03468704]
[611.80010986 -21.03196716]
[610.53558350 -6.07993793]
[608.29577637 8.75737095]
[605.09039307 23.41642380]
[600.93316650 37.83444595]
[595.84179688 51.94970322]
[589.83819580 65.70174408]
[582.94793701 79.03168488]
[575.20068359 91.88243866]
[566.62951660 104.19898224]
[557.27111816 115.92856598]
[547.16564941 127.02097321]
[536.35632324 137.42869568]
[524.88946533 147.10716248]
[512.81408691 156.01493835]
[500.18203735 164.11387634]
[487.04730225 171.36929321]
[473.46615601 177.75012207]
[459.49676514 183.22903442]
[445.19894409 187.78256226]
[430.63394165 191.39122009]
[415.86407471 194.03955078]
[400.95263672 195.71621704]
[385.96347046 196.41403198]
[370.96075439 196.13000488]
[356.00872803 194.86535645]
[341.17141724 192.62551880]
[326.51239014 189.42005920]
[312.09439087 185.26271057]
[297.97915649 180.17127991]
[284.22717285 174.16755676]
[270.89724731 167.27726746]
[258.04653931 159.52992249]
[245.73005676 150.95866394]
[234.00053406 141.60023499]
[222.90818787 131.49467468]
[212.50051880 120.68529510]
[202.82211304 109.21835327]
[193.91441345 97.14295959]
[185.81555176 84.51083374]
[178.56021118 71.37605286]
[164.98400879 77.75466156]
[151.40780640 84.13326263]
[137.83158875 90.51187134]
[124.25538635 96.89047241]
[110.67918396 103.26908112]
[97.15083313 109.74857330]
[83.67110443 116.32860565]
[89.41078949 130.19221497]
[94.28613281 144.38287354]
[98.27863312 158.84674072]
[101.37315369 173.52896118]
[103.55794525 188.37384033]
[104.82473755 203.32505798]
[105.16870117 218.32589722]
[104.58855438 233.31945801]
[103.08647919 248.24887085]
[100.66818237 263.05749512]
[97.34284210 277.68917847]
[93.12306213 292.08837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 198]
[89 197]
[91 196]
[92 195]
[93 194]
[94 193]
[95 192]
[96 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
