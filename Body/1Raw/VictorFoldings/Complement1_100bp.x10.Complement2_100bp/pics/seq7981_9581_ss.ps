%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[225.54893494 534.86145020]
[236.23350525 524.27795410]
[248.59367371 515.71069336]
[242.31631470 502.08737183]
[236.03895569 488.46408081]
[229.76159668 474.84075928]
[223.38299561 461.26455688]
[216.90350342 447.73620605]
[210.42399597 434.20785522]
[194.33750916 429.30239868]
[186.62428284 413.97854614]
[192.49354553 397.49911499]
[185.81335449 384.06875610]
[179.13316345 370.63836670]
[174.97093201 368.29638672]
[172.23574829 363.31484985]
[172.46072388 356.70718384]
[166.18336487 343.08389282]
[159.90600586 329.46057129]
[153.62864685 315.83724976]
[151.13127136 330.62789917]
[142.12001038 342.61944580]
[128.60801697 349.13296509]
[113.61388397 348.71328735]
[100.48735046 341.45422363]
[92.16091919 328.97741699]
[90.49472809 314.07025146]
[95.86101532 300.06298828]
[107.06093597 290.08493042]
[121.59239960 286.36517334]
[136.20904541 289.73474121]
[147.64547729 299.44082642]
[143.67337036 284.97631836]
[139.70127869 270.51177979]
[135.72918701 256.04727173]
[131.75709534 241.58274841]
[127.78498840 227.11822510]
[123.81289673 212.65370178]
[119.84079742 198.18917847]
[115.86870575 183.72465515]
[111.89660645 169.26013184]
[98.76448822 157.61906433]
[103.56805420 139.84246826]
[99.38104248 125.43868256]
[95.19403076 111.03490448]
[91.88874817 125.66620636]
[83.83689117 138.32194519]
[71.98439789 147.51533508]
[57.72367859 152.16633606]
[42.73006821 151.72856140]
[28.76500130 146.25343323]
[17.46908188 136.38418579]
[10.16934395 123.28022003]
[7.72335148 108.48099518]
[10.41845798 93.72509766]
[17.93804550 80.74604797]
[29.39871788 71.06860352]
[43.45409012 65.82965851]
[58.45294952 65.64468384]
[72.63324738 70.53541565]
[84.32909393 79.92728424]
[92.16704559 92.71840668]
[91.49726105 77.73336792]
[90.82747650 62.74832535]
[90.15769196 47.76328659]
[86.64821625 39.32994080]
[89.59117126 32.55049896]
[89.14456177 17.55714989]
[88.69795990 2.56379938]
[77.65036774 12.71026421]
[62.65868378 12.21086884]
[52.31082153 1.35168993]
[52.53450775 -13.64664173]
[63.20160675 -24.19240189]
[78.20151520 -24.24449730]
[88.94123077 -13.77396011]
[89.83404541 -28.74736595]
[90.72686005 -43.72077179]
[91.61967468 -58.69417572]
[92.51248932 -73.66757965]
[85.61031342 -87.90382385]
[94.09143829 -100.14799500]
[94.98425293 -115.12139893]
[82.20355988 -107.26939392]
[68.04482269 -112.22217560]
[62.94532394 -126.32873535]
[70.66423035 -139.19024658]
[85.51144409 -141.32568359]
[96.54154968 -131.16241455]
[98.54556274 -146.02793884]
[92.72133636 -160.73809814]
[102.08965302 -172.31756592]
[104.09366608 -187.18309021]
[106.09767914 -202.04862976]
[108.10169220 -216.91415405]
[102.27747345 -231.62431335]
[111.64578247 -243.20378113]
[97.57531738 -248.59996033]
[85.12890625 -257.09603882]
[74.97777557 -268.23388672]
[67.66934967 -281.41278076]
[63.59777451 -295.92205811]
[62.98262024 -310.97921753]
[65.85706329 -325.77227783]
[72.06608582 -339.50344849]
[81.27484894 -351.43222046]
[92.98672485 -360.91528320]
[106.57011414 -367.44122314]
[121.29248810 -370.65814209]
[136.35987854 -370.39254761]
[150.95971680 -366.65872192]
[164.30465698 -359.65808105]
[175.67503357 -349.76809692]
[184.45762634 -337.52218628]
[190.17884827 -323.58071899]
[192.53012085 -308.69555664]
[191.38464355 -293.66943359]
[186.80421448 -279.31268311]
[179.03584290 -266.39953613]
[168.49845886 -255.62640381]
[155.76034546 -247.57426453]
[141.50842285 -242.67736816]
[126.51131439 -241.19976807]
[132.47886658 -227.55288696]
[122.96721649 -214.91014099]
[120.96320343 -200.04461670]
[118.95919037 -185.17907715]
[116.95517731 -170.31355286]
[122.92274475 -156.66667175]
[113.41108704 -144.02392578]
[111.40707397 -129.15838623]
[109.95765686 -114.22858429]
[109.06484222 -99.25518036]
[116.03088379 -86.08994293]
[107.48590088 -72.77476501]
[106.59308624 -57.80136108]
[105.70026398 -42.82795715]
[104.80744934 -27.85454941]
[103.91463470 -12.88114357]
[103.69130707 2.11719346]
[104.13791656 17.11054420]
[104.58451843 32.10389328]
[105.14273071 47.09350204]
[105.81251526 62.07854080]
[106.48229980 77.06358337]
[107.15208435 92.04862213]
[109.59781647 106.84789276]
[113.78482819 121.25167084]
[117.97183228 135.65545654]
[128.87892151 142.54008484]
[132.06976318 154.62322998]
[126.36112976 165.28802490]
[130.33322144 179.75254822]
[134.30532837 194.21707153]
[138.27742004 208.68159485]
[142.24951172 223.14611816]
[146.22161865 237.61064148]
[150.19371033 252.07516479]
[154.16580200 266.53970337]
[158.13789368 281.00421143]
[162.11000061 295.46875000]
[167.25195312 309.55987549]
[173.52931213 323.18319702]
[179.80667114 336.80651855]
[186.08404541 350.42984009]
[192.56353760 363.95819092]
[199.24372864 377.38854980]
[205.92391968 390.81893921]
[219.10133362 393.60650635]
[228.13540649 403.33255005]
[229.89219666 416.29385376]
[223.95234680 427.72836304]
[230.43183899 441.25671387]
[236.91134644 454.78503418]
[243.44070435 461.17294312]
[243.38491821 468.56338501]
[249.66227722 482.18670654]
[255.93963623 495.81002808]
[262.21701050 509.43334961]
[276.76028442 505.60397339]
[291.74758911 504.35839844]
[306.72351074 505.73443604]
[321.23287964 509.69030762]
[334.83483887 516.10577393]
[347.11599731 524.78588867]
[357.70315552 535.46685791]
[366.27456665 547.82409668]
[372.56979370 561.48211670]
[376.39752197 576.02581787]
[377.64141846 591.01330566]
[376.26367188 605.98901367]
[372.30615234 620.49798584]
[365.88912964 634.09918213]
[357.20764160 646.37933350]
[346.52548218 656.96533203]
[334.16723633 665.53533936]
[320.50851440 671.82904053]
[305.96435547 675.65509033]
[290.97677612 676.89727783]
[276.00119019 675.51782227]
[261.49270630 671.55865479]
[247.89219666 665.14013672]
[235.61300659 656.45721436]
[225.02827454 645.77386475]
[216.45964050 633.41467285]
[210.16752625 619.75518799]
[206.34310913 605.21063232]
[205.10261536 590.22290039]
[206.48376465 575.24743652]
[210.44456482 560.73944092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[5 177]
[6 176]
[7 174]
[8 173]
[9 172]
[12 168]
[13 167]
[14 166]
[17 165]
[18 164]
[19 163]
[20 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[43 149]
[44 148]
[45 147]
[62 146]
[63 145]
[64 144]
[65 143]
[67 142]
[68 141]
[69 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[82 133]
[83 132]
[89 131]
[90 130]
[92 128]
[93 127]
[94 126]
[95 125]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
