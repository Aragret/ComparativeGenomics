%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[204.27053833 491.13912964]
[196.01998901 478.60671997]
[188.52636719 465.60754395]
[181.81597900 452.18728638]
[175.91241455 438.39303589]
[170.83639526 424.27331543]
[166.60574341 409.87765503]
[163.23535156 395.25668335]
[160.73703003 380.46170044]
[159.11955261 365.54470825]
[158.38862610 350.55807495]
[158.54678345 335.55447388]
[159.59350586 320.58660889]
[161.52508545 305.70703125]
[164.33476257 290.96801758]
[168.01264954 276.42132568]
[172.54583740 262.11807251]
[177.91839600 248.10847473]
[184.11146545 234.44175720]
[191.10328674 221.16593933]
[198.86927795 208.32763672]
[207.38220215 195.97193909]
[195.55593872 186.74484253]
[183.72966003 177.51774597]
[171.90339661 168.29064941]
[160.07711792 159.06355286]
[148.25085449 149.83644104]
[136.42459106 140.60934448]
[132.89926147 140.67619324]
[129.16642761 139.03884888]
[126.02738953 135.61834717]
[124.28845215 130.69664001]
[112.88599396 120.95067596]
[101.48352814 111.20471191]
[103.65031433 126.04738617]
[96.78130341 139.38218689]
[83.43846130 146.23553467]
[68.59834290 144.05133057]
[57.79593658 133.64422607]
[55.06027985 118.89579010]
[61.41170502 105.30684662]
[74.48128510 97.94572449]
[89.39546204 99.55842590]
[79.23191071 88.52655029]
[69.06836700 77.49466705]
[54.02732468 72.58777618]
[51.09417343 57.98483658]
[39.16327667 67.09408569]
[26.44277382 75.06361389]
[13.04119301 81.82543945]
[-0.92712784 87.32186127]
[-15.34301186 91.50598907]
[-30.08346558 94.34212494]
[-45.02272797 95.80606842]
[-60.03333664 95.88533020]
[-74.98722076 94.57923889]
[-89.75680542 91.89893341]
[-104.21607208 87.86727905]
[-118.24166107 82.51867676]
[-131.71391296 75.89875793]
[-144.51786804 68.06401062]
[-156.54429626 59.08126831]
[-167.69058228 49.02717590]
[-177.86164856 37.98751068]
[-186.97070312 26.05646515]
[-194.94001770 13.33583069]
[-201.70161438 -0.06586382]
[-207.19779968 -14.03427601]
[-211.38169861 -28.45022964]
[-214.21759033 -43.19073105]
[-215.68127441 -58.13001633]
[-215.76029968 -73.14062500]
[-214.45394897 -88.09449005]
[-211.77339172 -102.86402893]
[-207.74150085 -117.32323456]
[-202.39266968 -131.34872437]
[-195.77252197 -144.82086182]
[-187.93756104 -157.62469482]
[-178.95462036 -169.65097046]
[-168.90034485 -180.79708862]
[-157.86050415 -190.96797180]
[-145.92930603 -200.07682800]
[-133.20854187 -208.04592896]
[-119.80673218 -214.80731201]
[-105.83823395 -220.30326843]
[-91.42221069 -224.48690796]
[-76.68166351 -227.32255554]
[-61.74235153 -228.78601074]
[-46.73173904 -228.86476135]
[-31.77789497 -227.55818176]
[-17.00840187 -224.87738037]
[-2.54926777 -220.84524536]
[11.47614193 -215.49617004]
[24.94816589 -208.87580872]
[37.75186157 -201.04063416]
[49.77799225 -192.05749512]
[60.92395020 -182.00302124]
[71.09464264 -170.96302795]
[80.20329285 -159.03167725]
[88.17218781 -146.31077576]
[94.93334198 -132.90884399]
[100.42906952 -118.94025421]
[104.61248016 -104.52416229]
[107.44787598 -89.78356934]
[108.91107178 -74.84423065]
[108.98958588 -59.83362198]
[107.68274689 -44.87979889]
[105.00170135 -30.11034775]
[100.96932220 -15.65128231]
[95.62001801 -1.62596178]
[88.99943542 11.84595108]
[81.16403961 24.64951706]
[72.18070221 36.67549896]
[62.12604904 47.82128906]
[76.44012451 51.93910599]
[80.10024261 67.33112335]
[90.26379395 78.36299896]
[100.42733765 89.39487457]
[111.22949219 99.80225372]
[122.63195801 109.54821777]
[134.03442383 119.29418182]
[145.65168762 128.78308105]
[157.47795105 138.01017761]
[169.30421448 147.23727417]
[181.13049316 156.46437073]
[192.95675659 165.69146729]
[204.78303528 174.91856384]
[216.60929871 184.14567566]
[226.52362061 172.88337708]
[237.08772278 162.22819519]
[248.26448059 152.21755981]
[260.01464844 142.88661194]
[272.29696655 134.26815796]
[285.06826782 126.39244080]
[298.28369141 119.28714752]
[311.89685059 112.97721863]
[325.85989380 107.48482513]
[340.12377930 102.82926178]
[354.63842773 99.02687836]
[369.35281372 96.09103394]
[384.21530151 94.03204346]
[399.17367554 92.85712433]
[414.17535400 92.57041931]
[429.16769409 93.17292786]
[444.09799194 94.66253662]
[458.91384888 97.03401184]
[473.56317139 100.27902985]
[487.99453735 104.38617706]
[502.15722656 109.34104156]
[516.00152588 115.12622070]
[529.47882080 121.72137451]
[542.54168701 129.10336304]
[555.14434814 137.24623108]
[567.24249268 146.12138367]
[578.79357910 155.69766235]
[589.75708008 165.94142151]
[600.09448242 176.81666565]
[609.76947021 188.28521729]
[618.74804688 200.30677795]
[626.99871826 212.83912659]
[634.49243164 225.83822632]
[641.20294189 239.25843811]
[647.10662842 253.05262756]
[652.18280029 267.17230225]
[656.41357422 281.56793213]
[659.78411865 296.18887329]
[662.28253174 310.98382568]
[663.90014648 325.90081787]
[664.63122559 340.88742065]
[664.47320557 355.89102173]
[663.42657471 370.85891724]
[661.49511719 385.73852539]
[658.68560791 400.47756958]
[655.00781250 415.02429199]
[650.47479248 429.32757568]
[645.10235596 443.33721924]
[638.90936279 457.00396729]
[631.91766357 470.27984619]
[624.15179443 483.11822510]
[615.63897705 495.47399902]
[606.40917969 507.30377197]
[596.49475098 518.56597900]
[585.93054199 529.22106934]
[574.75372314 539.23162842]
[563.00347900 548.56243896]
[550.72106934 557.18078613]
[537.94970703 565.05639648]
[524.73419189 572.16156006]
[511.12100220 578.47137451]
[497.15789795 583.96362305]
[482.89398193 588.61907959]
[468.37930298 592.42132568]
[453.66485596 595.35705566]
[438.80236816 597.41595459]
[423.84399414 598.59069824]
[408.84228516 598.87725830]
[393.84997559 598.27465820]
[378.91967773 596.78491211]
[364.10385132 594.41326904]
[349.45455933 591.16815186]
[335.02322388 587.06085205]
[320.86056519 582.10589600]
[307.01629639 576.32061768]
[293.53909302 569.72534180]
[280.47625732 562.34320068]
[267.87368774 554.20025635]
[255.77565002 545.32495117]
[244.22463989 535.74859619]
[233.26121521 525.50476074]
[222.92390442 514.62939453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 128]
[23 127]
[24 126]
[25 125]
[26 124]
[27 123]
[28 122]
[32 121]
[33 120]
[34 119]
[43 118]
[44 117]
[45 116]
[47 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
