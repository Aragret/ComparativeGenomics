%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[124.44535828 530.25823975]
[133.46121216 518.21203613]
[144.59407043 508.09002686]
[157.44149780 500.25802612]
[152.19477844 486.20553589]
[146.94805908 472.15307617]
[141.59687805 458.14004517]
[136.14151001 444.16726685]
[130.68615723 430.19445801]
[125.23079681 416.22164917]
[119.77544403 402.24887085]
[114.41455078 397.16137695]
[114.34458160 388.02719116]
[109.09786224 373.97473145]
[97.39756012 364.75778198]
[99.81906128 349.12298584]
[95.76509094 363.56478882]
[85.10264587 374.11523438]
[70.61885834 378.01651001]
[56.09975433 374.24877930]
[45.34059906 363.79696655]
[41.15380478 349.39312744]
[44.63379288 334.80236816]
[54.87089920 323.83874512]
[69.18917084 319.36804199]
[83.84584808 322.55892944]
[95.00922394 332.57659912]
[91.90511322 317.90130615]
[88.80100250 303.22598267]
[85.69689178 288.55068970]
[81.46335602 302.94085693]
[72.84053040 315.21469116]
[60.73840332 324.07690430]
[46.43413925 328.59219360]
[31.43730354 328.28411865]
[17.33054733 323.18515015]
[5.60258913 313.83343506]
[-2.50889087 301.21582031]
[-6.14786911 286.66390991]
[-4.93031502 271.71340942]
[1.01527917 257.94207764]
[11.06146145 246.80320740]
[24.14803314 239.47235107]
[38.89393997 236.72311401]
[53.74300766 238.84565735]
[67.12818146 245.61596680]
[77.63688660 256.31958008]
[84.16017914 269.82705688]
[76.99890137 256.76699829]
[85.34468842 243.32608032]
[86.01448059 228.34103394]
[86.68426514 213.35600281]
[87.35404968 198.37095642]
[88.02383423 183.38592529]
[80.86254883 170.32585144]
[89.20834351 156.88493347]
[86.36665344 150.06242371]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[93.90944672 72.38668823]
[94.35605621 57.39334106]
[94.80265808 42.39999008]
[87.47967529 28.37556839]
[95.59248352 15.88430691]
[95.59248352 0.88430649]
[95.14587402 -14.10904312]
[94.69927216 -29.10239410]
[93.91794586 -44.08203125]
[92.80229950 -59.04048538]
[91.68664551 -73.99893951]
[79.99422455 -84.29092407]
[79.07588959 -99.47682190]
[88.95978546 -110.56032562]
[87.84413910 -125.51878357]
[86.72848511 -140.47723389]
[85.61283875 -155.43568420]
[73.92041779 -165.72767639]
[73.00208282 -180.91357422]
[82.88597107 -191.99708557]
[81.77032471 -206.95553589]
[78.82994080 -211.26844788]
[77.92810822 -215.82257080]
[78.81535339 -219.80099487]
[80.95410919 -222.60421753]
[80.50749969 -237.59756470]
[80.06089783 -252.59091187]
[79.61428833 -267.58425903]
[79.16768646 -282.57760620]
[76.42281342 -287.01751709]
[75.72523499 -291.60736084]
[76.78923798 -295.54220581]
[79.05103302 -298.24713135]
[79.27436066 -313.24548340]
[79.49768829 -328.24380493]
[79.72101593 -343.24215698]
[65.64039612 -348.90789795]
[54.55998611 -359.28039551]
[47.97831726 -372.95687866]
[46.78550720 -388.08770752]
[51.14287567 -402.62652588]
[60.46112061 -414.60711670]
[73.48002625 -422.40921021]
[88.43889618 -424.97760010]
[103.31466675 -421.96496582]
[116.09550476 -413.77871704]
[125.05290985 -401.52600098]
[128.97547913 -386.86386108]
[127.33268738 -371.77526855]
[120.34674072 -358.30081177]
[108.96241760 -348.26281738]
[94.71935272 -343.01882935]
[94.49602509 -328.02047729]
[94.27269745 -313.02215576]
[94.04936981 -298.02380371]
[94.16103363 -283.02423096]
[94.60764313 -268.03088379]
[95.05424500 -253.03752136]
[95.50085449 -238.04417419]
[95.94745636 -223.05082703]
[96.72878265 -208.07118225]
[97.84442902 -193.11273193]
[109.26310730 -183.61802673]
[110.60762787 -168.46392822]
[100.57128906 -156.55133057]
[101.68694305 -141.59288025]
[102.80258942 -126.63442993]
[103.91823578 -111.67597961]
[115.33692169 -102.18128204]
[116.68143463 -87.02717590]
[106.64510345 -75.11458588]
[107.76074982 -60.15613174]
[108.87639618 -45.19767761]
[111.29518127 -42.63216782]
[112.59149933 -38.76763916]
[112.16835785 -34.14440918]
[109.69261932 -29.54899979]
[110.13922119 -14.55564976]
[110.58583069 0.43770054]
[112.53131104 2.45592713]
[113.79457092 5.36638927]
[114.03176117 8.91309834]
[112.99797058 12.72043324]
[110.58583069 16.33091164]
[117.94076538 29.28290939]
[109.79601288 42.84659576]
[109.34940338 57.83994675]
[108.90279388 72.83329773]
[111.46766663 76.86199951]
[111.52896118 82.54472351]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.19338226 157.55471802]
[111.30675507 171.68661499]
[103.00887299 184.05570984]
[102.33908844 199.04074097]
[101.66930389 214.02578735]
[100.99951935 229.01081848]
[100.32972717 243.99586487]
[107.44309998 258.12774658]
[99.14521790 270.49685669]
[100.37219238 285.44659424]
[103.47630310 300.12188721]
[106.58041382 314.79718018]
[109.68452454 329.47247314]
[113.87153625 343.87628174]
[125.94712067 354.09832764]
[123.15033722 368.72799683]
[128.39704895 382.78048706]
[133.74824524 396.79351807]
[139.20359802 410.76629639]
[144.65895081 424.73910522]
[150.11431885 438.71191406]
[155.56967163 452.68469238]
[161.60583496 459.54052734]
[161.00053406 466.90637207]
[166.24725342 480.95883179]
[171.49395752 495.01129150]
[186.33058167 492.50701904]
[201.37300110 492.85607910]
[216.07746887 496.04592896]
[229.91242981 501.96121216]
[242.37774658 510.38809204]
[253.02281189 521.02197266]
[261.46279907 533.47839355]
[267.39263916 547.30712891]
[270.59793091 562.00823975]
[270.96286011 577.05029297]
[268.47418213 591.88952637]
[263.22186279 605.98950195]
[255.39581299 618.84057617]
[245.27891541 629.97808838]
[233.23687744 638.99951172]
[219.70503235 645.57867432]
[205.17253113 649.47778320]
[190.16473389 650.55584717]
[175.22413635 648.77398682]
[160.89085388 644.19647217]
[147.68301392 636.98883057]
[136.07807922 627.41168213]
[126.49555969 615.81121826]
[119.28185272 602.60668945]
[114.69773102 588.27551270]
[112.90891266 573.33575439]
[113.98004913 558.32745361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[13 174]
[14 173]
[16 171]
[27 170]
[28 169]
[29 168]
[30 167]
[48 166]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[56 158]
[58 157]
[59 156]
[60 155]
[62 153]
[63 150]
[64 149]
[65 148]
[67 146]
[68 141]
[69 140]
[70 139]
[71 135]
[72 134]
[73 133]
[76 130]
[77 129]
[78 128]
[79 127]
[82 124]
[83 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
