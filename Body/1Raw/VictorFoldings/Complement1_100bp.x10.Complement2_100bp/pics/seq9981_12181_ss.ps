%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[105.94815826 805.65496826]
[91.29277039 802.43389893]
[76.87387085 798.28045654]
[62.75071335 793.21173096]
[48.98132706 787.24853516]
[35.62229919 780.41534424]
[22.72851944 772.74035645]
[10.35297585 764.25494385]
[-1.45348012 754.99407959]
[-12.64233112 744.99584961]
[-23.16760063 734.30126953]
[-32.98603821 722.95428467]
[-42.05729294 711.00152588]
[-50.34409714 698.49212646]
[-57.81238937 685.47753906]
[-64.43148804 672.01116943]
[-70.17418671 658.14837646]
[-75.01689148 643.94610596]
[-78.93970490 629.46276855]
[-81.92650604 614.75787354]
[-83.96501160 599.89178467]
[-85.04685974 584.92565918]
[-85.16759491 569.92095947]
[-84.32672119 554.93933105]
[-82.52770233 540.04235840]
[-79.77792358 525.29132080]
[-76.08868408 510.74670410]
[-71.47515106 496.46835327]
[-65.95627594 482.51495361]
[-59.55473709 468.94381714]
[-52.29684067 455.81069946]
[-44.21241379 443.16958618]
[-35.33467484 431.07241821]
[-25.70010757 419.56890869]
[-15.34829807 408.70632935]
[-4.32178831 398.52929688]
[7.33411264 389.07968140]
[19.57150841 380.39624023]
[32.34011078 372.51470947]
[45.58745193 365.46746826]
[59.25909424 359.28347778]
[73.29885864 353.98812866]
[87.64904785 349.60321045]
[102.25070190 346.14669800]
[117.04381561 343.63284302]
[115.48329163 328.71423340]
[113.92276764 313.79562378]
[112.36224365 298.87701416]
[110.80171967 283.95840454]
[106.97940826 277.63293457]
[109.33072662 268.80630493]
[107.99249268 253.86613464]
[106.65425873 238.92594910]
[105.31602478 223.98576355]
[103.86660004 209.05595398]
[102.30608368 194.13734436]
[100.74555969 179.21875000]
[89.04924774 170.06823730]
[87.25412750 154.96087646]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.03543854 43.95557404]
[83.36964417 29.19435883]
[80.70384979 14.43314075]
[70.63715363 2.22772241]
[75.98939514 -11.67201710]
[73.32360077 -26.43323326]
[70.65780640 -41.19445038]
[67.99201202 -55.95566940]
[64.88790131 -70.63097382]
[61.34822845 -85.20734406]
[57.80855560 -99.78372192]
[54.26888275 -114.36009979]
[47.33712769 -101.05781555]
[33.96214676 -94.26738739]
[19.13248062 -96.52147675]
[8.37922287 -106.97937012]
[5.71307611 -121.74052429]
[12.12844658 -135.29939270]
[25.23255920 -142.59886169]
[40.13790512 -140.91639709]
[51.28574753 -130.87852478]
[49.50328064 -145.77223206]
[47.72081375 -160.66595459]
[45.93834686 -175.55967712]
[31.00168419 -177.69473267]
[17.12694931 -183.62382507]
[5.26014757 -192.94270325]
[-3.78962445 -205.01597595]
[-9.40533733 -219.02047729]
[-11.20410252 -234.00135803]
[-9.06327724 -248.93721008]
[-3.12882686 -262.80966187]
[6.19462872 -274.67285156]
[18.27140045 -283.71795654]
[32.27807236 -289.32827759]
[47.25965118 -291.12124634]
[62.19466019 -288.97467041]
[76.06481171 -283.03485107]
[87.92441559 -273.70681763]
[96.96485901 -261.62655640]
[102.56975555 -247.61770630]
[104.35695648 -232.63545227]
[102.20459747 -217.70126343]
[96.25942993 -203.83340454]
[86.92681885 -191.97740173]
[74.84307098 -182.94161987]
[60.83206558 -177.34213257]
[62.61453247 -162.44842529]
[64.39699554 -147.55470276]
[66.17946625 -132.66098022]
[68.84526062 -117.89977264]
[72.38493347 -103.32339478]
[75.92460632 -88.74701691]
[79.46427917 -74.17064667]
[81.78530121 -72.59870148]
[83.62350464 -70.01266479]
[84.58951569 -66.59181213]
[84.36599731 -62.65295792]
[82.75322723 -58.62146378]
[85.41902161 -43.86024857]
[88.08481598 -29.09902954]
[90.75061798 -14.33781242]
[100.62663269 -3.18821454]
[95.46506500 11.76734543]
[98.13085938 26.52856255]
[100.79665375 41.28977966]
[111.36349487 30.64356232]
[126.29111481 32.11531448]
[134.57543945 44.62011337]
[130.10955811 58.93989182]
[116.18556976 64.51863861]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[123.84360504 151.13352966]
[125.21367645 166.28533936]
[115.66416168 177.65821838]
[117.22468567 192.57682800]
[118.78520966 207.49543762]
[122.79042816 215.70494080]
[120.25621033 222.64752197]
[121.59444427 237.58770752]
[122.93267822 252.52789307]
[124.27091217 267.46807861]
[125.72032928 282.39788818]
[127.28085327 297.31649780]
[128.84136963 312.23510742]
[130.40190125 327.15371704]
[131.96241760 342.07229614]
[146.95553589 341.47045898]
[161.95640564 341.83047485]
[176.90338135 343.15084839]
[191.73506165 345.42614746]
[206.39047241 348.64709473]
[220.80941772 352.80035400]
[234.93263245 357.86892700]
[248.70208740 363.83197021]
[262.06118774 370.66497803]
[274.95504761 378.33987427]
[287.33068848 386.82510376]
[299.13726807 396.08581543]
[310.32623291 406.08395386]
[320.85159302 416.77844238]
[330.67016602 428.12530518]
[339.74154663 440.07794189]
[348.02850342 452.58724976]
[355.49694824 465.60177612]
[362.11618042 479.06808472]
[367.85903931 492.93081665]
[372.70190430 507.13299561]
[376.62487793 521.61633301]
[379.61184692 536.32116699]
[381.65051270 551.18725586]
[382.73251343 566.15338135]
[382.85342407 581.15808105]
[382.01272583 596.13970947]
[380.21386719 611.03668213]
[377.46423340 625.78778076]
[373.77517700 640.33239746]
[369.16180420 654.61077881]
[363.64306641 668.56427002]
[357.24169922 682.13549805]
[349.98394775 695.26867676]
[341.89965820 707.90985107]
[333.02203369 720.00714111]
[323.38760376 731.51074219]
[313.03591919 742.37347412]
[302.00952148 752.55059814]
[290.35372925 762.00036621]
[278.11642456 770.68389893]
[265.34790039 778.56561279]
[252.10064697 785.61297607]
[238.42907715 791.79711914]
[224.38935852 797.09265137]
[210.03921509 801.47772217]
[195.43760681 804.93438721]
[180.64451599 807.44842529]
[165.72076416 809.00946045]
[150.72763062 809.61114502]
[135.72677612 809.25097656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[51 154]
[52 153]
[53 152]
[54 151]
[55 149]
[56 148]
[57 147]
[60 144]
[61 143]
[62 142]
[64 140]
[65 139]
[66 138]
[67 132]
[68 131]
[69 130]
[71 128]
[72 127]
[73 126]
[74 125]
[75 120]
[76 119]
[77 118]
[78 117]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
