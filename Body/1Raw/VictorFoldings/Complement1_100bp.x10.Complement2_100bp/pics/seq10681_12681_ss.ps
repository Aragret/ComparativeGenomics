%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[83.01157379 428.02850342]
[72.31759644 438.91894531]
[57.95456314 444.08285522]
[42.77426910 442.49496460]
[29.79076958 434.47055054]
[21.58195114 421.60281372]
[19.77767944 406.44671631]
[24.73619270 392.01150513]
[35.47297668 381.16326904]
[49.85623169 376.05593872]
[51.41675568 361.13732910]
[52.97727966 346.21871948]
[54.53779984 331.30014038]
[55.98722076 316.37033081]
[57.32545471 301.43014526]
[58.66368866 286.48995972]
[60.00192261 271.54977417]
[61.34015656 256.60958862]
[49.16513062 265.37133789]
[34.33901215 263.09402466]
[25.35487938 251.08213806]
[27.35924911 236.21665955]
[39.20392609 227.01319885]
[54.10374451 228.74392700]
[63.52313995 240.41648865]
[66.18893433 225.65527344]
[68.85472870 210.89405823]
[71.52052307 196.13284302]
[74.18631744 181.37161255]
[72.48706055 178.28213501]
[72.19979858 174.21612549]
[73.76721191 169.84616089]
[77.31484985 166.01715088]
[80.63710785 151.38969421]
[83.95937347 136.76222229]
[87.28163147 122.13476562]
[90.60388947 107.50730896]
[93.70800018 92.83200836]
[96.59326935 78.11211395]
[99.47854614 63.39222336]
[90.92890930 50.37141418]
[94.06467438 35.48445511]
[106.53071594 27.41392517]
[109.41599274 12.69403362]
[112.30126190 -2.02585769]
[103.75162506 -15.04666710]
[106.88739014 -29.93362808]
[119.35343170 -38.00415802]
[122.23870850 -52.72404861]
[125.12397766 -67.44393921]
[128.00924683 -82.16383362]
[130.89453125 -96.88372040]
[121.80242157 -84.95335388]
[110.38700104 -75.22257233]
[97.16757965 -68.13406372]
[82.74555969 -64.01030731]
[67.77704620 -63.03889847]
[52.94300842 -65.26404572]
[38.91829300 -70.58450317]
[26.34092903 -78.75823975]
[15.78310680 -89.41339874]
[7.72513390 -102.06523895]
[2.53359580 -116.13819122]
[0.44467232 -130.99201965]
[1.55339575 -145.95098877]
[5.80932665 -160.33456421]
[13.01884842 -173.48837280]
[22.85397530 -184.81402588]
[34.86727524 -193.79626465]
[48.51222610 -200.02645874]
[63.16806793 -203.22119141]
[78.16806030 -203.23509216]
[92.82980347 -200.06756592]
[106.48628998 -193.86270142]
[118.51623535 -184.90277100]
[128.37236023 -173.59538269]
[135.60627747 -160.45497131]
[139.88888550 -146.07933044]
[141.02536011 -131.12243652]
[138.96295166 -116.26055145]
[147.37757874 -128.67805481]
[155.79219055 -141.09555054]
[164.20680237 -153.51304626]
[172.62142944 -165.93054199]
[181.03604126 -178.34803772]
[189.07722473 -191.01055908]
[196.73782349 -203.90687561]
[204.39840698 -216.80320740]
[212.05900574 -229.69953918]
[219.71960449 -242.59587097]
[227.38020325 -255.49218750]
[215.26087952 -264.35031128]
[204.03845215 -274.32037354]
[193.81455994 -285.31204224]
[184.68182373 -297.22579956]
[176.72291565 -309.95376587]
[170.00991821 -323.38061523]
[164.60365295 -337.38479614]
[160.55305481 -351.83947754]
[157.89483643 -366.61370850]
[156.65303040 -381.57376099]
[156.83892822 -396.58407593]
[158.45080566 -411.50878906]
[161.47409058 -426.21267700]
[165.88139343 -440.56262207]
[171.63281250 -454.42861938]
[178.67623901 -467.68511963]
[186.94789124 -480.21206665]
[196.37287903 -491.89599609]
[206.86582947 -502.63113403]
[218.33171082 -512.32019043]
[230.66668701 -520.87548828]
[243.75904846 -528.21954346]
[257.49023438 -534.28576660]
[271.73587036 -539.01928711]
[286.36697388 -542.37725830]
[301.25100708 -544.32922363]
[316.25320435 -544.85748291]
[331.23767090 -543.95733643]
[346.06872559 -541.63684082]
[360.61203003 -537.91705322]
[374.73590088 -532.83166504]
[388.31243896 -526.42675781]
[401.21862793 -518.76031494]
[413.33764648 -509.90173340]
[424.55969238 -499.93124390]
[434.78317261 -488.93920898]
[443.91549683 -477.02511597]
[451.87393188 -464.29687500]
[458.58642578 -450.86978149]
[463.99218750 -436.86541748]
[468.04226685 -422.41058350]
[470.69995117 -407.63623047]
[471.94119263 -392.67614746]
[471.75476074 -377.66583252]
[470.14233398 -362.74118042]
[467.11853027 -348.03741455]
[462.71069336 -333.68762207]
[456.95877075 -319.82183838]
[449.91485596 -306.56561279]
[441.64276123 -294.03894043]
[432.21734619 -282.35534668]
[421.72399902 -271.62060547]
[410.25778198 -261.93194580]
[397.92248535 -253.37710571]
[384.82983398 -246.03355408]
[371.09844971 -239.96780396]
[356.85263062 -235.23478699]
[342.22140503 -231.87738037]
[327.33731079 -229.92596436]
[312.33508301 -229.39823914]
[297.35064697 -230.29896545]
[282.51968384 -232.61997986]
[267.97650146 -236.34028625]
[253.85281372 -241.42617798]
[240.27653503 -247.83158875]
[232.61593628 -234.93527222]
[224.95533752 -222.03894043]
[217.29473877 -209.14260864]
[209.63414001 -196.24629211]
[201.97354126 -183.34996033]
[202.53393555 -180.60330200]
[202.04010010 -177.46917725]
[200.33901978 -174.34800720]
[197.42529297 -171.68817139]
[193.45353699 -169.93341064]
[185.03892517 -157.51591492]
[176.62429810 -145.09841919]
[168.20968628 -132.68092346]
[159.79507446 -120.26342773]
[151.38044739 -107.84593201]
[145.61441040 -93.99845123]
[142.72914124 -79.27855682]
[139.84387207 -64.55867004]
[136.95860291 -49.83877563]
[134.07331848 -35.11888504]
[142.57012939 -22.93939209]
[139.85372925 -7.97022724]
[127.02115631 0.85941482]
[124.13587952 15.57930660]
[121.25061035 30.29919815]
[129.74740601 42.47869110]
[127.03102112 57.44785309]
[114.19843292 66.27749634]
[111.31316376 80.99739075]
[108.42789459 95.71727753]
[110.29273224 100.61996460]
[109.27794647 106.21849060]
[105.23134613 110.82956696]
[101.90908813 125.45703125]
[98.58683014 140.08448792]
[95.26457214 154.71194458]
[91.94231415 169.33941650]
[88.94754028 184.03741455]
[86.28173828 198.79862976]
[83.61594391 213.55984497]
[80.95014954 228.32106018]
[78.28435516 243.08227539]
[76.28034210 257.94781494]
[74.94210815 272.88800049]
[73.60387421 287.82818604]
[72.26564026 302.76837158]
[70.92740631 317.70855713]
[73.27871704 326.53515625]
[69.45640564 332.86065674]
[67.89588165 347.77926636]
[66.33535767 362.69784546]
[64.77483368 377.61645508]
[77.78983307 385.58969116]
[86.04926300 398.42498779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 206]
[13 205]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[33 193]
[34 192]
[35 191]
[36 190]
[37 189]
[38 186]
[39 185]
[40 184]
[43 181]
[44 180]
[45 179]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[80 171]
[81 170]
[82 169]
[83 168]
[84 167]
[85 166]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
