%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[89.41736603 364.59420776]
[90.78649139 349.60021973]
[95.24349976 335.21868896]
[102.59354401 322.07827759]
[112.51531982 310.75341797]
[124.57508087 301.73922729]
[138.24563599 295.42971802]
[134.92337036 280.80227661]
[131.60112000 266.17480469]
[128.27885437 251.54734802]
[124.95659637 236.91989136]
[121.63433838 222.29241943]
[118.31208038 207.66496277]
[114.88101959 193.06263733]
[111.34134674 178.48626709]
[107.80167389 163.90989685]
[93.35629272 164.04061890]
[79.24536896 160.94740295]
[66.17929077 154.78594971]
[54.81581879 145.86643982]
[45.72702408 134.63790894]
[39.37046051 121.66562653]
[36.06612396 107.60264587]
[35.98036957 93.15692902]
[39.11751556 79.05570984]
[45.31962204 66.00887299]
[54.27446747 54.67322922]
[65.53124237 45.61943817]
[78.52325439 39.30329514]
[75.20099640 24.67583466]
[71.87873840 10.04837418]
[61.27708435 -1.69536889]
[66.00333405 -15.82023430]
[62.68107605 -30.44769478]
[47.90628052 -27.84096146]
[33.02209091 -25.95667076]
[18.06381226 -24.79929161]
[3.06692195 -24.37156677]
[-11.93300629 -24.67451477]
[-26.90039635 -25.70741463]
[-41.79974747 -27.46781731]
[-56.59571457 -29.95154762]
[-71.25321198 -33.15271378]
[-85.73746490 -37.06372070]
[-100.01412201 -41.67529678]
[-114.04932404 -46.97650146]
[-127.80977631 -52.95476151]
[-141.26284790 -59.59589386]
[-154.37661743 -66.88414764]
[-167.11997986 -74.80223846]
[-179.46272278 -83.33138275]
[-191.37556458 -92.45135498]
[-202.83024597 -102.14051819]
[-213.79960632 -112.37589264]
[-224.25761414 -123.13320160]
[-234.17947388 -134.38693237]
[-243.54165649 -146.11038208]
[-252.32192993 -158.27575684]
[-260.49951172 -170.85418701]
[-268.05496216 -183.81585693]
[-274.97036743 -197.13000488]
[-281.22937012 -210.76506042]
[-286.81704712 -224.68867493]
[-291.72021484 -238.86784363]
[-295.92721558 -253.26890564]
[-299.42807007 -267.85772705]
[-302.21447754 -282.59970093]
[-304.27984619 -297.45983887]
[-305.61923218 -312.40292358]
[-306.22949219 -327.39349365]
[-306.10919189 -342.39599609]
[-305.25857544 -357.37484741]
[-303.67968750 -372.29452515]
[-301.37625122 -387.11962891]
[-298.35379028 -401.81503296]
[-294.61938477 -416.34582520]
[-290.18194580 -430.67755127]
[-285.05200195 -444.77624512]
[-279.24172974 -458.60845947]
[-272.76486206 -472.14138794]
[-265.63677979 -485.34292603]
[-257.87442017 -498.18173218]
[-249.49617004 -510.62738037]
[-240.52189636 -522.65039062]
[-230.97290039 -534.22216797]
[-220.87182617 -545.31530762]
[-210.24263000 -555.90350342]
[-199.11053467 -565.96160889]
[-187.50192261 -575.46582031]
[-175.44435120 -584.39355469]
[-162.96640015 -592.72363281]
[-150.09767151 -600.43634033]
[-136.86869812 -607.51336670]
[-123.31084442 -613.93786621]
[-109.45628357 -619.69464111]
[-95.33786011 -624.77008057]
[-80.98907471 -629.15209961]
[-66.44395447 -632.83026123]
[-51.73700714 -635.79595947]
[-36.90310287 -638.04205322]
[-21.97743607 -639.56329346]
[-6.99540615 -640.35595703]
[8.00745201 -640.41833496]
[22.99555206 -639.75012207]
[37.93334579 -638.35296631]
[52.78539658 -636.23022461]
[67.51648712 -633.38684082]
[82.09166718 -629.82965088]
[96.47636414 -625.56701660]
[110.63647461 -620.60906982]
[124.53839111 -614.96759033]
[138.14915466 -608.65600586]
[151.43647766 -601.68914795]
[164.36885071 -594.08367920]
[176.91558838 -585.85754395]
[189.04693604 -577.03033447]
[200.73411560 -567.62292480]
[211.94941711 -557.65759277]
[222.66622925 -547.15814209]
[232.85913086 -536.14929199]
[242.50395203 -524.65722656]
[251.57780457 -512.70922852]
[260.05917358 -500.33361816]
[267.92797852 -487.55975342]
[275.16549683 -474.41790771]
[281.75457764 -460.93927002]
[287.67959595 -447.15582275]
[292.92654419 -433.10025024]
[297.48291016 -418.80587769]
[301.33789062 -404.30661011]
[304.48239136 -389.63684082]
[306.90890503 -374.83139038]
[308.61172485 -359.92535400]
[309.58676147 -344.95407104]
[309.83175659 -329.95309448]
[309.34606934 -314.95797729]
[308.13088989 -300.00427246]
[306.18908691 -285.12747192]
[303.52526855 -270.36285400]
[300.14575195 -255.74545288]
[296.05856323 -241.30992126]
[291.27337646 -227.09051514]
[285.80157471 -213.12094116]
[279.65609741 -199.43434143]
[272.85156250 -186.06320190]
[265.40408325 -173.03919983]
[257.33129883 -160.39324951]
[248.65242004 -148.15533447]
[239.38798523 -136.35449219]
[229.55998230 -125.01870728]
[219.19171143 -114.17487335]
[208.30778503 -103.84870148]
[196.93400574 -94.06468964]
[185.09736633 -84.84604645]
[172.82591248 -76.21463776]
[160.14878845 -68.19093323]
[147.09602356 -60.79395676]
[133.69860840 -54.04126740]
[119.98830414 -47.94887543]
[105.99764252 -42.53123093]
[91.75978851 -37.80118179]
[77.30853271 -33.76995468]
[80.63079071 -19.14249420]
[90.99481964 -8.44500446]
[86.50619507 6.72611523]
[89.82846069 21.35357475]
[93.15071869 35.98103714]
[108.63468170 36.19731522]
[123.61914825 40.10445404]
[137.23728943 47.47643661]
[148.70132446 57.88680649]
[157.34808350 70.73334503]
[162.67736816 85.27289581]
[164.38088989 100.66439056]
[162.36009216 116.01744843]
[156.73190308 130.44392395]
[147.82186890 143.10928345]
[136.14543152 153.28085327]
[122.37804413 160.37022400]
[125.91771698 174.94659424]
[129.45739746 189.52296448]
[134.52349854 197.12377930]
[132.93954468 204.34271240]
[136.26179504 218.97016907]
[139.58406067 233.59762573]
[142.90631104 248.22508240]
[146.22857666 262.85253906]
[149.55084229 277.48001099]
[152.87309265 292.10748291]
[167.92791748 291.89273071]
[182.69831848 294.81311035]
[196.53862000 300.74099731]
[208.84376526 309.41723633]
[219.07583618 320.46252441]
[226.78753662 333.39401245]
[231.64172363 347.64639282]
[233.42620850 362.59661865]
[232.06298828 377.59112549]
[227.61163330 391.97442627]
[220.26675415 405.11773682]
[210.34944153 416.44647217]
[198.29322815 425.46542358]
[184.62515259 431.78030396]
[169.94274902 435.11505127]
[154.88784790 435.32388306]
[140.11859131 432.39764404]
[126.28062439 426.46432495]
[113.97888947 417.78326416]
[103.75115967 406.73394775]
[96.04455566 393.79940796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[14 181]
[15 180]
[16 179]
[29 167]
[30 166]
[31 165]
[33 163]
[34 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
