%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[60.20762634 494.50479126]
[59.33111191 509.54406738]
[55.12952042 524.01104736]
[47.81360626 537.18017578]
[37.75032806 548.39080811]
[25.44445801 557.08062744]
[11.51325130 562.81378174]
[-3.34450674 565.30273438]
[-18.38355827 564.42254639]
[-32.84954834 560.21746826]
[-46.01687241 552.89837646]
[-57.22506332 542.83239746]
[-65.91191864 530.52441406]
[-71.64171600 516.59179688]
[-74.12703705 501.73345947]
[-73.24324036 486.69461060]
[-69.03463745 472.22964478]
[-61.71234131 459.06408691]
[-51.64363098 447.85833740]
[-39.33355331 439.17446899]
[-25.39956856 433.44805908]
[-10.54060650 430.96630859]
[4.49801636 431.85375977]
[8.68502712 417.44998169]
[12.87203884 403.04620361]
[17.05904961 388.64242554]
[21.24606133 374.23864746]
[25.43307304 359.83483887]
[13.97413445 346.39743042]
[12.86559868 328.61480713]
[22.73973083 313.59542847]
[39.80065536 307.45681763]
[43.55695724 292.93475342]
[47.31325531 278.41271973]
[51.06955719 263.89065552]
[46.76595306 249.63131714]
[57.71256256 238.20843506]
[61.46886063 223.68638611]
[65.22516632 209.16432190]
[68.98146057 194.64225769]
[63.38795471 178.00857544]
[76.40397644 164.98303223]
[79.94364929 150.40666199]
[83.48332214 135.83027649]
[87.02299500 121.25390625]
[90.56266785 106.67752838]
[79.42031097 116.71983337]
[64.91047668 120.52309418]
[50.27470398 117.23764801]
[38.78266144 107.59748077]
[33.00169373 93.75622559]
[34.22329330 78.80604553]
[42.17454529 66.08686829]
[55.07912064 58.44017410]
[70.05410767 57.57426071]
[83.75405121 63.68257523]
[93.11835480 75.40050507]
[96.05500031 90.11025238]
[101.92395782 76.30607605]
[107.79292297 62.50189972]
[113.55895233 48.65441513]
[119.22174072 34.76438904]
[124.88452911 20.87436104]
[130.54731750 6.98433447]
[136.21009827 -6.90569258]
[126.91260529 -19.05080795]
[124.95546722 -34.11952972]
[130.76499939 -48.05207443]
[142.68855286 -57.14520264]
[157.46315002 -59.03645325]
[163.12593079 -72.92647552]
[168.78872681 -86.81650543]
[155.72360229 -79.44746399]
[140.74276733 -80.20545197]
[128.48818970 -88.85560608]
[122.75707245 -102.71758270]
[125.32527161 -117.49609375]
[135.39700317 -128.61184692]
[149.85144043 -132.62052917]
[164.20970154 -128.27998352]
[174.02273560 -116.93519592]
[176.24981689 -102.10119629]
[183.71755981 -115.11014557]
[191.18530273 -128.11909485]
[198.65304565 -141.12805176]
[206.12078857 -154.13700867]
[213.58853149 -167.14595032]
[213.74865723 -182.96635437]
[226.79519653 -190.15223694]
[214.51036072 -198.77766418]
[203.06077576 -208.48448181]
[192.54133606 -219.19226074]
[183.03919983 -230.81227112]
[174.63310242 -243.24821472]
[167.39270020 -256.39706421]
[161.37800598 -270.14981079]
[156.63883972 -284.39254761]
[153.21449280 -299.00726318]
[151.13333130 -313.87277222]
[150.41259766 -328.86596680]
[151.05827332 -343.86257935]
[153.06500244 -358.73834229]
[156.41615295 -373.36999512]
[161.08395386 -387.63626099]
[167.02973938 -401.41897583]
[174.20422363 -414.60388184]
[182.54797363 -427.08175659]
[191.99183655 -438.74917603]
[202.45755005 -449.50949097]
[213.85839844 -459.27349854]
[226.09991455 -467.96029663]
[239.08064270 -475.49792480]
[252.69303894 -481.82391357]
[266.82427979 -486.88583374]
[281.35729980 -490.64172363]
[296.17163086 -493.06051636]
[311.14456177 -494.12210083]
[326.15197754 -493.81774902]
[341.06951904 -492.14993286]
[355.77362061 -489.13247681]
[370.14239502 -484.79040527]
[384.05679321 -479.15966797]
[397.40148926 -472.28695679]
[410.06591797 -464.22921753]
[421.94515991 -455.05322266]
[432.94073486 -444.83496094]
[442.96154785 -433.65917969]
[451.92459106 -421.61843872]
[459.75555420 -408.81253052]
[466.38952637 -395.34756470]
[471.77160645 -381.33511353]
[475.85711670 -366.89129639]
[478.61227417 -352.13580322]
[480.01419067 -337.19091797]
[480.05126953 -322.18045044]
[478.72320557 -307.22882080]
[476.04101562 -292.45989990]
[472.02691650 -277.99606323]
[466.71417236 -263.95718384]
[460.14682007 -250.45960999]
[452.37924194 -237.61514282]
[443.47583008 -225.53025818]
[433.51034546 -214.30508423]
[422.56539917 -204.03263855]
[410.73165894 -194.79803467]
[398.10720825 -186.67779541]
[384.79663086 -179.73922729]
[370.91021729 -174.03981018]
[356.56307983 -169.62678528]
[341.87408447 -166.53671265]
[326.96496582 -164.79519653]
[311.95922852 -164.41665649]
[296.98123169 -165.40425110]
[282.15512085 -167.74980164]
[267.60372925 -171.43383789]
[253.44763184 -176.42585754]
[239.80415344 -182.68449402]
[240.17816162 -167.79458618]
[226.59747314 -159.67822266]
[219.12974548 -146.66926575]
[211.66200256 -133.66030884]
[204.19425964 -120.65135956]
[196.72651672 -107.64240265]
[189.25877380 -94.63345337]
[182.67874146 -81.15371704]
[177.01596069 -67.26369476]
[171.35317993 -53.37366486]
[180.59410095 -41.69159317]
[182.76133728 -26.85383415]
[177.17373657 -12.83081150]
[165.23890686 -3.42566252]
[150.10012817 -1.24290609]
[144.43734741 12.64712048]
[138.77455139 26.53714752]
[133.11177063 40.42717361]
[127.44898224 54.31720352]
[127.83471680 61.69778442]
[121.59709930 68.37086487]
[115.72814178 82.17504120]
[109.85917664 95.97921753]
[105.13904572 110.21720123]
[101.59937286 124.79357910]
[98.05970001 139.36994934]
[94.52002716 153.94633484]
[90.98035431 168.52270508]
[97.01216888 179.92358398]
[93.76387787 191.99140930]
[83.50352478 198.39855957]
[79.74722290 212.92062378]
[75.99092102 227.44267273]
[72.23461914 241.96473694]
[76.26954651 257.26278687]
[65.59161377 267.64694214]
[61.83531570 282.16900635]
[58.07901382 296.69107056]
[54.32271576 311.21313477]
[63.47598267 319.72695923]
[68.11398315 331.25769043]
[67.41348267 343.59417725]
[61.56869507 354.39877319]
[51.74276733 361.65026855]
[39.83685303 364.02185059]
[35.64984512 378.42565918]
[31.46283150 392.82943726]
[27.27582169 407.23321533]
[23.08880997 421.63699341]
[18.90179825 436.04077148]
[32.07266617 443.35348511]
[43.28573227 453.41406250]
[51.97855377 465.71783447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 207]
[24 206]
[25 205]
[26 204]
[27 203]
[28 202]
[32 196]
[33 195]
[34 194]
[35 193]
[37 191]
[38 190]
[39 189]
[40 188]
[42 185]
[43 184]
[44 183]
[45 182]
[46 181]
[58 180]
[59 179]
[60 178]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[70 167]
[71 166]
[72 165]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[89 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
