%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[178.45965576 239.01399231]
[178.67839050 224.00968933]
[179.92054749 209.05529785]
[182.18032837 194.22055054]
[185.44721985 179.57458496]
[189.70596313 165.18569946]
[194.93672180 151.12100220]
[181.26705933 144.94523621]
[167.59738159 138.76947021]
[153.92771912 132.59368896]
[140.25804138 126.41793060]
[126.58837128 120.24215698]
[112.91870117 114.06639099]
[99.32669830 119.08672333]
[86.12223816 113.12112427]
[80.90552521 99.60327911]
[67.23585510 93.42751312]
[53.56618881 87.25173950]
[46.53362656 100.50676727]
[38.67453384 113.28906250]
[30.02056122 125.54717255]
[20.60655022 137.23173523]
[10.47040939 148.29570007]
[-0.34704599 158.69450378]
[-11.80225754 168.38627625]
[-23.84909821 177.33201599]
[-36.43906021 185.49568176]
[-49.52144623 192.84439087]
[-63.04358292 199.34858704]
[-76.95101166 204.98204041]
[-91.18774414 209.72209167]
[-105.69644165 213.54965210]
[-120.41868591 216.44929504]
[-135.29519653 218.40936279]
[-150.26608276 219.42193604]
[-165.27104187 219.48297119]
[-180.24966431 218.59220886]
[-195.14163208 216.75323486]
[-209.88697815 213.97344971]
[-224.42633057 210.26403809]
[-238.70115662 205.63996887]
[-252.65394592 200.11982727]
[-266.22854614 193.72586060]
[-279.37026978 186.48381042]
[-292.02624512 178.42283630]
[-304.14544678 169.57539368]
[-315.67913818 159.97711182]
[-326.58081055 149.66665649]
[-336.80664062 138.68551636]
[-346.31536865 127.07792664]
[-355.06878662 114.89062500]
[-363.03158569 102.17267609]
[-370.17175293 88.97530365]
[-376.46051025 75.35164642]
[-381.87252808 61.35655212]
[-386.38601685 47.04638672]
[-389.98281860 32.47876358]
[-392.64843750 17.71235085]
[-394.37213135 2.80660129]
[-395.14700317 -12.17846203]
[-394.96987915 -27.18250084]
[-393.84149170 -42.14509583]
[-391.76638794 -57.00600052]
[-388.75292969 -71.70537567]
[-384.81323242 -86.18402100]
[-379.96316528 -100.38365173]
[-374.22225952 -114.24708557]
[-367.61367798 -127.71849060]
[-360.16394043 -140.74362183]
[-351.90310669 -153.27005005]
[-342.86444092 -165.24731445]
[-333.08432007 -176.62719727]
[-322.60214233 -187.36387634]
[-311.46008301 -197.41410828]
[-299.70303345 -206.73744202]
[-287.37832642 -215.29631042]
[-274.53561401 -223.05627441]
[-261.22659302 -229.98606873]
[-247.50482178 -236.05780029]
[-233.42559814 -241.24700928]
[-219.04559326 -245.53282166]
[-204.42272949 -248.89796448]
[-189.61585999 -251.32887268]
[-174.68463135 -252.81579590]
[-159.68916321 -253.35270691]
[-144.68981934 -252.93746948]
[-129.74702454 -251.57174683]
[-114.92092896 -249.26104736]
[-100.27123260 -246.01466370]
[-85.85693359 -241.84567261]
[-71.73606873 -236.77085876]
[-57.96550369 -230.81065369]
[-44.60068130 -223.98905945]
[-31.69542122 -216.33355713]
[-19.30168724 -207.87495422]
[-7.46938419 -198.64733887]
[3.75384116 -188.68782043]
[14.32279778 -178.03654480]
[24.19492722 -166.73638916]
[33.33047867 -154.83285522]
[41.69266510 -142.37387085]
[49.24781418 -129.40959167]
[55.96550369 -115.99225616]
[61.81868744 -102.17585754]
[66.78379059 -88.01604462]
[70.84082794 -73.56983948]
[73.97345734 -58.89539719]
[76.16906738 -44.05181885]
[77.41880798 -29.09887123]
[77.71766663 -14.09676361]
[77.06441498 0.89409357]
[75.46170807 15.81333733]
[72.91597748 30.60089302]
[69.43749237 45.19721603]
[65.04025269 59.54353333]
[59.74195480 73.58206940]
[73.41162872 79.75784302]
[87.08129883 85.93360901]
[100.67330170 80.91327667]
[113.87776184 86.87887573]
[119.09447479 100.39672089]
[132.76414490 106.57248688]
[146.43380737 112.74826050]
[160.10348511 118.92402649]
[173.77314758 125.09979248]
[187.44282532 131.27555847]
[201.11248779 137.45132446]
[208.20933533 124.22969818]
[216.19189453 111.52318573]
[225.02297974 99.39105225]
[234.66142273 87.88986206]
[245.06225586 77.07323456]
[256.17700195 66.99160767]
[267.95382690 57.69197845]
[280.33782959 49.21771622]
[293.27127075 41.60832214]
[306.69384766 34.89928436]
[320.54296875 29.12187958]
[334.75408936 24.30304337]
[349.26089478 20.46524811]
[363.99581909 17.62638283]
[378.89010620 15.79968643]
[393.87432861 14.99367523]
[408.87863159 15.21210670]
[423.83303833 16.45396423]
[438.66784668 18.71345520]
[453.31387329 21.98004723]
[467.70285034 26.23850822]
[481.76766968 31.46898270]
[495.44274902 37.64708328]
[508.66433716 44.74400711]
[521.37078857 52.72666550]
[533.50286865 61.55783081]
[545.00396729 71.19634247]
[555.82055664 81.59724426]
[565.90209961 92.71205139]
[575.20166016 104.48894501]
[583.67584229 116.87300873]
[591.28509521 129.80650330]
[597.99407959 143.22912598]
[603.77136230 157.07829285]
[608.59014893 171.28942871]
[612.42779541 185.79627991]
[615.26660156 200.53120422]
[617.09320068 215.42550659]
[617.89910889 230.40974426]
[617.68054199 245.41404724]
[616.43859863 260.36843872]
[614.17901611 275.20324707]
[610.91235352 289.84924316]
[606.65374756 304.23818970]
[601.42321777 318.30294800]
[595.24499512 331.97799683]
[588.14801025 345.19952393]
[580.16528320 357.90594482]
[571.33398438 370.03796387]
[561.69543457 381.53900146]
[551.29443359 392.35549927]
[540.17956543 402.43698120]
[528.40258789 411.73645020]
[516.01849365 420.21054077]
[503.08496094 427.81976318]
[489.66229248 434.52862549]
[475.81307983 440.30584717]
[461.60189819 445.12448120]
[447.09503174 448.96209717]
[432.36007690 451.80075073]
[417.46575928 453.62725830]
[402.48153687 454.43307495]
[387.47723389 454.21444702]
[372.52282715 452.97238159]
[357.68804932 450.71267700]
[343.04208374 447.44589233]
[328.65316772 443.18725586]
[314.58843994 437.95657349]
[300.91342163 431.77828979]
[287.69192505 424.68118286]
[274.98559570 416.69836426]
[262.85363770 407.86703491]
[251.35263062 398.22836304]
[240.53622437 387.82733154]
[230.45481873 376.71237183]
[221.15542603 364.93536377]
[212.68141174 352.55117798]
[205.07228088 339.61758423]
[198.36351013 326.19488525]
[192.58638000 312.34564209]
[187.76783752 298.13442993]
[183.93032837 283.62753296]
[181.09175110 268.89257812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[13 121]
[16 118]
[17 117]
[18 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
