%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[87.51288605 629.99407959]
[73.91180420 623.63348389]
[61.07816696 615.83953857]
[49.16245270 606.70373535]
[38.30435944 596.33319092]
[28.63119316 584.84936523]
[20.25637245 572.38708496]
[13.27808380 559.09228516]
[7.77814531 545.12097168]
[3.82104039 530.63690186]
[1.45316386 515.80987549]
[0.70227826 500.81375122]
[1.57718718 485.82437134]
[4.06763268 471.01745605]
[8.14441586 456.56658936]
[13.75973892 442.64126587]
[20.84776306 429.40466309]
[29.32538795 417.01205444]
[39.09321594 405.60867310]
[50.03672409 395.32827759]
[62.02760315 386.29135132]
[74.92527008 378.60385132]
[88.57850647 372.35595703]
[102.82723236 367.62084961]
[117.50439453 364.45413208]
[115.94387054 349.53552246]
[114.38334656 334.61691284]
[112.82282257 319.69830322]
[111.26230621 304.77969360]
[108.76821136 302.28735352]
[107.35739899 298.46313477]
[107.64270782 293.82934570]
[109.98052979 289.16226196]
[101.49940491 276.91809082]
[108.40158081 262.68185425]
[107.50876617 247.70845032]
[106.61595154 232.73504639]
[105.72313690 217.76162720]
[104.83032227 202.78822327]
[103.38090515 187.85841370]
[101.37689209 172.99288940]
[99.37287140 158.12736511]
[97.36885834 143.26184082]
[95.36484528 128.39630127]
[92.79765320 125.97931671]
[91.27360535 122.19879150]
[91.42082214 117.55857849]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[84.48999786 87.48434448]
[75.23071289 99.28543091]
[63.05530548 108.04667664]
[48.92397308 113.07713318]
[33.95117569 113.98007202]
[19.31772804 110.68428040]
[6.17768526 103.44969177]
[-4.43267393 92.84685516]
[-11.67657185 79.71193695]
[-14.98272419 65.08082581]
[-14.09039402 50.10739517]
[-9.06995583 35.97249985]
[-0.31734043 23.79088783]
[11.47718334 14.52324486]
[25.38345146 8.90045834]
[40.30475616 7.36596489]
[55.06434250 10.04078102]
[68.49820709 16.71395874]
[79.54689789 26.85922432]
[87.33907318 39.67647934]
[91.26062775 54.15834427]
[94.36473846 39.48304367]
[97.46884918 24.80774117]
[100.57295990 10.13243866]
[95.85896301 -4.97017002]
[106.06256866 -15.82077885]
[109.16667938 -30.49608040]
[104.45268250 -45.59869003]
[114.65628052 -56.44929886]
[117.76039124 -71.12460327]
[113.04639435 -86.22721100]
[123.25000000 -97.07781982]
[126.35411072 -111.75312042]
[129.45822144 -126.42842102]
[115.20729828 -131.16035461]
[101.57579803 -137.45814514]
[88.73515320 -145.24261475]
[76.84685516 -154.41584778]
[66.06040955 -164.86250305]
[56.51146317 -176.45118713]
[48.32010651 -189.03617859]
[41.58935547 -202.45916748]
[36.40385437 -216.55139160]
[32.82881927 -231.13560486]
[30.90920639 -246.02838135]
[30.66916084 -261.04244995]
[32.11169815 -275.98901367]
[35.21867752 -290.68005371]
[39.95102692 -304.93081665]
[46.24922943 -318.56213379]
[54.03408432 -331.40255737]
[63.20767975 -343.29055786]
[73.65465546 -354.07672119]
[85.24362946 -363.62530518]
[97.82884979 -371.81628418]
[111.25205231 -378.54663086]
[125.34442902 -383.73171997]
[139.92874146 -387.30630493]
[154.82159424 -389.22549438]
[169.83566284 -389.46508789]
[184.78216553 -388.02209473]
[199.47311401 -384.91467285]
[213.72375488 -380.18188477]
[227.35487366 -373.88330078]
[240.19505310 -366.09805298]
[252.08280945 -356.92410278]
[262.86862183 -346.47680664]
[272.41687012 -334.88754272]
[280.60748291 -322.30206299]
[287.33743286 -308.87866211]
[292.52209473 -294.78613281]
[296.09625244 -280.20172119]
[298.01498413 -265.30880737]
[298.25411987 -250.29472351]
[296.81069946 -235.34828186]
[293.70281982 -220.65742493]
[288.96963501 -206.40692139]
[282.67062378 -192.77598572]
[274.88497925 -179.93603516]
[265.71069336 -168.04856873]
[255.26306152 -157.26306152]
[243.67352295 -147.71514893]
[231.08781433 -139.52491760]
[217.66419983 -132.79537964]
[203.57151794 -127.61113739]
[188.98698425 -124.03741455]
[174.09402466 -122.11913300]
[159.07994080 -121.88043213]
[144.13352966 -123.32431030]
[141.02941895 -108.64900970]
[137.92530823 -93.97370911]
[142.86132812 -79.92077637]
[132.43569946 -68.02049255]
[129.33158875 -53.34518814]
[134.26760864 -39.29225540]
[123.84197998 -27.39197159]
[120.73786926 -12.71666908]
[125.67389679 1.33626437]
[115.24826050 13.23654938]
[112.14414978 27.91185188]
[109.04003906 42.58715439]
[105.93592834 57.26245499]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[110.23037720 126.39229584]
[112.23439026 141.25782776]
[114.23840332 156.12335205]
[116.24241638 170.98887634]
[118.24642944 185.85440063]
[129.27810669 175.69064331]
[144.12512207 177.82748413]
[151.84281921 190.68972778]
[146.74198914 204.79580688]
[132.58277893 209.74723816]
[119.80372620 201.89541626]
[120.69654083 216.86882019]
[121.58935547 231.84222412]
[122.48217773 246.81562805]
[123.37499237 261.78903198]
[131.91996765 275.10421753]
[124.95393372 288.26943970]
[126.18090820 303.21917725]
[127.74143219 318.13778687]
[129.30195618 333.05639648]
[130.86247253 347.97500610]
[132.42300415 362.89358521]
[147.43777466 362.95449829]
[162.35795593 364.63842773]
[177.00859070 367.92568970]
[191.21792603 372.77770996]
[204.81935120 379.13763428]
[217.65339661 386.93084717]
[229.56961060 396.06600952]
[240.42826843 406.43600464]
[250.10205078 417.91925049]
[258.47753906 430.38113403]
[265.45654297 443.67553711]
[270.95721436 457.64654541]
[274.91510010 472.13043213]
[277.28378296 486.95730591]
[278.03549194 501.95336914]
[277.16137695 516.94281006]
[274.67172241 531.74987793]
[270.59573364 546.20092773]
[264.98114014 560.12658691]
[257.89382935 573.36358643]
[249.41688538 585.75665283]
[239.64967346 597.16052246]
[228.70671082 607.44152832]
[216.71632385 616.47912598]
[203.81906128 624.16729736]
[190.16616821 630.41595459]
[175.91769409 635.15179443]
[161.24070740 638.31933594]
[146.30728149 639.88140869]
[131.29249573 639.81970215]
[116.37242126 638.13494873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[33 174]
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[48 157]
[50 155]
[51 154]
[72 153]
[73 152]
[74 151]
[75 150]
[77 148]
[78 147]
[80 145]
[81 144]
[83 142]
[84 141]
[85 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
