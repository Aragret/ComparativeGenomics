%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[95.01004791 421.58074951]
[85.80331421 433.43124390]
[75.76546478 444.58648682]
[64.94884491 454.98831177]
[53.40984344 464.58255005]
[41.20862198 473.31912231]
[28.40878868 481.15252686]
[15.07707977 488.04190063]
[1.28300047 493.95129395]
[-12.90153217 498.84994507]
[-27.40256691 502.71231079]
[-42.14450073 505.51821899]
[-57.05047226 507.25308228]
[-72.04277039 507.90780640]
[-87.04323578 507.47903442]
[-101.97365570 505.96896362]
[-116.75619507 503.38549805]
[-131.31378174 499.74206543]
[-145.57051086 495.05767822]
[-159.45205688 489.35678101]
[-172.88604736 482.66906738]
[-185.80245972 475.02941895]
[-198.13392639 466.47766113]
[-209.81617737 457.05838013]
[-220.78829956 446.82067871]
[-230.99307251 435.81793213]
[-240.37731934 424.10754395]
[-248.89208984 411.75048828]
[-256.49301147 398.81124878]
[-263.14044189 385.35729980]
[-268.79974365 371.45874023]
[-273.44140625 357.18801880]
[-277.04119873 342.61959839]
[-279.58038330 327.82937622]
[-281.04571533 312.89450073]
[-281.42956543 297.89282227]
[-280.72991943 282.90255737]
[-278.95040894 268.00186157]
[-276.10034180 253.26838684]
[-272.19458008 238.77899170]
[-267.25344849 224.60919189]
[-261.30273438 210.83288574]
[-254.37347412 197.52186584]
[-246.50178528 184.74555969]
[-237.72868347 172.57055664]
[-228.09992981 161.06034851]
[-217.66572571 150.27494812]
[-206.48046875 140.27055359]
[-194.60246277 131.09936523]
[-182.09364319 122.80916595]
[-169.01924133 115.44319916]
[-155.44740295 109.03984833]
[-141.44888306 103.63251495]
[-127.09667206 99.24938965]
[-112.46559143 95.91330719]
[-97.63193512 93.64167786]
[-82.67302704 92.44634247]
[-67.66686249 92.33351898]
[-52.69167328 93.30381775]
[-37.82553482 95.35216522]
[-23.14595604 98.46788025]
[-8.72946739 102.63472748]
[5.34876823 107.83098602]
[19.01535225 114.02954865]
[32.19903564 121.19811249]
[44.83107758 129.29930115]
[56.84562683 138.29086304]
[66.67620850 126.96127319]
[76.50679016 115.63168335]
[86.33737183 104.30208588]
[89.18103790 90.61248779]
[102.33303833 85.86733246]
[112.16362000 74.53773499]
[121.99419403 63.20814514]
[125.19441223 47.71397781]
[139.37954712 43.17180252]
[149.21012878 31.84220886]
[138.47953796 21.35471535]
[128.38908386 10.24995232]
[118.97421265 -1.43307352]
[110.26798248 -13.65332508]
[102.30098724 -26.36787987]
[95.10119629 -39.53207397]
[88.69390869 -53.09967041]
[83.10163116 -67.02301025]
[78.34400940 -81.25318909]
[74.43774414 -95.74021912]
[71.39656830 -110.43321991]
[69.23115540 -125.28057098]
[67.94911194 -140.23013306]
[67.55494690 -155.22938538]
[68.05004120 -170.22564697]
[69.43265533 -185.16624451]
[71.69792938 -199.99868774]
[74.83792114 -214.67088318]
[78.84158325 -229.13130188]
[83.69486237 -243.32914734]
[89.38070679 -257.21453857]
[95.87915039 -270.73870850]
[103.16736603 -283.85415649]
[111.21974945 -296.51480103]
[120.00801086 -308.67617798]
[129.50129700 -320.29559326]
[139.66624451 -331.33221436]
[150.46716309 -341.74725342]
[161.86610413 -351.50415039]
[173.82302856 -360.56863403]
[186.29595947 -368.90884399]
[199.24104309 -376.49551392]
[212.61283875 -383.30197144]
[226.36437988 -389.30435181]
[240.44734192 -394.48150635]
[254.81227112 -398.81527710]
[269.40872192 -402.29046631]
[284.18539429 -404.89483643]
[299.09039307 -406.61926270]
[314.07138062 -407.45767212]
[329.07574463 -407.40713501]
[344.05075073 -406.46780396]
[358.94378662 -404.64297485]
[373.70257568 -401.93908691]
[388.27526855 -398.36563110]
[402.61068726 -393.93515015]
[416.65844727 -388.66320801]
[430.36923218 -382.56832886]
[443.69485474 -375.67190552]
[456.58853149 -367.99819946]
[469.00497437 -359.57412720]
[480.90054321 -350.42926025]
[492.23348999 -340.59579468]
[502.96398926 -330.10821533]
[513.05432129 -319.00335693]
[522.46911621 -307.32025146]
[531.17523193 -295.09991455]
[539.14208984 -282.38528442]
[546.34179688 -269.22103882]
[552.74896240 -255.65338135]
[558.34112549 -241.72999573]
[563.09863281 -227.49977112]
[567.00476074 -213.01271057]
[570.04577637 -198.31968689]
[572.21105957 -183.47230530]
[573.49298096 -168.52273560]
[573.88702393 -153.52348328]
[573.39178467 -138.52722168]
[572.00903320 -123.58663940]
[569.74365234 -108.75421906]
[566.60351562 -94.08204651]
[562.59973145 -79.62166595]
[557.74633789 -65.42386627]
[552.06036377 -51.53852463]
[545.56182861 -38.01440811]
[538.27349854 -24.89902687]
[530.22100830 -12.23844528]
[521.43261719 -0.07713512]
[511.93923950 11.54218578]
[501.77416992 22.57870483]
[490.97317505 32.99365616]
[479.57415771 42.75045395]
[467.61712646 51.81483078]
[455.14413452 60.15494156]
[442.19897461 67.74150085]
[428.82711792 74.54785156]
[415.07553101 80.55008698]
[400.99252319 85.72712708]
[386.62756348 90.06078339]
[372.03109741 93.53584290]
[357.25439453 96.14008331]
[342.34936523 97.86437225]
[327.36837769 98.70265198]
[312.36401367 98.65196991]
[297.38903809 97.71250153]
[282.49600220 95.88755798]
[267.73721313 93.18354797]
[253.16456604 89.60996246]
[238.82919312 85.17935181]
[224.78147888 79.90728760]
[211.07075500 73.81228638]
[197.74519348 66.91575623]
[184.85157776 59.24192047]
[172.43521118 50.81773376]
[160.53971863 41.67279053]
[150.70913696 53.00238037]
[148.21206665 67.68618011]
[133.32379150 73.03872681]
[123.49320984 84.36831665]
[113.66262817 95.69791412]
[110.81896210 109.38751221]
[97.66696167 114.13266754]
[87.83638000 125.46226501]
[78.00580597 136.79185486]
[68.17522430 148.12144470]
[78.77074432 158.74842834]
[88.57183075 170.11224365]
[97.52736664 182.15368652]
[105.59067535 194.80993652]
[112.71971130 208.01502991]
[118.87731171 221.70013428]
[124.03136444 235.79386902]
[128.15501404 250.22277832]
[131.22674561 264.91162109]
[133.23054504 279.78381348]
[134.15597534 294.76184082]
[133.99819946 309.76760864]
[132.75805664 324.72286987]
[130.44200134 339.54965210]
[127.06211090 354.17068481]
[122.63600159 368.50970459]
[117.18675995 382.49194336]
[110.74278259 396.04455566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 192]
[68 191]
[69 190]
[70 189]
[72 187]
[73 186]
[74 185]
[76 183]
[77 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
