%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[81.22039032 603.01800537]
[66.52389526 599.89404297]
[52.40522003 594.75506592]
[39.13919449 587.70111084]
[26.98403740 578.86944580]
[16.17635918 568.43200684]
[6.92653370 556.59191895]
[-0.58538979 543.57971191]
[-6.21318913 529.64868164]
[-9.84731770 515.06994629]
[-11.41703510 500.12731934]
[-10.89178848 485.11166382]
[-8.28179932 470.31524658]
[-3.63787365 456.02609253]
[2.94959378 442.52233887]
[11.35237598 430.06683350]
[21.40690994 418.90203857]
[32.91748047 409.24530029]
[45.66003418 401.28454590]
[59.38653183 395.17477417]
[73.82978058 391.03488159]
[88.70864105 388.94546509]
[88.70864105 373.94546509]
[80.97134399 361.21820068]
[88.70864105 347.41802979]
[88.70864105 332.41802979]
[88.70864105 317.41802979]
[80.97134399 304.69076538]
[88.70864105 290.89059448]
[88.70864105 275.89059448]
[85.56513977 269.20178223]
[88.82196808 260.66766357]
[89.04529572 245.66932678]
[80.84787750 236.77389526]
[80.91118622 224.27670288]
[89.74669647 214.88008118]
[90.08167267 199.88381958]
[90.30500031 184.88548279]
[90.52832794 169.88714600]
[87.48476410 163.15228271]
[90.86829376 154.66761780]
[91.31489563 139.67425537]
[91.76150513 124.68090820]
[78.72007751 114.97280884]
[73.98687744 99.41893768]
[79.40987396 84.09192657]
[92.87178040 74.97583771]
[93.09510803 59.97750092]
[82.36752319 48.68340683]
[82.80766296 33.47613907]
[93.64096832 23.31862450]
[93.86429596 8.32028675]
[94.08762360 -6.67805099]
[94.31095123 -21.67638779]
[81.89362335 -13.26152515]
[67.52784729 -17.57714462]
[61.80354309 -31.44193268]
[68.94045258 -44.63528442]
[83.67751312 -47.43154907]
[95.15042114 -37.77093124]
[96.48865509 -52.71111679]
[97.82689667 -67.65129852]
[89.55760193 -55.13655853]
[77.71312714 -45.93283844]
[63.54344940 -41.01143265]
[48.54392624 -40.89170837]
[34.29749680 -45.58629990]
[22.30761528 -54.59977341]
[13.83960533 -66.98091888]
[9.78711605 -81.42312622]
[10.57781601 -96.40227509]
[16.12825966 -110.33757019]
[25.85269928 -121.75839996]
[38.72488785 -129.45948792]
[53.38639069 -132.62812805]
[68.28995514 -130.92991638]
[81.86275482 -124.54407501]
[92.67243958 -114.14451599]
[99.57822418 -100.82872772]
[101.85132599 -86.00177002]
[106.88823700 -100.13079834]
[111.92515564 -114.25983429]
[116.96207428 -128.38885498]
[121.99898529 -142.51788330]
[127.03590393 -156.64691162]
[124.38188934 -172.24392700]
[135.94366455 -181.63404846]
[133.28965759 -197.23106384]
[144.85144043 -206.62118530]
[149.88835144 -220.75021362]
[147.23434448 -236.34722900]
[158.79612732 -245.73735046]
[163.83303833 -259.86639404]
[168.86994934 -273.99542236]
[168.80392456 -283.12960815]
[174.08847046 -288.29635620]
[179.33518982 -302.34881592]
[184.58190918 -316.40130615]
[189.82862854 -330.45376587]
[176.79974365 -337.95697021]
[165.18362427 -347.50244141]
[155.29719543 -358.82974243]
[147.41014099 -371.62991333]
[141.73764038 -385.55374146]
[138.43443298 -400.22134399]
[137.59063721 -415.23260498]
[139.22927856 -430.17797852]
[143.30564880 -444.64978027]
[149.70852661 -458.25320435]
[158.26327515 -470.61712646]
[168.73646545 -481.40423584]
[180.84242249 -490.32028198]
[194.25086975 -497.12200928]
[208.59600830 -501.62384033]
[223.48651123 -503.70303345]
[238.51614380 -503.30279541]
[253.27487183 -500.43408203]
[267.36007690 -495.17514038]
[280.38754272 -487.66943359]
[292.00180054 -478.12173462]
[301.88604736 -466.79251099]
[309.77066040 -453.99081421]
[315.44046021 -440.06591797]
[318.74084473 -425.39767456]
[319.58175659 -410.38623047]
[317.94021606 -395.44116211]
[313.86108398 -380.97015381]
[307.45556641 -367.36798096]
[298.89843750 -355.00570679]
[288.42315674 -344.22061157]
[276.31549072 -335.30691528]
[262.90573120 -328.50775146]
[248.55972290 -324.00866699]
[233.66883850 -321.93237305]
[218.63928223 -322.33547974]
[203.88110352 -325.20706177]
[198.63438416 -311.15457153]
[193.38766479 -297.10211182]
[188.14094543 -283.04965210]
[182.99897766 -268.95849609]
[177.96206665 -254.82946777]
[172.92515564 -240.70043945]
[175.93943787 -226.11402893]
[164.01737976 -215.71330261]
[158.98046875 -201.58427429]
[161.99475098 -186.99786377]
[150.07270813 -176.59713745]
[153.08699036 -162.01072693]
[141.16493225 -151.61000061]
[136.12802124 -137.48097229]
[131.09109497 -123.35194397]
[126.05418396 -109.22291565]
[121.01726532 -95.09388733]
[115.98035431 -80.96485901]
[112.76707458 -66.31306458]
[111.42884064 -51.37288284]
[110.09060669 -36.43269730]
[109.30928802 -21.45306015]
[109.08596039 -6.45472336]
[108.86263275 8.54361439]
[108.63930511 23.54195213]
[119.16537476 34.01751328]
[119.15254974 49.23114014]
[108.09344482 60.20082855]
[107.87011719 75.19916534]
[119.05287933 82.27973175]
[125.30543518 93.94566345]
[125.00985718 107.17824554]
[118.24262238 118.55335236]
[106.75485229 125.12751770]
[106.30825043 140.12086487]
[105.86164093 155.11421204]
[105.52666473 170.11047363]
[105.30333710 185.10881042]
[105.08000946 200.10714722]
[108.08130646 208.73443604]
[104.74005127 215.32669067]
[113.84217072 231.33396912]
[104.04364014 245.89265442]
[103.82031250 260.89099121]
[103.70864105 275.89059448]
[103.70864105 290.89059448]
[111.44594574 304.69076538]
[103.70864105 317.41802979]
[103.70864105 332.41802979]
[103.70864105 347.41802979]
[111.44594574 361.21820068]
[103.70864105 373.94546509]
[103.70864105 388.94546509]
[118.58750153 391.03488159]
[133.03074646 395.17477417]
[146.75724792 401.28454590]
[159.49980164 409.24530029]
[171.01037598 418.90203857]
[181.06491089 430.06683350]
[189.46769714 442.52233887]
[196.05516052 456.02609253]
[200.69908142 470.31524658]
[203.30906677 485.11166382]
[203.83432007 500.12731934]
[202.26460266 515.06994629]
[198.63047791 529.64868164]
[193.00267029 543.57971191]
[185.49075317 556.59191895]
[176.24092102 568.43200684]
[165.43324280 578.86944580]
[153.27809143 587.70111084]
[140.01206970 594.75506592]
[125.89338684 599.89404297]
[111.19689178 603.01800537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 189]
[23 188]
[25 186]
[26 185]
[27 184]
[29 182]
[30 181]
[32 180]
[33 179]
[36 177]
[37 175]
[38 174]
[39 173]
[41 172]
[42 171]
[43 170]
[47 165]
[48 164]
[51 161]
[52 160]
[53 159]
[54 158]
[60 157]
[61 156]
[62 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[87 147]
[89 145]
[90 144]
[92 142]
[93 141]
[94 140]
[96 139]
[97 138]
[98 137]
[99 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
