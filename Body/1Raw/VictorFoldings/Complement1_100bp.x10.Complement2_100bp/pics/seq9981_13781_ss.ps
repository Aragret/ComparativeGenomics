%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[129.26594543 367.05023193]
[138.17814636 354.94763184]
[148.83343506 344.34738159]
[160.98202515 335.49795532]
[154.10261536 322.16854858]
[147.22320557 308.83911133]
[140.34379578 295.50967407]
[133.46438599 282.18023682]
[133.32313538 297.17959595]
[128.61340332 311.42102051]
[119.78407288 323.54714966]
[107.67670441 332.40219116]
[93.44529724 337.14212036]
[78.44629669 337.31518555]
[64.10931396 332.90487671]
[51.80084991 324.33154297]
[42.69408035 312.41238403]
[37.65699768 298.28341675]
[37.16970825 283.29132080]
[41.27865601 268.86508179]
[49.59220123 256.37969971]
[61.31795120 247.02517700]
[75.33827972 241.69317627]
[90.31686401 240.89186096]
[104.82603455 244.69764709]
[117.48287201 252.74777222]
[127.08158875 264.27590942]
[123.97747803 249.60061646]
[113.77388000 238.75001526]
[118.48787689 223.64739990]
[115.38376617 208.97209167]
[112.27965546 194.29679871]
[109.17554474 179.62149048]
[106.07143402 164.94619751]
[102.96732330 150.27088928]
[99.86321259 135.59558105]
[96.75910187 120.92028046]
[82.72487640 112.23648834]
[79.18950653 96.11604309]
[88.30160522 82.35604095]
[84.97934723 67.72858429]
[81.65708923 53.10112381]
[73.73751068 65.84004974]
[59.52197647 70.62738800]
[45.50963211 65.27442169]
[38.10673523 52.22845840]
[40.69779205 37.45393753]
[52.09820175 27.70557213]
[67.09585571 27.44018173]
[78.83499908 36.78067398]
[77.05252838 21.88695908]
[75.27006531 6.99324083]
[59.18221283 -1.36969769]
[51.40319824 -17.57360268]
[54.87757492 -35.04871750]
[68.02903748 -46.83475113]
[65.80391693 -61.66879654]
[63.57880402 -76.50283813]
[61.35368347 -91.33688354]
[59.12856674 -106.17092896]
[56.90345001 -121.00497437]
[54.67833328 -135.83901978]
[52.45321655 -150.67306519]
[38.21008682 -152.77636719]
[25.15168571 -158.80221558]
[14.33309460 -168.25382996]
[6.62563372 -180.35807800]
[2.64669251 -194.12867737]
[2.71028209 -208.44654846]
[6.80227375 -222.15074158]
[14.58227062 -234.13265991]
[25.41190529 -243.42561340]
[38.40721893 -249.28289795]
[36.40320206 -264.14840698]
[34.39918900 -279.01394653]
[32.39517593 -293.87948608]
[17.37675667 -293.71609497]
[2.45209742 -295.39959717]
[-12.15254784 -298.90444946]
[-26.21577644 -304.17752075]
[-39.52439499 -311.13885498]
[-51.87664413 -319.68295288]
[-63.08526993 -329.68026733]
[-72.98035431 -340.97924805]
[-81.41188812 -353.40859985]
[-88.25204468 -366.77990723]
[-93.39714050 -380.89044189]
[-96.76917267 -395.52633667]
[-98.31701660 -410.46566772]
[-98.01721954 -425.48199463]
[-95.87431335 -440.34762573]
[-91.92079926 -454.83724976]
[-86.21659088 -468.73120117]
[-78.84818268 -481.81884766]
[-69.92726135 -493.90176392]
[-59.58907700 -504.79678345]
[-47.99034882 -514.33874512]
[-35.30691528 -522.38299561]
[-21.73104858 -528.80761719]
[-7.46855688 -533.51513672]
[7.26434278 -536.43426514]
[22.24430466 -537.52075195]
[37.24423599 -536.75805664]
[52.03673935 -534.15777588]
[66.39756775 -529.75933838]
[80.10901642 -523.62939453]
[92.96321106 -515.86090088]
[104.76530457 -506.57168579]
[115.33636475 -495.90246582]
[124.51614380 -484.01501465]
[132.16546631 -471.08956909]
[138.16839600 -457.32205200]
[142.43391418 -442.92117310]
[144.89735413 -428.10525513]
[145.52137756 -413.09893799]
[144.29650879 -398.12963867]
[141.24134827 -383.42434692]
[136.40217590 -369.20599365]
[129.85237122 -355.69006348]
[121.69123077 -343.08154297]
[112.04246521 -331.57150269]
[101.05235291 -321.33444214]
[88.88750458 -312.52560425]
[75.73233032 -305.27847290]
[61.78625488 -299.70291138]
[47.26070404 -295.88348389]
[49.26471710 -281.01797485]
[51.26873398 -266.15243530]
[53.27274704 -251.28691101]
[68.71082306 -248.64263916]
[82.59335327 -241.34806824]
[93.55580139 -230.10662842]
[100.51644897 -216.01033020]
[102.78315735 -200.43376160]
[100.12215424 -184.89996338]
[92.78208160 -170.93157959]
[81.47082520 -159.90153503]
[67.28726196 -152.89817810]
[69.51237488 -138.06413269]
[71.73749542 -123.23008728]
[73.96260834 -108.39604187]
[76.18772888 -93.56200409]
[78.41284943 -78.72795868]
[80.63796234 -63.89391327]
[82.86308289 -49.05987167]
[94.34541321 -45.11888123]
[103.11444092 -36.61964798]
[107.46333313 -25.13103867]
[106.50938416 -12.81156063]
[100.37245178 -2.00385618]
[90.16378021 5.21077490]
[91.94625092 20.10449219]
[93.72871399 34.99821091]
[96.28454590 49.77886200]
[99.60680389 64.40632629]
[102.92906189 79.03378296]
[114.38139343 84.46497345]
[120.67839050 95.46503448]
[119.56275177 108.09075928]
[111.43440247 117.81616974]
[114.53851318 132.49147034]
[117.64262390 147.16677856]
[120.74673462 161.84208679]
[123.85084534 176.51737976]
[126.95495605 191.19268799]
[130.05906677 205.86798096]
[133.16317749 220.54328918]
[143.58880615 232.44357300]
[138.65278625 246.49650574]
[141.75689697 261.17181396]
[146.79380798 275.30084229]
[153.67321777 288.63027954]
[160.55264282 301.95968628]
[167.43205261 315.28912354]
[174.31146240 328.61856079]
[188.56254578 323.84289551]
[203.37564087 321.29873657]
[218.40348816 321.04571533]
[233.29383850 323.08975220]
[247.69761658 327.38293457]
[261.27719116 333.82464600]
[273.71423340 342.26385498]
[284.71719360 352.50277710]
[294.02816772 364.30133057]
[301.42886353 377.38299561]
[306.74584961 391.44113159]
[309.85443115 406.14611816]
[310.68173218 421.15332031]
[309.20843506 436.11093140]
[305.46899414 450.66830444]
[299.55111694 464.48419189]
[291.59350586 477.23477173]
[281.78271484 488.62109375]
[270.34872437 498.37631226]
[257.55950928 506.27166748]
[243.71495056 512.12219238]
[229.13952637 515.79064941]
[214.17492676 517.19104004]
[199.17193604 516.29058838]
[184.48225403 513.11041260]
[170.45022583 507.72500610]
[157.40476990 500.26065063]
[145.65170288 490.89230347]
[135.46653748 479.83956909]
[127.08802032 467.36154175]
[120.71256256 453.75076294]
[116.48960114 439.32623291]
[114.51813507 424.42608643]
[114.84438324 409.39965820]
[117.46069336 394.59915161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[27 170]
[28 169]
[30 167]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[36 161]
[37 160]
[40 156]
[41 155]
[42 154]
[50 153]
[51 152]
[52 151]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[73 129]
[74 128]
[75 127]
[76 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
