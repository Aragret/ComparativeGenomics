%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGU\
) } def
/len { sequence length } bind def

/coor [
[77.22941589 589.54498291]
[62.04364395 588.86621094]
[48.27568436 582.42327881]
[38.02505493 571.19860840]
[32.85490417 556.90393066]
[33.55363464 541.71905518]
[40.01470566 527.95959473]
[51.25284195 517.72375488]
[65.55431366 512.57238770]
[66.22409821 497.58734131]
[66.89388275 482.60232544]
[67.56366730 467.61727905]
[68.23345184 452.63223267]
[58.02394104 441.84793091]
[58.48973083 426.64141846]
[69.87053680 416.00585938]
[70.54032135 401.02081299]
[68.44354248 398.18606567]
[67.61563110 394.19488525]
[68.58515930 389.65469360]
[71.58943939 385.38604736]
[65.01846313 372.01922607]
[73.95610046 358.96438599]
[75.29433441 344.02420044]
[76.63256836 329.08401489]
[77.97080231 314.14382935]
[78.97505951 299.17745972]
[79.64484406 284.19244385]
[80.31463623 269.20739746]
[78.52465057 267.05004883]
[77.48136139 264.05371094]
[77.50862122 260.49917603]
[78.82272339 256.77926636]
[81.49671936 253.35820007]
[83.05723572 238.43960571]
[84.61775970 223.52099609]
[86.17828369 208.60238647]
[87.51651764 193.66220093]
[80.74726105 180.39471436]
[89.48954010 167.20823669]
[90.60518646 152.24978638]
[91.38651276 137.27014160]
[91.83311462 122.27679443]
[92.27972412 107.28344727]
[91.83311462 92.29009247]
[90.49488068 77.34990692]
[89.15664673 62.40972519]
[87.81841278 47.46953964]
[86.48017883 32.52935410]
[85.14194489 17.58916855]
[75.76280212 8.73510551]
[74.95575714 -3.73615885]
[82.60918427 -13.10374260]
[81.49353027 -28.06219673]
[80.37788391 -43.02064896]
[79.26223755 -57.97910309]
[78.14658356 -72.93755341]
[77.03093719 -87.89601135]
[65.33851624 -98.18799591]
[64.42018127 -113.37389374]
[74.30407715 -124.45740509]
[73.18842316 -139.41584778]
[71.40596008 -154.30957031]
[61.52210236 -166.66351318]
[67.08069611 -180.48202515]
[57.19684219 -192.83596802]
[62.75543976 -206.65447998]
[60.30971146 -221.45375061]
[57.86398697 -236.25302124]
[55.41825867 -251.05229187]
[52.97253036 -265.85156250]
[45.07059479 -253.10168457]
[31.22761345 -247.32485962]
[16.60667038 -250.67567444]
[6.66101980 -261.90438843]
[5.10014153 -276.82296753]
[12.50620556 -289.86712646]
[26.11693382 -296.17172241]
[40.85585785 -293.38531494]
[51.22623825 -282.54611206]
[50.55645370 -297.53115845]
[47.04697800 -305.96450806]
[49.98993301 -312.74392700]
[49.54332733 -327.73730469]
[49.09672165 -342.73065186]
[48.65011597 -357.72399902]
[48.20350647 -372.71734619]
[45.79137039 -376.32781982]
[44.75757980 -380.13516235]
[44.99477005 -383.68185425]
[46.25802612 -386.59231567]
[48.20350647 -388.61056519]
[48.65011597 -403.60391235]
[49.09672165 -418.59725952]
[49.32004929 -433.59558105]
[49.32004929 -448.59558105]
[49.32004929 -463.59558105]
[35.06737900 -468.75671387]
[23.44144821 -478.48367310]
[15.84614658 -491.60186768]
[13.19864273 -506.52722168]
[15.81863689 -521.45745850]
[23.38974953 -534.58959961]
[34.99773407 -544.33801270]
[49.24086761 -549.52539062]
[64.39922333 -549.52539062]
[78.64236450 -544.33801270]
[90.25034332 -534.58959961]
[97.82145691 -521.45745850]
[100.44145203 -506.52722168]
[97.79395294 -491.60186768]
[90.19864655 -478.48367310]
[78.57271576 -468.75671387]
[64.32004547 -463.59558105]
[64.32004547 -448.59558105]
[64.32004547 -433.59558105]
[67.00373077 -429.64505005]
[67.23419189 -423.96667480]
[64.09007263 -418.15063477]
[63.64346313 -403.15728760]
[63.19685745 -388.16394043]
[63.19685745 -373.16394043]
[63.64346313 -358.17059326]
[64.09007263 -343.17724609]
[64.53667450 -328.18389893]
[64.98328400 -313.19055176]
[65.54149628 -298.20092773]
[66.21128082 -283.21591187]
[67.77180481 -268.29730225]
[70.21752930 -253.49801636]
[72.66325378 -238.69874573]
[75.10898590 -223.89947510]
[77.55471039 -209.10020447]
[87.26363373 -197.80480957]
[81.87997437 -182.92774963]
[91.58889008 -171.63235474]
[86.20523071 -156.75529480]
[95.79820251 -168.28677368]
[110.72221375 -169.79475403]
[122.42810059 -160.41540527]
[124.21021271 -145.52165222]
[115.04766846 -133.64529419]
[100.18918610 -131.58966064]
[88.14688110 -140.53150940]
[89.26252747 -125.57305145]
[100.68121338 -116.07835388]
[102.02572632 -100.92424774]
[91.98939514 -89.01165771]
[93.10504150 -74.05320740]
[94.22068787 -59.09475327]
[95.33633423 -44.13629913]
[96.45198822 -29.17784500]
[97.56763458 -14.21939182]
[108.21534729 -0.26972747]
[100.08213043 16.25093460]
[101.42036438 31.19112015]
[102.75859833 46.13130569]
[104.09683228 61.07149124]
[105.43506622 76.01167297]
[106.77330017 90.95185852]
[115.60163879 78.82501221]
[129.83593750 74.09377289]
[144.16716003 78.52277374]
[153.25012207 90.46011353]
[153.69708252 105.45345306]
[145.34135437 117.91065216]
[131.29940796 123.18547821]
[116.80854797 119.31055450]
[107.27307129 107.73004913]
[106.82646942 122.72340393]
[106.37985992 137.71675110]
[108.85559845 142.31216431]
[109.27874756 146.93539429]
[107.98242188 150.79992676]
[105.56364441 153.36543274]
[104.44799042 168.32388306]
[111.13745117 182.66130066]
[102.47497559 194.77784729]
[104.99696350 200.88940430]
[104.17700195 206.51298523]
[101.09688568 210.16291809]
[99.53636932 225.08151245]
[97.97584534 240.00012207]
[96.41532135 254.91873169]
[95.29967499 269.87716675]
[94.62988281 284.86221313]
[93.96009827 299.84725952]
[96.36714935 304.47900391]
[96.72141266 309.10803223]
[95.36769867 312.95285034]
[92.91098785 315.48205566]
[91.57275391 330.42224121]
[90.23451996 345.36242676]
[88.89628601 360.30261230]
[95.37154388 374.73803711]
[86.52962494 386.72427368]
[85.52536011 401.69061279]
[84.85557556 416.67565918]
[95.24214172 428.28414917]
[94.34941864 443.47155762]
[83.21849060 453.30203247]
[82.54870605 468.28704834]
[81.87892151 483.27209473]
[81.20913696 498.25714111]
[80.53935242 513.24218750]
[94.32421112 519.64886475]
[104.60433960 530.84655762]
[109.81208038 545.12756348]
[109.15329742 560.31420898]
[102.72845459 574.09063721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[16 198]
[17 197]
[21 196]
[23 194]
[24 193]
[25 192]
[26 191]
[27 187]
[28 186]
[29 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 178]
[40 176]
[41 175]
[42 171]
[43 170]
[44 169]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[61 145]
[62 144]
[63 137]
[65 135]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[80 128]
[81 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[92 121]
[93 120]
[94 119]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
