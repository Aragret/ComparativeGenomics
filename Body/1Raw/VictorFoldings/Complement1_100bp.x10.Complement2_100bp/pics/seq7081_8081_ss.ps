%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[90.55186462 375.54693604]
[89.67535400 390.58618164]
[85.47376251 405.05319214]
[78.15784454 418.22229004]
[68.09456635 429.43292236]
[55.78869629 438.12277222]
[41.85749054 443.85592651]
[26.99973297 446.34484863]
[11.96068192 445.46469116]
[-2.50530982 441.25961304]
[-15.67263412 433.94049072]
[-26.88082314 423.87451172]
[-35.56768036 411.56652832]
[-41.29747391 397.63394165]
[-43.78279877 382.77557373]
[-42.89899826 367.73675537]
[-38.69039917 353.27175903]
[-31.36810303 340.10623169]
[-21.29939270 328.90048218]
[-8.98931217 320.21658325]
[4.94467068 314.49017334]
[19.80363274 312.00845337]
[34.84225464 312.89590454]
[39.02926636 298.49212646]
[43.21627808 284.08831787]
[47.40328979 269.68453979]
[51.48295593 255.25000000]
[55.45505142 240.78547668]
[44.79821014 228.29910278]
[43.67253113 211.75538635]
[52.71928024 197.66079712]
[68.53984070 191.67698669]
[72.29614258 177.15492249]
[76.05243683 162.63287354]
[71.74883270 148.37355042]
[82.69544220 136.95066833]
[86.45174408 122.42860413]
[90.20804596 107.90653992]
[93.63910675 93.30422211]
[96.74321747 78.62892151]
[99.84732819 63.95361710]
[88.29981995 73.52728271]
[73.42275238 75.44374847]
[59.82594299 69.10917664]
[51.72251511 56.48639679]
[51.62340164 41.48672485]
[59.55931473 28.75796700]
[73.07122040 22.24426651]
[87.97232056 23.96396637]
[99.64533234 33.38419724]
[104.47326660 47.58625793]
[109.51018524 33.45722580]
[98.74761963 43.90554047]
[85.95381165 51.73615646]
[71.75301361 56.56701279]
[56.83809280 58.16239166]
[41.93679428 56.44445419]
[27.77618217 51.49702454]
[15.04718494 43.56149673]
[4.37087727 33.02506256]
[-3.73181939 20.40181541]
[-8.86555672 6.30767775]
[-10.77984810 -8.56967068]
[-9.38129139 -23.50432968]
[-4.73812532 -37.76760483]
[2.92310047 -50.66355896]
[13.22857761 -61.56296921]
[25.67547798 -69.93402863]
[39.65649033 -75.36829376]
[54.48945236 -77.60062408]
[69.45063019 -76.52208710]
[83.81002808 -72.18531036]
[96.86702728 -64.80190277]
[107.98454285 -54.73210526]
[116.62013245 -42.46725082]
[122.35243988 -28.60577202]
[124.90177917 -13.82399750]
[124.14376068 1.15683722]
[120.11783600 15.59964466]
[130.11601257 4.41766977]
[140.11418152 -6.76430511]
[150.02882385 -18.02040100]
[159.85940552 -29.34999466]
[169.68998718 -40.67958832]
[159.05335999 -51.26442337]
[149.16386414 -62.55046082]
[140.06761169 -74.48506927]
[131.80700684 -87.01261139]
[124.42058563 -100.07466888]
[117.94276428 -113.61035156]
[112.40376282 -127.55654144]
[107.82939148 -141.84820557]
[104.24099731 -156.41873169]
[101.65528870 -171.20016479]
[100.08434296 -186.12361145]
[99.53546906 -201.11946106]
[100.01123810 -216.11779785]
[101.50942230 -231.04872131]
[104.02304077 -245.84257507]
[107.54036713 -260.43041992]
[112.04501343 -274.74423218]
[117.51596832 -288.71725464]
[123.92772675 -302.28433228]
[131.25039673 -315.38226318]
[139.44982910 -327.94992065]
[148.48779297 -339.92871094]
[158.32215881 -351.26281738]
[168.90707397 -361.89938354]
[180.19317627 -371.78881836]
[192.12783813 -380.88497925]
[204.65544128 -389.14550781]
[217.71754456 -396.53182983]
[231.25326538 -403.00958252]
[245.19949341 -408.54849243]
[259.49121094 -413.12274170]
[274.06173706 -416.71105957]
[288.84320068 -419.29666138]
[303.76663208 -420.86749268]
[318.76251221 -421.41625977]
[333.76083374 -420.94039917]
[348.69174194 -419.44213867]
[363.48559570 -416.92840576]
[378.07342529 -413.41098022]
[392.38717651 -408.90625000]
[406.36016846 -403.43518066]
[419.92721558 -397.02334595]
[433.02508545 -389.70059204]
[445.59268188 -381.50106812]
[457.57144165 -372.46301270]
[468.90548706 -362.62857056]
[479.54196167 -352.04360962]
[489.43130493 -340.75741577]
[498.52740479 -328.82269287]
[506.78784180 -316.29504395]
[514.17407227 -303.23287964]
[520.65173340 -289.69711304]
[526.19055176 -275.75085449]
[530.76470947 -261.45913696]
[534.35290527 -246.88854980]
[536.93841553 -232.10708618]
[538.50915527 -217.18362427]
[539.05786133 -202.18777466]
[538.58190918 -187.18942261]
[537.08349609 -172.25852966]
[534.56970215 -157.46470642]
[531.05218506 -142.87690735]
[526.54730225 -128.56317139]
[521.07617188 -114.59021759]
[514.66424561 -101.02320862]
[507.34140015 -87.92539215]
[499.14178467 -75.35784912]
[490.10366821 -63.37915802]
[480.26913452 -52.04518127]
[469.68408203 -41.40876007]
[458.39785767 -31.51949120]
[446.46307373 -22.42347717]
[433.93536377 -14.16313076]
[420.87313843 -6.77696657]
[407.33734131 -0.29942170]
[393.39105225 5.23930216]
[379.09927368 9.81338120]
[364.52868652 13.40148735]
[349.74719238 15.98689270]
[334.82373047 17.55754089]
[319.82788086 18.10611153]
[304.82952881 17.63004303]
[289.89865112 16.13155937]
[275.10482788 13.61764431]
[260.51705933 10.10002041]
[246.20335388 5.59508753]
[232.23043823 0.12385041]
[218.66346741 -6.28818130]
[205.56570435 -13.61111164]
[192.99821472 -21.81079674]
[181.01957703 -30.84900665]
[171.18901062 -19.51941299]
[161.35842896 -8.18982029]
[159.34907532 -1.07755685]
[151.29615784 3.23386717]
[141.29797363 14.41584206]
[131.29980469 25.59781647]
[123.63921356 38.49414444]
[118.60229492 52.62317276]
[114.52262878 67.05772400]
[111.41851807 81.73302460]
[108.31440735 96.40833282]
[109.93869781 99.90605164]
[110.01336670 104.10275269]
[108.26079559 108.29029846]
[104.73010254 111.66284180]
[100.97380066 126.18490601]
[97.21750641 140.70695496]
[101.25243378 156.00500488]
[90.57450104 166.38917542]
[86.81819916 180.91122437]
[83.06189728 195.43328857]
[92.59607697 205.38769531]
[95.94007874 218.64802551]
[92.32415771 231.72451782]
[82.79587555 241.23008728]
[69.91957855 244.75756836]
[65.94747925 259.22210693]
[66.69270325 268.32608032]
[61.80707169 273.87155151]
[57.62005997 288.27532959]
[53.43304825 302.67913818]
[49.24603653 317.08291626]
[62.41690826 324.39562988]
[73.62997437 334.45617676]
[82.32279205 346.75994873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 207]
[24 206]
[25 205]
[26 204]
[27 202]
[28 201]
[32 196]
[33 195]
[34 194]
[36 192]
[37 191]
[38 190]
[39 186]
[40 185]
[41 184]
[51 183]
[52 182]
[79 181]
[80 180]
[81 179]
[82 177]
[83 176]
[84 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
