%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[49.51892471 204.88551331]
[53.69334412 219.30491638]
[56.47819138 234.05583191]
[57.84825134 249.00466919]
[57.79111099 264.01605225]
[56.30729294 278.95401001]
[53.41023254 293.68328857]
[49.12616730 308.07049561]
[43.49389267 321.98532104]
[36.56442261 335.30175781]
[28.40050507 347.89916992]
[19.07608223 359.66351318]
[8.67559624 370.48825073]
[-2.70676231 380.27529907]
[-14.96790981 388.93609619]
[-27.99680519 396.39212036]
[-41.67545319 402.57592773]
[-55.87997818 407.43145752]
[-70.48173523 410.91479492]
[-85.34848022 412.99432373]
[-100.34558868 413.65124512]
[-115.33723450 412.87963867]
[-130.18763733 410.68643188]
[-144.76232910 407.09152222]
[-158.92929077 402.12747192]
[-172.56024170 395.83923340]
[-185.53172302 388.28375244]
[-197.72627258 379.52944946]
[-209.03343201 369.65560913]
[-219.35081482 358.75164795]
[-228.58497620 346.91632080]
[-236.65229797 334.25680542]
[-243.47970581 320.88775635]
[-249.00538635 306.93026733]
[-253.17927551 292.51071167]
[-255.96357727 277.75970459]
[-257.33309937 262.81082153]
[-257.27542114 247.79943848]
[-255.79104614 232.86152649]
[-252.89344788 218.13235474]
[-248.60885620 203.74530029]
[-242.97607422 189.83068848]
[-236.04612732 176.51451111]
[-227.88174438 163.91738892]
[-218.55690002 152.15338135]
[-208.15600586 141.32902527]
[-196.77330017 131.54237366]
[-184.51184082 122.88204956]
[-171.48266602 115.42647552]
[-157.80378723 109.24317932]
[-143.59909058 104.38816071]
[-128.99720764 100.90538025]
[-114.13038635 98.82637787]
[-99.13325500 98.16999817]
[-84.14163971 98.94216919]
[-69.29131317 101.13590240]
[-54.71675491 104.73133850]
[-40.54996872 109.69589996]
[-26.91925049 115.98464203]
[-13.94804478 123.54060364]
[-1.75382173 132.29536438]
[9.55298138 142.16961670]
[19.86996651 153.07394409]
[31.69623756 143.84684753]
[43.52250671 134.61975098]
[55.34877777 125.39265442]
[67.17504883 116.16555786]
[79.00131989 106.93846130]
[90.82758331 97.71136475]
[92.63214111 92.78616333]
[97.06774139 89.22262573]
[103.14612579 88.39187622]
[115.24187469 79.52098083]
[127.33763123 70.65008545]
[139.43338013 61.77919388]
[151.52912903 52.90829849]
[163.62487793 44.03740311]
[175.72064209 35.16650772]
[167.49845886 22.61655807]
[159.95007324 9.65017033]
[153.09651184 -3.69651771]
[146.95687866 -17.38630486]
[141.54827881 -31.38103676]
[136.88580322 -45.64170837]
[132.98243713 -60.12856674]
[129.84906006 -74.80123901]
[127.49440765 -89.61882782]
[125.92504120 -104.54003906]
[125.14533234 -119.52327728]
[125.15746307 -134.52679443]
[125.96138763 -149.50874329]
[127.55487823 -164.42739868]
[129.93348694 -179.24116516]
[133.09057617 -193.90875244]
[137.01734924 -208.38928223]
[141.70288086 -222.64239502]
[147.13409424 -236.62837219]
[153.29585266 -250.30821228]
[160.17098999 -263.64379883]
[167.74032593 -276.59796143]
[175.98277283 -289.13461304]
[184.87538147 -301.21878052]
[194.39332581 -312.81680298]
[204.51010132 -323.89633179]
[215.19750977 -334.42651367]
[226.42575073 -344.37799072]
[238.16354370 -353.72302246]
[250.37817383 -362.43557739]
[263.03558350 -370.49133301]
[276.10049438 -377.86788940]
[289.53649902 -384.54461670]
[303.30615234 -390.50299072]
[317.37109375 -395.72634888]
[331.69207764 -400.20013428]
[346.22918701 -403.91189575]
[360.94195557 -406.85128784]
[375.78933716 -409.01010132]
[390.72998047 -410.38232422]
[405.72219849 -410.96414185]
[420.72424316 -410.75393677]
[435.69427490 -409.75225830]
[450.59060669 -407.96194458]
[465.37167358 -405.38796997]
[479.99630737 -402.03750610]
[494.42373657 -397.91989136]
[508.61373901 -393.04656982]
[522.52679443 -387.43118286]
[536.12408447 -381.08935547]
[549.36773682 -374.03875732]
[562.22082520 -366.29904175]
[574.64758301 -357.89178467]
[586.61328125 -348.84042358]
[598.08459473 -339.17019653]
[609.02960205 -328.90802002]
[619.41778564 -318.08251953]
[629.22015381 -306.72384644]
[638.40942383 -294.86370850]
[646.95989990 -282.53512573]
[654.84783936 -269.77246094]
[662.05126953 -256.61129761]
[668.55004883 -243.08830261]
[674.32611084 -229.24118042]
[679.36328125 -215.10852051]
[683.64764404 -200.72972107]
[687.16711426 -186.14485168]
[689.91198730 -171.39456177]
[691.87463379 -156.51995850]
[693.04943848 -141.56251526]
[693.43328857 -126.56391907]
[693.02502441 -111.56595612]
[691.82580566 -96.61045074]
[689.83898926 -81.73906708]
[687.07006836 -66.99327087]
[683.52679443 -52.41415405]
[679.21905518 -38.04235077]
[674.15887451 -23.91791916]
[668.36022949 -10.08022594]
[661.83947754 3.43215942]
[654.61462402 16.58157539]
[646.70587158 29.33137321]
[638.13531494 41.64601517]
[628.92675781 53.49118042]
[619.10589600 64.83385468]
[608.70013428 75.64241791]
[597.73840332 85.88674927]
[586.25134277 95.53829193]
[574.27087402 104.57015228]
[561.83044434 112.95715332]
[548.96478271 120.67591858]
[535.70965576 127.70493317]
[522.10205078 134.02459717]
[508.17987061 139.61732483]
[493.98193359 144.46749878]
[479.54782104 148.56161499]
[464.91775513 151.88824463]
[450.13250732 154.43815613]
[435.23330688 156.20419312]
[420.26165771 157.18147278]
[405.25927734 157.36724854]
[390.26803589 156.76100159]
[375.32965088 155.36444092]
[360.48580933 153.18144226]
[345.77786255 150.21809387]
[331.24679565 146.48265076]
[316.93310547 141.98553467]
[302.87670898 136.73927307]
[289.11679077 130.75849915]
[275.69168091 124.05986023]
[262.63879395 116.66204834]
[249.99452209 108.58567047]
[237.79409790 99.85324860]
[226.07154846 90.48910522]
[214.85952759 80.51935577]
[204.18928528 69.97177124]
[194.09057617 58.87576675]
[184.59153748 47.26225662]
[172.49577332 56.13315201]
[160.40002441 65.00405121]
[148.30427551 73.87494659]
[136.20852661 82.74584198]
[124.11277008 91.61673737]
[112.01702118 100.48763275]
[100.05468750 109.53762817]
[88.22841644 118.76473236]
[76.40214539 127.99182892]
[64.57587433 137.21893311]
[52.74960327 146.44602966]
[40.92333603 155.67312622]
[29.09706497 164.90022278]
[37.16484451 177.55943298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 209]
[64 208]
[65 207]
[66 206]
[67 205]
[68 204]
[69 203]
[72 202]
[73 201]
[74 200]
[75 199]
[76 198]
[77 197]
[78 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
