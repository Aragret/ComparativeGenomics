%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[52.14709473 622.38488770]
[37.09733582 621.71221924]
[22.57472801 617.70697021]
[9.30772209 610.57019043]
[-2.03821683 600.65966797]
[-10.89398003 588.47271729]
[-16.81536674 574.62042236]
[-19.50536156 559.79779053]
[-18.82903671 544.74816895]
[-14.82031727 530.22650146]
[-7.68027687 516.96124268]
[2.23294234 505.61770630]
[14.42209721 496.76489258]
[28.27578545 490.84686279]
[43.09910965 488.16046143]
[43.76889420 473.17544556]
[44.43867874 458.19039917]
[45.10846710 443.20535278]
[45.77825165 428.22030640]
[46.44803619 413.23529053]
[38.51909637 404.09973145]
[38.95446396 391.60995483]
[48.06583405 382.48056030]
[48.95864868 367.50717163]
[36.17796326 375.35916138]
[22.01922035 370.40637207]
[16.91972160 356.29983521]
[24.63862801 343.43832397]
[39.48584747 341.30288696]
[50.51594543 351.46615601]
[52.51995850 336.60061646]
[50.68444443 333.59011841]
[50.21591187 329.54095459]
[51.58663177 325.10537720]
[54.95975876 321.12176514]
[57.62555313 306.36056519]
[60.29134750 291.59933472]
[62.95714569 276.83813477]
[56.14197159 260.66653442]
[68.15314484 246.70898438]
[70.59887695 231.90971375]
[73.04460144 217.11044312]
[75.49033356 202.31117249]
[77.93605804 187.51190186]
[80.38178253 172.71263123]
[71.52612305 160.79151917]
[73.79562378 145.74810791]
[86.35961914 136.54031372]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[88.91428375 49.83055115]
[91.38217926 34.81842041]
[103.47541809 26.19930458]
[105.70053864 11.36526012]
[107.92565918 -3.46878362]
[110.15077209 -18.30282784]
[96.11332703 -25.83873558]
[85.52281189 -37.70576477]
[79.64598846 -52.45687866]
[79.17632294 -68.30175781]
[84.15223694 -83.32411194]
[93.95465088 -95.71340942]
[107.38398743 -103.98310852]
[122.80690765 -107.14898682]
[124.81092072 -122.01451111]
[126.81493378 -136.88003540]
[112.64893341 -141.96955872]
[99.85575104 -149.89024353]
[88.99330139 -160.29380798]
[80.53471375 -172.72373962]
[74.84770203 -186.63534546]
[72.17860413 -201.41964722]
[72.64168549 -216.42994690]
[76.21428680 -231.01022339]
[82.73786926 -244.52374268]
[91.92510986 -256.38088989]
[103.37248993 -266.06484985]
[116.57807159 -273.15417480]
[130.96348572 -277.34115601]
[145.89924622 -278.44512939]
[147.90325928 -293.31066895]
[149.90727234 -308.17617798]
[151.91128540 -323.04171753]
[153.91529846 -337.90722656]
[155.91931152 -352.77276611]
[144.86924744 -363.50598145]
[142.28822327 -378.51239014]
[148.95950317 -392.00155640]
[162.13681030 -398.89334106]
[164.14082336 -413.75888062]
[166.14483643 -428.62442017]
[153.75396729 -440.13800049]
[150.69764709 -456.60491943]
[157.98559570 -471.49948120]
[172.56768799 -479.03869629]
[174.35015869 -493.93243408]
[176.13261414 -508.82614136]
[162.39488220 -515.16094971]
[151.28845215 -525.43237305]
[143.90141296 -538.63415527]
[140.95750427 -553.47290039]
[142.74510193 -568.49487305]
[149.08911133 -582.22839355]
[159.36798096 -593.32794189]
[172.57470703 -600.70611572]
[187.41542053 -603.64007568]
[202.43620300 -601.84240723]
[216.16543579 -595.48919678]
[227.25808716 -585.20288086]
[234.62742615 -571.99121094]
[237.55145264 -557.14855957]
[235.74371338 -542.12896729]
[229.38131714 -528.40399170]
[219.08758545 -517.31823730]
[205.87097168 -509.95776367]
[191.02633667 -507.04367065]
[189.24386597 -492.14996338]
[187.46141052 -477.25625610]
[198.05319214 -469.12875366]
[203.28785706 -456.72946167]
[201.69958496 -443.25552368]
[193.59700012 -432.23886108]
[181.01036072 -426.62039185]
[179.00634766 -411.75488281]
[177.00233459 -396.88934326]
[187.88423157 -386.75415039]
[190.74534607 -371.97991943]
[184.28266907 -358.19268799]
[170.78485107 -350.76876831]
[168.78082275 -335.90322876]
[166.77680969 -321.03768921]
[164.77279663 -306.17218018]
[162.76878357 -291.30664062]
[160.76477051 -276.44110107]
[174.87501526 -271.42147827]
[187.63815308 -263.57461548]
[198.49501038 -253.24142456]
[206.96937561 -240.87182617]
[212.68879700 -227.00514221]
[215.40103149 -212.24653625]
[214.98513794 -197.24070740]
[211.45686340 -182.64361572]
[204.96807861 -169.09390259]
[195.80020142 -157.18486023]
[184.35203552 -147.43855286]
[171.12243652 -140.28282166]
[156.68849182 -136.03260803]
[141.68046570 -134.87602234]
[139.67645264 -120.01049805]
[137.67243958 -105.14496613]
[150.40290833 -98.95235443]
[160.61399841 -89.11595154]
[167.29820251 -76.58792114]
[169.79029846 -62.58688736]
[167.83358765 -48.47938919]
[161.60629272 -35.64653015]
[151.70527649 -25.34875107]
[139.08905029 -18.60204315]
[124.98481750 -16.07771111]
[122.75969696 -1.24366653]
[120.53458405 13.59037685]
[118.30946350 28.42442131]
[127.34162903 40.21236420]
[125.29636383 55.28789139]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[101.15888977 138.98603821]
[110.09241486 151.74652100]
[107.40128326 166.72024536]
[95.18105316 175.15835571]
[92.73532867 189.95762634]
[90.28960419 204.75689697]
[87.84387207 219.55616760]
[85.39814758 234.35543823]
[82.95242310 249.15470886]
[89.81548309 260.07537842]
[87.47376251 272.35137939]
[77.71836090 279.50390625]
[75.05256653 294.26513672]
[72.38677216 309.02636719]
[69.72097778 323.78756714]
[67.38549042 338.60464478]
[65.38147736 353.47015381]
[63.93205643 368.39996338]
[63.03924179 383.37338257]
[71.66073608 399.64456177]
[61.43307495 413.90505981]
[60.76329041 428.89010620]
[60.09350586 443.87515259]
[59.42371750 458.86016846]
[58.75393295 473.84521484]
[58.08414841 488.83026123]
[72.60869598 492.82843018]
[85.87915802 499.95883179]
[97.22989655 509.86380005]
[106.09156799 522.04650879]
[112.01966095 535.89587402]
[114.71684265 550.71728516]
[114.04781342 565.76715088]
[110.04612732 580.29077148]
[102.91251373 593.55950928]
[93.00479889 604.90783691]
[80.81993103 613.76654053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[23 192]
[24 191]
[30 190]
[31 189]
[35 188]
[36 187]
[37 186]
[38 185]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 177]
[48 174]
[49 173]
[50 172]
[51 170]
[52 169]
[53 168]
[56 165]
[57 164]
[58 163]
[59 162]
[67 153]
[68 152]
[69 151]
[83 137]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[92 128]
[93 127]
[94 126]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
