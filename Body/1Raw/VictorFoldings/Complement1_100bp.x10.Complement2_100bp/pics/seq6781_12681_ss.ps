%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[209.29525757 373.11294556]
[222.00752258 365.02923584]
[216.97059631 350.90020752]
[211.93368530 336.77117920]
[206.89677429 322.64215088]
[201.85984802 308.51312256]
[190.29806519 299.12298584]
[192.95208740 283.52597046]
[187.91517639 269.39694214]
[182.87825012 255.26792908]
[177.84133911 241.13890076]
[172.80442810 227.00987244]
[167.76750183 212.88084412]
[162.73059082 198.75180054]
[156.96455383 184.90432739]
[150.48506165 171.37597656]
[144.00556946 157.84762573]
[135.31573486 145.62113953]
[124.66973114 135.05409241]
[114.02371979 124.48705292]
[103.37771606 113.91999817]
[89.90921021 110.16619110]
[86.05523682 96.72600555]
[70.81009674 92.49562836]
[67.22781372 78.03822327]
[56.58180237 67.47117615]
[45.93579483 56.90412521]
[35.28978729 46.33707809]
[24.64377594 35.77003098]
[13.99776840 25.20298386]
[3.19561172 14.79561043]
[-7.76029778 4.55021906]
[-18.71620750 -5.69517279]
[-29.67211723 -15.94056416]
[-40.62802505 -26.18595505]
[-51.58393478 -36.43134689]
[-66.94827271 -40.20594788]
[-70.95941925 -54.55028534]
[-82.02841949 -44.41590881]
[-93.84947968 -35.16978073]
[-106.35149384 -26.86750221]
[-119.45928955 -19.55900764]
[-133.09402466 -13.28825092]
[-147.17369080 -8.09294605]
[-161.61361694 -4.00433874]
[-176.32696533 -1.04701829]
[-191.22525024 0.76122898]
[-206.21884155 1.40952826]
[-221.21759033 0.89398044]
[-236.13128662 -0.78231388]
[-250.87023926 -3.60927296]
[-265.34579468 -7.56989527]
[-279.47091675 -12.64036083]
[-293.16061401 -18.79017448]
[-306.33258057 -25.98234940]
[-318.90762329 -34.17363358]
[-330.81005859 -43.31475830]
[-341.96832275 -53.35074997]
[-352.31533813 -64.22125244]
[-361.78884888 -75.86088562]
[-370.33187866 -88.19964600]
[-377.89303589 -101.16332245]
[-384.42687988 -114.67395782]
[-389.89410400 -128.65028381]
[-394.26181030 -143.00827026]
[-397.50375366 -157.66152954]
[-399.60040283 -172.52195740]
[-400.53918457 -187.50016785]
[-400.31442261 -202.50610352]
[-398.92749023 -217.44947815]
[-396.38674927 -232.24046326]
[-392.70742798 -246.79005432]
[-387.91168213 -261.01080322]
[-382.02835083 -274.81710815]
[-375.09280396 -288.12600708]
[-367.14678955 -300.85742188]
[-358.23806763 -312.93481445]
[-348.42022705 -324.28552246]
[-337.75231934 -334.84124756]
[-326.29849243 -344.53857422]
[-314.12762451 -353.31915283]
[-301.31292725 -361.13015747]
[-287.93145752 -367.92462158]
[-274.06372070 -373.66171265]
[-259.79309082 -378.30688477]
[-245.20541382 -381.83218384]
[-230.38841248 -384.21649170]
[-215.43119812 -385.44537354]
[-200.42373657 -385.51150513]
[-185.45628357 -384.41448975]
[-170.61885071 -382.16085815]
[-156.00067139 -378.76422119]
[-141.68965149 -374.24499512]
[-127.77189636 -368.63037109]
[-114.33107758 -361.95410156]
[-101.44803619 -354.25631714]
[-89.20026398 -345.58334351]
[-77.66141510 -335.98733521]
[-66.90088654 -325.52603149]
[-56.98339462 -314.26229858]
[-47.96858597 -302.26388550]
[-39.91067505 -289.60299683]
[-32.85812378 -276.35574341]
[-26.85334969 -262.60180664]
[-21.93246460 -248.42387390]
[-18.12506676 -233.90727234]
[-15.45405102 -219.13926697]
[-13.93548298 -204.20867920]
[-13.57849598 -189.20532227]
[-14.38523674 -174.21940613]
[-16.35085297 -159.34107971]
[-19.46352386 -144.65982056]
[-23.70452881 -130.26390076]
[-29.04836082 -116.23993683]
[-35.46288300 -102.67224121]
[-42.90951157 -89.64243317]
[-51.34347153 -77.22885895]
[-60.71402740 -65.50619507]
[-46.13332748 -62.46441269]
[-41.33854294 -47.38725662]
[-30.38263512 -37.14186478]
[-19.42672539 -26.89647293]
[-8.47081566 -16.65108299]
[2.48509407 -6.40569067]
[13.44100380 3.83970118]
[18.15949059 4.57788754]
[22.46434975 8.28803730]
[24.56481552 14.55697536]
[35.21082306 25.12402344]
[45.85683441 35.69107056]
[56.50284195 46.25811768]
[67.14884949 56.82516479]
[77.79486084 67.39221191]
[92.27853394 70.86676788]
[96.62228394 86.08000183]
[110.09078979 89.83380890]
[113.94476318 103.27399445]
[124.59076691 113.84104156]
[135.23678589 124.40808868]
[145.88278198 134.97514343]
[141.05920410 120.77185822]
[139.86842346 105.81919861]
[142.38327026 91.03151703]
[148.44995117 77.31307983]
[157.69747925 65.50278473]
[169.56037903 56.32283401]
[183.31323242 50.33457565]
[198.11503601 47.90420532]
[213.06065369 49.18033218]
[227.23616028 54.08492661]
[239.77470398 62.31806946]
[249.90957642 73.37629700]
[257.02099609 86.58340454]
[260.67413330 101.13175964]
[260.64556885 116.13173676]
[256.93704224 130.66606140]
[249.77534485 143.84597778]
[239.59843445 154.86552429]
[227.02859497 163.05084229]
[212.83451843 167.90139771]
[197.88414001 169.12059021]
[183.09170532 166.63383484]
[169.36177063 160.59323120]
[157.53390503 151.36813354]
[164.01341248 164.89648438]
[170.49290466 178.42481995]
[175.39431763 164.24821472]
[188.19647217 156.43127441]
[203.04640198 158.54777527]
[213.15492249 169.63011169]
[213.90052795 184.61157227]
[204.94236755 196.64283752]
[190.37597656 200.22337341]
[176.85961914 193.71488953]
[181.89653015 207.84391785]
[186.93345642 221.97294617]
[191.97036743 236.10197449]
[197.00727844 250.23100281]
[202.04420471 264.36004639]
[207.08111572 278.48907471]
[219.00317383 288.88980103]
[215.98887634 303.47619629]
[221.02580261 317.60522461]
[226.06271362 331.73425293]
[231.09963989 345.86328125]
[236.13655090 359.99230957]
[251.09568787 358.21133423]
[266.07601929 359.80422974]
[280.32614136 364.69113159]
[293.13125610 372.62692261]
[303.84912109 383.21350098]
[311.94204712 395.91986084]
[317.00415039 410.10870361]
[318.78152466 425.06826782]
[317.18499756 440.04821777]
[312.29461670 454.29714966]
[304.35577393 467.10034180]
[293.76657104 477.81561279]
[281.05825806 485.90548706]
[266.86819458 490.96417236]
[251.90818787 492.73788452]
[236.92863464 491.13772583]
[222.68087769 486.24392700]
[209.87959290 478.30194092]
[199.16690063 467.71017456]
[191.08010864 454.99987793]
[186.02487183 440.80859375]
[184.25476074 425.84817505]
[185.85856628 410.86898804]
[190.75581360 396.62243652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 166]
[16 165]
[17 164]
[18 140]
[19 139]
[20 138]
[21 137]
[23 135]
[25 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[31 125]
[32 124]
[33 123]
[34 122]
[35 121]
[36 120]
[38 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
