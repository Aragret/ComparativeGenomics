%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[53.05366898 612.96527100]
[38.94659424 607.73980713]
[26.04000854 600.01098633]
[14.77350903 590.04199219]
[5.53082561 578.17242432]
[-1.37323713 564.80645752]
[-5.70353031 550.39941406]
[-7.31256580 535.44195557]
[-6.14554024 520.44354248]
[-2.24220228 505.91497803]
[4.26450205 492.35116577]
[13.15295696 480.21401978]
[24.12042427 469.91696167]
[36.79335785 461.81072998]
[50.74011993 456.17135620]
[65.48568726 453.19094849]
[65.26235962 438.19259644]
[65.03903198 423.19427490]
[57.11310196 410.58361816]
[64.64408112 396.66976929]
[64.42075348 381.67141724]
[56.49481964 369.06076050]
[64.02580261 355.14694214]
[56.09986496 342.53625488]
[63.63084412 328.62243652]
[63.40751648 313.62408447]
[55.48158264 301.01342773]
[63.01256180 287.09957886]
[62.78923416 272.10125732]
[62.56590652 257.10290527]
[62.34257889 242.10456848]
[51.14514923 252.08543396]
[36.16255951 251.36288452]
[25.97752380 240.35084534]
[26.42448807 225.35749817]
[37.24741364 214.97172546]
[52.24643707 215.14297485]
[62.82907104 225.77224731]
[63.94471741 210.81379700]
[57.17546082 197.54629517]
[65.91773987 184.35981750]
[57.83568954 196.99629211]
[46.12955856 206.37533569]
[32.03472519 211.50717163]
[17.03864670 211.85020447]
[2.72389865 207.36824036]
[-9.39885044 198.53427124]
[-18.05025864 186.28057861]
[-22.31732178 171.90029907]
[-21.74972725 156.91104126]
[-16.40737343 142.89465332]
[-6.85405207 131.33030701]
[5.90205145 123.43842316]
[20.51475525 120.05184937]
[35.44194794 121.52798462]
[49.10832214 127.71103668]
[60.07164001 137.94850159]
[67.17491150 151.15998840]
[69.66851044 165.95146179]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[103.59110260 42.07167816]
[115.01179504 32.51045609]
[119.30592346 18.13824272]
[123.06221771 3.61618376]
[126.81851959 -10.90587521]
[130.57482910 -25.42793465]
[134.33113098 -39.94999313]
[138.08741760 -54.47205353]
[141.30070496 -69.12384033]
[143.96649170 -83.88505554]
[146.63229370 -98.64627838]
[149.29808044 -113.40749359]
[151.96388245 -128.16871643]
[154.62966919 -142.92993164]
[152.75718689 -149.27069092]
[154.15774536 -154.77845764]
[157.60086060 -158.08813477]
[160.70497131 -172.76342773]
[155.99098206 -187.86604309]
[166.19458008 -198.71665955]
[169.29869080 -213.39195251]
[160.94386292 -226.53862000]
[164.30093384 -241.37724304]
[176.88574219 -249.26127625]
[179.98985291 -263.93658447]
[183.09396362 -278.61187744]
[186.19807434 -293.28717041]
[189.30218506 -307.96249390]
[192.29695129 -322.66049194]
[195.18223572 -337.38037109]
[198.06750488 -352.10028076]
[184.25422668 -358.10089111]
[172.05412292 -366.93103027]
[162.03779602 -378.17770386]
[154.67375183 -391.31484985]
[150.30639648 -405.72805786]
[149.14002991 -420.74316406]
[151.22917175 -435.65789795]
[156.47612000 -449.77468872]
[164.63548279 -462.43322754]
[175.32560730 -473.04150391]
[188.04650879 -481.10330200]
[202.20321655 -486.24157715]
[217.13357544 -488.21600342]
[232.13928223 -486.93423462]
[246.51847839 -482.45623779]
[259.59863281 -474.99139404]
[270.76797485 -464.88891602]
[279.50405884 -452.62130737]
[285.39831543 -438.76229858]
[288.17504883 -423.96014404]
[287.70437622 -408.90713501]
[284.00833130 -394.30737305]
[277.25976562 -380.84368896]
[267.77435303 -369.14578247]
[255.99569702 -359.76083374]
[242.47473145 -353.12774658]
[227.84385681 -349.55679321]
[212.78739929 -349.21499634]
[209.90213013 -334.49511719]
[207.01684570 -319.77520752]
[208.81504822 -312.60665894]
[203.97749329 -304.85836792]
[200.87338257 -290.18307495]
[197.76927185 -275.50775146]
[194.66516113 -260.83245850]
[191.56105042 -246.15716553]
[199.87556458 -233.85250854]
[196.93661499 -218.92544556]
[183.97399902 -210.28784180]
[180.86988831 -195.61254883]
[185.80590820 -181.55961609]
[175.38027954 -169.65933228]
[172.27616882 -154.98402405]
[169.39089966 -140.26412964]
[166.72509766 -125.50291443]
[164.05929565 -110.74169922]
[161.39350891 -95.98047638]
[158.72770691 -81.21926117]
[156.06192017 -66.45804596]
[169.68510437 -72.73567200]
[183.15498352 -66.13549042]
[186.54205322 -51.52289963]
[177.34948730 -39.66976166]
[162.35371399 -39.31377029]
[152.60948181 -50.71575165]
[148.85317993 -36.19369507]
[145.09687805 -21.67163467]
[141.34057617 -7.14957476]
[137.58427429 7.37248468]
[133.82797241 21.89454460]
[147.88034058 16.64754868]
[160.82202148 24.23129654]
[163.11286926 39.05533218]
[153.06417847 50.19192505]
[138.08345032 49.43159485]
[129.21424866 37.33645248]
[132.44537354 51.87636566]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[83.87096405 170.77746582]
[80.87619019 185.47546387]
[87.56565094 199.81289673]
[78.90317535 211.92944336]
[77.78752136 226.88789368]
[77.34091949 241.88124084]
[77.56424713 256.87957764]
[77.78757477 271.87792969]
[78.01090240 286.87625122]
[85.95280457 300.55969238]
[78.40585327 313.40075684]
[78.62918091 328.39910889]
[86.57109070 342.08255005]
[79.02413940 354.92361450]
[86.96604156 368.60705566]
[79.41909027 381.44808960]
[79.64241791 396.44644165]
[87.58432770 410.12988281]
[80.03737640 422.97094727]
[80.26070404 437.96926880]
[80.48403168 452.96762085]
[95.31179810 455.50765991]
[109.42028046 460.72927856]
[122.32894897 468.45462036]
[133.59814453 478.42059326]
[142.84402466 490.28768921]
[149.75169373 503.65176392]
[154.08586121 518.05767822]
[155.69892883 533.01470947]
[154.53594971 548.01342773]
[150.63652039 562.54302979]
[144.13348389 576.10858154]
[135.24829102 588.24810791]
[124.28359985 598.54815674]
[111.61285400 606.65783691]
[97.66761017 612.30096436]
[82.92284393 615.28533936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 194]
[17 193]
[18 192]
[20 190]
[21 189]
[23 187]
[25 185]
[26 184]
[28 182]
[29 181]
[30 180]
[31 179]
[38 178]
[39 177]
[41 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[65 168]
[66 167]
[67 166]
[69 164]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[75 153]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[84 141]
[85 140]
[87 138]
[88 137]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
