%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-10.90118599 363.95938110]
[-3.15000319 376.86721802]
[1.74772882 391.10470581]
[3.57790279 406.04940796]
[2.26051116 421.04800415]
[-2.14685535 435.44485474]
[-9.45152569 448.61053467]
[-19.33417130 459.96954346]
[-31.36276436 469.02529907]
[-45.01146698 475.38192749]
[-59.68361664 478.76153564]
[-74.73780823 479.01635742]
[-89.51594543 476.13531494]
[-103.37197876 470.24429321]
[-115.70018768 461.60086060]
[-125.96163940 450.58285522]
[-133.70774841 437.67196655]
[-138.59986877 423.43255615]
[-140.42416382 408.48712158]
[-139.10087585 393.48904419]
[-134.68785095 379.09393311]
[-127.37799835 365.93112183]
[-117.49088287 354.57601929]
[-105.45873260 345.52499390]
[-91.80752563 339.17373657]
[-77.13404846 335.79992676]
[-62.07975388 335.55099487]
[-47.30275726 338.43786621]
[-41.43379593 324.63369751]
[-35.56483459 310.82949829]
[-29.69587517 297.02532959]
[-23.82691383 283.22116089]
[-24.75094032 278.53552246]
[-22.74128532 273.21966553]
[-17.57221985 269.09750366]
[-11.29485893 255.47418213]
[-5.01749849 241.85086060]
[-17.88343620 249.56237793]
[-32.85387421 250.50363159]
[-46.58438110 244.46432495]
[-56.00752258 232.79367065]
[-59.01815033 218.09890747]
[-54.94367599 203.66288757]
[-44.69435120 192.71064758]
[-30.55990028 187.68896484]
[-15.69799709 189.71968079]
[-3.42882729 198.34913635]
[3.50664473 211.64949036]
[3.55901170 226.64941406]
[11.97362995 214.23191833]
[13.12359047 206.93127441]
[20.60711479 201.69346619]
[29.20567894 189.40263367]
[30.16156960 174.53872681]
[44.41220856 167.66632080]
[53.01077271 155.37548828]
[61.60933685 143.08465576]
[70.11616516 130.73014832]
[78.53078461 118.31264496]
[86.94539642 105.89514923]
[88.14216614 91.96463013]
[100.63710785 85.69023132]
[109.05172729 73.27273560]
[110.38807678 57.50806808]
[123.93294525 51.31243896]
[132.34756470 38.89494705]
[140.66950989 26.41515160]
[141.77099609 10.63233566]
[155.22212219 4.23573160]
[156.32362366 -11.54708481]
[169.77473450 -17.94368744]
[165.21835327 -36.33264160]
[175.37591553 -51.94472504]
[193.40478516 -55.11890030]
[201.25654602 -67.89974213]
[209.10829163 -80.68058014]
[200.94772339 -93.53229523]
[199.18353271 -108.59133148]
[204.11244202 -122.86459351]
[214.70619202 -133.53854370]
[228.82557678 -138.53381348]
[243.65220642 -136.91007996]
[251.50395203 -149.69091797]
[259.35571289 -162.47177124]
[267.20745850 -175.25260925]
[275.05923462 -188.03344727]
[262.95391846 -196.90554810]
[251.61203003 -206.73481750]
[241.10908508 -217.45587158]
[231.51495361 -228.99732971]
[222.89349365 -241.28240967]
[215.30206299 -254.22935486]
[208.79121399 -267.75198364]
[203.40425110 -281.76031494]
[199.17701721 -296.16113281]
[196.13768005 -310.85858154]
[194.30642700 -325.75485229]
[193.69546509 -340.75085449]
[194.30886841 -355.74673462]
[196.14253235 -370.64273071]
[199.18426514 -385.33969116]
[203.41381836 -399.73980713]
[208.80307007 -413.74725342]
[215.31611633 -427.26882935]
[222.90963745 -440.21453857]
[231.53309631 -452.49822998]
[241.12910461 -464.03811646]
[251.63380432 -474.75747681]
[262.97726440 -484.58489990]
[275.08401489 -493.45504761]
[287.87350464 -501.30883789]
[301.26058960 -508.09402466]
[315.15618896 -513.76544189]
[329.46780396 -518.28540039]
[344.10025024 -521.62377930]
[358.95611572 -523.75830078]
[373.93652344 -524.67486572]
[388.94180298 -524.36730957]
[403.87207031 -522.83770752]
[418.62799072 -520.09625244]
[433.11135864 -516.16113281]
[447.22576904 -511.05859375]
[460.87731934 -504.82257080]
[473.97512817 -497.49456787]
[486.43206787 -489.12332153]
[498.16522217 -479.76458740]
[509.09649658 -469.48062134]
[519.15313721 -458.33984375]
[528.26824951 -446.41644287]
[536.38116455 -433.78973389]
[543.43786621 -420.54376221]
[549.39141846 -406.76669312]
[554.20220947 -392.55017090]
[557.83819580 -377.98883057]
[560.27514648 -363.17959595]
[561.49694824 -348.22097778]
[561.49536133 -333.21255493]
[560.27044678 -318.25421143]
[557.83038330 -303.44546509]
[554.19140625 -288.88488770]
[549.37768555 -274.66937256]
[543.42126465 -260.89352417]
[536.36175537 -247.64903259]
[528.24621582 -235.02401733]
[519.12866211 -223.10250854]
[509.06967163 -211.96385193]
[498.13626099 -201.68215942]
[486.40115356 -192.32585144]
[473.94250488 -183.95721436]
[460.84313965 -176.63191223]
[447.19030762 -170.39872742]
[433.07482910 -165.29911804]
[418.59063721 -161.36703491]
[403.83413696 -158.62863159]
[388.90356445 -157.10214233]
[373.89822388 -156.79772949]
[358.91799927 -157.71740723]
[344.06259155 -159.85505676]
[329.43084717 -163.19647217]
[315.12014771 -167.71937561]
[301.22573853 -173.39370728]
[287.84005737 -180.18168640]
[279.98831177 -167.40084839]
[272.13656616 -154.62001038]
[264.28479004 -141.83917236]
[256.43304443 -129.05831909]
[264.58306885 -116.56661987]
[266.50915527 -101.71402740]
[261.77615356 -87.43958282]
[251.27201843 -76.59140015]
[237.04167175 -71.35841370]
[221.88912964 -72.82882690]
[214.03738403 -60.04798508]
[206.18562317 -47.26714325]
[211.17875671 -37.00873566]
[210.59376526 -25.49468231]
[204.46044922 -15.59132481]
[194.20417786 -9.81986141]
[182.31614685 -9.71487999]
[181.80322266 5.17089128]
[167.76351929 12.46453953]
[167.25061035 27.35031128]
[153.21090698 34.64395905]
[152.16976929 41.96091461]
[144.76506042 47.30956268]
[136.35043335 59.72705841]
[135.61595154 74.60354614]
[121.46921539 81.68735504]
[113.05460358 94.10485077]
[111.85783386 108.03536987]
[99.36289215 114.30976868]
[90.94827271 126.72726440]
[82.53366089 139.14476013]
[80.31020355 148.00444031]
[73.90017700 151.68321228]
[65.30161285 163.97406006]
[56.70304489 176.26489258]
[55.13212967 192.00791931]
[41.49651718 198.00119019]
[32.89795303 210.29202271]
[24.39112663 222.64654541]
[15.97650719 235.06404114]
[8.60581779 248.12821960]
[2.32845688 261.75152588]
[-3.94890380 275.37484741]
[-10.02273750 289.09011841]
[-15.89169884 302.89428711]
[-21.76066017 316.69848633]
[-27.62961960 330.50265503]
[-33.49858093 344.30682373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[35 205]
[36 204]
[37 203]
[49 202]
[50 201]
[52 200]
[53 199]
[55 197]
[56 196]
[57 195]
[58 193]
[59 192]
[60 191]
[62 189]
[63 188]
[65 186]
[66 185]
[67 183]
[69 181]
[71 179]
[74 174]
[75 173]
[76 172]
[82 166]
[83 165]
[84 164]
[85 163]
[86 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
