%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[103.27890015 722.47479248]
[88.76102448 718.68298340]
[74.50696564 713.99597168]
[60.57186890 708.43182373]
[47.00965118 702.01208496]
[33.87278366 694.76165771]
[21.21208763 686.70849609]
[9.07654476 677.88378906]
[-2.48689222 668.32171631]
[-13.43348789 658.05926514]
[-23.72089195 647.13604736]
[-33.30930328 635.59442139]
[-42.16162491 623.47906494]
[-50.24361038 610.83673096]
[-57.52399063 597.71643066]
[-63.97460175 584.16888428]
[-69.57048798 570.24652100]
[-74.28999329 556.00317383]
[-78.11486816 541.49395752]
[-81.03030396 526.77502441]
[-83.02502441 511.90332031]
[-84.09132385 496.93637085]
[-84.22505951 481.93209839]
[-83.42572784 466.94851685]
[-81.69641876 452.04360962]
[-79.04380798 437.27505493]
[-75.47817993 422.69998169]
[-71.01332092 408.37478638]
[-65.66649628 394.35485840]
[-59.45840073 380.69448853]
[-52.41305161 367.44647217]
[-44.55770111 354.66210938]
[-35.92274857 342.39083862]
[-26.54159546 330.68014526]
[-16.45053673 319.57531738]
[-5.68861389 309.11935425]
[5.70253801 299.35266113]
[17.67884827 290.31304932]
[30.19398117 282.03549194]
[43.19952011 274.55200195]
[56.64514923 267.89157104]
[70.47884369 262.07989502]
[84.64709473 257.13952637]
[99.09506989 253.08955383]
[113.76689148 249.94563293]
[111.54177856 235.11158752]
[102.00366211 227.67176819]
[100.02847290 215.33149719]
[107.21364594 204.61999512]
[105.20963287 189.75447083]
[103.09500885 174.90426636]
[100.86989594 160.07022095]
[98.64477539 145.23617554]
[94.54383087 139.08769226]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[72.26632690 55.77443695]
[57.70286179 52.02988434]
[44.07909393 45.67462921]
[31.85838890 36.92644501]
[21.45609093 26.08445168]
[13.22541618 13.51891518]
[7.44544744 -0.34142053]
[4.31168032 -15.02395058]
[3.92940879 -30.02832603]
[6.31018591 -44.84350967]
[11.37148285 -58.96517181]
[18.93954659 -71.91287231]
[28.75536919 -83.24638367]
[40.48354340 -92.58068085]
[53.72373581 -99.59902191]
[68.02433014 -104.06367493]
[66.24186707 -118.95738983]
[64.34857178 -133.83741760]
[62.34456253 -148.70295715]
[60.34054947 -163.56848145]
[58.33653259 -178.43400574]
[56.33251953 -193.29953003]
[50.50771713 -179.47666931]
[39.89066696 -168.88052368]
[26.05634117 -163.08299255]
[11.05698395 -162.94407654]
[-2.88233995 -168.48440552]
[-13.69381523 -178.88209534]
[-19.77362251 -192.59472656]
[-20.21986198 -207.58808899]
[-14.96633244 -221.63801575]
[-4.79236603 -232.66027832]
[8.79278946 -239.01980591]
[23.77385902 -239.77317810]
[37.92848587 -234.80865479]
[49.15692139 -224.86268616]
[55.79298782 -211.41255188]
[56.90863800 -226.37100220]
[58.02428818 -241.32945251]
[44.30586624 -247.82324219]
[33.86248398 -258.83688354]
[28.10652161 -272.88085938]
[27.81643105 -288.05584717]
[33.03144073 -302.30957031]
[43.04626083 -313.71429443]
[56.50647736 -320.72763062]
[71.59169769 -322.40112305]
[86.26177216 -318.50839233]
[98.53269958 -309.57592773]
[106.74493408 -296.81176758]
[109.78783417 -281.94216919]
[107.24987793 -266.97808838]
[99.47429657 -253.94334412]
[87.51268005 -244.60075378]
[72.98274231 -240.21380615]
[71.86708832 -225.25535583]
[70.75144196 -210.29690552]
[71.19805145 -195.30355835]
[73.20206451 -180.43801880]
[75.20607758 -165.57249451]
[77.21009064 -150.70697021]
[79.21410370 -135.84143066]
[83.22305298 -129.63256836]
[81.13558197 -120.73985291]
[82.91805267 -105.84613800]
[97.86833954 -104.88220215]
[112.39077759 -101.18647003]
[125.99041748 -94.88337708]
[138.20349121 -86.18626404]
[148.61318970 -75.39012909]
[156.86395264 -62.86164093]
[162.67355347 -49.02667618]
[165.84278870 -34.35583878]
[166.26228333 -19.34846687]
[163.91627502 -4.51562405]
[158.88323975 9.63730145]
[151.33320618 22.62781143]
[141.52200317 34.01275635]
[129.78269958 43.40343857]
[116.51416016 50.47889709]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[113.47882080 143.01106262]
[115.70393372 157.84510803]
[117.92905426 172.67915344]
[122.29685211 180.70162964]
[120.07516479 187.75045776]
[122.07917786 202.61598206]
[133.66946411 216.92495728]
[126.37581635 232.88647461]
[128.60093689 247.72050476]
[143.54946899 246.42135620]
[158.54986572 246.05406189]
[173.54406738 246.62004089]
[188.47407532 248.11712646]
[203.28213501 250.53950500]
[217.91094971 253.87780762]
[232.30392456 258.11914062]
[246.40538025 263.24707031]
[260.16073608 269.24176025]
[273.51681519 276.08001709]
[286.42190552 283.73538208]
[298.82611084 292.17828369]
[310.68142700 301.37597656]
[321.94201660 311.29296875]
[332.56423950 321.89080811]
[342.50708008 333.12854004]
[351.73202515 344.96267700]
[360.20339966 357.34744263]
[367.88842773 370.23489380]
[374.75738525 383.57522583]
[380.78369141 397.31677246]
[385.94403076 411.40640259]
[390.21841431 425.78958130]
[393.59036255 440.41067505]
[396.04678345 455.21313477]
[397.57818604 470.13964844]
[398.17864990 485.13253784]
[397.84582520 500.13372803]
[396.58105469 515.08520508]
[394.38919067 529.92913818]
[391.27871704 544.60809326]
[387.26165771 559.06524658]
[382.35360718 573.24468994]
[376.57348633 587.09161377]
[369.94369507 600.55236816]
[362.48986816 613.57495117]
[354.24084473 626.10888672]
[345.22854614 638.10577393]
[335.48785400 649.51916504]
[325.05642700 660.30487061]
[313.97463989 670.42126465]
[302.28533936 679.82904053]
[290.03378296 688.49194336]
[277.26736450 696.37640381]
[264.03543091 703.45196533]
[250.38923645 709.69116211]
[236.38154602 715.06988525]
[222.06655884 719.56738281]
[207.49963379 723.16625977]
[192.73716736 725.85247803]
[177.83625793 727.61578369]
[162.85453796 728.44927979]
[147.84997559 728.34973145]
[132.88064575 727.31750488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 156]
[46 155]
[49 153]
[50 152]
[51 150]
[52 149]
[53 148]
[55 147]
[56 146]
[59 144]
[60 143]
[61 142]
[77 126]
[78 125]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
