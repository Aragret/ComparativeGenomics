%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[163.11996460 792.87701416]
[149.02482605 787.73559570]
[135.22329712 781.85125732]
[121.75451660 775.24072266]
[108.65664673 767.92272949]
[95.96682739 759.91802979]
[83.72101593 751.24926758]
[71.95393372 741.94104004]
[60.69892883 732.01977539]
[49.98791504 721.51348877]
[39.85124588 710.45208740]
[30.31766129 698.86682129]
[21.41418076 686.79058838]
[13.16604328 674.25762939]
[5.59662962 661.30340576]
[-1.27260411 647.96472168]
[-7.42218590 634.27935791]
[-12.83468437 620.28607178]
[-17.49475670 606.02453613]
[-21.38919449 591.53521729]
[-24.50695801 576.85913086]
[-26.83920860 562.03796387]
[-28.37933540 547.11364746]
[-29.12297440 532.12847900]
[-29.06801605 517.12506104]
[-28.21461487 502.14575195]
[-26.56519318 487.23312378]
[-24.12442589 472.42941284]
[-20.89922905 457.77658081]
[-16.89874649 443.31616211]
[-12.13431835 429.08917236]
[-6.61945009 415.13592529]
[-0.36977348 401.49594116]
[6.59699535 388.20794678]
[14.26110935 375.30953979]
[22.60084152 362.83734131]
[31.59255409 350.82666016]
[41.21075821 339.31155396]
[51.42818832 328.32470703]
[62.21588516 317.89718628]
[73.54326630 308.05862427]
[85.37822723 298.83685303]
[97.68721771 290.25805664]
[110.43534851 282.34649658]
[123.58647156 275.12466431]
[137.10333252 268.61297607]
[150.94758606 262.82995605]
[145.91067505 248.70091248]
[140.87376404 234.57188416]
[135.83683777 220.44285583]
[130.79992676 206.31382751]
[125.76300812 192.18479919]
[114.20122528 182.79467773]
[116.85523987 167.19766235]
[102.89367676 156.56556702]
[106.36177063 138.48092651]
[101.11505127 124.42845917]
[95.86833191 110.37599182]
[90.51715088 96.36296844]
[85.06179047 82.39016724]
[79.60643768 68.41737366]
[65.40892792 62.00888824]
[60.07546997 47.76077271]
[66.27247620 34.26511383]
[60.81711578 20.29231644]
[53.81812668 33.55934906]
[39.52923584 38.12307358]
[26.13576889 31.36918449]
[21.31011009 17.16661263]
[27.81661987 3.65123868]
[41.92807007 -1.43471885]
[55.56013489 4.82151461]
[51.37312317 -9.58226681]
[47.18611145 -23.98604965]
[42.99909973 -38.38983154]
[38.81208801 -52.79361343]
[34.62507629 -67.19739532]
[19.70356178 -65.36858368]
[4.68192053 -65.95716858]
[-10.05075264 -68.94790649]
[-24.11284447 -74.26333618]
[-37.14011002 -81.76576233]
[-48.79512024 -91.26087189]
[-58.77597427 -102.50270081]
[-66.82414246 -115.20006561]
[-72.73117065 -129.02407837]
[-76.34403992 -143.61665344]
[-77.56916809 -158.59982300]
[-76.37483215 -173.58546448]
[-72.79195404 -188.18544006]
[-66.91335297 -202.02156067]
[-58.89129257 -214.73544312]
[-48.93356323 -225.99775696]
[-37.29809189 -235.51678467]
[-24.28626823 -243.04597473]
[-10.23513031 -248.39028931]
[4.49136543 -251.41130066]
[19.51176643 -252.03074646]
[34.43700790 -250.23260498]
[48.88048935 -246.06343079]
[62.46809387 -239.63124084]
[74.84786987 -231.10261536]
[85.69914246 -220.69847107]
[94.74084473 -208.68832397]
[101.73877716 -195.38323975]
[106.51166534 -181.12786865]
[108.93589783 -166.29145813]
[108.94866943 -151.25828552]
[106.54964447 -136.41777039]
[101.80097198 -122.15431976]
[94.82565308 -108.83737183]
[85.80436707 -96.81187439]
[74.97077942 -86.38932037]
[62.60551834 -77.83968353]
[49.02885818 -71.38440704]
[53.21586990 -56.98062515]
[57.40288162 -42.57684326]
[61.58989334 -28.17306137]
[65.77690125 -13.76927853]
[69.96391296 0.63450354]
[74.78991699 14.83695889]
[80.24526978 28.80975723]
[93.94715881 34.53635025]
[99.67871094 48.62903976]
[93.57923126 62.96201324]
[99.03459167 76.93481445]
[104.48994446 90.90760803]
[110.12203979 96.67407227]
[109.92080688 105.12927246]
[115.16752625 119.18173981]
[120.41424561 133.23420715]
[131.80317688 139.28854370]
[135.88388062 151.10089111]
[130.98426819 162.16075134]
[142.90632629 172.56147766]
[139.89204407 187.14788818]
[144.92895508 201.27691650]
[149.96586609 215.40594482]
[155.00279236 229.53497314]
[160.03970337 243.66400146]
[165.07661438 257.79302979]
[179.45709229 253.51411438]
[194.04492188 250.00663757]
[208.79875183 247.28053284]
[223.67677307 245.34350586]
[238.63677979 244.20108032]
[253.63639832 243.85647583]
[268.63308716 244.31066895]
[283.58435059 245.56237793]
[298.44781494 247.60806274]
[313.18133545 250.44190979]
[327.74313354 254.05589294]
[342.09197998 258.43975830]
[356.18713379 263.58108521]
[369.98870850 269.46533203]
[383.45751953 276.07577515]
[396.55545044 283.39367676]
[409.24533081 291.39831543]
[421.49118042 300.06698608]
[433.25833130 309.37512207]
[444.51339722 319.29635620]
[455.22448730 329.80255127]
[465.36120605 340.86392212]
[474.89486694 352.44909668]
[483.79843140 364.52526855]
[492.04666138 377.05819702]
[499.61614990 390.01232910]
[506.48547363 403.35098267]
[512.63513184 417.03634644]
[518.04772949 431.02960205]
[522.70788574 445.29107666]
[526.60241699 459.78036499]
[529.72027588 474.45642090]
[532.05261230 489.27758789]
[533.59283447 504.20190430]
[534.33654785 519.18701172]
[534.28167725 534.19049072]
[533.42840576 549.16979980]
[531.77905273 564.08245850]
[529.33837891 578.88616943]
[526.11328125 593.53900146]
[522.11291504 607.99945068]
[517.34857178 622.22644043]
[511.83377075 636.17974854]
[505.58419800 649.81976318]
[498.61752319 663.10784912]
[490.95349121 676.00628662]
[482.61383057 688.47851562]
[473.62219238 700.48925781]
[464.00405884 712.00439453]
[453.78668213 722.99133301]
[442.99905396 733.41894531]
[431.67175293 743.25756836]
[419.83685303 752.47943115]
[407.52792358 761.05828857]
[394.77984619 768.96990967]
[381.62875366 776.19183350]
[368.11193848 782.70361328]
[354.26770020 788.48675537]
[340.13531494 793.52484131]
[325.75482178 797.80364990]
[311.16696167 801.31103516]
[296.41311646 804.03710938]
[281.53509521 805.97399902]
[266.57507324 807.11633301]
[251.57545471 807.46087646]
[236.57875061 807.00653076]
[221.62750244 805.75476074]
[206.76405334 803.70898438]
[192.03054810 800.87506104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[54 134]
[56 131]
[57 130]
[58 129]
[59 127]
[60 126]
[61 125]
[64 122]
[65 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
