%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[250.15431213 453.47671509]
[245.54029846 439.20397949]
[240.92630005 424.93124390]
[229.64921570 415.20104980]
[232.76643372 399.68997192]
[227.51971436 385.63751221]
[221.65075684 371.83334351]
[215.78179932 358.02914429]
[211.76635742 355.44357300]
[209.33251953 350.30804443]
[209.95039368 343.72552490]
[204.49502563 329.75271606]
[199.03967285 315.77993774]
[193.58432007 301.80712891]
[188.12896729 287.83432007]
[182.46617126 273.94430542]
[176.59721375 260.14013672]
[170.72825623 246.33595276]
[164.85929871 232.53176880]
[158.99032593 218.72760010]
[153.12136841 204.92341614]
[146.54133606 191.44367981]
[139.26811218 178.32499695]
[131.99488831 165.20629883]
[124.33428955 152.30996704]
[116.29311371 139.64744568]
[108.25193787 126.98491669]
[100.21076965 114.32239532]
[87.90818024 107.67875671]
[87.12670898 93.71878052]
[79.08553314 81.05625153]
[70.85672760 68.51485443]
[62.44210815 56.09735870]
[54.02748871 43.67986298]
[45.61286926 31.26236725]
[37.19825363 18.84487152]
[28.78363419 6.42737627]
[16.28764915 3.23157167]
[9.53473282 -7.28422117]
[11.68609142 -19.18792725]
[3.45728326 -31.72932816]
[-4.77152443 -44.27072906]
[-9.43438053 -46.61697006]
[-12.43131065 -50.16263199]
[-13.58441162 -54.07228851]
[-13.07313538 -57.56097412]
[-20.73373222 -70.45729828]
[-28.39433098 -83.35363007]
[-36.05492783 -96.24995422]
[-43.71552658 -109.14627838]
[-51.37612152 -122.04261017]
[-51.10122681 -107.04512787]
[-56.19412231 -92.93618011]
[-65.98474121 -81.57203674]
[-79.18496704 -74.44784546]
[-94.05808258 -72.50092316]
[-108.64727020 -75.98741913]
[-121.03306580 -84.44861603]
[-129.58592224 -96.77130890]
[-133.18054199 -111.33422852]
[-131.34402466 -126.22137451]
[-124.31795502 -139.47409058]
[-113.02675629 -149.34873962]
[-98.95597839 -154.54617310]
[-83.95687103 -154.38253784]
[-70.00282288 -148.87939453]
[-58.92829895 -138.75886536]
[-63.54230881 -153.03160095]
[-75.14940643 -163.78268433]
[-71.70216370 -178.27287292]
[-76.31617737 -192.54560852]
[-84.09242249 -179.71868896]
[-98.62761688 -176.01353455]
[-111.59533691 -183.55265808]
[-115.56709290 -198.01727295]
[-108.26766968 -211.12141418]
[-93.87851715 -215.35841370]
[-80.64299774 -208.30187988]
[-83.96525574 -222.92933655]
[-87.28751373 -237.55680847]
[-90.60977936 -252.18426514]
[-94.81390381 -257.28689575]
[-95.67999268 -262.90356445]
[-93.80632019 -267.29653931]
[-96.69158936 -282.01644897]
[-99.57686615 -296.73632812]
[-114.63533783 -297.31866455]
[-129.15344238 -301.35861206]
[-142.34826660 -308.63827515]
[-153.50819397 -318.76510620]
[-162.03140259 -331.19296265]
[-167.45823669 -345.25164795]
[-169.49603271 -360.18295288]
[-168.03491211 -375.18167114]
[-163.15365601 -389.43896484]
[-155.11552429 -402.18591309]
[-144.35397339 -412.73510742]
[-131.44937134 -420.51766968]
[-117.09765625 -425.11386108]
[-102.07279205 -426.27581787]
[-87.18505096 -423.94091797]
[-73.23730469 -418.23501587]
[-60.98175049 -409.46585083]
[-51.07930374 -398.10635376]
[-44.06399536 -384.76910400]
[-40.31415176 -370.17337036]
[-40.03199768 -355.10629272]
[-43.23274612 -340.38040161]
[-49.74378967 -326.78985596]
[-59.21399307 -315.06756592]
[-71.13263702 -305.84570312]
[-84.85697174 -299.62161255]
[-81.97169495 -284.90170288]
[-79.08642578 -270.18182373]
[-75.98231506 -255.50653076]
[-72.66005707 -240.87905884]
[-69.33779907 -226.25160217]
[-66.01554108 -211.62414551]
[-62.04344177 -197.15962219]
[-57.42943192 -182.88688660]
[-46.15235519 -173.15669250]
[-49.26957321 -157.64561462]
[-44.65556335 -143.37287903]
[-38.47979736 -129.70320129]
[-30.81919861 -116.80687714]
[-23.15860176 -103.91055298]
[-15.49800396 -91.01422882]
[-7.83740616 -78.11789703]
[-0.17680874 -65.22157288]
[7.76987553 -52.49953461]
[15.99868393 -39.95813370]
[24.22749138 -27.41673470]
[40.30370331 -20.37952805]
[41.20112991 -1.98724246]
[49.61574936 10.43025303]
[58.03036499 22.84774780]
[66.44498444 35.26524353]
[74.85960388 47.68273926]
[83.27422333 60.10023499]
[87.71202850 61.86515808]
[91.08822632 66.43662262]
[91.74806213 73.01508331]
[99.78923035 85.67760468]
[112.09181976 92.32124329]
[112.87329102 106.28121948]
[120.91446686 118.94374847]
[128.95564270 131.60627747]
[136.99681091 144.26879883]
[140.91455078 146.14102173]
[143.74778748 148.88644409]
[145.35519409 152.05686951]
[145.75549316 155.20431519]
[145.11357117 157.93305969]
[152.38681030 171.05175781]
[159.66003418 184.17045593]
[163.70895386 169.72724915]
[176.02314758 161.16215515]
[190.97271729 162.39103699]
[201.72294617 172.85205078]
[203.35894775 187.76255798]
[195.13278198 200.30569458]
[180.80532837 204.74688721]
[166.92555237 199.05445862]
[172.79450989 212.85862732]
[178.66346741 226.66281128]
[184.53242493 240.46699524]
[190.40139771 254.27116394]
[196.27035522 268.07534790]
[201.31439209 272.34957886]
[203.16488647 277.72293091]
[202.10176086 282.37896729]
[207.55711365 296.35177612]
[213.01246643 310.32455444]
[218.46783447 324.29736328]
[223.92318726 338.27017212]
[229.58596802 352.16018677]
[235.45494080 365.96435547]
[241.32389832 379.76855469]
[247.92477417 366.29901123]
[262.07144165 361.31185913]
[275.66006470 367.66400146]
[280.90646362 381.71658325]
[274.80523682 395.41970825]
[260.85147095 400.92355347]
[247.03916931 395.07595825]
[258.64627075 405.82705688]
[255.19902039 420.31723022]
[259.81304932 434.58996582]
[264.42703247 448.86270142]
[279.49545288 448.08480835]
[294.25158691 451.23434448]
[307.68927002 458.09661865]
[318.89236450 468.20370483]
[327.09701538 480.86648560]
[331.74377441 495.22161865]
[332.51586914 510.29034424]
[329.36059570 525.04522705]
[322.49316406 538.48028564]
[312.38174438 549.67950439]
[299.71578979 557.87921143]
[285.35885620 562.52044678]
[270.28985596 563.28674316]
[255.53617859 560.12579346]
[242.10377502 553.25317383]
[230.90849304 543.13739014]
[222.71363831 530.46826172]
[218.07795715 516.10955811]
[217.31750488 501.04025269]
[220.48414612 486.28781128]
[227.36196899 472.85806274]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[5 185]
[6 178]
[7 177]
[8 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 171]
[16 168]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 155]
[23 154]
[24 153]
[25 148]
[26 147]
[27 146]
[28 145]
[30 143]
[31 142]
[32 139]
[33 138]
[34 137]
[35 136]
[36 135]
[37 134]
[40 132]
[41 131]
[42 130]
[46 129]
[47 128]
[48 127]
[49 126]
[50 125]
[51 124]
[67 123]
[68 122]
[70 120]
[71 119]
[78 118]
[79 117]
[80 116]
[81 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
