%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[199.15524292 525.96911621]
[212.15940857 518.23950195]
[208.83714294 503.61206055]
[198.47311401 492.91455078]
[202.96174622 477.74343872]
[199.63948059 463.11599731]
[185.03898621 454.76947021]
[180.91131592 438.11782837]
[190.28474426 423.34765625]
[186.74507141 408.77127075]
[176.22293091 398.22927856]
[180.48516846 382.99301147]
[176.94549561 368.41662598]
[166.42335510 357.87463379]
[170.68560791 342.63836670]
[167.14593506 328.06198120]
[163.60626221 313.48562622]
[160.06658936 298.90924072]
[156.41850281 284.35961914]
[152.66220093 269.83755493]
[148.90589905 255.31549072]
[145.14959717 240.79344177]
[140.64196777 226.48675537]
[135.39524841 212.43428040]
[130.11070251 207.26753235]
[130.17672729 198.13333130]
[125.13981628 184.00430298]
[120.10289764 169.87527466]
[115.06597900 155.74624634]
[109.61062622 141.77345276]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[75.85328674 91.36922455]
[61.70660782 96.35636139]
[48.11798859 90.00423431]
[42.87160492 75.95163727]
[48.97282791 62.24853516]
[62.92659378 56.74468231]
[76.73888397 62.59226227]
[72.12487793 48.31953049]
[58.17610931 36.29815674]
[62.51696777 19.29451370]
[57.69097137 5.09205770]
[52.86497498 -9.11039829]
[48.03897476 -23.31285477]
[43.21297836 -37.51530838]
[38.38698196 -51.71776581]
[33.56098175 -65.92021942]
[28.84881592 -70.55778503]
[27.40310097 -76.05387115]
[28.80958176 -80.61795044]
[24.40858459 -94.95780182]
[20.00758553 -109.29764557]
[8.99919987 -116.01912689]
[5.62881374 -128.05342102]
[11.17803574 -138.80203247]
[6.99102449 -153.20581055]
[2.80401325 -167.60960388]
[-2.31285858 -153.50932312]
[-13.73048115 -143.78112793]
[-28.46431732 -140.96792603]
[-42.66297531 -145.80508423]
[-52.61495972 -157.02818298]
[-55.71884918 -171.70353699]
[-51.16328812 -185.99502563]
[-40.13909912 -196.16691589]
[-25.52796745 -199.56027222]
[-11.14921570 -195.28810120]
[-0.76184303 -184.46789551]
[-2.76585674 -199.33341980]
[-4.76987028 -214.19895935]
[-6.77388382 -229.06448364]
[-8.77789783 -243.93000793]
[-10.78191090 -258.79553223]
[-20.29356384 -271.43829346]
[-14.32600212 -285.08517456]
[-16.33001518 -299.95068359]
[-18.33403015 -314.81622314]
[-27.84568214 -327.45898438]
[-21.87812042 -341.10586548]
[-24.10323715 -355.93991089]
[-26.54896545 -370.73916626]
[-31.03572083 -378.69573975]
[-28.91922379 -385.77685547]
[-31.14434242 -400.61090088]
[-33.36945724 -415.44494629]
[-48.36307144 -417.13433838]
[-62.40818405 -422.64770508]
[-74.54718018 -431.60913086]
[-83.95240784 -443.40759277]
[-89.98259735 -457.23867798]
[-92.22660065 -472.15939331]
[-90.53142548 -487.15234375]
[-85.01264191 -501.19531250]
[-76.04653168 -513.33087158]
[-64.24441528 -522.73150635]
[-50.41099548 -528.75634766]
[-35.48944473 -530.99462891]
[-20.49714088 -529.29364014]
[-6.45628834 -523.76947021]
[5.67578697 -514.79864502]
[15.07189941 -502.99291992]
[21.09140587 -489.15716553]
[23.32388878 -474.23474121]
[21.61713028 -459.24310303]
[16.08750153 -445.20437622]
[7.11202335 -433.07577515]
[-4.69734287 -423.68423462]
[-18.53541565 -417.67004395]
[-16.31029892 -402.83599854]
[-14.08518124 -388.00195312]
[-11.74969387 -373.18490601]
[-9.30396652 -358.38562012]
[-6.01206398 -354.92550659]
[-4.85883808 -349.36068726]
[-7.01259184 -343.10986328]
[2.35572028 -331.53039551]
[-3.46850109 -316.82025146]
[-1.46448743 -301.95471191]
[0.53952622 -287.08917236]
[9.90783882 -275.50970459]
[4.08361673 -260.79956055]
[6.08763075 -245.93402100]
[8.09164429 -231.06849670]
[10.09565830 -216.20297241]
[12.09967136 -201.33743286]
[14.10368538 -186.47190857]
[17.20779610 -171.79661560]
[21.39480591 -157.39282227]
[25.58181763 -142.98904419]
[38.88579941 -131.54478455]
[34.34743118 -113.69864655]
[38.74843216 -99.35879517]
[43.14942932 -85.01895142]
[47.76343918 -70.74621582]
[52.58943558 -56.54376221]
[57.41543198 -42.34130859]
[62.24143219 -28.13885117]
[67.06742859 -13.93639565]
[71.89342499 0.26605985]
[76.71942139 14.46851540]
[87.42790985 20.09479141]
[91.56475830 31.88759422]
[86.39760590 43.70552063]
[91.01161957 57.97825241]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[123.41480255 135.90449524]
[126.97485352 138.39045715]
[129.32254028 141.56108093]
[130.39149475 144.95117188]
[130.27325439 148.12176514]
[129.19500732 150.70933533]
[134.23193359 164.83836365]
[139.26884460 178.96739197]
[144.30575562 193.09642029]
[149.44772339 207.18756104]
[154.69444275 221.24003601]
[160.84107971 207.55725098]
[174.28958130 200.91362000]
[188.89147949 204.34652710]
[197.97096252 216.28651428]
[197.37701416 231.27474976]
[187.38119507 242.45883179]
[172.55345154 244.72554016]
[159.67164612 237.03713989]
[163.42794800 251.55920410]
[167.18424988 266.08126831]
[170.94055176 280.60330200]
[176.11926270 288.12786865]
[174.64295959 295.36956787]
[178.18263245 309.94595337]
[181.72230530 324.52230835]
[185.26197815 339.09869385]
[196.03730774 350.68328857]
[191.52188110 364.87695312]
[195.06155396 379.45333862]
[205.83686829 391.03793335]
[201.32144165 405.23159790]
[204.86111450 419.80798340]
[217.09385681 425.44488525]
[223.74938965 436.93026733]
[222.59182739 449.95880127]
[214.26693726 459.79373169]
[217.58920288 474.42117310]
[228.19085693 486.16491699]
[223.46459961 500.28979492]
[226.78686523 514.91723633]
[241.85411072 516.27117920]
[255.76473999 522.21673584]
[267.15594482 532.17138672]
[274.91168213 545.15997314]
[278.27215576 559.90997314]
[276.90817261 574.97631836]
[270.95330811 588.88299561]
[260.99096680 600.26751709]
[247.99717712 608.01452637]
[233.24493408 611.36517334]
[218.17951965 609.99102783]
[204.27685547 604.02685547]
[192.89903259 594.05688477]
[185.16069031 581.05792236]
[181.81997681 566.30346680]
[183.20417786 551.23895264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[5 191]
[6 190]
[9 186]
[10 185]
[12 183]
[13 182]
[15 180]
[16 179]
[17 178]
[18 177]
[19 175]
[20 174]
[21 173]
[22 172]
[23 164]
[24 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 154]
[31 153]
[32 152]
[34 150]
[35 149]
[42 148]
[43 147]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[54 137]
[55 136]
[56 135]
[59 133]
[60 132]
[61 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[79 123]
[80 122]
[81 121]
[83 119]
[84 116]
[85 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
