%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[94.72303009 707.37939453]
[80.57027435 712.38720703]
[65.98923492 715.96093750]
[51.12480927 718.06512451]
[36.12474442 718.67883301]
[21.13811302 717.79589844]
[6.31386852 715.42517090]
[-8.20065784 711.59020996]
[-22.26120949 706.32904053]
[-35.72804642 699.69409180]
[-48.46731567 691.75122070]
[-60.35241699 682.57934570]
[-71.26522064 672.26965332]
[-81.09726715 660.92462158]
[-89.75084686 648.65704346]
[-97.13994598 635.58874512]
[-103.19112396 621.84967041]
[-107.84424591 607.57641602]
[-111.05307007 592.91070557]
[-112.78569031 577.99841309]
[-113.02490234 562.98773193]
[-111.76831818 548.02777100]
[-109.02843475 533.26733398]
[-104.83247375 518.85296631]
[-99.22214508 504.92810059]
[-92.25320435 491.63101196]
[-83.99491882 479.09390259]
[-74.52935028 467.44134521]
[-63.95059586 456.78918457]
[-52.36378098 447.24328613]
[-39.88406754 438.89849854]
[-26.63548851 431.83776855]
[-12.74971485 426.13131714]
[1.63524401 421.83578491]
[16.37642097 418.99389648]
[31.32730865 417.63391113]
[46.33931351 417.76931763]
[61.26323318 419.39877319]
[64.36734772 404.72348022]
[67.47145844 390.04818726]
[70.57556152 375.37286377]
[73.67967224 360.69757080]
[76.12540436 345.89831543]
[77.90786743 331.00457764]
[79.69033051 316.11087036]
[72.46282959 306.41088867]
[73.82593536 293.98809814]
[83.59107971 285.56167603]
[85.59509277 270.69613647]
[87.59910583 255.83061218]
[88.71475983 240.87214661]
[88.93808746 225.87380981]
[89.16141510 210.87547302]
[89.38474274 195.87713623]
[89.60807037 180.87879944]
[89.83139801 165.88046265]
[87.20682526 161.89039612]
[87.06093597 156.20921326]
[90.29129791 150.44065857]
[90.96109009 135.45561218]
[91.63087463 120.47058105]
[92.30065918 105.48554230]
[89.72917938 100.91372681]
[89.90224457 95.22660828]
[93.22005463 90.06626892]
[94.33570862 75.10781860]
[84.17076874 86.13841248]
[69.68311310 90.02529144]
[55.36189270 85.56404877]
[45.64469528 74.13706207]
[43.54249954 59.28509903]
[49.70669556 45.61020660]
[62.22723770 37.34969711]
[77.22450256 37.06317902]
[90.05142212 44.83943558]
[96.73348236 58.26915741]
[99.83759308 43.59385681]
[102.94170380 28.91855431]
[106.04581451 14.24325180]
[109.14992523 -0.43205053]
[112.03519440 -15.15194225]
[114.70098877 -29.91315842]
[117.36678314 -44.67437744]
[120.03257751 -59.43559265]
[122.69837952 -74.19680786]
[109.07518768 -67.91918182]
[95.60530853 -74.51936340]
[92.21823883 -89.13195801]
[101.41080475 -100.98509216]
[116.40657806 -101.34108734]
[126.15081024 -89.93910217]
[129.90710449 -104.46116638]
[133.66340637 -118.98322296]
[137.31149292 -133.53283691]
[140.85116577 -148.10922241]
[144.39083862 -162.68559265]
[130.61357117 -168.71533203]
[118.09275818 -177.04603577]
[107.20891571 -187.42453003]
[98.29277802 -199.53541565]
[91.61529541 -213.01066589]
[87.37939453 -227.44078064]
[85.71380615 -242.38725281]
[86.66912842 -257.39587402]
[90.21634674 -272.01052856]
[96.24765015 -285.78710938]
[104.57976532 -298.30697632]
[114.95948792 -309.18963623]
[127.07138824 -318.10440063]
[140.54739380 -324.78036499]
[154.97799683 -329.01461792]
[169.92465210 -330.67852783]
[184.93315125 -329.72149658]
[199.54742432 -326.17263794]
[213.32331848 -320.13973999]
[225.84223938 -311.80621338]
[236.72373962 -301.42526245]
[245.63713074 -289.31234741]
[252.31155396 -275.83557129]
[256.54415894 -261.40451050]
[258.20639038 -246.45765686]
[257.24765015 -231.44926453]
[253.69711304 -216.83540344]
[247.66268921 -203.06018066]
[239.32772827 -190.54222107]
[228.94554138 -179.66189575]
[216.83161926 -170.74987793]
[203.35409546 -164.07698059]
[188.92254639 -159.84599304]
[173.97550964 -158.18548584]
[158.96722412 -159.14591980]
[155.42755127 -144.56954956]
[151.88787842 -129.99316406]
[153.36418152 -122.75146484]
[148.18547058 -115.22692108]
[144.42916870 -100.70486450]
[140.67286682 -86.18280029]
[137.45959473 -71.53101349]
[134.79379272 -56.76979828]
[132.12800598 -42.00857925]
[129.46220398 -27.24736404]
[126.79640961 -12.48614597]
[128.73527527 -8.12153625]
[127.95291901 -2.49259949]
[123.82522583 2.67205954]
[120.72111511 17.34736252]
[117.61700439 32.02266312]
[114.51289368 46.69796753]
[111.40878296 61.37326813]
[109.29415894 76.22346497]
[108.17851257 91.18192291]
[107.28569794 106.15532684]
[106.61591339 121.14036560]
[105.94612885 136.12539673]
[105.27633667 151.11044312]
[104.82973480 166.10379028]
[104.60640717 181.10212708]
[104.38307953 196.10046387]
[104.15975189 211.09880066]
[103.93642426 226.09713745]
[103.71309662 241.09547424]
[113.75514221 229.95289612]
[128.40441895 226.72819519]
[142.19711304 232.62409973]
[149.98887634 245.44160461]
[148.87358093 260.40008545]
[139.26721191 271.92041016]
[124.75269318 275.70574951]
[110.74359131 270.34429932]
[102.46463776 257.83462524]
[100.46062469 272.70013428]
[98.45661163 287.56567383]
[105.84403229 304.43301392]
[94.58405304 317.89334106]
[92.80158234 332.78704834]
[91.01911926 347.68075562]
[103.44962311 339.28536987]
[118.20136261 342.00311279]
[126.82387543 354.27716064]
[124.37779236 369.07638550]
[112.26434326 377.92309570]
[97.42266083 375.74951172]
[88.35498047 363.80166626]
[85.25086975 378.47698975]
[82.14675903 393.15228271]
[79.04264832 407.82757568]
[75.93853760 422.50289917]
[90.24404907 427.05599976]
[104.02512360 433.01089478]
[117.14479065 440.30834961]
[129.47265625 448.87585449]
[140.88621521 458.62826538]
[151.27200317 469.46865845]
[160.52680969 481.28927612]
[168.55867004 493.97265625]
[175.28773499 507.39273071]
[180.64714050 521.41613770]
[184.58360291 535.90344238]
[187.05802917 550.71075439]
[188.04580688 565.69079590]
[187.53710938 580.69482422]
[185.53701782 595.57360840]
[182.06538391 610.17932129]
[177.15673828 624.36676025]
[170.85984802 637.99493408]
[163.23728943 650.92846680]
[154.36483765 663.03869629]
[144.33067322 674.20532227]
[133.23452759 684.31744385]
[121.18666077 693.27441406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 176]
[44 175]
[45 174]
[48 172]
[49 171]
[50 170]
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[59 155]
[60 154]
[61 153]
[62 152]
[65 151]
[66 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[91 137]
[92 136]
[93 135]
[94 133]
[95 132]
[96 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
