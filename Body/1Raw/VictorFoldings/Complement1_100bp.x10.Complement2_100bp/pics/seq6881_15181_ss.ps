%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[73.74790192 716.35607910]
[59.05392075 719.42388916]
[44.13955307 721.12280273]
[29.13205147 721.43835449]
[14.15945721 720.36779785]
[-0.65048611 717.92028809]
[-15.17142391 714.11676025]
[-29.27946472 708.98956299]
[-42.85424042 702.58258057]
[-55.77993774 694.95031738]
[-67.94627380 686.15802002]
[-79.24944305 676.28057861]
[-89.59301758 665.40240479]
[-98.88874054 653.61621094]
[-107.05730438 641.02258301]
[-114.02902222 627.72900391]
[-119.74440002 613.84881592]
[-124.15468597 599.50048828]
[-127.22225189 584.80645752]
[-128.92091370 569.89208984]
[-129.23620605 554.88458252]
[-128.16540527 539.91198730]
[-125.71766663 525.10211182]
[-121.91387177 510.58123779]
[-116.78646851 496.47326660]
[-110.37921143 482.89859009]
[-102.74675751 469.97302246]
[-93.95423126 457.80685425]
[-84.07665253 446.50384521]
[-73.19828033 436.16046143]
[-61.41194153 426.86492920]
[-48.81818771 418.69656372]
[-35.52447128 411.72506714]
[-21.64420700 406.00991821]
[-7.29582405 401.59988403]
[7.39826345 398.53256226]
[22.31268692 396.83413696]
[37.32019806 396.51910400]
[52.29275513 397.59014893]
[54.73848343 382.79086304]
[57.18421173 367.99160767]
[59.62994003 353.19232178]
[62.07566452 338.39306641]
[64.52139282 323.59378052]
[66.41468811 308.71374512]
[67.75292206 293.77355957]
[69.09115601 278.83337402]
[59.37337112 267.60394287]
[60.51770401 252.43341064]
[72.36206055 242.31665039]
[73.70029449 227.37646484]
[75.03852844 212.43627930]
[76.37676239 197.49609375]
[77.71499634 182.55590820]
[79.05323029 167.61572266]
[68.21025085 177.98054504]
[53.36170578 180.10676575]
[40.04574203 173.20132446]
[33.22888184 159.83979797]
[35.45364380 145.00569153]
[45.89025116 134.23178101]
[60.64610291 131.53645325]
[74.21763611 137.92500305]
[81.54322815 151.01580811]
[84.64733887 136.34049988]
[79.71131897 122.28756714]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[93.90196991 77.46512604]
[98.44886780 71.63867188]
[101.77112579 57.01121140]
[105.09338379 42.38375092]
[108.41564178 27.75629234]
[111.73789978 13.12883091]
[110.19232941 8.14302254]
[110.66637421 3.52473474]
[112.68183899 -0.01828014]
[115.54892731 -2.07062602]
[119.52102661 -16.53515053]
[123.49311829 -30.99967384]
[119.68640137 -46.35609055]
[130.51776123 -56.58013153]
[133.07359314 -71.36078644]
[134.18923950 -86.31923676]
[135.30488586 -101.27769470]
[136.42053223 -116.23614502]
[137.53617859 -131.19459534]
[137.53617859 -146.19459534]
[136.42053223 -161.15304565]
[135.30488586 -176.11151123]
[134.18923950 -191.06996155]
[133.07359314 -206.02841187]
[118.33432007 -209.38183594]
[105.23915100 -216.93217468]
[94.95247650 -228.00808716]
[88.38899994 -241.62471008]
[86.13233185 -256.57122803]
[88.38314056 -271.51864624]
[94.94127655 -285.13784790]
[105.22359467 -296.21780396]
[118.31581116 -303.77328491]
[133.05375671 -307.13247681]
[148.12696838 -305.99670410]
[162.19511414 -300.46691895]
[174.00729370 -291.03485107]
[182.51315308 -278.53918457]
[186.95637512 -264.09100342]
[186.94184875 -248.97509766]
[182.47090149 -234.53549194]
[173.94105530 -222.05618286]
[162.11079407 -212.64682007]
[148.03204346 -207.14405823]
[149.14768982 -192.18560791]
[150.26333618 -177.22715759]
[151.37898254 -162.26870728]
[152.49464417 -147.31024170]
[160.41867065 -160.04640198]
[173.60229492 -167.20124817]
[188.59936523 -166.90452576]
[201.48966980 -159.23379517]
[208.90370178 -146.19416809]
[208.90348816 -131.19416809]
[201.48904419 -118.15476227]
[188.59851074 -110.48442078]
[173.60144043 -110.18814850]
[160.41801453 -117.34339905]
[152.49464417 -130.07894897]
[151.37898254 -115.12049866]
[150.26333618 -100.16204071]
[149.14768982 -85.20359039]
[148.03204346 -70.24513245]
[156.81320190 -82.40618896]
[169.74040222 -90.01457977]
[184.63517761 -91.78814697]
[198.98750305 -87.42802429]
[210.37876892 -77.66896820]
[216.88932800 -64.15554810]
[217.42204285 -49.16500854]
[211.88714600 -35.22352600]
[201.21737671 -24.68048096]
[187.21075439 -19.31256485]
[172.22764587 -20.02436256]
[158.79298401 -26.69592667]
[149.17073059 -38.20298004]
[144.98228455 -52.60803604]
[149.07310486 -38.28622055]
[137.95764160 -27.02757835]
[133.98554993 -12.56305408]
[130.01345825 1.90147030]
[126.36536407 16.45108986]
[123.04310608 31.07855034]
[119.72084808 45.70601273]
[116.39858246 60.33347321]
[113.07632446 74.96092987]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[109.52624512 128.59399414]
[99.32264709 139.44461060]
[96.21853638 154.11991882]
[93.99341583 168.95394897]
[92.65518188 183.89413452]
[91.31694794 198.83432007]
[89.97871399 213.77450562]
[88.64048004 228.71469116]
[87.30224609 243.65487671]
[97.16010284 255.71557617]
[95.59011841 270.84799194]
[84.03134155 280.17163086]
[82.69310760 295.11181641]
[81.35487366 310.05200195]
[94.36367798 302.58398438]
[108.36867523 307.95614624]
[113.04591370 322.20828247]
[104.94749451 334.83425903]
[90.04327393 336.52670288]
[79.32066345 326.03952026]
[76.87493896 340.83877563]
[74.42920685 355.63806152]
[71.98348236 370.43731689]
[69.53775787 385.23660278]
[67.09202576 400.03585815]
[81.61309052 403.83892822]
[95.72130585 408.96563721]
[109.29629517 415.37222290]
[122.22224426 423.00402832]
[134.38887024 431.79595947]
[145.69236755 441.67297363]
[156.03630066 452.55081177]
[165.33242798 464.33670044]
[173.50140381 476.93002319]
[180.47357178 490.22341919]
[186.18940735 504.10339355]
[190.60017395 518.45153809]
[193.66822815 533.14550781]
[195.36740112 548.05981445]
[195.68318176 563.06732178]
[194.61288452 578.03991699]
[192.16563416 592.84991455]
[188.36231995 607.37091064]
[183.23539734 621.47906494]
[176.82858276 635.05389404]
[169.19656372 647.97973633]
[160.40443420 660.14624023]
[150.52723694 671.44958496]
[139.64921570 681.79333496]
[127.86318207 691.08923340]
[115.26969910 699.25799561]
[101.97621155 706.22991943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 172]
[46 171]
[47 170]
[50 167]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[64 161]
[65 160]
[67 158]
[69 156]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[79 150]
[80 149]
[81 148]
[83 146]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
