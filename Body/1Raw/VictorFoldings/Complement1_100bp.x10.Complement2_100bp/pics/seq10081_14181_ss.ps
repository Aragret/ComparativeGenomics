%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[48.92491531 466.21011353]
[38.26043320 476.76470947]
[26.99491119 486.67523193]
[15.16717815 495.90750122]
[2.81800914 504.42974854]
[-10.01002598 512.21252441]
[-23.27270508 519.22906494]
[-36.92430878 525.45520020]
[-50.91778183 530.86932373]
[-65.20487976 535.45294189]
[-79.73635101 539.19018555]
[-94.46210480 542.06811523]
[-109.33137512 544.07690430]
[-124.29291534 545.20953369]
[-139.29513550 545.46221924]
[-154.28633118 544.83398438]
[-169.21481323 543.32702637]
[-184.02911377 540.94659424]
[-198.67819214 537.70080566]
[-213.11152649 533.60089111]
[-227.27937317 528.66101074]
[-241.13288879 522.89813232]
[-254.62431335 516.33215332]
[-267.70715332 508.98571777]
[-280.33627319 500.88415527]
[-292.46817017 492.05535889]
[-304.06103516 482.52981567]
[-315.07485962 472.34030151]
[-325.47171021 461.52200317]
[-335.21575928 450.11215210]
[-344.27337646 438.15014648]
[-352.61334229 425.67715454]
[-360.20693970 412.73620605]
[-367.02798462 399.37194824]
[-373.05291748 385.63037109]
[-378.26104736 371.55892944]
[-382.63433838 357.20605469]
[-386.15777588 342.62127686]
[-388.81918335 327.85485840]
[-390.60940552 312.95767212]
[-391.52224731 297.98110962]
[-391.55459595 282.97680664]
[-390.70629883 267.99645996]
[-388.98031616 253.09172058]
[-386.38256836 238.31394958]
[-382.92202759 223.71412659]
[-378.61062622 209.34254456]
[-373.46319580 195.24876404]
[-367.49752808 181.48136902]
[-360.73416138 168.08781433]
[-353.19641113 155.11427307]
[-344.91027832 142.60545349]
[-335.90429688 130.60450745]
[-326.20953369 119.15277863]
[-315.85940552 108.28975677]
[-304.88958740 98.05287933]
[-293.33789062 88.47744751]
[-281.24417114 79.59645844]
[-268.65005493 71.44052887]
[-255.59901428 64.03778076]
[-242.13601685 57.41372681]
[-228.30746460 51.59120178]
[-214.16104126 46.59028244]
[-199.74551392 42.42820740]
[-185.11056519 39.11931610]
[-170.30664062 36.67502594]
[-155.38479614 35.10375214]
[-140.39645386 34.41091919]
[-125.39328003 34.59891510]
[-110.42700195 35.66708755]
[-95.54920959 37.61175537]
[-80.81118774 40.42621994]
[-66.26374054 44.10077286]
[-51.95702362 48.62274933]
[-37.94034576 53.97655869]
[-24.26203537 60.14374924]
[-10.96923733 67.10306549]
[1.89222240 74.83050537]
[14.27800751 83.29943848]
[26.14542198 92.48066711]
[37.45355606 102.34253693]
[48.16342545 112.85106659]
[58.23811340 123.97002411]
[69.92569733 114.56787109]
[81.61327362 105.16571808]
[83.27862549 90.77221680]
[94.56845856 81.69004059]
[108.98457336 83.14669800]
[120.67215729 73.74455261]
[125.39718628 65.92713928]
[132.60446167 64.29097748]
[144.43072510 55.06388092]
[156.25700378 45.83678055]
[168.08326721 36.60968399]
[179.90953064 27.38258362]
[191.73580933 18.15548706]
[183.44845581 5.64356422]
[176.15562439 -7.47294378]
[169.90113831 -21.11515236]
[164.72265625 -35.20101547]
[160.65129089 -49.64581680]
[157.71153259 -64.36268616]
[155.92106628 -79.26310730]
[155.29067993 -94.25746918]
[155.82412720 -109.25559235]
[157.51821899 -124.16728210]
[160.36277771 -138.90284729]
[164.34068298 -153.37365723]
[169.42800903 -167.49270630]
[175.59416199 -181.17506409]
[182.80204773 -194.33843994]
[191.00834656 -206.90367126]
[200.16366577 -218.79519653]
[210.21298218 -229.94148254]
[221.09582520 -240.27551270]
[232.74674988 -249.73510742]
[245.09570312 -258.26339722]
[258.06838989 -265.80908203]
[271.58682251 -272.32681274]
[285.56967163 -277.77731323]
[299.93286133 -282.12789917]
[314.58996582 -285.35232544]
[329.45291138 -287.43124390]
[344.43222046 -288.35214233]
[359.43786621 -288.10946655]
[374.37960815 -286.70471191]
[389.16751099 -284.14630127]
[403.71270752 -280.44961548]
[417.92770386 -275.63687134]
[431.72702026 -269.73709106]
[445.02761841 -262.78567505]
[457.74954224 -254.82444763]
[469.81628418 -245.90132141]
[481.15524292 -236.06993103]
[491.69824219 -225.38941956]
[501.38189697 -213.92401123]
[510.14791870 -201.74267578]
[517.94360352 -188.91867065]
[524.72210693 -175.52911377]
[530.44262695 -161.65452576]
[535.07073975 -147.37835693]
[538.57867432 -132.78648376]
[540.94525146 -117.96665192]
[542.15631104 -103.00798798]
[542.20452881 -88.00045013]
[541.08959961 -73.03431702]
[538.81829834 -58.19958115]
[535.40423584 -43.58546448]
[530.86791992 -29.27986145]
[525.23663330 -15.36880970]
[518.54431152 -1.93597150]
[510.83117676 10.93786621]
[502.14361572 23.17527580]
[492.53384399 34.70265961]
[482.05966187 45.45069504]
[470.78411865 55.35473251]
[458.77496338 64.35520935]
[446.10446167 72.39800262]
[432.84878540 79.43473053]
[419.08767700 85.42308044]
[404.90390015 90.32703400]
[390.38275146 94.11710358]
[375.61157227 96.77048492]
[360.67916870 98.27122498]
[345.67541504 98.61030579]
[330.69046021 97.78567505]
[315.81448364 95.80229187]
[301.13696289 92.67209625]
[286.74612427 88.41390991]
[272.72854614 83.05334473]
[259.16851807 76.62262726]
[246.14759827 69.16044617]
[233.74411011 60.71167374]
[222.03263855 51.32712936]
[211.08361816 41.06324387]
[200.96290588 29.98175621]
[189.13664246 39.20885468]
[177.31036377 48.43595123]
[165.48410034 57.66305161]
[153.65782166 66.89015198]
[141.83155823 76.11724854]
[130.07431030 85.43212891]
[118.38672638 94.83428192]
[116.72137451 109.22778320]
[105.43154144 118.30995941]
[91.01542664 116.85330200]
[79.32784271 126.25544739]
[67.64026642 135.65760803]
[76.34291840 147.88029480]
[84.31324768 160.59266663]
[91.52378082 173.75088501]
[97.94966125 187.30958557]
[103.56873322 201.22204590]
[108.36162567 215.44030762]
[112.31182098 229.91532898]
[115.40570068 244.59722900]
[117.63260651 259.43542480]
[118.98484802 274.37869263]
[119.45777130 289.37557983]
[119.04974365 304.37438965]
[117.76216888 319.32339478]
[115.59949493 334.17105103]
[112.56917572 348.86621094]
[108.68164825 363.35821533]
[103.95031738 377.59707642]
[98.39150238 391.53369141]
[92.02435303 405.12008667]
[84.87081909 418.30938721]
[76.95557404 431.05612183]
[68.30588531 443.31637573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 188]
[84 187]
[85 186]
[88 183]
[89 182]
[91 181]
[92 180]
[93 179]
[94 178]
[95 177]
[96 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
