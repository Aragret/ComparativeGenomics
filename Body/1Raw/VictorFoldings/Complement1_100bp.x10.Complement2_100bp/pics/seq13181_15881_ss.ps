%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[62.90787506 542.65100098]
[59.48839569 527.99182129]
[59.09013748 512.94433594]
[61.72940063 498.12478638]
[67.29811096 484.13998413]
[75.56824493 471.56265259]
[86.20112610 460.90774536]
[98.76136017 452.61166382]
[112.73461151 447.01403809]
[110.06881714 432.25283813]
[107.40302277 417.49160767]
[104.73722839 402.73037720]
[102.07143402 387.96917725]
[99.29582214 373.22821045]
[96.41054535 358.50833130]
[90.85811615 372.44284058]
[79.86833191 382.65185547]
[65.56313324 387.16424561]
[50.70465088 385.10867310]
[38.16180801 376.88204956]
[30.35644150 364.07284546]
[28.79563904 349.15426636]
[33.78076935 335.00686646]
[44.34928513 324.36230469]
[58.46056366 319.27587891]
[73.38994598 320.72970581]
[86.25479889 328.44302368]
[94.57157898 340.92776489]
[94.34825134 325.92944336]
[94.12492371 310.93109131]
[93.90159607 295.93276978]
[93.67826843 280.93441772]
[93.45494080 265.93609619]
[93.23161316 250.93774414]
[93.00828552 235.93940735]
[85.08235168 223.32873535]
[92.61332703 209.41490173]
[89.37059021 202.77363586]
[92.50000000 194.19198608]
[92.50000000 179.19198608]
[92.50000000 164.19198608]
[92.50000000 149.19198608]
[84.76270294 136.46472168]
[92.50000000 122.66454315]
[80.64824677 113.98002625]
[76.12675476 100.00000000]
[80.64824677 86.01997375]
[92.50000000 77.33545685]
[92.50000000 62.33545303]
[92.50000000 47.33545303]
[85.07703400 60.37000656]
[73.49285889 69.89927673]
[59.27157974 74.66951752]
[44.28424835 74.05313873]
[30.50270844 68.13121796]
[19.74015427 57.68289566]
[13.41258717 44.08282471]
[12.35250759 29.12033272]
[16.69938660 14.76398659]
[25.88131714 2.90261436]
[38.69025803 -4.90321732]
[53.44097519 -7.62651682]
[68.19275665 -4.90898800]
[81.00475311 2.89183211]
[90.19132233 14.74961185]
[94.54408264 29.10662079]
[97.86634064 14.47916031]
[101.18859863 -0.14830029]
[104.51085663 -14.77576065]
[107.83312225 -29.40322113]
[111.15538025 -44.03068161]
[106.66675568 -59.20180130]
[117.03078461 -69.89929199]
[120.35304260 -84.52674866]
[123.45715332 -99.20204926]
[126.34242249 -113.92194366]
[129.22769165 -128.64183044]
[132.11297607 -143.36172485]
[130.41963196 -148.29930115]
[130.75596619 -152.92965698]
[132.66503906 -156.53111267]
[135.46975708 -158.66790771]
[139.00942993 -173.24429321]
[142.54910278 -187.82066345]
[143.77607727 -202.77040100]
[142.66043091 -217.72885132]
[141.54478455 -232.68730164]
[140.42913818 -247.64575195]
[139.31349182 -262.60421753]
[124.40431976 -264.73278809]
[110.30145264 -270.01702881]
[97.66451263 -278.20980835]
[87.08454895 -288.92794800]
[79.05639648 -301.67013550]
[73.95555878 -315.84036255]
[72.02060699 -330.77587891]
[73.34204102 -345.77813721]
[77.85804749 -360.14544678]
[85.35742188 -373.20584106]
[95.48939514 -384.34841919]
[107.78007507 -393.05206299]
[121.65460205 -398.90966797]
[136.46405029 -401.64724731]
[151.51574707 -401.13681030]
[166.10569763 -397.40216064]
[179.55149841 -390.61804199]
[191.22427368 -381.10171509]
[200.57806396 -369.29830933]
[207.17538452 -355.75985718]
[210.70764160 -341.11959839]
[211.00964355 -326.06228638]
[208.06727600 -311.29214478]
[202.01814270 -297.50006104]
[193.14515686 -285.33105469]
[181.86335754 -275.35433960]
[168.70039368 -268.03652954]
[154.27194214 -263.71984863]
[155.38758850 -248.76141357]
[156.50323486 -233.80294800]
[157.61888123 -218.84449768]
[158.73452759 -203.88604736]
[164.48919678 -217.73826599]
[173.72425842 -229.55830383]
[185.77304077 -238.49288940]
[199.76574707 -243.89700317]
[214.69219971 -245.38053894]
[229.47486877 -242.83638000]
[243.04656982 -236.44819641]
[254.42755127 -226.67715454]
[262.79623413 -214.22865295]
[267.54843140 -200.00132751]
[268.34109497 -185.02229309]
[265.11703491 -170.37287903]
[258.10894775 -157.11064148]
[247.82278442 -146.19299316]
[235.00111389 -138.40809631]
[220.56953430 -134.31794739]
[205.56985474 -134.21781921]
[191.08496094 -138.11492920]
[178.16047668 -145.72795105]
[167.72947693 -156.50727844]
[160.54496765 -169.67477417]
[157.12547302 -184.28099060]
[153.58580017 -169.70462036]
[150.04612732 -155.12823486]
[146.83285522 -140.47645569]
[143.94758606 -125.75656128]
[141.06231689 -111.03667450]
[138.17704773 -96.31678009]
[140.05072021 -91.92378998]
[139.18463135 -86.30712128]
[134.98049927 -81.20449066]
[131.65824890 -66.57703400]
[136.38449097 -52.45216370]
[125.78283691 -40.70841980]
[122.46057892 -26.08096123]
[119.13832092 -11.45350075]
[115.81606293 3.17395926]
[112.49379730 17.80142021]
[109.17153931 32.42887878]
[107.50000000 47.33545303]
[107.50000000 62.33545303]
[107.50000000 77.33545685]
[119.35175323 86.01997375]
[123.87324524 100.00000000]
[119.35175323 113.98002625]
[107.50000000 122.66454315]
[115.23729706 136.46472168]
[107.50000000 149.19198608]
[107.50000000 164.19198608]
[107.50000000 179.19198608]
[107.50000000 194.19198608]
[107.61166382 209.19157410]
[115.55357361 222.87501526]
[108.00662231 235.71607971]
[108.22994995 250.71441650]
[108.45327759 265.71276855]
[108.67660522 280.71109009]
[108.89993286 295.70944214]
[109.12326050 310.70776367]
[109.34658813 325.70611572]
[109.56991577 340.70443726]
[111.13043976 355.62304688]
[114.01570892 370.34292603]
[118.73737335 378.16238403]
[116.83264923 385.30337524]
[119.49844360 400.06460571]
[122.16423798 414.82580566]
[124.83003235 429.58703613]
[127.49582672 444.34823608]
[142.54434204 444.70468140]
[157.21299744 448.08340454]
[170.90109253 454.34603882]
[183.04812622 463.23617554]
[193.15669250 474.38973999]
[200.81283569 487.35000610]
[205.70306396 501.58624268]
[207.62709045 516.51550293]
[206.50616455 531.52642822]
[202.38615417 546.00439453]
[195.43580627 559.35644531]
[185.93969727 571.03582764]
[174.28671265 580.56439209]
[160.95402527 587.55181885]
[146.48760986 591.71203613]
[131.47984314 592.87469482]
[116.54528046 590.99218750]
[102.29550171 586.14154053]
[89.31401062 578.52142334]
[78.13240051 568.44390869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[14 184]
[15 183]
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[37 173]
[39 172]
[40 171]
[41 170]
[42 169]
[44 167]
[48 163]
[49 162]
[50 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[73 153]
[74 152]
[75 149]
[76 148]
[77 147]
[78 146]
[82 145]
[83 144]
[84 143]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
