%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[98.28604889 692.82623291]
[86.47319031 683.57019043]
[75.39419556 673.44732666]
[65.11251068 662.51550293]
[55.68703842 650.83740234]
[47.17176437 638.47991943]
[39.61546326 625.51385498]
[33.06142044 612.01336670]
[27.54717445 598.05590820]
[23.10431290 583.72143555]
[19.75828171 569.09191895]
[17.52825165 554.25128174]
[16.42699051 539.28454590]
[16.46081161 524.27734375]
[17.62951660 509.31564331]
[19.92641449 494.48522949]
[23.33834648 479.87097168]
[27.84576988 465.55664062]
[33.42286682 451.62417603]
[40.03769302 438.15341187]
[47.65235519 425.22149658]
[56.22323990 412.90252686]
[65.70124817 401.26702881]
[76.03209686 390.38168335]
[87.15661621 380.30880737]
[99.01107025 371.10614014]
[111.52756500 362.82635498]
[124.63440704 355.51690674]
[138.25651550 349.21963501]
[133.00979614 335.16717529]
[127.76307678 321.11468506]
[122.51635742 307.06222534]
[114.00978088 319.41690063]
[99.05822754 320.62152100]
[88.68343353 309.78805542]
[90.53330994 294.90255737]
[103.24419403 286.93804932]
[117.44491577 291.76452637]
[113.25790405 277.36074829]
[109.07089233 262.95697021]
[104.88388062 248.55317688]
[100.69686890 234.14939880]
[97.39158630 248.78070068]
[89.33973694 261.43643188]
[77.48723602 270.62982178]
[63.22651672 275.28082275]
[48.23290634 274.84304810]
[34.26784134 269.36795044]
[22.97192192 259.49868774]
[15.67218304 246.39471436]
[13.22619057 231.59548950]
[15.92129707 216.83959961]
[23.44088364 203.86054993]
[34.90155792 194.18310547]
[48.95692825 188.94415283]
[63.95578766 188.75918579]
[78.13608551 193.64991760]
[89.83193207 203.04177856]
[97.66988373 215.83290100]
[97.00009918 200.84786987]
[96.33031464 185.86282349]
[95.66053009 170.87779236]
[94.99074554 155.89274597]
[94.32096100 140.90771484]
[93.65117645 125.92266846]
[92.98139191 110.93762970]
[91.86574554 95.97917938]
[90.30522156 81.06057739]
[88.74469757 66.14196777]
[87.18417358 51.22336578]
[77.67424011 42.50992584]
[76.68161011 30.05205727]
[84.19471741 20.57156372]
[82.85648346 5.63137865]
[81.51824951 -9.30880642]
[80.18001556 -24.24899101]
[78.84178162 -39.18917847]
[77.50354767 -54.12936020]
[76.16531372 -69.06954956]
[66.78617096 -77.92360687]
[65.97912598 -90.39487457]
[73.63255310 -99.76245880]
[72.51689911 -114.72090912]
[71.40125275 -129.67936707]
[70.28560638 -144.63781738]
[55.31676483 -146.06675720]
[40.80477524 -150.00506592]
[27.16717911 -156.33941650]
[14.79635048 -164.88754272]
[4.04822636 -175.40351868]
[-4.76794958 -187.58477783]
[-11.39851761 -201.08084106]
[-15.65270329 -215.50338745]
[-17.40810585 -230.43746948]
[-16.61421585 -245.45338440]
[-13.29388046 -260.11911011]
[-7.54262781 -274.01266479]
[0.47406512 -286.73431396]
[10.52554226 -297.91806030]
[22.32260323 -307.24206543]
[35.52582169 -314.43811035]
[49.75531769 -319.29913330]
[64.60167694 -321.68527222]
[79.63774109 -321.52786255]
[94.43089294 -318.83145142]
[108.55550385 -313.67361450]
[121.60517883 -306.20272827]
[133.20445251 -296.63378906]
[143.01960754 -285.24206543]
[150.76821899 -272.35537720]
[156.22734070 -258.34445190]
[159.23992920 -243.61242676]
[159.71928406 -228.58319092]
[157.65162659 -213.68913269]
[153.09643555 -199.35881042]
[146.18478394 -186.00451660]
[137.11552429 -174.01049805]
[126.14960480 -163.72183228]
[113.60253143 -155.43455505]
[99.83531189 -149.38710022]
[85.24405670 -145.75346375]
[86.35970306 -130.79501343]
[87.47535706 -115.83656311]
[88.59100342 -100.87810516]
[99.23871613 -86.92844391]
[91.10549927 -70.40778351]
[92.44373322 -55.46759415]
[93.78196716 -40.52741241]
[95.12020111 -25.58722496]
[96.45843506 -10.64704037]
[97.79666901 4.29314423]
[99.13490295 19.23332977]
[109.98912811 33.02291870]
[102.10277557 49.66284180]
[103.66329956 64.58144379]
[105.22382355 79.50005341]
[106.78434753 94.41865540]
[108.98084259 96.53169250]
[110.45703888 99.49063873]
[110.89813995 103.03025055]
[110.09175110 106.77271271]
[107.96643066 110.26784515]
[108.63621521 125.25288391]
[109.30599976 140.23793030]
[109.97578430 155.22296143]
[110.64556885 170.20800781]
[111.31535339 185.19303894]
[111.98513794 200.17808533]
[112.65492249 215.16311646]
[115.10065460 229.96238708]
[119.28766632 244.36616516]
[123.47467804 258.76995850]
[127.66168976 273.17373657]
[131.84869385 287.57751465]
[136.56883240 301.81552124]
[141.81555176 315.86798096]
[147.06227112 329.92044067]
[152.30899048 343.97293091]
[166.72489929 339.80172729]
[181.41499329 336.73275757]
[196.29510498 334.78356934]
[211.28002930 333.96530151]
[226.28392029 334.28271484]
[241.22082520 335.73394775]
[256.00521851 338.31066895]
[270.55236816 341.99816895]
[284.77899170 346.77526855]
[298.60357666 352.61465454]
[311.94692993 359.48284912]
[324.73263550 367.34054565]
[336.88745117 376.14266968]
[348.34176636 385.83886719]
[359.02993774 396.37356567]
[368.89080811 407.68643188]
[377.86782837 419.71267700]
[385.90960693 432.38339233]
[392.97006226 445.62603760]
[399.00878906 459.36471558]
[403.99118042 473.52075195]
[407.88867188 488.01303101]
[410.67898560 502.75860596]
[412.34609985 517.67297363]
[412.88046265 532.67071533]
[412.27905273 547.66589355]
[410.54525757 562.57263184]
[407.68908691 577.30560303]
[403.72683716 591.78033447]
[398.68121338 605.91394043]
[392.58114624 619.62548828]
[385.46151733 632.83642578]
[377.36318970 645.47106934]
[368.33248901 657.45703125]
[358.42117310 668.72570801]
[347.68597412 679.21252441]
[336.18844604 688.85742188]
[323.99438477 697.60516357]
[311.17367554 705.40557861]
[297.79974365 712.21405029]
[283.94921875 717.99157715]
[269.70138550 722.70501709]
[255.13787842 726.32745361]
[240.34213257 728.83807373]
[225.39888000 730.22247314]
[210.39372253 730.47283936]
[195.41261292 729.58758545]
[180.54135132 727.57189941]
[165.86512756 724.43725586]
[151.46800232 720.20166016]
[137.43244934 714.88940430]
[123.83886719 708.53076172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 158]
[30 157]
[31 156]
[32 155]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 137]
[68 136]
[69 135]
[70 134]
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[82 124]
[83 123]
[84 122]
[85 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
