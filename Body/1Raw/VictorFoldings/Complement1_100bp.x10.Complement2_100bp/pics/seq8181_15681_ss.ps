%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[136.50946045 884.56787109]
[121.64901733 882.51013184]
[106.88854218 879.82769775]
[92.25426483 876.52539062]
[77.77221680 872.60913086]
[63.46813583 868.08575439]
[49.36745834 862.96350098]
[35.49525833 857.25128174]
[21.87619400 850.95935059]
[8.53448296 844.09893799]
[-4.50615406 836.68212891]
[-17.22253227 828.72216797]
[-29.59203911 820.23321533]
[-41.59268570 811.23034668]
[-53.20313263 801.72955322]
[-64.40274048 791.74780273]
[-75.17159271 781.30273438]
[-85.49054718 770.41302490]
[-95.34124756 759.09796143]
[-104.70619202 747.37768555]
[-113.56872559 735.27301025]
[-121.91308594 722.80548096]
[-129.72444153 709.99731445]
[-136.98890686 696.87121582]
[-143.69355774 683.45050049]
[-149.82647705 669.75909424]
[-155.37677002 655.82135010]
[-160.33454895 641.66198730]
[-164.69102478 627.30621338]
[-168.43843079 612.77954102]
[-171.57009888 598.10778809]
[-174.08049011 583.31707764]
[-175.96511841 568.43371582]
[-177.22064209 553.48406982]
[-177.84481812 538.49487305]
[-177.83654785 523.49261475]
[-177.19583130 508.50405884]
[-175.92382812 493.55584717]
[-174.02279663 478.67456055]
[-171.49610901 463.88662720]
[-168.34825134 449.21835327]
[-164.58482361 434.69583130]
[-160.21252441 420.34484863]
[-155.23913574 406.19097900]
[-149.67347717 392.25933838]
[-143.52546692 378.57470703]
[-136.80601501 365.16140747]
[-129.52708435 352.04333496]
[-121.70161438 339.24377441]
[-113.34350586 326.78546143]
[-104.46763611 314.69058228]
[-95.08976746 302.98065186]
[-85.22659302 291.67645264]
[-74.89563751 280.79809570]
[-64.11528015 270.36492920]
[-52.90467072 260.39550781]
[-41.28375244 250.90754700]
[-29.27318573 241.91792297]
[-16.89432526 233.44261169]
[-4.16917849 225.49667358]
[8.87962914 218.09426880]
[22.22889709 211.24851990]
[35.85488892 204.97161865]
[49.73338318 199.27473450]
[63.83969879 194.16798401]
[78.14875793 189.66043091]
[92.63511658 185.76011658]
[107.27302551 182.47396851]
[104.60723114 167.71275330]
[101.94143677 152.95153809]
[99.27564240 138.19032288]
[84.72882080 135.01165771]
[72.50261688 126.51261902]
[64.45491791 113.98471069]
[61.80866241 99.33168793]
[64.96597290 84.78022003]
[73.44705963 72.54154968]
[85.96314240 64.47547913]
[83.29734802 49.71426010]
[80.63155365 34.95304489]
[77.96575928 20.19182587]
[67.89906311 7.98640776]
[73.25130463 -5.91333151]
[70.58551025 -20.67454910]
[55.53832245 -20.93605423]
[40.83134460 -24.12839317]
[27.02987289 -30.12886047]
[14.66440010 -38.70681381]
[4.21021986 -49.53253937]
[-3.93083501 -62.18992996]
[-9.44584465 -76.19245911]
[-12.12282753 -91.00191498]
[-11.85888672 -106.04906464]
[-8.66416740 -120.75552368]
[-2.66146588 -134.55601501]
[5.91848898 -146.92010498]
[16.74590683 -157.37252808]
[29.40461349 -165.51153564]
[43.40803528 -171.02429199]
[58.21792603 -173.69886780]
[73.26502991 -173.43249512]
[87.97097015 -170.23539734]
[101.77050018 -164.23045349]
[114.13319397 -155.64849854]
[124.58386993 -144.81939697]
[132.72082520 -132.15937805]
[138.23130798 -118.15505219]
[140.90348816 -103.34473419]
[140.63468933 -88.29767609]
[137.43519592 -73.59224701]
[131.42803955 -59.79368973]
[122.84407806 -47.43238449]
[112.01327515 -36.98346329]
[99.35193634 -28.84855461]
[85.34672546 -23.34034348]
[88.01251984 -8.57912731]
[97.88854218 2.57047081]
[92.72697449 17.52603149]
[95.39276886 32.28724670]
[98.05856323 47.04846573]
[100.72435760 61.80968094]
[115.27117920 64.98834229]
[127.49738312 73.48738098]
[135.54508972 86.01528931]
[138.19134521 100.66831207]
[135.03402710 115.21977997]
[126.55294037 127.45845032]
[114.03685760 135.52452087]
[116.70265198 150.28573608]
[119.36844635 165.04695129]
[122.03424072 179.80816650]
[136.89692688 177.76667786]
[151.83245850 176.35356140]
[166.81430054 175.57131958]
[181.81578064 175.42137146]
[196.81025696 175.90396118]
[211.77105713 177.01823425]
[226.67158508 178.76222229]
[241.48533630 181.13281250]
[256.18600464 184.12579346]
[270.74740601 187.73582458]
[285.14367676 191.95652771]
[299.34924316 196.78036499]
[313.33880615 202.19877625]
[327.08749390 208.20211792]
[340.57092285 214.77972412]
[353.76504517 221.91990662]
[366.64642334 229.60995483]
[379.19219971 237.83619690]
[391.38000488 246.58401489]
[403.18820190 255.83784485]
[414.59579468 265.58126831]
[425.58251953 275.79690552]
[436.12878418 286.46664429]
[446.21588135 297.57147217]
[455.82589722 309.09167480]
[464.94168091 321.00674438]
[473.54708862 333.29553223]
[481.62677002 345.93618774]
[489.16641235 358.90618896]
[496.15255737 372.18252563]
[502.57281494 385.74154663]
[508.41577148 399.55917358]
[513.67102051 413.61087036]
[518.32922363 427.87158203]
[522.38208008 442.31600952]
[525.82244873 456.91842651]
[528.64416504 471.65292358]
[530.84222412 486.49325562]
[532.41265869 501.41308594]
[533.35278320 516.38580322]
[533.66082764 531.38488770]
[533.33630371 546.38360596]
[532.37982178 561.35534668]
[530.79296875 576.27343750]
[528.57867432 591.11132812]
[525.74078369 605.84271240]
[522.28442383 620.44140625]
[518.21575928 634.88134766]
[513.54187012 649.13696289]
[508.27124023 663.18286133]
[502.41314697 676.99407959]
[495.97802734 690.54608154]
[488.97732544 703.81469727]
[481.42349243 716.77648926]
[473.32992554 729.40820312]
[464.71105957 741.68756104]
[455.58221436 753.59265137]
[445.95959473 765.10229492]
[435.86032104 776.19610596]
[425.30233765 786.85424805]
[414.30444336 797.05786133]
[402.88616943 806.78875732]
[391.06784058 816.02960205]
[378.87042236 824.76403809]
[366.31567383 832.97656250]
[353.42584229 840.65246582]
[340.22390747 847.77819824]
[326.73327637 854.34100342]
[312.97799683 860.32928467]
[298.98251343 865.73229980]
[284.77166748 870.54058838]
[270.37078857 874.74548340]
[255.80541992 878.33959961]
[241.10150146 881.31640625]
[226.28514099 883.67077637]
[211.38272095 885.39843750]
[196.42070007 886.49627686]
[181.42572021 886.96246338]
[166.42439270 886.79602051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 131]
[69 130]
[70 129]
[71 128]
[78 121]
[79 120]
[80 119]
[81 118]
[83 116]
[84 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
