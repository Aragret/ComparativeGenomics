%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[93.39839172 362.38958740]
[97.00286102 377.04122925]
[96.69142151 392.12649536]
[92.48530579 406.61685181]
[84.67128754 419.52435303]
[73.78215790 429.96893311]
[60.56033325 437.23846436]
[45.90731430 440.83728027]
[30.82216454 440.52001953]
[16.33341408 436.30828857]
[3.42892957 428.48928833]
[-7.01143980 417.59613037]
[-14.27585125 404.37152100]
[-17.86900711 389.71710205]
[-17.54591751 374.63208008]
[-13.32861233 360.14495850]
[-5.50463533 347.24349976]
[5.39256287 336.80731201]
[18.61999321 329.54800415]
[33.27578735 325.96051025]
[48.36068726 326.28942871]
[52.54769897 311.88565063]
[56.73471069 297.48187256]
[60.92172241 283.07809448]
[65.10873413 268.67431641]
[61.23158646 254.29316711]
[72.51344299 243.20127869]
[76.59310913 228.76672363]
[80.56520844 214.30220032]
[79.29749298 211.80198669]
[78.94376373 208.64897156]
[79.75761414 205.18876648]
[81.86298370 201.85231018]
[85.22827148 199.10844421]
[90.05427551 184.90599060]
[92.50000000 170.10671997]
[92.50000000 155.10671997]
[92.50000000 140.10671997]
[92.50000000 125.10671997]
[92.50000000 110.10671997]
[92.16502380 95.11045837]
[91.49523926 80.12541962]
[90.82545471 65.14038086]
[90.15567017 50.15534592]
[89.48588562 35.17030716]
[88.70455933 20.19066811]
[87.81174469 5.21726322]
[86.91893005 -9.75614262]
[83.48786926 -24.35846519]
[77.61890411 -38.16264343]
[71.74994659 -51.96681976]
[65.88098907 -65.77099609]
[53.36100388 -75.44367218]
[55.50175095 -90.18363190]
[49.63278961 -103.98780823]
[43.76382828 -117.79198456]
[37.89486694 -131.59616089]
[32.36532211 -117.65255737]
[19.22688484 -110.41505432]
[4.48627567 -113.19253540]
[-5.11730003 -124.71517944]
[-5.19321537 -139.71498108]
[4.29323673 -151.33424377]
[19.00497818 -154.26078796]
[32.21723938 -147.15525818]
[27.81624031 -161.49511719]
[23.41524315 -175.83496094]
[19.01424408 -190.17480469]
[4.25624990 -187.40322876]
[-10.71926880 -186.30148315]
[-25.72397995 -186.88343811]
[-40.56918335 -189.14173889]
[-55.06818390 -193.04801941]
[-69.03864288 -198.55313110]
[-82.30486298 -205.58786011]
[-94.70001221 -214.06372070]
[-106.06820679 -223.87413025]
[-116.26647949 -234.89570618]
[-125.16658020 -246.98985291]
[-132.65657043 -260.00445557]
[-138.64227295 -273.77587891]
[-143.04838562 -288.13085938]
[-145.81951904 -302.88894653]
[-146.92082214 -317.86450195]
[-146.33842468 -332.86920166]
[-144.07966614 -347.71432495]
[-140.17295837 -362.21319580]
[-134.66743469 -376.18350220]
[-127.63230896 -389.44952393]
[-119.15607452 -401.84442139]
[-109.34532166 -413.21231079]
[-98.32343292 -423.41024780]
[-86.22902679 -432.30999756]
[-73.21419525 -439.79959106]
[-59.44261551 -445.78488159]
[-45.08747864 -450.19058228]
[-30.32931900 -452.96127319]
[-15.35373497 -454.06210327]
[-0.34905857 -453.47927856]
[14.49600887 -451.22006226]
[28.99477577 -447.31292725]
[42.96490479 -441.80697632]
[56.23070526 -434.77145386]
[68.62535095 -426.29486084]
[79.99295807 -416.48376465]
[90.19057465 -405.46157837]
[99.08994293 -393.36688232]
[106.57916260 -380.35183716]
[112.56403351 -366.58007812]
[116.96929169 -352.22482300]
[119.73954010 -337.46658325]
[120.83994293 -322.49096680]
[120.25665283 -307.48629761]
[117.99701691 -292.64129639]
[114.08943939 -278.14263916]
[108.58306885 -264.17266846]
[101.54714966 -250.90708923]
[93.07017517 -238.51269531]
[83.25874329 -227.14538574]
[72.23625183 -216.94810486]
[60.14130783 -208.04908752]
[47.12602997 -200.56025696]
[33.35409164 -194.57580566]
[37.75508881 -180.23596191]
[42.15608597 -165.89611816]
[46.55708694 -151.55625916]
[51.69904327 -137.46511841]
[57.56800461 -123.66094208]
[63.43696594 -109.85676575]
[69.30593109 -96.05258942]
[81.40612030 -87.36728668]
[79.68516541 -71.63995361]
[85.55412292 -57.83578110]
[91.42308807 -44.03160095]
[97.29204559 -30.22742653]
[98.18740845 -45.20067978]
[102.72966003 -59.49641037]
[110.64104462 -72.24043274]
[121.43776703 -82.65343475]
[134.45960999 -90.09867096]
[148.91029358 -94.12085724]
[163.90612793 -94.47402954]
[178.53013611 -91.13659668]
[191.88804626 -84.31263733]
[203.16300964 -74.41945648]
[211.66557312 -62.06200409]
[216.87577820 -47.99595642]
[218.47503662 -33.08145523]
[216.36555481 -18.23052597]
[210.67631531 -4.35131121]
[201.75523376 7.70747137]
[190.14782715 17.20842361]
[176.56388855 23.57055473]
[161.83409119 26.40482330]
[146.85917664 25.53790855]
[132.55484009 21.02282333]
[119.79580688 13.13566875]
[109.36230469 2.35874581]
[101.89233398 -10.64895821]
[102.78514862 4.32444715]
[103.67796326 19.29785347]
[107.21401978 25.78770065]
[104.47092438 34.50052261]
[105.14070892 49.48556137]
[105.81049347 64.47059631]
[106.48027802 79.45563507]
[107.15006256 94.44067383]
[109.59850311 97.42019653]
[110.72171783 101.46447754]
[110.07363892 105.95747375]
[107.50000000 110.10671997]
[107.50000000 125.10671997]
[107.50000000 140.10671997]
[107.50000000 155.10671997]
[107.50000000 170.10671997]
[114.21976471 156.69610596]
[124.14169312 145.44641113]
[136.60768127 137.10382080]
[150.79092407 132.22163391]
[165.75068665 131.12368774]
[180.49475098 133.88281250]
[194.04518127 140.31599426]
[205.50323486 149.99653625]
[214.10894775 162.28236389]
[219.29151917 176.35862732]
[220.70721436 191.29167175]
[218.26214600 206.09104919]
[212.11846924 219.77516174]
[202.68368530 231.43641663]
[190.58355713 240.30134583]
[176.62065125 245.78196716]
[161.72106934 247.51478577]
[146.87306213 245.38485718]
[133.06143188 239.53346252]
[121.20226288 230.34869385]
[112.08212280 218.43974304]
[106.30591583 204.59649658]
[104.25672913 189.73199463]
[99.43073273 203.93444824]
[95.02973175 218.27429199]
[91.05764008 232.73881531]
[91.80285645 241.84280396]
[86.91722870 247.38829041]
[90.49488831 262.79968262]
[79.51251221 272.86132812]
[75.32550049 287.26510620]
[71.13848877 301.66888428]
[66.95147705 316.07266235]
[62.76446915 330.47644043]
[75.67498779 338.28546143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 209]
[22 208]
[23 207]
[24 206]
[25 205]
[27 203]
[28 201]
[29 200]
[34 199]
[35 198]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 161]
[47 160]
[48 159]
[49 135]
[50 134]
[51 133]
[52 132]
[54 130]
[55 129]
[56 128]
[57 127]
[65 126]
[66 125]
[67 124]
[68 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
