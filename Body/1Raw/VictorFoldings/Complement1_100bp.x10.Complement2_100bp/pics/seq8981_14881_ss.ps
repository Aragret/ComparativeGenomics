%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[79.87950897 647.49450684]
[67.56478119 638.53527832]
[59.96438217 625.33856201]
[58.39513016 610.19067383]
[63.12889862 595.71618652]
[73.34554291 584.42285156]
[87.27495575 578.26721191]
[87.27495575 563.26721191]
[87.27495575 548.26721191]
[87.27495575 533.26721191]
[79.53765869 520.53997803]
[87.27495575 506.73980713]
[75.02313232 500.70574951]
[66.52558899 489.92980957]
[63.48543549 476.47967529]
[66.55155182 462.96755981]
[75.18119049 452.04302979]
[87.73498535 445.87332153]
[87.95831299 430.87500000]
[88.18164062 415.87664795]
[88.40496826 400.87832642]
[88.62829590 385.87997437]
[88.85162354 370.88165283]
[89.07495117 355.88330078]
[86.89469910 353.11224365]
[85.94831848 349.14746094]
[86.78224182 344.58041382]
[89.65808868 340.22421265]
[90.55090332 325.25079346]
[76.81267548 320.93966675]
[64.50054169 313.45578003]
[54.33496857 303.23175049]
[46.91207504 290.86065674]
[42.66869354 277.06176758]
[41.85664749 262.63854980]
[44.52783203 248.43194580]
[50.53090668 235.27143860]
[59.51987457 223.92646790]
[70.97399902 215.06155396]
[84.22800446 209.19732666]
[98.51068878 206.67997742]
[99.62634277 191.72151184]
[99.51467133 176.72193909]
[98.17643738 161.78175354]
[96.83820343 146.84156799]
[95.49996948 131.90138245]
[86.65805054 119.91514587]
[93.13330841 105.47971344]
[90.96851349 103.33421326]
[89.53653717 100.35361481]
[89.14818573 96.80782318]
[90.01020050 93.07778931]
[92.18732452 89.61468506]
[91.74072266 74.62133026]
[83.59597015 61.05764771]
[90.95089722 48.10564804]
[82.80614471 34.54196167]
[90.16107941 21.58996582]
[89.71446991 6.59661531]
[89.26786804 -8.39673424]
[88.82125854 -23.39008522]
[88.37465668 -38.38343430]
[87.92804718 -53.37678528]
[87.48144531 -68.37013245]
[78.64592743 -77.76675415]
[78.58261871 -90.26394653]
[86.78004456 -99.15938568]
[86.55671692 -114.15772247]
[86.22174072 -129.15397644]
[78.07698822 -142.71766663]
[85.43192291 -155.66966248]
[84.98531342 -170.66300964]
[84.53871155 -185.65635681]
[84.09210205 -200.64971924]
[83.64549255 -215.64306641]
[70.22649384 -222.98320007]
[62.33532333 -235.96881104]
[62.00567627 -251.06045532]
[69.22597504 -264.20288086]
[81.96933746 -271.91470337]
[81.52272797 -286.90805054]
[81.07612610 -301.90139771]
[80.62951660 -316.89477539]
[72.48476410 -330.45843506]
[79.83969879 -343.41043091]
[79.39308929 -358.40380859]
[78.94648743 -373.39715576]
[78.49987793 -388.39050293]
[63.63593674 -390.70950317]
[49.45127106 -395.72048950]
[36.42901611 -403.25277710]
[25.01269913 -413.04983521]
[15.59115887 -424.77798462]
[8.48528767 -438.03775024]
[3.93710923 -452.37750244]
[2.10153294 -467.30886841]
[3.04107785 -482.32324219]
[6.72374344 -496.90927124]
[13.02409935 -510.57019043]
[21.72755814 -522.84063721]
[32.53768158 -533.30279541]
[45.08628464 -541.60021973]
[58.94596100 -547.45031738]
[73.64466095 -550.65386963]
[88.68174744 -551.10180664]
[103.54506683 -548.77880859]
[117.72837830 -543.76397705]
[130.74861145 -536.22814941]
[142.16227722 -526.42803955]
[151.58065796 -514.69738770]
[158.68295288 -501.43566895]
[163.22726440 -487.09469604]
[165.05882263 -472.16284180]
[164.11523438 -457.14871216]
[160.42863464 -442.56365967]
[154.12458801 -428.90447998]
[145.41783142 -416.63635254]
[134.60488892 -406.17715454]
[122.05404663 -397.88308716]
[108.19279480 -392.03671265]
[93.49323273 -388.83709717]
[93.93983459 -373.84375000]
[94.38644409 -358.85040283]
[94.83304596 -343.85705566]
[102.94585419 -331.36578369]
[95.62287140 -317.34136963]
[96.06947327 -302.34802246]
[96.51608276 -287.35467529]
[96.96268463 -272.36132812]
[110.14247131 -265.42166138]
[118.13221741 -252.73229980]
[118.70143127 -237.64778137]
[111.59716797 -224.21549988]
[98.63884735 -216.08966064]
[99.08544922 -201.09631348]
[99.53205872 -186.10296631]
[99.97866058 -171.10961914]
[100.42527008 -156.11627197]
[108.53807831 -143.62500000]
[101.21508789 -129.60058594]
[104.55635071 -123.00833130]
[101.55505371 -114.38105011]
[101.77838135 -99.38271332]
[111.57691956 -84.82401276]
[102.47479248 -68.81674194]
[102.92140198 -53.82339096]
[103.36800385 -38.83003998]
[103.81461334 -23.83669090]
[104.26121521 -8.84333992]
[104.70782471 6.15000963]
[105.15442657 21.14336014]
[113.26723480 33.63462067]
[105.94425201 47.65904236]
[114.05706024 60.15030289]
[106.73406982 74.17472839]
[107.18067932 89.16807556]
[108.07349396 104.14147949]
[117.01113129 117.19633484]
[110.44015503 130.56314087]
[111.77838898 145.50332642]
[113.11662292 160.44351196]
[114.45485687 175.38369751]
[121.77383423 162.29048157]
[134.28855896 154.02113342]
[149.20318604 152.42308044]
[163.18576050 157.85331726]
[173.11254883 169.09870911]
[176.76586914 183.64701843]
[173.32955933 198.24810791]
[163.57131958 209.64006042]
[149.67114258 215.27787781]
[134.73435974 213.90206909]
[122.09791565 205.81999207]
[114.58479309 192.83717346]
[113.46914673 207.79562378]
[128.26144409 212.91244507]
[141.21968079 221.67201233]
[151.46667480 233.47441101]
[158.31057739 247.51400757]
[161.29159546 262.83441162]
[160.21284485 278.39367676]
[155.15336609 293.13504028]
[146.46232605 306.05889893]
[134.73500061 316.29034424]
[120.77193451 323.13861084]
[105.52431488 326.14361572]
[104.63150024 341.11703491]
[104.07328796 356.10662842]
[103.84996033 371.10498047]
[103.62663269 386.10330200]
[103.40330505 401.10165405]
[103.17997742 416.09997559]
[102.95664978 431.09832764]
[102.73332214 446.09664917]
[117.01464081 454.42947388]
[125.09867096 468.74533081]
[124.86143494 485.09036255]
[116.46236420 499.00482178]
[102.27495575 506.73980713]
[110.01226044 520.53997803]
[102.27495575 533.26721191]
[102.27495575 548.26721191]
[102.27495575 563.26721191]
[102.27495575 578.26721191]
[116.20437622 584.42285156]
[126.42102051 595.71618652]
[131.15478516 610.19067383]
[129.58554077 625.33856201]
[121.98513794 638.53527832]
[109.67041016 647.49450684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[12 199]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[28 187]
[29 186]
[41 175]
[42 174]
[43 162]
[44 161]
[45 160]
[46 159]
[48 157]
[53 156]
[54 155]
[56 153]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[67 143]
[68 142]
[69 140]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[80 129]
[81 128]
[82 127]
[83 126]
[85 124]
[86 123]
[87 122]
[88 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
