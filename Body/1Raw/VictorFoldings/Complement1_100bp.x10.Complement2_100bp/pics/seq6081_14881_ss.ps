%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[111.32779694 864.10003662]
[96.55693817 861.45977783]
[81.98101044 857.89721680]
[67.65754700 853.42639160]
[53.64307022 848.06506348]
[39.99288559 841.83435059]
[26.76087379 834.75878906]
[13.99924755 826.86639404]
[1.75837588 818.18823242]
[-9.91343307 808.75854492]
[-20.97011566 798.61462402]
[-31.36803436 787.79644775]
[-41.06615448 776.34674072]
[-50.02620316 764.31066895]
[-58.21281815 751.73577881]
[-65.59368896 738.67163086]
[-72.13968658 725.16979980]
[-77.82497406 711.28356934]
[-82.62712097 697.06774902]
[-86.52717590 682.57849121]
[-89.50973511 667.87292480]
[-91.56304169 653.00909424]
[-92.67897797 638.04565430]
[-92.85315704 623.04168701]
[-92.08487701 608.05639648]
[-90.37717438 593.14892578]
[-87.73679352 578.37805176]
[-84.17414856 563.80218506]
[-79.70330048 549.47869873]
[-74.34189606 535.46423340]
[-68.11109161 521.81408691]
[-61.03548431 508.58212280]
[-53.14299011 495.82055664]
[-44.46475983 483.57971191]
[-35.03504562 471.90795898]
[-24.89106369 460.85134888]
[-14.07284164 450.45346069]
[-2.62307787 440.75540161]
[9.41304016 431.79544067]
[21.98801231 423.60888672]
[35.05220795 416.22808838]
[48.55407333 409.68215942]
[62.44031525 403.99691772]
[76.65613556 399.19485474]
[91.14543152 395.29489136]
[105.85102081 392.31240845]
[120.71485901 390.25918579]
[119.59921265 375.30072021]
[118.48355865 360.34225464]
[117.03414154 345.41244507]
[115.25167847 330.51873779]
[113.46920776 315.62503052]
[111.68674469 300.73129272]
[102.49187469 289.01364136]
[108.53446198 274.39181519]
[106.64116669 259.51177979]
[104.63715363 244.64625549]
[102.63314056 229.78073120]
[100.48825073 227.97584534]
[98.92905426 225.21260071]
[98.32417297 221.70982361]
[98.95626068 217.81559753]
[100.97969055 213.97375488]
[99.86404419 199.01530457]
[98.74839783 184.05685425]
[90.08591461 171.94030762]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[82.87084198 75.20165253]
[89.64009857 61.93415833]
[88.30186462 46.99397278]
[86.74134064 32.07536697]
[85.18081665 17.15676117]
[83.62029266 2.23815727]
[74.48928070 -10.68218136]
[80.86051941 -24.14533997]
[79.29999542 -39.06394577]
[77.73947144 -53.98254776]
[68.60845947 -66.90288544]
[74.97969055 -80.36604309]
[72.30570221 -83.78711700]
[70.99159241 -87.50701904]
[70.96433258 -91.06154633]
[72.00762177 -94.05789948]
[73.79760742 -96.21524048]
[73.12782288 -111.20027924]
[72.45803833 -126.18531799]
[71.78825378 -141.17034912]
[71.11846924 -156.15539551]
[68.30779266 -160.55393982]
[67.54196167 -165.13288879]
[68.54726410 -169.08312988]
[70.76853180 -171.82144165]
[70.76853180 -186.82144165]
[70.76853180 -201.82144165]
[56.99466324 -208.39739990]
[47.44473648 -220.30377197]
[44.01489639 -235.17652893]
[47.38613892 -250.06268311]
[56.88910675 -262.00656128]
[70.63697052 -268.63671875]
[85.90008545 -268.63671875]
[99.64795685 -262.00656128]
[109.15091705 -250.06268311]
[112.52216339 -235.17652893]
[109.09232330 -220.30377197]
[99.54239655 -208.39739990]
[85.76853180 -201.82144165]
[85.76853180 -186.82144165]
[85.76853180 -171.82144165]
[86.10350800 -156.82518005]
[86.77329254 -141.84013367]
[87.44307709 -126.85510254]
[88.11286163 -111.87006378]
[88.78264618 -96.88502502]
[89.89829254 -81.92656708]
[98.91769409 -70.07331085]
[92.65807343 -55.54307175]
[94.21859741 -40.62446594]
[95.77912140 -25.70586205]
[104.79851532 -13.85260201]
[98.53890228 0.67763436]
[100.09942627 15.59623909]
[101.65994263 30.51484299]
[103.22046661 45.43344879]
[106.30058289 49.08337021]
[107.12054443 54.70695496]
[104.59854889 60.81850815]
[113.26103210 72.93505096]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[120.47610474 169.67370605]
[113.70684814 182.94120789]
[114.82249451 197.89965820]
[115.93814850 212.85810852]
[117.49866486 227.77671814]
[119.50268555 242.64224243]
[121.50669861 257.50778198]
[125.75456238 265.59439087]
[123.42817688 272.60934448]
[132.75054932 285.39230347]
[126.58045959 298.94885254]
[128.36293030 313.84255981]
[130.14538574 328.73626709]
[131.92785645 343.63000488]
[135.05789185 347.80731201]
[136.16217041 352.31661987]
[135.45346069 356.33068848]
[133.44201660 359.22662354]
[134.55766296 374.18505859]
[135.67330933 389.14352417]
[150.67727661 388.96911621]
[165.66259766 389.73715210]
[180.57011414 391.44464111]
[195.34098816 394.08477783]
[209.91696167 397.64718628]
[224.24046326 402.11782837]
[238.25500488 407.47900391]
[251.90524292 413.70959473]
[265.13732910 420.78500366]
[277.89904785 428.67727661]
[290.14001465 437.35531616]
[301.81192017 446.78485107]
[312.86871338 456.92868042]
[323.26672363 467.74673462]
[332.96496582 479.19635010]
[341.92514038 491.23233032]
[350.11190796 503.80715942]
[357.49288940 516.87121582]
[364.03903198 530.37298584]
[369.72448730 544.25915527]
[374.52676392 558.47491455]
[378.42697144 572.96411133]
[381.40969849 587.66967773]
[383.46313477 602.53350830]
[384.57925415 617.49688721]
[384.75357056 632.50085449]
[383.98544312 647.48614502]
[382.27789307 662.39367676]
[379.63766479 677.16455078]
[376.07519531 691.74047852]
[371.60449219 706.06396484]
[366.24322510 720.07849121]
[360.01257324 733.72869873]
[352.93710327 746.96075439]
[345.04473877 759.72241211]
[336.36663818 771.96331787]
[326.93704224 783.63519287]
[316.79318237 794.69195557]
[305.97506714 805.08990479]
[294.52539062 814.78808594]
[282.48937988 823.74822998]
[269.91448975 831.93487549]
[256.85037231 839.31579590]
[243.34857178 845.86187744]
[229.46238708 851.54724121]
[215.24661255 856.34948730]
[200.75737000 860.24957275]
[186.05180359 863.23223877]
[171.18798828 865.28564453]
[156.22456360 866.40161133]
[141.22059631 866.57586670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 159]
[48 158]
[49 157]
[50 153]
[51 152]
[52 151]
[53 150]
[55 148]
[56 146]
[57 145]
[58 144]
[63 143]
[64 142]
[65 141]
[67 139]
[68 138]
[69 137]
[70 136]
[72 134]
[74 132]
[75 129]
[76 128]
[77 127]
[78 126]
[80 124]
[81 123]
[82 122]
[84 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
