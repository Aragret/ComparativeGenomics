%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[159.02978516 554.22479248]
[169.85604858 543.72509766]
[182.95375061 536.24841309]
[178.98165894 521.78387451]
[175.00956726 507.31936646]
[171.03746033 492.85485840]
[160.20611572 482.63082886]
[164.01283264 467.27441406]
[160.04072571 452.80987549]
[156.06863403 438.34536743]
[145.23727417 428.12130737]
[149.04399109 412.76489258]
[146.67720032 411.26275635]
[144.76281738 408.73260498]
[143.69537354 405.34201050]
[143.80152893 401.39825439]
[145.29354858 397.32052612]
[142.18943787 382.64523315]
[131.98582458 371.79461670]
[136.69982910 356.69201660]
[133.59571838 342.01672363]
[130.49160767 327.34140015]
[127.38749695 312.66610718]
[124.28338623 297.99081421]
[121.17927551 283.31549072]
[116.71963501 277.42199707]
[118.13991547 268.39865112]
[115.43341064 266.13876343]
[113.68704987 262.45565796]
[113.55780792 257.81491089]
[115.46993256 252.95785522]
[113.24481201 238.12380981]
[101.15157318 229.50468445]
[98.68367004 214.49255371]
[107.80619049 201.86650085]
[105.58106995 187.03245544]
[93.48783112 178.41333008]
[91.01993561 163.40119934]
[100.14244843 150.77514648]
[97.91733551 135.94110107]
[95.69221497 121.10705566]
[93.46710205 106.27301025]
[90.72197723 103.56438446]
[89.18410492 99.65889740]
[89.36123657 95.12286377]
[91.48924255 90.72838593]
[89.92872620 75.80977631]
[88.36820221 60.89117432]
[86.80767822 45.97256851]
[85.24715424 31.05396461]
[74.98482513 41.99400711]
[59.99751663 42.61102676]
[48.87065125 32.55156326]
[47.97819138 17.57813644]
[57.83138657 6.26820374]
[72.78587341 5.10060930]
[84.27460480 14.74336338]
[84.05127716 -0.25497395]
[83.82794952 -15.25331116]
[83.38134766 -30.24666214]
[82.71155548 -45.23170090]
[74.36576843 -58.67261887]
[81.52704620 -71.73268890]
[80.85726166 -86.71772766]
[80.18747711 -101.70276642]
[79.51769257 -116.68780518]
[78.84790802 -131.67283630]
[75.61753845 -137.44140625]
[75.76343536 -143.12257385]
[78.38800049 -147.11265564]
[78.16467285 -162.11099243]
[77.94134521 -177.10932922]
[77.71801758 -192.10766602]
[77.49468994 -207.10600281]
[63.53297806 -216.65411377]
[58.06774139 -232.48548889]
[63.06558609 -248.29635620]
[76.36797333 -257.91531372]
[75.92136383 -272.90866089]
[65.88260651 -288.34576416]
[74.79722595 -303.46188354]
[74.12743378 -318.44692993]
[73.45764923 -333.43194580]
[69.94817352 -341.86529541]
[72.89112854 -348.64474487]
[72.44452667 -363.63809204]
[71.99791718 -378.63143921]
[71.55131531 -393.62478638]
[68.80644226 -398.06469727]
[68.10886383 -402.65454102]
[69.17286682 -406.58938599]
[71.43465424 -409.29431152]
[71.65798187 -424.29266357]
[71.88131714 -439.29098511]
[72.10464478 -454.28933716]
[72.32797241 -469.28765869]
[57.94665527 -473.94268799]
[45.57730865 -482.63122559]
[36.31980515 -494.58068848]
[30.99731445 -508.72857666]
[30.08310890 -523.81683350]
[33.65848160 -538.50384521]
[41.40550995 -551.48364258]
[52.63533401 -561.60205078]
[66.34940338 -567.95941162]
[81.32827759 -569.99035645]
[96.24004364 -567.51428223]
[109.75875092 -560.75146484]
[120.68233490 -550.30316162]
[128.03947449 -537.09851074]
[131.17597961 -522.31152344]
[129.81294250 -507.25720215]
[124.07157898 -493.27404785]
[114.46239471 -481.60549927]
[101.83984375 -473.28909302]
[87.32630920 -469.06433105]
[87.10298157 -454.06600952]
[86.87965393 -439.06765747]
[86.65632629 -424.06933594]
[86.43299866 -409.07098389]
[86.54466248 -394.07141113]
[86.99127197 -379.07806396]
[87.43787384 -364.08471680]
[87.88448334 -349.09133911]
[88.44268799 -334.10174561]
[89.11247253 -319.11669922]
[89.78226471 -304.13165283]
[98.49462128 -295.73992920]
[99.17527008 -283.26110840]
[90.91471863 -273.35525513]
[91.36132050 -258.36190796]
[103.04155731 -251.89552307]
[110.05764008 -240.40994263]
[110.48567963 -226.84947205]
[104.10697174 -214.75274658]
[92.49302673 -207.32933044]
[92.71635437 -192.33099365]
[92.93968201 -177.33265686]
[93.16300964 -162.33432007]
[93.38633728 -147.33598328]
[93.83294678 -132.34262085]
[94.50273132 -117.35758972]
[95.17251587 -102.37255096]
[95.84230042 -87.38751221]
[96.51208496 -72.40247345]
[104.80997467 -60.03338242]
[97.69659424 -45.90148544]
[98.36638641 -30.91644669]
[101.22379303 -27.08966446]
[101.70757294 -21.42724609]
[98.82628632 -15.47663879]
[99.04961395 -0.47830167]
[99.27294159 14.52003574]
[100.16575623 29.49344063]
[101.72628021 44.41204453]
[103.28680420 59.33065033]
[104.84732819 74.24925232]
[106.40785217 89.16786194]
[108.30113983 104.04789734]
[110.52626038 118.88194275]
[112.75138092 133.71598816]
[114.97649384 148.55003357]
[127.40201569 157.94386292]
[129.44728088 173.01939392]
[120.41511536 184.80734253]
[122.64023590 199.64138794]
[135.06575012 209.03521729]
[137.11102295 224.11074829]
[128.07885742 235.89869690]
[130.30397034 250.73272705]
[132.85980225 265.51339722]
[135.85458374 280.21139526]
[138.95869446 294.88668823]
[142.06280518 309.56201172]
[145.16691589 324.23730469]
[148.27102661 338.91259766]
[151.37513733 353.58789062]
[161.80076599 365.48818970]
[156.86473083 379.54110718]
[159.96884155 394.21643066]
[163.50851440 408.79278564]
[174.62399292 420.05145264]
[170.53315735 434.37326050]
[174.50524902 448.83776855]
[178.47735596 463.30230713]
[189.59281921 474.56094360]
[185.50198364 488.88275146]
[189.47409058 503.34729004]
[193.44618225 517.81182861]
[197.41827393 532.27630615]
[212.49749756 532.01538086]
[227.16766357 535.51348877]
[240.50663757 542.55072021]
[251.67588806 552.68475342]
[259.97329712 565.27856445]
[264.87731934 579.54046631]
[266.07968140 594.57391357]
[263.50476074 609.43395996]
[257.31445312 623.18640137]
[247.89787292 634.96685791]
[235.84696960 644.03472900]
[221.91925049 649.82006836]
[206.99023438 651.95910645]
[191.99838257 650.31738281]
[177.88609314 644.99822998]
[165.54045105 636.33587646]
[155.73753357 624.87487793]
[149.09356689 611.33575439]
[146.02618408 596.56951904]
[146.72821045 581.50439453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[6 187]
[8 185]
[9 184]
[10 183]
[12 181]
[17 180]
[18 179]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[27 171]
[31 170]
[32 169]
[35 166]
[36 165]
[39 162]
[40 161]
[41 160]
[42 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[57 153]
[58 152]
[59 151]
[60 148]
[61 147]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[78 131]
[79 130]
[81 127]
[82 126]
[83 125]
[85 124]
[86 123]
[87 122]
[88 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
