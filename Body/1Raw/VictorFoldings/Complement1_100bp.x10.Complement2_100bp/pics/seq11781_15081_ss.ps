%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[106.11322021 521.07800293]
[109.46046448 506.41839600]
[115.23721313 492.53540039]
[123.27723694 479.82849121]
[133.34922791 468.66323853]
[145.16337585 459.36087036]
[158.37979126 452.18908691]
[153.55378723 437.98663330]
[148.72778320 423.78414917]
[143.90179443 409.58169556]
[132.48109436 400.02047729]
[135.36703491 384.46472168]
[121.93451691 378.13201904]
[116.83795166 363.79745483]
[123.57135010 349.75112915]
[118.74535370 335.54867554]
[113.91934967 321.34622192]
[109.09335327 307.14376831]
[104.26735687 292.94131470]
[99.44136047 278.73886108]
[97.26946259 293.58078003]
[91.05647278 307.23358154]
[81.29238129 318.62051392]
[68.74721527 326.84359741]
[54.41035080 331.25427246]
[39.41244125 331.50476074]
[24.93628883 327.57525635]
[12.12354565 319.77566528]
[1.98467445 308.72109985]
[-4.68072939 295.28338623]
[-7.34700394 280.52224731]
[-5.80387688 265.60183716]
[-0.17304471 251.69882202]
[9.10142136 239.90965271]
[21.28809738 231.16409302]
[35.42589188 226.15182495]
[50.39984131 225.26817322]
[65.02903748 228.58277893]
[78.15975189 235.83428955]
[88.75645447 246.45077515]
[95.98467255 259.59823608]
[95.53806305 244.60488892]
[95.09146118 229.61154175]
[94.64485168 214.61819458]
[94.19824982 199.62484741]
[85.61179352 191.10432434]
[85.11701202 178.61676025]
[93.52413177 168.83499146]
[85.59819794 156.22431946]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[91.20255280 27.92115402]
[90.42122650 12.94151783]
[89.52841187 -2.03188825]
[88.63559723 -17.00529480]
[87.18618011 -31.93510246]
[85.18216705 -46.80063248]
[83.17815399 -61.66616058]
[81.17413330 -76.53168488]
[79.17012024 -91.39721680]
[77.16610718 -106.26274109]
[60.95552826 -114.38523102]
[52.93612671 -130.47152710]
[56.14993668 -147.99642944]
[69.12446594 -159.97695923]
[59.24060822 -172.33090210]
[64.79920197 -186.14941406]
[62.35347748 -200.94868469]
[59.90774918 -215.74795532]
[56.59430695 -219.78134155]
[55.28977966 -224.23684692]
[55.81854630 -228.27856445]
[57.69868088 -231.26141357]
[55.91621399 -246.15513611]
[54.13374710 -261.04885864]
[52.35128021 -275.94256592]
[37.33050919 -276.51077271]
[22.58357811 -279.42187500]
[8.47364616 -284.60418701]
[-4.65181684 -291.93008423]
[-16.46958542 -301.21914673]
[-26.68863487 -312.24264526]
[-35.05731201 -324.72912598]
[-41.36953354 -338.37106323]
[-45.46985245 -352.83251953]
[-47.25729370 -367.75738525]
[-46.68784332 -382.77810669]
[-43.77552032 -397.52478027]
[-38.59204865 -411.63430786]
[-31.26507378 -424.75915527]
[-21.97502708 -436.57617188]
[-10.95068550 -446.79431152]
[1.53646648 -455.16195679]
[15.17892170 -461.47305298]
[29.64072227 -465.57217407]
[44.56573105 -467.35836792]
[59.58641052 -466.78768921]
[74.33286285 -463.87414551]
[88.44194031 -458.68951416]
[101.56619263 -451.36145020]
[113.38242340 -442.07043457]
[123.59965515 -431.04525757]
[131.96627808 -418.55740356]
[138.27624512 -404.91442871]
[142.37417603 -390.45230103]
[144.15914917 -375.52713013]
[143.58721924 -360.50650024]
[140.67247009 -345.76028442]
[135.48666382 -331.65164185]
[128.15753174 -318.52798462]
[118.86553192 -306.71252441]
[107.83950043 -296.49621582]
[95.35097504 -288.13061523]
[81.70747375 -281.82177734]
[67.24499512 -277.72503662]
[69.02746582 -262.83132935]
[70.80992889 -247.93760681]
[72.59239960 -233.04388428]
[74.70702362 -218.19367981]
[77.15274811 -203.39440918]
[79.59847260 -188.59513855]
[89.30739594 -177.29974365]
[83.92373657 -162.42268372]
[95.46347046 -158.65309143]
[104.35807037 -150.28535461]
[108.87752533 -138.86277771]
[108.10710144 -126.53045654]
[102.13175964 -115.63258362]
[92.03163910 -108.26675415]
[94.03565216 -93.40122986]
[96.03966522 -78.53569794]
[98.04367828 -63.67017365]
[100.04769135 -48.80464554]
[102.05170441 -33.93911743]
[113.08338165 -44.10288239]
[127.93039703 -41.96604156]
[135.64808655 -29.10380173]
[130.54725647 -14.99772072]
[116.38804626 -10.04627895]
[103.60900116 -17.89810944]
[104.50181580 -2.92470407]
[105.39463043 12.04870129]
[108.93068695 18.53854942]
[106.18759155 27.25136948]
[109.04499817 31.07815170]
[109.52877808 36.74057007]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[116.06941986 155.77059937]
[108.52246857 168.61166382]
[118.33027649 184.19653320]
[109.19159698 199.17823792]
[109.63819885 214.17158508]
[110.08480835 229.16494751]
[110.53141022 244.15829468]
[110.97801971 259.15164185]
[113.64381409 273.91287231]
[118.46981049 288.11532593]
[123.29580688 302.31777954]
[128.12181091 316.52023315]
[132.94779968 330.72268677]
[137.77380371 344.92514038]
[151.67098999 351.96118164]
[156.36291504 366.43322754]
[149.56948853 379.63873291]
[161.33537292 390.21578979]
[158.10424805 404.75570679]
[162.93023682 418.95816040]
[167.75624084 433.16061401]
[172.58224487 447.36306763]
[187.43196106 444.99798584]
[202.46778870 445.17672729]
[217.25711060 447.89410400]
[231.37438965 453.07196045]
[244.41346741 460.56134033]
[255.99916077 470.14672852]
[265.79815674 481.55233765]
[273.52847290 494.45001221]
[278.96774292 508.46865845]
[281.95944214 523.20495605]
[282.41748047 538.23486328]
[280.32870483 553.12591553]
[275.75320435 567.44976807]
[268.82263184 580.79425049]
[259.73635864 592.77545166]
[248.75587463 603.04852295]
[236.19706726 611.31799316]
[222.42129517 617.34594727]
[207.82490540 620.95886230]
[192.82786560 622.05285645]
[177.86166382 620.59649658]
[163.35693359 616.63153076]
[149.73098755 610.27215576]
[137.37586975 601.70135498]
[126.64706421 591.16564941]
[117.85325623 578.96826172]
[111.24746704 565.46002197]
[107.01976013 551.02972412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 182]
[8 181]
[9 180]
[10 179]
[12 177]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[20 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[48 162]
[50 160]
[51 159]
[52 158]
[54 156]
[55 155]
[56 154]
[57 153]
[58 150]
[59 148]
[60 147]
[61 146]
[62 140]
[63 139]
[64 138]
[65 137]
[66 136]
[67 135]
[71 129]
[73 127]
[74 126]
[75 125]
[79 124]
[80 123]
[81 122]
[82 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
