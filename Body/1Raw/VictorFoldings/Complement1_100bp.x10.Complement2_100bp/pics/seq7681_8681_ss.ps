%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[35.87431335 633.00585938]
[26.31378174 644.58428955]
[15.53753662 655.04064941]
[3.67638993 664.24804688]
[-9.12567425 672.09472656]
[-22.71324921 678.48541260]
[-36.92139816 683.34252930]
[-51.57764053 686.60717773]
[-66.50406647 688.23962402]
[-81.51948547 688.22009277]
[-96.44162750 686.54888916]
[-111.08934021 683.24621582]
[-125.28482056 678.35217285]
[-138.85574341 671.92620850]
[-151.63737488 664.04626465]
[-163.47456360 654.80810547]
[-174.22360229 644.32373047]
[-183.75401306 632.72052002]
[-191.95011902 620.13934326]
[-198.71241760 606.73278809]
[-203.95880127 592.66375732]
[-207.62561035 578.10290527]
[-209.66833496 563.22705078]
[-210.06214905 548.21679688]
[-208.80230713 533.25433350]
[-205.90406799 518.52124023]
[-201.40264893 504.19644165]
[-195.35266113 490.45376587]
[-187.82757568 477.46008301]
[-178.91871643 465.37307739]
[-168.73423767 454.33950806]
[-157.39776611 444.49331665]
[-145.04692078 435.95401001]
[-131.83163452 428.82522583]
[-117.91231537 423.19357300]
[-103.45793915 419.12731934]
[-88.64396667 416.67590332]
[-73.65023041 415.86904907]
[-58.65873337 416.71655273]
[-43.85146332 419.20812988]
[-29.40816879 423.31356812]
[-31.76813316 408.60708618]
[-19.39355087 398.74908447]
[-13.73076439 384.85906982]
[-8.06797791 370.96902466]
[-2.40519166 357.07901001]
[3.25759506 343.18899536]
[8.92038155 329.29895020]
[14.58316803 315.40893555]
[20.24595451 301.51889038]
[25.90874100 287.62887573]
[31.15546036 273.57641602]
[35.98145676 259.37396240]
[40.80745316 245.17149353]
[45.63345337 230.96903992]
[40.56971741 219.98335266]
[44.47410202 208.11155701]
[55.77163696 201.88833618]
[60.80855179 187.75930786]
[65.84546661 173.63027954]
[70.88238525 159.50125122]
[75.91930389 145.37222290]
[80.95621490 131.24319458]
[85.99313354 117.11416626]
[91.03005219 102.98513794]
[89.91310883 97.86006165]
[91.74716187 92.47400665]
[96.43299866 88.51422119]
[94.24454498 72.84510803]
[106.08078003 63.80338287]
[103.89231873 48.13426590]
[115.72855377 39.09254074]
[121.18391418 25.11974335]
[126.63926697 11.14694500]
[126.84522247 2.01483655]
[132.28126526 -2.99228311]
[130.32633972 -18.69224548]
[142.29588318 -27.55674362]
[147.95866394 -41.44676971]
[153.62145996 -55.33679962]
[159.28424072 -69.22682190]
[164.94703674 -83.11685181]
[151.57897949 -89.94100952]
[138.83782959 -97.87427521]
[126.81536102 -106.85950470]
[115.59822083 -116.83193970]
[105.26721954 -127.71974182]
[95.89678955 -139.44445801]
[87.55445099 -151.92160034]
[80.30031586 -165.06129456]
[74.18664551 -178.76884460]
[69.25748444 -192.94548035]
[65.54836273 -207.48907471]
[63.08599091 -222.29484558]
[61.88811874 -237.25608826]
[61.96337509 -252.26502991]
[63.31121826 -267.21350098]
[65.92193604 -281.99383545]
[69.77671814 -296.49951172]
[74.84778595 -310.62600708]
[81.09860992 -324.27157593]
[88.48414612 -337.33782959]
[96.95117950 -349.73071289]
[106.43871307 -361.36087036]
[116.87837982 -372.14453125]
[128.19496155 -382.00396729]
[140.30691528 -390.86819458]
[153.12698364 -398.67330933]
[166.56280518 -405.36306763]
[180.51753235 -410.88928223]
[194.89067078 -415.21212769]
[209.57862854 -418.30044556]
[224.47557068 -420.13204956]
[239.47418213 -420.69366455]
[254.46640015 -419.98126221]
[269.34417725 -418.00003052]
[284.00033569 -414.76416016]
[298.32928467 -410.29702759]
[312.22775269 -404.63079834]
[325.59564209 -397.80630493]
[338.33657837 -389.87271118]
[350.35882568 -380.88714600]
[361.57568359 -370.91442871]
[371.90643311 -360.02636719]
[381.27655029 -348.30142212]
[389.61856079 -335.82403564]
[396.87234497 -322.68417358]
[402.98568726 -308.97647095]
[407.91445923 -294.79968262]
[411.62322998 -280.25601196]
[414.08520508 -265.45016479]
[415.28268433 -250.48889160]
[415.20706177 -235.47996521]
[413.85882568 -220.53150940]
[411.24771118 -205.75125122]
[407.39257812 -191.24568176]
[402.32113647 -177.11930847]
[396.06994629 -163.47392273]
[388.68408203 -150.40783691]
[380.21673584 -138.01518250]
[370.72888184 -126.38526917]
[360.28894043 -115.60188293]
[348.97210693 -105.74272156]
[336.85992432 -96.87882233]
[324.03964233 -89.07405090]
[310.60366821 -82.38463593]
[296.64877319 -76.85878754]
[282.27554321 -72.53630829]
[267.58752441 -69.44834137]
[252.69052124 -67.61714935]
[237.69187927 -67.05591583]
[222.69969177 -67.76868439]
[207.82196045 -69.75032806]
[193.16587830 -72.98655701]
[178.83705139 -77.45406342]
[173.17427063 -63.56403732]
[167.51148987 -49.67401123]
[161.84869385 -35.78398514]
[156.18591309 -21.89395714]
[158.54588318 -7.18750238]
[146.17129517 2.67050338]
[140.61207581 16.60230255]
[135.15670776 30.57509995]
[129.70135498 44.54789734]
[132.28001404 59.21758652]
[120.05357361 69.25873566]
[122.63224030 83.92842865]
[110.40579987 93.96958160]
[105.15908051 108.02204895]
[100.12216187 122.15107727]
[95.08524323 136.28010559]
[90.04833221 150.40913391]
[85.01141357 164.53816223]
[79.97449493 178.66720581]
[74.93758392 192.79623413]
[69.90066528 206.92526245]
[73.63763428 224.95625305]
[59.83590698 235.79504395]
[55.00991058 249.99749756]
[50.18391418 264.19995117]
[45.35791397 278.40240479]
[46.35480499 282.62854004]
[45.99155807 286.55697632]
[44.52877808 289.79666138]
[42.32729340 292.08142090]
[39.79876709 293.29165649]
[34.13598251 307.18170166]
[28.47319603 321.07171631]
[22.81040764 334.96173096]
[17.14762115 348.85177612]
[11.48483562 362.74179077]
[5.82204866 376.63183594]
[0.15926217 390.52185059]
[-5.50352430 404.41186523]
[-3.54859924 420.11184692]
[-15.51814175 428.97634888]
[-2.32141662 436.13940430]
[10.00719929 444.71078491]
[21.31804657 454.58639526]
[31.47382545 465.64639282]
[40.35124969 477.75650024]
[47.84255600 490.76971436]
[53.85681152 504.52804565]
[58.32100677 518.86450195]
[61.18094635 533.60504150]
[62.40191650 548.57073975]
[61.96909332 563.57995605]
[59.88773727 578.45043945]
[56.18310547 593.00170898]
[50.90017700 607.05706787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 196]
[43 194]
[44 193]
[45 192]
[46 191]
[47 190]
[48 189]
[49 188]
[50 187]
[51 186]
[52 181]
[53 180]
[54 179]
[55 178]
[58 176]
[59 175]
[60 174]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[68 168]
[70 166]
[72 164]
[73 163]
[74 162]
[76 161]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
