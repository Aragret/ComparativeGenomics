%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[80.78593445 713.17614746]
[80.12547302 698.07464600]
[83.94720459 683.44982910]
[91.91131592 670.60211182]
[103.30963135 660.67382812]
[117.12862396 654.54791260]
[115.34615326 639.65423584]
[113.56369019 624.76049805]
[111.78122711 609.86676025]
[109.66660309 595.01660156]
[107.22087097 580.21734619]
[104.77514648 565.41802979]
[102.32942200 550.61877441]
[95.05453491 563.73657227]
[81.89324951 570.93243408]
[66.92372894 569.97668457]
[54.78444290 561.16546631]
[49.23688126 547.22900391]
[52.00001144 532.48571777]
[62.21765518 521.50390625]
[76.72375488 517.68646240]
[91.02345276 522.21624756]
[100.68592072 533.68981934]
[100.23931122 518.69647217]
[99.79270935 503.70315552]
[89.77850342 489.29196167]
[98.64129639 473.15093994]
[97.97150421 458.16589355]
[86.84057617 448.33541870]
[85.94785309 433.14801025]
[96.33441925 421.53952026]
[86.10676575 407.27902222]
[94.72825623 391.00784302]
[93.83544159 376.03442383]
[92.94262695 361.06103516]
[90.93791199 359.10162354]
[89.58856201 356.23007202]
[89.24588013 352.69198608]
[90.16585541 348.85556030]
[92.46942139 345.17486572]
[92.46942139 330.17486572]
[92.46942139 315.17486572]
[92.46942139 300.17486572]
[92.46942139 285.17486572]
[92.46942139 270.17486572]
[77.73961639 267.44119263]
[63.75923920 262.04592896]
[51.00495911 254.17144775]
[39.91191483 244.08465576]
[30.85888481 232.12802124]
[24.15535927 218.70787048]
[20.03094673 204.28056335]
[18.62752342 189.33708191]
[19.99434471 174.38618469]
[24.08632278 159.93722534]
[30.76550293 146.48266602]
[39.80572891 134.48136902]
[50.90028763 124.34297180]
[63.67232513 116.41381836]
[77.68762970 110.96520996]
[92.46942139 108.18406677]
[81.12463379 117.99710083]
[66.15446472 117.05156708]
[56.13451004 105.88910675]
[56.80465317 90.90409088]
[67.78100586 80.68060303]
[82.77581787 81.07513428]
[93.19902802 91.86078644]
[94.53726196 76.92060852]
[95.87549591 61.98041916]
[97.21372986 47.04023361]
[94.86241150 38.21361923]
[98.68472290 31.88813782]
[100.24524689 16.96953201]
[90.56804657 4.76340675]
[92.36315918 -10.34394932]
[104.05947113 -19.49446106]
[105.61999512 -34.41306686]
[107.18051910 -49.33166885]
[108.74104309 -64.25027466]
[110.30156708 -79.16887665]
[107.96265411 -85.35281372]
[108.94968414 -90.94949341]
[112.13710785 -94.50608826]
[114.14112091 -109.37161255]
[116.14513397 -124.23714447]
[118.14914703 -139.10267639]
[119.37612152 -154.05239868]
[112.05313873 -168.07682800]
[120.16594696 -180.56808472]
[120.61254883 -195.56144714]
[121.05915833 -210.55479431]
[118.18664551 -219.22579956]
[121.62567902 -225.76757812]
[114.51230621 -239.89947510]
[122.81018829 -252.26856995]
[123.47998047 -267.25360107]
[124.14976501 -282.23864746]
[110.05430603 -287.77008057]
[98.52024841 -297.58050537]
[90.79872131 -310.60574341]
[87.72730255 -325.43289185]
[89.63914490 -340.45367432]
[96.32687378 -354.03869629]
[107.06505585 -364.71438599]
[120.68888855 -371.32269287]
[135.72056580 -373.14685059]
[150.52955627 -369.98892212]
[163.50950623 -362.19149780]
[173.25242615 -350.60037231]
[178.70149231 -336.47286987]
[179.26562500 -321.34143066]
[174.88363647 -306.84738159]
[166.03083801 -294.56298828]
[153.66754150 -285.82070923]
[139.13479614 -281.56884766]
[138.46501160 -266.58383179]
[137.79522705 -251.59878540]
[144.95651245 -238.53871155]
[136.61071777 -225.09779358]
[136.05250549 -210.10818481]
[135.60589600 -195.11483765]
[135.15930176 -180.12149048]
[142.51422119 -167.16947937]
[134.36947632 -153.60580444]
[145.22679138 -163.95561218]
[160.18823242 -165.03054810]
[172.41360474 -156.33917236]
[176.31365967 -141.85505676]
[170.10533142 -128.20014954]
[156.62698364 -121.61728668]
[142.04072571 -125.11605835]
[133.01467896 -137.09866333]
[131.01066589 -122.23313141]
[129.00665283 -107.36759949]
[127.00263214 -92.50207520]
[125.22016907 -77.60836029]
[123.65964508 -62.68975067]
[122.09912109 -47.77114868]
[120.53860474 -32.85254288]
[118.97808075 -17.93393707]
[128.52758789 -6.56106043]
[127.15752411 8.59075642]
[115.16385651 18.53005600]
[113.60333252 33.44866180]
[112.15391541 48.37846756]
[110.81568146 63.31865311]
[109.47744751 78.25884247]
[108.13920593 93.19902039]
[107.46942139 108.18406677]
[122.25122070 110.96520996]
[136.26652527 116.41381836]
[149.03855896 124.34297180]
[160.13311768 134.48136902]
[169.17333984 146.48266602]
[175.85252380 159.93722534]
[179.94450378 174.38618469]
[181.31132507 189.33708191]
[179.90789795 204.28056335]
[175.78349304 218.70787048]
[169.07995605 232.12802124]
[160.02693176 244.08465576]
[148.93388367 254.17144775]
[136.17961121 262.04592896]
[122.19923401 267.44119263]
[107.46942139 270.17486572]
[107.46942139 285.17486572]
[107.46942139 300.17486572]
[107.46942139 315.17486572]
[107.46942139 330.17486572]
[107.46942139 345.17486572]
[107.91603088 360.16821289]
[108.80884552 375.14163208]
[109.70166016 390.11502075]
[118.81303406 399.24441528]
[119.24839783 411.73419189]
[111.31945801 420.86975098]
[122.70026398 431.50527954]
[123.16605377 446.71179199]
[112.95654297 457.49612427]
[113.62633514 472.48114014]
[122.60076904 481.74517822]
[122.85013580 494.24005127]
[114.78605652 503.25653076]
[115.23266602 518.24987793]
[115.67926788 533.24322510]
[117.12869263 548.17303467]
[119.57441711 562.97235107]
[122.02014160 577.77160645]
[124.46587372 592.57086182]
[127.77931213 596.60424805]
[129.08384705 601.05975342]
[128.55506897 605.10144043]
[126.67494202 608.08435059]
[128.45741272 622.97802734]
[130.23986816 637.87176514]
[132.02233887 652.76550293]
[146.89663696 655.45739746]
[160.31590271 662.41546631]
[171.08686829 673.02105713]
[178.25181580 686.33099365]
[181.17362976 701.16186523]
[179.59251404 716.19488525]
[173.64904785 730.09332275]
[163.87171936 741.62133789]
[151.12994385 749.75390625]
[136.55668640 753.76782227]
[121.44779968 753.30621338]
[107.14675903 748.41009521]
[94.92520905 739.51489258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 197]
[7 196]
[8 195]
[9 194]
[10 190]
[11 189]
[12 188]
[13 187]
[23 186]
[24 185]
[25 184]
[27 181]
[28 180]
[31 177]
[33 174]
[34 173]
[35 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[61 150]
[68 149]
[69 148]
[70 147]
[71 146]
[73 145]
[74 144]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[84 136]
[85 135]
[86 134]
[87 133]
[88 125]
[90 123]
[91 122]
[92 121]
[94 120]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
