%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[98.32704163 696.68109131]
[84.12693024 691.82208252]
[70.37011719 685.82183838]
[57.14816666 678.72021484]
[44.54905701 670.56457520]
[32.65664291 661.40905762]
[21.55006409 651.31463623]
[11.30323315 640.34857178]
[1.98434377 628.58374023]
[-6.34458780 616.09851074]
[-13.62813282 602.97589111]
[-19.81782150 589.30328369]
[-24.87245941 575.17163086]
[-28.75840950 560.67498779]
[-31.44981194 545.90985107]
[-32.92875290 530.97448730]
[-33.18539429 515.96826172]
[-32.21802139 500.99102783]
[-30.03308105 486.14248657]
[-26.64510727 471.52145386]
[-22.07664871 457.22525024]
[-16.35810852 443.34896851]
[-9.52754211 429.98498535]
[-1.63040805 417.22222900]
[7.28073978 405.14562988]
[17.14659882 393.83554077]
[27.90151024 383.36727905]
[39.47390366 373.81048584]
[51.78676605 365.22872925]
[64.75814819 357.67916870]
[78.30174255 351.21203613]
[92.32740021 345.87033081]
[106.74179077 341.68963623]
[121.44898224 338.69778442]
[119.66651917 323.80407715]
[110.47164154 312.08639526]
[116.51423645 297.46456909]
[114.73176575 282.57086182]
[112.94930267 267.67715454]
[103.75442505 255.95948792]
[109.79701996 241.33766174]
[107.26609039 238.88272095]
[105.79850006 235.07992554]
[106.01478577 230.44241333]
[108.28285980 225.74102783]
[107.16721344 210.78257751]
[106.05156708 195.82412720]
[104.38002014 180.91755676]
[102.15490723 166.08351135]
[99.92978668 151.24946594]
[90.39011383 139.81076050]
[95.99467468 125.01551819]
[93.76956177 110.18147278]
[88.36227417 124.17294312]
[78.31985474 135.31518555]
[64.96353912 142.14225769]
[50.05059052 143.75593567]
[35.54306030 139.94390869]
[23.34966278 131.20771790]
[15.07465267 118.69674683]
[11.80674744 104.05704498]
[13.97589684 89.21471405]
[21.29671097 76.12252045]
[32.80601120 66.50295258]
[46.98955154 61.62164688]
[61.98124695 62.12081528]
[75.80867004 67.93478394]
[86.65260315 78.29862213]
[93.08693695 91.85109711]
[94.20259094 76.89263916]
[95.31823730 61.93418884]
[82.41684723 48.06089020]
[83.73041534 29.48167038]
[97.95899963 17.96372604]
[90.84562683 3.83183050]
[99.14351654 -8.53725815]
[99.81330109 -23.52229691]
[100.48308563 -38.50733566]
[101.15287018 -53.49237442]
[101.82265472 -68.47741699]
[102.49243927 -83.46245575]
[103.16222382 -98.44749451]
[103.83200836 -113.43253326]
[103.94367981 -128.43211365]
[90.99362946 -140.19287109]
[90.56449127 -157.34312439]
[102.43355560 -169.25798035]
[101.76377106 -184.24302673]
[101.09398651 -199.22805786]
[100.42420197 -214.21310425]
[99.75441742 -229.19813538]
[88.37361145 -239.83369446]
[87.90782166 -255.04019165]
[98.11733246 -265.82449341]
[97.44754791 -280.80953979]
[96.77775574 -295.79458618]
[82.38487244 -300.61218262]
[70.70672607 -310.30679321]
[63.32268906 -323.56729126]
[61.23139572 -338.60028076]
[64.71566772 -353.37268066]
[73.30429840 -365.88668823]
[85.83573151 -374.44982910]
[100.61521149 -377.90402222]
[115.64391327 -375.78216553]
[128.88934326 -368.37115479]
[138.56016541 -356.67330933]
[143.34848022 -342.27066040]
[142.60670471 -327.11102295]
[136.43515015 -313.24465942]
[125.66847992 -302.54684448]
[111.76280212 -296.46438599]
[112.43258667 -281.47933960]
[113.10237122 -266.49429321]
[124.23329926 -256.66381836]
[125.12602234 -241.47640991]
[114.73945618 -229.86791992]
[115.40924072 -214.88288879]
[116.07902527 -199.89784241]
[116.74880981 -184.91281128]
[117.41859436 -169.92776489]
[128.05064392 -162.64840698]
[132.61691284 -150.39152527]
[129.24038696 -137.55371094]
[118.93702698 -128.87872314]
[130.96623230 -137.83966064]
[145.51037598 -134.16979980]
[151.84806824 -120.57444763]
[145.30738831 -107.07557678]
[130.70988464 -103.62405396]
[118.81704712 -112.76274872]
[118.14726257 -97.77770996]
[117.47747803 -82.79267120]
[116.80769348 -67.80763245]
[116.13790894 -52.82258987]
[115.46812439 -37.83755112]
[114.79833984 -22.85251236]
[114.12855530 -7.86747360]
[121.28983307 5.19259262]
[112.94403839 18.63351250]
[122.28504181 25.18422699]
[127.35638428 35.53783798]
[126.79427338 47.17303848]
[120.62282562 57.19372559]
[110.27668762 63.04983902]
[109.16104126 78.00829315]
[108.04539490 92.96674347]
[108.60360718 107.95635223]
[110.82872009 122.79039764]
[120.52754974 135.29013062]
[114.76383209 149.02435303]
[116.98895264 163.85839844]
[119.21406555 178.69244385]
[130.09320068 168.36555481]
[144.97038269 170.28109741]
[152.87872314 183.02702332]
[147.98846436 197.20747375]
[133.90454102 202.36918640]
[121.01001740 194.70848083]
[122.12566376 209.66693115]
[123.24131775 224.62538147]
[124.69073486 239.55519104]
[134.01310730 252.33815002]
[127.84301758 265.89468384]
[129.62548828 280.78839111]
[131.40794373 295.68209839]
[140.73031616 308.46508789]
[134.56024170 322.02160645]
[136.34269714 336.91531372]
[151.34054565 336.35211182]
[166.33441162 337.01324463]
[181.22448730 338.89431763]
[195.91168213 341.98284912]
[210.29826355 346.25823975]
[224.28849792 351.69204712]
[237.78926086 358.24810791]
[250.71072388 365.88281250]
[262.96688843 374.54534912]
[274.47616577 384.17803955]
[285.16201782 394.71682739]
[294.95327759 406.09152222]
[303.78482056 418.22644043]
[311.59786987 431.04086304]
[318.34039307 444.44949341]
[323.96755981 458.36306763]
[328.44189453 472.68902588]
[331.73364258 487.33203125]
[333.82089233 502.19461060]
[334.68975830 517.17785645]
[334.33444214 532.18206787]
[332.75732422 547.10742188]
[329.96887207 561.85449219]
[325.98767090 576.32525635]
[320.84020996 590.42340088]
[314.56076050 604.05499268]
[307.19107056 617.12939453]
[298.78021240 629.55963135]
[289.38415527 641.26293945]
[279.06542969 652.16137695]
[267.89270020 662.18255615]
[255.94033813 671.25964355]
[243.28787231 679.33227539]
[230.01951599 686.34680176]
[216.22354126 692.25646973]
[201.99177551 697.02191162]
[187.41894531 700.61151123]
[172.60200500 703.00134277]
[157.63958740 704.17547607]
[142.63124084 704.12615967]
[127.67685699 702.85363770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 169]
[35 168]
[37 166]
[38 165]
[39 164]
[41 162]
[45 161]
[46 160]
[47 159]
[48 153]
[49 152]
[50 151]
[52 149]
[53 148]
[69 147]
[70 146]
[71 145]
[74 140]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 125]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
