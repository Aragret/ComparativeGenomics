%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[48.07054138 811.60662842]
[33.07843781 810.93652344]
[18.17833138 809.14788818]
[3.45355368 806.25085449]
[-11.01355076 802.26147461]
[-25.14207268 797.20208740]
[-38.85300064 791.10107422]
[-52.06965637 783.99243164]
[-64.71812439 775.91601562]
[-76.72766876 766.91699219]
[-88.03112793 757.04559326]
[-98.56529236 746.35711670]
[-108.27124023 734.91131592]
[-117.09469604 722.77215576]
[-124.98631287 710.00756836]
[-131.90196228 696.68896484]
[-137.80296326 682.89074707]
[-142.65632629 668.69012451]
[-146.43489075 654.16656494]
[-149.11753845 639.40118408]
[-150.68925476 624.47668457]
[-151.14126587 609.47637939]
[-150.47103882 594.48431396]
[-148.68231201 579.58422852]
[-145.78509521 564.85943604]
[-141.79559326 550.39239502]
[-136.73611450 536.26391602]
[-130.63494873 522.55303955]
[-123.52622986 509.33645630]
[-115.44970703 496.68804932]
[-106.45053864 484.67858887]
[-96.57907104 473.37521362]
[-85.89049530 462.84115601]
[-74.44458771 453.13528442]
[-62.30536652 444.31195068]
[-49.54071426 436.42044067]
[-36.22201920 429.50491333]
[-22.42376709 423.60403442]
[-8.22312069 418.75079346]
[6.30050230 414.97235107]
[21.06587791 412.28985596]
[35.99043274 410.71826172]
[50.99069977 410.26638794]
[51.66048431 395.28134155]
[52.33026886 380.29629517]
[53.00005341 365.31124878]
[53.66984177 350.32623291]
[43.30048752 361.16488647]
[28.56169319 363.95199585]
[14.95066643 357.64804077]
[7.54398155 344.60421753]
[9.10414982 329.68557739]
[19.04926682 318.45639038]
[33.67004776 315.10485840]
[47.51330566 320.88104248]
[55.41613007 333.63168335]
[57.86185837 318.83239746]
[60.30758667 304.03314209]
[62.75331497 289.23385620]
[65.19904327 274.43460083]
[67.64476776 259.63531494]
[70.09049225 244.83604431]
[72.53622437 230.03677368]
[60.63819122 218.72685242]
[57.79749680 202.39001465]
[65.32882690 187.43072510]
[80.44100952 179.83349609]
[82.66613007 164.99945068]
[84.89124298 150.16540527]
[87.11636353 135.33137512]
[72.98625183 126.16393280]
[64.27500153 111.74810791]
[62.73004150 94.97565460]
[68.66130066 79.21107483]
[80.87897491 67.61666870]
[96.93225861 62.51823425]
[98.71472931 47.62451935]
[100.49719238 32.73080063]
[102.27965546 17.83708382]
[103.06098175 2.85744572]
[102.83765411 -12.14089203]
[102.61432648 -27.13922882]
[102.39099884 -42.13756561]
[102.16767120 -57.13590240]
[101.94434357 -72.13423920]
[101.72101593 -87.13257599]
[101.49768829 -102.13091278]
[101.27436066 -117.12925720]
[101.05103302 -132.12759399]
[98.69291687 -135.77359009]
[97.71592712 -139.59588623]
[98.00588989 -143.13867188]
[99.31233978 -146.02999878]
[101.28765869 -148.01904297]
[101.95744324 -163.00407410]
[102.62722778 -177.98912048]
[102.96220398 -192.98538208]
[102.96220398 -207.98538208]
[102.96220398 -222.98538208]
[89.18833923 -229.56134033]
[79.63841248 -241.46771240]
[76.20857239 -256.34048462]
[79.57981110 -271.22662354]
[89.08277893 -283.17050171]
[102.83064270 -289.80065918]
[118.09376526 -289.80065918]
[131.84162903 -283.17050171]
[141.34458923 -271.22662354]
[144.71583557 -256.34048462]
[141.28599548 -241.46771240]
[131.73606873 -229.56134033]
[117.96220398 -222.98538208]
[117.96220398 -207.98538208]
[117.96220398 -192.98538208]
[120.18347168 -190.24707031]
[121.18877411 -186.29682922]
[120.42294312 -181.71788025]
[117.61226654 -177.31933594]
[116.94248199 -162.33428955]
[116.27269745 -147.34925842]
[116.04936981 -132.35092163]
[116.27269745 -117.35258484]
[116.49602509 -102.35424042]
[116.71935272 -87.35590363]
[116.94268036 -72.35756683]
[117.16600800 -57.35923004]
[117.38933563 -42.36089325]
[117.61266327 -27.36255646]
[117.83599091 -12.36421967]
[118.05931854 2.63411784]
[127.19961548 -9.25936413]
[141.28273010 -14.42326355]
[155.94485474 -11.25749111]
[166.64277649 -0.74299455]
[170.06161499 13.86219406]
[165.14201355 28.03249931]
[153.40835571 37.37709427]
[138.49645996 39.00046158]
[125.02693176 32.39957428]
[117.17337799 19.61954880]
[115.39090729 34.51326752]
[113.60844421 49.40698242]
[111.82598114 64.30069733]
[123.23882294 70.43226624]
[131.89367676 80.07295227]
[136.76336670 92.07859039]
[137.26995850 105.02434540]
[133.35333252 117.37380219]
[125.47830963 127.66133118]
[114.57951355 134.66600037]
[101.95040894 137.55648804]
[99.72528839 152.39053345]
[97.50017548 167.22457886]
[95.27505493 182.05862427]
[105.79310608 190.96711731]
[110.49849701 203.80760193]
[108.26260376 217.18931580]
[99.77494049 227.63458252]
[87.33549500 232.48251343]
[84.88976288 247.28178406]
[82.44403839 262.08105469]
[79.99831390 276.88031006]
[77.55258179 291.67959595]
[75.10685730 306.47885132]
[72.66113281 321.27813721]
[70.21540070 336.07739258]
[68.65487671 350.99600220]
[67.98509216 365.98104858]
[67.31530762 380.96609497]
[66.64552307 395.95111084]
[65.97573853 410.93615723]
[80.87587738 412.72448730]
[95.60070801 415.62130737]
[110.06787872 419.61044312]
[124.19648743 424.66955566]
[137.90753174 430.77035522]
[151.12431335 437.87872314]
[163.77291870 445.95489502]
[175.78262329 454.95373535]
[187.08625793 464.82492065]
[197.62060547 475.51321411]
[207.32675171 486.95886230]
[216.15042114 499.09786987]
[224.04226685 511.86230469]
[230.95816040 525.18078613]
[236.85940552 538.97888184]
[241.71301270 553.17944336]
[245.49183655 567.70294189]
[248.17474365 582.46826172]
[249.74671936 597.39276123]
[250.19898987 612.39300537]
[249.52902222 627.38513184]
[247.74055481 642.28527832]
[244.84361267 657.01007080]
[240.85435486 671.47717285]
[235.79513550 685.60577393]
[229.69421387 699.31677246]
[222.58572388 712.53344727]
[214.50941467 725.18200684]
[205.51046753 737.19165039]
[195.63920593 748.49517822]
[184.95080566 759.02941895]
[173.50508118 768.73547363]
[161.36601257 777.55902100]
[148.60150146 785.45080566]
[135.28292847 792.36651611]
[121.48477173 798.26763916]
[107.28421021 803.12115479]
[92.76065826 806.89984131]
[77.99533081 809.58264160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[56 166]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 159]
[67 154]
[68 153]
[69 152]
[70 151]
[76 143]
[77 142]
[78 141]
[79 140]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[94 120]
[95 119]
[96 118]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
