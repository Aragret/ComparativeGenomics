%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[99.35312653 623.98199463]
[89.80017853 612.39019775]
[81.80803680 599.67193604]
[75.50793457 586.03607178]
[71.00332642 571.70648193]
[68.36817932 556.91851807]
[67.64576721 541.91497803]
[68.84795380 526.94226074]
[71.95499420 512.24615479]
[76.91587067 498.06808472]
[83.64911652 484.64080811]
[92.04417419 472.18481445]
[101.96318817 460.90469360]
[113.24327087 450.98559570]
[125.69919586 442.59048462]
[139.12643433 435.85714722]
[153.30448914 430.89617920]
[150.20037842 416.22088623]
[139.99676514 405.37026978]
[144.71076965 390.26766968]
[134.50715637 379.41705322]
[139.22116089 364.31445312]
[136.11705017 349.63916016]
[123.53223419 341.75512695]
[120.17517090 326.91650391]
[128.52999878 313.76983643]
[125.42588806 299.09454346]
[122.32177734 284.41921997]
[118.87865448 281.10955811]
[117.47809601 275.60177612]
[119.35058594 269.26101685]
[116.68479156 254.49980164]
[112.40260315 248.47613525]
[114.09090424 239.49908447]
[111.64517975 224.69981384]
[109.19945526 209.90054321]
[106.75372314 195.10127258]
[102.56169128 189.01451111]
[104.38346100 180.06359863]
[94.84378815 168.62489319]
[100.44835663 153.82965088]
[98.22323608 138.99560547]
[95.99811554 124.16156006]
[93.77300262 109.32751465]
[84.92788696 121.44213104]
[70.39566040 125.15889740]
[56.82025909 118.77857208]
[50.40818024 105.21813965]
[54.09093857 90.67725372]
[66.18482208 81.80381775]
[81.16067505 82.65463257]
[92.17258453 92.84236908]
[91.50279999 77.85733032]
[83.15701294 64.41641235]
[90.31829071 51.35634995]
[89.64850616 36.37131119]
[78.26770020 25.73575592]
[77.80191040 10.52925491]
[88.01142120 -0.25506163]
[87.34163666 -15.24010086]
[86.67185211 -30.22513962]
[86.00205994 -45.21017838]
[85.33227539 -60.19521713]
[82.10191345 -65.96377563]
[82.24780273 -71.64495087]
[84.87237549 -75.63502502]
[76.93046570 -89.31847382]
[84.47741699 -102.15953064]
[84.25408936 -117.15786743]
[84.03076172 -132.15620422]
[83.80743408 -147.15454102]
[69.74368286 -149.52156067]
[56.31337738 -154.30871582]
[43.92944717 -161.36749268]
[32.97241974 -170.47953796]
[23.77871704 -181.36346436]
[16.63034248 -193.68348694]
[11.74622440 -207.05978394]
[9.27550411 -221.08026123]
[9.29299450 -235.31318665]
[11.79690647 -249.32051086]
[16.70894432 -262.67135620]
[23.87675858 -274.95523071]
[33.07865906 -285.79470825]
[44.03049088 -294.85699463]
[56.39438248 -301.86413574]
[69.78919220 -306.60156250]
[83.80225372 -308.92465210]
[84.02558136 -323.92297363]
[84.24890900 -338.92132568]
[84.47223663 -353.91964722]
[84.69556427 -368.91799927]
[77.16458893 -382.83184814]
[85.09051514 -395.44250488]
[85.31384277 -410.44082642]
[85.53717041 -425.43917847]
[85.64884186 -440.43875122]
[85.64884186 -455.43875122]
[71.59165192 -461.22357178]
[60.82178116 -471.95101929]
[54.98154831 -485.98526001]
[54.96155167 -501.18618774]
[60.76483917 -515.23577881]
[71.50645447 -525.99151611]
[85.54837036 -531.81329346]
[100.74930573 -531.81329346]
[114.79122925 -525.99151611]
[125.53283691 -515.23577881]
[131.33612061 -501.18618774]
[131.31613159 -485.98526001]
[125.47589874 -471.95101929]
[114.70602417 -461.22357178]
[100.64884186 -455.43875122]
[100.64884186 -440.43875122]
[103.79234314 -433.74993896]
[100.53550720 -425.21585083]
[100.31217957 -410.21749878]
[100.08885193 -395.21917725]
[107.63581085 -382.37811279]
[99.69390106 -368.69467163]
[99.47057343 -353.69631958]
[99.24724579 -338.69799805]
[99.02391815 -323.69964600]
[98.80059052 -308.70132446]
[114.24697876 -305.50964355]
[128.78564453 -299.38211060]
[141.86421204 -290.54962158]
[152.98539734 -279.34588623]
[161.72593689 -266.19488525]
[167.75270081 -251.59466553]
[170.83535767 -236.09860229]
[170.85522461 -220.29441833]
[167.80979919 -204.78182983]
[161.81294250 -190.14982605]
[153.09059143 -176.95434570]
[141.97230530 -165.69708252]
[128.87873840 -156.80645752]
[114.30578613 -150.62127686]
[98.80577087 -147.37786865]
[99.02909851 -132.37953186]
[99.25242615 -117.38119507]
[99.47575378 -102.38285828]
[107.40168762 -89.77219391]
[99.87071228 -75.85835266]
[100.31731415 -60.86500168]
[100.98709869 -45.87996292]
[101.65689087 -30.89492416]
[102.32667542 -15.90988541]
[102.99645996 -0.92484677]
[114.12738800 8.90561771]
[115.02011108 24.09303665]
[104.63354492 35.70152283]
[105.30332947 50.68656158]
[113.60121155 63.05565262]
[106.48783875 77.18754578]
[107.15762329 92.17258453]
[108.60704803 107.10239410]
[110.83216095 121.93643951]
[113.05728149 136.77047729]
[115.28239441 151.60452271]
[124.98122406 164.10426331]
[119.21750641 177.83848572]
[121.55299377 192.65554810]
[123.99872589 207.45481873]
[126.44445038 222.25408936]
[128.89018250 237.05335999]
[131.44601440 251.83401489]
[134.11180115 266.59521484]
[136.99708557 281.31512451]
[140.10118103 295.99041748]
[143.20529175 310.66574097]
[156.16792297 319.30334473]
[159.10687256 334.23040771]
[150.79235840 346.53503418]
[153.89646912 361.21035767]
[164.32209778 373.11062622]
[159.38606262 387.16357422]
[169.81170654 399.06384277]
[164.87567139 413.11679077]
[167.97978210 427.79208374]
[182.95231628 426.58712769]
[197.95599365 427.30676270]
[212.74446106 429.93917847]
[227.07485962 434.44113159]
[240.71189880 440.73873901]
[253.43164062 448.72851562]
[265.02517700 458.27932739]
[275.30218506 469.23428345]
[284.09390259 481.41354370]
[291.25592041 494.61712646]
[296.67062378 508.62814331]
[300.24917603 523.21655273]
[301.93273926 538.14288330]
[301.69369507 553.16186523]
[299.53598022 568.02703857]
[295.49502563 582.49420166]
[289.63714600 596.32580566]
[282.05859375 609.29479980]
[272.88375854 621.18811035]
[262.26333618 631.81048584]
[250.37171936 640.98748779]
[237.40417480 648.56848145]
[223.57363892 654.42889404]
[209.10722351 658.47253418]
[194.24246216 660.63299561]
[179.22348022 660.87481689]
[164.29689026 659.19396973]
[149.70779419 655.61816406]
[135.69577026 650.20599365]
[122.49089050 643.04644775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 180]
[18 179]
[20 177]
[22 175]
[23 174]
[26 171]
[27 170]
[28 169]
[31 168]
[32 167]
[34 166]
[35 165]
[36 164]
[37 163]
[39 162]
[41 160]
[42 159]
[43 158]
[44 157]
[52 156]
[53 155]
[55 153]
[56 152]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[66 144]
[68 142]
[69 141]
[70 140]
[71 139]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[94 118]
[95 117]
[96 116]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
