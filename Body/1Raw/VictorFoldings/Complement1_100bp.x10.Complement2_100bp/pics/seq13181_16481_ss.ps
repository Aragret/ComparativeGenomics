%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[65.93737030 668.73754883]
[54.73710251 658.74151611]
[44.57056427 647.69580078]
[35.53566742 635.70672607]
[27.71942520 622.88983154]
[21.19711494 609.36853027]
[16.03154945 595.27301025]
[12.27247906 580.73901367]
[9.95610523 565.90661621]
[9.10473824 550.91851807]
[9.72657585 535.91918945]
[11.81562996 521.05303955]
[15.35178185 506.46322632]
[20.30097389 492.29028320]
[26.61554337 478.67071533]
[34.23467255 465.73565674]
[43.08499146 453.60971069]
[53.08125305 442.40963745]
[64.12719727 432.24331665]
[76.11643219 423.20864868]
[88.93349457 415.39266968]
[102.45494843 408.87063599]
[116.55057526 403.70535278]
[112.79427338 389.18328857]
[102.11634064 378.79910278]
[106.15126801 363.50106812]
[102.39497375 348.97903442]
[91.71704102 338.59484863]
[95.75196838 323.29681396]
[91.99566650 308.77474976]
[88.23936462 294.25268555]
[77.56143188 283.86853027]
[81.59635925 268.57049561]
[77.84005737 254.04843140]
[74.78185272 268.73336792]
[68.46258545 282.33728027]
[59.21376038 294.14657593]
[47.52055359 303.54171753]
[33.99636459 310.02990723]
[19.35064888 313.27072144]
[4.35168791 313.09420776]
[-10.21370220 309.50961304]
[-23.58144951 302.70495605]
[-35.05030823 293.03720093]
[-44.01864624 281.01351929]
[-50.01600266 267.26464844]
[-52.72776794 252.51179504]
[-52.01168823 237.52890015]
[-47.90532303 223.10192871]
[-40.62409210 209.98767090]
[-30.54994965 198.87408447]
[-18.21136475 190.34417725]
[-4.25559616 184.84539795]
[10.58526421 182.66621399]
[25.53269577 183.92092896]
[39.80258560 188.54373169]
[52.64636230 196.29211426]
[63.39026642 206.75961304]
[71.47069550 219.39710999]
[76.46414185 233.54331970]
[78.24660492 218.64959717]
[80.02907562 203.75587463]
[73.85899353 190.19935608]
[83.18135834 177.41639709]
[84.96382141 162.52267456]
[86.74629211 147.62896729]
[77.36715698 136.11517334]
[78.96266937 120.98542786]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[88.14803314 55.34252548]
[99.20635986 41.71606827]
[92.94673920 27.18582916]
[101.96613312 15.33256912]
[103.52665710 0.41396466]
[105.08718109 -14.50463963]
[106.64770508 -29.42324448]
[93.52915192 -22.14975739]
[79.60569000 -27.72981834]
[75.14116669 -42.05001450]
[83.42667389 -54.55403137]
[98.35443115 -56.02437210]
[108.91971588 -45.37871552]
[111.58551025 -60.13993073]
[114.25130463 -74.90114594]
[116.91710663 -89.66236877]
[108.17455292 -102.55444336]
[111.08833313 -117.48644257]
[123.43283081 -125.74167633]
[126.09862518 -140.50288391]
[127.77016449 -155.40946960]
[128.43995667 -170.39450073]
[120.32779694 -180.42225647]
[121.19416046 -192.88954163]
[130.03050232 -201.15063477]
[130.92330933 -216.12403870]
[131.81613159 -231.09745789]
[132.70893860 -246.07086182]
[119.02099609 -252.68209839]
[108.90872955 -264.03158569]
[103.91418457 -278.38854980]
[104.79899597 -293.56372070]
[111.42823792 -307.24295044]
[122.79100037 -317.34027100]
[137.15454102 -322.31594849]
[152.32853699 -321.41116333]
[165.99903870 -314.76391602]
[176.08140564 -303.38790894]
[181.03816223 -289.01782227]
[180.11343384 -273.84503174]
[173.44821167 -260.18328857]
[162.05892944 -250.11589050]
[147.68234253 -245.17803955]
[146.78953552 -230.20463562]
[145.89671326 -215.23123169]
[145.00390625 -200.25782776]
[153.69247437 -185.01066589]
[143.42498779 -169.72471619]
[142.75520325 -154.73968506]
[152.58721924 -166.06803894]
[166.95271301 -170.38453674]
[181.40042114 -166.35166931]
[191.45353699 -155.21907043]
[193.99699402 -140.43627930]
[188.24269104 -126.58391571]
[175.97363281 -117.95428467]
[160.99156189 -117.22137451]
[147.93879700 -124.61227417]
[140.85984802 -137.83709717]
[138.19404602 -123.07588196]
[146.87123108 -111.02423859]
[144.37802124 -96.01629639]
[131.67831421 -86.99657440]
[129.01252747 -72.23535156]
[126.34673309 -57.47413635]
[123.68093109 -42.71292114]
[121.56630707 -27.86272240]
[120.00579071 -12.94411755]
[118.44526672 1.97448766]
[116.88474274 16.89309311]
[123.25597382 30.35625076]
[114.12496185 43.27658844]
[121.49608612 52.86789322]
[120.31808472 65.30960083]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[115.49110413 125.35711670]
[113.47126007 140.43606567]
[101.64000702 149.41142273]
[99.85754395 164.30514526]
[98.07507324 179.19886780]
[104.11766815 193.82067871]
[94.92279053 205.53834534]
[93.14032745 220.43206787]
[91.35785675 235.32577515]
[92.36212158 250.29212952]
[96.11842346 264.81417847]
[107.06503296 276.23706055]
[102.76142120 290.49639893]
[106.51772308 305.01846313]
[110.27402496 319.54049683]
[121.22063446 330.96340942]
[116.91703033 345.22271729]
[120.67333221 359.74478149]
[131.61993408 371.16766357]
[127.31633759 385.42697144]
[131.07263184 399.94903564]
[145.90493774 397.63177490]
[160.89294434 396.77951050]
[175.89231873 397.40045166]
[190.75860596 399.48861694]
[205.34861755 403.02389526]
[219.52185059 407.97222900]
[233.14181519 414.28598022]
[246.07733154 421.90432739]
[258.20382690 430.75393677]
[269.40447998 440.74951172]
[279.57147217 451.79486084]
[288.60684204 463.78353882]
[296.42358398 476.60012817]
[302.94644165 490.12121582]
[308.11257935 504.21652222]
[311.87222290 518.75036621]
[314.18917847 533.58270264]
[315.04116821 548.57067871]
[314.41992188 563.57006836]
[312.33145142 578.43634033]
[308.79589844 593.02624512]
[303.84725952 607.19940186]
[297.53323364 620.81921387]
[289.91461182 633.75457764]
[281.06478882 645.88092041]
[271.06896973 657.08135986]
[260.02343750 667.24810791]
[248.03457642 676.28326416]
[235.21781921 684.09973145]
[221.69662476 690.62231445]
[207.60121155 695.78820801]
[193.06730652 699.54754639]
[178.23492432 701.86419678]
[163.24687195 702.71588135]
[148.24752808 702.09436035]
[133.38133240 700.00561523]
[118.79145050 696.46972656]
[104.61841583 691.52081299]
[90.99870300 685.20654297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 171]
[24 170]
[26 168]
[27 167]
[29 165]
[30 164]
[31 163]
[33 161]
[34 160]
[60 159]
[61 158]
[62 157]
[64 155]
[65 154]
[66 153]
[69 150]
[71 148]
[72 147]
[74 144]
[76 142]
[77 141]
[78 140]
[79 139]
[85 138]
[86 137]
[87 136]
[88 135]
[91 132]
[92 131]
[93 121]
[94 120]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
