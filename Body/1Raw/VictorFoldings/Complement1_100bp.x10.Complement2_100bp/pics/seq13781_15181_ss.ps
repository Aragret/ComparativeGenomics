%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[43.88034058 464.28683472]
[42.53712463 479.27322388]
[38.38172913 493.73452759]
[31.56436729 507.14794922]
[22.33148384 519.02862549]
[11.01684093 528.94708252]
[-1.97054315 536.54473877]
[-16.16118431 541.54693604]
[-31.04209709 543.77288818]
[-46.07534790 543.14215088]
[-60.71749496 539.67742920]
[-74.43923187 533.50408936]
[-86.74452209 524.84521484]
[-97.18855286 514.01385498]
[-105.39376068 501.40148926]
[-111.06353760 487.46411133]
[-113.99293518 472.70556641]
[-114.07604218 457.65930176]
[-111.30986786 442.86929321]
[-105.79439545 428.87014771]
[-97.72901917 416.16793823]
[-87.40528107 405.22183228]
[-75.19639587 396.42755127]
[-61.54368973 390.10296631]
[-46.94071198 386.47674561]
[-31.91534615 385.67996216]
[-17.01075172 387.74139404]
[-12.18475342 373.53894043]
[-7.35875607 359.33648682]
[-8.18310547 351.99194336]
[-2.35373616 344.95944214]
[2.68318009 330.83041382]
[7.72009611 316.70135498]
[4.70580673 302.11495972]
[16.62786293 291.71423340]
[7.14428282 283.98635864]
[0.47549769 273.70120239]
[-2.72276306 261.84255981]
[-2.12757778 249.55014038]
[2.21862960 238.01020813]
[9.91073608 228.34095764]
[20.21863937 221.48423767]
[32.15653610 218.11380005]
[44.57719421 218.56913757]
[50.23997879 204.67912292]
[55.90276718 190.78909302]
[61.56555176 176.89906311]
[67.22834015 163.00903320]
[72.78756714 149.07723999]
[78.24291992 135.10444641]
[83.69828033 121.13164520]
[89.15363312 107.15884399]
[94.19055176 93.02981567]
[98.80455780 78.75708008]
[103.41857147 64.48435211]
[108.03257751 50.21161652]
[112.64659119 35.93888092]
[117.26059723 21.66614914]
[121.87461090 7.39341497]
[120.81491089 3.18259501]
[121.11962891 -0.75080949]
[122.53400421 -4.01193333]
[124.70123291 -6.32920551]
[127.21145630 -7.57696247]
[132.66680908 -21.54976082]
[138.12217712 -35.52255630]
[143.57752991 -49.49535751]
[149.03288269 -63.46815491]
[153.43388367 -77.80799866]
[156.75614929 -92.43546295]
[160.07839966 -107.06291962]
[163.40066528 -121.69038391]
[166.50477600 -136.36567688]
[169.39004517 -151.08557129]
[172.27531433 -165.80546570]
[175.16059875 -180.52536011]
[168.79023743 -197.80250549]
[180.83142090 -210.56874084]
[183.49720764 -225.32997131]
[186.16300964 -240.09118652]
[188.82881165 -254.85240173]
[174.40031433 -259.00088501]
[160.46556091 -264.58776855]
[147.16752625 -271.55581665]
[134.64268494 -279.83343506]
[123.01953888 -289.33572388]
[112.41738129 -299.96517944]
[102.94499969 -311.61270142]
[94.69959259 -324.15878296]
[87.76577759 -337.47470093]
[82.21469879 -351.42376709]
[78.10333252 -365.86288452]
[75.47386169 -380.64382935]
[74.35326385 -395.61499023]
[74.75304413 -410.62268066]
[76.66910553 -425.51293945]
[80.08177185 -440.13296509]
[84.95603180 -454.33270264]
[91.24186707 -467.96646118]
[98.87477112 -480.89431763]
[107.77642822 -492.98364258]
[117.85547638 -504.11035156]
[129.00849915 -514.16027832]
[141.12104797 -523.03027344]
[154.06883240 -530.62933350]
[167.71897888 -536.87951660]
[181.93141174 -541.71667480]
[196.56030273 -545.09106445]
[211.45552063 -546.96820068]
[226.46421814 -547.32873535]
[241.43237305 -546.16900635]
[256.20642090 -543.50091553]
[270.63470459 -539.35180664]
[284.56921387 -533.76428223]
[297.86694336 -526.79565430]
[310.39144897 -518.51745605]
[322.01416016 -509.01464844]
[332.61584473 -498.38473511]
[342.08773804 -486.73678589]
[350.33258057 -474.19033813]
[357.26580811 -460.87414551]
[362.81628418 -446.92483521]
[366.92700195 -432.48553467]
[369.55581665 -417.70446777]
[370.67575073 -402.73327637]
[370.27532959 -387.72558594]
[368.35861206 -372.83541870]
[364.94531250 -358.21554565]
[360.07040405 -344.01602173]
[353.78396606 -330.38253784]
[346.15051270 -317.45501709]
[337.24832153 -305.36608887]
[327.16876221 -294.23980713]
[316.01531982 -284.19036865]
[303.90237427 -275.32089233]
[290.95425415 -267.72238159]
[277.30383301 -261.47283936]
[263.09118652 -256.63632202]
[248.46215820 -253.26254272]
[233.56684875 -251.38609314]
[218.55813599 -251.02621460]
[203.59002686 -252.18659973]
[200.92422485 -237.42538452]
[198.25843811 -222.66416931]
[195.59263611 -207.90295410]
[202.22998047 -197.78997803]
[200.12986755 -185.47035217]
[189.88047791 -177.64009094]
[186.99520874 -162.92019653]
[184.10993958 -148.20030212]
[181.22467041 -133.48040771]
[183.09834290 -129.08741760]
[182.23225403 -123.47075653]
[178.02812195 -118.36811829]
[174.70587158 -103.74066162]
[171.38360596 -89.11320496]
[168.06134033 -74.48574066]
[179.37342834 -84.33647156]
[194.07608032 -87.30835724]
[208.32604980 -82.62455750]
[218.39846802 -71.50939941]
[221.66038513 -56.86837006]
[217.25917053 -42.52858734]
[206.34527588 -32.23844528]
[191.77159119 -28.68775558]
[177.34761047 -32.80466461]
[166.84375000 -43.51301956]
[163.00569153 -58.01279831]
[157.55032349 -44.03999710]
[152.09497070 -30.06720161]
[146.63961792 -16.09440231]
[141.18424988 -2.12160516]
[136.14733887 12.00742435]
[131.53332520 26.28015709]
[126.91931915 40.55289078]
[122.30531311 54.82562256]
[117.69130707 69.09835815]
[113.07729340 83.37109375]
[108.46328735 97.64382172]
[109.61604309 100.46528625]
[109.76765442 103.76855469]
[108.73770905 107.18361664]
[106.48498535 110.27901459]
[103.12643433 112.61420441]
[97.67107391 126.58699799]
[92.21572113 140.55979919]
[86.76036072 154.53259277]
[86.55440521 163.66470337]
[81.11836243 168.67182922]
[75.45558167 182.56184387]
[69.79279327 196.45187378]
[64.13000488 210.34190369]
[58.46722031 224.23193359]
[70.87348938 237.21839905]
[76.33148956 254.27340698]
[73.78519440 271.94497681]
[63.79377747 286.67758179]
[48.40961838 295.52755737]
[30.75689316 296.75115967]
[33.41090775 312.34817505]
[21.84912491 321.73828125]
[16.81221008 335.86730957]
[11.77529335 349.99633789]
[6.84369993 364.16247559]
[2.01770210 378.36492920]
[-2.80829549 392.56738281]
[10.26662254 400.01339722]
[21.69591904 409.79949951]
[31.06643105 421.57192993]
[38.03942108 434.90512085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 206]
[28 205]
[29 204]
[31 203]
[32 202]
[33 201]
[35 199]
[44 193]
[45 192]
[46 191]
[47 190]
[48 189]
[49 187]
[50 186]
[51 185]
[52 184]
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[58 174]
[59 173]
[64 172]
[65 171]
[66 170]
[67 169]
[68 168]
[69 157]
[70 156]
[71 155]
[72 154]
[73 151]
[74 150]
[75 149]
[76 148]
[78 145]
[79 144]
[80 143]
[81 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
