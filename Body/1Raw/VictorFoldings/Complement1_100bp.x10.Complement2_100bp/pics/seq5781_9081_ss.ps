%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[84.76715851 506.28244019]
[72.66213226 515.19134521]
[59.33898163 522.14794922]
[45.11001968 526.98913574]
[30.30879211 529.60144043]
[15.28226089 529.92358398]
[0.38266948 527.94812012]
[-14.04071426 523.72125244]
[-27.64978409 517.34204102]
[-40.12552643 508.96017456]
[-51.17549133 498.77200317]
[-60.54064941 487.01638794]
[-68.00147247 473.96893311]
[-73.38306427 459.93542480]
[-76.55927277 445.24487305]
[-77.45564270 430.24166870]
[-76.05117035 415.27743530]
[-72.37876129 400.70300293]
[-66.52452087 386.86001587]
[-58.62566757 374.07296753]
[-48.86736679 362.64160156]
[-37.47836685 352.83389282]
[-24.72564316 344.87976074]
[-10.90813732 338.96563721]
[3.65025020 335.23016357]
[18.60824776 333.76089478]
[33.61521912 334.59228516]
[36.71932983 319.91699219]
[39.82344055 305.24166870]
[42.92755127 290.56637573]
[46.03166199 275.89108276]
[44.42514420 272.75238037]
[44.25906754 268.67959595]
[45.95589447 264.35824585]
[49.61596680 260.63656616]
[53.37226486 246.11450195]
[49.06866074 231.85517883]
[60.01527023 220.43229675]
[55.71166611 206.17297363]
[66.65827179 194.75009155]
[70.41457367 180.22802734]
[64.54778290 169.64939880]
[67.55837250 157.52009583]
[78.36175537 150.47383118]
[82.33384705 136.00930786]
[86.30594635 121.54478455]
[90.27804565 107.08026123]
[94.03433990 92.55820465]
[97.57401276 77.98182678]
[83.60132599 83.43746185]
[70.54817963 76.04723358]
[68.03687286 61.25895309]
[77.91864777 49.97397995]
[92.90902710 50.51118469]
[101.95732117 62.47293854]
[106.57133484 48.20020676]
[111.18534088 33.92747116]
[115.79935455 19.65473747]
[103.15722656 11.43209839]
[93.08219147 0.22588651]
[86.25657654 -13.19599247]
[83.14029694 -27.91589355]
[83.93990326 -42.92916489]
[88.59489441 -57.21272278]
[96.78224945 -69.79476929]
[107.93881989 -79.82089233]
[121.30008698 -86.61212921]
[135.95254517 -89.71089172]
[150.89614868 -88.91181946]
[155.51014709 -103.18455505]
[160.12416077 -117.45729065]
[154.95701599 -129.27520752]
[159.09385681 -141.06802368]
[169.80233765 -146.69429016]
[174.62834167 -160.89674377]
[179.45434570 -175.09919739]
[184.28033447 -189.30166626]
[175.50117493 -201.95994568]
[175.85484314 -217.18257141]
[184.99621582 -229.13662720]
[199.25308228 -233.36505127]
[204.07908630 -247.56750488]
[208.90509033 -261.76995850]
[213.73107910 -275.97241211]
[200.04098511 -282.13082886]
[186.99827576 -289.56268311]
[174.72108459 -298.20068359]
[163.32057190 -307.96661377]
[152.90002441 -318.77203369]
[143.55378723 -330.51904297]
[135.36651611 -343.10131836]
[128.41233826 -356.40484619]
[122.75425720 -370.30920410]
[118.44350433 -384.68841553]
[115.51911926 -399.41232300]
[114.00758362 -414.34750366]
[113.92259216 -429.35873413]
[115.26490784 -444.31008911]
[118.02237701 -459.06616211]
[122.17003632 -473.49328613]
[127.67031097 -487.46078491]
[134.47338867 -500.84222412]
[142.51766968 -513.51641846]
[151.73028564 -525.36853027]
[162.02781677 -536.29119873]
[173.31700134 -546.18560791]
[185.49559021 -554.96209717]
[198.45330811 -562.54113770]
[212.07279968 -568.85418701]
[226.23071289 -573.84399414]
[240.79882812 -577.46539307]
[255.64523315 -579.68560791]
[270.63543701 -580.48449707]
[285.63372803 -579.85485840]
[300.50424194 -577.80236816]
[315.11230469 -574.34564209]
[329.32562256 -569.51593018]
[343.01550293 -563.35705566]
[356.05795288 -555.92468262]
[368.33480835 -547.28625488]
[379.73495483 -537.51989746]
[390.15512085 -526.71411133]
[399.50094604 -514.96673584]
[407.68774414 -502.38418579]
[414.64144897 -489.08038330]
[420.29901123 -475.17584229]
[424.60925293 -460.79644775]
[427.53308105 -446.07244873]
[429.04409790 -431.13720703]
[429.12854004 -416.12594604]
[427.78567505 -401.17465210]
[425.02764893 -386.41870117]
[420.87948608 -371.99172974]
[415.37869263 -358.02441406]
[408.57513428 -344.64321899]
[400.53039551 -331.96936035]
[391.31732178 -320.11758423]
[381.01940918 -309.19525146]
[369.72985840 -299.30126953]
[357.55093384 -290.52523804]
[344.59295654 -282.94662476]
[330.97323608 -276.63409424]
[316.81512451 -271.64480591]
[302.24688721 -268.02392578]
[287.40042114 -265.80426025]
[272.41015625 -265.00592041]
[257.41192627 -265.63610840]
[242.54147339 -267.68914795]
[227.93353271 -271.14642334]
[223.10754395 -256.94396973]
[218.28153992 -242.74151611]
[213.45555115 -228.53904724]
[222.18472290 -216.49996948]
[222.15054321 -201.45127869]
[213.15657043 -189.16464233]
[198.48278809 -184.47566223]
[193.65679932 -170.27320862]
[188.83079529 -156.07075500]
[184.00480652 -141.86830139]
[188.34565735 -124.86465454]
[174.39689636 -112.84327698]
[169.78288269 -98.57054138]
[165.16886902 -84.29781342]
[177.75234985 -76.19808197]
[187.81809998 -65.10855865]
[194.67552185 -51.78113937]
[197.85183716 -37.12155533]
[197.12464905 -22.12783051]
[192.53753662 -7.82233143]
[184.39746094 4.81795359]
[173.25424194 14.92812634]
[159.86346436 21.81456375]
[145.13517761 25.00249672]
[130.07208252 24.26874733]
[125.45807648 38.54148102]
[120.84407043 52.81421280]
[116.23005676 67.08694458]
[112.15039062 81.52149963]
[108.61071777 96.09787750]
[110.25478363 101.07894135]
[108.99102020 106.62657166]
[104.74256897 111.05236053]
[100.77046967 125.51688385]
[96.79837036 139.98139954]
[92.82627869 154.44593811]
[97.89397430 172.14903259]
[84.93663025 183.98432922]
[81.18033600 198.50639343]
[85.21526337 213.80442810]
[74.53733063 224.18859863]
[78.57225800 239.48663330]
[67.89432526 249.87080383]
[64.13802338 264.39285278]
[60.70696259 278.99517822]
[57.60285187 293.67050171]
[54.49874115 308.34579468]
[51.39463425 323.02108765]
[48.29052353 337.69638062]
[62.34881592 343.01287842]
[75.43074036 350.41311646]
[87.22963715 359.72366333]
[97.46893311 370.72628784]
[105.90858459 383.16302490]
[112.35076904 396.74237061]
[116.64447021 411.14599609]
[118.68903351 426.03625488]
[118.43653870 441.06411743]
[115.89289093 455.87731934]
[111.11772919 470.12857056]
[104.22299194 483.48382568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[35 193]
[36 192]
[38 190]
[40 188]
[41 187]
[44 185]
[45 184]
[46 183]
[47 182]
[48 179]
[49 178]
[55 177]
[56 176]
[57 175]
[58 174]
[69 163]
[70 162]
[71 161]
[74 159]
[75 158]
[76 157]
[77 156]
[81 152]
[82 151]
[83 150]
[84 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
