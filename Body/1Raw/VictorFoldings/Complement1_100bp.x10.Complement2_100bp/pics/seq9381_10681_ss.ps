%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[182.20417786 530.06951904]
[171.43148804 519.62658691]
[161.22494507 508.62969971]
[151.61297607 497.10946655]
[142.62240601 485.09802246]
[134.27825928 472.62884521]
[126.60382080 459.73666382]
[119.62046814 446.45742798]
[113.34765625 432.82815552]
[107.80287933 418.88681030]
[103.00159454 404.67227173]
[98.95717621 390.22415161]
[95.68090057 375.58273315]
[93.18190002 360.78878784]
[91.46713257 345.88360596]
[90.54138947 330.90866089]
[90.40724182 315.90576172]
[91.06507111 300.91668701]
[92.51303101 285.98318481]
[94.74710083 271.14694214]
[97.76104736 256.44927979]
[101.54646301 241.93115234]
[106.09281158 227.63302612]
[111.38741302 213.59477234]
[117.41551208 199.85551453]
[124.16030121 186.45352173]
[131.60298157 173.42617798]
[139.72282410 160.80976868]
[148.49719238 148.63948059]
[136.80960083 139.23733521]
[125.12202454 129.83517456]
[113.43444824 120.43302917]
[101.74686432 111.03087616]
[89.98961639 101.71599579]
[78.16334534 92.48889923]
[66.33707428 83.26179504]
[54.51080322 74.03469849]
[42.68453217 64.80760193]
[32.49443436 75.82705688]
[21.41798210 85.95517731]
[9.53287315 95.12091064]
[-3.07752895 103.25997162]
[-16.32476807 110.31526947]
[-30.11592293 116.23731232]
[-44.35425568 120.98455811]
[-58.93989944 124.52371979]
[-73.77053833 126.82995605]
[-88.74214172 127.88710785]
[-103.74970245 127.68774414]
[-118.68794250 126.23326874]
[-133.45208740 123.53388977]
[-147.93856812 119.60852814]
[-162.04577637 114.48473358]
[-175.67474365 108.19844055]
[-188.72990417 100.79373932]
[-201.11964417 92.32257080]
[-212.75708008 82.84436035]
[-223.56059265 72.42558289]
[-233.45437622 61.13933182]
[-242.36904907 49.06476212]
[-250.24206543 36.28657532]
[-257.01821899 22.89440155]
[-262.64996338 8.98217869]
[-267.09780884 -5.35250759]
[-270.33056641 -20.00910759]
[-272.32550049 -34.88481522]
[-273.06869507 -49.87528610]
[-272.55490112 -64.87537384]
[-270.78771973 -79.77985382]
[-267.77954102 -94.48419189]
[-263.55148315 -108.88523102]
[-258.13317871 -122.88197327]
[-251.56268311 -136.37622070]
[-243.88603210 -149.27334595]
[-235.15710449 -161.48286438]
[-225.43710327 -172.91912842]
[-214.79423523 -183.50193787]
[-203.30313110 -193.15704346]
[-191.04441833 -201.81674194]
[-178.10404968 -209.42027283]
[-164.57283020 -215.91429138]
[-150.54563904 -221.25328064]
[-136.12089539 -225.39976501]
[-121.39977264 -228.32466125]
[-106.48552704 -230.00746155]
[-91.48277283 -230.43635559]
[-76.49674988 -229.60833740]
[-61.63257217 -227.52922058]
[-46.99450302 -224.21357727]
[-32.68521881 -219.68467712]
[-18.80509567 -213.97427368]
[-5.45148706 -207.12243652]
[7.28193521 -199.17721558]
[19.30585480 -190.19435120]
[30.53593254 -180.23684692]
[40.89339447 -169.37455750]
[50.30558777 -157.68365479]
[58.70649338 -145.24615479]
[66.03718567 -132.14930725]
[72.24624634 -118.48496246]
[77.29011536 -104.34898376]
[81.13341522 -89.84052277]
[83.74919128 -75.06134033]
[85.11909485 -60.11510468]
[85.23352051 -45.10665894]
[84.09165192 -30.14127541]
[81.70150757 -15.32392788]
[78.07985687 -0.75855196]
[73.25209808 13.45268631]
[67.25209808 27.21010208]
[60.12193298 40.41719818]
[51.91163254 52.98133087]
[63.73790359 62.20843124]
[75.56417084 71.43553162]
[87.39044189 80.66262817]
[99.21671295 89.88972473]
[107.00389862 91.97113037]
[111.14901733 99.34329987]
[122.83659363 108.74544525]
[134.52418518 118.14759827]
[146.21176147 127.54975128]
[157.89933777 136.95190430]
[167.90748596 125.77413177]
[178.49157715 115.14012146]
[189.62214661 105.07951355]
[201.26815796 95.62034607]
[213.39715576 86.78898621]
[225.97532654 78.61004639]
[238.96760559 71.10632324]
[252.33779907 64.29872894]
[266.04864502 58.20624161]
[280.06188965 52.84584045]
[294.33853149 48.23246384]
[308.83874512 44.37897491]
[323.52209473 41.29610825]
[338.34771729 38.99246216]
[353.27423096 37.47445297]
[368.26007080 36.74631119]
[383.26345825 36.81007004]
[398.24255371 37.66555023]
[413.15563965 39.31036758]
[427.96112061 41.73993683]
[442.61776733 44.94748688]
[457.08468628 48.92407608]
[471.32159424 53.65862274]
[485.28878784 59.13793182]
[498.94735718 65.34673309]
[512.25921631 72.26770782]
[525.18725586 79.88158417]
[537.69543457 88.16713715]
[549.74896240 97.10126495]
[561.31414795 106.65906525]
[572.35882568 116.81391144]
[582.85217285 127.53749084]
[592.76489258 138.79991150]
[602.06951904 150.56979370]
[610.73999023 162.81433105]
[618.75213623 175.49938965]
[626.08367920 188.58961487]
[632.71411133 202.04852295]
[638.62506104 215.83859253]
[643.79998779 229.92141724]
[648.22448730 244.25770569]
[651.88616943 258.80752563]
[654.77490234 273.53030396]
[656.88262939 288.38504028]
[658.20343018 303.33032227]
[658.73364258 318.32446289]
[658.47180176 333.32568359]
[657.41864014 348.29217529]
[655.57708740 363.18225098]
[652.95227051 377.95437622]
[649.55151367 392.56738281]
[645.38421631 406.98056030]
[640.46215820 421.15371704]
[634.79888916 435.04733276]
[628.41033936 448.62274170]
[621.31420898 461.84204102]
[613.53027344 474.66845703]
[605.08032227 487.06616211]
[595.98785400 499.00067139]
[586.27819824 510.43865967]
[575.97839355 521.34826660]
[565.11718750 531.69915771]
[553.72491455 541.46234131]
[541.83319092 550.61071777]
[529.47521973 559.11877441]
[516.68548584 566.96276855]
[503.49963379 574.12084961]
[489.95434570 580.57305908]
[476.08743286 586.30139160]
[461.93753052 591.28991699]
[447.54406738 595.52471924]
[432.94717407 598.99401855]
[418.18753052 601.68817139]
[403.30627441 603.59954834]
[388.34487915 604.72290039]
[373.34503174 605.05511475]
[358.34857178 604.59527588]
[343.39727783 603.34460449]
[328.53283691 601.30657959]
[313.79663086 598.48693848]
[299.22979736 594.89355469]
[284.87292480 590.53637695]
[270.76596069 585.42755127]
[256.94833374 579.58142090]
[243.45845032 573.01416016]
[230.33398438 565.74407959]
[217.61146545 557.79150391]
[205.32640076 549.17858887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 122]
[30 121]
[31 120]
[32 119]
[33 118]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
