%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[40.07355881 562.42895508]
[28.43938065 571.90802002]
[16.13691139 580.50201416]
[3.23335028 588.16394043]
[-10.20083046 594.85198975]
[-24.09225655 600.52966309]
[-38.36505890 605.16583252]
[-52.94127655 608.73529053]
[-67.74131012 611.21850586]
[-82.68431091 612.60192871]
[-97.68868256 612.87799072]
[-112.67245483 612.04510498]
[-127.55381012 610.10797119]
[-142.25146484 607.07708740]
[-156.68513489 602.96899414]
[-170.77600098 597.80621338]
[-184.44709778 591.61682129]
[-197.62374878 584.43469238]
[-210.23399353 576.29901123]
[-222.20896912 567.25427246]
[-233.48326111 557.34985352]
[-243.99528503 546.63983154]
[-253.68765259 535.18273926]
[-262.50738525 523.04107666]
[-270.40637207 510.28125000]
[-277.34140015 496.97290039]
[-283.27465820 483.18872070]
[-288.17367554 469.00396729]
[-292.01177979 454.49618530]
[-294.76791382 439.74453735]
[-296.42709351 424.82962036]
[-296.98022461 409.83291626]
[-296.42428589 394.83633423]
[-294.76232910 379.92172241]
[-292.00344849 365.17059326]
[-288.16265869 350.66351318]
[-283.26098633 336.47970581]
[-277.32516479 322.69662476]
[-270.38763428 309.38955688]
[-262.48629761 296.63116455]
[-253.66427612 284.49118042]
[-243.96978760 273.03588867]
[-233.45576477 262.32781982]
[-222.17962646 252.42550659]
[-210.20297241 243.38299561]
[-197.59120178 235.24969482]
[-184.41320801 228.07002258]
[-170.74096680 221.88319397]
[-156.64913940 216.72299194]
[-142.21470642 212.61759949]
[-127.51648712 209.58944702]
[-112.63477325 207.65507507]
[-97.65084076 206.82504272]
[-82.64652252 207.10388184]
[-67.70378113 208.49006653]
[-52.90421295 210.97602844]
[-38.32865524 214.54820251]
[-24.05672073 219.18707275]
[-10.16635227 224.86729431]
[3.26658154 231.55784607]
[10.92717934 218.66151428]
[18.58777618 205.76519775]
[26.24837303 192.86886597]
[33.90896988 179.97253418]
[19.14364624 182.61549377]
[6.75585651 174.15719604]
[3.84188914 159.44296265]
[12.07099724 146.90176392]
[26.72917557 143.71775818]
[39.41955185 151.71490479]
[42.87265015 166.31112671]
[51.65325165 154.14967346]
[60.43385696 141.98822021]
[69.21446228 129.82676697]
[77.99506378 117.66530609]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[109.84348297 73.55408478]
[118.62408447 61.39263153]
[108.30626678 48.93354797]
[101.55506134 34.24476624]
[98.82217407 18.32233620]
[100.28704834 2.24439955]
[105.84506989 -12.90182209]
[115.11502075 -26.09354401]
[127.46523285 -36.44149017]
[142.05662537 -43.24982452]
[157.89968872 -46.06296158]
[173.92164612 -44.69602966]
[189.03901672 -39.24702072]
[197.45364380 -51.66451263]
[205.86825562 -64.08200836]
[214.28288269 -76.49950409]
[222.69749451 -88.91699982]
[211.18460083 -98.55257416]
[200.70561218 -109.30346680]
[191.36804199 -121.05935669]
[183.26773071 -133.69960022]
[176.48779297 -147.09451294]
[171.09779358 -161.10661316]
[167.15304565 -175.59211731]
[164.69404602 -190.40240479]
[163.74600220 -205.38546753]
[164.31866455 -220.38755798]
[166.40614319 -235.25476074]
[169.98703003 -249.83448792]
[175.02456665 -263.97711182]
[181.46705627 -277.53753662]
[189.24839783 -290.37661743]
[198.28874207 -302.36257935]
[208.49531555 -313.37243652]
[219.76339722 -323.29318237]
[231.97732544 -332.02307129]
[245.01179504 -339.47247314]
[258.73303223 -345.56497192]
[273.00027466 -350.23800659]
[287.66705322 -353.44366455]
[302.58291626 -355.14904785]
[317.59475708 -355.33666992]
[332.54858398 -354.00454712]
[347.29089355 -351.16641235]
[361.67044067 -346.85134888]
[375.53964233 -341.10363770]
[388.75619507 -333.98229980]
[401.18447876 -325.56036377]
[412.69696045 -315.92428589]
[423.17547607 -305.17294312]
[432.51251221 -293.41662598]
[440.61227417 -280.77603149]
[447.39163208 -267.38082886]
[452.78100586 -253.36849976]
[456.72512817 -238.88281250]
[459.18347168 -224.07241821]
[460.13085938 -209.08930969]
[459.55752563 -194.08723450]
[457.46939087 -179.22013855]
[453.88787842 -164.64057922]
[448.84970093 -150.49815369]
[442.40661621 -136.93800354]
[434.62472534 -124.09928131]
[425.58383179 -112.11372375]
[415.37677002 -101.10431671]
[404.10827637 -91.18405151]
[391.89395142 -82.45471191]
[378.85916138 -75.00588226]
[365.13763428 -68.91400146]
[350.87020874 -64.24157715]
[336.20327759 -61.03655243]
[321.28735352 -59.33182907]
[306.27548218 -59.14488983]
[291.32174683 -60.47765732]
[276.57955933 -63.31645203]
[262.20019531 -67.63214111]
[248.33123779 -73.38044739]
[235.11499023 -80.50238037]
[226.70036316 -68.08488464]
[218.28575134 -55.66739273]
[209.87113953 -43.24989700]
[201.45651245 -30.83240128]
[210.85581970 -20.60741615]
[217.73728943 -8.53428841]
[221.75007629 4.77851391]
[222.68801880 18.65913963]
[220.50021362 32.40626144]
[215.29376221 45.32451248]
[207.32856750 56.75966263]
[197.00433350 66.13175201]
[184.84051514 72.96447754]
[171.45019531 76.90946198]
[157.50915527 77.76393890]
[143.72178650 75.48122406]
[130.78553772 70.17323303]
[122.00493622 82.33469391]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[90.15651703 126.44591522]
[81.37591553 138.60736084]
[72.59531403 150.76882935]
[63.81470871 162.93028259]
[55.03410721 175.09173584]
[46.80529785 187.63313293]
[39.14469910 200.52946472]
[31.48410416 213.42579651]
[23.82350540 226.32211304]
[16.16290855 239.21844482]
[28.46406746 247.81430054]
[40.09680176 257.29516602]
[50.99758148 267.60922241]
[61.10686874 278.70019531]
[70.36944580 290.50747681]
[78.73473358 302.96658325]
[86.15702820 316.00946045]
[92.59580231 329.56488037]
[98.01588440 343.55880737]
[102.38767242 357.91479492]
[105.68728638 372.55447388]
[107.89671326 387.39785767]
[109.00387573 402.36386108]
[109.00273132 417.37075806]
[107.89328766 432.33660889]
[105.68160248 447.17962646]
[102.37975311 461.81878662]
[98.00578308 476.17413330]
[92.58356476 490.16723633]
[86.14273071 503.72167969]
[78.71844482 516.76342773]
[70.35126495 529.22125244]
[61.08688736 541.02709961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 187]
[61 186]
[62 185]
[63 184]
[64 183]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[76 177]
[78 175]
[79 174]
[80 173]
[91 160]
[92 159]
[93 158]
[94 157]
[95 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
