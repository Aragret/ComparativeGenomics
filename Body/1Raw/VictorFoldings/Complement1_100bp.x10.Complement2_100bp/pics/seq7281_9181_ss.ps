%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[153.42942810 844.93090820]
[138.64074707 842.40893555]
[123.96977234 839.27398682]
[109.44190979 835.53149414]
[95.08230591 831.18786621]
[80.91581726 826.25061035]
[66.96697235 820.72839355]
[53.25992203 814.63067627]
[39.81838989 807.96807861]
[26.66564941 800.75207520]
[13.82446861 792.99517822]
[1.31707788 784.71081543]
[-10.83486938 775.91333008]
[-22.61033630 766.61798096]
[-33.98893738 756.84082031]
[-44.95097351 746.59881592]
[-55.47746658 735.90960693]
[-65.55019379 724.79180908]
[-75.15171814 713.26464844]
[-84.26541901 701.34802246]
[-92.87551880 689.06262207]
[-100.96710968 676.42962646]
[-108.52618408 663.47100830]
[-115.53964996 650.20916748]
[-121.99537659 636.66705322]
[-127.88218689 622.86810303]
[-133.18988037 608.83624268]
[-137.90927124 594.59570312]
[-142.03219604 580.17120361]
[-145.55151367 565.58764648]
[-148.46113586 550.87030029]
[-150.75601196 536.04467773]
[-152.43217468 521.13647461]
[-153.48674011 506.17138672]
[-153.91786194 491.17541504]
[-153.72479248 476.17446899]
[-152.90788269 461.19454956]
[-151.46852112 446.26156616]
[-149.40922546 431.40139771]
[-146.73356628 416.63977051]
[-143.44613647 402.00219727]
[-139.55265808 387.51406860]
[-135.05987549 373.20040894]
[-129.97554016 359.08605957]
[-124.30848694 345.19543457]
[-118.06849670 331.55255127]
[-111.26638794 318.18109131]
[-103.91393280 305.10412598]
[-96.02385712 292.34432983]
[-87.60982513 279.92382812]
[-78.68640137 267.86404419]
[-69.26902771 256.18594360]
[-59.37401962 244.90966797]
[-49.01849747 234.05477905]
[-38.22039413 223.64007568]
[-26.99839783 213.68356323]
[-15.37194061 204.20248413]
[-3.36114740 195.21325684]
[9.01318741 186.73144531]
[21.72964287 178.77171326]
[34.76620102 171.34786987]
[48.10029984 164.47276306]
[61.70885086 158.15827942]
[75.56829071 152.41534424]
[89.65464020 147.25393677]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[72.11032104 67.90293121]
[68.28810120 53.17726135]
[75.85549164 40.39953995]
[71.88339996 25.93501472]
[67.91130066 11.47049141]
[63.93920517 -2.99403238]
[59.96710968 -17.45855713]
[55.99501419 -31.92308044]
[41.02197647 -30.51622009]
[26.03212929 -31.73096466]
[11.48099709 -35.53039551]
[-2.18922687 -41.79905701]
[-14.56311989 -50.34644699]
[-25.26465416 -60.91282272]
[-33.96862411 -73.17708588]
[-40.41051865 -86.76653290]
[-44.39458466 -101.26819611]
[-45.79974365 -116.24139404]
[-44.58330154 -131.23110962]
[-40.78221893 -145.78179932]
[-34.51200867 -159.45132446]
[-25.96321487 -171.82423401]
[-15.39562702 -182.52458191]
[-3.13037992 -191.22715759]
[10.45979786 -197.66751099]
[24.96191597 -201.64993286]
[39.93527222 -203.05339050]
[54.92484665 -201.83525085]
[69.47511292 -198.03251648]
[83.14391327 -191.76075745]
[95.51586914 -183.21055603]
[106.21501160 -172.64175415]
[114.91619110 -160.37551880]
[121.35501099 -146.78462219]
[125.33578491 -132.28204346]
[126.73754883 -117.30853271]
[125.51770782 -102.31909943]
[121.71332550 -87.76925659]
[115.44001007 -74.10116577]
[106.88841248 -61.73018265]
[96.31839752 -51.03224564]
[84.05117798 -42.33245087]
[70.45954132 -35.89517593]
[74.43163300 -21.43065262]
[78.40373230 -6.96612835]
[82.37582397 7.49839544]
[86.34792328 21.96291924]
[90.32002258 36.42744446]
[103.35179138 43.54843521]
[107.58611298 58.16093826]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[133.02737427 135.34336853]
[147.77413940 132.58692932]
[162.62281799 130.44633484]
[177.54768372 128.92527771]
[192.52291870 128.02638245]
[207.52256775 127.75121307]
[222.52069092 128.10023499]
[237.49130249 129.07287598]
[252.40849304 130.66741943]
[267.24645996 132.88111877]
[281.97949219 135.71012878]
[296.58206177 139.14958191]
[311.02893066 143.19348145]
[325.29507446 147.83486938]
[339.35580444 153.06567383]
[353.18676758 158.87686157]
[366.76400757 165.25837708]
[380.06405640 172.19915771]
[393.06384277 179.68717957]
[405.74090576 187.70950317]
[418.07327271 196.25222778]
[430.03958130 205.30056763]
[441.61917114 214.83886719]
[452.79193115 224.85058594]
[463.53854370 235.31842041]
[473.84042358 246.22422791]
[483.67971802 257.54913330]
[493.03939819 269.27355957]
[501.90322876 281.37716675]
[510.25592041 293.83901978]
[518.08300781 306.63757324]
[525.37091064 319.75061035]
[532.10699463 333.15545654]
[538.27960205 346.82894897]
[543.87811279 360.74734497]
[548.89282227 374.88659668]
[553.31494141 389.22222900]
[557.13696289 403.72937012]
[560.35217285 418.38296509]
[562.95501709 433.15762329]
[564.94104004 448.02777100]
[566.30670166 462.96765137]
[567.04974365 477.95141602]
[567.16888428 492.95312500]
[566.66381836 507.94680786]
[565.53546143 522.90649414]
[563.78582764 537.80627441]
[561.41784668 552.62042236]
[558.43572998 567.32318115]
[554.84454346 581.88922119]
[550.65057373 596.29321289]
[545.86096191 610.51031494]
[540.48419189 624.51586914]
[534.52941895 638.28564453]
[528.00695801 651.79571533]
[520.92822266 665.02282715]
[513.30535889 677.94403076]
[505.15155029 690.53692627]
[496.48098755 702.77972412]
[487.30862427 714.65130615]
[477.65039062 726.13098145]
[467.52297974 737.19897461]
[456.94390869 747.83612061]
[445.93148804 758.02398682]
[434.50482178 767.74493408]
[422.68365479 776.98211670]
[410.48849487 785.71954346]
[397.94039917 793.94213867]
[385.06112671 801.63562012]
[371.87298584 808.78668213]
[358.39874268 815.38293457]
[344.66180420 821.41302490]
[330.68591309 826.86639404]
[316.49523926 831.73370361]
[302.11441040 836.00646973]
[287.56826782 839.67730713]
[272.88201904 842.73992920]
[258.08105469 845.18890381]
[243.19107056 847.02008057]
[228.23777771 848.23028564]
[213.24710083 848.81738281]
[198.24496460 848.78039551]
[183.25735474 848.11938477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 127]
[67 126]
[68 125]
[70 123]
[71 122]
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
