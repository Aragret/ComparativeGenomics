%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[159.87384033 570.70666504]
[158.76319885 555.54632568]
[163.54342651 541.11657715]
[173.48559570 529.61779785]
[187.07359314 522.80352783]
[185.95794678 507.84506226]
[184.84230042 492.88659668]
[183.72665405 477.92816162]
[182.61100769 462.96969604]
[181.49536133 448.01123047]
[180.15711975 433.07104492]
[178.59660339 418.15246582]
[176.81413269 403.25872803]
[174.81011963 388.39321899]
[172.80610657 373.52767944]
[170.80209351 358.66213989]
[168.79808044 343.79663086]
[166.79406738 328.93109131]
[162.92976379 314.43740845]
[157.26696777 300.54736328]
[151.60418701 286.65734863]
[145.94140625 272.76733398]
[139.14071655 286.13708496]
[124.92135620 290.91305542]
[111.42881775 284.35931396]
[106.39223480 270.23016357]
[112.69680023 256.61941528]
[126.73096466 251.32392883]
[140.45466614 257.37649536]
[136.05366516 243.03665161]
[131.65266418 228.69680786]
[127.25167084 214.35696411]
[116.12071228 204.45994568]
[119.46852112 188.99699402]
[115.06752014 174.65715027]
[101.01036072 176.15576172]
[86.91838837 175.03060913]
[73.27711487 171.32044983]
[60.55651093 165.15313721]
[49.19483566 156.74111938]
[39.58352661 146.37423706]
[32.05371857 134.40963745]
[26.86483574 121.25953674]
[24.19564629 107.37699127]
[24.13810921 93.24029541]
[26.69420815 79.33647919]
[31.77587891 66.14458466]
[39.20804596 54.11908722]
[48.73464966 43.67430496]
[60.02747345 35.17008972]
[72.69745636 28.89942932]
[68.72535706 14.43490505]
[64.75326538 -0.02961863]
[60.78116608 -14.49414253]
[56.80907059 -28.95866585]
[52.83697510 -43.42319107]
[41.72150803 -54.68183136]
[45.81233597 -69.00364685]
[41.84024048 -83.46817017]
[37.86814499 -97.93269348]
[33.89604950 -112.39721680]
[29.92395210 -126.86174011]
[25.73694038 -141.26551819]
[21.33594322 -155.60537720]
[16.93494415 -169.94522095]
[14.48669910 -155.14636230]
[8.48184013 -141.40075684]
[-0.71243370 -129.54895020]
[-12.53388882 -120.31568909]
[-26.25963783 -114.26557922]
[-41.05034637 -111.76859283]
[-56.00156021 -112.97743225]
[-70.19899750 -117.81816101]
[-82.77449036 -125.99477386]
[-92.95903778 -137.00726318]
[-100.12985229 -150.18222046]
[-103.84843445 -164.71398926]
[-103.88739014 -179.71392822]
[-100.24433899 -194.26481628]
[-93.14205170 -207.47683716]
[-83.01483917 -218.54208374]
[-70.48198700 -226.78390503]
[-56.30988312 -231.69830322]
[-41.36515045 -232.98478699]
[-26.56167221 -230.56466675]
[-12.80468369 -224.58592224]
[-0.93543017 -215.41418457]
[8.32027912 -203.61029053]
[14.39646053 -189.89604187]
[7.28308773 -204.02793884]
[15.58097363 -216.39701843]
[16.25075912 -231.38206482]
[16.92054367 -246.36709595]
[17.14387131 -261.36544800]
[16.92054367 -276.36376953]
[16.69721603 -291.36212158]
[8.75530910 -305.04556274]
[16.30226135 -317.88662720]
[16.07893372 -332.88494873]
[2.39350414 -339.73825073]
[-6.53003979 -352.17324829]
[-8.64113331 -367.33245850]
[-3.45466185 -381.73242188]
[7.83756113 -392.06411743]
[22.64066505 -395.95343018]
[37.55300522 -392.50659180]
[49.14783478 -382.51568604]
[54.76074982 -368.27651978]
[53.10193634 -353.06115723]
[44.55258560 -340.36599731]
[31.07727051 -333.10827637]
[31.30059814 -318.10995483]
[39.22653198 -305.49926758]
[31.69555283 -291.58544922]
[31.91888046 -276.58709717]
[32.14220810 -261.58877563]
[34.05742645 -259.54180908]
[35.27721405 -256.61285400]
[35.46157074 -253.06300354]
[34.37120819 -249.27148438]
[31.90558243 -245.69731140]
[31.23579788 -230.71228027]
[30.56601143 -215.72723389]
[37.72729111 -202.66717529]
[29.38150024 -189.22625732]
[31.27479172 -174.34622192]
[35.67578888 -160.00636292]
[40.07678986 -145.66651917]
[43.80145264 -142.67723083]
[45.68780518 -137.31637573]
[44.38847733 -130.83383179]
[48.36057281 -116.36931610]
[52.33266830 -101.90479279]
[56.30476379 -87.44026947]
[60.27685928 -72.97574615]
[71.10821533 -62.75170135]
[67.30149841 -47.39528656]
[71.27359772 -32.93076324]
[75.24568939 -18.46623802]
[79.21778870 -4.00171471]
[83.18988037 10.46280861]
[87.16197968 24.92733383]
[102.95529938 23.89489937]
[118.62100220 26.14894485]
[133.48258972 31.59213257]
[146.89828491 39.98940659]
[158.28874207 50.97814178]
[167.16209412 64.08380890]
[173.13516235 78.74046326]
[175.94999695 94.31517029]
[175.48506165 110.13537598]
[171.76040649 125.51789856]
[164.93690491 139.79846191]
[155.30920410 152.36041260]
[143.29306030 162.66123962]
[129.40736389 170.25614929]
[133.80836487 184.59599304]
[145.25411987 195.51869202]
[141.59152222 209.95596313]
[145.99250793 224.29580688]
[150.39350891 238.63566589]
[154.79450989 252.97550964]
[159.83142090 267.10452271]
[165.49421692 280.99456787]
[171.15699768 294.88458252]
[176.81979370 308.77462769]
[178.42851257 293.86114502]
[184.73277283 280.25024414]
[195.06726074 269.37832642]
[208.34135437 262.39276123]
[223.15420532 260.03070068]
[237.94258118 262.54144287]
[251.14584351 269.66000366]
[261.37057495 280.63519287]
[267.53781128 294.30871582]
[268.99661255 309.23760986]
[265.59310913 323.84637451]
[257.68646240 336.59332275]
[246.11103821 346.13323975]
[232.08847046 351.45935059]
[217.09857178 352.00958252]
[202.72325134 347.72583008]
[190.47958374 339.06024170]
[181.65959167 326.92709351]
[183.66360474 341.79260254]
[185.66761780 356.65814209]
[187.67163086 371.52368164]
[189.67564392 386.38919067]
[191.67965698 401.25473022]
[195.41178894 406.71206665]
[195.77333069 412.38360596]
[193.51519775 416.59191895]
[195.07572937 431.51052856]
[198.64370728 437.07659912]
[198.83622742 442.75637817]
[196.45381165 446.89559937]
[197.56945801 461.85403442]
[198.68510437 476.81250000]
[199.80075073 491.77096558]
[200.91639709 506.72940063]
[202.03205872 521.68786621]
[216.48056030 526.41113281]
[228.01847839 536.30786133]
[234.88635254 549.86883545]
[236.03688049 565.02618408]
[231.29463196 579.46844482]
[221.38273621 590.99334717]
[207.81271362 597.84338379]
[192.65388489 598.97393799]
[178.21784973 594.21270752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 193]
[12 192]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 166]
[20 165]
[21 164]
[22 163]
[29 162]
[30 161]
[31 160]
[32 159]
[34 157]
[35 156]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[63 128]
[64 127]
[65 126]
[89 125]
[91 123]
[92 122]
[93 121]
[94 116]
[95 115]
[96 114]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
