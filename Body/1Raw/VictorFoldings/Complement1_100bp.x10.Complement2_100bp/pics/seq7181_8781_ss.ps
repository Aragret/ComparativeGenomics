%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[43.84215546 303.61679077]
[40.24687195 318.18618774]
[35.62137985 332.46197510]
[29.98924446 346.37139893]
[23.37916565 359.84359741]
[15.82482815 372.80990601]
[7.36472797 385.20425415]
[-1.95802343 396.96350098]
[-12.09591961 408.02767944]
[-22.99729919 418.34045410]
[-34.60661316 427.84924316]
[-46.86469650 436.50561523]
[-59.70909119 444.26541138]
[-73.07434082 451.08917236]
[-86.89234161 456.94204712]
[-101.09267426 461.79425049]
[-115.60297394 465.62103271]
[-130.34930420 468.40289307]
[-145.25653076 470.12570190]
[-160.24867249 470.78063965]
[-175.24934387 470.36434937]
[-190.18208313 468.87902832]
[-204.97082520 466.33215332]
[-219.54019165 462.73675537]
[-233.81594849 458.11114502]
[-247.72532654 452.47891235]
[-261.19747925 445.86874390]
[-274.16372681 438.31430054]
[-286.55801392 429.85409546]
[-298.31719971 420.53125000]
[-309.38128662 410.39328003]
[-319.69396973 399.49182129]
[-329.20269775 387.88244629]
[-337.85894775 375.62429810]
[-345.61868286 362.77984619]
[-352.44232178 349.41452026]
[-358.29507446 335.59649658]
[-363.14715576 321.39611816]
[-366.97384644 306.88577271]
[-369.75561523 292.13943481]
[-371.47830200 277.23217773]
[-372.13311768 262.24005127]
[-371.71673584 247.23937988]
[-370.23126221 232.30664062]
[-367.68429565 217.51792908]
[-364.08877563 202.94859314]
[-359.46307373 188.67286682]
[-353.83071899 174.76351929]
[-347.22042847 161.29142761]
[-339.66589355 148.32522583]
[-331.20562744 135.93101501]
[-321.88269043 124.17192078]
[-311.74462891 113.10788727]
[-300.84307861 102.79528046]
[-289.23361206 93.28666687]
[-276.97540283 84.63049316]
[-264.13088989 76.87087250]
[-250.76553345 70.04734039]
[-236.94744873 64.19467163]
[-222.74703979 59.34269333]
[-208.23667908 55.51612854]
[-193.49029541 52.73447418]
[-178.58305359 51.01190567]
[-163.59089661 50.35720444]
[-148.59024048 50.77370453]
[-133.65751648 52.25928116]
[-118.86882019 54.80636597]
[-104.29950714 58.40198517]
[-90.02382660 63.02780533]
[-76.11452484 68.66026306]
[-62.64247894 75.27065277]
[-49.67633820 82.82528687]
[-37.28218079 91.28566742]
[-25.52316093 100.60868835]
[-14.45920372 110.74684143]
[-4.14668655 121.64846039]
[5.36183882 133.25799561]
[14.01791859 145.51628113]
[26.85685921 137.75988770]
[39.69580078 130.00349426]
[52.53474045 122.24710083]
[65.19726562 114.20592499]
[77.67705536 105.88398743]
[90.15685272 97.56204224]
[94.58295441 90.82540894]
[102.88497925 89.21071625]
[115.48728943 81.07550049]
[128.08959961 72.94028473]
[140.69190979 64.80506897]
[143.97187805 46.14612579]
[159.58113098 35.98421860]
[177.35115051 40.38220215]
[189.70565796 31.87537575]
[202.06016541 23.36854744]
[214.41467285 14.86172104]
[226.76918030 6.35489416]
[239.12368774 -2.15193295]
[231.57170105 -15.12054539]
[225.02215576 -28.62316704]
[219.51255798 -42.58245468]
[215.07446289 -56.91844940]
[211.73330688 -71.54903412]
[209.50820923 -86.39040375]
[208.41192627 -101.35755157]
[208.45074463 -116.36474609]
[209.62442017 -131.32603455]
[211.92625427 -146.15568542]
[215.34304810 -160.76879883]
[219.85523987 -175.08164978]
[225.43698120 -189.01225281]
[232.05628967 -202.48080444]
[239.67524719 -215.41018677]
[248.25022888 -227.72631836]
[257.73211670 -239.35864258]
[268.06658936 -250.24057007]
[279.19445801 -260.30972290]
[291.05197144 -269.50845337]
[303.57122803 -277.78405762]
[316.68048096 -285.08917236]
[330.30468750 -291.38189697]
[344.36578369 -296.62622070]
[358.78326416 -300.79208374]
[373.47445679 -303.85562134]
[388.35531616 -305.79931641]
[403.34054565 -306.61203003]
[418.34429932 -306.28909302]
[433.28067017 -304.83233643]
[448.06411743 -302.25015259]
[462.60989380 -298.55728149]
[476.83474731 -293.77493286]
[490.65716553 -287.93045044]
[503.99798584 -281.05731201]
[516.78082275 -273.19491577]
[528.93237305 -264.38827515]
[540.38311768 -254.68785095]
[551.06738281 -244.14920044]
[560.92407227 -232.83268738]
[569.89666748 -220.80314636]
[577.93371582 -208.12945557]
[584.98931885 -194.88421631]
[591.02294922 -181.14331055]
[596.00012207 -166.98544312]
[599.89227295 -152.49169922]
[602.67712402 -137.74510193]
[604.33874512 -122.83013153]
[604.86755371 -107.83220673]
[604.26062012 -92.83724213]
[602.52130127 -77.93112183]
[599.65966797 -63.19923782]
[595.69207764 -48.72596741]
[590.64123535 -34.59421539]
[584.53613281 -20.88492584]
[577.41162109 -7.67662621]
[569.30865479 4.95502567]
[560.27349854 16.93767738]
[550.35803223 28.20269012]
[539.61895752 38.68553925]
[528.11785889 48.32618332]
[515.92059326 57.06939697]
[503.09698486 64.86509705]
[489.72055054 71.66863251]
[475.86785889 77.44104004]
[461.61828613 82.14923859]
[447.05346680 85.76627350]
[432.25677490 88.27142334]
[417.31301880 89.65034485]
[402.30776978 89.89512634]
[387.32699585 89.00437164]
[372.45648193 86.98317719]
[357.78140259 83.84313965]
[343.38586426 79.60222626]
[329.35226440 74.28472900]
[315.76101685 67.92111969]
[302.69000244 60.54783630]
[290.21401978 52.20711899]
[278.40457153 42.94674301]
[267.32931519 32.81975174]
[257.05166626 21.88414955]
[247.63050842 10.20257568]
[235.27600098 18.70940399]
[222.92149353 27.21623039]
[210.56698608 35.72305679]
[198.21247864 44.22988510]
[185.85797119 52.73670959]
[186.26959229 64.13832855]
[181.07240295 74.42933655]
[171.45431519 81.00096893]
[159.73948669 82.12512207]
[148.82713318 77.40737915]
[136.22482300 85.54259491]
[123.62250519 93.67781067]
[111.02019501 101.81302643]
[98.47879791 110.04183197]
[85.99900055 118.36377716]
[73.51921082 126.68572235]
[71.20774078 131.36592102]
[67.68449402 134.38916016]
[63.78352737 135.57133484]
[60.29113007 135.08604431]
[47.45219040 142.84243774]
[34.61325073 150.59883118]
[21.77431107 158.35520935]
[28.59814835 171.72041321]
[34.45113373 185.53836060]
[39.30344009 199.73866272]
[43.13034058 214.24893188]
[45.91233444 228.99525452]
[47.63524246 243.90246582]
[48.29029083 258.89459229]
[47.87413406 273.89526367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 202]
[79 201]
[80 200]
[81 199]
[82 195]
[83 194]
[84 193]
[86 192]
[87 191]
[88 190]
[89 189]
[92 184]
[93 183]
[94 182]
[95 181]
[96 180]
[97 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
