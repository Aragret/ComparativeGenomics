%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[70.38265228 596.32446289]
[59.94652557 607.23272705]
[46.95380020 614.91986084]
[32.36862564 618.81536865]
[17.27331924 618.63031006]
[2.78805041 614.37829590]
[-10.01227665 606.37487793]
[-20.17779160 595.21405029]
[-26.95414734 581.72387695]
[-29.83849144 566.90557861]
[-28.61678696 551.85864258]
[-23.37969398 537.69970703]
[-14.51583767 525.47943115]
[-2.68297625 516.10467529]
[11.24081421 510.27111816]
[26.22229576 508.41159058]
[28.44741249 493.57754517]
[30.56203651 478.72735596]
[24.59447479 465.08047485]
[34.10612869 452.43771362]
[36.11014175 437.57220459]
[38.11415482 422.70666504]
[40.11816788 407.84112549]
[42.12218094 392.97561646]
[44.12619400 378.11007690]
[46.13020706 363.24453735]
[36.75200653 357.20303345]
[30.27607727 348.05642700]
[27.66924858 337.10400391]
[29.34537888 325.91921997]
[35.10018539 316.12359619]
[44.13528442 309.15170288]
[55.16878510 306.04104614]
[57.83457947 291.27984619]
[60.50037766 276.51861572]
[63.16617203 261.75738525]
[65.83197021 246.99618530]
[68.49776459 232.23497009]
[71.16355896 217.47373962]
[73.82935333 202.71252441]
[68.47711182 188.81278992]
[78.54380035 176.60737610]
[81.20959473 161.84616089]
[83.87539673 147.08493042]
[78.52314758 133.18519592]
[88.58984375 120.97978210]
[91.25563812 106.21855927]
[91.59061432 91.22230530]
[89.58660126 76.35677338]
[87.58258820 61.49124527]
[73.47277069 55.58698273]
[64.27346039 43.49279022]
[62.37554932 28.51733208]
[68.18939972 14.69506264]
[80.06130981 5.69932604]
[78.05729675 -9.16620255]
[76.05328369 -24.03173065]
[61.94346619 -29.93599319]
[52.74415588 -42.03018570]
[50.84624481 -57.00564575]
[56.66009140 -70.82791138]
[68.53200531 -79.82365417]
[66.52799225 -94.68917847]
[64.52397919 -109.55471039]
[55.01232529 -122.19745636]
[60.97988510 -135.84434509]
[58.97587204 -150.70986938]
[56.97185898 -165.57539368]
[44.38521194 -171.19386292]
[36.28263474 -182.21052551]
[34.69435883 -195.68444824]
[39.92903137 -208.08374023]
[50.52081299 -216.21124268]
[48.73834610 -231.10496521]
[46.95588303 -245.99867249]
[45.17341614 -260.89239502]
[43.39094925 -275.78610229]
[41.60848236 -290.67984009]
[30.23252487 -305.15979004]
[37.76300049 -321.01092529]
[35.75898743 -335.87646484]
[33.53386688 -350.71051025]
[31.08814049 -365.50976562]
[28.64241409 -380.30905151]
[26.19668579 -395.10830688]
[23.75095940 -409.90759277]
[8.71134281 -410.69754028]
[-5.80672073 -414.70251465]
[-19.12419510 -421.73522949]
[-30.61819649 -431.46670532]
[-39.75113297 -443.44183350]
[-46.09583664 -457.10049438]
[-49.35555649 -471.80383301]
[-49.37783051 -486.86416626]
[-46.16161346 -501.57708740]
[-39.85733795 -515.25445557]
[-30.75986290 -527.25653076]
[-19.29469490 -537.02197266]
[-5.99808025 -544.09405518]
[8.50807381 -548.14196777]
[23.54528809 -548.97637939]
[38.41024399 -546.55828857]
[52.40768051 -541.00079346]
[64.88291931 -532.56384277]
[75.25245667 -521.64196777]
[83.03130341 -508.74609375]
[87.85562134 -494.47937012]
[89.49977112 -479.50903320]
[87.88685608 -464.53530884]
[83.09230804 -450.25851440]
[75.34038544 -437.34643555]
[64.99365234 -426.40298462]
[52.53604507 -417.94000244]
[38.55022812 -412.35330200]
[40.99595642 -397.55404663]
[43.44168472 -382.75476074]
[45.88741302 -367.95550537]
[48.33313751 -353.15621948]
[51.62504196 -349.69610596]
[52.77826691 -344.13131714]
[50.62451553 -337.88046265]
[52.62852859 -323.01495361]
[62.05481720 -315.43392944]
[63.84605408 -303.06561279]
[56.50220108 -292.46231079]
[58.28466797 -277.56857300]
[60.06713486 -262.67486572]
[61.84959793 -247.78114319]
[63.63206482 -232.88742065]
[65.41452789 -217.99371338]
[79.99662781 -210.45448303]
[87.28457642 -195.55993652]
[84.22824860 -179.09298706]
[71.83738708 -167.57940674]
[73.84140015 -152.71388245]
[75.84541321 -137.84835815]
[85.21372986 -126.26889038]
[79.38950348 -111.55872345]
[81.39351654 -96.69319153]
[83.39752960 -81.82766724]
[97.22776794 -76.29682159]
[106.49429321 -64.50753021]
[108.62973022 -49.56409073]
[102.96144104 -35.46560287]
[90.91880798 -26.03574371]
[92.92282104 -11.17021561]
[94.92683411 3.69531250]
[108.75707245 9.22615719]
[118.02359772 21.01544952]
[120.15903473 35.95888519]
[114.49074554 50.05737305]
[102.44811249 59.48723221]
[104.45213318 74.35276031]
[106.45614624 89.21829224]
[111.37609863 75.04811096]
[119.89125061 62.69933701]
[131.38688660 53.06343842]
[145.03311157 46.83604050]
[159.84480286 44.46670532]
[174.75268555 46.12647629]
[188.68055725 51.69552994]
[200.62295532 60.77183533]
[209.71772766 72.70016479]
[215.30833435 86.61940002]
[216.99118042 101.52470398]
[214.64476013 116.34004211]
[208.43849182 129.99589539]
[198.82040405 141.50642395]
[186.48481750 150.04067993]
[172.32228088 154.98255920]
[157.35516357 155.97531128]
[142.66397095 152.94726562]
[129.30928040 146.11701965]
[118.25517273 135.97766113]
[110.29965210 123.26115417]
[106.01685333 108.88436127]
[103.35105896 123.64557648]
[108.51262665 138.60113525]
[98.63661194 149.75073242]
[95.97081757 164.51194763]
[93.30502319 179.27316284]
[98.46659088 194.22872925]
[88.59056854 205.37832642]
[85.92477417 220.13954163]
[83.25897980 234.90075684]
[80.59318542 249.66197205]
[77.92739105 264.42318726]
[75.26159668 279.18441772]
[72.59579468 293.94561768]
[69.93000031 308.70684814]
[83.74388123 321.95495605]
[86.75815582 340.70391846]
[77.93349457 357.34884644]
[60.99573517 365.24856567]
[58.99172211 380.11410522]
[56.98770905 394.97961426]
[54.98369598 409.84515381]
[52.97968292 424.71066284]
[50.97566986 439.57620239]
[48.97165680 454.44174194]
[54.79587555 469.15188599]
[45.42756271 480.73135376]
[47.38240433 489.65417480]
[43.28145599 495.80267334]
[41.05633926 510.63671875]
[54.83290100 516.80993652]
[66.43232727 526.47204590]
[74.99387360 538.90594482]
[79.88220978 553.18902588]
[80.73458862 568.26141357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 205]
[17 204]
[18 202]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[42 181]
[43 180]
[44 179]
[46 177]
[47 176]
[48 154]
[49 153]
[50 152]
[55 147]
[56 146]
[57 145]
[62 140]
[63 139]
[64 138]
[66 136]
[67 135]
[68 134]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[80 122]
[81 121]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
