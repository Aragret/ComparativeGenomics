%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[71.34836578 786.83233643]
[56.34750366 787.19250488]
[41.35438156 786.59082031]
[26.43061829 785.02972412]
[11.63753414 782.51568604]
[-2.96408033 779.05902100]
[-17.31422424 774.67395020]
[-31.35392952 769.37847900]
[-45.02550507 763.19427490]
[-58.27276611 756.14691162]
[-71.04128265 748.26525879]
[-83.27857971 739.58166504]
[-94.93437958 730.13189697]
[-105.96077728 719.95477295]
[-116.31246185 709.09210205]
[-125.94689941 697.58843994]
[-134.82450867 685.49121094]
[-142.90879822 672.84997559]
[-150.16654968 659.71679688]
[-156.56793213 646.14556885]
[-162.08665466 632.19213867]
[-166.70002747 617.91369629]
[-170.38911438 603.36907959]
[-173.13871765 588.61798096]
[-174.93757629 573.72100830]
[-175.77828979 558.73937988]
[-175.65737915 543.73468018]
[-174.57536316 528.76855469]
[-172.53669739 513.90252686]
[-169.54972839 499.19763184]
[-165.62675476 484.71432495]
[-160.78388977 470.51211548]
[-155.04104614 456.64941406]
[-148.42179871 443.18310547]
[-140.95335388 430.16857910]
[-132.66641235 417.65927124]
[-123.59503174 405.70663452]
[-113.77646637 394.35977173]
[-103.25107574 383.66528320]
[-92.06211853 373.66714478]
[-80.25555420 364.40643311]
[-67.87992096 355.92120361]
[-54.98605347 348.24630737]
[-41.62694931 341.41329956]
[-27.85749817 335.45025635]
[-13.73428249 330.38168335]
[0.68466049 326.22839355]
[15.34008121 323.00747681]
[30.17175484 320.73214722]
[45.11873627 319.41177368]
[60.11960602 319.05178833]
[75.11271667 319.65362549]
[76.67324066 304.73501587]
[78.23376465 289.81640625]
[79.79428864 274.89782715]
[70.24477386 263.52493286]
[71.61484528 248.37312317]
[83.60851288 238.43382263]
[85.16903687 223.51521301]
[78.79779816 210.05206299]
[87.92881775 197.13171387]
[89.48934174 182.21311951]
[90.49359894 167.24676514]
[90.94020081 152.25341797]
[91.38681030 137.26007080]
[91.83341980 122.26672363]
[92.28002167 107.27336884]
[92.05669403 92.27503204]
[91.16387939 77.30162811]
[90.27106476 62.32822418]
[89.37825012 47.35481644]
[80.83326721 34.03964615]
[87.79930878 20.87440491]
[86.90648651 5.90099955]
[78.36150360 -7.41417360]
[85.32754517 -20.57941246]
[76.78256226 -33.89458466]
[83.74860382 -47.05982590]
[82.85578918 -62.03322983]
[81.96297455 -77.00663757]
[73.41799164 -90.32180786]
[80.38403320 -103.48705292]
[65.40991211 -104.73464966]
[50.76578140 -108.10067749]
[36.74977112 -113.51659393]
[23.64722824 -120.87215424]
[11.72490788 -130.01759338]
[1.22553194 -140.76672363]
[-7.63714600 -152.90071106]
[-14.68269348 -166.17253113]
[-19.76767159 -180.31196594]
[-22.78855896 -195.03117371]
[-23.68384933 -210.03047180]
[-22.43531990 -225.00451660]
[-19.06838989 -239.64843750]
[-13.65160084 -253.66412354]
[-6.29523611 -266.76620483]
[2.85093999 -278.68795776]
[13.60072327 -289.18667603]
[25.73526001 -298.04858398]
[39.00751114 -305.09332275]
[53.14726257 -310.17742920]
[67.86665344 -313.19741821]
[82.86602020 -314.09176636]
[97.83998108 -312.84231567]
[112.48370361 -309.47448730]
[126.49903870 -304.05682373]
[139.60067749 -296.69964600]
[151.52186584 -287.55273438]
[162.01991272 -276.80230713]
[170.88108826 -264.66720581]
[177.92498779 -251.39453125]
[183.00820923 -237.25445557]
[186.02728271 -222.53488159]
[186.92071533 -207.53546143]
[185.67033386 -192.56156921]
[182.30158997 -177.91806030]
[176.88307190 -163.90306091]
[169.52508545 -150.80187988]
[160.37742615 -138.88125610]
[149.62634277 -128.38388062]
[137.49070740 -119.52345276]
[124.21759033 -112.48036957]
[110.07720184 -107.39801788]
[95.35743713 -104.37986755]
[103.83856201 -92.13568878]
[96.93637848 -77.89945221]
[97.82919312 -62.92604828]
[98.72201538 -47.95264053]
[107.20313263 -35.70846558]
[100.30095673 -21.47222900]
[108.78207397 -9.22805405]
[101.87989807 5.00818396]
[102.77271271 19.98159027]
[111.25383759 32.22576523]
[104.35165405 46.46200180]
[105.24446869 61.43540955]
[106.13728333 76.40881348]
[107.03009796 91.38221741]
[117.77069092 80.91132355]
[132.77059937 80.96414185]
[143.43719482 91.51041412]
[143.66015625 106.50875092]
[133.31178284 117.36743927]
[118.32006836 117.86611176]
[107.27336884 107.71997833]
[106.82676697 122.71332550]
[106.38015747 137.70668030]
[105.93355560 152.70002747]
[105.48694611 167.69337463]
[118.02818298 159.46432495]
[132.32810974 163.99334717]
[137.84535217 177.94183350]
[130.51280212 191.02745056]
[115.73574829 193.60400391]
[104.40794373 183.77363586]
[102.84741974 198.69224548]
[109.10703278 213.22248840]
[100.08763885 225.07574463]
[98.52711487 239.99433899]
[108.20432281 252.20046997]
[106.40921021 267.30783081]
[94.71289062 276.45834351]
[93.15237427 291.37695312]
[91.59185028 306.29556274]
[90.03132629 321.21414185]
[104.82444000 323.72802734]
[119.42608643 327.18450928]
[133.77627563 331.56945801]
[147.81604004 336.86480713]
[161.48768616 343.04879761]
[174.73503113 350.09603882]
[187.50363159 357.97756958]
[199.74102783 366.66098022]
[211.39692688 376.11062622]
[222.42343140 386.28765869]
[232.77525330 397.15023804]
[242.40982056 408.65374756]
[251.28755188 420.75091553]
[259.37197876 433.39202881]
[266.62988281 446.52511597]
[273.03140259 460.09628296]
[278.55029297 474.04968262]
[283.16381836 488.32803345]
[286.85305786 502.87261963]
[289.60284424 517.62371826]
[291.40185547 532.52062988]
[292.24273682 547.50225830]
[292.12200928 562.50695801]
[291.04016113 577.47308350]
[289.00164795 592.33917236]
[286.01483154 607.04406738]
[282.09204102 621.52746582]
[277.24932861 635.72967529]
[271.50662231 649.59246826]
[264.88754272 663.05883789]
[257.41925049 676.07348633]
[249.13243103 688.58282471]
[240.06117249 700.53558350]
[230.24273682 711.88256836]
[219.71746826 722.57714844]
[208.52862549 732.57543945]
[196.72216797 741.83630371]
[184.34661865 750.32165527]
[171.45283508 757.99670410]
[158.09381104 764.82983398]
[144.32443237 770.79302979]
[130.20126343 775.86175537]
[115.78237152 780.01519775]
[101.12698364 783.23626709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 166]
[53 165]
[54 164]
[55 163]
[58 160]
[59 159]
[61 157]
[62 156]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[68 139]
[69 138]
[70 137]
[71 136]
[73 134]
[74 133]
[76 131]
[78 129]
[79 128]
[80 127]
[82 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
