%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[92.71520233 689.73992920]
[77.76750946 691.09381104]
[62.75895309 691.19213867]
[47.79479980 690.03424072]
[32.98002243 687.62823486]
[18.41853523 683.99096680]
[4.21247864 679.14801025]
[-9.53850174 673.13323975]
[-22.73795128 665.98895264]
[-35.29328156 657.76519775]
[-47.11642838 648.51965332]
[-58.12445450 638.31726074]
[-68.24015045 627.22943115]
[-77.39255524 615.33404541]
[-85.51747131 602.71453857]
[-92.55791473 589.45941162]
[-98.46449280 575.66162109]
[-103.19578552 561.41796875]
[-106.71858978 546.82836914]
[-109.00820160 531.99517822]
[-110.04856110 517.02239990]
[-109.83238220 502.01504517]
[-108.36116028 487.07846069]
[-105.64523315 472.31735229]
[-101.70363617 457.83526611]
[-96.56403351 443.73382568]
[-90.26246643 430.11190796]
[-82.84313202 417.06506348]
[-74.35808563 404.68481445]
[-64.86682892 393.05798340]
[-54.43595505 382.26617432]
[-43.13861465 372.38504028]
[-31.05406189 363.48391724]
[-18.26705742 355.62521362]
[-4.86729622 348.86410522]
[9.05123138 343.24795532]
[23.39089394 338.81616211]
[38.05110931 335.59985352]
[52.92904282 333.62158203]
[67.92034149 332.89520264]
[82.91983795 333.42581177]
[84.70230103 318.53210449]
[86.48477173 303.63839722]
[88.26723480 288.74465942]
[90.04970551 273.85095215]
[91.83216858 258.95724487]
[93.05914307 244.00749207]
[85.89786530 230.94743347]
[94.24365997 217.50651550]
[94.91344452 202.52146912]
[95.58322906 187.53643799]
[96.14144135 172.54682922]
[95.91811371 157.54849243]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[88.77949524 58.44094086]
[85.45722961 43.81348038]
[82.13497162 29.18602180]
[69.04518890 20.74236679]
[65.88431549 5.86071587]
[74.01471710 -6.56635809]
[63.41306686 -18.31010056]
[68.13931274 -32.43496704]
[64.81705475 -47.06242752]
[61.49479675 -61.68988800]
[58.17253876 -76.31734467]
[43.91962051 -77.78566742]
[30.83653259 -83.57533264]
[20.19704056 -93.10818481]
[13.03251457 -105.44233704]
[10.03196907 -119.36522675]
[11.47581291 -133.51283264]
[17.20970154 -146.50331116]
[26.66091537 -157.07192993]
[38.89554214 -164.19424438]
[35.79143143 -178.86955261]
[25.36579895 -190.76983643]
[30.30182457 -204.82276917]
[27.19771385 -219.49807739]
[24.09360313 -234.17337036]
[20.98949242 -248.84867859]
[5.92651892 -249.08221436]
[-8.70670509 -252.66221619]
[-22.17618370 -259.40914917]
[-33.80628967 -268.98455811]
[-43.01366806 -280.90814209]
[-49.33647537 -294.58181763]
[-52.45756149 -309.31976318]
[-52.22037888 -324.38265991]
[-48.63682175 -339.01501465]
[-41.88663864 -352.48287964]
[-32.30841827 -364.11065674]
[-20.38259888 -373.31515503]
[-6.70737457 -379.63464355]
[8.03131008 -382.75216675]
[23.09416962 -382.51132202]
[37.72565842 -378.92422485]
[51.19186401 -372.17077637]
[62.81732941 -362.58972168]
[72.01892853 -350.66168213]
[78.33510590 -336.98492432]
[81.44905090 -322.24548340]
[81.20456696 -307.18267822]
[77.61392212 -292.55206299]
[70.85721588 -279.08749390]
[61.27335739 -267.46435547]
[49.34307861 -258.26565552]
[35.66479492 -251.95278931]
[38.76890564 -237.27748108]
[41.87301636 -222.60218811]
[44.97712708 -207.92687988]
[55.18073273 -197.07626343]
[50.46673203 -181.97366333]
[53.57084274 -167.29835510]
[69.18650818 -165.28836060]
[83.19372559 -158.04039001]
[93.89046478 -146.41447449]
[99.96990967 -131.80383301]
[100.68003082 -115.96790314]
[95.91661835 -100.82054901]
[86.23806763 -88.19869995]
[72.79999542 -79.63961029]
[76.12226105 -65.01214600]
[79.44451904 -50.38468552]
[82.76677704 -35.75722504]
[93.13079834 -25.05973625]
[88.64218140 -9.88861752]
[101.34298706 -2.19282770]
[104.92060089 12.59417057]
[96.76243591 25.86376190]
[100.08469391 40.49122238]
[103.40695190 55.11868286]
[108.91104889 41.16501236]
[120.20878601 31.29783249]
[134.77621460 27.72149467]
[149.35891724 31.23496246]
[160.69911194 41.05331802]
[166.26335144 54.98311615]
[164.80856323 69.91240692]
[156.65977478 82.50593567]
[143.63742065 89.95029449]
[128.65075684 90.58238220]
[115.04780579 84.26099396]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[110.89151764 156.65567017]
[121.63211060 146.18478394]
[136.63201904 146.23759460]
[147.29861450 156.78385925]
[147.52157593 171.78221130]
[137.17320251 182.64088440]
[122.18148804 183.13957214]
[111.13478851 172.99343872]
[114.00730133 181.66444397]
[110.56826782 188.20622253]
[109.89848328 203.19125366]
[109.22869873 218.17630005]
[116.34207153 232.30819702]
[108.04418182 244.67727661]
[120.70655060 236.63586426]
[134.93745422 241.37728882]
[140.24641418 255.40637207]
[132.71986389 268.38137817]
[117.90607452 270.73760986]
[106.72588348 260.73968506]
[104.94342041 275.63342285]
[103.16095734 290.52713013]
[101.37848663 305.42083740]
[99.59602356 320.31457520]
[97.81355286 335.20828247]
[112.51465607 338.23220825]
[126.91116333 342.47567749]
[140.90208435 347.90896606]
[154.38929749 354.49392700]
[167.27818298 362.18438721]
[179.47834778 370.92639160]
[190.90419006 380.65863037]
[201.47558594 391.31283569]
[211.11837769 402.81430054]
[219.76493835 415.08227539]
[227.35459900 428.03079224]
[233.83412170 441.56896973]
[239.15808105 455.60183716]
[243.28910828 470.03103638]
[246.19822693 484.75527954]
[247.86505127 499.67132568]
[248.27787781 514.67449951]
[247.43380737 529.65966797]
[245.33876038 544.52160645]
[242.00743103 559.15612793]
[237.46321106 573.46051025]
[231.73794556 587.33453369]
[224.87179565 600.68078613]
[216.91294861 613.40570068]
[207.91720581 625.41998291]
[197.94766235 636.63940430]
[187.07427979 646.98516846]
[175.37330627 656.38488770]
[162.92681885 664.77246094]
[149.82211304 672.08911133]
[136.15113831 678.28350830]
[122.00975800 683.31225586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 167]
[49 165]
[50 164]
[51 163]
[52 161]
[53 154]
[54 153]
[55 152]
[56 151]
[58 149]
[59 148]
[60 136]
[61 135]
[62 134]
[65 131]
[67 129]
[68 128]
[69 127]
[70 126]
[79 118]
[80 117]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
