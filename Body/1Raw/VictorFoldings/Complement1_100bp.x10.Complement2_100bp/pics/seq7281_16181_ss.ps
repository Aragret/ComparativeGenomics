%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[86.08130646 467.45782471]
[83.33784485 452.69039917]
[82.46691132 437.69558716]
[83.48225403 422.70983887]
[86.36784363 407.96954346]
[91.07817841 393.70715332]
[97.53897095 380.14758301]
[105.64832306 367.50476074]
[115.27833557 355.97799683]
[126.27713776 345.74911499]
[138.47125244 336.97949219]
[151.66836548 329.80734253]
[146.21301270 315.83456421]
[140.75765991 301.86175537]
[135.30229187 287.88894653]
[129.84693909 273.91616821]
[128.01635742 288.80404663]
[121.51014709 302.31954956]
[111.01493835 313.03640747]
[97.63831329 319.82357788]
[82.79193115 321.96484375]
[68.04257202 319.23419189]
[54.94676971 311.91983032]
[44.88655472 300.79364014]
[38.92360687 287.02978516]
[37.68721008 272.08084106]
[41.30784607 257.52435303]
[49.40341568 244.89654541]
[61.11957550 235.53002930]
[75.21989441 230.41329956]
[90.21633148 230.08630371]
[104.52627563 234.58358765]
[116.63956451 243.43052673]
[125.27793121 255.69364929]
[123.49546814 240.79992676]
[121.71300507 225.90621948]
[119.93053436 211.01249695]
[117.15492249 196.27153015]
[113.39862061 181.74948120]
[109.64232635 167.22741699]
[105.88602448 152.70535278]
[102.12972260 138.18330383]
[98.37342072 123.66123962]
[94.61711884 109.13918304]
[90.21612549 94.79933167]
[85.17920685 80.67030334]
[79.72384644 66.69750214]
[73.85488892 52.89332962]
[67.98593140 39.08915329]
[61.74831009 32.41607666]
[62.13404465 25.03549194]
[56.47125626 11.14546490]
[50.80847168 -2.74456167]
[45.14568329 -16.63458824]
[30.85434151 -22.83098030]
[25.30933952 -36.99811172]
[31.30472374 -50.58453751]
[25.64193726 -64.47456360]
[19.97915077 -78.36459351]
[14.31636429 -92.25461578]
[-0.05989790 -87.93399048]
[-14.78176880 -84.99948883]
[-29.71592140 -83.47769928]
[-44.72710419 -83.38240051]
[-59.67937851 -84.71444702]
[-74.43731689 -87.46179199]
[-88.86727905 -91.59953308]
[-102.83857727 -97.09021759]
[-116.22468567 -103.88410950]
[-128.90437317 -111.91967773]
[-140.76280212 -121.12415314]
[-151.69258118 -131.41418457]
[-161.59472656 -142.69656372]
[-170.37956238 -154.86914062]
[-177.96752930 -167.82164001]
[-184.28991699 -181.43679810]
[-189.28944397 -195.59127808]
[-192.92085266 -210.15690613]
[-195.15126038 -225.00177002]
[-195.96044922 -239.99143982]
[-195.34109497 -254.99014282]
[-193.29881287 -269.86206055]
[-189.85211182 -284.47250366]
[-185.03216553 -298.68914795]
[-178.88267517 -312.38323975]
[-171.45928955 -325.43078613]
[-162.82926941 -337.71359253]
[-153.07075500 -349.12045288]
[-142.27212524 -359.54800415]
[-130.53118896 -368.90188599]
[-117.95425415 -377.09735107]
[-104.65523529 -384.06018066]
[-90.75457001 -389.72729492]
[-76.37815094 -394.04739380]
[-61.65616989 -396.98135376]
[-46.72196198 -398.50259399]
[-31.71077538 -398.59735107]
[-16.75855255 -397.26477051]
[-2.00071025 -394.51687622]
[12.42910099 -390.37860107]
[26.40019989 -384.88742065]
[39.78605652 -378.09304810]
[52.46544647 -370.05700684]
[64.32353973 -360.85211182]
[75.25294495 -350.56167603]
[85.15467834 -339.27893066]
[93.93907166 -327.10604858]
[101.52657318 -314.15325928]
[107.84845734 -300.53787231]
[112.84747314 -286.38320923]
[116.47835541 -271.81744385]
[118.70821381 -256.97250366]
[119.51685333 -241.98280334]
[118.89695740 -226.98411560]
[116.85414124 -212.11227417]
[113.40689087 -197.50196838]
[108.58644104 -183.28549194]
[102.43644714 -169.59162903]
[95.01258850 -156.54435730]
[86.38211823 -144.26185608]
[76.62319183 -132.85536194]
[65.82418060 -122.42818451]
[54.08289719 -113.07473755]
[41.50566483 -104.87973785]
[28.20639229 -97.91740417]
[33.86917877 -84.02737427]
[39.53196335 -70.13735199]
[45.19475174 -56.24732208]
[58.98038101 -50.72536469]
[64.92111969 -36.71957016]
[59.03571320 -22.29737473]
[64.69850159 -8.40734863]
[70.36128235 5.48267889]
[76.02407074 19.37270546]
[81.79010773 33.22019196]
[87.65906525 47.02436829]
[93.52802277 60.82854462]
[96.07429504 62.00101089]
[98.30954742 64.25273132]
[99.82039642 67.47029877]
[100.24209595 71.39288330]
[99.30823517 75.63338470]
[104.34515381 89.76242065]
[111.73604584 76.70965576]
[126.15447998 72.57337952]
[139.34092712 79.72305298]
[143.74157715 94.06300354]
[136.83555603 107.37866211]
[122.57892609 112.04221344]
[109.13918304 105.38288116]
[112.89547729 119.90493774]
[116.65177917 134.42700195]
[120.40808105 148.94905090]
[124.16438293 163.47111511]
[127.92068481 177.99317932]
[131.67698669 192.51522827]
[137.75254822 178.80073547]
[150.21936035 170.45936584]
[165.21446228 170.07579041]
[178.09143066 177.76885986]
[184.86022949 191.15480042]
[183.42344666 206.08583069]
[174.22630310 217.93540955]
[160.11862183 223.03181458]
[145.47181702 219.79586792]
[134.82424927 209.23002625]
[136.60671997 224.12374878]
[138.38919067 239.01747131]
[140.17164612 253.91117859]
[143.81973267 268.46081543]
[149.27510071 282.43359375]
[154.73045349 296.40640259]
[160.18580627 310.37921143]
[165.64117432 324.35198975]
[180.20671082 320.68484497]
[195.11703491 318.87219238]
[210.13696289 318.94262695]
[225.02961731 320.89508057]
[239.56011963 324.69869995]
[253.49929810 330.29354858]
[266.62731934 337.59136963]
[278.73715210 346.47708130]
[289.63778687 356.81048584]
[299.15728760 368.42868042]
[307.14553833 381.14840698]
[313.47656250 394.76901245]
[318.05047607 409.07574463]
[320.79519653 423.84292603]
[321.66738892 438.83767700]
[320.65328979 453.82351685]
[317.76895142 468.56405640]
[313.05981445 482.82684326]
[306.60015869 496.38693237]
[298.49188232 509.03048706]
[288.86282349 520.55804443]
[277.86489868 530.78784180]
[265.67150879 539.55847168]
[252.47500610 546.73175049]
[238.48348999 552.19439697]
[223.91763306 555.86035156]
[209.00715637 557.67175293]
[193.98724365 557.60003662]
[179.09474182 555.64630127]
[164.56455994 551.84149170]
[150.62583923 546.24542236]
[137.49842834 538.94653320]
[125.38936615 530.05981445]
[114.48960876 519.72546387]
[104.97108459 508.10647583]
[96.98390198 495.38610840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 174]
[13 173]
[14 172]
[15 171]
[16 170]
[34 169]
[35 168]
[36 167]
[37 166]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 143]
[46 142]
[47 137]
[48 136]
[49 135]
[51 134]
[52 133]
[53 132]
[54 131]
[57 128]
[58 127]
[59 126]
[60 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
