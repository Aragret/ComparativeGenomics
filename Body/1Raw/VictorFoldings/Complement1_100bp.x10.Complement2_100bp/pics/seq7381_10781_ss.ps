%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-14.86008549 925.28314209]
[-29.85526085 925.73120117]
[-44.85656357 925.60101318]
[-59.84170914 924.89282227]
[-74.78842926 923.60766602]
[-89.67451477 921.74743652]
[-104.47785950 919.31494141]
[-119.17646027 916.31372070]
[-133.74848938 912.74835205]
[-148.17228699 908.62402344]
[-162.42642212 903.94689941]
[-176.48973083 898.72387695]
[-190.34130859 892.96282959]
[-203.96058655 886.67224121]
[-217.32731628 879.86151123]
[-230.42164612 872.54064941]
[-243.22412109 864.72064209]
[-255.71572876 856.41302490]
[-267.87789917 847.63024902]
[-279.69256592 838.38525391]
[-291.14215088 828.69183350]
[-302.20968628 818.56433105]
[-312.87872314 808.01788330]
[-323.13339233 797.06811523]
[-332.95846558 785.73126221]
[-342.33935547 774.02416992]
[-351.26208496 761.96429443]
[-359.71343994 749.56951904]
[-367.68087769 736.85827637]
[-375.15249634 723.84942627]
[-382.11724854 710.56225586]
[-388.56478882 697.01660156]
[-394.48550415 683.23248291]
[-399.87060547 669.23046875]
[-404.71209717 655.03131104]
[-409.00280762 640.65612793]
[-412.73635864 626.12628174]
[-415.90716553 611.46331787]
[-418.51055908 596.68908691]
[-420.54263306 581.82550049]
[-422.00042725 566.89459229]
[-422.88168335 551.91864014]
[-423.18518066 536.91986084]
[-422.91043091 521.92047119]
[-422.05786133 506.94287109]
[-420.62869263 492.00921631]
[-418.62509155 477.14175415]
[-416.05001831 462.36254883]
[-412.90731812 447.69354248]
[-409.20162964 433.15655518]
[-404.93847656 418.77319336]
[-400.12417603 404.56478882]
[-394.76593018 390.55245972]
[-388.87164307 376.75704956]
[-382.45007324 363.19903564]
[-375.51080322 349.89859009]
[-368.06411743 336.87542725]
[-360.12106323 324.14889526]
[-351.69348145 311.73794556]
[-342.79385376 299.66098022]
[-333.43542480 287.93597412]
[-323.63208008 276.58032227]
[-313.39843750 265.61090088]
[-302.74963379 255.04402161]
[-291.70150757 244.89537048]
[-280.27050781 235.18000793]
[-268.47357178 225.91239929]
[-256.32827759 217.10630798]
[-243.85261536 208.77479553]
[-231.06513977 200.93025208]
[-217.98486328 193.58435059]
[-204.63121033 186.74797058]
[-191.02401733 180.43130493]
[-177.18350220 174.64370728]
[-163.13023376 169.39379883]
[-148.88508606 164.68936157]
[-134.46920776 160.53739929]
[-119.90404510 156.94407654]
[-105.21121979 153.91473389]
[-90.41256714 151.45385742]
[-75.53006744 149.56510925]
[-60.58583832 148.25131226]
[-45.60208130 147.51440430]
[-30.60105515 147.35548401]
[-15.60504723 147.77478027]
[-0.63633782 148.77168274]
[14.28283310 150.34469604]
[29.13030243 152.49150085]
[43.88400650 155.20887756]
[58.52203369 158.49282837]
[73.02262878 162.33843994]
[77.42362976 147.99859619]
[81.82462311 133.65875244]
[86.22562408 119.31890869]
[90.62661743 104.97905731]
[94.16629028 90.40267944]
[96.83209229 75.64146423]
[99.49788666 60.88024902]
[102.16368103 46.11903000]
[88.39721680 39.97510147]
[76.50154877 30.71461678]
[67.16828156 18.87597084]
[60.94003296 5.14744663]
[58.17890930 -9.67279720]
[59.04543686 -24.72313118]
[63.48923874 -39.12855148]
[71.25195312 -52.05154037]
[81.88227081 -62.74077606]
[94.76216125 -70.57479858]
[109.14279938 -75.09815216]
[124.18811798 -76.04784393]
[139.02339172 -73.36867523]
[152.78613281 -67.21640015]
[164.67617798 -57.94870758]
[174.00227356 -46.10440445]
[180.22219849 -32.37210846]
[182.97433472 -17.55019188]
[182.09867859 -2.50038600]
[177.64614868 11.90233517]
[169.87559509 24.82061577]
[159.23880005 35.50340652]
[146.35415649 43.32961655]
[131.97077942 47.84424973]
[116.92489624 48.78482437]
[114.25910187 63.54604340]
[111.59330750 78.30725861]
[108.92751312 93.06848145]
[120.65196228 83.71234131]
[135.63098145 82.91933441]
[148.27777100 90.98522949]
[153.87539673 104.90164185]
[150.33607483 119.47810364]
[138.97987366 129.27795410]
[124.04240417 130.64607239]
[111.09494781 123.07221222]
[104.96646881 109.38005829]
[100.56546783 123.71990204]
[96.16447449 138.05975342]
[91.76347351 152.39959717]
[87.36247253 166.73944092]
[101.52384186 171.69038391]
[115.48389435 177.18338013]
[129.22187805 183.21029663]
[142.71740723 189.76216125]
[155.95040894 196.82923889]
[168.90124512 204.40103149]
[181.55064392 212.46630859]
[193.87983704 221.01306152]
[205.87049866 230.02861023]
[217.50482178 239.49954224]
[228.76550293 249.41180420]
[239.63583374 259.75067139]
[250.09965515 270.50076294]
[260.14141846 281.64611816]
[269.74618530 293.17019653]
[278.89974976 305.05584717]
[287.58843994 317.28543091]
[295.79937744 329.84075928]
[303.52035522 342.70321655]
[310.73992920 355.85363770]
[317.44735718 369.27252197]
[323.63265991 382.93994141]
[329.28665161 396.83557129]
[334.40093994 410.93875122]
[338.96792603 425.22857666]
[342.98083496 439.68374634]
[346.43368530 454.28286743]
[349.32135010 469.00418091]
[351.63955688 483.82586670]
[353.38485718 498.72586060]
[354.55462646 513.68206787]
[355.14715576 528.67224121]
[355.16159058 543.67407227]
[354.59783936 558.66534424]
[353.45678711 573.62377930]
[351.74014282 588.52709961]
[349.45040894 603.35321045]
[346.59103394 618.08001709]
[343.16622925 632.68572998]
[339.18109131 647.14862061]
[334.64157104 661.44720459]
[329.55438232 675.56018066]
[323.92709351 689.46661377]
[317.76806641 703.14587402]
[311.08642578 716.57763672]
[303.89215088 729.74194336]
[296.19586182 742.61920166]
[288.00906372 755.19024658]
[279.34387207 767.43652344]
[270.21319580 779.33972168]
[260.63055420 790.88220215]
[250.61022949 802.04687500]
[240.16708374 812.81701660]
[229.31663513 823.17675781]
[218.07501221 833.11065674]
[206.45890808 842.60394287]
[194.48558044 851.64245605]
[182.17283630 860.21289062]
[169.53894043 868.30242920]
[156.60269165 875.89910889]
[143.38328552 882.99163818]
[129.90037537 889.56939697]
[116.17398071 895.62268066]
[102.22451019 901.14251709]
[88.07267761 906.12060547]
[73.73951721 910.54968262]
[59.24631882 914.42309570]
[44.61461639 917.73504639]
[29.86614227 920.48071289]
[15.02281570 922.65594482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
