%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[266.03964233 594.20404053]
[262.71737671 579.57659912]
[259.39511108 564.94915771]
[256.07287598 550.32165527]
[239.22680664 549.15594482]
[223.54365540 542.84771729]
[210.55476379 532.00103760]
[201.53207397 517.66369629]
[197.36360168 501.22586060]
[198.46597290 484.28561401]
[204.74288940 468.49331665]
[215.59338379 455.39089966]
[229.96934509 446.26135254]
[225.99725342 431.79681396]
[215.16589355 421.57278442]
[218.97261047 406.21636963]
[215.00051880 391.75183105]
[211.02842712 377.28732300]
[207.05632019 362.82278442]
[203.08422852 348.35827637]
[198.28170776 342.74066162]
[199.16238403 333.64877319]
[195.40608215 319.12670898]
[191.64978027 304.60464478]
[186.40307617 290.55218506]
[179.72286987 277.12182617]
[173.04267883 263.69143677]
[166.36248779 250.26106262]
[159.68229675 236.83068848]
[153.00209045 223.40031433]
[146.32189941 209.96992493]
[139.64170837 196.53955078]
[127.04600525 188.58985901]
[127.82780457 172.78797913]
[121.14761353 159.35760498]
[114.46741486 145.92723083]
[107.78722382 132.49685669]
[101.10702515 119.06648254]
[87.40441132 114.35643768]
[80.95155334 101.38312531]
[85.46259308 87.61370850]
[78.78240204 74.18333435]
[76.25287628 88.96851349]
[66.74590302 100.57099152]
[52.74657822 105.95790100]
[37.91428757 103.72112274]
[26.12615967 94.44535065]
[20.46358299 80.55523682]
[22.40674019 65.68163300]
[31.44769669 53.71245575]
[45.22316742 47.77642822]
[60.13227463 49.42520905]
[72.27725983 58.22712326]
[67.66324615 43.95439148]
[63.04923630 29.68165779]
[58.43523026 15.40892410]
[46.82812500 4.65784359]
[50.27537155 -9.83235168]
[45.66136169 -24.10508537]
[41.04735184 -38.37781906]
[38.56823349 -23.58410454]
[31.89244843 -10.15153694]
[21.59751511 0.75783288]
[8.57404995 8.20023537]
[-6.05128717 11.53182793]
[-21.01325798 10.46439552]
[-35.01750565 5.09028006]
[-46.85251617 -4.12560272]
[-55.49444580 -16.38598633]
[-60.19568634 -30.63022614]
[-60.54952621 -45.62605286]
[-56.52535629 -60.07617569]
[-48.47130966 -72.73051453]
[-37.08414078 -82.49434662]
[-23.34895515 -88.52300262]
[-8.45398045 -90.29493713]
[6.31221628 -87.65686035]
[19.67221260 -80.83699799]
[30.47023392 -70.42533875]
[37.77090454 -57.32587433]
[37.32429886 -72.31922913]
[36.87769318 -87.31257629]
[36.43108368 -102.30592346]
[35.98447800 -117.29927826]
[35.53787231 -132.29263306]
[32.39375305 -138.10864258]
[32.62421417 -143.78701782]
[35.30789566 -147.73756409]
[35.30789566 -162.73756409]
[35.30789566 -177.73756409]
[35.30789566 -192.73756409]
[33.00432587 -196.41825867]
[32.08435059 -200.25469971]
[32.42703247 -203.79277039]
[33.77638626 -206.66432190]
[35.78109741 -208.62373352]
[36.67391205 -223.59713745]
[37.56672668 -238.57054138]
[23.47628784 -244.07643127]
[11.77818012 -253.66857910]
[3.61846471 -266.40725708]
[-0.20345287 -281.04449463]
[0.68686032 -296.14624023]
[6.20218039 -310.23297119]
[15.80217266 -321.92465210]
[28.54632759 -330.07583618]
[43.18610382 -333.88793945]
[58.28724289 -332.98751831]
[72.37029266 -327.46273804]
[84.05553436 -317.85491943]
[92.19816589 -305.10531616]
[96.00046539 -290.46298218]
[95.08992004 -275.36245728]
[89.55572510 -261.28311157]
[79.94007111 -249.60430908]
[67.18500519 -241.47021484]
[52.54013443 -237.67773438]
[51.64731598 -222.70433044]
[50.75450134 -207.73092651]
[50.30789566 -192.73756409]
[50.30789566 -177.73756409]
[50.30789566 -162.73756409]
[50.30789566 -147.73756409]
[50.53122330 -132.73922729]
[50.97782898 -117.74588013]
[51.42443466 -102.75253296]
[51.87104034 -87.75917816]
[52.31764603 -72.76583099]
[52.76425171 -57.77248001]
[55.32008362 -42.99182892]
[59.93409348 -28.71909523]
[64.54810333 -14.44636154]
[75.82518005 -4.71616268]
[72.70796204 10.79491425]
[77.32196808 25.06764793]
[81.93598175 39.34038162]
[86.54998779 53.61311340]
[92.21277618 67.50314331]
[98.89297485 80.93351746]
[112.59558868 85.64356232]
[119.04844666 98.61687469]
[114.53740692 112.38629150]
[121.21759796 125.81666565]
[127.89779663 139.24703979]
[134.57798767 152.67741394]
[141.25817871 166.10778809]
[154.33169556 175.01811218]
[153.07208252 189.85935974]
[159.75227356 203.28973389]
[166.43246460 216.72010803]
[173.11267090 230.15048218]
[179.79286194 243.58087158]
[186.47305298 257.01123047]
[193.15324402 270.44161987]
[199.83345032 283.87197876]
[200.90127563 268.91006470]
[207.54469299 255.46144104]
[218.77818298 245.52119446]
[232.93534851 240.56388855]
[247.91603088 241.32489014]
[261.49792480 247.69132996]
[271.66629028 258.71878052]
[276.91265869 272.77139282]
[276.45880127 287.76452637]
[270.37200928 301.47402954]
[259.55523682 311.86621094]
[245.61308289 317.39944458]
[230.61380005 317.25289917]
[216.78244019 311.44833374]
[206.17184448 300.84835815]
[209.92814636 315.37042236]
[213.68444824 329.89248657]
[217.54875183 344.38616943]
[221.52084351 358.85070801]
[225.49295044 373.31521606]
[229.46504211 387.77975464]
[233.43713379 402.24426270]
[244.55259705 413.50289917]
[240.46177673 427.82473755]
[244.43386841 442.28924561]
[257.63409424 442.21343994]
[270.45632935 445.30648804]
[282.15170288 451.38262939]
[292.03845215 460.08200073]
[299.54153442 470.89199829]
[304.22622681 483.17739868]
[305.82312012 496.21786499]
[304.24383545 509.24993896]
[299.58569336 521.51196289]
[292.12588501 532.28851318]
[282.30480957 540.95196533]
[270.70031738 546.99938965]
[274.02258301 561.62689209]
[277.34484863 576.25433350]
[280.66711426 590.88177490]
[295.70889282 592.75799561]
[309.20043945 599.66839600]
[319.51257324 610.77856445]
[325.40005493 624.74688721]
[326.15194702 639.88659668]
[321.67742920 654.36950684]
[312.51684570 666.44671631]
[299.77639771 674.65991211]
[284.99450684 678.01721191]
[269.95617676 676.11328125]
[256.47738647 669.17803955]
[246.18574524 658.04888916]
[240.32402039 644.06976318]
[239.60003662 628.92871094]
[244.10122681 614.45404053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[13 180]
[14 179]
[16 177]
[17 176]
[18 175]
[19 174]
[20 173]
[22 172]
[23 171]
[24 170]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[31 149]
[32 148]
[34 146]
[35 145]
[36 144]
[37 143]
[38 142]
[41 139]
[42 138]
[53 137]
[54 136]
[55 135]
[56 134]
[58 132]
[59 131]
[60 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[88 123]
[89 122]
[90 121]
[91 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
