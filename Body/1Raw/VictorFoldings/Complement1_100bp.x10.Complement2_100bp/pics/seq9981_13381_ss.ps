%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[64.54416656 798.97528076]
[49.60005188 797.63031006]
[34.76312256 795.39398193]
[20.08649445 792.27435303]
[5.62270021 788.28259277]
[-8.57647991 783.43298340]
[-22.46021652 777.74285889]
[-35.97881317 771.23260498]
[-49.08386993 763.92559814]
[-61.72847748 755.84783936]
[-73.86737061 747.02838135]
[-85.45709229 737.49877930]
[-96.45616150 727.29309082]
[-106.82519531 716.44787598]
[-116.52708435 705.00195312]
[-125.52708435 692.99633789]
[-133.79299927 680.47393799]
[-141.29521179 667.47961426]
[-148.00689697 654.05987549]
[-153.90399170 640.26281738]
[-158.96542358 626.13775635]
[-163.17303467 611.73529053]
[-166.51181030 597.10693359]
[-168.96975708 582.30511475]
[-170.53808594 567.38275146]
[-171.21119690 552.39337158]
[-170.98667908 537.39050293]
[-169.86531067 522.42797852]
[-167.85113525 507.55926514]
[-164.95135498 492.83761597]
[-161.17633057 478.31573486]
[-156.53961182 464.04562378]
[-151.05776978 450.07833862]
[-144.75042725 436.46389771]
[-137.64018250 423.25103760]
[-129.75247192 410.48703003]
[-121.11553955 398.21762085]
[-111.76029968 386.48666382]
[-101.72024536 375.33621216]
[-91.03131866 364.80615234]
[-79.73177338 354.93417358]
[-67.86206818 345.75561523]
[-55.46469498 337.30337524]
[-42.58402634 329.60766602]
[-29.26617813 322.69604492]
[-15.55882359 316.59326172]
[-1.51102960 311.32116699]
[12.82691479 306.89862061]
[27.40368271 303.34146118]
[42.16709137 300.66244507]
[57.06429672 298.87112427]
[72.04196167 297.97390747]
[72.04196167 282.97390747]
[72.04196167 267.97390747]
[72.04196167 252.97390747]
[72.04196167 237.97390747]
[72.04196167 222.97390747]
[72.04196167 207.97390747]
[64.78396606 221.10102844]
[53.51950836 231.00619507]
[39.57193375 236.52572632]
[24.57979393 237.01119995]
[10.30434418 232.40560913]
[-1.57734680 223.24998474]
[-9.66943073 210.61993408]
[-13.02125835 195.99922180]
[-11.23905945 181.10546875]
[-4.53220463 167.68838501]
[6.31139088 157.32418823]
[20.01783180 151.23046875]
[34.97690201 150.12309265]
[49.43122101 154.13217163]
[61.68270874 162.78671265]
[70.29207611 175.06997681]
[74.24805450 189.54052734]
[77.78772736 174.96414185]
[81.32740021 160.38777161]
[84.86707306 145.81140137]
[87.75234222 131.09150696]
[89.97746277 116.25746155]
[81.44966125 104.54324341]
[83.59905243 90.21403503]
[95.18849182 81.51742554]
[97.41361237 66.68338013]
[99.63872528 51.84933472]
[101.86384583 37.01529312]
[104.08895874 22.18124771]
[105.87142944 7.28753042]
[107.20966339 -7.65265465]
[108.54789734 -22.59284019]
[109.88613129 -37.53302383]
[111.22436523 -52.47320938]
[112.22862244 -67.43955231]
[112.89840698 -82.42459106]
[113.56819153 -97.40962982]
[114.12640381 -112.39923859]
[114.57301331 -127.39259338]
[115.01961517 -142.38594055]
[115.46622467 -157.37928772]
[101.58750153 -163.58006287]
[91.14179993 -174.62341309]
[85.72201538 -188.82533264]
[86.15460968 -204.02011108]
[92.37363434 -217.89065552]
[103.43072510 -228.32182312]
[117.63975525 -233.72293091]
[132.83395386 -233.27033997]
[146.69630432 -227.03308105]
[157.11291504 -215.96228027]
[162.49533081 -201.74615479]
[162.02275085 -186.55256653]
[155.76725769 -172.69842529]
[144.68276978 -162.29638672]
[130.45957947 -156.93267822]
[130.01296997 -141.93933105]
[129.56636047 -126.94598389]
[129.11975098 -111.95263672]
[132.06271362 -105.17319489]
[128.55323792 -96.73984528]
[127.88344574 -81.75480652]
[127.21366119 -66.76976776]
[129.31044006 -63.93500900]
[130.13835144 -59.94381714]
[129.16882324 -55.40362930]
[126.16455078 -51.13497543]
[124.82631683 -36.19478989]
[123.48808289 -21.25460625]
[122.14984894 -6.31442070]
[120.81161499 8.62576485]
[122.50347900 10.86087513]
[123.41193390 13.90082932]
[123.22598267 17.45059395]
[121.74709320 21.10810471]
[118.92300415 24.40636444]
[116.69789124 39.24040985]
[114.47277069 54.07445145]
[112.24765778 68.90849304]
[110.02253723 83.74253845]
[118.55033875 95.45675659]
[116.40094757 109.78596497]
[104.81150818 118.48257446]
[102.58638763 133.31661987]
[115.26134491 125.29505157]
[129.92562866 128.45082092]
[138.17886353 140.97615051]
[135.29324341 155.69596863]
[122.92176819 164.17810059]
[108.15137482 161.56358337]
[99.44345093 149.35107422]
[95.90377808 163.92744446]
[92.36410522 178.50381470]
[88.82443237 193.08020020]
[87.04196167 207.97390747]
[87.04196167 222.97390747]
[87.04196167 237.97390747]
[87.04196167 252.97390747]
[87.04196167 267.97390747]
[87.04196167 282.97390747]
[87.04196167 297.97390747]
[102.01963043 298.87112427]
[116.91683960 300.66244507]
[131.68025208 303.34146118]
[146.25701904 306.89862061]
[160.59495544 311.32116699]
[174.64276123 316.59326172]
[188.35011292 322.69604492]
[201.66795349 329.60766602]
[214.54862976 337.30337524]
[226.94599915 345.75561523]
[238.81570435 354.93417358]
[250.11524963 364.80615234]
[260.80416870 375.33621216]
[270.84423828 386.48666382]
[280.19946289 398.21762085]
[288.83639526 410.48703003]
[296.72412109 423.25103760]
[303.83435059 436.46389771]
[310.14169312 450.07833862]
[315.62353516 464.04562378]
[320.26025391 478.31573486]
[324.03527832 492.83761597]
[326.93505859 507.55926514]
[328.94924927 522.42797852]
[330.07061768 537.39050293]
[330.29513550 552.39337158]
[329.62200928 567.38275146]
[328.05368042 582.30511475]
[325.59573364 597.10693359]
[322.25695801 611.73529053]
[318.04934692 626.13775635]
[312.98791504 640.26281738]
[307.09082031 654.05987549]
[300.37915039 667.47961426]
[292.87692261 680.47393799]
[284.61102295 692.99633789]
[275.61102295 705.00195312]
[265.90911865 716.44787598]
[255.54008484 727.29309082]
[244.54103088 737.49877930]
[232.95129395 747.02838135]
[220.81240845 755.84783936]
[208.16780090 763.92559814]
[195.06274414 771.23260498]
[181.54414368 777.74285889]
[167.66041565 783.43298340]
[153.46122742 788.28259277]
[138.99743652 792.27435303]
[124.32080841 795.39398193]
[109.48387909 797.63031006]
[94.53976440 798.97528076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 142]
[80 141]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 121]
[94 120]
[95 119]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
