%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-9.18787479 689.26208496]
[-21.20500946 698.24786377]
[-33.77317810 706.44525146]
[-46.84073257 713.82049561]
[-60.35397339 720.34338379]
[-74.25737000 725.98706055]
[-88.49380493 730.72839355]
[-103.00475311 734.54779053]
[-117.73060608 737.42962646]
[-132.61083984 739.36206055]
[-147.58432007 740.33709717]
[-162.58949280 740.35083008]
[-177.56472778 739.40313721]
[-192.44847107 737.49792480]
[-207.17956543 734.64300537]
[-221.69746399 730.85009766]
[-235.94253540 726.13482666]
[-249.85623169 720.51660156]
[-263.38137817 714.01843262]
[-276.46237183 706.66699219]
[-289.04550171 698.49261475]
[-301.07904053 689.52886963]
[-312.51354980 679.81250000]
[-323.30203247 669.38342285]
[-333.40014648 658.28460693]
[-342.76638794 646.56164551]
[-351.36233521 634.26263428]
[-359.15258789 621.43811035]
[-366.10516357 608.14086914]
[-372.19149780 594.42547607]
[-377.38656616 580.34826660]
[-381.66903687 565.96716309]
[-385.02130127 551.34124756]
[-387.42956543 536.53057861]
[-388.88400269 521.59600830]
[-389.37857056 506.59899902]
[-388.91122437 491.60107422]
[-387.48394775 476.66394043]
[-385.10256958 461.84890747]
[-381.77688599 447.21691895]
[-377.52053833 432.82806396]
[-372.35104370 418.74145508]
[-366.28964233 405.01504517]
[-359.36123657 391.70516968]
[-351.59429932 378.86654663]
[-343.02072144 366.55191040]
[-333.67578125 354.81192017]
[-323.59783936 343.69479370]
[-312.82833862 333.24618530]
[-301.41149902 323.50906372]
[-289.39425659 314.52340698]
[-276.82601929 306.32617188]
[-263.75839233 298.95104980]
[-250.24505615 292.42831421]
[-236.34159851 286.78479004]
[-222.10511780 282.04367065]
[-207.59411621 278.22442627]
[-192.86824036 275.34274292]
[-177.98799133 273.41049194]
[-163.01449585 272.43557739]
[-148.00932312 272.42202759]
[-133.03410339 273.36990356]
[-118.15037537 275.27529907]
[-103.41931915 278.13037109]
[-88.90145111 281.92340088]
[-74.65643311 286.63882446]
[-60.74280167 292.25723267]
[-47.21773148 298.75555420]
[-34.13680267 306.10708618]
[-21.55376434 314.28161621]
[-12.59306908 302.25222778]
[-3.63237286 290.22286987]
[5.32832289 278.19348145]
[14.28901863 266.16409302]
[23.24971581 254.13471985]
[32.21041107 242.10534668]
[41.17110825 230.07597351]
[48.34647369 216.90350342]
[53.59319305 202.85102844]
[58.83990860 188.79855347]
[64.08662415 174.74607849]
[69.33334351 160.69360352]
[74.58006287 146.64114380]
[79.82678223 132.58866882]
[85.07350159 118.53619385]
[90.32022095 104.48372650]
[94.18452454 89.99003601]
[96.63024902 75.19076538]
[85.01802063 60.22178268]
[87.98390961 41.83383942]
[103.18333435 31.63123703]
[105.18734741 16.76570892]
[107.19136810 1.90017974]
[109.19538116 -12.96534824]
[111.19939423 -27.83087730]
[113.20340729 -42.69640350]
[99.05745697 -47.86420441]
[86.35340118 -55.95252991]
[75.68542480 -66.58306885]
[67.55249023 -79.25862122]
[62.33499908 -93.38631439]
[60.27697372 -108.30538177]
[61.47467422 -123.31803131]
[65.87207794 -137.72209167]
[73.26351929 -150.84385681]
[83.30327606 -162.06959534]
[95.52178192 -170.87426758]
[109.34754944 -176.84605408]
[124.13391876 -179.70565796]
[139.18931580 -179.31932068]
[153.80955505 -175.70510864]
[167.31083679 -169.03205872]
[179.06167603 -159.61230469]
[188.51246643 -147.88639832]
[195.22117615 -134.40281677]
[198.87402344 -119.79217529]
[199.30015564 -104.73785400]
[196.47966003 -89.94397736]
[190.54443359 -76.10247040]
[181.77209473 -63.86073685]
[170.57292175 -53.79133987]
[157.47074890 -46.36523819]
[143.07836914 -41.92977142]
[128.06893921 -40.69239044]
[126.06491852 -25.82686234]
[124.06090546 -10.96133518]
[122.05689240 3.90419340]
[120.05287933 18.76972198]
[118.04886627 33.63525009]
[126.76819611 40.99320602]
[130.89559937 51.75797272]
[129.29769897 63.29663086]
[122.25685883 72.72676849]
[111.42951965 77.63648987]
[108.98379517 92.43576050]
[118.81488800 81.10661316]
[132.36932373 74.68187714]
[147.36294556 74.24422455]
[161.26904297 79.86740875]
[171.74421692 90.60382843]
[177.02320862 104.64421082]
[176.21641541 119.62249756]
[169.45979309 133.01458740]
[157.89195251 142.56367493]
[143.46228027 146.66058350]
[128.60243225 144.61489868]
[115.81655121 136.77134705]
[107.25927734 124.45172882]
[104.37268829 109.73044586]
[99.12596893 123.78291321]
[93.87925720 137.83538818]
[88.63253784 151.88786316]
[83.38581848 165.94032288]
[78.13909912 179.99279785]
[72.89237976 194.04527283]
[67.64566040 208.09774780]
[62.39894485 222.15020752]
[73.52890015 212.09416199]
[87.10301208 205.71110535]
[101.94698334 203.55323792]
[116.77667236 205.80722046]
[130.30914307 212.27807617]
[141.37371826 222.40602112]
[149.01319885 235.31486511]
[152.56669617 249.88787842]
[151.72677612 264.86434937]
[146.56613159 278.94866943]
[137.53118896 290.92236328]
[125.40355682 299.74963379]
[111.23241425 304.66680908]
[96.24369812 305.24853516]
[81.73408508 301.44445801]
[68.95879364 293.58364868]
[59.02302551 282.34619141]
[52.78631973 268.70422363]
[50.78820801 253.83790588]
[53.20048523 239.03666687]
[44.23978806 251.06604004]
[35.27909088 263.09542847]
[26.31839752 275.12478638]
[17.35770035 287.15417480]
[8.39700508 299.18356323]
[-0.56369120 311.21292114]
[-9.52438736 323.24230957]
[1.91022003 332.95855713]
[12.69880962 343.38745117]
[22.79704857 354.48617554]
[32.16344070 366.20907593]
[40.75949478 378.50799561]
[48.54989243 391.33239746]
[55.50261688 404.62957764]
[61.58909988 418.34490967]
[66.78432465 432.42202759]
[71.06695557 446.80310059]
[74.41938782 461.42898560]
[76.82783508 476.23962402]
[78.28241730 491.17416382]
[78.77714539 506.17117310]
[78.30998993 521.16906738]
[76.88287354 536.10626221]
[74.50166321 550.92132568]
[71.17613220 565.55334473]
[66.91995239 579.94226074]
[61.75061798 594.02886963]
[55.68936539 607.75537109]
[48.76110458 621.06536865]
[40.99430084 633.90405273]
[32.42087555 646.21875000]
[23.07605553 657.95886230]
[12.99824142 669.07611084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[77 177]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 135]
[88 134]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
