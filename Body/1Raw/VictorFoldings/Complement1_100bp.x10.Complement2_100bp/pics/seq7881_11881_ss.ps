%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[23.54914856 399.44934082]
[27.00706673 414.09307861]
[27.63088226 429.12661743]
[25.39804077 444.00650024]
[20.38925934 458.19482422]
[12.78560257 471.17871094]
[2.86193800 482.48876953]
[-9.02299976 491.71615601]
[-22.43957901 498.52731323]
[-36.90279770 502.67602539]
[-51.88982010 504.01229858]
[-66.85887146 502.48785400]
[-81.26883698 498.15780640]
[-94.59880066 491.17864990]
[-106.36688995 481.80270386]
[-116.14770508 470.36889648]
[-123.58766937 457.29052734]
[-128.41783142 443.04040527]
[-130.46357727 428.13363647]
[-129.65098572 413.10913086]
[-126.00938416 398.50997925]
[-119.67045593 384.86392212]
[-110.86331940 372.66430664]
[-99.90637207 362.35208130]
[-87.19567871 354.30007935]
[-73.19074249 348.79934692]
[-58.39781570 346.04873657]
[-43.35166168 346.14767456]
[-28.59618950 349.09259033]
[-22.93340302 335.20257568]
[-17.27061653 321.31253052]
[-11.60783005 307.42251587]
[-5.94504356 293.53247070]
[-19.73669052 299.43081665]
[-34.12902832 295.20465088]
[-42.54206848 282.78607178]
[-41.12948608 267.85272217]
[-30.53709412 257.23193359]
[-15.60759068 255.77938843]
[-3.16654468 264.15914917]
[1.09806097 278.54196167]
[8.17516613 265.31643677]
[7.35799074 250.44425964]
[20.69100189 241.92713928]
[27.76810646 228.70161438]
[34.84521103 215.47607422]
[41.82366562 202.19822693]
[48.60365677 188.81796265]
[55.28385162 175.38758850]
[61.96404648 161.95721436]
[68.64424133 148.52684021]
[75.32443237 135.09645081]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[103.32081604 56.38293076]
[115.67424011 48.06174469]
[111.94804382 35.71353531]
[117.45693207 24.49587822]
[128.75811768 20.18196678]
[135.23760986 6.65362167]
[141.71710205 -6.87472391]
[148.19660950 -20.40306854]
[154.67610168 -33.93141556]
[142.29049683 -43.17345428]
[131.94218445 -54.64461899]
[124.02512360 -67.90552521]
[118.84015656 -82.44871521]
[116.58364868 -97.71805573]
[117.33999634 -113.13004303]
[121.07851410 -128.09605408]
[127.65464020 -142.04487610]
[136.81553650 -154.44444275]
[148.20985413 -164.82221985]
[161.40112305 -172.78311157]
[175.88452148 -178.02459717]
[191.10623169 -180.34814453]
[206.48452759 -179.66680908]
[221.43208313 -176.00839233]
[227.70944214 -189.63171387]
[233.98680115 -203.25503540]
[240.26416016 -216.87834167]
[246.54151917 -230.50166321]
[246.06117249 -235.69938660]
[247.48066711 -240.11961365]
[250.18568420 -243.16883850]
[253.41543579 -244.58345032]
[260.29483032 -257.91287231]
[257.12374878 -270.41516113]
[263.12802124 -281.37564087]
[274.61056519 -285.18063354]
[281.68768311 -298.40615845]
[288.76477051 -311.63168335]
[295.84188843 -324.85720825]
[295.53091431 -340.67535400]
[308.35772705 -348.24649048]
[315.43481445 -361.47201538]
[303.25128174 -370.26092529]
[292.34793091 -380.59533691]
[282.91934204 -392.29086304]
[275.13381958 -405.13879395]
[269.13027954 -418.90979004]
[265.01583862 -433.35815430]
[262.86398315 -448.22601318]
[262.71307373 -463.24801636]
[264.56579590 -478.15609741]
[268.38912964 -492.68417358]
[274.11480713 -506.57302856]
[281.64062500 -519.57476807]
[290.83233643 -531.45733643]
[301.52587891 -542.00872803]
[313.53039551 -551.04064941]
[326.63168335 -558.39184570]
[340.59588623 -563.93115234]
[355.17385864 -567.55969238]
[370.10537720 -569.21276855]
[385.12402344 -568.86090088]
[399.96176147 -566.51025391]
[414.35375977 -562.20288086]
[428.04321289 -556.01556396]
[440.78579712 -548.05883789]
[452.35412598 -538.47460938]
[462.54171753 -527.43395996]
[471.16677856 -515.13391113]
[478.07540894 -501.79391479]
[483.14428711 -487.65213013]
[486.28292847 -472.96090698]
[487.43539429 -457.98242188]
[486.58105469 -442.98397827]
[483.73516846 -428.23321533]
[478.94854736 -413.99343872]
[472.30657959 -400.51870728]
[463.92785645 -388.04956055]
[453.96182251 -376.80847168]
[442.58639526 -366.99606323]
[430.00457764 -358.78747559]
[416.44088745 -352.32919312]
[402.13739014 -347.73641968]
[387.34933472 -345.09118652]
[372.34066772 -344.44067383]
[357.37921143 -345.79647827]
[342.73196411 -349.13442993]
[328.66033936 -354.39492798]
[321.58325195 -341.16940308]
[322.40042114 -326.29721069]
[309.06741333 -317.78009033]
[301.99029541 -304.55456543]
[294.91320801 -291.32904053]
[287.83609009 -278.10351562]
[289.34643555 -260.61962891]
[273.62426758 -251.03346252]
[266.74487305 -237.70404053]
[260.16482544 -224.22430420]
[253.88746643 -210.60098267]
[247.61010742 -196.97766113]
[241.33274841 -183.35435486]
[235.05538940 -169.73103333]
[246.93193054 -161.28158569]
[257.05044556 -150.78483582]
[265.06307983 -138.59944153]
[270.69396973 -125.14212799]
[273.74880981 -110.87345886]
[274.12136841 -96.28208160]
[271.79739380 -81.86796570]
[266.85504150 -68.12529755]
[259.46218872 -55.52552414]
[249.87092590 -44.50117493]
[238.40872192 -35.43103027]
[225.46745300 -28.62709808]
[211.48986816 -24.32388115]
[196.95449829 -22.67029190]
[182.35926819 -23.72450829]
[168.20445251 -27.45191956]
[161.72494507 -13.92357349]
[155.24545288 -0.39522788]
[148.76596069 13.13311768]
[142.28646851 26.66146278]
[144.57600403 44.06045532]
[129.29756165 54.33910370]
[130.99848938 69.13626862]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[95.65222168 134.45310974]
[92.91703033 139.43466187]
[88.75480652 141.77665710]
[82.07461548 155.20703125]
[75.39442444 168.63740540]
[68.71422577 182.06777954]
[62.03403091 195.49815369]
[61.01417160 204.57546997]
[55.15309525 209.07765198]
[53.99819946 218.13877869]
[48.07073975 222.55319214]
[40.99363327 235.77871704]
[33.91652679 249.00424194]
[34.22750092 264.82238770]
[21.40069389 272.39352417]
[14.32358837 285.61907959]
[7.94498348 299.19528198]
[2.28219676 313.08529663]
[-3.38058972 326.97531128]
[-9.04337597 340.86535645]
[-14.70616245 354.75537109]
[-2.09762025 362.96643066]
[8.72893333 373.41543579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[41 203]
[42 202]
[44 200]
[45 199]
[46 198]
[47 196]
[48 194]
[49 193]
[50 192]
[51 191]
[52 190]
[53 187]
[54 186]
[56 184]
[57 183]
[59 181]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[89 154]
[90 153]
[93 151]
[94 150]
[95 149]
[96 148]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
