%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[65.17396545 432.21340942]
[57.18401718 419.24880981]
[55.16445160 404.15441895]
[59.46516418 389.54537964]
[69.34102631 377.95281982]
[83.08100128 371.38525391]
[82.63439178 356.39190674]
[82.18778229 341.39855957]
[81.74118042 326.40521240]
[81.29457092 311.41183472]
[72.70812225 302.89132690]
[72.21334076 290.40377808]
[80.62046051 280.62197876]
[80.39713287 265.62365723]
[80.17380524 250.62532043]
[79.95047760 235.62698364]
[70.15193939 221.06828308]
[79.25406647 205.06100464]
[78.80745697 190.06765747]
[78.36085510 175.07431030]
[77.91424561 160.08096313]
[71.54679871 173.66239929]
[61.79314804 185.05828857]
[49.35742950 193.44595337]
[35.13738251 198.21987915]
[20.15957069 199.03541565]
[5.50524950 195.83372498]
[-7.76766920 188.84590149]
[-18.70100403 178.57641602]
[-26.50546837 165.76664734]
[-30.61764908 151.34132385]
[-30.74068642 136.34182739]
[-26.86569595 121.85099030]
[-19.27241898 108.91490936]
[-8.50902081 98.46745300]
[4.64748096 91.26284027]
[19.24730682 87.82117462]
[34.23648453 88.39090729]
[48.53292847 92.93091583]
[61.10456848 101.11344910]
[71.04384613 112.34780884]
[77.63323975 125.82296753]
[80.39710999 140.56730652]
[84.58412170 126.16352844]
[88.77113342 111.75974274]
[83.78712463 101.23354340]
[87.12122345 90.07446289]
[97.06285858 84.00774384]
[101.46385956 69.66789246]
[105.86486053 55.32804871]
[95.46636200 66.13874817]
[82.56487274 73.79064941]
[68.09176636 77.73136139]
[53.09186554 77.67639923]
[38.64802933 73.62972260]
[25.80296898 65.88346863]
[15.48397923 54.99685287]
[8.43599796 41.75578308]
[5.16782522 27.11614227]
[5.91539240 12.13478279]
[10.62473202 -2.10678029]
[18.95587349 -14.58043575]
[30.30738449 -24.38570023]
[43.85979080 -30.81472206]
[58.63472748 -33.40338516]
[73.56558990 -31.96481133]
[87.57449341 -26.60285378]
[99.65013123 -17.70459557]
[108.92074585 -5.91241074]
[114.71709442 7.92241383]
[116.62071991 22.80113029]
[114.49389648 37.65074921]
[123.09246063 25.35991096]
[131.69102478 13.06907272]
[134.04614258 4.24347115]
[140.51022339 0.66054773]
[149.29083252 -11.50090790]
[158.07144165 -23.66236305]
[166.85203552 -35.82381821]
[175.35887146 -48.17832947]
[183.58767700 -60.71973038]
[191.81648254 -73.26113129]
[200.04528809 -85.80252838]
[186.17776489 -80.08486938]
[171.23332214 -81.37476349]
[158.55061340 -89.38405609]
[150.96295166 -102.32343292]
[150.16548157 -117.30222321]
[156.33633423 -130.97410583]
[168.09692383 -140.28477478]
[182.81991577 -143.15417480]
[197.21615601 -138.94129944]
[208.06947327 -128.58729553]
[212.95523071 -114.40528107]
[210.78190613 -99.56353760]
[220.94546509 -110.59541321]
[231.10900879 -121.62729645]
[241.27255249 -132.65916443]
[231.24867249 -143.83354187]
[222.33238220 -155.91015625]
[214.60443115 -168.77963257]
[208.13481140 -182.32543945]
[202.98211670 -196.42488098]
[199.19300842 -210.95028687]
[196.80180359 -225.77011108]
[195.83015442 -240.75012207]
[196.28684998 -255.75465393]
[198.16778564 -270.64782715]
[201.45588684 -285.29476929]
[206.12141418 -299.56283569]
[212.12208557 -313.32281494]
[219.40356445 -326.45007324]
[227.89991760 -338.82571411]
[237.53419495 -350.33767700]
[248.21914673 -360.88171387]
[259.85800171 -370.36233521]
[272.34533691 -378.69366455]
[285.56808472 -385.80026245]
[299.40649414 -391.61776733]
[313.73522949 -396.09347534]
[328.42453003 -399.18685913]
[343.34136963 -400.86993408]
[358.35064697 -401.12741089]
[373.31643677 -399.95700073]
[388.10321045 -397.36929321]
[402.57702637 -393.38769531]
[416.60684204 -388.04830933]
[430.06558228 -381.39944458]
[442.83132935 -373.50134277]
[454.78854370 -364.42553711]
[465.82885742 -354.25421143]
[475.85232544 -343.07946777]
[484.76818848 -331.00253296]
[492.49566650 -318.13275146]
[498.96478271 -304.58673096]
[504.11697388 -290.48709106]
[507.90554810 -275.96154785]
[510.29620361 -261.14163208]
[511.26733398 -246.16160583]
[510.81005859 -231.15707397]
[508.92858887 -216.26396179]
[505.63995361 -201.61714172]
[500.97390747 -187.34924316]
[494.97274780 -173.58949280]
[487.69076538 -160.46250916]
[479.19396973 -148.08715820]
[469.55926514 -136.57554626]
[458.87396240 -126.03189850]
[447.23477173 -116.55170441]
[434.74710083 -108.22083282]
[421.52410889 -101.11472321]
[407.68548584 -95.29773712]
[393.35656738 -90.82254791]
[378.66717529 -87.72969055]
[363.75027466 -86.04716492]
[348.74096680 -85.79022217]
[333.77523804 -86.96118164]
[318.98855591 -89.54943848]
[304.51486206 -93.53155518]
[290.48526001 -98.87146759]
[277.02676392 -105.52081299]
[264.26129150 -113.41938019]
[252.30442810 -122.49562073]
[242.14088440 -111.46374512]
[231.97734070 -100.43186951]
[221.81378174 -89.39999390]
[212.58668518 -77.57372284]
[204.35787964 -65.03231812]
[196.12907410 -52.49092102]
[187.90026855 -39.94952011]
[188.25524902 -36.44148254]
[186.92872620 -32.58721542]
[183.77645874 -29.17891121]
[179.01348877 -27.04321671]
[170.23289490 -14.88176060]
[161.45228577 -2.72030473]
[152.67169189 9.44115067]
[143.98185730 21.66763687]
[135.38330078 33.95847321]
[126.78473663 46.24931335]
[120.20470428 59.72904587]
[115.80371094 74.06889343]
[111.40270996 88.40874481]
[115.57922363 104.65475464]
[103.17491150 115.94675446]
[98.98789978 130.35054016]
[94.80088806 144.75431824]
[92.90760040 159.63435364]
[93.35420227 174.62770081]
[93.80081177 189.62104797]
[94.24741364 204.61441040]
[103.08293152 214.01103210]
[103.14624023 226.50820923]
[94.94881439 235.40365601]
[95.17214203 250.40199280]
[95.39546967 265.40032959]
[95.61879730 280.39865112]
[105.42660522 295.98355103]
[96.28792572 310.96524048]
[96.73452759 325.95858765]
[97.18113708 340.95193481]
[97.62773895 355.94528198]
[98.07434845 370.93862915]
[112.18086243 376.67675781]
[122.72922516 387.66094971]
[127.89185333 401.98809814]
[126.77430725 417.17593384]
[119.57019043 430.59310913]
[107.52767181 439.91500854]
[92.73319244 443.52655029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[13 197]
[14 196]
[15 195]
[16 194]
[18 191]
[19 190]
[20 189]
[21 188]
[43 187]
[44 186]
[45 185]
[48 183]
[49 182]
[50 181]
[72 180]
[73 179]
[74 178]
[76 177]
[77 176]
[78 175]
[79 174]
[80 170]
[81 169]
[82 168]
[83 167]
[95 166]
[96 165]
[97 164]
[98 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
