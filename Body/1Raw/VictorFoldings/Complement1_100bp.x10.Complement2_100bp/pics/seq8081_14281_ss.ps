%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[13.64320946 702.22686768]
[-0.17220391 708.08160400]
[-14.32183838 713.07476807]
[-28.75201797 717.18737793]
[-43.40800476 720.40380859]
[-58.23420334 722.71197510]
[-73.17437744 724.10302734]
[-88.17183685 724.57165527]
[-103.16971588 724.11621094]
[-118.11109924 722.73828125]
[-132.93931580 720.44317627]
[-147.59812927 717.23956299]
[-162.03192139 713.13964844]
[-176.18592834 708.15893555]
[-190.00648499 702.31634521]
[-203.44114685 695.63403320]
[-216.43896484 688.13732910]
[-228.95060730 679.85467529]
[-240.92863464 670.81750488]
[-252.32762146 661.06011963]
[-263.10430908 650.61944580]
[-273.21780396 639.53521729]
[-282.62976074 627.84936523]
[-291.30447388 615.60632324]
[-299.20904541 602.85241699]
[-306.31347656 589.63610840]
[-312.59082031 576.00750732]
[-318.01727295 562.01831055]
[-322.57223511 547.72161865]
[-326.23843384 533.17163086]
[-329.00198364 518.42352295]
[-330.85235596 503.53326416]
[-331.78259277 488.55734253]
[-331.78909302 473.55255127]
[-330.87188721 458.57583618]
[-329.03445435 443.68395996]
[-326.28372192 428.93347168]
[-322.63015747 414.38027954]
[-318.08761597 400.07962036]
[-312.67333984 386.08572388]
[-306.40783691 372.45169067]
[-299.31488037 359.22921753]
[-291.42141724 346.46847534]
[-282.75732422 334.21786499]
[-273.35552979 322.52386475]
[-263.25164795 311.43081665]
[-252.48405457 300.98083496]
[-241.09355164 291.21353149]
[-229.12338257 282.16595459]
[-216.61892700 273.87243652]
[-203.62763977 266.36444092]
[-190.19879150 259.67044067]
[-176.38331604 253.81582642]
[-162.23364258 248.82283020]
[-147.80342102 244.71035767]
[-133.14739990 241.49403381]
[-118.32117462 239.18605042]
[-103.38098907 237.79516602]
[-88.38352203 237.32664490]
[-73.38565063 237.78227234]
[-58.44428253 239.16032410]
[-43.61608124 241.45558167]
[-28.95730591 244.65931702]
[-14.52355671 248.75938416]
[-0.36958990 253.74023438]
[13.45090485 259.58297729]
[20.13109970 246.15258789]
[26.81129456 232.72221375]
[33.49148941 219.29183960]
[32.23187637 204.45059204]
[45.30538940 195.54026794]
[51.98558426 182.10989380]
[58.66577911 168.67951965]
[65.24580383 155.19978333]
[71.72530365 141.67143250]
[78.20479584 128.14309692]
[84.68429565 114.61474609]
[79.08049011 103.24588013]
[80.97575378 90.71346283]
[89.69068909 81.51000977]
[102.10122681 78.93470764]
[108.78141785 65.50433350]
[115.46161652 52.07395554]
[122.14180756 38.64358139]
[128.82200623 25.21320534]
[135.50219727 11.78282833]
[134.72039795 -4.01904964]
[147.31610107 -11.96874142]
[153.99629211 -25.39911842]
[153.96815491 -32.01052856]
[156.85044861 -36.90842819]
[161.08055115 -39.12545776]
[168.15765381 -52.35098648]
[173.61302185 -66.32378387]
[177.36932373 -80.84584045]
[181.12561035 -95.36790466]
[184.88191223 -109.88996124]
[188.63821411 -124.41201782]
[175.04570007 -130.86492920]
[162.92021179 -139.77384949]
[152.70005798 -150.81672668]
[144.75469971 -163.59436035]
[139.37136841 -177.64483643]
[136.74464417 -192.46026611]
[136.96951294 -207.50506592]
[140.03781128 -222.23538208]
[145.83865356 -236.11869812]
[154.16232300 -248.65318298]
[164.70791626 -259.38568115]
[177.09423828 -267.92825317]
[190.87353516 -273.97207642]
[205.54766846 -277.29867554]
[220.58619690 -277.78778076]
[235.44548035 -275.42172241]
[249.58836365 -270.28601074]
[262.50360107 -262.56634521]
[273.72430420 -252.54174805]
[282.84484863 -240.57463074]
[289.53552246 -227.09756470]
[293.55450439 -212.59776306]
[294.75646973 -197.59936523]
[293.09799194 -182.64457703]
[288.63900757 -168.27397156]
[281.54071045 -155.00708008]
[272.05969238 -143.32345581]
[260.53872681 -133.64546204]
[247.39422607 -126.32297516]
[233.10139465 -121.62066650]
[218.17691040 -119.70854187]
[203.16027832 -120.65571594]
[199.40397644 -106.13365936]
[195.64767456 -91.61160278]
[191.89137268 -77.08953857]
[188.13507080 -62.56748199]
[198.44911194 -73.45879364]
[211.83509827 -80.22749329]
[226.72047424 -82.07840729]
[241.35649109 -78.79409027]
[254.02375793 -70.76037598]
[263.23410034 -58.92106247]
[267.90554810 -44.66702271]
[267.48925781 -29.67279816]
[262.03414917 -15.69990349]
[252.18107605 -4.38985634]
[239.08758545 2.92864919]
[224.29188538 5.39584255]
[209.53215027 2.72187996]
[196.54232788 -4.77910376]
[186.84848022 -16.22590065]
[181.58940125 -30.27375221]
[181.38319397 -45.27388000]
[174.30607605 -32.04835129]
[167.42666626 -18.71892357]
[160.74647522 -5.28854704]
[162.00608826 9.55270100]
[148.93257141 18.46302223]
[142.25238037 31.89339828]
[135.57218933 45.32377625]
[128.89198303 58.75415039]
[122.21179962 72.18452454]
[115.53160095 85.61490631]
[121.13929749 101.13655090]
[113.89970398 115.96746826]
[98.21263885 121.09423828]
[91.73313904 134.62258911]
[85.25364685 148.15092468]
[78.77415466 161.67927551]
[77.88954926 170.77076721]
[72.09615326 175.35971069]
[65.41596222 188.79008484]
[58.73576355 202.22045898]
[59.51756668 218.02233887]
[46.92186356 225.97203064]
[40.24166870 239.40240479]
[33.56147766 252.83277893]
[26.88128090 266.26315308]
[39.87916565 273.75973511]
[52.39089966 282.04226685]
[64.36901855 291.07931519]
[75.76808929 300.83660889]
[86.54486847 311.27713013]
[96.65848541 322.36129761]
[106.07055664 334.04702759]
[114.74539948 346.29000854]
[122.65008545 359.04382324]
[129.75465393 372.26007080]
[136.03213501 385.88858032]
[141.45870972 399.87771606]
[146.01382446 414.17437744]
[149.68017578 428.72436523]
[152.44384766 443.47241211]
[154.29438782 458.36267090]
[155.22474670 473.33859253]
[155.23141479 488.34335327]
[154.31436157 503.32009888]
[152.47706604 518.21197510]
[149.72648621 532.96252441]
[146.07305908 547.51574707]
[141.53065491 561.81640625]
[136.11650085 575.81036377]
[129.85113525 589.44445801]
[122.75832367 602.66705322]
[114.86496735 615.42785645]
[106.20101166 627.67852783]
[96.79932404 639.37261963]
[86.69556427 650.46575928]
[75.92806244 660.91589355]
[64.53766632 670.68328857]
[52.56758118 679.73095703]
[40.06321335 688.02459717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 176]
[67 175]
[68 174]
[69 173]
[71 171]
[72 170]
[73 169]
[74 167]
[75 166]
[76 165]
[77 164]
[81 161]
[82 160]
[83 159]
[84 158]
[85 157]
[86 156]
[88 154]
[89 153]
[92 152]
[93 151]
[94 134]
[95 133]
[96 132]
[97 131]
[98 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
