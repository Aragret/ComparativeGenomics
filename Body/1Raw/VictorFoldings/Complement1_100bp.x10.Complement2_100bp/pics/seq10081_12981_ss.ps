%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[11.30199528 465.54244995]
[0.82318008 476.28085327]
[-10.24125862 486.41482544]
[-21.85650826 495.91244507]
[-33.98602295 504.74386597]
[-46.59163666 512.88128662]
[-59.63368988 520.29907227]
[-73.07115173 526.97393799]
[-86.86172485 532.88488770]
[-100.96204376 538.01324463]
[-115.32772064 542.34295654]
[-129.91357422 545.86035156]
[-144.67370605 548.55432129]
[-159.56166077 550.41650391]
[-174.53060913 551.44097900]
[-189.53346252 551.62451172]
[-204.52299500 550.96655273]
[-219.45205688 549.46911621]
[-234.27366638 547.13702393]
[-248.94119263 543.97747803]
[-263.40850830 540.00048828]
[-277.63003540 535.21862793]
[-291.56109619 529.64678955]
[-305.15780640 523.30267334]
[-318.37744141 516.20611572]
[-331.17834473 508.37951660]
[-343.52026367 499.84747314]
[-355.36437988 490.63681030]
[-366.67340088 480.77655029]
[-377.41177368 470.29769897]
[-387.54571533 459.23321533]
[-397.04330444 447.61795044]
[-405.87466431 435.48840332]
[-414.01202393 422.88275146]
[-421.42980957 409.84066772]
[-428.10461426 396.40319824]
[-434.01547241 382.61257935]
[-439.14379883 368.51223755]
[-443.47341919 354.14654541]
[-446.99075317 339.56069946]
[-449.68472290 324.80056763]
[-451.54684448 309.91259766]
[-452.57125854 294.94363403]
[-452.75473022 279.94079590]
[-452.09671021 264.95126343]
[-450.59924316 250.02220154]
[-448.26705933 235.20059204]
[-445.10748291 220.53308105]
[-441.13043213 206.06579590]
[-436.34848022 191.84426880]
[-430.77664185 177.91322327]
[-424.43246460 164.31652832]
[-417.33587646 151.09693909]
[-409.50921631 138.29606628]
[-400.97711182 125.95417023]
[-391.76641846 114.11009216]
[-381.90612793 102.80109406]
[-371.42721558 92.06275940]
[-360.36270142 81.92887878]
[-348.74737549 72.43133545]
[-336.61779785 63.60000610]
[-324.01211548 55.46268463]
[-310.97003174 48.04497528]
[-297.53250122 41.37020874]
[-283.74188232 35.45939636]
[-269.64154053 30.33112907]
[-255.27581787 26.00154495]
[-240.68995667 22.48426437]
[-225.92980957 19.79035759]
[-211.04182434 17.92829895]
[-196.07287598 16.90394592]
[-181.07002258 16.72052193]
[-166.08049011 17.37860680]
[-151.15144348 18.87612724]
[-136.32984924 21.20837212]
[-121.66234589 24.36800194]
[-107.19507599 28.34507751]
[-92.97356415 33.12708664]
[-79.04254913 38.69897842]
[-65.44587708 45.04322433]
[-52.22631454 52.13986588]
[-39.42546463 59.96656799]
[-27.08360291 68.49871063]
[-15.23955727 77.70944977]
[-3.93059611 87.56979370]
[6.80769873 98.04872894]
[16.94153976 109.11328125]
[26.43904305 120.72863770]
[35.27032471 132.85824585]
[47.87263489 124.72303009]
[60.47494888 116.58781433]
[73.07726288 108.45259857]
[85.67957306 100.31738281]
[92.23143768 87.96567535]
[106.18521118 87.08030701]
[118.78752136 78.94509125]
[131.38983154 70.80987549]
[143.93124390 62.58106613]
[156.41102600 54.25912094]
[168.89082336 45.93717575]
[161.59579468 32.82119751]
[155.37983704 19.16073799]
[150.28324890 5.04439497]
[146.33909607 -9.43627930]
[143.57293701 -24.18737221]
[142.00273132 -39.11321640]
[141.63867188 -54.11700821]
[142.48309326 -69.10144043]
[144.53051758 -83.96933746]
[147.76770020 -98.62426758]
[152.17361450 -112.97119141]
[157.71971130 -126.91706085]
[164.36999512 -140.37142944]
[172.08134460 -153.24703979]
[180.80375671 -165.46038818]
[190.48066711 -176.93225098]
[201.04928589 -187.58825684]
[212.44110107 -197.35928345]
[224.58222961 -206.18194580]
[237.39392090 -213.99903870]
[250.79307556 -220.75987244]
[264.69281006 -226.42057800]
[279.00299072 -230.94447327]
[293.63076782 -234.30218506]
[308.48129272 -236.47195435]
[323.45828247 -237.43971252]
[338.46453857 -237.19918823]
[353.40280151 -235.75192261]
[368.17617798 -233.10729980]
[382.68884277 -229.28248596]
[396.84664917 -224.30229187]
[410.55783081 -218.19900513]
[423.73342896 -211.01220703]
[436.28799438 -202.78852844]
[448.14010620 -193.58126831]
[459.21292114 -183.45016479]
[469.43460083 -172.46090698]
[478.73886108 -160.68478394]
[487.06536865 -148.19816589]
[494.36010742 -135.08203125]
[500.57574463 -121.42143250]
[505.67202759 -107.30497742]
[509.61587524 -92.82421875]
[512.38171387 -78.07305908]
[513.95159912 -63.14718246]
[514.31530762 -48.14338303]
[513.47058105 -33.15896988]
[511.42279053 -18.29111862]
[508.18530273 -3.63625789]
[503.77905273 10.71056843]
[498.23266602 24.65631485]
[491.58209229 38.11053467]
[483.87045288 50.98597336]
[475.14776611 63.19913101]
[465.47061157 74.67079163]
[454.90173340 85.32656097]
[443.50970459 95.09732819]
[431.36840820 103.91973114]
[418.55654907 111.73654175]
[405.15722656 118.49707794]
[391.25735474 124.15748596]
[376.94711304 128.68104553]
[362.31924438 132.03845215]
[347.46865845 134.20788574]
[332.49166870 135.17532349]
[317.48538208 134.93444824]
[302.54714966 133.48686218]
[287.77386475 130.84191895]
[273.26129150 127.01679230]
[259.10357666 122.03627777]
[245.39253235 115.93269348]
[232.21710205 108.74560547]
[219.66270447 100.52163696]
[207.81079102 91.31411743]
[196.73820496 81.18276978]
[186.51676941 70.19329834]
[177.21276855 58.41696930]
[164.73297119 66.73891449]
[152.25317383 75.06085968]
[148.43218994 81.38713837]
[139.52505493 83.41218567]
[126.92273712 91.54740143]
[114.32042694 99.68261719]
[107.76856232 112.03432465]
[93.81478882 112.91969299]
[81.21247864 121.05490875]
[68.61016083 129.19012451]
[56.00785065 137.32534790]
[43.40554047 145.46055603]
[50.82339859 158.50257874]
[57.49831009 171.94001770]
[63.40927887 185.73057556]
[68.53770447 199.83087158]
[72.86744690 214.19653320]
[76.38488770 228.78237915]
[79.07895660 243.54249573]
[80.94118500 258.43045044]
[81.96570587 273.39938354]
[82.14929199 288.40222168]
[81.49137878 303.39178467]
[79.99402618 318.32083130]
[77.66194153 333.14245605]
[74.50247192 347.80999756]
[70.52555847 362.27731323]
[65.74371338 376.49887085]
[60.17197418 390.42996216]
[53.82787704 404.02670288]
[46.73138428 417.24633789]
[38.90482330 430.04727173]
[30.37281990 442.38922119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 189]
[90 188]
[91 187]
[92 186]
[93 185]
[95 183]
[96 182]
[97 181]
[98 179]
[99 178]
[100 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
