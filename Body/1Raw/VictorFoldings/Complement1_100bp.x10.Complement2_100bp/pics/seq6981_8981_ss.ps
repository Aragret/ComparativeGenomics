%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[46.24339676 652.12768555]
[33.53109360 660.12231445]
[19.97661209 666.58703613]
[5.76326132 671.43444824]
[-8.91673946 674.59893799]
[-23.86485863 676.03778076]
[-38.87894440 675.73144531]
[-53.75593948 673.68414307]
[-68.29466248 669.92352295]
[-82.29847717 664.50048828]
[-95.57801056 657.48828125]
[-107.95367432 648.98187256]
[-119.25808716 639.09619141]
[-129.33837891 627.96496582]
[-138.05822754 615.73870850]
[-145.29971313 602.58282471]
[-150.96488953 588.67523193]
[-154.97714233 574.20391846]
[-157.28221130 559.36468506]
[-157.84893799 544.35815430]
[-156.66963196 529.38732910]
[-153.76026917 514.65466309]
[-149.16017151 500.35934448]
[-142.93156433 486.69473267]
[-135.15867615 473.84567261]
[-125.94663239 461.98587036]
[-115.42001343 451.27575684]
[-103.72118378 441.86013794]
[-91.00834656 433.86636353]
[-77.45343018 427.40255737]
[-63.23975372 422.55612183]
[-48.55954361 419.39257812]
[-33.61132812 417.95474243]
[-18.59726334 418.26205444]
[-3.72040272 420.31036377]
[0.03589806 405.78829956]
[3.79219866 391.26623535]
[-0.51140618 377.00692749]
[10.43520260 365.58404541]
[8.82632637 361.08731079]
[10.02518845 355.53216553]
[14.52557564 350.68881226]
[18.71258736 336.28503418]
[22.89959908 321.88122559]
[27.08660889 307.47744751]
[31.27362061 293.07366943]
[29.79934311 288.53103638]
[31.16307068 283.01403809]
[35.80566788 278.30682373]
[40.41967773 264.03408813]
[45.03368759 249.76136780]
[49.64769363 235.48863220]
[54.26170349 221.21589661]
[58.87571335 206.94316101]
[63.48972321 192.67042542]
[58.89618683 175.73330688]
[72.66442871 163.50558472]
[77.06542206 149.16574097]
[73.40282440 134.72846985]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[95.93675232 77.01094818]
[100.98532104 71.61338043]
[105.59933472 57.34064865]
[102.48211670 41.82957077]
[113.75919342 32.09937286]
[118.37319946 17.82663918]
[122.98721313 3.55390596]
[127.60121918 -10.71882725]
[132.21522522 -24.99155998]
[136.82923889 -39.26429367]
[138.72253418 -54.14432907]
[137.82971191 -69.11773682]
[136.93690491 -84.09114075]
[133.30224609 -92.47130585]
[136.14393616 -99.29380798]
[135.47415161 -114.27884674]
[134.80436707 -129.26388550]
[123.88433838 -137.14852905]
[119.56232452 -149.69964600]
[123.20432281 -162.26220703]
[133.26551819 -170.31217957]
[132.81890869 -185.30552673]
[132.37229919 -200.29887390]
[131.92568970 -215.29222107]
[121.70365906 -204.31451416]
[106.83272552 -202.35096741]
[94.11170197 -210.29927063]
[89.35646057 -224.52555847]
[94.74102783 -238.52578735]
[107.80365753 -245.89923096]
[122.57229614 -243.27484131]
[132.29556274 -231.85073853]
[133.41120911 -246.80918884]
[134.52687073 -261.76763916]
[135.64251709 -276.72610474]
[136.75816345 -291.68453979]
[122.83364105 -297.63320923]
[111.59679413 -307.78268433]
[104.26650238 -321.03204346]
[101.63790131 -335.94409180]
[103.99612427 -350.90127563]
[111.08536530 -364.28115845]
[122.13664246 -374.63241577]
[135.95118713 -380.83215332]
[151.03051758 -382.20794678]
[165.73892212 -378.61050415]
[178.48094177 -370.43008423]
[187.87443542 -358.55398560]
[192.90046692 -344.27050781]
[193.01382446 -329.12899780]
[188.20223999 -314.77185059]
[178.98762512 -302.75646973]
[166.36950684 -294.38616943]
[151.71661377 -290.56890869]
[150.60096741 -275.61044312]
[149.48532104 -260.65200806]
[148.36967468 -245.69354248]
[147.25401306 -230.73509216]
[146.91903687 -215.73883057]
[147.36564636 -200.74548340]
[147.81225586 -185.75212097]
[148.25886536 -170.75877380]
[160.98124695 -159.75968933]
[161.82887268 -142.62504578]
[149.78941345 -129.93367004]
[150.45919800 -114.94863129]
[151.12898254 -99.96359253]
[151.91030884 -84.98395538]
[152.80311584 -70.01055145]
[153.69593811 -55.03714371]
[159.52171326 -68.85960388]
[168.33970642 -80.99397278]
[179.68734741 -90.80371094]
[192.96937561 -97.77421570]
[207.48901367 -101.53982544]
[222.48461914 -101.90300751]
[237.16954041 -98.84471130]
[250.77343750 -92.52536774]
[262.58267212 -83.27648163]
[271.97775269 -71.58322144]
[278.46585083 -58.05899048]
[281.70657349 -43.41325760]
[281.52996826 -28.41429710]
[277.94528198 -13.84892654]
[271.14056396 -0.48121881]
[261.47274780 10.98758507]
[249.44902039 19.95585442]
[235.70010376 25.95313072]
[220.94723511 28.66480827]
[205.96434021 27.94864082]
[191.53738403 23.84219551]
[178.42317200 16.56088638]
[167.30966187 6.48667955]
[158.77981567 -5.85195398]
[153.28112793 -19.80775452]
[151.10197449 -34.65028381]
[146.48796082 -20.37755203]
[141.87394714 -6.10481834]
[137.25994873 8.16791534]
[132.64593506 22.44064903]
[128.03192139 36.71338272]
[131.47917175 51.20357895]
[119.87207031 61.95465851]
[115.25805664 76.22739410]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[102.53623199 143.66970825]
[91.40527344 153.56672668]
[87.00427246 167.90658569]
[92.34680176 179.64627075]
[88.38598633 191.49935913]
[77.76245880 197.28443909]
[73.14844513 211.55717468]
[68.53443909 225.82991028]
[63.92042923 240.10264587]
[59.30641937 254.37536621]
[54.69240952 268.64810181]
[50.07839966 282.92083740]
[45.67740250 297.26068115]
[41.49039078 311.66445923]
[37.30337906 326.06823730]
[33.11636734 340.47204590]
[28.92935753 354.87582397]
[24.95726204 369.34033203]
[28.99219131 384.63836670]
[18.31425858 395.02255249]
[14.55795765 409.54461670]
[10.80165672 424.06665039]
[24.80583763 429.48880005]
[38.08584213 436.50006104]
[50.46206665 445.00567627]
[61.76714325 454.89062500]
[71.84818268 466.02117920]
[80.56884766 478.24682617]
[87.81120300 491.40222168]
[93.47730255 505.30947876]
[97.49052429 519.78051758]
[99.79658508 534.61956787]
[100.36431122 549.62609863]
[99.18600464 564.59698486]
[96.27761841 579.32983398]
[91.67848206 593.62548828]
[85.45079041 607.29046631]
[77.67876434 620.14007568]
[68.46750641 632.00048828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 193]
[36 192]
[37 191]
[39 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[57 174]
[58 173]
[60 171]
[61 170]
[63 168]
[65 167]
[66 166]
[68 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
[74 133]
[75 132]
[76 131]
[78 130]
[79 129]
[80 128]
[84 125]
[85 124]
[86 123]
[87 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
