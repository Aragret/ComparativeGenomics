%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[136.80900574 635.09149170]
[125.43352509 625.30297852]
[114.83091736 614.68212891]
[105.06192017 603.28985596]
[96.18249512 591.19134521]
[88.24349213 578.45599365]
[81.29039764 565.15667725]
[75.36302948 551.36956787]
[70.49534607 537.17370605]
[66.71522522 522.65032959]
[64.04432678 507.88269043]
[62.49793625 492.95532227]
[62.08491898 477.95376587]
[62.80764389 462.96395874]
[64.66196442 448.07171631]
[67.63726044 433.36236572]
[71.71649933 418.92013550]
[76.87630463 404.82781982]
[83.08712006 391.16607666]
[90.31337738 378.01318359]
[98.51367950 365.44448853]
[107.64105225 353.53195190]
[117.64322662 342.34384155]
[128.46290588 331.94421387]
[140.03810120 322.39266968]
[152.30253601 313.74389648]
[165.18592834 306.04745483]
[178.61450195 299.34738159]
[172.95172119 285.45736694]
[167.28894043 271.56735229]
[161.62614441 257.67730713]
[155.96336365 243.78727722]
[150.09440613 229.98310852]
[144.02056885 216.26783752]
[137.94673157 202.55256653]
[131.87289429 188.83731079]
[119.64473724 180.33311462]
[121.13134766 164.58190918]
[115.05751038 150.86663818]
[108.88174438 137.19697571]
[102.60438538 123.57365417]
[96.32701874 109.95034027]
[89.54702759 96.57006836]
[82.27380371 83.45137024]
[75.00057220 70.33267975]
[67.72734070 57.21398163]
[52.80093765 52.75975037]
[45.61172867 39.35192108]
[49.95014572 25.14932442]
[42.67691422 12.03063011]
[35.40368652 -1.08806384]
[34.40672684 13.87876892]
[27.09007835 26.97329712]
[14.86647320 35.66717148]
[0.09609714 38.28174591]
[-14.36912155 34.31217957]
[-25.73617744 24.52494049]
[-31.81026649 10.80978775]
[-31.41858101 -4.18509769]
[-24.63674736 -17.56443787]
[-12.77423191 -26.74489021]
[1.87849998 -29.95385551]
[16.49223518 -26.57173347]
[28.24608994 -17.25056267]
[23.42009163 -31.45301819]
[18.59409523 -45.65547180]
[13.76809692 -59.85792923]
[8.94209957 -74.06038666]
[4.11610174 -88.26284027]
[1.75140476 -73.45040894]
[-5.01881456 -60.06518555]
[-15.54926205 -49.38297272]
[-28.83624268 -42.42192841]
[-43.61332703 -39.84553146]
[-58.47205353 -41.89935303]
[-71.99619293 -48.38763428]
[-82.89669800 -58.69195175]
[-90.13460541 -71.83016205]
[-93.02005005 -86.55002594]
[-91.27800751 -101.44852448]
[-85.07451630 -115.10563660]
[-75.00085449 -126.21965027]
[-62.01717377 -133.73124695]
[-47.36100388 -136.92446899]
[-32.42927551 -135.49496460]
[-18.64518547 -129.57899475]
[-7.32254314 -119.74040222]
[0.45987895 -106.91591644]
[-0.43293694 -121.88932037]
[-1.32575285 -136.86273193]
[-2.21856856 -151.83613586]
[-5.85321760 -160.21629333]
[-3.01152396 -167.03880310]
[-3.68130898 -182.02383423]
[-18.31419754 -185.81460571]
[-31.17876434 -193.75151062]
[-41.13109970 -205.12878418]
[-47.28625107 -218.93478394]
[-49.09690475 -233.94187927]
[-46.40205765 -248.81565857]
[-39.44133377 -262.23355103]
[-28.83368111 -273.00244141]
[-15.52231789 -280.16476440]
[-0.69088477 -283.08367920]
[14.34181690 -281.49960327]
[28.23908997 -275.55340576]
[39.76520157 -265.77383423]
[47.89524841 -253.03045654]
[51.90632248 -238.45640564]
[51.44175720 -223.34762573]
[46.54286194 -209.04754639]
[37.64524460 -196.82772827]
[25.54007149 -187.77476501]
[11.30373001 -182.69361877]
[11.97351456 -167.70858765]
[12.75483704 -152.72894287]
[13.64765263 -137.75553894]
[14.54046917 -122.78213501]
[15.43328476 -107.80873108]
[18.31855774 -93.08883667]
[23.14455414 -78.88638306]
[27.97055244 -64.68392944]
[32.79655075 -50.48147202]
[37.62254715 -36.27901459]
[42.44854736 -22.07655907]
[48.52238083 -8.36129284]
[55.79560852 4.75740099]
[63.06884003 17.87609482]
[77.41297150 21.72076607]
[84.97593689 34.92137909]
[80.84603882 49.94075394]
[88.11926270 63.05944824]
[95.39249420 76.17813873]
[102.66572571 89.29683685]
[109.24548340 75.81697083]
[123.85292816 72.40776062]
[135.71998596 81.58234406]
[136.09870911 96.57756042]
[124.70990753 106.33950043]
[109.95034027 103.67298126]
[116.22769928 117.29629517]
[122.50505829 130.91961670]
[128.93859863 137.40400696]
[128.77278137 144.79280090]
[134.84661865 158.50807190]
[147.50921631 167.99327087]
[145.58816528 182.76347351]
[151.66200256 196.47874451]
[157.73583984 210.19400024]
[163.80966187 223.90927124]
[168.91679382 228.10794067]
[170.84707642 233.45314026]
[169.85339355 238.12449646]
[175.51617432 252.01452637]
[181.17895508 265.90454102]
[186.84175110 279.79458618]
[192.50453186 293.68460083]
[206.78987122 289.08605957]
[221.38206482 285.58105469]
[236.19755554 283.18966675]
[251.15147400 281.92565918]
[266.15817261 281.79617310]
[281.13165283 282.80203247]
[295.98620605 284.93743896]
[310.63668823 288.19018555]
[324.99923706 292.54159546]
[338.99154663 297.96676636]
[352.53347778 304.43466187]
[365.54748535 311.90817261]
[377.95898438 320.34451294]
[389.69689941 329.69537354]
[400.69403076 339.90716553]
[410.88732910 350.92144775]
[420.21841431 362.67504883]
[428.63388062 375.10073853]
[436.08551025 388.12725830]
[442.53060913 401.68005371]
[447.93225098 415.68148804]
[452.25952148 430.05130005]
[455.48760986 444.70724487]
[457.59805298 459.56536865]
[458.57873535 474.54052734]
[458.42404175 489.54699707]
[457.13485718 504.49874878]
[454.71859741 519.31018066]
[451.18905640 533.89648438]
[446.56649780 548.17407227]
[440.87734985 562.06115723]
[434.15426636 575.47821045]
[426.43569946 588.34838867]
[417.76586914 600.59790039]
[408.19442749 612.15667725]
[397.77624512 622.95849609]
[386.57098389 632.94140625]
[374.64279175 642.04833984]
[362.05999756 650.22705078]
[348.89471436 657.43066406]
[335.22232056 663.61804199]
[321.12115479 668.75360107]
[306.67196655 672.80804443]
[291.95751953 675.75805664]
[277.06210327 677.58679199]
[262.07107544 678.28375244]
[247.07023621 677.84497070]
[232.14555359 676.27294922]
[217.38250732 673.57666016]
[202.86566162 669.77160645]
[188.67816162 664.87957764]
[174.90127563 658.92852783]
[161.61392212 651.95257568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 150]
[34 149]
[35 148]
[36 147]
[38 145]
[39 144]
[40 142]
[41 141]
[42 140]
[43 134]
[44 133]
[45 132]
[46 131]
[49 128]
[50 127]
[51 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[88 119]
[89 118]
[90 117]
[91 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
