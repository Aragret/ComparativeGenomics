%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[25.81361008 770.45043945]
[11.52824974 775.03869629]
[-2.99574900 778.80389404]
[-17.71101379 781.73382568]
[-32.56954575 783.81890869]
[-47.52287674 785.05230713]
[-62.52223587 785.42999268]
[-77.51869202 784.95080566]
[-92.46334076 783.61627197]
[-107.30742645 781.43072510]
[-122.00253296 778.40136719]
[-136.50071716 774.53796387]
[-150.75471497 769.85314941]
[-164.71800232 764.36224365]
[-178.34506226 758.08319092]
[-191.59141541 751.03637695]
[-204.41387939 743.24487305]
[-216.77062988 734.73400879]
[-228.62133789 725.53161621]
[-239.92736816 715.66772461]
[-250.65184021 705.17443848]
[-260.75976562 694.08599854]
[-270.21820068 682.43859863]
[-278.99624634 670.27026367]
[-287.06530762 657.62060547]
[-294.39904785 644.53088379]
[-300.97357178 631.04388428]
[-306.76739502 617.20355225]
[-311.76162720 603.05505371]
[-315.94000244 588.64447021]
[-319.28887939 574.01885986]
[-321.79733276 559.22589111]
[-323.45718384 544.31390381]
[-324.26303101 529.33142090]
[-324.21221924 514.32739258]
[-323.30493164 499.35073853]
[-321.54409790 484.45031738]
[-318.93551636 469.67471313]
[-315.48764038 455.07211304]
[-311.21176147 440.69018555]
[-306.12179565 426.57580566]
[-300.23434448 412.77502441]
[-293.56863403 399.33285522]
[-286.14639282 386.29315186]
[-277.99185181 373.69845581]
[-269.13156128 361.58981323]
[-259.59448242 350.00674438]
[-249.41166687 338.98706055]
[-238.61636353 328.56665039]
[-227.24377441 318.77951050]
[-215.33100891 309.65762329]
[-202.91690063 301.23065186]
[-190.04194641 293.52618408]
[-176.74816895 286.56924438]
[-163.07888794 280.38262939]
[-149.07873535 274.98645020]
[-134.79333496 270.39831543]
[-120.26930237 266.63320923]
[-105.55401611 263.70339966]
[-90.69547272 261.61846924]
[-75.74212646 260.38516235]
[-60.74276733 260.00756836]
[-45.74631119 260.48687744]
[-30.80167580 261.82153320]
[-15.95760822 264.00720215]
[-1.26252687 267.03671265]
[13.23563576 270.90023804]
[27.48958969 275.58511353]
[41.45283890 281.07611084]
[47.73020172 267.45278931]
[54.00756073 253.82948303]
[60.28492355 240.20617676]
[66.56228638 226.58285522]
[70.96327972 212.24301147]
[73.40901184 197.44374084]
[75.85473633 182.64447021]
[78.30046082 167.84519958]
[80.74619293 153.04592896]
[79.22525024 150.69116211]
[78.54541016 147.59207153]
[78.99486542 144.06596375]
[80.74169922 140.52857971]
[83.80327606 137.44949341]
[87.12553406 122.82204437]
[90.44779205 108.19458008]
[93.44256592 93.49657440]
[96.10836029 78.73535919]
[98.77416229 63.97414017]
[101.43995667 49.21292496]
[90.05187988 34.07271194]
[93.29120636 15.73096752]
[108.64085388 5.75579262]
[110.86596680 -9.07825089]
[113.09108734 -23.91229439]
[107.48651886 -38.70754623]
[117.02619934 -50.14624786]
[119.25131226 -64.98029327]
[121.47643280 -79.81433105]
[107.53314209 -85.54566193]
[95.36702728 -94.44786072]
[85.68541718 -106.00337219]
[79.05118561 -119.54037476]
[75.85002899 -134.27183533]
[76.26806641 -149.34129333]
[80.28099823 -163.87263489]
[87.65550232 -177.02102661]
[97.96285248 -188.02201843]
[110.60378265 -196.23605347]
[124.84336853 -201.18556213]
[139.85374451 -202.58279419]
[154.76220703 -200.34651184]
[168.70202637 -194.60673523]
[180.86273193 -185.69715881]
[190.53733826 -174.13578796]
[197.16336060 -160.59477234]
[200.35559082 -145.86135864]
[199.92840576 -130.79216003]
[195.90667725 -116.26325226]
[188.52420044 -103.11933899]
[178.21017456 -92.12459564]
[165.56427002 -83.91822815]
[151.32168579 -78.97734833]
[136.31047058 -77.58921814]
[134.08535767 -62.75517273]
[131.86024475 -47.92112732]
[137.62396240 -34.18690872]
[127.92512512 -21.68717766]
[125.70001221 -6.85313368]
[123.47489166 7.98090982]
[132.08370972 15.46786785]
[136.05038452 26.29289246]
[134.28086853 37.80648041]
[127.10041046 47.13074493]
[116.20117188 51.87871933]
[113.53537750 66.63993835]
[110.86958313 81.40115356]
[108.20378113 96.16236877]
[109.93149567 99.61018372]
[110.13108063 103.80279541]
[108.50396729 108.04066467]
[105.07525635 111.51683807]
[101.75299072 126.14430237]
[98.43073273 140.77175903]
[95.54546356 155.49165344]
[93.09973145 170.29092407]
[90.65400696 185.09019470]
[88.20828247 199.88946533]
[85.76255035 214.68873596]
[94.83612061 202.74426270]
[107.12067413 194.13673401]
[121.44533539 189.68653870]
[136.44476318 189.81787109]
[150.68930054 194.51818848]
[162.82125854 203.33949280]
[171.68429565 215.44100952]
[176.43365479 229.66928101]
[176.61662292 244.66816711]
[172.21578979 259.00805664]
[163.65061951 271.32217407]
[151.73745728 280.43682861]
[137.61183167 285.48324585]
[122.62007141 285.98046875]
[108.19110870 281.88104248]
[95.70022583 273.57574463]
[86.33796692 261.85620117]
[80.99668884 247.83940125]
[80.18560028 232.86021423]
[73.90824127 246.48353577]
[67.63087463 260.10684204]
[61.35351562 273.73016357]
[55.07615662 287.35348511]
[68.32257080 294.40017700]
[81.14509583 302.19158936]
[93.50190735 310.70233154]
[105.35269165 319.90463257]
[116.65880585 329.76846313]
[127.38335419 340.26168823]
[137.49137878 351.35003662]
[146.94989014 362.99734497]
[155.72802734 375.16564941]
[163.79719543 387.81524658]
[171.13104248 400.90484619]
[177.70565796 414.39181519]
[183.49958801 428.23208618]
[188.49394226 442.38058472]
[192.67243958 456.79113770]
[196.02142334 471.41671753]
[198.52999878 486.20962524]
[200.18997192 501.12164307]
[200.99591064 516.10406494]
[200.94522095 531.10809326]
[200.03804016 546.08477783]
[198.27734375 560.98522949]
[195.66885376 575.76086426]
[192.22109985 590.36346436]
[187.94532776 604.74548340]
[182.85546875 618.85986328]
[176.96813965 632.66070557]
[170.30253601 646.10290527]
[162.88040161 659.14270020]
[154.72595215 671.73742676]
[145.86576843 683.84613037]
[136.32876587 695.42926025]
[126.14604187 706.44903564]
[115.35082245 716.86956787]
[103.97831726 726.65673828]
[92.06561279 735.77874756]
[79.65157318 744.20581055]
[66.77668762 751.91040039]
[53.48295593 758.86743164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[83 143]
[84 142]
[85 141]
[86 137]
[87 136]
[88 135]
[89 134]
[92 129]
[93 128]
[94 127]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
