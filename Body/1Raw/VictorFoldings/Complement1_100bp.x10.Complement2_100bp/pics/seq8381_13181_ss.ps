%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[114.00955963 197.02375793]
[118.92076111 182.83973694]
[125.08365631 169.15306091]
[132.44860840 156.07394409]
[140.95632935 143.70765686]
[129.41003418 134.13253784]
[117.86372375 124.55741882]
[106.31742859 114.98229218]
[89.71420288 112.59291077]
[84.05805969 96.80100250]
[72.37047577 87.39884949]
[60.68289566 77.99670410]
[45.08037186 75.37530518]
[40.01345444 61.36903000]
[28.32587242 51.96688080]
[18.33236313 63.15750122]
[7.77602291 73.81883240]
[-3.31515265 83.92259979]
[-14.91175270 93.44200897]
[-26.98302460 102.35181427]
[-39.49695587 110.62838745]
[-52.42036819 118.24979401]
[-65.71897888 125.19580841]
[-79.35753632 131.44801331]
[-93.29986572 136.98983765]
[-107.50899506 141.80656433]
[-121.94724274 145.88545227]
[-136.57632446 149.21565247]
[-151.35743713 151.78836060]
[-166.25140381 153.59674072]
[-181.21870422 154.63598633]
[-196.21966553 154.90336609]
[-211.21449280 154.39816284]
[-226.16343689 153.12170410]
[-241.02685547 151.07739258]
[-255.76531982 148.27062988]
[-270.33975220 144.70887756]
[-284.71151733 140.40156555]
[-298.84246826 135.36012268]
[-312.69515991 129.59793091]
[-326.23287964 123.13024902]
[-339.41967773 115.97424316]
[-352.22061157 108.14887238]
[-364.60174561 99.67491150]
[-376.53021240 90.57481384]
[-387.97439575 80.87271881]
[-398.90396118 70.59436035]
[-409.28994751 59.76698303]
[-419.10473633 48.41930389]
[-428.32238770 36.58141708]
[-436.91836548 24.28471375]
[-444.86996460 11.56180096]
[-452.15606689 -1.55357969]
[-458.75732422 -15.02665043]
[-464.65625000 -28.82168198]
[-469.83718872 -42.90209198]
[-474.28643799 -57.23054504]
[-477.99215698 -71.76903534]
[-480.94454956 -86.47901917]
[-483.13577271 -101.32148743]
[-484.56002808 -116.25707245]
[-485.21353149 -131.24618530]
[-485.09451294 -146.24905396]
[-484.20336914 -161.22590637]
[-482.54238892 -176.13702393]
[-480.11599731 -190.94285583]
[-476.93063354 -205.60415649]
[-472.99475098 -220.08204651]
[-468.31878662 -234.33811951]
[-462.91513062 -248.33457947]
[-456.79812622 -262.03430176]
[-449.98400879 -275.40097046]
[-442.49078369 -288.39910889]
[-434.33837891 -300.99429321]
[-425.54840088 -313.15310669]
[-416.14416504 -324.84329224]
[-406.15057373 -336.03384399]
[-395.59417725 -346.69512939]
[-384.50296021 -356.79882812]
[-372.90631104 -366.31817627]
[-360.83496094 -375.22790527]
[-348.32098389 -383.50442505]
[-335.39755249 -391.12573242]
[-322.09887695 -398.07168579]
[-308.46029663 -404.32379150]
[-294.51794434 -409.86553955]
[-280.30877686 -414.68218994]
[-265.87051392 -418.76098633]
[-251.24140930 -422.09112549]
[-236.46028137 -424.66372681]
[-221.56629944 -426.47201538]
[-206.59899902 -427.51119995]
[-191.59803772 -427.77850342]
[-176.60321045 -427.27319336]
[-161.65426636 -425.99664307]
[-146.79086304 -423.95223999]
[-132.05241394 -421.14541626]
[-117.47800446 -417.58358765]
[-103.10626984 -413.27618408]
[-88.97534180 -408.23464966]
[-75.12267303 -402.47238159]
[-61.58500671 -396.00463867]
[-48.39824295 -388.84854126]
[-35.59735489 -381.02310181]
[-23.21627998 -372.54907227]
[-11.28785706 -363.44891357]
[0.15628400 -353.74673462]
[11.08579540 -343.46832275]
[21.47169304 -332.64086914]
[31.28643608 -321.29315186]
[40.50399780 -309.45520020]
[49.09993362 -297.15844727]
[57.05144882 -284.43548584]
[64.33746338 -271.32006836]
[70.93864441 -257.84695435]
[76.83749390 -244.05189514]
[82.01836395 -229.97146606]
[86.46752930 -215.64299011]
[90.17317200 -201.10446167]
[93.12548065 -186.39447021]
[95.31661987 -171.55198669]
[96.74078369 -156.61639404]
[97.39418793 -141.62728882]
[97.27510071 -126.62442017]
[96.38385010 -111.64756775]
[94.72277832 -96.73646545]
[92.29631042 -81.93063354]
[89.11087036 -67.26935577]
[85.17491150 -52.79149246]
[80.49886322 -38.53544617]
[75.09513855 -24.53901863]
[68.97805023 -10.83932877]
[62.16382980 2.52729678]
[54.67054749 15.52541065]
[46.51807022 28.12054443]
[37.72802353 40.27930069]
[49.41560364 49.68144989]
[64.18215942 51.63034439]
[70.08504486 66.30912018]
[81.77262878 75.71127319]
[93.46021271 85.11341858]
[105.09350586 84.55864716]
[114.11354065 91.92615509]
[115.89254761 103.43599701]
[127.43885040 113.01111603]
[138.98515320 122.58623505]
[150.53144836 132.16134644]
[161.10990906 121.51229095]
[172.60035706 111.85434723]
[184.91027832 103.26528931]
[197.94058228 95.81427765]
[211.58633423 89.56130219]
[225.73767090 84.55670929]
[240.28063965 80.84078217]
[255.09817505 78.44345856]
[270.07092285 77.38402557]
[285.07839966 77.67102814]
[299.99972534 79.30213928]
[314.71475220 82.26423645]
[329.10501099 86.53346252]
[343.05465698 92.07545471]
[356.45135498 98.84558105]
[369.18725586 106.78932953]
[381.15982056 115.84275818]
[392.27261353 125.93295288]
[402.43615723 136.97868347]
[411.56869507 148.89100647]
[419.59661865 161.57400513]
[426.45529175 174.92558289]
[432.08953857 188.83822632]
[436.45397949 203.19990540]
[439.51345825 217.89500427]
[441.24334717 232.80519104]
[441.62973022 247.81042480]
[440.66949463 262.78988647]
[438.37033081 277.62295532]
[434.75082397 292.19021606]
[429.84002686 306.37438965]
[423.67758179 320.06124878]
[416.31301880 333.14059448]
[407.80566406 345.50714111]
[398.22402954 357.06130981]
[387.64526367 367.71005249]
[376.15451050 377.36764526]
[363.84432983 385.95632935]
[350.81378174 393.40692139]
[337.16784668 399.65948486]
[323.01635742 404.66366577]
[308.47326660 408.37911987]
[293.65567017 410.77600098]
[278.68286133 411.83499146]
[263.67541504 411.54751587]
[248.75415039 409.91595459]
[234.03921509 406.95339966]
[219.64907837 402.68374634]
[205.69960022 397.14132690]
[192.30310059 390.37078857]
[179.56744385 382.42663574]
[167.59518433 373.37286377]
[156.48269653 363.28231812]
[146.31945801 352.23629761]
[137.18731689 340.32366943]
[129.15977478 327.64044189]
[122.30149078 314.28863525]
[116.66766357 300.37582397]
[112.30367279 286.01400757]
[109.24463654 271.31884766]
[107.51519775 256.40859985]
[107.12928009 241.40335083]
[108.08998871 226.42391968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 147]
[6 146]
[7 145]
[8 144]
[10 141]
[11 140]
[12 139]
[14 137]
[15 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
