%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[302.28747559 662.09716797]
[297.46148682 647.89471436]
[292.63549805 633.69226074]
[287.80947876 619.48980713]
[282.98348999 605.28735352]
[278.15750122 591.08489990]
[273.33151245 576.88244629]
[258.08447266 578.96594238]
[242.71873474 578.04370117]
[227.82135010 574.14916992]
[213.96183777 567.42938232]
[201.67036438 558.13928223]
[191.41752625 546.63244629]
[183.59631348 533.34710693]
[178.50704956 518.78985596]
[176.34580994 503.51611328]
[177.19694519 488.10906982]
[181.02975464 473.15731812]
[187.69958496 459.23248291]
[196.95327759 446.86718750]
[208.43882751 436.53485107]
[221.71871948 428.63146973]
[216.68180847 414.50244141]
[211.64489746 400.37341309]
[200.08311462 390.98330688]
[202.73712158 375.38629150]
[197.70021057 361.25726318]
[192.45349121 347.20480347]
[186.99813843 333.23199463]
[181.54278564 319.25918579]
[176.08741760 305.28640747]
[170.63206482 291.31359863]
[165.17671204 277.34078979]
[159.72134399 263.36801147]
[147.88511658 254.32627869]
[150.07357788 238.65716553]
[144.61820984 224.68435669]
[138.95542908 210.79434204]
[133.08647156 196.99015808]
[127.21750641 183.18598938]
[121.34854889 169.38180542]
[115.47958374 155.57762146]
[109.61062622 141.77345276]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.14735413 78.03419495]
[75.66785431 64.50584412]
[69.18836212 50.97750092]
[62.70886612 37.44915771]
[49.76946259 28.34517670]
[51.24990082 13.52432728]
[38.31049728 4.42034721]
[39.79093552 -10.40050220]
[33.31143951 -23.92884827]
[26.83194542 -37.45719147]
[26.65551186 -22.45823097]
[23.07098770 -7.89281988]
[16.26641083 5.47496700]
[6.59873343 16.94388199]
[-5.42489576 25.91229057]
[-19.17374229 31.90972519]
[-33.92656708 34.62157440]
[-48.90946960 33.90558243]
[-63.33647537 29.79930115]
[-76.45076752 22.51814461]
[-87.56440735 12.44406700]
[-96.09439087 0.10553174]
[-101.59324646 -13.85020447]
[-103.77252197 -28.69105339]
[-102.51789093 -43.63849258]
[-97.89517212 -57.90840530]
[-90.14686584 -70.75222778]
[-79.67943573 -81.49619293]
[-67.04196930 -89.57669830]
[-52.89741898 -94.56985474]
[-37.98776627 -96.21372986]
[-23.09514999 -94.42209625]
[-9.00080490 -89.28892517]
[3.55590963 -81.08350372]
[13.91629219 -70.23627472]
[21.53753090 -57.31473160]
[20.31055641 -72.26446533]
[18.97232246 -87.20465088]
[17.63408661 -102.14483643]
[16.29585266 -117.08502197]
[14.95761871 -132.02520752]
[6.01998186 -145.08006287]
[12.59095669 -158.44686890]
[11.25272274 -173.38705444]
[-3.61375093 -175.96588135]
[-17.30580330 -182.30545044]
[-28.88988686 -191.97351074]
[-37.57617950 -204.31088257]
[-42.77243805 -218.47637939]
[-44.12436676 -233.50418091]
[-41.53979492 -248.36965942]
[-35.19494247 -262.05926514]
[-25.52240944 -273.63961792]
[-13.18168449 -282.32113647]
[0.98581833 -287.51193237]
[16.01413727 -288.85806274]
[30.87861443 -286.26773071]
[44.56576538 -279.91760254]
[56.14237976 -270.24060059]
[64.81914520 -257.89651489]
[70.00446320 -243.72702026]
[71.34478760 -228.69818115]
[68.74873352 -213.83470154]
[62.39331436 -200.15000916]
[52.71183777 -188.57713318]
[40.36441422 -179.90513611]
[26.19290733 -174.72528076]
[27.53114128 -159.78509521]
[36.37305832 -147.79887390]
[29.89780426 -133.36343384]
[31.23603821 -118.42325592]
[32.57427216 -103.48307037]
[33.91250610 -88.54288483]
[35.25074005 -73.60269928]
[38.97845078 -67.22100830]
[36.49598312 -58.43038177]
[40.36029053 -43.93668747]
[46.83978653 -30.40834236]
[53.31928253 -16.87999725]
[65.79522705 -8.74365616]
[64.77824402 7.04483128]
[77.25418854 15.18117332]
[76.23721313 30.96965981]
[82.71670532 44.49800491]
[89.19620514 58.02635193]
[95.67569733 71.55469513]
[98.86189270 73.06483459]
[101.47493744 76.19326019]
[102.76219177 80.65378571]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[123.41480255 135.90449524]
[129.28376770 149.70866394]
[135.15272522 163.51284790]
[141.02168274 177.31701660]
[146.89064026 191.12120056]
[152.75959778 204.92536926]
[157.80364990 209.19961548]
[159.65414429 214.57295227]
[158.59101868 219.22900391]
[164.04637146 233.20179749]
[176.27281189 243.24295044]
[173.69415283 257.91265869]
[179.14950562 271.88543701]
[184.60485840 285.85824585]
[190.06022644 299.83102417]
[195.51557922 313.80383301]
[200.97093201 327.77664185]
[206.42628479 341.74942017]
[211.34083557 346.17196655]
[213.03051758 351.59802246]
[211.82923889 356.22033691]
[216.86614990 370.34936523]
[228.78820801 380.75009155]
[225.77392578 395.33651733]
[230.81083679 409.46554565]
[235.84776306 423.59457397]
[250.31355286 421.35998535]
[264.93927002 421.82989502]
[279.22372437 424.98669434]
[292.67776489 430.72073364]
[304.84097290 438.83407593]
[315.29736328 449.04745483]
[323.68969727 461.00982666]
[329.73159790 474.31033325]
[333.21740723 488.49261475]
[334.02920532 503.07028198]
[332.14062500 517.54370117]
[327.61795044 531.41717529]
[320.61758423 544.21563721]
[311.38070679 555.50134277]
[300.22509766 564.88842773]
[287.53396606 572.05645752]
[292.35995483 586.25891113]
[297.18594360 600.46136475]
[302.01196289 614.66381836]
[306.83795166 628.86627197]
[311.66394043 643.06872559]
[316.48992920 657.27117920]
[331.52688599 656.11315918]
[346.37927246 658.73187256]
[360.11343384 664.96270752]
[371.86608887 674.41394043]
[380.89840698 686.49157715]
[386.64260864 700.43627930]
[388.73760986 715.37152100]
[387.05175781 730.35845947]
[381.69097900 744.45501709]
[372.99227905 756.77508545]
[361.50247192 766.54412842]
[347.94381714 773.14819336]
[333.16857910 776.17199707]
[318.10559082 775.42559814]
[303.70172119 770.95581055]
[290.86236572 763.04364014]
[280.39468384 752.18646240]
[272.95660400 739.06677246]
[269.01577759 724.50927734]
[268.81985474 709.42907715]
[272.38119507 694.77416992]
[279.47592163 681.46563721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[22 166]
[23 165]
[24 164]
[26 162]
[27 161]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[36 150]
[37 149]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[47 137]
[48 133]
[49 132]
[50 131]
[51 130]
[53 128]
[55 126]
[56 125]
[57 124]
[83 123]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
