%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[120.32569122 494.88113403]
[118.07976532 480.03216553]
[117.60587311 465.02178955]
[118.91067505 450.06069946]
[121.97586060 435.35897827]
[126.75838470 421.12295532]
[133.19111633 407.55255127]
[141.18374634 394.83819580]
[150.62406921 383.15844727]
[161.37956238 372.67724609]
[173.29922485 363.54171753]
[186.21574402 355.88012695]
[180.14192200 342.16485596]
[174.06808472 328.44961548]
[167.99424744 314.73434448]
[161.92041016 301.01907349]
[149.69224548 292.51489258]
[151.17886353 276.76367188]
[145.10502625 263.04840088]
[139.03118896 249.33314514]
[134.57386780 263.65557861]
[122.61858368 272.71490479]
[107.62439728 273.13223267]
[95.18374634 264.75186157]
[89.93669128 250.69952393]
[93.84025574 236.21635437]
[105.43850708 226.70423889]
[120.40558624 225.71093750]
[133.15989685 233.60783386]
[122.02893066 223.71081543]
[125.37674713 208.24786377]
[120.97574615 193.90802002]
[116.57474518 179.56817627]
[105.44378662 169.67115784]
[108.79160309 154.20820618]
[104.39060211 139.86836243]
[99.98960114 125.52851105]
[95.58860779 111.18865967]
[90.97459412 96.91593170]
[86.14859772 82.71347046]
[81.32260132 68.51101685]
[67.19640350 56.69865417]
[71.28362274 39.63226700]
[66.24670410 25.50323677]
[61.20978546 11.37420750]
[49.28773117 0.97348017]
[52.30202103 -13.61292839]
[47.26510239 -27.74195862]
[42.22818756 -41.87098694]
[34.83729172 -28.81822395]
[20.41885567 -24.68195343]
[7.23241568 -31.83162308]
[2.83176112 -46.17157745]
[9.73778820 -59.48723602]
[23.99440956 -64.15078735]
[37.43415833 -57.49145126]
[33.67786026 -72.01351166]
[29.92155838 -86.53556824]
[26.76966476 -89.52212524]
[24.91828537 -93.00593567]
[24.36404419 -96.51708984]
[24.95130730 -99.63506317]
[26.40146637 -102.03405762]
[23.51619339 -116.75395203]
[20.63092041 -131.47384644]
[17.74564743 -146.19372559]
[14.86037540 -160.91362000]
[10.13871288 -168.73306274]
[12.04343891 -175.87406921]
[9.37764359 -190.63528442]
[6.71184778 -205.39649963]
[4.04605246 -220.15771484]
[-10.93672276 -219.15948486]
[-25.93705368 -219.84510803]
[-40.76629639 -222.20594788]
[-55.23795700 -226.21232605]
[-69.17003632 -231.81385803]
[-82.38732910 -238.94009399]
[-94.72360992 -247.50141907]
[-106.02373505 -257.39013672]
[-116.14559937 -268.48193359]
[-124.96190643 -280.63729858]
[-132.36178589 -293.70336914]
[-138.25216675 -307.51580811]
[-142.55897522 -321.90090942]
[-145.22805786 -336.67776489]
[-146.22584534 -351.66058350]
[-145.53976440 -366.66088867]
[-143.17848206 -381.49008179]
[-139.17167664 -395.96160889]
[-133.56971741 -409.89352417]
[-126.44309235 -423.11059570]
[-117.88140869 -435.44662476]
[-107.99233246 -446.74645996]
[-96.90023804 -456.86798096]
[-84.74461365 -465.68392944]
[-71.67833710 -473.08340454]
[-57.86572266 -478.97338867]
[-43.48048401 -483.27975464]
[-28.70352936 -485.94839478]
[-13.72069454 -486.94573975]
[1.27959585 -486.25921631]
[16.10869789 -483.89749146]
[30.58011627 -479.89025879]
[44.51186371 -474.28787231]
[57.72872925 -467.16085815]
[70.06449890 -458.59881592]
[81.36403656 -448.70938110]
[91.48523712 -437.61697388]
[100.30081177 -425.46109009]
[107.69990540 -412.39459229]
[113.58946228 -398.58181763]
[117.89541626 -384.19644165]
[120.56361389 -369.41940308]
[121.56049347 -354.43655396]
[120.87352753 -339.43627930]
[118.51136017 -324.60723877]
[114.50367737 -310.13595581]
[108.90090179 -296.20437622]
[101.77348328 -282.98773193]
[93.21105194 -270.65219116]
[83.32130432 -259.35296631]
[72.22859955 -249.23210144]
[60.07245255 -240.41688538]
[47.00572968 -233.01817322]
[33.19276428 -227.12902832]
[18.80727005 -222.82351685]
[21.47306442 -208.06228638]
[24.13886070 -193.30107117]
[26.80465698 -178.53985596]
[29.58026695 -163.79888916]
[32.46553802 -149.07901001]
[35.35081100 -134.35911560]
[38.23608398 -119.63922119]
[41.12135696 -104.91932678]
[44.44361877 -90.29187012]
[48.19991684 -75.76981354]
[51.95621872 -61.24774933]
[56.35721588 -46.90790558]
[61.39413452 -32.77887344]
[66.43104553 -18.64984512]
[77.99282837 -9.25972080]
[75.33881378 6.33729124]
[80.37573242 20.46632004]
[85.41265106 34.59534836]
[96.20371246 40.06156921]
[100.51567841 51.79147339]
[95.52505493 63.68502045]
[100.35105133 77.88747406]
[105.17705536 92.08993530]
[109.23516083 95.41344452]
[111.14229584 100.77405548]
[109.92845154 106.78766632]
[114.32945251 121.12751007]
[118.73044586 135.46736145]
[123.13144684 149.80720520]
[134.57719421 160.72990417]
[130.91459656 175.16717529]
[135.31559753 189.50701904]
[139.71659851 203.84686279]
[151.16233826 214.76956177]
[147.49974060 229.20683289]
[152.74645996 243.25930786]
[158.82029724 256.97457886]
[164.89413452 270.68984985]
[177.55673218 280.17504883]
[175.63568115 294.94525146]
[181.70951843 308.66049194]
[187.78334045 322.37576294]
[193.85717773 336.09103394]
[199.93101501 349.80630493]
[214.28517151 345.39102173]
[229.06079102 342.70446777]
[244.05044556 341.78439331]
[259.04370117 342.64367676]
[273.83010864 345.27026367]
[288.20202637 349.62731934]
[301.95776367 355.65362549]
[314.90417480 363.26458740]
[326.85949707 372.35339355]
[337.65594482 382.79241943]
[347.14190674 394.43511963]
[355.18426514 407.11807251]
[361.67004395 420.66320801]
[366.50827026 434.88037109]
[369.63098145 449.57000732]
[370.99432373 464.52584839]
[370.57919312 479.53799438]
[368.39141846 494.39562988]
[364.46166992 508.89025879]
[358.84515381 522.81829834]
[351.62072754 535.98431396]
[342.88977051 548.20343018]
[332.77487183 559.30413818]
[321.41806030 569.13055420]
[308.97869873 577.54479980]
[295.63146973 584.42864990]
[281.56372070 589.68554688]
[266.97296143 593.24169922]
[252.06401062 595.04711914]
[237.04617310 595.07647705]
[222.13026428 593.32946777]
[207.52569580 589.83044434]
[193.43748474 584.62866211]
[180.06341553 577.79705811]
[167.59123230 569.43164062]
[156.19601440 559.64971924]
[146.03775024 548.58874512]
[137.25903320 536.40386963]
[129.98310852 523.26623535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[18 165]
[19 164]
[20 163]
[29 162]
[31 160]
[32 159]
[33 158]
[35 156]
[36 155]
[37 154]
[38 153]
[39 150]
[40 149]
[41 148]
[43 145]
[44 144]
[45 143]
[47 141]
[48 140]
[49 139]
[56 138]
[57 137]
[58 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[69 130]
[70 129]
[71 128]
[72 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
