%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[83.58917999 640.81927490]
[68.73011780 643.10058594]
[53.69752884 642.96868896]
[38.88079071 640.42694092]
[24.66370010 635.54119873]
[11.41450977 628.43798828]
[-0.52359474 619.30139160]
[-10.84138680 608.36798096]
[-19.27161217 595.92102051]
[-25.59590530 582.28283691]
[-29.65045357 567.80676270]
[-31.33023453 552.86773682]
[-30.59173584 537.85272217]
[-27.45408821 523.15063477]
[-21.99856567 509.14230347]
[-14.36647511 496.19055176]
[-4.75550985 484.63092041]
[6.58538437 474.76275635]
[19.36245155 466.84173584]
[33.24473572 461.07299805]
[47.87264633 457.60595703]
[62.86729431 456.53045654]
[64.20552826 441.59027100]
[57.63455582 428.22344971]
[66.57218933 415.16860962]
[58.34143829 399.66952515]
[69.05948639 384.69604492]
[70.17513275 369.73757935]
[71.29078674 354.77914429]
[72.40643311 339.82067871]
[73.52207947 324.86221313]
[74.63772583 309.90377808]
[75.75337982 294.94531250]
[76.86902618 279.98687744]
[77.98467255 265.02841187]
[68.29297638 256.53720093]
[65.21555328 243.82455444]
[70.09369659 231.47894287]
[81.35490417 224.08978271]
[74.78392792 210.72297668]
[83.72156525 197.66812134]
[85.05979919 182.72793579]
[86.39803314 167.78775024]
[87.73626709 152.84756470]
[89.07450104 137.90737915]
[82.50352478 124.54057312]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[81.54190063 65.14263153]
[71.89065552 53.48516464]
[67.44985962 39.05973816]
[68.86645508 24.07371521]
[75.89357758 10.80780411]
[87.43288422 1.26894391]
[101.70611572 -3.11329293]
[103.04434967 -18.05347824]
[104.38258362 -32.99366379]
[97.90733337 -47.42909241]
[106.74925232 -59.41532516]
[108.08748627 -74.35550690]
[109.42572021 -89.29569244]
[102.95046234 -103.73112488]
[111.79238129 -115.71735382]
[113.13061523 -130.65754700]
[106.65535736 -145.09297180]
[115.49727631 -157.07920837]
[116.83551025 -172.01939392]
[118.17374420 -186.95957947]
[119.51197815 -201.89976501]
[111.24268341 -189.38500977]
[99.39821625 -180.18128967]
[85.22853851 -175.25988770]
[70.22901154 -175.14016724]
[55.98258209 -179.83476257]
[43.99270248 -188.84823608]
[35.52469254 -201.22938538]
[31.47220230 -215.67158508]
[32.26290131 -230.65072632]
[37.81334686 -244.58602905]
[47.53778458 -256.00686646]
[60.40997314 -263.70794678]
[75.07147980 -266.87658691]
[89.97503662 -265.17837524]
[103.54784393 -258.79254150]
[114.35752106 -248.39297485]
[121.26330566 -235.07717896]
[123.53640747 -220.25022888]
[128.57331848 -234.37925720]
[133.61024475 -248.50828552]
[138.64715576 -262.63732910]
[138.58113098 -271.77151489]
[143.86567688 -276.93826294]
[149.11239624 -290.99072266]
[154.35911560 -305.04321289]
[159.60583496 -319.09567261]
[164.85255432 -333.14813232]
[151.76525879 -340.54202271]
[139.99581909 -349.89224243]
[129.83409119 -360.96859741]
[121.53028107 -373.49829102]
[115.28889465 -387.17279053]
[111.26363373 -401.65533447]
[109.55361938 -416.58926392]
[110.20096588 -431.60681152]
[113.18973541 -446.33819580]
[118.44631195 -460.42065430]
[125.84126282 -473.50732422]
[135.19247437 -485.27597046]
[146.26965332 -495.43679810]
[158.80004883 -503.73959351]
[172.47505188 -509.97982788]
[186.95791626 -514.00390625]
[201.89198303 -515.71270752]
[216.90950012 -515.06408691]
[231.64064026 -512.07409668]
[245.72264099 -506.81637573]
[258.80871582 -499.42034912]
[270.57659912 -490.06817627]
[280.73651123 -478.99014282]
[289.03823853 -466.45907593]
[295.27737427 -452.78356934]
[299.30023193 -438.30035400]
[301.00778198 -423.36614990]
[300.35797119 -408.34866333]
[297.36676025 -393.61779785]
[292.10787964 -379.53622437]
[284.71075439 -366.45077515]
[275.35760498 -354.68365479]
[264.27874756 -344.52465820]
[251.74699402 -336.22393799]
[238.07095337 -329.98593140]
[223.58743286 -325.96426392]
[208.65307617 -324.25796509]
[193.63566589 -324.90902710]
[178.90501404 -327.90142822]
[173.65829468 -313.84896851]
[168.41157532 -299.79647827]
[163.16487122 -285.74401855]
[157.91815186 -271.69152832]
[152.77618408 -257.60040283]
[147.73927307 -243.47137451]
[142.70234680 -229.34234619]
[137.66543579 -215.21331787]
[134.45216370 -200.56152344]
[133.11392212 -185.62133789]
[131.77569580 -170.68115234]
[130.43745422 -155.74096680]
[137.00843811 -142.37416077]
[128.07080078 -129.31930542]
[126.73256683 -114.37911987]
[133.30354309 -101.01231384]
[124.36590576 -87.95745850]
[123.02767181 -73.01727295]
[121.68943787 -58.07709122]
[128.26040649 -44.71028137]
[119.32276917 -31.65542984]
[117.98453522 -16.71524429]
[116.64630127 -1.77505875]
[129.91351318 5.07405329]
[139.57388306 16.51182747]
[144.13153076 30.81542015]
[142.86225891 45.81463623]
[135.92848206 59.22121429]
[124.35910797 68.97789001]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[112.85660553 127.25938416]
[104.01468658 139.24562073]
[102.67645264 154.18580627]
[101.33821869 169.12599182]
[99.99998474 184.06617737]
[98.66175079 199.00634766]
[105.13700867 213.44178772]
[96.29508972 225.42802429]
[107.75583649 238.64431763]
[106.14395142 255.72402954]
[92.94313049 266.14407349]
[91.82747650 281.10250854]
[90.71183014 296.06097412]
[89.59618378 311.01940918]
[88.48053741 325.97787476]
[87.36488342 340.93634033]
[86.24923706 355.89477539]
[85.13359070 370.85324097]
[84.01793671 385.81167603]
[91.82793427 396.07650757]
[90.59075165 408.51248169]
[81.51237488 416.50683594]
[87.98763275 430.94226074]
[79.14571381 442.92849731]
[77.80747986 457.86868286]
[92.37229156 461.59191895]
[106.15118408 467.60342407]
[118.78725433 475.74749756]
[129.95320129 485.81317139]
[139.35980225 497.53973389]
[146.76339722 510.62341309]
[151.97221375 524.72534180]
[154.85133362 539.48022461]
[155.32618713 554.50592041]
[153.38446045 569.41314697]
[149.07646179 583.81585693]
[142.51376343 597.34088135]
[133.86637878 609.63800049]
[123.35828400 620.38861084]
[111.26165771 629.31433105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 195]
[23 194]
[25 192]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[39 178]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[47 170]
[49 168]
[50 167]
[57 160]
[58 159]
[59 158]
[61 156]
[62 155]
[63 154]
[65 152]
[66 151]
[68 149]
[69 148]
[70 147]
[71 146]
[89 145]
[90 144]
[91 143]
[92 142]
[94 141]
[95 140]
[96 139]
[97 138]
[98 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
