%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[32.26381683 848.66473389]
[17.73582458 852.41796875]
[3.00082922 855.25158691]
[-11.88301468 857.15441895]
[-26.85696602 858.11889648]
[-41.86193085 858.14123535]
[-56.83869171 857.22137451]
[-71.72814178 855.36291504]
[-86.47151184 852.57324219]
[-101.01062775 848.86328125]
[-115.28810120 844.24774170]
[-129.24758911 838.74481201]
[-142.83399963 832.37622070]
[-155.99369812 825.16711426]
[-168.67477417 817.14587402]
[-180.82717896 808.34423828]
[-192.40292358 798.79693604]
[-203.35635376 788.54162598]
[-213.64422607 777.61871338]
[-223.22593689 766.07141113]
[-232.06369019 753.94525146]
[-240.12258911 741.28808594]
[-247.37083435 728.14990234]
[-253.77981567 714.58251953]
[-259.32424927 700.63946533]
[-263.98223877 686.37579346]
[-267.73541260 671.84777832]
[-270.56893921 657.11273193]
[-272.47167969 642.22888184]
[-273.43609619 627.25494385]
[-273.45837402 612.25000000]
[-272.53842163 597.27319336]
[-270.67990112 582.38378906]
[-267.89013672 567.64044189]
[-264.18011475 553.10131836]
[-259.56448364 538.82385254]
[-254.06149292 524.86444092]
[-247.69282532 511.27804565]
[-240.48362732 498.11837769]
[-232.46235657 485.43734741]
[-223.66065979 473.28500366]
[-214.11326599 461.70928955]
[-203.85787964 450.75592041]
[-192.93495178 440.46810913]
[-181.38760376 430.88644409]
[-169.26139832 422.04876709]
[-156.60418701 413.98992920]
[-143.46594238 406.74176025]
[-129.89851379 400.33285522]
[-115.95542908 394.78848267]
[-101.69171906 390.13058472]
[-87.16368866 386.37747192]
[-72.42866516 383.54400635]
[-57.54479980 381.64135742]
[-42.57083893 380.67703247]
[-27.56587410 380.65481567]
[-12.58912373 381.57482910]
[2.30030465 383.43344116]
[17.04364967 386.22329712]
[31.58272362 389.93338013]
[36.19673157 375.66064453]
[40.81074142 361.38790894]
[45.42475128 347.11520386]
[50.03876114 332.84246826]
[54.01085663 318.37792969]
[57.33311462 303.75045776]
[60.65537643 289.12301636]
[63.97763443 274.49554443]
[67.29989624 259.86810303]
[70.62215424 245.24063110]
[73.28794861 230.47941589]
[75.29196167 215.61389160]
[68.20967865 205.80737305]
[69.75759125 193.40625000]
[79.64710999 185.12614441]
[81.87223053 170.29209900]
[84.09734344 155.45805359]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[100.29291534 42.22106171]
[100.96269989 27.23602295]
[101.63248444 12.25098515]
[102.30226898 -2.73405385]
[102.97205353 -17.71909332]
[95.85868073 -31.85098839]
[104.15656281 -44.22007751]
[104.82634735 -59.20511627]
[105.49613190 -74.19015503]
[106.16592407 -89.17519379]
[98.05376434 -99.20294189]
[98.92012787 -111.67022705]
[107.75646210 -119.93132782]
[108.64927673 -134.90473938]
[94.55883789 -140.41061401]
[82.86073303 -150.00277710]
[74.70101929 -162.74145508]
[70.87909698 -177.37867737]
[71.76940918 -192.48042297]
[77.28472900 -206.56716919]
[86.88472748 -218.25885010]
[99.62887573 -226.41001892]
[114.26865387 -230.22213745]
[129.36979675 -229.32170105]
[143.45283508 -223.79693604]
[155.13807678 -214.18911743]
[163.28071594 -201.43949890]
[167.08302307 -186.79718018]
[166.17247009 -171.69664001]
[160.63827515 -157.61729431]
[151.02262878 -145.93849182]
[138.26756287 -137.80441284]
[123.62268829 -134.01191711]
[122.72986603 -119.03851318]
[131.41844177 -103.79135895]
[121.15096283 -88.50540924]
[120.48117065 -73.52037048]
[119.81138611 -58.53533173]
[119.14160156 -43.55029297]
[126.30288696 -30.49022675]
[117.95709229 -17.04930687]
[117.28730774 -2.06426883]
[116.61752319 12.92076969]
[115.94773865 27.90580940]
[115.27795410 42.89084625]
[126.28816223 32.70383072]
[141.26394653 31.85176277]
[153.35856628 40.72419357]
[157.04254150 55.26477051]
[150.63159180 68.82573700]
[137.05673218 75.20719910]
[122.52419281 71.49163818]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[98.93138885 157.68316650]
[96.70626831 172.51721191]
[94.48115540 187.35125732]
[101.61662292 204.32673645]
[90.15749359 217.61790466]
[88.15348053 232.48342896]
[100.70759583 224.27403259]
[115.41723633 227.21112061]
[123.85604858 239.61218262]
[121.18990326 254.37333679]
[108.94608307 263.03872681]
[94.13840485 260.64440918]
[85.24961090 248.56289673]
[81.92735291 263.19033813]
[78.60509491 277.81781006]
[75.28283691 292.44528198]
[71.96057892 307.07272339]
[68.63831329 321.70019531]
[81.87477875 314.64355469]
[96.26373291 318.88125610]
[103.56252289 331.98574829]
[99.59008026 346.45016479]
[86.62199402 353.98867798]
[72.08697510 350.28283691]
[64.31149292 337.45645142]
[59.69748306 351.72918701]
[55.08347702 366.00192261]
[50.46946716 380.27465820]
[45.85545731 394.54739380]
[59.81500244 400.05017090]
[73.40147400 406.41864014]
[86.56125641 413.62762451]
[99.24241638 421.64871216]
[111.39490509 430.45019531]
[122.97075653 439.99740601]
[133.92428589 450.25262451]
[144.21228027 461.17538452]
[153.79411316 472.72259521]
[162.63198853 484.84866333]
[170.69102478 497.50573730]
[177.93939209 510.64385986]
[184.34852600 524.21118164]
[189.89309692 538.15423584]
[194.55123901 552.41784668]
[198.30456543 566.94580078]
[201.13825989 581.68078613]
[203.04113770 596.56463623]
[204.00570679 611.53857422]
[204.02813721 626.54351807]
[203.10835266 641.52032471]
[201.24998474 656.40979004]
[198.46037292 671.15313721]
[194.75050354 685.69226074]
[190.13504028 699.96978760]
[184.63218689 713.92932129]
[178.26365662 727.51574707]
[171.05459595 740.67547607]
[163.03344727 753.35662842]
[154.23188782 765.50903320]
[144.68461609 777.08483887]
[134.42933655 788.03833008]
[123.50652313 798.32623291]
[111.95926666 807.90802002]
[99.83315277 816.74584961]
[87.17604065 824.80480957]
[74.03787231 832.05310059]
[60.47050095 838.46215820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 149]
[72 148]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[82 139]
[83 138]
[84 137]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[91 123]
[92 122]
[93 121]
[94 120]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
