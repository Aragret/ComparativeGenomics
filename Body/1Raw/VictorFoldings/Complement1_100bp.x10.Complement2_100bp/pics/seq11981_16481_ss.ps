%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[130.96978760 560.04736328]
[133.65243530 545.24475098]
[139.00958252 531.18713379]
[146.85881042 518.35345459]
[156.93275452 507.18069458]
[168.88829041 498.04943848]
[182.31823730 491.27072144]
[178.13122559 476.86694336]
[173.94421387 462.46316528]
[169.75720215 448.05938721]
[165.57020569 433.65557861]
[161.38319397 419.25180054]
[146.31178284 411.78912354]
[141.20030212 395.41268921]
[149.67797852 380.11077881]
[138.54701233 370.21377563]
[141.89483643 354.75082397]
[137.49383545 340.41098022]
[133.09283447 326.07113647]
[128.69183350 311.73126221]
[125.76490784 309.76519775]
[123.64485168 306.28375244]
[123.03351593 301.68164062]
[124.42995453 296.65203857]
[120.67366028 282.12997437]
[116.80934906 267.63626099]
[112.83725739 253.17175293]
[108.86515808 238.70722961]
[104.89306641 224.24270630]
[100.92096710 209.77818298]
[96.99513245 224.25532532]
[87.88890839 236.17492676]
[74.95316315 243.76876831]
[60.10683060 245.91035461]
[45.55227661 242.28199768]
[33.44858551 233.42195129]
[25.59126282 220.64453125]
[23.14589691 205.84519958]
[26.47524643 191.21934509]
[35.08541870 178.93663025]
[47.69915009 170.81913757]
[62.44526291 168.07102966]
[77.13626862 171.09997559]
[89.59282684 179.45664978]
[97.96635437 191.89962769]
[97.07353973 176.92622375]
[96.18072510 161.95281982]
[81.46835327 159.23948669]
[67.83252716 153.08476257]
[56.06540680 143.84620667]
[46.85056305 132.06050110]
[40.72332001 118.41230774]
[38.03961945 103.69449615]
[38.95537186 88.76206207]
[43.41737366 74.48247528]
[51.16641235 61.68526459]
[61.75233459 51.11386490]
[74.56016541 43.38239670]
[88.84587097 38.94000244]
[87.95305634 23.96659660]
[87.06023407 8.99319077]
[86.16741943 -5.98021507]
[85.27460480 -20.95362091]
[76.72962189 -34.26879501]
[83.69566345 -47.43403244]
[73.43785858 -53.44353485]
[67.41629028 -63.55499268]
[67.02748108 -75.19727325]
[72.25240326 -85.47423553]
[81.68990326 -91.88514709]
[81.24329376 -106.87850189]
[73.09854126 -120.44218445]
[80.45347595 -133.39418030]
[80.00686646 -148.38752747]
[68.95928192 -138.24107361]
[53.96759415 -138.74046326]
[43.61973190 -149.59963989]
[43.84342194 -164.59797668]
[54.51051712 -175.14373779]
[69.51042938 -175.19583130]
[80.25014496 -164.72529602]
[81.14295959 -179.69869995]
[82.03577423 -194.67210388]
[71.99527740 -203.65002441]
[69.00246429 -216.58267212]
[73.93164825 -228.69816589]
[84.77571869 -235.65774536]
[85.89136505 -250.61619568]
[87.00701141 -265.57464600]
[88.12265778 -280.53311157]
[76.46641541 -293.57730103]
[77.82382202 -310.67913818]
[90.86804962 -321.29452515]
[91.76086426 -336.26794434]
[92.65367889 -351.24136353]
[93.54649353 -366.21475220]
[94.43931580 -381.18817139]
[80.22001648 -386.28601074]
[68.01374054 -395.18453979]
[58.81000900 -407.16235352]
[53.35491562 -421.24847412]
[52.09068298 -436.30099487]
[55.11980057 -451.09967041]
[62.19670486 -464.44485474]
[72.74771118 -475.25473022]
[85.91748810 -482.65295410]
[100.63842010 -486.03979492]
[115.71716309 -485.14068604]
[129.93133545 -480.02853394]
[142.12866211 -471.11776733]
[151.32035828 -459.13070679]
[156.76129150 -445.03912354]
[158.01040649 -429.98535156]
[154.96641541 -415.18969727]
[147.87611389 -401.85162354]
[137.31425476 -391.05236816]
[124.13704681 -383.66738892]
[109.41271973 -380.29534912]
[108.51990509 -365.32192993]
[107.62708282 -350.34854126]
[106.73426819 -335.37512207]
[105.84145355 -320.40173340]
[115.65850067 -312.05575562]
[118.92485809 -299.39035034]
[114.23106384 -286.97344971]
[103.08111572 -279.41744995]
[101.96546936 -264.45901489]
[100.84981537 -249.50054932]
[99.73416901 -234.54209900]
[111.24322510 -222.27912903]
[110.30364990 -205.14926147]
[97.00917816 -193.77928162]
[96.11636353 -178.80587769]
[95.22354889 -163.83247375]
[95.00022125 -148.83413696]
[95.44682312 -133.84078979]
[103.55963135 -121.34952545]
[96.23664856 -107.32510376]
[96.68325043 -92.33175659]
[110.73877716 -80.60324860]
[111.77558136 -62.00652695]
[98.66906738 -48.32685089]
[107.15019226 -36.08267593]
[100.24800873 -21.84643745]
[101.14082336 -6.87303114]
[102.03364563 8.10037422]
[102.92646027 23.07378006]
[103.81927490 38.04718781]
[118.53164673 40.76052094]
[132.16746521 46.91523743]
[143.93460083 56.15379715]
[153.14942932 67.93950653]
[159.27668762 81.58769226]
[161.96037292 96.30550385]
[161.04463196 111.23793793]
[156.58262634 125.51752472]
[148.83358765 138.31472778]
[138.24766541 148.88613892]
[125.43983459 156.61759949]
[111.15412903 161.05999756]
[112.04694366 176.03340149]
[112.93976593 191.00680542]
[115.38549042 205.80607605]
[119.35758972 220.27059937]
[123.32968140 234.73512268]
[127.30178070 249.19964600]
[131.27388000 263.66418457]
[136.56404114 271.11077881]
[135.19570923 278.37365723]
[138.95201111 292.89572144]
[143.03167725 307.33029175]
[147.43267822 321.67013550]
[151.83367920 336.00997925]
[156.23468018 350.34982300]
[167.68041992 361.27252197]
[164.01782227 375.70977783]
[176.56439209 380.60861206]
[183.89175415 391.67749023]
[183.51170349 404.75180054]
[175.78697205 415.06478882]
[179.97398376 429.46856689]
[184.16099548 443.87237549]
[188.34800720 458.27615356]
[192.53501892 472.67993164]
[196.72203064 487.08370972]
[211.69308472 485.60659790]
[226.68064880 486.90579224]
[241.17420959 490.93704224]
[254.68016052 497.56307983]
[266.73846436 506.55819702]
[276.93841553 517.61602783]
[284.93264771 530.35992432]
[290.44885254 544.35583496]
[293.29913330 559.12713623]
[293.38647461 574.17059326]
[290.70782471 588.97399902]
[285.35443115 603.03302002]
[277.50866699 615.86883545]
[267.43774414 627.04431152]
[255.48466492 636.17877197]
[242.05654907 642.96112061]
[227.61074829 647.16033936]
[212.63928223 648.63342285]
[197.65208435 647.33020020]
[183.15960693 643.29498291]
[169.65544128 636.66534424]
[157.59956360 627.66699219]
[147.40257263 616.60644531]
[139.41178894 603.86035156]
[133.89936829 589.86291504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 185]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[15 176]
[17 174]
[18 173]
[19 172]
[20 171]
[24 170]
[25 169]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[45 162]
[46 161]
[47 160]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[65 142]
[70 139]
[71 138]
[73 136]
[74 135]
[81 134]
[82 133]
[83 132]
[87 129]
[88 128]
[89 127]
[90 126]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
