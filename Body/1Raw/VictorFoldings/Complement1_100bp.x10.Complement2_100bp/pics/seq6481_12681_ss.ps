%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[100.81895447 387.39624023]
[91.82338715 399.84515381]
[77.80198669 406.11380005]
[62.52643585 404.51593018]
[50.10578537 395.48138428]
[43.88112640 381.44039917]
[45.52685928 366.16995239]
[54.60029221 353.77767944]
[68.66072083 347.59704590]
[70.22123718 332.67846680]
[71.78176117 317.75985718]
[73.34228516 302.84124756]
[74.90280914 287.92263794]
[66.90372467 272.30273438]
[77.84352112 257.49047852]
[71.27254486 244.12368774]
[80.21018219 231.06883240]
[81.54841614 216.12864685]
[82.88665009 201.18846130]
[84.22488403 186.24827576]
[85.56311798 171.30809021]
[86.90135193 156.36790466]
[88.23958588 141.42771912]
[85.70536804 134.48513794]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[91.47137451 80.89852905]
[92.45840454 75.30184937]
[95.64582825 71.74525452]
[97.64984131 56.87972260]
[89.02356720 69.15112305]
[77.20032501 78.38210297]
[63.20294952 83.77408600]
[48.24235153 84.86061859]
[33.61277390 81.54769135]
[20.57982254 74.12191772]
[10.27097511 63.22569275]
[3.57805133 49.80165482]
[1.08005607 35.01111603]
[2.99309087 20.13360786]
[9.15165901 6.45618010]
[19.02298355 -4.83793211]
[31.75309372 -12.77167416]
[46.24071121 -16.65869904]
[61.23250961 -16.16273880]
[75.43154907 -11.32669926]
[87.60947418 -2.56894779]
[96.71276093 9.35288429]
[101.95390320 23.40743828]
[102.87976837 38.37535095]
[108.95360565 24.66008377]
[115.02744293 10.94481659]
[121.10127258 -2.77045012]
[127.17510986 -16.48571587]
[131.57611084 -30.82556343]
[134.24189758 -45.58678055]
[129.08033752 -60.54233932]
[138.95634460 -71.69194031]
[141.62214661 -86.45315552]
[144.28794861 -101.21437073]
[146.95373535 -115.97559357]
[149.61953735 -130.73680115]
[135.05897522 -134.36346436]
[120.76679993 -138.93466187]
[106.80419922 -144.43083191]
[93.23095703 -150.82844543]
[80.10519409 -158.10008240]
[67.48313141 -166.21461487]
[55.41881561 -175.13731384]
[43.96390152 -184.82995605]
[33.16744232 -195.25102234]
[23.07567406 -206.35591125]
[13.73181152 -218.09704590]
[5.17586422 -230.42417908]
[-2.55552816 -243.28450012]
[-9.42925835 -256.62295532]
[-15.41589260 -270.38238525]
[-20.48979378 -284.50393677]
[-24.62923622 -298.92706299]
[-27.81649208 -313.59008789]
[-30.03791428 -328.43014526]
[-31.28398895 -343.38372803]
[-31.54938126 -358.38677979]
[-30.83295631 -373.37509155]
[-29.13777924 -388.28442383]
[-26.47110939 -403.05099487]
[-22.84436607 -417.61151123]
[-18.27308273 -431.90365601]
[-12.77682972 -445.86624146]
[-6.37914610 -459.43945312]
[0.89257312 -472.56515503]
[9.00718880 -485.18716431]
[17.92995262 -497.25143433]
[27.62265587 -508.70629883]
[38.04379272 -519.50268555]
[49.14873505 -529.59442139]
[60.88993454 -538.93817139]
[73.21710968 -547.49407959]
[86.07747650 -555.22540283]
[99.41596222 -562.09906006]
[113.17544556 -568.08557129]
[127.29701233 -573.15942383]
[141.72018433 -577.29876709]
[156.38320923 -580.48590088]
[171.22328186 -582.70727539]
[186.17687988 -583.95324707]
[201.17993164 -584.21856689]
[216.16822815 -583.50201416]
[231.07756042 -581.80676270]
[245.84410095 -579.14001465]
[260.40460205 -575.51318359]
[274.69674683 -570.94183350]
[288.65927124 -565.44549561]
[302.23245239 -559.04772949]
[315.35812378 -551.77593994]
[327.98007202 -543.66125488]
[340.04431152 -534.73840332]
[351.49908447 -525.04565430]
[362.29544067 -514.62445068]
[372.38705444 -503.51943970]
[381.73080444 -491.77816772]
[390.28659058 -479.45095825]
[398.01782227 -466.59054565]
[404.89141846 -453.25201416]
[410.87786865 -439.49249268]
[415.95162964 -425.37088013]
[420.09088135 -410.94769287]
[423.27798462 -396.28463745]
[425.49920654 -381.44454956]
[426.74511719 -366.49096680]
[427.01034546 -351.48791504]
[426.29373169 -336.49960327]
[424.59838867 -321.59030151]
[421.93151855 -306.82376099]
[418.30462646 -292.26327515]
[413.73315430 -277.97119141]
[408.23675537 -264.00866699]
[401.83889771 -250.43554688]
[394.56701660 -237.30992126]
[386.45227051 -224.68798828]
[377.52935791 -212.62384033]
[367.83651733 -201.16909790]
[357.41525269 -190.37281799]
[346.31018066 -180.28125000]
[334.56887817 -170.93759155]
[322.24160767 -162.38186646]
[309.38116455 -154.65069580]
[296.04257202 -147.77720642]
[282.28302002 -141.79081726]
[268.16140747 -136.71716309]
[253.73817444 -132.57797241]
[239.07511902 -129.39097595]
[224.23501587 -127.16981506]
[209.28141785 -125.92400360]
[194.27835083 -125.65888214]
[179.29006958 -126.37557220]
[164.38075256 -128.07101440]
[161.71495056 -113.30979156]
[159.04916382 -98.54857635]
[156.38336182 -83.78736115]
[153.71757507 -69.02614594]
[159.06980896 -55.12640381]
[149.00311279 -42.92098618]
[146.33732605 -28.15976906]
[155.81272888 -39.78803253]
[168.65821838 -47.53359222]
[183.36468506 -50.48649979]
[198.20445251 -48.29985809]
[211.43414307 -41.23054504]
[221.49955750 -30.10905838]
[227.21821594 -16.24194145]
[227.91830444 -1.25828779]
[223.51756287 13.08163834]
[214.53298950 25.09319687]
[202.02009583 33.36528015]
[187.44886780 36.92609406]
[172.53112793 35.35731506]
[159.01939392 28.84324646]
[148.50100708 18.14915085]
[142.21166992 4.53136015]
[140.89038086 -10.41188240]
[134.81654358 3.30338407]
[128.74270630 17.01865005]
[122.66886902 30.73391724]
[116.59503937 44.44918442]
[112.51537323 58.88373566]
[110.51136017 73.74926758]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.17977142 142.76596069]
[101.84153748 157.70614624]
[100.50330353 172.64631653]
[99.16506958 187.58650208]
[97.82683563 202.52668762]
[96.48860168 217.46687317]
[95.15036774 232.40705872]
[101.62562561 246.84249878]
[92.78370667 258.82873535]
[100.44000244 269.20870972]
[99.01780701 281.62487793]
[89.82141113 289.48315430]
[88.26088715 304.40176392]
[86.70037079 319.32037354]
[85.13984680 334.23898315]
[83.57932281 349.15759277]
[96.05636597 358.11407471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[15 202]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[25 193]
[26 192]
[28 190]
[31 189]
[32 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 166]
[58 165]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
