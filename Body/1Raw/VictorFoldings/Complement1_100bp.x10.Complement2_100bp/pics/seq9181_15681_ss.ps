%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[63.92160797 226.32662964]
[63.45483398 241.32661438]
[61.85495758 256.24832153]
[59.13114929 271.00631714]
[55.29900360 285.51605225]
[50.38047791 299.69439697]
[44.40373993 313.46014404]
[37.40302658 326.73446655]
[29.41843796 339.44128418]
[20.49570847 351.50787354]
[10.68594933 362.86508179]
[0.04534927 373.44784546]
[-11.36514282 383.19555664]
[-23.48016739 392.05239868]
[-36.23033142 399.96762085]
[-49.54259872 406.89590454]
[-63.34072113 412.79751587]
[-77.54566193 417.63870239]
[-92.07604980 421.39172363]
[-106.84866333 424.03506470]
[-121.77888489 425.55358887]
[-136.78118896 425.93862915]
[-151.76963806 425.18792725]
[-166.65840149 423.30581665]
[-181.36216736 420.30307007]
[-195.79673767 416.19689941]
[-209.87942505 411.01080322]
[-223.52954102 404.77450562]
[-236.66893005 397.52374268]
[-249.22232056 389.29998779]
[-261.11779785 380.15039062]
[-272.28723145 370.12738037]
[-282.66662598 359.28829956]
[-292.19656372 347.69531250]
[-300.82244873 335.41476440]
[-308.49484253 322.51702881]
[-315.16983032 309.07595825]
[-320.80914307 295.16857910]
[-325.38052368 280.87454224]
[-328.85775757 266.27569580]
[-331.22091675 251.45567322]
[-332.45651245 236.49937439]
[-332.55743408 221.49247742]
[-331.52307129 206.52091980]
[-329.35940552 191.67045593]
[-326.07882690 177.02618408]
[-321.70010376 162.67193604]
[-316.24829102 148.68997192]
[-309.75466919 135.16036987]
[-302.25640869 122.16062164]
[-293.79647827 109.76519012]
[-284.42330933 98.04507446]
[-274.19058228 87.06741333]
[-263.15695190 76.89508820]
[-251.38558960 67.58635712]
[-238.94393921 59.19454193]
[-225.90324402 51.76771545]
[-212.33821106 45.34841919]
[-198.32655334 39.97341537]
[-183.94851685 35.67349625]
[-169.28645325 32.47329330]
[-154.42434692 30.39113617]
[-139.44734192 29.43894958]
[-124.44121552 29.62219048]
[-109.49192810 30.93980598]
[-94.68509674 33.38425064]
[-80.10555267 36.94152451]
[-65.83679199 41.59124756]
[-51.96055603 47.30678558]
[-38.55632019 54.05540848]
[-25.70086861 61.79845047]
[-13.46783447 70.49156952]
[-1.92728877 80.08496094]
[8.85466480 90.52368164]
[18.81626701 101.74793243]
[27.90045738 113.69342804]
[36.05520248 126.29174042]
[49.22768021 119.11637878]
[56.70312881 106.23355865]
[72.52315521 106.42676544]
[85.69563293 99.25140381]
[93.14803314 87.42121124]
[107.12900543 87.57612610]
[120.30147552 80.40075684]
[129.53416443 64.46842957]
[147.04740906 65.58795929]
[160.11158752 58.21726990]
[173.17578125 50.84658051]
[186.23995972 43.47589111]
[199.30413818 36.10520172]
[212.36833191 28.73451233]
[225.20727539 20.97812080]
[237.80958557 12.84290504]
[250.41189575 4.70768881]
[263.01422119 -3.42752695]
[255.78498840 -16.57770920]
[249.50137329 -30.20507812]
[244.19468689 -44.24174118]
[239.89135742 -58.61777115]
[236.61280823 -73.26154327]
[234.37539673 -88.10010529]
[233.19026184 -103.05953217]
[233.06330872 -118.06529236]
[233.99514771 -133.04263306]
[235.98117065 -147.91691589]
[239.01147461 -162.61407471]
[243.07095337 -177.06085205]
[248.13937378 -191.18530273]
[254.19151306 -204.91703796]
[261.19720459 -218.18765259]
[269.12152100 -230.93104553]
[277.92501831 -243.08370972]
[287.56384277 -254.58509827]
[297.98995972 -265.37792969]
[309.15139771 -275.40844727]
[320.99258423 -284.62664795]
[333.45452881 -292.98660278]
[346.47512817 -300.44668579]
[359.98953247 -306.96969604]
[373.93038940 -312.52319336]
[388.22827148 -317.07946777]
[402.81192017 -320.61584473]
[417.60870361 -323.11465454]
[432.54489136 -324.56353760]
[447.54608154 -324.95516968]
[462.53753662 -324.28768921]
[477.44454956 -322.56439209]
[492.19287109 -319.79382324]
[506.70901489 -315.98983765]
[520.92065430 -311.17135620]
[534.75701904 -305.36242676]
[548.14916992 -298.59194946]
[561.03039551 -290.89364624]
[573.33648682 -282.30590820]
[585.00610352 -272.87149048]
[595.98120117 -262.63739014]
[606.20703125 -251.65463257]
[615.63269043 -239.97790527]
[624.21118164 -227.66539001]
[631.89978027 -214.77841187]
[638.66021729 -201.38119507]
[644.45880127 -187.54046631]
[649.26660156 -173.32519531]
[653.05969238 -158.80619812]
[655.81915283 -144.05580139]
[657.53125000 -129.14749146]
[658.18750000 -114.15554810]
[657.78460693 -99.15466309]
[656.32452393 -84.21956635]
[653.81457520 -69.42466736]
[650.26727295 -54.84366608]
[645.70025635 -40.54921341]
[640.13629150 -26.61252403]
[633.60314941 -13.10302734]
[626.13323975 -0.08802787]
[617.76397705 12.36763287]
[608.53686523 24.20190048]
[598.49798584 35.35581589]
[587.69732666 45.77381516]
[576.18872070 55.40399170]
[564.02941895 64.19836426]
[551.28009033 72.11312866]
[538.00421143 79.10884857]
[524.26794434 85.15066528]
[510.13970947 90.20848846]
[495.68988037 94.25711823]
[480.99044800 97.27638245]
[466.11465454 99.25123596]
[451.13662720 100.17184448]
[436.13098145 100.03361511]
[421.17245483 98.83724976]
[406.33557129 96.58869171]
[391.69427490 93.29916382]
[377.32147217 88.98503113]
[363.28878784 83.66780090]
[349.66613770 77.37396240]
[336.52139282 70.13487244]
[323.92001343 61.98659134]
[311.92483521 52.96971893]
[300.59555054 43.12916946]
[289.98864746 32.51397705]
[280.15692139 21.17702103]
[271.14941406 9.17478466]
[258.54711914 17.31000137]
[245.94479370 25.44521713]
[233.34248352 33.58043289]
[232.62101746 36.28923798]
[230.78309631 38.87547684]
[227.87001038 40.91247177]
[224.07662964 41.99636459]
[219.73901367 41.79869843]
[206.67483521 49.16938782]
[193.61065674 56.54007721]
[180.54646301 63.91076660]
[167.48228455 71.28145599]
[154.41809082 78.65214539]
[150.87048340 90.21678925]
[140.04681396 96.46435547]
[127.47684479 93.57323456]
[114.30436707 100.74859619]
[106.85196686 112.57878876]
[92.87099457 112.42387390]
[79.69852448 119.59924316]
[71.28089142 132.99528503]
[56.40304565 132.28884888]
[43.23057175 139.46421814]
[49.39238739 153.14813232]
[54.50165558 167.25886536]
[58.52910614 181.71559143]
[61.45167160 196.43550110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 206]
[78 205]
[80 203]
[81 202]
[83 200]
[84 199]
[86 196]
[87 195]
[88 194]
[89 193]
[90 192]
[91 191]
[92 186]
[93 185]
[94 184]
[95 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
