%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[177.27420044 260.55413818]
[186.47280884 248.68217468]
[197.03536987 238.00558472]
[187.72048950 226.24833679]
[178.40560913 214.49108887]
[169.09072876 202.73384094]
[159.77584839 190.97659302]
[150.46096802 179.21932983]
[139.11248779 180.39337158]
[128.49661255 175.89683533]
[121.29578400 166.74031067]
[119.38983917 155.12702942]
[123.36640930 143.92329407]
[114.40571594 131.89392090]
[100.59770203 126.30928802]
[98.55875397 110.62001038]
[87.99170685 99.97400665]
[76.02937317 90.92400360]
[64.06703186 81.87400818]
[52.10469818 72.82400513]
[40.14236069 63.77400589]
[28.18002319 54.72400665]
[16.21768570 45.67400360]
[4.25534964 36.62400436]
[-2.24709415 35.42827988]
[-6.52706909 31.68945122]
[-7.92307138 27.12215233]
[-19.61065292 17.72000122]
[-31.29823303 8.31784916]
[-46.80167007 9.82822609]
[-58.52060318 0.12661365]
[-59.86497116 -14.66285038]
[-71.55255127 -24.06500244]
[-83.24013519 -33.46715164]
[-94.92771912 -42.86930466]
[-106.61529541 -52.27145386]
[-118.30287933 -61.67360687]
[-128.62040710 -50.77429962]
[-139.78152466 -40.74056244]
[-151.71382141 -31.63746071]
[-164.33993530 -23.52403641]
[-177.57797241 -16.45290947]
[-191.34207153 -10.46993923]
[-205.54296875 -5.61392736]
[-220.08856201 -1.91636777]
[-234.88452148 0.59875923]
[-249.83488464 1.91514182]
[-264.84271240 2.02424264]
[-279.81060791 0.92535400]
[-294.64157104 -1.37439716]
[-309.23941040 -4.86009598]
[-323.50939941 -9.50913620]
[-337.35900879 -15.29136562]
[-350.69845581 -22.16928482]
[-363.44119263 -30.09828758]
[-375.50457764 -39.02694702]
[-386.81039429 -48.89736176]
[-397.28527832 -59.64551544]
[-406.86132812 -71.20169830]
[-415.47647095 -83.49096680]
[-423.07473755 -96.43362427]
[-429.60696411 -109.94571686]
[-435.03067017 -123.93962097]
[-439.31079102 -138.32458496]
[-442.41949463 -153.00730896]
[-444.33663940 -167.89256287]
[-445.04977417 -182.88381958]
[-444.55432129 -197.88385010]
[-442.85345459 -212.79536438]
[-439.95822144 -227.52166748]
[-435.88739014 -241.96723938]
[-430.66738892 -256.03839111]
[-424.33200073 -269.64389038]
[-416.92239380 -282.69549561]
[-408.48660278 -295.10852051]
[-399.07928467 -306.80249023]
[-388.76150513 -317.70156860]
[-377.60018921 -327.73507690]
[-365.66769409 -336.83792114]
[-353.04138184 -344.95104980]
[-339.80319214 -352.02188110]
[-326.03897095 -358.00454712]
[-311.83798218 -362.86026001]
[-297.29229736 -366.55749512]
[-282.49627686 -369.07229614]
[-267.54589844 -370.38833618]
[-252.53807068 -370.49713135]
[-237.57017517 -369.39788818]
[-222.73925781 -367.09780884]
[-208.14151001 -363.61181641]
[-193.87162781 -358.96243286]
[-180.02212524 -353.17990112]
[-166.68284607 -346.30169678]
[-153.94027710 -338.37240601]
[-141.87709045 -329.44348145]
[-130.57150269 -319.57281494]
[-120.09683990 -308.82443237]
[-110.52103424 -297.26803589]
[-101.90619659 -284.97857666]
[-94.30818176 -272.03576660]
[-87.77628326 -258.52352905]
[-82.35285950 -244.52949524]
[-78.07307434 -230.14443970]
[-74.96469879 -215.46165466]
[-73.04788208 -200.57635498]
[-72.33505249 -185.58508301]
[-72.83084869 -170.58506775]
[-74.53203583 -155.67358398]
[-77.42759705 -140.94735718]
[-81.49874878 -126.50186920]
[-86.71907806 -112.43081665]
[-93.05474091 -98.82546234]
[-100.46464539 -85.77403259]
[-108.90072632 -73.36119080]
[-97.21315002 -63.95903778]
[-85.52556610 -54.55688477]
[-73.83798218 -45.15473557]
[-62.15040207 -35.75258255]
[-50.46282196 -26.35043144]
[-35.72869492 -28.20544243]
[-23.74188614 -18.83681870]
[-21.89608192 -3.36973214]
[-10.20850182 6.03241920]
[1.47907972 15.43457031]
[13.30534935 24.66166878]
[25.26768684 33.71166992]
[37.23002243 42.76166916]
[49.19235992 51.81166840]
[61.15469742 60.86166763]
[73.11703491 69.91166687]
[85.07936859 78.96166992]
[97.04170990 88.01166534]
[90.59275818 74.46873474]
[88.36277008 59.63542175]
[90.54466248 44.79496002]
[96.94968414 31.23119545]
[107.02373505 20.11753273]
[119.89530945 12.41541004]
[134.45088196 8.79114246]
[149.43124390 9.55826283]
[163.54046631 14.65040970]
[175.55795288 23.62705994]
[184.44404602 35.71164322]
[189.43003845 49.85872269]
[190.08459473 64.84443665]
[186.35105896 79.37236786]
[178.55244446 92.18569946]
[167.36340332 102.17596436]
[153.75190735 108.47889709]
[138.89546204 110.54922485]
[124.07932281 108.20785522]
[110.58813477 101.65931702]
[125.03707123 108.10437775]
[126.43508911 122.93322754]
[135.39578247 134.96260071]
[154.23245239 136.98597717]
[165.41661072 151.87985229]
[162.21821594 169.90444946]
[171.53309631 181.66169739]
[180.84797668 193.41896057]
[190.16285706 205.17620850]
[199.47773743 216.93345642]
[208.79263306 228.69070435]
[221.60221863 220.85031128]
[235.26347351 214.61114502]
[249.57719421 210.06417847]
[264.33462524 207.27575684]
[279.32058716 206.28649902]
[294.31649780 207.11087036]
[309.10372925 209.73683167]
[323.46658325 214.12608337]
[337.19564819 220.21463013]
[350.09069824 227.91368103]
[361.96365356 237.11094666]
[372.64144897 247.67231750]
[381.96829224 259.44375610]
[389.80819702 272.25366211]
[396.04687500 285.91513062]
[400.59329224 300.22903442]
[403.38116455 314.98657227]
[404.36984253 329.97256470]
[403.54492188 344.96847534]
[400.91842651 359.75558472]
[396.52862549 374.11828613]
[390.43957520 387.84710693]
[382.74005127 400.74185181]
[373.54232788 412.61450195]
[362.98056030 423.29187012]
[351.20874023 432.61828613]
[338.39859009 440.45773315]
[324.73684692 446.69586182]
[310.42279053 451.24176025]
[295.66513062 454.02908325]
[280.67910767 455.01721191]
[265.68325806 454.19171143]
[250.89624023 451.56466675]
[236.53370667 447.17431641]
[222.80509949 441.08474731]
[209.91064453 433.38473511]
[198.03834534 424.18658447]
[187.36135864 413.62442017]
[178.03538513 401.85226440]
[170.19642639 389.04180908]
[163.95878601 375.37985229]
[159.41343689 361.06561279]
[156.62666321 346.30786133]
[155.63909912 331.32180786]
[156.46514893 316.32595825]
[159.09277344 301.53903198]
[163.48362732 287.17666626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 163]
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[13 155]
[14 154]
[16 152]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 127]
[23 126]
[24 125]
[27 124]
[28 123]
[29 122]
[32 119]
[33 118]
[34 117]
[35 116]
[36 115]
[37 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
