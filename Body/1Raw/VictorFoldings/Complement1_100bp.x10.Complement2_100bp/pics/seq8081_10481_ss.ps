%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[21.80295372 748.00964355]
[7.07534933 750.87609863]
[-7.78981113 752.91229248]
[-22.74575615 754.11175537]
[-37.74542618 754.47076416]
[-52.74163055 753.98822021]
[-67.68718719 752.66552734]
[-82.53506470 750.50689697]
[-97.23854828 747.51916504]
[-111.75137329 743.71166992]
[-126.02787781 739.09643555]
[-140.02314758 733.68798828]
[-153.69314575 727.50329590]
[-166.99485779 720.56188965]
[-179.88644409 712.88555908]
[-192.32731628 704.49841309]
[-204.27835083 695.42694092]
[-215.70195007 685.69964600]
[-226.56214905 675.34710693]
[-236.82479858 664.40191650]
[-246.45759583 652.89849854]
[-255.43025208 640.87310791]
[-263.71450806 628.36346436]
[-271.28430176 615.40905762]
[-278.11584473 602.05059814]
[-284.18759155 588.33007812]
[-289.48049927 574.29064941]
[-293.97787476 559.97662354]
[-297.66555786 545.43286133]
[-300.53198242 530.70526123]
[-302.56811523 515.84008789]
[-303.76754761 500.88412476]
[-304.12649536 485.88446045]
[-303.64382935 470.88827515]
[-302.32110596 455.94271851]
[-300.16241455 441.09484863]
[-297.17462158 426.39138794]
[-293.36709595 411.87857056]
[-288.75183105 397.60208130]
[-283.34329224 383.60681152]
[-277.15856934 369.93685913]
[-270.21710205 356.63516235]
[-262.54071045 343.74362183]
[-254.15354919 331.30276489]
[-245.08203125 319.35174561]
[-235.35467529 307.92819214]
[-225.00210571 297.06802368]
[-214.05686951 286.80541992]
[-202.55343628 277.17266846]
[-190.52798462 268.20007324]
[-178.01835632 259.91586304]
[-165.06390381 252.34609985]
[-151.70538330 245.51461792]
[-137.98484802 239.44291687]
[-123.94544220 234.15007019]
[-109.63134766 229.65274048]
[-95.08760834 225.96510315]
[-80.35998535 223.09873962]
[-65.49481201 221.06266785]
[-50.53885651 219.86329651]
[-35.53918076 219.50439453]
[-20.54298019 219.98710632]
[-5.59743786 221.30990601]
[9.25042248 223.46862793]
[23.95388412 226.45648193]
[38.46668243 230.26406860]
[43.08069229 215.99133301]
[47.69470215 201.71859741]
[34.37995148 208.62637329]
[19.71315002 205.48234558]
[10.39976120 193.72390747]
[10.69774055 178.72686768]
[20.47085571 167.34767151]
[35.25096893 164.78872681]
[48.28081512 172.21995544]
[53.60335541 186.24574280]
[59.67718887 172.53048706]
[65.75102234 158.81521606]
[71.82485962 145.09994507]
[77.89868927 131.38468933]
[83.97252655 117.66941833]
[90.04635620 103.95414734]
[94.23336792 89.55036926]
[96.45848846 74.71632385]
[98.68360138 59.88228226]
[100.90872192 45.04823685]
[95.30416107 30.25298691]
[104.84383392 18.81428528]
[107.06894684 3.98024201]
[109.29406738 -10.85380173]
[111.51918030 -25.68784523]
[113.74430084 -40.52188873]
[115.96942139 -55.35593414]
[101.70913696 -60.13248444]
[88.49502563 -67.31291199]
[76.72866058 -76.67900085]
[66.76759338 -87.94613647]
[58.91453934 -100.77191925]
[53.40814209 -114.76658630]
[50.41572952 -129.50485229]
[50.02824402 -144.53884888]
[52.25745773 -159.41169739]
[57.03562927 -173.67144775]
[64.21755219 -186.88473511]
[73.58497620 -198.65003967]
[84.85324097 -208.60983276]
[97.67991638 -216.46142578]
[111.67520905 -221.96623230]
[126.41381836 -224.95698547]
[141.44784546 -225.34275818]
[156.32044983 -223.11186218]
[170.57965088 -218.33207703]
[183.79212952 -211.14865112]
[195.55636597 -201.77989197]
[205.51487732 -190.51049805]
[213.36502075 -177.68293762]
[218.86825562 -163.68701172]
[221.85731506 -148.94807434]
[222.24139404 -133.91398621]
[220.00880432 -119.04164124]
[215.22740173 -104.78298950]
[208.04248047 -91.57131958]
[198.67239380 -79.80814362]
[187.40187073 -69.85091400]
[174.57341003 -62.00222015]
[160.57687378 -56.50058365]
[145.83758545 -53.51318741]
[130.80346680 -53.13081741]
[128.57833862 -38.29677200]
[126.35322571 -23.46272850]
[124.12811279 -8.62868500]
[121.90299225 6.20535898]
[119.67787933 21.03940201]
[125.44159698 34.77362442]
[115.74276733 47.27335358]
[113.51764679 62.10739899]
[111.29253387 76.94144440]
[109.06741333 91.77548218]
[117.96214294 79.69725037]
[130.11718750 70.90776825]
[144.37399292 66.24479675]
[159.37371826 66.15278625]
[173.68666077 70.64051056]
[185.94860840 79.28021240]
[194.99084473 91.24842834]
[199.95149231 105.40441132]
[200.35777283 120.39891052]
[196.17092896 134.80273438]
[187.79003906 147.24302673]
[176.01390076 156.53402710]
[161.96496582 161.79020691]
[146.98226929 162.51054382]
[132.49388123 158.62641907]
[119.88072968 150.50802612]
[110.34502411 138.92915344]
[104.79564667 124.99342346]
[103.76162720 110.02798462]
[97.68778992 123.74324799]
[91.61396027 137.45851135]
[85.54012299 151.17378235]
[79.46628571 164.88905334]
[73.39245605 178.60432434]
[67.31861877 192.31958008]
[61.96743393 206.33261108]
[57.35342407 220.60534668]
[52.73941803 234.87806702]
[66.73472595 240.28643799]
[80.40476990 246.47100830]
[93.70653534 253.41233826]
[106.59816742 261.08859253]
[119.03910828 269.47561646]
[130.99021912 278.54699707]
[142.41387939 288.27423096]
[153.27416992 298.62667847]
[163.53689575 309.57177734]
[173.16978455 321.07510376]
[182.14251709 333.10046387]
[190.42686462 345.61001587]
[197.99674988 358.56436157]
[204.82838440 371.92282104]
[210.90025330 385.64328003]
[216.19325256 399.68264771]
[220.69073486 413.99667358]
[224.37854004 428.54037476]
[227.24507141 443.26797485]
[229.28131104 458.13311768]
[230.48085022 473.08905029]
[230.83990479 488.08871460]
[230.35736084 503.08493042]
[229.03472900 518.03051758]
[226.87617493 532.87835693]
[223.88848877 547.58184814]
[220.08106995 562.09472656]
[215.46588135 576.37121582]
[210.05747986 590.36651611]
[203.87284851 604.03656006]
[196.93147278 617.33831787]
[189.25517273 630.22991943]
[180.86811829 642.67077637]
[171.79667664 654.62188721]
[162.06941223 666.04553223]
[151.71691895 676.90576172]
[140.77177429 687.16845703]
[129.26840210 696.80126953]
[117.24301910 705.77398682]
[104.73344421 714.05828857]
[91.77904510 721.62811279]
[78.42058563 728.45971680]
[64.70008850 734.53149414]
[50.66072083 739.82446289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 166]
[67 165]
[68 164]
[76 163]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[83 138]
[84 137]
[85 136]
[86 135]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
