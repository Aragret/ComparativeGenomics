%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-83.13401031 380.78790283]
[-75.51126862 393.73681641]
[-69.80902100 407.63879395]
[-66.14334869 422.21081543]
[-64.58889008 437.15618896]
[-65.17729187 452.17068481]
[-67.89656067 466.94857788]
[-72.69135284 481.18902588]
[-79.46404266 494.60214233]
[-88.07675171 506.91482544]
[-98.35413361 517.87640381]
[-110.08695221 527.26373291]
[-123.03634644 534.88562012]
[-136.93867493 540.58703613]
[-151.51092529 544.25183105]
[-166.45640564 545.80535889]
[-181.47084045 545.21600342]
[-196.24858093 542.49584961]
[-210.48873901 537.70013428]
[-223.90142822 530.92663574]
[-236.21357727 522.31317139]
[-247.17451477 512.03509521]
[-256.56109619 500.30169678]
[-264.18225098 487.35183716]
[-269.88278198 473.44915771]
[-273.54663086 458.87667847]
[-275.09924316 443.93109131]
[-274.50897217 428.91668701]
[-271.78787231 414.13912964]
[-266.99133301 399.89926147]
[-260.21697998 386.48699951]
[-251.60275269 374.17538452]
[-241.32400513 363.21508789]
[-229.59002686 353.82922363]
[-216.63969421 346.20889282]
[-202.73664856 340.50921631]
[-188.16395569 336.84625244]
[-173.21829224 335.29455566]
[-158.20391846 335.88574219]
[-143.42652893 338.60775757]
[-129.18695068 343.40521240]
[-115.77510071 350.18038940]
[-107.17653656 337.88955688]
[-98.57797241 325.59869385]
[-89.97940826 313.30786133]
[-81.38084412 301.01702881]
[-72.78227997 288.72619629]
[-87.53778839 291.42343140]
[-100.63664246 284.11453247]
[-106.09022522 270.14102173]
[-101.40523529 255.89143372]
[-88.72357941 247.88046265]
[-73.84313965 249.77062988]
[-63.56706619 260.69775391]
[-62.59394073 275.66790771]
[-52.76335907 264.33831787]
[-42.93277740 253.00872803]
[-33.10219574 241.67912292]
[-23.27161598 230.34953308]
[-13.44103432 219.01994324]
[-3.61045384 207.69035339]
[6.22012711 196.36076355]
[16.05070686 185.03115845]
[25.88128853 173.70156860]
[35.62725449 162.29910278]
[45.28806305 150.82440186]
[54.94887543 139.34970093]
[51.34860992 129.73674011]
[52.06908417 119.41606903]
[57.04715347 110.25463867]
[65.44346619 103.93756104]
[75.78327942 101.65823364]
[86.21533966 103.89339447]
[89.46533203 90.29452515]
[102.75278473 85.94306183]
[112.91632843 74.91117859]
[120.57692719 62.01485443]
[125.40292358 47.81240082]
[130.22892761 33.60994339]
[135.05491638 19.40748787]
[139.45591736 5.06764126]
[143.42800903 -9.39688301]
[147.40011597 -23.86140633]
[146.65489197 -32.96538544]
[151.54052734 -38.51087570]
[155.72753906 -52.91465759]
[159.91453552 -67.31843567]
[164.10154724 -81.72222137]
[168.28855896 -96.12599945]
[154.46424866 -101.99324799]
[141.43092346 -109.45439148]
[129.37155151 -118.40469360]
[118.45542145 -128.71850586]
[108.83580017 -140.25103760]
[100.64772034 -152.84037781]
[94.00612640 -166.30981445]
[89.00425720 -180.47024536]
[85.71234131 -195.12287903]
[84.17657471 -210.06201172]
[84.41853333 -225.07792664]
[86.43481445 -239.95982361]
[90.19710541 -254.49879456]
[95.65260315 -268.49072266]
[102.72470856 -281.73916626]
[111.31414795 -294.05819702]
[121.30033112 -305.27481079]
[132.54307556 -315.23156738]
[144.88455200 -323.78866577]
[158.15150452 -330.82604980]
[172.15768433 -336.24484253]
[186.70645142 -339.96902466]
[201.59358215 -341.94628906]
[216.61009216 -342.14889526]
[231.54515076 -340.57397461]
[246.18910217 -337.24365234]
[260.33636475 -332.20471191]
[273.78836060 -325.52783203]
[286.35620117 -317.30679321]
[297.86346436 -307.65698242]
[308.14865112 -296.71386719]
[317.06729126 -284.63107300]
[324.49426270 -271.57821655]
[330.32525635 -257.73858643]
[334.47842407 -243.30641174]
[336.89547729 -228.48432922]
[337.54244995 -213.48040771]
[336.41027832 -198.50526428]
[333.51489258 -183.76916504]
[328.89688110 -169.47894287]
[322.62109375 -155.83522034]
[314.77563477 -143.02955627]
[305.47064209 -131.24169922]
[294.83676147 -120.63713837]
[283.02325439 -111.36474609]
[270.19595337 -103.55469513]
[256.53494263 -97.31661224]
[242.23204041 -92.73809052]
[227.48799133 -89.88339233]
[212.50978088 -88.79260254]
[197.50770569 -89.48101807]
[182.69235229 -91.93898773]
[178.50534058 -77.53520966]
[174.31832886 -63.13142776]
[170.13131714 -48.72764587]
[165.94430542 -34.32386398]
[161.86463928 -19.88931084]
[157.89253235 -5.42478657]
[153.92044067 9.03973770]
[155.18815613 11.53994560]
[155.54188538 14.69295788]
[154.72804260 18.15316772]
[152.62266541 21.48962593]
[149.25737000 24.23348618]
[144.43138123 38.43593979]
[139.60537720 52.63839722]
[134.77938843 66.84085083]
[145.38800049 56.23627090]
[157.94615173 48.03303528]
[171.91983032 42.57995224]
[186.71488953 40.10889435]
[201.70223999 40.72492599]
[216.24459839 44.40185928]
[229.72361755 50.98334503]
[241.56617737 60.18953705]
[251.26870728 71.62898254]
[258.41864014 84.81526947]
[262.71200562 99.18771362]
[263.96621704 114.13518524]
[262.12792969 129.02210999]
[257.27532959 143.21549988]
[249.61474609 156.11184692]
[239.47190857 167.16276550]
[227.27810669 175.89839172]
[213.55181885 181.94726562]
[198.87669373 185.05220032]
[183.87670898 185.08116150]
[169.18971252 182.03291321]
[155.44015503 176.03707886]
[143.21270752 167.34861755]
[133.02728271 156.33692932]
[125.31696320 143.47027588]
[120.40959167 129.29573059]
[118.51383972 114.41600800]
[119.71031952 99.46380615]
[123.94821167 85.07472992]
[113.78466034 96.10660553]
[110.53466797 109.70547485]
[97.24721527 114.05693817]
[99.13253021 134.06007385]
[85.90325928 148.77366638]
[66.42357635 149.01051331]
[56.76276398 160.48521423]
[47.10195541 171.95991516]
[43.96884537 180.54020691]
[37.21088028 183.53215027]
[27.38030052 194.86174011]
[17.54972076 206.19132996]
[7.71913910 217.52093506]
[-2.11144161 228.85052490]
[-11.94202232 240.18011475]
[-21.77260399 251.50970459]
[-31.60318375 262.83929443]
[-41.43376541 274.16888428]
[-51.26434708 285.49847412]
[-60.49144363 297.32476807]
[-69.09001160 309.61560059]
[-77.68857574 321.90643311]
[-86.28713989 334.19726562]
[-94.88569641 346.48809814]
[-103.48426056 358.77896118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 210]
[43 209]
[44 208]
[45 207]
[46 206]
[47 205]
[55 204]
[56 203]
[57 202]
[58 201]
[59 200]
[60 199]
[61 198]
[62 197]
[63 196]
[64 195]
[65 193]
[66 192]
[67 191]
[73 188]
[75 186]
[76 185]
[77 156]
[78 155]
[79 154]
[80 153]
[81 148]
[82 147]
[83 146]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
