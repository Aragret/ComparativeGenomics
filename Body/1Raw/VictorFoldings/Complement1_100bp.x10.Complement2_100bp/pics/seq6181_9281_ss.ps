%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[45.44852829 820.39398193]
[30.45290184 820.85552979]
[15.45204067 820.61895752]
[0.47843206 819.68469238]
[-14.43549538 818.05474854]
[-29.25744057 815.73272705]
[-43.95530319 812.72363281]
[-58.49724960 809.03399658]
[-72.85178375 804.67175293]
[-86.98782349 799.64636230]
[-100.87474060 793.96881104]
[-114.48247528 787.65124512]
[-127.78153992 780.70739746]
[-140.74314880 773.15234375]
[-153.33921814 765.00244141]
[-165.54246521 756.27532959]
[-177.32646179 746.98992920]
[-188.66569519 737.16632080]
[-199.53559875 726.82574463]
[-209.91264343 715.99066162]
[-219.77433777 704.68450928]
[-229.09931946 692.93182373]
[-237.86741638 680.75799561]
[-246.05963135 668.18939209]
[-253.65820312 655.25323486]
[-260.64669800 641.97760010]
[-267.00997925 628.39117432]
[-272.73422241 614.52343750]
[-277.80709839 600.40435791]
[-282.21755981 586.06457520]
[-285.95611572 571.53515625]
[-289.01461792 556.84747314]
[-291.38644409 542.03344727]
[-293.06649780 527.12506104]
[-294.05108643 512.15466309]
[-294.33813477 497.15469360]
[-293.92697144 482.15759277]
[-292.81851196 467.19589233]
[-291.01516724 452.30194092]
[-288.52081299 437.50802612]
[-285.34088135 422.84616089]
[-281.48223877 408.34814453]
[-276.95324707 394.04534912]
[-271.76370239 379.96875000]
[-265.92486572 366.14883423]
[-259.44940186 352.61553955]
[-252.35127258 339.39819336]
[-244.64590454 326.52539062]
[-236.34997559 314.02502441]
[-227.48143005 301.92416382]
[-218.05949402 290.24899292]
[-208.10458374 279.02487183]
[-197.63822937 268.27603149]
[-186.68313599 258.02578735]
[-175.26298523 248.29632568]
[-163.40255737 239.10874939]
[-151.12750244 230.48291016]
[-138.46441650 222.43753052]
[-125.44074249 214.99000549]
[-112.08466339 208.15647888]
[-98.42511749 201.95175171]
[-84.49169159 196.38926697]
[-70.31455231 191.48104858]
[-55.92440796 187.23774719]
[-41.35242462 183.66854858]
[-26.63016510 180.78118896]
[-11.78951263 178.58190918]
[3.13739157 177.07546997]
[18.11821938 176.26515198]
[33.12052536 176.15269470]
[48.11181641 176.73835754]
[63.05962753 178.02084351]
[77.93157959 179.99740601]
[80.59737396 165.23619080]
[83.26316833 150.47497559]
[85.92897034 135.71376038]
[88.59476471 120.95253754]
[91.26055908 106.19132233]
[91.93034363 91.20628357]
[90.59210968 76.26609802]
[89.25387573 61.32591248]
[87.91564178 46.38572693]
[86.57740784 31.44554138]
[85.23917389 16.50535583]
[83.90093994 1.56517148]
[82.56270599 -13.37501335]
[67.58708191 -14.80518913]
[53.12931061 -18.96300507]
[39.68181229 -25.70685005]
[27.70260429 -34.80702591]
[17.59969521 -45.95359039]
[9.71718788 -58.76689529]
[4.32355547 -72.81051636]
[1.60250378 -87.60614014]
[1.64671052 -102.64983368]
[4.45467043 -117.42921448]
[9.93074512 -131.44090271]
[17.88842201 -144.20765686]
[28.05666351 -155.29464722]
[40.08914566 -164.32426453]
[53.57604599 -170.98896790]
[68.05800629 -175.06173706]
[83.04177094 -176.40386963]
[98.01700592 -174.96966553]
[112.47366333 -170.80795288]
[125.91934204 -164.06048584]
[137.89610291 -154.95707703]
[147.99600220 -143.80778503]
[155.87504578 -130.99235535]
[161.26489258 -116.94728088]
[163.98196411 -102.15092468]
[163.93370056 -87.10724640]
[161.12176514 -72.32862854]
[155.64190674 -58.31842041]
[147.68078613 -45.55381012]
[137.50955200 -34.46955490]
[125.47463989 -25.44318008]
[111.98594666 -18.78211975]
[97.50289154 -14.71324730]
[98.84112549 0.22693729]
[100.17935944 15.16712189]
[101.51759338 30.10730743]
[102.85582733 45.04749298]
[104.19406128 59.98767853]
[105.53229523 74.92786407]
[106.87052917 89.86804962]
[112.66385651 76.03195953]
[122.40148926 64.62238312]
[135.15530396 56.72680664]
[149.70970154 53.09778976]
[164.67742920 54.08122635]
[178.63186646 59.58338165]
[190.24296570 69.07981873]
[198.40402222 81.66541290]
[202.33718872 96.14056396]
[201.66758728 111.12561035]
[196.45901489 125.19226837]
[187.20794678 136.99978638]
[174.79611206 145.42276001]
[160.40653992 149.65835571]
[145.41075134 149.30287170]
[131.23805237 144.39018250]
[119.23928833 135.38853455]
[110.55811310 123.15590668]
[106.02177429 108.85711670]
[103.35597992 123.61833191]
[100.69018555 138.37954712]
[98.02439117 153.14076233]
[95.35859680 167.90197754]
[92.69279480 182.66320801]
[107.31667328 186.01342773]
[121.76884460 190.04040527]
[136.01800537 194.73542786]
[150.03330994 200.08830261]
[163.78437805 206.08744812]
[177.24145508 212.71986389]
[190.37538147 219.97120667]
[203.15769958 227.82574463]
[215.56076050 236.26649475]
[227.55766296 245.27514648]
[239.12245178 254.83221436]
[250.23007202 264.91699219]
[260.85647583 275.50762939]
[270.97863770 286.58117676]
[280.57461548 298.11370850]
[289.62365723 310.08016968]
[298.10617065 322.45471191]
[306.00375366 335.21047974]
[313.29931641 348.31988525]
[319.97705078 361.75454712]
[326.02252197 375.48532104]
[331.42260742 389.48248291]
[336.16561890 403.71572876]
[340.24130249 418.15426636]
[343.64077759 432.76675415]
[346.35675049 447.52160645]
[348.38330078 462.38681030]
[349.71606445 477.33023071]
[350.35211182 492.31948853]
[350.29010010 507.32208252]
[349.53015137 522.30554199]
[348.07391357 537.23742676]
[345.92453003 552.08538818]
[343.08670044 566.81726074]
[339.56649780 581.40118408]
[335.37161255 595.80548096]
[330.51110840 609.99908447]
[324.99548340 623.95111084]
[318.83670044 637.63146973]
[312.04812622 651.01043701]
[304.64443970 664.05908203]
[296.64166260 676.74914551]
[288.05715942 689.05310059]
[278.90951538 700.94439697]
[269.21850586 712.39715576]
[259.00515747 723.38665771]
[248.29156494 733.88909912]
[237.10096741 743.88171387]
[225.45756531 753.34283447]
[213.38658142 762.25201416]
[200.91418457 770.58990479]
[188.06735229 778.33850098]
[174.87393188 785.48101807]
[161.36248779 792.00201416]
[147.56228638 797.88726807]
[133.50321960 803.12408447]
[119.21572876 807.70111084]
[104.73076630 811.60852051]
[90.07968903 814.83770752]
[75.29424286 817.38177490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
