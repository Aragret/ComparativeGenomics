%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[77.57731628 189.71296692]
[82.20360565 175.43176270]
[88.18665314 161.66374207]
[95.47058868 148.53742981]
[103.98741150 136.17543030]
[113.65759277 124.69313049]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.61802673 85.79437256]
[65.13052368 75.06999207]
[54.64302444 64.34561157]
[44.15552521 53.62123489]
[39.12844086 52.21571350]
[35.50546265 49.31272507]
[33.62186432 45.69787979]
[33.45253754 42.17599487]
[23.45436668 30.99402046]
[13.45619392 19.81204605]
[3.45802236 8.63007164]
[-6.54014969 -2.55190277]
[-18.22858810 6.85460329]
[-30.38950539 15.64175415]
[-42.99011612 23.78586197]
[-55.99645615 31.26496887]
[-69.37345886 38.05891800]
[-83.08506775 44.14938736]
[-97.09430695 49.51996231]
[-111.36341858 54.15616608]
[-125.85393524 58.04549408]
[-140.52679443 61.17746735]
[-155.34242249 63.54364014]
[-170.26091003 65.13763428]
[-185.24201965 65.95515442]
[-200.24536133 65.99398804]
[-215.23049927 65.25404358]
[-230.15704346 63.73730469]
[-244.98472595 61.44786453]
[-259.67361450 58.39189911]
[-274.18405151 54.57764053]
[-288.47698975 50.01537323]
[-302.51385498 44.71739578]
[-316.25680542 38.69799423]
[-329.66879272 31.97339249]
[-342.71368408 24.56171989]
[-355.35629272 16.48295593]
[-367.56253052 7.75888109]
[-379.29949951 -1.58698606]
[-390.53558350 -11.52945137]
[-401.24044800 -22.04170990]
[-411.38528442 -33.09542465]
[-420.94268799 -44.66079712]
[-429.88693237 -56.70664597]
[-438.19387817 -69.20050049]
[-445.84115601 -82.10867310]
[-452.80816650 -95.39637756]
[-459.07608032 -109.02777863]
[-464.62802124 -122.96614075]
[-469.44900513 -137.17387390]
[-473.52609253 -151.61270142]
[-476.84823608 -166.24366760]
[-479.40649414 -181.02734375]
[-481.19396973 -195.92388916]
[-482.20584106 -210.89312744]
[-482.43939209 -225.89469910]
[-481.89398193 -240.88818359]
[-480.57110596 -255.83314514]
[-478.47430420 -270.68930054]
[-475.60922241 -285.41659546]
[-471.98361206 -299.97534180]
[-467.60723877 -314.32626343]
[-462.49188232 -328.43069458]
[-456.65136719 -342.25061035]
[-450.10137939 -355.74874878]
[-442.85964966 -368.88873291]
[-434.94564819 -381.63513184]
[-426.38070679 -393.95358276]
[-417.18795776 -405.81085205]
[-407.39218140 -417.17501831]
[-397.01971436 -428.01544189]
[-386.09860229 -438.30285645]
[-374.65826416 -448.00955200]
[-362.72949219 -457.10940552]
[-350.34451294 -465.57778931]
[-337.53668213 -473.39196777]
[-324.34051514 -480.53082275]
[-310.79159546 -486.97512817]
[-296.92648315 -492.70748901]
[-282.78250122 -497.71249390]
[-268.39782715 -501.97662354]
[-253.81118774 -505.48837280]
[-239.06195068 -508.23828125]
[-224.18986511 -510.21893311]
[-209.23503113 -511.42501831]
[-194.23774719 -511.85324097]
[-179.23844910 -511.50247192]
[-164.27757263 -510.37365723]
[-149.39546204 -508.46984863]
[-134.63221741 -505.79617310]
[-120.02764893 -502.35980225]
[-105.62113190 -498.17004395]
[-91.45149231 -493.23818970]
[-77.55693817 -487.57751465]
[-63.97492218 -481.20327759]
[-50.74206161 -474.13265991]
[-37.89403152 -466.38476562]
[-25.46546555 -457.98043823]
[-13.48986912 -448.94235229]
[-1.99952757 -439.29486084]
[8.97458363 -429.06399536]
[19.40288162 -418.27731323]
[29.25724983 -406.96389771]
[38.51112747 -395.15426636]
[47.13956070 -382.88021851]
[55.11929703 -370.17486572]
[62.42881775 -357.07247925]
[69.04842377 -343.60833740]
[74.96025848 -329.81878662]
[80.14839935 -315.74096680]
[84.59885406 -301.41281128]
[88.29962158 -286.87301636]
[91.24072266 -272.16070557]
[93.41423798 -257.31558228]
[94.81430054 -242.37763977]
[95.43714142 -227.38717651]
[95.28107452 -212.38459778]
[94.34652710 -197.41033936]
[92.63602448 -182.50476074]
[90.15415955 -167.70806885]
[86.90763855 -153.06011963]
[82.90520477 -138.60044861]
[78.15765381 -124.36798859]
[72.67778778 -110.40113831]
[66.48036194 -96.73754120]
[59.58210373 -83.41403198]
[52.00160217 -70.46652222]
[43.75928879 -57.92993164]
[34.87738800 -45.83804321]
[25.37984276 -34.22345734]
[15.29225636 -23.11748886]
[4.64182472 -12.55007458]
[14.63999653 -1.36810017]
[24.63816833 9.81387424]
[34.63634109 20.99584961]
[44.63451385 32.17782211]
[54.87990570 43.13373184]
[65.36740875 53.85811234]
[75.85490417 64.58248901]
[86.34240723 75.30686951]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[124.38197327 114.20562744]
[136.07736206 104.79428101]
[148.62648010 96.55564880]
[161.91217041 89.56665802]
[175.81037903 83.89256287]
[190.19134521 79.58634949]
[204.92077637 76.68821716]
[219.86116028 75.22522736]
[234.87300110 75.21104431]
[249.81613159 76.64579010]
[264.55102539 79.51608276]
[278.94009399 83.79510498]
[292.84899902 89.44291687]
[306.14788818 96.40678406]
[318.71255493 104.62168121]
[330.42568970 114.01091003]
[341.17797852 124.48680115]
[350.86895752 135.95153809]
[359.40817261 148.29808044]
[366.71591187 161.41114807]
[372.72393799 175.16830444]
[377.37612915 189.44110107]
[380.62905884 204.09626770]
[382.45233154 218.99697876]
[382.82897949 234.00408936]
[381.75546265 248.97750854]
[379.24179077 263.77740479]
[375.31143188 278.26559448]
[370.00109863 292.30682373]
[363.36035156 305.76995850]
[355.45123291 318.52932739]
[346.34753418 330.46575928]
[336.13430786 341.46783447]
[324.90692139 351.43280029]
[312.77014160 360.26766968]
[299.83734131 367.88986206]
[286.22927856 374.22830200]
[272.07296753 379.22375488]
[257.50061035 382.82955933]
[242.64826965 385.01211548]
[227.65461731 385.75100708]
[212.65965271 385.03930664]
[197.80337524 382.88369751]
[183.22450256 379.30432129]
[169.05915833 374.33456421]
[155.43960571 368.02081299]
[142.49299622 360.42205811]
[130.34022522 351.60925293]
[119.09477234 341.66464233]
[108.86161041 330.68112183]
[99.73629761 318.76119995]
[91.80403900 306.01623535]
[85.13890076 292.56515503]
[79.80310059 278.53356934]
[75.84647369 264.05255127]
[73.30596161 249.25723267]
[72.20527649 234.28578186]
[72.55470276 219.27801514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 153]
[7 152]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[17 145]
[18 144]
[19 143]
[20 142]
[21 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
