%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[63.98173141 580.11279297]
[50.95165634 587.55480957]
[37.45822906 594.11932373]
[23.56044388 599.77770996]
[9.31908035 604.50518799]
[-5.20359182 608.28112793]
[-19.94406700 611.08898926]
[-34.83788681 612.91650391]
[-49.81992722 613.75567627]
[-64.82466888 613.60284424]
[-79.78650665 612.45867920]
[-94.64001465 610.32818604]
[-109.32023621 607.22064209]
[-123.76297760 603.14965820]
[-137.90509033 598.13305664]
[-151.68473816 592.19274902]
[-165.04165649 585.35473633]
[-177.91743469 577.64892578]
[-190.25578308 569.10894775]
[-202.00273132 559.77221680]
[-213.10693359 549.67950439]
[-223.51982117 538.87500000]
[-233.19586182 527.40588379]
[-242.09274292 515.32238770]
[-250.17155457 502.67730713]
[-257.39700317 489.52590942]
[-263.73745728 475.92575073]
[-269.16519165 461.93627930]
[-273.65649414 447.61868286]
[-277.19171143 433.03555298]
[-279.75537109 418.25064087]
[-281.33630371 403.32861328]
[-281.92755127 388.33474731]
[-281.52655029 373.33459473]
[-280.13507080 358.39373779]
[-277.75915527 343.57748413]
[-274.40924072 328.95068359]
[-270.09994507 314.57723999]
[-264.85012817 300.52005005]
[-258.68270874 286.84054565]
[-251.62471008 273.59854126]
[-243.70695496 260.85198975]
[-234.96408081 248.65657043]
[-225.43432617 237.06565857]
[-215.15934753 226.12991333]
[-204.18408203 215.89715576]
[-192.55651855 206.41213989]
[-180.32751465 197.71633911]
[-167.55052185 189.84777832]
[-154.28143311 182.84085083]
[-140.57826233 176.72622681]
[-126.50092316 171.53060913]
[-112.11098480 167.27674866]
[-97.47136688 163.98321533]
[-82.64608765 161.66444397]
[-67.69996643 160.33053589]
[-52.69837189 159.98736572]
[-37.70689392 160.63641357]
[-22.79108620 162.27482605]
[-8.01617622 164.89546204]
[6.55322933 168.48686218]
[20.85342216 173.03330994]
[34.82187271 178.51492310]
[48.39749527 184.90774536]
[55.67072296 171.78904724]
[62.94395447 158.67036438]
[69.82336426 145.34092712]
[76.30286407 131.81259155]
[82.78235626 118.28424072]
[89.26185608 104.75589752]
[76.65917206 112.89053345]
[61.85013199 115.27639771]
[47.33031845 111.51142883]
[35.54657364 102.23007965]
[28.48466873 88.99643707]
[27.33465576 74.04058075]
[32.29033279 59.88285446]
[42.51657867 48.90907669]
[56.29009628 42.96851730]
[71.28980255 43.06227112]
[84.98798370 49.17453766]
[95.07626343 60.27529144]
[99.85457611 74.49385834]
[98.51721191 89.43575287]
[107.47791290 77.40637207]
[116.43860626 65.37699890]
[125.39929962 53.34762192]
[134.36000061 41.31824112]
[136.39894104 25.62897110]
[150.20695496 20.04433250]
[150.81262207 14.85971642]
[153.11610413 10.82892990]
[156.39360046 8.40547562]
[159.84616089 7.68986082]
[169.33506775 -3.92740250]
[178.82395935 -15.54466629]
[188.31286621 -27.16193008]
[197.80175781 -38.77919388]
[207.29066467 -50.39645767]
[196.71859741 -61.05709457]
[187.31880188 -72.76442719]
[179.19427490 -85.39019012]
[172.43403625 -98.79603577]
[167.11213684 -112.83509064]
[163.28689575 -127.35353851]
[161.00022888 -142.19230652]
[160.27719116 -157.18879700]
[161.12568665 -172.17872620]
[163.53643799 -186.99783325]
[167.48303223 -201.48376465]
[172.92221069 -215.47779846]
[179.79438782 -228.82661438]
[188.02427673 -241.38394165]
[197.52169800 -253.01222229]
[208.18258667 -263.58401489]
[219.89015198 -272.98352051]
[232.51611328 -281.10775757]
[245.92211914 -287.86767578]
[259.96130371 -293.18920898]
[274.47985840 -297.01409912]
[289.31866455 -299.30041504]
[304.31518555 -300.02310181]
[319.30508423 -299.17422485]
[334.12411499 -296.76312256]
[348.60995483 -292.81619263]
[362.60385132 -287.37664795]
[375.95251465 -280.50415039]
[388.50964355 -272.27395630]
[400.13769531 -262.77624512]
[410.70922852 -252.11511230]
[420.10845947 -240.40731812]
[428.23236084 -227.78115845]
[434.99197388 -214.37498474]
[440.31317139 -200.33567810]
[444.13772583 -185.81703186]
[446.42364502 -170.97816467]
[447.14596558 -155.98162842]
[446.29675293 -140.99176025]
[443.88528442 -126.17276001]
[439.93798828 -111.68702698]
[434.49813843 -97.69325256]
[427.62530518 -84.34477234]
[419.39480591 -71.78783417]
[409.89682007 -60.16002655]
[399.23541260 -49.58874130]
[387.52737427 -40.18980408]
[374.90103149 -32.06619644]
[361.49468994 -25.30692863]
[347.45526123 -19.98605537]
[332.93652344 -16.16187477]
[318.09759521 -13.87628746]
[303.10104370 -13.15433598]
[288.11117554 -14.00392914]
[273.29226685 -16.41576004]
[258.80661011 -20.36340141]
[244.81297302 -25.80360222]
[231.46466064 -32.67675781]
[218.90792847 -40.90755844]
[209.41902161 -29.29029465]
[199.93013000 -17.67303085]
[190.44122314 -6.05576754]
[180.95233154 5.56149578]
[171.46342468 17.17875862]
[162.23632812 29.00502968]
[160.83831787 43.83387756]
[146.38937378 50.27893829]
[137.42868042 62.30831528]
[128.46798706 74.33769226]
[119.50728607 86.36707306]
[110.54659271 98.39644623]
[102.79019928 111.23538971]
[96.31070709 124.76373291]
[89.83120728 138.29208374]
[83.35171509 151.82041931]
[83.83934021 156.13507080]
[83.01184845 159.99250793]
[81.17446136 163.03543091]
[78.71707153 165.04238892]
[76.06264496 165.94358826]
[68.78942108 179.06228638]
[61.51618958 192.18098450]
[74.13024902 200.30816650]
[86.17959595 209.25126648]
[97.61154175 218.97116089]
[108.37609863 229.42533875]
[118.42618561 240.56811523]
[127.71787262 252.35073853]
[136.21052551 264.72171021]
[143.86698914 277.62689209]
[150.65380859 291.00991821]
[156.54129028 304.81219482]
[161.50369263 318.97341919]
[165.51931763 333.43164062]
[168.57061768 348.12365723]
[170.64422607 362.98522949]
[171.73109436 377.95132446]
[171.82646179 392.95654297]
[170.92991638 407.93527222]
[169.04536438 422.82199097]
[166.18106079 437.55160522]
[162.34953308 452.05969238]
[157.56753540 466.28283691]
[151.85595703 480.15887451]
[145.23980713 493.62704468]
[137.74798584 506.62854004]
[129.41326904 519.10644531]
[120.27209473 531.00622559]
[110.36444855 542.27581787]
[99.73364258 552.86602783]
[88.42617035 562.73040771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 181]
[65 180]
[66 179]
[67 174]
[68 173]
[69 172]
[70 171]
[84 170]
[85 169]
[86 168]
[87 167]
[88 166]
[90 164]
[94 163]
[95 162]
[96 161]
[97 160]
[98 159]
[99 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
