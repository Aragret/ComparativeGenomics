%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[86.76695251 520.32037354]
[71.83303833 518.52655029]
[57.45947266 514.09478760]
[44.10831833 507.16754150]
[32.20875549 497.96755981]
[22.14330864 486.79049683]
[14.23553562 473.99569702]
[8.73964214 459.99444580]
[5.83229685 445.23684692]
[5.60695982 430.19726562]
[8.07087421 415.35916138]
[13.14483547 401.19955444]
[20.66573715 388.17358398]
[30.39181328 376.69998169]
[42.01041031 367.14761353]
[55.14803696 359.82351685]
[69.38237762 354.96310425]
[84.25585175 352.72268677]
[84.70245361 337.72933960]
[85.14906311 322.73599243]
[77.79412842 309.78399658]
[85.93888092 296.22030640]
[86.38549042 281.22695923]
[86.83209229 266.23361206]
[79.47716522 253.28160095]
[87.62191772 239.71792603]
[78.48323059 224.73622131]
[88.29103851 209.15133667]
[88.51436615 194.15299988]
[85.88980103 190.16293335]
[85.74391174 184.48175049]
[88.97427368 178.71319580]
[89.64405823 163.72814941]
[90.31384277 148.74311829]
[90.98362732 133.75807190]
[83.82234955 120.69801331]
[92.16814423 107.25709534]
[91.27532959 92.28368378]
[88.82959747 77.48441315]
[86.38387299 62.68514633]
[83.93814087 47.88587570]
[81.49241638 33.08660507]
[79.04669189 18.28733253]
[76.60095978 3.48806214]
[72.22059631 17.83422661]
[65.16122437 31.06922531]
[55.68675613 42.69826126]
[44.15140533 52.28657150]
[30.98643112 59.47569275]
[16.68401527 63.99685287]
[1.77886355 65.68103027]
[-13.17178440 64.46524811]
[-27.60898781 60.39496994]
[-40.99300003 53.62236404]
[-52.82345200 44.40062714]
[-62.65805054 33.07452393]
[-70.12912750 20.06748581]
[-74.95736694 5.86579084]
[-76.96225739 -8.99961853]
[-76.06885529 -23.97299004]
[-72.31055450 -38.49452972]
[-65.82785797 -52.02134323]
[-56.86313248 -64.04772186]
[-45.75153351 -74.12404633]
[-32.90846634 -81.87360382]
[-18.81408691 -87.00667572]
[-3.99532032 -89.33135986]
[10.99382210 -88.76074982]
[25.59296036 -85.31616211]
[39.25629807 -79.12639618]
[51.47301483 -70.42284393]
[61.78638458 -59.53089905]
[69.81082916 -46.85776901]
[75.24636078 -32.87724686]
[77.88926697 -18.11808205]
[82.07627869 -32.52186584]
[86.26329041 -46.92564774]
[85.65369415 -56.03971481]
[90.62134552 -61.51184464]
[95.02234650 -75.85169220]
[89.67981720 -87.59137726]
[93.64063263 -99.44446564]
[104.26416016 -105.22955322]
[108.87817383 -119.50228119]
[113.49217987 -133.77502441]
[118.10619354 -148.04774475]
[117.01158905 -153.15156555]
[117.89576721 -157.70915222]
[120.21928406 -161.05822754]
[123.25804901 -162.84658813]
[128.50476074 -176.89906311]
[133.75148010 -190.95153809]
[138.99819946 -205.00401306]
[144.24491882 -219.05648804]
[149.49163818 -233.10894775]
[153.13972473 -247.65856934]
[155.14373779 -262.52410889]
[157.14775085 -277.38961792]
[159.15176392 -292.25515747]
[145.28482056 -298.22259521]
[133.54281616 -307.71090698]
[124.79710388 -320.01599121]
[119.69665527 -334.22473145]
[118.61997223 -349.28271484]
[121.64693451 -364.07260132]
[128.55293274 -377.49679565]
[138.82550049 -388.55923462]
[151.70233154 -396.43893433]
[166.22789001 -400.55117798]
[181.32427979 -400.59085083]
[195.87126160 -396.55499268]
[208.78932190 -388.74307251]
[219.11987305 -377.73477173]
[226.09632874 -364.34704590]
[229.20097351 -349.57327271]
[228.20343018 -334.50982666]
[223.17773438 -320.27450562]
[214.49679565 -307.92361450]
[202.80482483 -298.37374878]
[188.96942139 -292.33349609]
[174.01728821 -290.25112915]
[172.01327515 -275.38562012]
[170.00926208 -260.52008057]
[168.00524902 -245.65455627]
[177.10310364 -257.58053589]
[189.85655212 -265.47671509]
[204.58764648 -268.30422974]
[219.35826111 -265.69104004]
[232.22508240 -257.98098755]
[241.49525452 -246.18846130]
[245.94911194 -231.86494446]
[245.00068665 -216.89495850]
[238.77474976 -203.24806213]
[228.09045410 -192.71972656]
[214.35346985 -186.69515991]
[199.37115479 -185.96699524]
[185.11468506 -190.63101196]
[173.45974731 -200.07359314]
[165.93974304 -213.05239868]
[163.54411316 -227.86222839]
[158.29739380 -213.80976868]
[153.05067444 -199.75729370]
[147.80395508 -185.70481873]
[142.55723572 -171.65234375]
[137.31051636 -157.59988403]
[132.37892151 -143.43374634]
[127.76491547 -129.16101074]
[123.15090179 -114.88827515]
[118.53689575 -100.61553955]
[123.13043213 -83.67841339]
[109.36219025 -71.45069885]
[104.96119690 -57.11084747]
[100.66706848 -42.73863602]
[96.48005676 -28.33485222]
[92.29304504 -13.93107128]
[91.40023041 1.04233479]
[93.84596252 15.84160519]
[96.29168701 30.64087677]
[98.73741150 45.44014740]
[101.18314362 60.23941803]
[103.62886810 75.03868866]
[106.07460022 89.83795929]
[111.48526001 75.84779358]
[121.78211975 64.94023895]
[135.43769836 58.73337173]
[150.42626953 58.14793777]
[164.52436829 63.27078629]
[175.64062500 73.34197235]
[182.12602234 86.86749268]
[183.01846313 101.84091949]
[178.18557739 116.04103851]
[168.34429932 127.36133575]
[154.95451355 134.12251282]
[140.00251770 135.32160950]
[125.70635223 130.78071594]
[114.18676758 121.17347717]
[107.15318298 107.92687988]
[114.26655579 122.05877686]
[105.96866608 134.42785645]
[105.29888153 149.41290283]
[104.62909698 164.39793396]
[103.95931244 179.38298035]
[103.51271057 194.37632751]
[103.28938293 209.37466431]
[111.69650269 219.15644836]
[111.20172119 231.64399719]
[102.61526489 240.16452026]
[109.93825531 254.18894958]
[101.82544708 266.68020630]
[101.37883759 281.67355347]
[100.93223572 296.66690063]
[108.25521851 310.69134521]
[100.14241028 323.18258667]
[99.69580841 338.17593384]
[99.24919891 353.16928101]
[113.96295166 356.29104614]
[127.88275909 361.99005127]
[140.56115723 370.08312988]
[151.59059143 380.31011963]
[160.61650085 392.34228516]
[167.34873962 405.79281616]
[171.57092285 420.22933960]
[173.14727783 435.18777466]
[172.02717590 450.18725586]
[168.24659729 464.74566650]
[161.92707825 478.39495850]
[153.27175903 490.69641113]
[142.55888367 501.25454712]
[130.13282776 509.72994995]
[116.39302826 515.85021973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 195]
[19 194]
[20 193]
[22 191]
[23 190]
[24 189]
[26 187]
[28 184]
[29 183]
[32 182]
[33 181]
[34 180]
[35 179]
[37 177]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[44 156]
[75 155]
[76 154]
[77 153]
[79 152]
[80 151]
[83 149]
[84 148]
[85 147]
[86 146]
[90 145]
[91 144]
[92 143]
[93 142]
[94 141]
[95 140]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
