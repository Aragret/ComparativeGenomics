%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[154.21997070 532.59008789]
[149.66574097 518.28930664]
[146.29232788 503.66491699]
[144.12216187 488.81420898]
[143.16970825 473.83605957]
[143.44128418 458.83007812]
[144.93508911 443.89617920]
[147.64118958 429.13372803]
[151.54156494 414.64099121]
[156.61026001 400.51437378]
[162.81355286 386.84793091]
[170.11016846 373.73257446]
[178.45152283 361.25561523]
[187.78211975 349.50006104]
[198.03985596 338.54418945]
[209.15647888 328.46084595]
[200.01766968 316.56622314]
[190.87887573 304.67156982]
[181.74006653 292.77694702]
[169.79078674 290.89511108]
[162.07975769 281.06027222]
[163.16995239 268.20825195]
[154.20925903 256.17889404]
[145.24856567 244.14950562]
[136.28787231 232.12013245]
[138.95115662 246.88180542]
[137.91065979 261.84567261]
[133.23002625 276.09667969]
[125.19544983 288.76339722]
[114.29827881 299.07125854]
[101.20485687 306.38989258]
[86.71586609 310.27175903]
[71.71730804 310.47952271]
[57.12634277 307.00048828]
[43.83522415 300.04733276]
[32.65670776 290.04528809]
[24.27436066 277.60598755]
[19.20076752 263.49008179]
[17.74618149 248.56079102]
[19.99954987 233.73100281]
[25.82307816 219.90760803]
[34.86065674 207.93588257]
[46.55963516 198.54791260]
[60.20461273 192.31777954]
[74.96119690 189.62644958]
[89.92701721 190.63851929]
[104.18690491 195.29206848]
[116.86886597 203.30256653]
[127.19740295 214.18016052]
[122.79640961 199.84030151]
[118.39540863 185.50045776]
[113.99441528 171.16061401]
[109.59341431 156.82077026]
[97.47615051 157.56964111]
[85.47090149 155.76322937]
[74.11054993 151.48173523]
[63.89931488 144.91517639]
[55.29043579 136.35502625]
[48.66603088 126.18122864]
[44.32012558 114.84535980]
[42.44561386 102.85056305]
[43.12569809 90.72924042]
[46.33019638 79.01940918]
[51.91687012 68.24081421]
[59.63775253 58.87188339]
[69.15014648 51.32845306]
[80.03182983 45.94534683]
[76.70957184 31.31788635]
[73.38731384 16.69042778]
[70.06505585 2.06296682]
[66.74279022 -12.56449318]
[63.42053604 -27.19195366]
[53.33961487 -16.08452034]
[38.36116409 -16.88825226]
[29.52673531 -29.01066589]
[33.34874344 -43.51556778]
[47.00974655 -49.71048737]
[60.43833923 -43.03005981]
[58.21322250 -57.86410141]
[46.41118622 -71.99893188]
[53.46637344 -88.06726074]
[51.02064514 -102.86653137]
[48.57491684 -117.66580200]
[33.53545761 -117.89904022]
[18.77937317 -120.81413269]
[4.78101492 -126.31738281]
[-8.00963020 -134.23187256]
[-19.18139648 -144.30319214]
[-28.37515450 -156.20758057]
[-35.29536819 -169.56237793]
[-39.71957397 -183.93826294]
[-41.50555801 -198.87312317]
[-40.59590912 -213.88685608]
[-37.01986313 -228.49684143]
[-30.89237976 -242.23342896]
[-22.41043091 -254.65502930]
[-11.84667492 -265.36236572]
[0.45930603 -274.01119995]
[14.11192608 -280.32354736]
[28.67230797 -284.09649658]
[43.67240143 -285.20874023]
[58.63000488 -283.62451172]
[73.06430817 -279.39474487]
[86.51129150 -272.65542603]
[98.53870392 -263.62319946]
[108.75990295 -252.58840942]
[116.84632874 -239.90576172]
[122.53803253 -225.98297119]
[125.65204620 -211.26757812]
[126.08827209 -196.23263550]
[123.83268738 -181.36145020]
[118.95779419 -167.13208008]
[111.62030029 -154.00192261]
[102.05608368 -142.39306641]
[90.57259369 -132.67868042]
[77.53897095 -125.17105865]
[63.37418747 -120.11153412]
[65.81991577 -105.31226349]
[68.26564026 -90.51299286]
[77.91346741 -83.21600342]
[80.07216644 -70.90650177]
[73.04726410 -60.08921814]
[75.27238464 -45.25517654]
[78.04799652 -30.51421356]
[81.37025452 -15.88675308]
[84.69251251 -1.25929272]
[88.01477051 13.36816788]
[91.33703613 27.99562836]
[94.65929413 42.62308884]
[112.51784515 43.75111771]
[129.16934204 50.30308914]
[143.00810242 61.64720917]
[152.69969177 76.68959808]
[157.30960083 93.97974396]
[156.39326477 111.85041809]
[150.03907776 128.57838440]
[138.85974121 142.55059814]
[123.93325806 152.41976929]
[128.33425903 166.75961304]
[132.73526001 181.09945679]
[137.13626099 195.43931580]
[141.53724670 209.77915955]
[148.31724548 223.15943909]
[157.27793884 235.18881226]
[166.23863220 247.21818542]
[175.19932556 259.24755859]
[192.27412415 266.14199829]
[193.63470459 283.63815308]
[202.77349854 295.53277588]
[211.91230774 307.42742920]
[221.05110168 319.32205200]
[233.65795898 311.17831421]
[246.88664246 304.08929443]
[260.64913940 298.10211182]
[274.85388184 293.25662231]
[289.40628052 289.58508301]
[304.20953369 287.11193848]
[319.16510010 285.85360718]
[334.17349243 285.81851196]
[349.13479614 287.00686646]
[363.94946289 289.41076660]
[378.51889038 293.01419067]
[392.74612427 297.79318237]
[406.53646851 303.71594238]
[419.79815674 310.74304199]
[432.44296265 318.82769775]
[444.38668823 327.91613770]
[455.54989624 337.94787598]
[465.85827637 348.85614014]
[475.24322510 360.56835938]
[483.64227295 373.00656128]
[490.99951172 386.08798218]
[497.26605225 399.72555542]
[502.40011597 413.82852173]
[506.36758423 428.30307007]
[509.14199829 443.05282593]
[510.70495605 457.97964478]
[511.04602051 472.98419189]
[510.16293335 487.96661377]
[508.06158447 502.82720947]
[504.75592041 517.46704102]
[500.26797485 531.78875732]
[494.62762451 545.69702148]
[487.87234497 559.09918213]
[480.04714966 571.90618896]
[471.20410156 584.03271484]
[461.40203857 595.39813232]
[450.70617676 605.92675781]
[439.18774414 615.54852295]
[426.92337036 624.19940186]
[413.99465942 631.82183838]
[400.48767090 638.36511230]
[386.49230957 643.78558350]
[372.10165405 648.04736328]
[357.41152954 651.12188721]
[342.51968384 652.98883057]
[327.52520752 653.63574219]
[312.52789307 653.05828857]
[297.62756348 651.26031494]
[282.92333984 648.25384521]
[268.51312256 644.05883789]
[254.49278259 638.70318604]
[240.95564270 632.22253418]
[227.99177551 624.66003418]
[215.68745422 616.06604004]
[204.12458801 606.49774170]
[193.38009644 596.01879883]
[183.52549744 584.69891357]
[174.62638855 572.61340332]
[166.74195862 559.84283447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 151]
[17 150]
[18 149]
[19 148]
[22 146]
[23 145]
[24 144]
[25 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[78 123]
[79 122]
[81 119]
[82 118]
[83 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
