%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[91.44567871 636.85284424]
[104.41407776 628.96710205]
[101.74828339 614.20587158]
[99.08248901 599.44470215]
[96.41669464 584.68347168]
[93.75090027 569.92224121]
[87.62922668 583.61621094]
[75.90216827 592.96911621]
[61.18958282 595.89141846]
[46.77829742 591.73028564]
[35.88783264 581.41534424]
[30.95114326 567.25097656]
[33.07109833 552.40155029]
[41.77409744 540.18444824]
[55.11586380 533.32897949]
[70.11581421 533.36669922]
[83.42292786 540.28918457]
[92.06436157 552.54998779]
[91.84103394 537.55163574]
[91.61770630 522.55328369]
[91.39437866 507.55496216]
[91.17105103 492.55661011]
[90.16678619 477.59027100]
[88.38432312 462.69656372]
[86.60185242 447.80285645]
[84.81938934 432.90911865]
[83.03692627 418.01541138]
[73.84204865 406.29776001]
[79.88464355 391.67593384]
[73.85468292 405.41052246]
[63.08104324 415.84744263]
[49.16193771 421.43835449]
[34.16217422 421.35394287]
[20.30688286 415.60668945]
[9.65141201 405.04916382]
[3.77643824 391.24755859]
[3.55347848 376.24920654]
[9.01560783 362.27905273]
[19.35255051 351.40948486]
[33.03088379 345.25292969]
[48.02151108 344.72268677]
[62.10065460 349.89739990]
[73.17976379 360.00942993]
[79.61484528 373.55688477]
[80.95307922 358.61669922]
[82.29131317 343.67651367]
[83.62954712 328.73632812]
[84.96778107 313.79614258]
[86.30601501 298.85595703]
[76.58823395 287.62652588]
[77.73256683 272.45599365]
[89.57691956 262.33923340]
[90.35824585 247.35958862]
[90.58157349 232.36125183]
[90.80490112 217.36291504]
[91.02822876 202.36457825]
[80.50215149 191.88900757]
[80.51498413 176.67538452]
[91.57408142 165.70570374]
[91.79740906 150.70735168]
[92.02073669 135.70901489]
[92.24406433 120.71068573]
[92.46739197 105.71234894]
[89.76093292 101.21912384]
[89.76460266 95.52937317]
[92.92729950 90.27253723]
[93.59708405 75.28749847]
[90.89424896 69.25374603]
[91.54640961 63.60824203]
[94.51648712 59.86823273]
[95.63213348 44.90977859]
[96.74777985 29.95132446]
[97.86343384 14.99287128]
[98.97908020 0.03441783]
[100.09472656 -14.92403603]
[101.21038055 -29.88248825]
[101.99169922 -44.86212540]
[102.43830872 -59.85547638]
[95.11531830 -73.87989807]
[103.22812653 -86.37116241]
[103.67473602 -101.36450958]
[100.80221558 -110.03552246]
[104.24125671 -116.57730103]
[104.91104126 -131.56233215]
[105.58082581 -146.54737854]
[95.49319458 -164.00022888]
[106.59721375 -179.83020020]
[99.06623077 -193.74403381]
[106.99216461 -206.35470581]
[107.21549225 -221.35304260]
[107.43881989 -236.35137939]
[99.90784454 -250.26521301]
[107.83377075 -262.87588501]
[97.10618591 -274.16998291]
[97.54632568 -289.37722778]
[108.37963104 -299.53475952]
[108.60295868 -314.53308105]
[108.82628632 -329.53143311]
[94.74566650 -335.19717407]
[83.66526031 -345.56967163]
[77.08358765 -359.24615479]
[75.89078522 -374.37698364]
[80.24814606 -388.91583252]
[89.56639862 -400.89642334]
[102.58530426 -408.69848633]
[117.54417419 -411.26690674]
[132.41993713 -408.25424194]
[145.20077515 -400.06802368]
[154.15818787 -387.81527710]
[158.08074951 -373.15316772]
[156.43795776 -358.06457520]
[149.45201111 -344.59011841]
[138.06768799 -334.55209351]
[123.82462311 -329.30810547]
[123.60129547 -314.30975342]
[123.37796783 -299.31143188]
[133.90403748 -288.83587646]
[133.89122009 -273.62225342]
[122.83211517 -262.65255737]
[130.37905884 -249.81149292]
[122.43715668 -236.12805176]
[122.21382904 -221.12971497]
[121.99050140 -206.13137817]
[129.53746033 -193.29031372]
[121.59555054 -179.60687256]
[129.34324646 -172.94458008]
[132.20495605 -162.90670776]
[129.00361633 -152.74148560]
[120.56586456 -145.87759399]
[119.89608002 -130.89254761]
[119.22629547 -115.90751648]
[118.66808319 -100.91790771]
[118.22147369 -85.92455292]
[125.57640839 -72.97255707]
[117.43165588 -59.40887070]
[116.98504639 -44.41551971]
[119.12380219 -41.61229324]
[120.01104736 -37.63387299]
[119.10922241 -33.07975006]
[116.16883087 -28.76683998]
[115.05318451 -13.80838680]
[113.93753052 1.15006649]
[112.82188416 16.10852051]
[111.70623779 31.06697273]
[110.59059143 46.02542496]
[109.47493744 60.98387909]
[108.58212280 75.95728302]
[107.91233826 90.94232178]
[107.46572876 105.93567657]
[107.24240112 120.93401337]
[107.01907349 135.93234253]
[106.79574585 150.93067932]
[106.57241821 165.92903137]
[117.30001068 177.22311401]
[116.85987091 192.43038940]
[106.02656555 202.58790588]
[105.80323792 217.58624268]
[105.57991028 232.58457947]
[105.35658264 247.58291626]
[117.77391052 239.16804504]
[132.13967896 243.48367310]
[137.86398315 257.34844971]
[130.72708130 270.54180908]
[115.99002075 273.33807373]
[104.51710510 263.67745972]
[114.37496948 275.73815918]
[112.80497742 290.87054443]
[101.24620056 300.19418335]
[99.90796661 315.13436890]
[98.56973267 330.07455444]
[97.23149872 345.01473999]
[95.89326477 359.95492554]
[94.55503082 374.89511108]
[94.77835846 389.89346313]
[104.10072327 402.67642212]
[97.93064117 416.23294067]
[99.71310425 431.12664795]
[101.49557495 446.02038574]
[103.27803802 460.91409302]
[105.06050873 475.80780029]
[114.26239777 463.96191406]
[128.89884949 460.67947388]
[142.27825928 467.46115112]
[148.28375244 481.20648193]
[144.16969299 495.63128662]
[131.81697083 504.14071655]
[116.87309265 502.84439087]
[106.16938782 492.33328247]
[106.39271545 507.33163452]
[106.61604309 522.32995605]
[106.83937073 537.32830811]
[107.06269836 552.32666016]
[108.51211548 567.25646973]
[111.17790985 582.01763916]
[113.84370422 596.77886963]
[116.50949860 611.54010010]
[119.17530060 626.30133057]
[134.08279419 629.15283203]
[146.95144653 637.20031738]
[156.04090881 649.35540771]
[160.12187195 663.97424316]
[158.64244080 679.07971191]
[151.80268860 692.62896729]
[140.52764893 702.78955078]
[126.34214783 708.18737793]
[111.16468048 708.09234619]
[97.04787445 702.51739502]
[85.90090942 692.21643066]
[79.23131561 678.58264160]
[77.94110870 663.45977783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[29 174]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[52 165]
[53 159]
[54 158]
[55 157]
[56 156]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[66 148]
[67 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 136]
[78 135]
[80 133]
[81 132]
[83 131]
[84 130]
[85 129]
[87 125]
[89 123]
[90 122]
[91 121]
[93 119]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
