%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[64.43564606 479.09820557]
[55.67680740 491.28659058]
[45.91587067 502.68826294]
[35.22315979 513.22106934]
[23.67571831 522.80908203]
[11.35674953 531.38330078]
[-1.64498782 538.88183594]
[-15.23581505 545.25079346]
[-29.31780624 550.44415283]
[-43.78950119 554.42462158]
[-58.54663086 557.16345215]
[-73.48286438 558.64086914]
[-88.49057770 558.84625244]
[-103.46165466 557.77819824]
[-118.28821564 555.44433594]
[-132.86343384 551.86145020]
[-147.08229065 547.05541992]
[-160.84234619 541.06091309]
[-174.04444885 533.92095947]
[-186.59347534 525.68713379]
[-198.39901733 516.41876221]
[-209.37600708 506.18258667]
[-219.44535828 495.05233765]
[-228.53450012 483.10827637]
[-236.57797241 470.43640137]
[-243.51780701 457.12802124]
[-249.30400085 443.27905273]
[-253.89488220 428.98928833]
[-257.25732422 414.36163330]
[-259.36715698 399.50155640]
[-260.20916748 384.51605225]
[-259.77725220 369.51315308]
[-258.07455444 354.60092163]
[-255.11332703 339.88681030]
[-250.91491699 325.47683716]
[-245.50956726 311.47485352]
[-238.93623352 297.98168945]
[-231.24227905 285.09460449]
[-222.48312378 272.90646362]
[-212.72189331 261.50503540]
[-202.02891541 250.97251892]
[-190.48121643 241.38478088]
[-178.16203308 232.81091309]
[-165.16009521 225.31266785]
[-151.56910706 218.94409180]
[-137.48698425 213.75105286]
[-123.01518250 209.77099609]
[-108.25798798 207.03257751]
[-93.32171631 205.55552673]
[-78.31398773 205.35049438]
[-63.34294510 206.41896057]
[-48.51644516 208.75320435]
[-33.94131851 212.33644104]
[-19.72258186 217.14283752]
[-5.96268368 223.13775635]
[7.23923492 230.27799988]
[15.46804237 217.73660278]
[23.69684982 205.19520569]
[31.92565918 192.65379333]
[32.96679306 185.33685303]
[40.37150574 179.98818970]
[48.78612518 167.57069397]
[49.52060699 152.69421387]
[63.66734695 145.61041260]
[72.08196259 133.19291687]
[80.49658203 120.77541351]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[111.46632385 58.69734955]
[96.99566650 62.64706039]
[83.90266418 55.32768631]
[79.68757629 40.93209457]
[86.76499939 27.70673561]
[101.08066559 23.22769737]
[114.43390656 30.06077385]
[119.17544556 44.29072189]
[126.83604431 31.39439392]
[134.49664307 18.49806786]
[142.15724182 5.60174084]
[149.81784058 -7.29458618]
[157.47843933 -20.19091225]
[165.13902283 -33.08723831]
[172.79962158 -45.98356628]
[180.46022034 -58.87989426]
[188.12081909 -71.77622223]
[195.39405823 -84.89491272]
[202.27346802 -98.22434235]
[209.15287781 -111.55377197]
[216.03228760 -124.88320160]
[222.91169739 -138.21263123]
[218.33644104 -153.10238647]
[225.50303650 -166.52232361]
[239.72633362 -170.79237366]
[246.60574341 -184.12179565]
[253.48515320 -197.45123291]
[260.36456299 -210.78065491]
[248.02842712 -219.35238647]
[236.91668701 -229.46099854]
[227.21949768 -240.93356323]
[219.10278320 -253.57374573]
[212.70544434 -267.16525269]
[208.13694763 -281.47552490]
[205.47544861 -296.25967407]
[204.76649475 -311.26473999]
[206.02223206 -326.23400879]
[209.22114563 -340.91125488]
[214.30853271 -355.04537964]
[221.19731140 -368.39453125]
[229.76962280 -380.73025513]
[239.87878418 -391.84152222]
[251.35179138 -401.53817749]
[263.99237061 -409.65426636]
[277.58416748 -416.05096436]
[291.89465332 -420.61880493]
[306.67895508 -423.27957153]
[321.68405151 -423.98782349]
[336.65322876 -422.73138428]
[351.33035278 -419.53173828]
[365.46423340 -414.44369507]
[378.81304932 -407.55429077]
[391.14837646 -398.98138428]
[402.25915527 -388.87170410]
[411.95526123 -377.39822388]
[420.07077026 -364.75726318]
[426.46679688 -351.16516113]
[431.03393555 -336.85446167]
[433.69403076 -322.07003784]
[434.40155029 -307.06488037]
[433.14440918 -292.09576416]
[429.94409180 -277.41882324]
[424.85534668 -263.28518677]
[417.96530151 -249.93667603]
[409.39181519 -237.60176086]
[399.28161621 -226.49147034]
[387.80764771 -216.79591370]
[375.16632080 -208.68101501]
[361.57391357 -202.28561401]
[347.26300049 -197.71914673]
[332.47845459 -195.05976868]
[317.47326660 -194.35295105]
[302.50421143 -195.61082458]
[287.82739258 -198.81184387]
[273.69400024 -203.90124512]
[266.81457520 -190.57180786]
[259.93518066 -177.24238586]
[253.05575562 -163.91294861]
[257.81512451 -149.84582520]
[251.02830505 -136.22988892]
[236.24113464 -131.33322144]
[229.36172485 -118.00379181]
[222.48229980 -104.67436218]
[215.60289001 -91.34493256]
[208.72348022 -78.01550293]
[209.44636536 -75.30707550]
[209.13995361 -72.14910889]
[207.62765503 -68.93222046]
[204.87741089 -66.10366821]
[201.01715088 -64.11562347]
[193.35655212 -51.21929550]
[185.69595337 -38.32296753]
[178.03535461 -25.42664337]
[170.37475586 -12.53031540]
[162.71415710 0.36601129]
[155.05355835 13.26233864]
[147.39295959 26.15866470]
[139.73237610 39.05499268]
[132.07177734 51.95132065]
[124.99466705 65.17684937]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[114.70558167 107.14532471]
[129.70129395 107.50364685]
[142.55998230 115.22726440]
[149.92041016 128.29724121]
[149.85856628 143.29711914]
[142.39062500 156.30595398]
[129.46868896 163.92327881]
[114.47052765 164.15794373]
[101.31661224 156.94860840]
[93.44535065 144.17976379]
[92.91407776 129.19003296]
[84.49945831 141.60752869]
[76.08484650 154.02502441]
[74.74848938 169.78968811]
[61.20362091 175.98532104]
[52.78900146 188.40281677]
[44.46706009 200.88261414]
[36.23825073 213.42401123]
[28.00944328 225.96540833]
[19.78063583 238.50680542]
[31.58641434 247.77490234]
[42.56366730 258.01080322]
[52.63330078 269.14077759]
[61.72275925 281.08462524]
[69.76655579 293.75628662]
[76.70674133 307.06448364]
[82.49329376 320.91329956]
[87.08452606 335.20294189]
[90.44736481 349.83050537]
[92.55757904 364.69055176]
[93.39995575 379.67599487]
[92.96843719 394.67892456]
[91.26612091 409.59121704]
[88.30527496 424.30538940]
[84.10723877 438.71545410]
[78.70225525 452.71762085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 194]
[57 193]
[58 192]
[59 191]
[61 190]
[62 189]
[64 187]
[65 186]
[66 185]
[67 174]
[69 172]
[70 171]
[71 170]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
[87 160]
[88 155]
[89 154]
[90 153]
[91 152]
[92 151]
[95 148]
[96 147]
[97 146]
[98 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
