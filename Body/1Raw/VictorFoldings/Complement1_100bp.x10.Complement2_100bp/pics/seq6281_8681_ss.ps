%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[5.06905508 705.62054443]
[-8.91974640 711.04498291]
[-23.18170547 715.70410156]
[-37.67498779 719.58428955]
[-52.35708237 722.67407227]
[-67.18492889 724.96453857]
[-82.11502075 726.44879150]
[-97.10358429 727.12261963]
[-112.10663605 726.98400879]
[-127.08018494 726.03332520]
[-141.98030090 724.27337646]
[-156.76329041 721.70935059]
[-171.38578796 718.34869385]
[-185.80488586 714.20135498]
[-199.97830200 709.27947998]
[-213.86448669 703.59747314]
[-227.42266846 697.17199707]
[-240.61309814 690.02197266]
[-253.39709473 682.16827393]
[-265.73715210 673.63397217]
[-277.59707642 664.44415283]
[-288.94204712 654.62567139]
[-299.73886108 644.20739746]
[-309.95578003 633.21990967]
[-319.56286621 621.69537354]
[-328.53195190 609.66760254]
[-336.83670044 597.17193604]
[-344.45275879 584.24499512]
[-351.35778809 570.92462158]
[-357.53155518 557.25000000]
[-362.95593262 543.26116943]
[-367.61502075 528.99920654]
[-371.49511719 514.50592041]
[-374.58489990 499.82382202]
[-376.87527466 484.99597168]
[-378.35952759 470.06585693]
[-379.03329468 455.07730103]
[-378.89459229 440.07424927]
[-377.94387817 425.10070801]
[-376.18386841 410.20059204]
[-373.61978149 395.41760254]
[-370.25912476 380.79513550]
[-366.11172485 366.37603760]
[-361.18978882 352.20263672]
[-355.50775146 338.31646729]
[-349.08224487 324.75830078]
[-341.93212891 311.56790161]
[-334.07839966 298.78393555]
[-325.54406738 286.44390869]
[-316.35418701 274.58401489]
[-306.53570557 263.23907471]
[-296.11740112 252.44230652]
[-285.12985229 242.22541809]
[-273.60528564 232.61836243]
[-261.57751465 223.64933777]
[-249.08180237 215.34461975]
[-236.15481567 207.72860718]
[-222.83445740 200.82360840]
[-209.15980530 194.64988708]
[-195.17095947 189.22555542]
[-180.90896606 184.56652832]
[-166.41566467 180.68646240]
[-151.73355103 177.59672546]
[-136.90568542 175.30641174]
[-121.97558594 173.82221985]
[-106.98701477 173.14849854]
[-91.98396301 173.28723145]
[-77.01042175 174.23802185]
[-62.11031342 175.99806213]
[-47.32734680 178.56221008]
[-32.70487976 181.92291260]
[-18.28580284 186.07034302]
[-4.11241150 190.99234009]
[9.77372169 196.67443848]
[23.33186722 203.09997559]
[36.52225494 210.25012207]
[44.37400818 197.46928406]
[52.22576523 184.68844604]
[60.07752228 171.90759277]
[66.95693207 158.57817078]
[72.82589722 144.77398682]
[78.69485474 130.96981812]
[84.56381226 117.16564178]
[90.43277740 103.36146545]
[90.43778229 95.30091095]
[96.49324799 89.39648438]
[102.56708527 75.68122101]
[108.53864288 61.92111588]
[114.40760803 48.11693954]
[120.27656555 34.31276321]
[126.14553070 20.50858498]
[132.01449585 6.70440912]
[137.88345337 -7.09976768]
[143.75241089 -20.90394402]
[130.75680542 -28.43348503]
[118.78502655 -37.50299835]
[108.01855469 -47.97499466]
[98.62061310 -59.69072342]
[90.73366547 -72.47257233]
[84.47727966 -86.12677765]
[79.94629669 -100.44633484]
[77.20941162 -115.21417236]
[76.30811310 -130.20642090]
[77.25606537 -145.19578552]
[80.03889465 -159.95503235]
[84.61441040 -174.26042175]
[90.91325378 -187.89509583]
[98.83994293 -200.65232849]
[108.27429962 -212.33876038]
[119.07330322 -222.77720642]
[131.07324219 -231.80941772]
[144.09222412 -239.29847717]
[157.93284607 -245.13085938]
[172.38531494 -249.21813965]
[187.23052979 -251.49833679]
[202.24342346 -251.93692017]
[217.19642639 -250.52722168]
[231.86285400 -247.29060364]
[246.02035522 -242.27615356]
[259.45431519 -235.55987549]
[271.96105957 -227.24357605]
[283.35101318 -217.45335388]
[293.45150757 -206.33760071]
[302.10940552 -194.06484985]
[309.19345093 -180.82115173]
[314.59628296 -166.80725098]
[318.23596191 -152.23562622]
[320.05734253 -137.32716370]
[320.03277588 -122.30787659]
[318.16265869 -107.40545654]
[314.47534180 -92.84580994]
[309.02670288 -78.84966278]
[301.89938354 -65.62919617]
[293.20138550 -53.38482285]
[283.06460571 -42.30216980]
[271.64270020 -32.54924393]
[259.10882568 -24.27390099]
[245.65296936 -17.60159111]
[231.47914124 -12.63346195]
[216.80220032 -9.44483280]
[201.84466553 -8.08404160]
[186.83328247 -8.57171631]
[171.99560547 -10.90046501]
[157.55659485 -15.03498363]
[151.68762207 -1.23080707]
[145.81866455 12.57336998]
[139.94970703 26.37754631]
[134.08074951 40.18172455]
[128.21177673 53.98590088]
[122.34282684 67.79007721]
[122.61862946 75.17558289]
[116.28234863 81.75505066]
[110.20851898 95.47032166]
[104.23695374 109.23042297]
[98.36799622 123.03459930]
[92.49903107 136.83877563]
[86.63007355 150.64295959]
[80.76110840 164.44712830]
[93.64378357 156.76359558]
[108.64054108 156.45196533]
[121.83128357 163.59370422]
[129.76795959 176.32199097]
[130.37596130 191.30966187]
[123.49634552 204.63899231]
[110.92743683 212.82571411]
[95.95470428 213.72984314]
[82.49200439 207.11505127]
[74.05843353 194.71041870]
[72.85836029 179.75935364]
[65.00660706 192.54019165]
[57.15485382 205.32104492]
[49.30309677 218.10188293]
[61.64320755 226.63609314]
[73.50318909 235.82585144]
[84.84824371 245.64422607]
[95.64511108 256.06240845]
[105.86210632 267.04986572]
[115.46927643 278.57434082]
[124.43842316 290.60202026]
[132.74325562 303.09765625]
[140.35940552 316.02456665]
[147.26454163 329.34484863]
[153.43838501 343.01943970]
[158.86285400 357.00823975]
[163.52203369 371.27017212]
[167.40225220 385.76342773]
[170.49212646 400.44552612]
[172.78259277 415.27337646]
[174.26693726 430.20346069]
[174.94081116 445.19201660]
[174.80221558 460.19506836]
[173.85157776 475.16860962]
[172.09169006 490.06875610]
[169.52769470 504.85174561]
[166.16712952 519.47424316]
[162.01983643 533.89337158]
[157.09800720 548.06677246]
[151.41604614 561.95300293]
[144.99063110 575.51116943]
[137.84062195 588.70166016]
[129.98696899 601.48565674]
[121.45272064 613.82574463]
[112.26291656 625.68572998]
[102.44449615 637.03076172]
[92.02627563 647.82757568]
[81.03879547 658.04449463]
[69.51429749 667.65167236]
[57.48657990 676.62078857]
[44.99092484 684.92553711]
[32.06398010 692.54168701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 172]
[77 171]
[78 170]
[79 169]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[86 153]
[87 152]
[88 150]
[89 149]
[90 148]
[91 147]
[92 146]
[93 145]
[94 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
