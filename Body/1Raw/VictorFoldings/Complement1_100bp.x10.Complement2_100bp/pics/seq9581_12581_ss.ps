%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[44.22887421 506.88012695]
[38.81268311 520.88970947]
[31.68328857 534.10992432]
[22.95313454 546.33233643]
[12.75990772 557.36419678]
[1.26436913 567.03143311]
[-11.35217953 575.18164062]
[-24.89075661 581.68627930]
[-39.13784027 586.44274902]
[-53.86873245 589.37603760]
[-68.85110474 590.43981934]
[-83.84867096 589.61743164]
[-98.62488556 586.92175293]
[-112.94671631 582.39532471]
[-126.58827972 576.10955811]
[-139.33444214 568.16357422]
[-150.98416138 558.68267822]
[-161.35371399 547.81640625]
[-170.27955627 535.73614502]
[-177.62091064 522.63244629]
[-183.26199341 508.71188354]
[-187.11384583 494.19409180]
[-189.11570740 479.30798340]
[-189.23600769 464.28839111]
[-187.47286987 449.37213135]
[-183.85406494 434.79449463]
[-178.43669128 420.78536987]
[-171.30618286 407.56573486]
[-162.57501221 395.34405518]
[-152.38085938 384.31307983]
[-140.88450623 374.64678955]
[-128.26727295 366.49761963]
[-114.72814178 359.99414062]
[-100.48065948 355.23889160]
[-85.74951935 352.30685425]
[-70.76705170 351.24432373]
[-55.76956177 352.06799316]
[-40.99357224 354.76489258]
[-26.67212296 359.29251099]
[-20.39476204 345.66921997]
[-22.09569550 330.87203979]
[-9.29327297 321.57641602]
[-3.01591253 307.95309448]
[3.26144814 294.32980347]
[-0.63191688 282.87692261]
[4.48636150 271.47573853]
[16.37002373 266.46160889]
[22.84951973 252.93327332]
[29.32901573 239.40492249]
[35.80851364 225.87658691]
[42.08587265 212.25326538]
[48.15970612 198.53799438]
[42.57149887 184.77909851]
[48.53585052 170.78334045]
[63.00534821 165.01519775]
[69.07917786 151.29992676]
[75.15301514 137.58467102]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[85.08428955 93.52693176]
[98.74255371 83.78895569]
[104.61151123 69.98477936]
[110.48047638 56.18060303]
[116.34943390 42.37642670]
[122.01222229 28.48640060]
[127.46757507 14.51360226]
[132.92292786 0.54080468]
[137.53694153 -13.73192883]
[141.29324341 -28.25398827]
[145.04954529 -42.77604675]
[148.80584717 -57.29810715]
[152.56214905 -71.82016754]
[151.68147278 -80.91204071]
[156.48399353 -86.52965546]
[160.45608521 -100.99417877]
[148.35922241 -92.12480927]
[133.39445496 -91.09723663]
[120.19879150 -98.22987366]
[112.86105347 -111.31259918]
[113.65490723 -126.29157257]
[122.33438110 -138.52540588]
[136.21003723 -144.22332764]
[150.98236084 -141.61973572]
[162.07397461 -131.52142334]
[166.04801941 -117.05717468]
[171.91699219 -130.86135864]
[177.78594971 -144.66552734]
[183.55198669 -158.51301575]
[189.21476746 -172.40304565]
[194.87754822 -186.29307556]
[181.66772461 -193.43083191]
[169.30708313 -201.95501709]
[157.94053650 -211.76567078]
[147.70135498 -222.74777222]
[138.70960999 -234.77255249]
[131.07069397 -247.69905090]
[124.87418365 -261.37570190]
[120.19272614 -275.64212036]
[117.08121490 -290.33108521]
[115.57613373 -305.27038574]
[115.69512177 -320.28479004]
[117.43677521 -335.19836426]
[120.78069305 -349.83615112]
[125.68766022 -364.02661133]
[132.10014343 -377.60333252]
[139.94296265 -390.40713501]
[149.12416077 -402.28790283]
[159.53610229 -413.10635376]
[171.05670166 -422.73562622]
[183.55088806 -431.06283569]
[196.87217712 -437.99035645]
[210.86439514 -443.43695068]
[225.36346436 -447.33877563]
[240.19940186 -449.65005493]
[255.19827271 -450.34371948]
[270.18420410 -449.41162109]
[284.98153687 -446.86471558]
[299.41671753 -442.73281860]
[313.32055664 -437.06439209]
[326.52999878 -429.92593384]
[338.89016724 -421.40109253]
[350.25619507 -411.58981323]
[360.49478149 -400.60717773]
[369.48587036 -388.58190918]
[377.12411499 -375.65499878]
[383.31988525 -361.97802734]
[388.00054932 -347.71133423]
[391.11126709 -333.02218628]
[392.61557007 -318.08282471]
[392.49575806 -303.06842041]
[390.75329590 -288.15496826]
[387.40859985 -273.51733398]
[382.50088501 -259.32714844]
[376.08764648 -245.75076294]
[368.24414062 -232.94738770]
[359.06231689 -221.06710815]
[348.64978027 -210.24922180]
[337.12866211 -200.62055969]
[324.63403320 -192.29402161]
[311.31237793 -185.36723328]
[297.31985474 -179.92138672]
[282.82058716 -176.02035522]
[267.98452759 -173.70985413]
[252.98561096 -173.01699829]
[237.99972534 -173.94990540]
[223.20254517 -176.49761963]
[208.76757812 -180.63027954]
[203.10479736 -166.74026489]
[197.44200134 -152.85023499]
[197.82774353 -145.46965027]
[191.59011841 -138.79656982]
[185.72116089 -124.99239349]
[179.85220337 -111.18821716]
[174.92060852 -97.02207947]
[170.94851685 -82.55755615]
[167.08421326 -68.06386566]
[163.32791138 -53.54180527]
[159.57160950 -39.01974487]
[155.81530762 -24.49768639]
[152.05900574 -9.97562790]
[164.44685364 -18.43382645]
[179.44337463 -18.11054802]
[191.45521545 -9.12636948]
[196.00228882 5.16783333]
[191.38861084 19.44067574]
[179.33499146 28.36874199]
[164.33714294 28.62208366]
[151.98886108 20.10620880]
[146.89573669 5.99616194]
[141.44036865 19.96895981]
[135.98501587 33.94175720]
[137.04814148 38.59780884]
[135.19764709 43.97114182]
[130.15361023 48.24538803]
[124.28465271 62.04956436]
[118.41568756 75.85374451]
[112.54673004 89.65792084]
[116.24458313 100.70178986]
[111.60806274 111.38560486]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[88.86827850 143.65849304]
[82.79444885 157.37376404]
[76.72061157 171.08903503]
[82.17401123 185.68006897]
[75.81890106 199.50277710]
[61.87497330 204.61183167]
[55.80113983 218.32710266]
[56.12446594 224.93066406]
[53.46375275 229.95237732]
[49.33685684 232.35607910]
[42.85736084 245.88442993]
[36.37786484 259.41278076]
[29.89837074 272.94110107]
[31.73920631 291.26303101]
[16.88476372 300.60714722]
[10.60740376 314.23046875]
[4.33004284 327.85379028]
[5.58197832 343.62536621]
[-6.77144623 351.94656372]
[-13.04880714 365.56988525]
[-0.30198210 373.51480103]
[11.34853649 382.99472046]
[21.71900177 393.86010742]
[30.64585876 405.93960571]
[37.98831940 419.04272461]
[43.63057709 432.96276855]
[47.48365021 447.48025513]
[49.48676682 462.36618042]
[49.60833740 477.38577271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 201]
[40 200]
[42 198]
[43 197]
[44 196]
[47 194]
[48 193]
[49 192]
[50 191]
[51 188]
[52 187]
[55 184]
[56 183]
[57 182]
[58 181]
[59 180]
[61 177]
[62 176]
[63 175]
[64 174]
[65 171]
[66 170]
[67 169]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[74 155]
[75 154]
[85 153]
[86 152]
[87 151]
[88 149]
[89 148]
[90 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
