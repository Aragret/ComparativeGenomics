%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[122.16256714 222.93864441]
[123.58112335 207.99876404]
[126.11217499 193.20666504]
[129.74156189 178.64508057]
[134.44900513 164.39544678]
[140.20817566 150.53744507]
[146.98684692 137.14857483]
[134.14790344 129.39218140]
[121.30895996 121.63579559]
[108.47002411 113.87940216]
[97.01513672 115.98342133]
[87.09165192 109.88704681]
[83.79087830 98.71807098]
[71.06884003 90.77138519]
[55.26536179 90.02262115]
[48.56996536 76.71770477]
[35.84793091 68.77101898]
[23.12589264 60.82433319]
[10.40385723 52.87764740]
[1.71500635 65.11026001]
[-7.68325377 76.80665588]
[-17.75791168 87.92575073]
[-28.47357941 98.42848206]
[-39.79261780 108.27796936]
[-51.67527008 117.43960571]
[-64.07979584 125.88121033]
[-76.96261597 133.57313538]
[-90.27849579 140.48837280]
[-103.98064423 146.60261536]
[-118.02095032 151.89439392]
[-132.35008240 156.34512329]
[-146.91770935 159.93916321]
[-161.67266846 162.66389465]
[-176.56312561 164.50973511]
[-191.53678894 165.47021484]
[-206.54104614 165.54196167]
[-221.52320862 164.72473145]
[-236.43063354 163.02136230]
[-251.21098328 160.43786621]
[-265.81231689 156.98329163]
[-280.18334961 152.66981506]
[-294.27362061 147.51254272]
[-308.03359985 141.52961731]
[-321.41500854 134.74205017]
[-334.37081909 127.17366791]
[-346.85549927 118.85107422]
[-358.82522583 109.80348969]
[-370.23791504 100.06270599]
[-381.05355835 89.66292572]
[-391.23406982 78.64069366]
[-400.74377441 67.03470612]
[-409.54919434 54.88574600]
[-417.61944580 42.23648071]
[-424.92617798 29.13134384]
[-431.44372559 15.61636543]
[-437.14920044 1.73901880]
[-442.02252197 -12.45195103]
[-446.04660034 -26.90669632]
[-449.20730591 -41.57444763]
[-451.49353027 -56.40367889]
[-452.89724731 -71.34230804]
[-453.41354370 -86.33785248]
[-453.04055786 -101.33764648]
[-451.77963257 -116.28900146]
[-449.63519287 -131.13940430]
[-446.61477661 -145.83668518]
[-442.72897339 -160.32920837]
[-437.99145508 -174.56610107]
[-432.41885376 -188.49732971]
[-426.03073120 -202.07395935]
[-418.84954834 -215.24830627]
[-410.90051270 -227.97410583]
[-402.21154785 -240.20663452]
[-392.81320190 -251.90295410]
[-382.73843384 -263.02197266]
[-372.02267456 -273.52459717]
[-360.70355225 -283.37399292]
[-348.82083130 -292.53552246]
[-336.41622925 -300.97702026]
[-323.53332520 -308.66882324]
[-310.21740723 -315.58395386]
[-296.51519775 -321.69805908]
[-282.47485352 -326.98971558]
[-268.14569092 -331.44033813]
[-253.57801819 -335.03424072]
[-238.82302856 -337.75885010]
[-223.93255615 -339.60455322]
[-208.95889282 -340.56491089]
[-193.95463562 -340.63653564]
[-178.97247314 -339.81915283]
[-164.06506348 -338.11566162]
[-149.28474426 -335.53201294]
[-134.68344116 -332.07733154]
[-120.31243896 -327.76373291]
[-106.22222137 -322.60632324]
[-92.46227264 -316.62329102]
[-79.08093262 -309.83560181]
[-66.12520599 -302.26712036]
[-53.64059067 -293.94439697]
[-41.67094803 -284.89672852]
[-30.25831985 -275.15582275]
[-19.44279289 -264.75595093]
[-9.26235867 -253.73362732]
[0.24722575 -242.12756348]
[9.05255604 -229.97853088]
[17.12270164 -217.32919312]
[24.42931938 -204.22398376]
[30.94674110 -190.70895386]
[36.65207291 -176.83155823]
[41.52528000 -162.64054871]
[45.54924011 -148.18576050]
[48.70981979 -133.51799011]
[50.99591827 -118.68873596]
[52.39950562 -103.75009155]
[52.91565323 -88.75453949]
[52.54254150 -73.75475311]
[51.28148651 -58.80340576]
[49.13691711 -43.95302582]
[46.11636734 -29.25577354]
[42.23044586 -14.76327324]
[37.49280167 -0.52643108]
[31.92007446 13.40474606]
[25.53184128 26.98132324]
[18.35054207 40.15561295]
[31.07257843 48.10229492]
[43.79461288 56.04898071]
[56.51665115 63.99566650]
[71.41016388 64.17602539]
[79.01552582 78.04934692]
[91.73755646 85.99603271]
[108.51116180 86.14579010]
[116.22640991 101.04045868]
[129.06535339 108.79685211]
[141.90429688 116.55324554]
[154.74324036 124.30963135]
[163.44128418 112.08031464]
[173.02891541 100.53520966]
[183.45249939 89.73886871]
[194.65376282 79.75167847]
[206.57005310 70.62948608]
[219.13471985 62.42331696]
[232.27751160 55.17905426]
[245.92491150 48.93722153]
[260.00061035 43.73271561]
[274.42590332 39.59465027]
[289.12008667 36.54616165]
[304.00097656 34.60430145]
[318.98538208 33.77993011]
[333.98950195 34.07765579]
[348.92941284 35.49581146]
[363.72158813 38.02647400]
[378.28326416 41.65548325]
[392.53302002 46.36254883]
[406.39117432 52.12134171]
[419.78024292 58.89966202]
[432.62530518 66.65959167]
[444.85452271 75.35774994]
[456.39956665 84.94548035]
[467.19580078 95.36916351]
[477.18289185 106.57051086]
[486.30499268 118.48688507]
[494.51104736 131.05162048]
[501.75518799 144.19447327]
[507.99691772 157.84193420]
[513.20129395 171.91769409]
[517.33923340 186.34300232]
[520.38757324 201.03720093]
[522.32928467 215.91813660]
[523.15356445 230.90255737]
[522.85571289 245.90666199]
[521.43737793 260.84655762]
[518.90661621 275.63870239]
[515.27746582 290.20034790]
[510.57028198 304.45007324]
[504.81137085 318.30816650]
[498.03292847 331.69717407]
[490.27288818 344.54217529]
[481.57461548 356.77133179]
[471.98678589 368.31625366]
[461.56301880 379.11242676]
[450.36157227 389.09942627]
[438.44512939 398.22140503]
[425.88031006 406.42733765]
[412.73739624 413.67138672]
[399.08987427 419.91296387]
[385.01406860 425.11721802]
[370.58874512 429.25503540]
[355.89450073 432.30325317]
[341.01354980 434.24487305]
[326.02914429 435.06896973]
[311.02502441 434.77099609]
[296.08511353 433.35256958]
[281.29299927 430.82162476]
[266.73138428 427.19238281]
[252.48171997 422.48504639]
[238.62365723 416.72601318]
[225.23472595 409.94744873]
[212.38980103 402.18731689]
[200.16072083 393.48892212]
[188.61585999 383.90100098]
[177.81979370 373.47711182]
[167.83290100 362.27560425]
[158.71102905 350.35906982]
[150.50518799 337.79418945]
[143.26127625 324.65121460]
[137.01980591 311.00363159]
[131.81567383 296.92779541]
[127.67798615 282.50241089]
[124.62989044 267.80813599]
[122.68842316 252.92718506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 135]
[8 134]
[9 133]
[10 132]
[13 130]
[14 129]
[16 127]
[17 126]
[18 125]
[19 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
