%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[5.93652582 925.97418213]
[-9.05605888 926.51226807]
[-24.05799866 926.41778564]
[-39.04262161 925.69104004]
[-53.98328400 924.33319092]
[-68.85342407 922.34667969]
[-83.62659454 919.73510742]
[-98.27654266 916.50305176]
[-112.77721405 912.65625000]
[-127.10282898 908.20159912]
[-141.22792053 903.14703369]
[-155.12734985 897.50140381]
[-168.77644348 891.27490234]
[-182.15090942 884.47851562]
[-195.22697449 877.12438965]
[-207.98138428 869.22552490]
[-220.39147949 860.79595947]
[-232.43516541 851.85076904]
[-244.09106445 842.40582275]
[-255.33842468 832.47790527]
[-266.15725708 822.08459473]
[-276.52832031 811.24450684]
[-286.43319702 799.97680664]
[-295.85424805 788.30157471]
[-304.77474976 776.23962402]
[-313.17880249 763.81225586]
[-321.05151367 751.04168701]
[-328.37884521 737.95056152]
[-335.14782715 724.56219482]
[-341.34634399 710.90039062]
[-346.96340942 696.98937988]
[-351.98907471 682.85400391]
[-356.41436768 668.51928711]
[-360.23138428 654.01074219]
[-363.43341064 639.35418701]
[-366.01470947 624.57568359]
[-367.97073364 609.70153809]
[-369.29794312 594.75811768]
[-369.99401855 579.77203369]
[-370.05770874 564.76995850]
[-369.48889160 549.77850342]
[-368.28860474 534.82434082]
[-366.45898438 519.93408203]
[-364.00326538 505.13421631]
[-360.92581177 490.45098877]
[-357.23208618 475.91058350]
[-352.92868042 461.53881836]
[-348.02322388 447.36123657]
[-342.52447510 433.40307617]
[-336.44216919 419.68908691]
[-329.78713989 406.24374390]
[-322.57122803 393.09088135]
[-314.80725098 380.25393677]
[-306.50900269 367.75567627]
[-297.69122314 355.61834717]
[-288.36965942 343.86355591]
[-278.56082153 332.51217651]
[-268.28216553 321.58441162]
[-257.55197144 311.09963989]
[-246.38931274 301.07656860]
[-234.81404114 291.53295898]
[-222.84674072 282.48583984]
[-210.50866699 273.95123291]
[-197.82179260 265.94436646]
[-184.80863953 258.47943115]
[-171.49237061 251.56974792]
[-157.89663696 245.22755432]
[-144.04562378 239.46415710]
[-129.96397400 234.28979492]
[-115.67670441 229.71366882]
[-101.20921326 225.74389648]
[-86.58724213 222.38757324]
[-71.83676910 219.65063477]
[-56.98403549 217.53796387]
[-42.05544281 216.05331421]
[-27.07753181 215.19931030]
[-12.07693386 214.97749329]
[2.91967893 215.38824463]
[17.88564491 216.43084717]
[32.79435349 218.10342407]
[47.61929703 220.40301514]
[62.33412170 223.32553101]
[65.87379456 208.74916077]
[69.41346741 194.17279053]
[72.95314026 179.59640503]
[76.49281311 165.02003479]
[71.97737885 150.82637024]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[106.21058655 42.64218521]
[109.75025940 28.06580925]
[113.07251740 13.43834972]
[116.17662811 -1.23695278]
[119.28073883 -15.91225529]
[122.38484955 -30.58755684]
[108.80741882 -37.13864136]
[97.19274139 -46.74919891]
[88.21609497 -58.86048508]
[82.39936066 -72.76835632]
[80.08071136 -87.66423798]
[81.39495850 -102.68210602]
[86.26569366 -116.94882965]
[94.40973663 -129.63496399]
[105.35359955 -140.00296021]
[118.46102905 -147.45002747]
[132.96997070 -151.54319763]
[148.03688049 -152.04452515]
[162.78581238 -148.92483521]
[176.35928345 -142.36552429]
[187.96812439 -132.74792480]
[196.93742371 -120.63120270]
[202.74572754 -106.71980286]
[205.05534363 -91.82251740]
[203.73199463 -76.80545807]
[198.85261536 -62.54169083]
[190.70088196 -49.86049271]
[179.75073242 -39.49913788]
[166.63879395 -32.06001663]
[152.12738037 -27.97563362]
[137.06015015 -27.48344803]
[133.95603943 -12.80814552]
[130.85192871 1.86715734]
[127.74782562 16.54245949]
[129.55587769 20.96286201]
[128.60626221 26.56600952]
[124.32663727 31.60548210]
[120.78696442 46.18185806]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[101.59133148 158.01770020]
[91.06918335 168.55970764]
[87.52951050 183.13607788]
[83.98983765 197.71246338]
[80.45017242 212.28883362]
[76.91049957 226.86520386]
[91.32685852 231.01679993]
[105.55538177 235.77244568]
[119.57077789 241.12368774]
[133.34812927 247.06100464]
[146.86293030 253.57385254]
[160.09115601 260.65066528]
[173.00929260 268.27883911]
[185.59436035 276.44479370]
[197.82400513 285.13406372]
[209.67645264 294.33114624]
[221.13066101 304.01971436]
[232.16622925 314.18252563]
[242.76358032 324.80154419]
[252.90383911 335.85787964]
[262.56896973 347.33184814]
[271.74182129 359.20306396]
[280.40606689 371.45043945]
[288.54632568 384.05218506]
[296.14807129 396.98587036]
[303.19781494 410.22851562]
[309.68304443 423.75659180]
[315.59222412 437.54605103]
[320.91479492 451.57235718]
[325.64135742 465.81057739]
[329.76348877 480.23538208]
[333.27383423 494.82113647]
[336.16619873 509.54193115]
[338.43539429 524.37158203]
[340.07742310 539.28369141]
[341.08935547 554.25170898]
[341.46936035 569.24914551]
[341.21679688 584.24926758]
[340.33209229 599.22540283]
[338.81686401 614.15093994]
[336.67373657 628.99926758]
[333.90658569 643.74414062]
[330.52029419 658.35919189]
[326.52087402 672.81848145]
[321.91549683 687.09637451]
[316.71228027 701.16735840]
[310.92050171 715.00653076]
[304.55044556 728.58923340]
[297.61346436 741.89135742]
[290.12188721 754.88916016]
[282.08905029 767.55963135]
[273.52917480 779.88012695]
[264.45751953 791.82891846]
[254.89022827 803.38458252]
[244.84428406 814.52667236]
[234.33755493 825.23535156]
[223.38873291 835.49157715]
[212.01727295 845.27716064]
[200.24339294 854.57458496]
[188.08802795 863.36743164]
[175.57279968 871.64007568]
[162.71995544 879.37774658]
[149.55233765 886.56671143]
[136.09336853 893.19415283]
[122.36696625 899.24835205]
[108.39754486 904.71844482]
[94.20994568 909.59484863]
[79.82938385 913.86877441]
[65.28143311 917.53265381]
[50.59195328 920.58001709]
[35.78706741 923.00543213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[88 139]
[89 138]
[90 137]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 128]
[98 127]
[99 126]
[100 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
