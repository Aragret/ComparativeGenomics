%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[173.57928467 433.16152954]
[172.24665833 418.21115112]
[172.22213745 403.20153809]
[173.50588989 388.24688721]
[176.08815002 373.46105957]
[179.94926453 358.95651245]
[185.05986023 344.84371948]
[191.38101196 331.23004150]
[198.86465454 318.21908569]
[207.45379639 305.90991211]
[217.08306885 294.39617920]
[227.67921448 283.76550293]
[218.01840210 272.29080200]
[208.35758972 260.81610107]
[198.69677734 249.34140015]
[189.03596497 237.86669922]
[179.37515259 226.39199829]
[169.71435547 214.91729736]
[160.05354309 203.44259644]
[150.39273071 191.96789551]
[140.73191833 180.49319458]
[131.07110596 169.01849365]
[121.41029358 157.54379272]
[111.74948883 146.06909180]
[115.33471680 160.63433838]
[115.51187134 175.63328552]
[112.27167511 190.27914429]
[105.78408051 203.80360413]
[96.38942719 215.49720764]
[84.58053589 224.74653625]
[70.97687531 231.06639099]
[56.29206848 234.12522888]
[41.29645157 233.76258850]
[26.77666473 229.99751282]
[13.49438667 223.02751160]
[2.14637876 213.21818542]
[-6.67206526 201.08413696]
[-12.49834728 187.26190186]
[-15.02683163 172.47654724]
[-14.12488079 157.50367737]
[-9.83980751 143.12876892]
[-2.39639926 130.10588074]
[7.81487846 119.11817169]
[20.25836182 110.74202728]
[34.28129196 105.41685486]
[49.14804840 103.42199707]
[64.07875824 104.86209869]
[78.29018402 109.66162109]
[91.03681946 117.56878662]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[72.38062286 66.07882690]
[75.61174774 51.53890991]
[70.89958191 46.90134048]
[69.45386505 41.40525818]
[70.86034393 36.84117508]
[66.45934296 22.50132942]
[62.05834961 8.16148186]
[47.37183380 11.26189232]
[32.46652222 13.03331852]
[17.46242714 13.46149921]
[2.48035145 12.54298592]
[-12.35907364 10.28517532]
[-26.93636703 6.70624495]
[-41.13415909 1.83501124]
[-54.83813858 -4.28930426]
[-67.93795776 -11.61739159]
[-80.32815552 -20.09024811]
[-91.90896606 -29.63965416]
[-102.58713531 -40.18872452]
[-112.27670288 -51.65251541]
[-120.89964294 -63.93873215]
[-128.38653564 -76.94844818]
[-134.67709351 -90.57691956]
[-139.72065735 -104.71440887]
[-143.47663879 -119.24709320]
[-145.91479492 -134.05795288]
[-147.01547241 -149.02775574]
[-146.76983643 -164.03594971]
[-145.17984009 -178.96170044]
[-142.25830078 -193.68484497]
[-138.02874756 -208.08682251]
[-132.52520752 -222.05168152]
[-125.79203033 -235.46699524]
[-117.88339996 -248.22473145]
[-108.86299896 -260.22216797]
[-98.80345917 -271.36273193]
[-87.78578186 -281.55670166]
[-75.89866638 -290.72198486]
[-63.23782730 -298.78482056]
[-49.90520477 -305.68029785]
[-36.00814438 -311.35287476]
[-21.65854263 -315.75686646]
[-6.97193432 -318.85681152]
[7.93343067 -320.62777710]
[22.93754005 -321.05551147]
[37.91958618 -320.13653564]
[52.75894165 -317.87826538]
[67.33612823 -314.29888916]
[81.53377533 -309.42721558]
[95.23756409 -303.30249023]
[108.33716583 -295.97399902]
[120.72709656 -287.50076294]
[132.30761719 -277.95101929]
[142.98547363 -267.40161133]
[152.67468262 -255.93753052]
[161.29725647 -243.65104675]
[168.78373718 -230.64109802]
[175.07388306 -217.01245117]
[180.11701965 -202.87480164]
[183.87255859 -188.34201050]
[186.31025696 -173.53106689]
[187.41047668 -158.56123352]
[187.16438293 -143.55305481]
[185.57392883 -128.62734985]
[182.65194702 -113.90428925]
[178.42195129 -99.50244141]
[172.91798401 -85.53774261]
[166.18438721 -72.12264252]
[158.27537537 -59.36515045]
[149.25460815 -47.36798096]
[139.19473267 -36.22773361]
[128.17674255 -26.03410339]
[116.28934479 -16.86916542]
[103.62826538 -8.80671024]
[90.29542542 -1.91165531]
[76.39819336 3.76048398]
[80.79919434 18.10033035]
[85.20018768 32.44017792]
[89.81420135 46.71290970]
[101.23489380 56.27413177]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[123.22418213 136.40827942]
[132.88499451 147.88298035]
[142.54580688 159.35768127]
[152.20661926 170.83238220]
[161.86743164 182.30708313]
[171.52824402 193.78178406]
[181.18904114 205.25648499]
[190.84985352 216.73118591]
[200.51066589 228.20588684]
[210.17147827 239.68058777]
[219.83229065 251.15528870]
[229.49310303 262.62997437]
[239.15391541 274.10467529]
[251.43460083 265.47485352]
[264.42068481 257.94818115]
[278.01336670 251.58198547]
[292.10919189 246.42471313]
[306.60083008 242.51560974]
[321.37805176 239.88441467]
[336.32836914 238.55116272]
[351.33798218 238.52600098]
[366.29269409 239.80912781]
[381.07864380 242.39076233]
[395.58334351 246.25128174]
[409.69635010 251.36126709]
[423.31030273 257.68185425]
[436.32156372 265.16494751]
[448.63110352 273.75357056]
[460.14523315 283.38235474]
[470.77636719 293.97805786]
[480.44354248 305.45999146]
[489.07321167 317.74081421]
[496.59970093 330.72702026]
[502.96569824 344.31976318]
[508.12277222 358.41564941]
[512.03167725 372.90737915]
[514.66265869 387.68463135]
[515.99572754 402.63494873]
[516.02062988 417.64459229]
[514.73730469 432.59927368]
[512.15545654 447.38519287]
[508.29476929 461.88980103]
[503.18457031 476.00274658]
[496.86380005 489.61660767]
[489.38052368 502.62777710]
[480.79171753 514.93719482]
[471.16278076 526.45123291]
[460.56692505 537.08215332]
[449.08483887 546.74920654]
[436.80392456 555.37866211]
[423.81762695 562.90496826]
[410.22476196 569.27081299]
[396.12881470 574.42767334]
[381.63702393 578.33636475]
[366.85974121 580.96716309]
[351.90939331 582.29998779]
[336.89978027 582.32470703]
[321.94509888 581.04119873]
[307.15924072 578.45910645]
[292.65466309 574.59820557]
[278.54177856 569.48785400]
[264.92800903 563.16687012]
[251.91696167 555.68341064]
[239.60765076 547.09442139]
[228.09378052 537.46533203]
[217.46295166 526.86932373]
[207.79609680 515.38714600]
[199.16676331 503.10607910]
[191.64065552 490.11965942]
[185.27503967 476.52670288]
[180.11834717 462.43069458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 152]
[13 151]
[14 150]
[15 149]
[16 148]
[17 147]
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[50 139]
[51 138]
[53 136]
[54 135]
[56 133]
[59 132]
[60 131]
[61 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
