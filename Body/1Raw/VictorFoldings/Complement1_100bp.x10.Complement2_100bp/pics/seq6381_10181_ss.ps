%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[113.02146912 245.39595032]
[110.35567474 230.63473511]
[107.68987274 215.87351990]
[105.02407837 201.11230469]
[102.80073547 199.40499878]
[101.11971283 196.71412659]
[100.35902405 193.24185181]
[100.81659698 189.32328796]
[102.66646576 185.39492798]
[100.88399506 170.50120544]
[99.10153198 155.60749817]
[97.31906891 140.71377563]
[95.53659821 125.82006073]
[93.75413513 110.92634583]
[91.63951111 96.07614136]
[89.19377899 81.27687073]
[86.74805450 66.47760010]
[84.30233002 51.67833328]
[79.81557465 43.72177124]
[81.93206787 36.64065552]
[79.70694733 21.80661011]
[77.48183441 6.97256660]
[75.25671387 -7.86147690]
[73.03160095 -22.69552040]
[70.80648041 -37.52956390]
[55.89102554 -35.91909027]
[40.92175674 -34.92637253]
[25.92425156 -34.55310822]
[10.92413139 -34.79993820]
[-4.05297327 -35.66643143]
[-18.98147583 -37.15111923]
[-33.83587265 -39.25145721]
[-48.59078217 -41.96385574]
[-63.22099686 -45.28368759]
[-77.70152283 -49.20527649]
[-92.00762177 -53.72192383]
[-106.11484528 -58.82591248]
[-119.99909210 -64.50852203]
[-133.63665771 -70.76004791]
[-147.00421143 -77.56980133]
[-160.07894897 -84.92614746]
[-172.83850098 -92.81652832]
[-185.26109314 -101.22746277]
[-197.32550049 -110.14456940]
[-209.01107788 -119.55261993]
[-220.29791260 -129.43554688]
[-231.16667175 -139.77645874]
[-241.59881592 -150.55767822]
[-251.57652283 -161.76080322]
[-261.08273315 -173.36668396]
[-270.10119629 -185.35549927]
[-278.61651611 -197.70675659]
[-286.61416626 -210.39936829]
[-294.08044434 -223.41163635]
[-301.00262451 -236.72132874]
[-307.36886597 -250.30570984]
[-313.16830444 -264.14157104]
[-318.39099121 -278.20529175]
[-323.02804565 -292.47280884]
[-327.07156372 -306.91976929]
[-330.51455688 -321.52148438]
[-333.35122681 -336.25302124]
[-335.57669067 -351.08917236]
[-337.18713379 -366.00463867]
[-338.17984009 -380.97390747]
[-338.55307007 -395.97140503]
[-338.30624390 -410.97152710]
[-337.43969727 -425.94863892]
[-335.95501709 -440.87713623]
[-333.85464478 -455.73153687]
[-331.14221191 -470.48641968]
[-327.82235718 -485.11663818]
[-323.90075684 -499.59716797]
[-319.38409424 -513.90325928]
[-314.28009033 -528.01043701]
[-308.59744263 -541.89471436]
[-302.34591675 -555.53228760]
[-295.53613281 -568.89978027]
[-288.17974854 -581.97454834]
[-280.28936768 -594.73406982]
[-271.87841797 -607.15667725]
[-262.96130371 -619.22106934]
[-253.55322266 -630.90661621]
[-243.67027283 -642.19342041]
[-233.32936096 -653.06219482]
[-222.54811096 -663.49432373]
[-211.34497070 -673.47198486]
[-199.73907471 -682.97814941]
[-187.75024414 -691.99664307]
[-175.39897156 -700.51196289]
[-162.70635986 -708.50958252]
[-149.69407654 -715.97583008]
[-136.38436890 -722.89801025]
[-122.79998016 -729.26422119]
[-108.96411133 -735.06359863]
[-94.90039825 -740.28631592]
[-80.63286591 -744.92333984]
[-66.18589783 -748.96679688]
[-51.58417892 -752.40979004]
[-36.85264969 -755.24645996]
[-22.01648140 -757.47186279]
[-7.10101891 -759.08233643]
[7.86825228 -760.07501221]
[22.86575890 -760.44818115]
[37.86587524 -760.20135498]
[52.84297943 -759.33477783]
[67.77147675 -757.85003662]
[82.62586975 -755.74969482]
[97.38076782 -753.03723145]
[112.01097870 -749.71734619]
[126.49148560 -745.79571533]
[140.79757690 -741.27905273]
[154.90478516 -736.17498779]
[168.78901672 -730.49237061]
[182.42655945 -724.24078369]
[195.79409790 -717.43103027]
[208.86880493 -710.07458496]
[221.62834167 -702.18420410]
[234.05090332 -693.77325439]
[246.11528015 -684.85607910]
[257.80084229 -675.44799805]
[269.08764648 -665.56506348]
[279.95635986 -655.22412109]
[290.38848877 -644.44281006]
[300.36614990 -633.23968506]
[309.87231445 -621.63378906]
[318.89074707 -609.64495850]
[327.40603638 -597.29364014]
[335.40365601 -584.60101318]
[342.86990356 -571.58874512]
[349.79202271 -558.27899170]
[356.15823364 -544.69464111]
[361.95761108 -530.85870361]
[367.18029785 -516.79498291]
[371.81729126 -502.52746582]
[375.86074829 -488.08050537]
[379.30374146 -473.47879028]
[382.14035034 -458.74725342]
[384.36575317 -443.91107178]
[385.97616577 -428.99560547]
[386.96881104 -414.02633667]
[387.34201050 -399.02883911]
[387.09512329 -384.02871704]
[386.22857666 -369.05160522]
[384.74380493 -354.12310791]
[382.64340210 -339.26873779]
[379.93093872 -324.51382446]
[376.61105347 -309.88363647]
[372.68939209 -295.40310669]
[368.17266846 -281.09704590]
[363.06863403 -266.98983765]
[357.38595581 -253.10560608]
[351.13436890 -239.46807861]
[344.32455444 -226.10055542]
[336.96813965 -213.02584839]
[329.07772827 -200.26632690]
[320.66671753 -187.84378052]
[311.74957275 -175.77941895]
[302.34146118 -164.09387207]
[292.45849609 -152.80708313]
[282.11752319 -141.93836975]
[271.33627319 -131.50627136]
[260.13308716 -121.52862549]
[248.52716064 -112.02246857]
[236.53831482 -103.00405121]
[224.18701172 -94.48877716]
[211.49436951 -86.49118805]
[198.48207092 -79.02496338]
[185.17234802 -72.10284424]
[171.58793640 -65.73666382]
[157.75204468 -59.93730164]
[143.68830872 -54.71466064]
[129.42077637 -50.07766342]
[114.97379303 -46.03423309]
[100.37206268 -42.59127808]
[85.64052582 -39.75468063]
[87.86564636 -24.92063713]
[90.09075928 -10.08659458]
[92.31587982 4.74744940]
[94.54099274 19.58149338]
[96.76611328 34.41553879]
[99.10160065 49.23260498]
[101.54732513 64.03187561]
[103.99304962 78.83114624]
[106.43878174 93.63041687]
[109.22393036 96.29787445]
[110.81977844 100.18003082]
[110.71019745 104.71820068]
[108.64785004 109.14387512]
[110.43031311 124.03759003]
[112.21278381 138.93130493]
[113.99524689 153.82502747]
[115.77771759 168.71875000]
[117.56018066 183.61245728]
[119.78530121 198.44650269]
[122.45109558 213.20771790]
[125.11688995 227.96894836]
[127.78268433 242.73016357]
[142.58433533 246.31222534]
[154.64538574 255.61010742]
[161.87620544 269.01290894]
[163.02400208 284.19851685]
[157.88992310 298.53591919]
[147.36344910 309.54107666]
[133.26838684 315.30728149]
[118.04678345 314.83551025]
[104.33586884 308.20748901]
[94.51113892 296.57156372]
[90.27479553 281.94372559]
[92.36080933 266.85836792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[15 185]
[16 184]
[17 183]
[18 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
