%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[109.36604309 874.35742188]
[94.42577362 872.99774170]
[79.55185699 871.04144287]
[64.76813507 868.49157715]
[50.09826279 865.35223389]
[35.56574249 861.62847900]
[21.19384193 857.32629395]
[7.00557899 852.45251465]
[-6.97632456 847.01501465]
[-20.72947884 841.02239990]
[-34.23186111 834.48431396]
[-47.46184540 827.41131592]
[-60.39824677 819.81457520]
[-73.02034760 811.70635986]
[-85.30793762 803.09967041]
[-97.24133301 794.00823975]
[-108.80142975 784.44659424]
[-119.96971130 774.43011475]
[-130.72830200 763.97479248]
[-141.05995178 753.09741211]
[-150.94813538 741.81542969]
[-160.37701416 730.14678955]
[-169.33148193 718.11029053]
[-177.79721069 705.72509766]
[-185.76063538 693.01116943]
[-193.20899963 679.98876953]
[-200.13037109 666.67883301]
[-206.51368713 653.10260010]
[-212.34870911 639.28186035]
[-217.62608337 625.23870850]
[-222.33738708 610.99566650]
[-226.47505188 596.57556152]
[-230.03245544 582.00146484]
[-233.00392151 567.29663086]
[-235.38465881 552.48474121]
[-237.17088318 537.58941650]
[-238.35971069 522.63458252]
[-238.94924927 507.64419556]
[-238.93855286 492.64218140]
[-238.32765198 477.65258789]
[-237.11750793 462.69946289]
[-235.31005859 447.80673218]
[-232.90820312 432.99822998]
[-229.91578674 418.29769897]
[-226.33761597 403.72866821]
[-222.17939758 389.31445312]
[-217.44779968 375.07812500]
[-212.15040588 361.04254150]
[-206.29570007 347.23013306]
[-199.89303589 333.66302490]
[-192.95269775 320.36294556]
[-185.48577881 307.35119629]
[-177.50424194 294.64859009]
[-169.02087402 282.27554321]
[-160.04925537 270.25180054]
[-150.60375977 258.59661865]
[-140.69950867 247.32868958]
[-130.35235596 236.46604919]
[-119.57887268 226.02610779]
[-108.39632416 216.02554321]
[-96.82260895 206.48042297]
[-84.87626648 197.40599060]
[-72.57642365 188.81678772]
[-59.94277954 180.72657776]
[-46.99556351 173.14831543]
[-33.75551224 166.09414673]
[-20.24382401 159.57533264]
[-6.48214197 153.60235596]
[7.50749779 148.18475342]
[21.70269203 143.33120728]
[36.08071136 139.04949951]
[50.61852264 135.34648132]
[65.29285431 132.22807312]
[80.08020020 129.69926453]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[76.92034149 48.51714706]
[75.77600861 33.34661102]
[85.49378967 22.11717033]
[84.15555573 7.17698622]
[82.81732178 -7.76319885]
[67.83261108 -9.03973961]
[53.29726791 -12.89913654]
[39.65300751 -19.22410965]
[27.31446266 -27.82244682]
[16.65658760 -38.43285751]
[8.00326157 -50.73290253]
[1.61745155 -64.34879303]
[-2.30678558 -78.86676788]
[-3.65019679 -93.84562683]
[-2.37195706 -108.83020020]
[1.48908889 -123.36510468]
[7.81560850 -137.00865173]
[16.41534615 -149.34620667]
[27.02696419 -160.00288391]
[39.32799149 -168.65481567]
[52.94460678 -175.03907776]
[67.46302032 -178.96166992]
[82.44203949 -180.30339050]
[97.42646027 -179.02345276]
[111.96092987 -175.16075134]
[125.60375214 -168.83268738]
[137.94035339 -160.23155212]
[148.59580994 -149.61872864]
[157.24635315 -137.31671143]
[163.62907410 -123.69937134]
[167.55001831 -109.18051147]
[168.89002991 -94.20134735]
[167.60839844 -79.21707153]
[163.74404907 -64.68303680]
[157.41442871 -51.04093170]
[148.81190491 -38.70531464]
[138.19786072 -28.05104828]
[125.89487457 -19.40190697]
[112.27680969 -13.02073097]
[97.75750732 -9.10143280]
[99.09574127 5.83875179]
[100.43397522 20.77893639]
[111.99275208 30.10257530]
[113.56274414 45.23498154]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[124.88084412 125.68635559]
[139.88221741 125.54689026]
[154.87715149 126.00773621]
[169.84162903 127.06816101]
[184.75170898 128.72645569]
[199.58351135 130.97996521]
[214.31326294 133.82508850]
[228.91738892 137.25727844]
[243.37251282 141.27101135]
[257.65545654 145.85987854]
[271.74337769 151.01652527]
[285.61370850 156.73269653]
[299.24420166 162.99923706]
[312.61309814 169.80612183]
[325.69891357 177.14242554]
[338.48074341 184.99641418]
[350.93811035 193.35551453]
[363.05105591 202.20634460]
[374.80017090 211.53471375]
[386.16665649 221.32569885]
[397.13232422 231.56361389]
[407.67959595 242.23205566]
[417.79156494 253.31394958]
[427.45205688 264.79153442]
[436.64559937 276.64645386]
[445.35748291 288.85971069]
[453.57373047 301.41177368]
[461.28118896 314.28247070]
[468.46755981 327.45126343]
[475.12124634 340.89703369]
[481.23168945 354.59823608]
[486.78903198 368.53295898]
[491.78442383 382.67886353]
[496.20980835 397.01330566]
[500.05816650 411.51330566]
[503.32330322 426.15570068]
[505.99996948 440.91699219]
[508.08389282 455.77355957]
[509.57177734 470.70162964]
[510.46118164 485.67724609]
[510.75070190 500.67645264]
[510.43988037 515.67523193]
[509.52920532 530.64959717]
[508.02014160 545.57550049]
[505.91513062 560.42913818]
[503.21749878 575.18658447]
[499.93157959 589.82434082]
[496.06262207 604.31890869]
[491.61688232 618.64703369]
[486.60140991 632.78582764]
[481.02429199 646.71264648]
[474.89440918 660.40515137]
[468.22161865 673.84143066]
[461.01657104 687.00000000]
[453.29083252 699.85980225]
[445.05676270 712.40014648]
[436.32757568 724.60101318]
[427.11718750 736.44287109]
[417.44039917 747.90673828]
[407.31271362 758.97424316]
[396.75030518 769.62768555]
[385.77011108 779.85003662]
[374.38973999 789.62487793]
[362.62738037 798.93652344]
[350.50189209 807.77014160]
[338.03265381 816.11157227]
[325.23968506 823.94738770]
[312.14346313 831.26513672]
[298.76492310 838.05303955]
[285.12551880 844.30017090]
[271.24710083 849.99664307]
[257.15188599 855.13330078]
[242.86242676 859.70190430]
[228.40162659 863.69506836]
[213.79263306 867.10650635]
[199.05885315 869.93072510]
[184.22387695 872.16320801]
[169.31146240 873.80029297]
[154.34547424 874.83947754]
[139.34989929 875.27905273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 130]
[76 129]
[78 127]
[79 126]
[80 125]
[83 122]
[84 121]
[85 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
