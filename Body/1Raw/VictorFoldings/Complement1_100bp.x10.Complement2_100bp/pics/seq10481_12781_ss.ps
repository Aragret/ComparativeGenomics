%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[100.17918396 910.64263916]
[85.31895447 908.57031250]
[70.59976196 905.66052246]
[56.06876755 901.92272949]
[41.77251816 897.36877441]
[27.75680351 892.01330566]
[14.06652451 885.87347412]
[0.74553382 878.96893311]
[-12.16349602 871.32183838]
[-24.61921501 862.95666504]
[-36.58172226 853.90020752]
[-48.01269531 844.18145752]
[-58.87552261 833.83154297]
[-69.13540649 822.88366699]
[-78.75947571 811.37286377]
[-87.71690369 799.33605957]
[-95.97900391 786.81170654]
[-103.51930237 773.84002686]
[-110.31364441 760.46246338]
[-116.34027100 746.72198486]
[-121.57987213 732.66253662]
[-126.01566315 718.32922363]
[-129.63343811 703.76788330]
[-132.42161560 689.02514648]
[-134.37124634 674.14831543]
[-135.47610474 659.18499756]
[-135.73263550 644.18316650]
[-135.14002991 629.19085693]
[-133.70016479 614.25604248]
[-131.41767883 599.42663574]
[-128.29988098 584.75012207]
[-124.35673523 570.27349854]
[-119.60089111 556.04309082]
[-114.04757690 542.10461426]
[-107.71458435 528.50262451]
[-100.62220001 515.28070068]
[-92.79313660 502.48120117]
[-84.25248718 490.14514160]
[-75.02760315 478.31201172]
[-65.14802551 467.01974487]
[-54.64541245 456.30450439]
[-43.55340576 446.20062256]
[-31.90753555 436.74044800]
[-19.74510574 427.95428467]
[-7.10507917 419.87030029]
[5.97205687 412.51437378]
[19.44441032 405.91006470]
[33.26882553 400.07852173]
[47.40102005 395.03845215]
[61.79572296 390.80599976]
[76.40682220 387.39468384]
[91.18751526 384.81546021]
[106.09045410 383.07659912]
[105.19763184 368.10321045]
[104.30481720 353.12979126]
[103.30056000 338.16345215]
[102.18491364 323.20498657]
[101.06925964 308.24655151]
[99.95361328 293.28808594]
[98.83796692 278.32965088]
[89.54285431 273.97396851]
[82.84209442 266.09136963]
[79.99584198 256.06082153]
[81.58216095 245.67395020]
[87.38108063 236.81507874]
[96.40232086 231.11936951]
[95.95571136 216.12602234]
[95.50910950 201.13267517]
[95.06250000 186.13931274]
[94.61589050 171.14596558]
[94.16928864 156.15261841]
[86.05648041 143.66136169]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[83.75152588 100.60508728]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[76.99692535 48.81299210]
[68.91329193 35.94630051]
[68.35899353 20.86123848]
[75.38282013 7.61277437]
[88.00994873 -0.28793085]
[87.34016418 -15.27296925]
[78.36573029 -24.53700256]
[78.11636353 -37.03186417]
[86.18043518 -46.04836273]
[85.73383331 -61.04171371]
[85.28722382 -76.03506470]
[84.84062195 -91.02841187]
[84.39401245 -106.02175903]
[83.94741058 -121.01511383]
[83.50080109 -136.00846863]
[82.94258881 -150.99807739]
[82.27280426 -165.98310852]
[81.60301971 -180.96815491]
[80.93323517 -195.95318604]
[66.74285126 -201.48065186]
[56.03212357 -212.30654907]
[50.65675354 -226.55525208]
[51.54805756 -241.75805664]
[58.55160904 -255.28100586]
[70.45400238 -264.78115845]
[85.19306946 -268.61257935]
[100.21519470 -266.11138916]
[112.91768646 -257.71099854]
[121.09976959 -244.86680603]
[123.34384155 -229.80413818]
[119.26111603 -215.13269043]
[109.55893707 -203.39439392]
[95.91827393 -196.62297058]
[96.58805847 -181.63793945]
[97.25784302 -166.65289307]
[97.92762756 -151.66786194]
[101.36666870 -145.12608337]
[98.49415588 -136.45506287]
[98.94075775 -121.46171570]
[99.38736725 -106.46836853]
[99.83396912 -91.47502136]
[100.28057861 -76.48166656]
[100.72718048 -61.48831940]
[101.17378998 -46.49496841]
[111.18799591 -32.08377075]
[102.32520294 -15.94275475]
[102.99498749 -0.95771599]
[116.27663422 5.78494644]
[124.45442200 18.35394669]
[125.24815369 33.42830658]
[118.34466553 46.96487427]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[114.95397186 93.61582184]
[115.38739014 105.25426483]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[116.51757050 142.75401306]
[109.16263580 155.70600891]
[109.60924530 170.69935608]
[110.05584717 185.69271851]
[110.50245667 200.68606567]
[110.94905853 215.67941284]
[111.39566803 230.67276001]
[126.72911072 243.65602112]
[127.55798340 263.42510986]
[113.79641724 277.21398926]
[114.91206360 292.17245483]
[116.02771759 307.13088989]
[117.14336395 322.08935547]
[118.25901031 337.04779053]
[122.01802826 345.37292480]
[119.27822113 352.23696899]
[120.17104340 367.21038818]
[121.06385803 382.18380737]
[136.06782532 382.13940430]
[151.05027771 382.94393921]
[165.96322632 384.59481812]
[180.75888062 387.08676147]
[195.38986206 390.41177368]
[209.80928040 394.55920410]
[223.97097778 399.51580811]
[237.82957458 405.26562500]
[251.34066772 411.79031372]
[264.46099854 419.06893921]
[277.14849854 427.07818604]
[289.36257935 435.79241943]
[301.06408691 445.18368530]
[312.21551514 455.22195435]
[322.78118896 465.87503052]
[332.72723389 477.10879517]
[342.02178955 488.88723755]
[350.63510132 501.17269897]
[358.53955078 513.92578125]
[365.70983887 527.10559082]
[372.12301636 540.66998291]
[377.75848389 554.57550049]
[382.59823608 568.77752686]
[386.62673950 583.23065186]
[389.83111572 597.88848877]
[392.20108032 612.70416260]
[393.72903442 627.63024902]
[394.41012573 642.61877441]
[394.24212646 657.62188721]
[393.22561646 672.59143066]
[391.36380005 687.47955322]
[388.66268921 702.23846436]
[385.13092041 716.82086182]
[380.77978516 731.18017578]
[375.62322998 745.27026367]
[369.67782593 759.04608154]
[362.96252441 772.46350098]
[355.49893188 785.47943115]
[347.31088257 798.05230713]
[338.42465210 810.14184570]
[328.86868286 821.70922852]
[318.67358398 832.71746826]
[307.87203979 843.13128662]
[296.49862671 852.91729736]
[284.58975220 862.04425049]
[272.18362427 870.48278809]
[259.31994629 878.20593262]
[246.03994751 885.18896484]
[232.38613892 891.40948486]
[218.40228271 896.84753418]
[204.13314819 901.48577881]
[189.62446594 905.30932617]
[174.92271423 908.30590820]
[160.07496643 910.46588135]
[145.12879944 911.78247070]
[130.13208008 912.25128174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 154]
[54 153]
[55 152]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[73 136]
[74 135]
[76 132]
[77 131]
[78 130]
[83 125]
[84 124]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
