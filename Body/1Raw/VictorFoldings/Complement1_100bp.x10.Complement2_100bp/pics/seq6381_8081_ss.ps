%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[75.56189728 639.87145996]
[61.20834351 644.26947021]
[46.49282837 647.23937988]
[31.55706596 648.75256348]
[16.54490280 648.79449463]
[1.60091746 647.36480713]
[-13.13096714 644.47717285]
[-27.50887108 640.15948486]
[-41.39432526 634.45324707]
[-54.65360260 627.41345215]
[-67.15899658 619.10791016]
[-78.79008484 609.61663818]
[-89.43484497 599.03100586]
[-98.99075317 587.45294189]
[-107.36579132 574.99395752]
[-114.47928619 561.77410889]
[-120.26273346 547.92065430]
[-124.66044617 533.56701660]
[-127.63005829 518.85144043]
[-129.14297485 503.91564941]
[-129.18461609 488.90347290]
[-127.75459290 473.95953369]
[-124.86667633 459.22769165]
[-120.54867554 444.84988403]
[-114.84217834 430.96453857]
[-107.80213928 417.70541382]
[-99.49636078 405.20016479]
[-90.00483704 393.56927490]
[-79.41897583 382.92474365]
[-67.84072876 373.36904907]
[-55.38160706 364.99426270]
[-42.16159439 357.88104248]
[-28.30801392 352.09786987]
[-13.95428753 347.70043945]
[0.76134831 344.73110962]
[15.69717026 343.21850586]
[30.70933533 343.17715454]
[45.65326309 344.60748291]
[48.53853607 329.88757324]
[51.42380905 315.16769409]
[54.30908203 300.44781494]
[57.19435501 285.72790527]
[60.07962418 271.00802612]
[54.93492126 257.03012085]
[65.18222046 244.97595215]
[68.06748962 230.25605774]
[70.95276642 215.53616333]
[73.83803558 200.81626892]
[76.72331238 186.09638977]
[70.14966583 169.82511902]
[82.36731720 156.04794312]
[77.01506805 142.14820862]
[87.08176422 129.94277954]
[81.72952271 116.04304504]
[91.79621887 103.83763123]
[90.06850433 100.38981628]
[89.86891937 96.19720459]
[91.49603271 91.95933533]
[94.92474365 88.48316193]
[90.43612671 73.31204224]
[100.80014801 62.61455154]
[104.12240601 47.98709106]
[105.79395294 33.08051682]
[105.79395294 18.08051682]
[105.79395294 3.08051682]
[105.79395294 -11.91948318]
[105.79395294 -26.91948318]
[105.79395294 -41.91948318]
[93.67617035 -45.86857986]
[83.17119598 -53.05366898]
[75.11994934 -62.88740158]
[70.16350555 -74.57089233]
[68.69205475 -87.15863037]
[70.81418610 -99.63498688]
[76.34896851 -110.99617767]
[84.84129333 -120.33098602]
[95.59932709 -126.89389038]
[107.75082397 -130.16455078]
[108.42060852 -145.14959717]
[108.97882080 -160.13920593]
[109.42542267 -175.13255310]
[109.87203217 -190.12590027]
[110.31863403 -205.11924744]
[110.76524353 -220.11260986]
[111.21184540 -235.10595703]
[110.87686920 -250.10221863]
[109.76122284 -265.06066895]
[108.64557648 -280.01913452]
[107.52992249 -294.97756958]
[106.41427612 -309.93603516]
[105.29862976 -324.89447021]
[90.45080566 -327.53890991]
[76.72743988 -333.79351807]
[64.99119568 -343.26510620]
[55.97981644 -355.35833740]
[50.25976944 -369.31295776]
[48.19062042 -384.25183105]
[49.90244293 -399.23583984]
[55.28762054 -413.32308960]
[64.00764465 -425.62805176]
[75.51436615 -435.37722778]
[89.08445740 -441.95773315]
[103.86489105 -444.95599365]
[118.92656708 -444.18347168]
[133.32269287 -439.68875122]
[146.14830017 -431.75436401]
[156.59718323 -420.87908936]
[164.01249695 -407.74652100]
[167.92811584 -393.18222046]
[168.09791565 -378.10171509]
[164.51119995 -363.45294189]
[157.39344788 -350.15676880]
[147.19207764 -339.04898071]
[134.54835510 -330.82785034]
[120.25708008 -326.01013184]
[121.37273407 -311.05166626]
[122.48838043 -296.09323120]
[123.60402679 -281.13476562]
[124.71967316 -266.17633057]
[125.83532715 -251.21786499]
[135.55699158 -262.64105225]
[150.32540894 -265.26666260]
[163.38865662 -257.89431763]
[168.77439880 -243.89454651]
[164.02033997 -229.66784668]
[151.29997253 -221.71849060]
[136.42887878 -223.68080139]
[126.20520020 -234.65934753]
[125.75859070 -219.66600037]
[125.31198883 -204.67265320]
[124.86537933 -189.67930603]
[124.41877747 -174.68594360]
[123.97216797 -159.69259644]
[126.91512299 -152.91316223]
[123.40564728 -144.47981262]
[122.73586273 -129.49476624]
[138.68353271 -122.62419128]
[150.79429626 -110.13066101]
[157.19137573 -93.91138458]
[156.86848450 -76.44385529]
[149.84805298 -60.40746307]
[137.18194580 -48.27246475]
[120.79395294 -41.91948318]
[120.79395294 -26.91948318]
[120.79395294 -11.91948318]
[120.79395294 3.08051682]
[120.79395294 18.08051682]
[120.79395294 33.08051682]
[128.21691895 20.04596519]
[139.80108643 10.51669693]
[154.02236938 5.74645090]
[169.00970459 6.36283493]
[182.79124451 12.28475285]
[193.55380249 22.73307419]
[199.88136292 36.33314514]
[200.94143677 51.29563904]
[196.59455872 65.65198517]
[187.41262817 77.51335907]
[174.60369873 85.31919098]
[159.85298157 88.04248810]
[145.10119629 85.32495880]
[132.28919983 77.52413940]
[123.10263062 65.66635895]
[118.74987030 51.30934906]
[115.42761230 65.93681335]
[120.15386200 80.06167603]
[109.55220795 91.80541992]
[106.55743408 106.50342560]
[111.71900177 121.45898438]
[101.84297943 132.60858154]
[107.00455475 147.56414795]
[97.12853241 158.71374512]
[103.82824707 169.73538208]
[101.30400848 181.97515869]
[91.44319916 188.98165894]
[88.55792999 203.70155334]
[85.67265320 218.42143250]
[82.78738403 233.14132690]
[79.90211487 247.86122131]
[84.84043884 262.89196777]
[74.79951477 273.89328003]
[71.91424561 288.61318970]
[69.02896881 303.33306885]
[66.14369965 318.05297852]
[63.25842667 332.77285767]
[60.37315369 347.49273682]
[74.75122833 351.80987549]
[88.63691711 357.51556396]
[101.89646912 364.55480957]
[114.40219879 372.85983276]
[126.03366852 382.35064697]
[136.67884827 392.93588257]
[146.23522949 404.51354980]
[154.61074829 416.97216797]
[161.72477722 430.19174194]
[167.50878906 444.04498291]
[171.90707397 458.39843750]
[174.87727356 473.11392212]
[176.39077759 488.04965210]
[176.43302917 503.06179810]
[175.00360107 518.00579834]
[172.11627197 532.73773193]
[167.79884338 547.11572266]
[162.09291077 561.00134277]
[155.05339050 574.26074219]
[146.74812317 586.76629639]
[137.25706482 598.39758301]
[126.67162323 609.04254150]
[115.09375763 618.59869385]
[102.63497162 626.97393799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 181]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[51 172]
[53 170]
[55 168]
[59 167]
[61 165]
[62 164]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[78 136]
[79 135]
[80 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
