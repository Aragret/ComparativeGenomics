%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[47.55855560 662.40173340]
[35.26794052 671.01361084]
[22.35416031 678.65930176]
[8.89299202 685.29406738]
[-5.03656530 690.87884521]
[-19.35276604 695.38098145]
[-33.97159576 698.77398682]
[-48.80726624 701.03796387]
[-63.77271271 702.15966797]
[-78.78011322 702.13244629]
[-93.74138641 700.95654297]
[-108.56875610 698.63873291]
[-123.17518616 695.19274902]
[-137.47496033 690.63873291]
[-151.38418579 685.00347900]
[-164.82119751 678.31994629]
[-177.70718384 670.62744141]
[-189.96649170 661.97113037]
[-201.52717590 652.40173340]
[-212.32142639 641.97546387]
[-222.28585815 630.75347900]
[-231.36201477 618.80169678]
[-239.49664307 606.19012451]
[-246.64198303 592.99291992]
[-252.75611877 579.28747559]
[-257.80316162 565.15417480]
[-261.75350952 550.67596436]
[-264.58392334 535.93786621]
[-266.27789307 521.02636719]
[-266.82537842 506.02893066]
[-266.22320557 491.03359985]
[-264.47494507 476.12835693]
[-261.59078979 461.40066528]
[-257.58770752 446.93698120]
[-252.48919678 432.82217407]
[-246.32514954 419.13909912]
[-239.13174438 405.96798706]
[-230.95121765 393.38619995]
[-221.83154297 381.46752930]
[-211.82627869 370.28195190]
[-200.99409485 359.89508057]
[-189.39860535 350.36791992]
[-177.10783386 341.75631714]
[-164.19389343 334.11083984]
[-150.73260498 327.47637939]
[-136.80294800 321.89181519]
[-122.48665619 317.38995361]
[-107.86776733 313.99722290]
[-93.03205109 311.73348999]
[-78.06658173 310.61209106]
[-63.05918503 310.63958740]
[-48.09792709 311.81582642]
[-33.27061081 314.13388062]
[-18.66424370 317.58013916]
[-4.36454821 322.13442993]
[9.54456043 327.76998901]
[16.22475433 314.33959961]
[14.96514130 299.49835205]
[28.03865433 290.58804321]
[34.71884918 277.15765381]
[41.39904404 263.72729492]
[48.07923889 250.29690552]
[53.74202347 236.40687561]
[58.35603333 222.13414001]
[62.97004318 207.86141968]
[67.58405304 193.58868408]
[71.77106476 179.18489075]
[75.52736664 164.66284180]
[79.28366852 150.14077759]
[74.98005676 135.88145447]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.30757141 57.26306915]
[107.06387329 42.74100876]
[110.82017517 28.21895027]
[112.71346283 13.33891487]
[112.71346283 -1.66108525]
[112.71346283 -16.66108513]
[103.13877869 -32.39025879]
[112.49950409 -47.23423767]
[112.27617645 -62.23257446]
[112.05284882 -77.23091125]
[111.82952118 -92.22924805]
[111.60619354 -107.22758484]
[111.38286591 -122.22592926]
[101.57505798 -137.81080627]
[110.71374512 -152.79251099]
[110.26713562 -167.78585815]
[109.82052612 -182.77920532]
[109.37392426 -197.77255249]
[101.22917175 -211.33624268]
[108.58410645 -224.28823853]
[108.13749695 -239.28158569]
[99.99274445 -252.84527588]
[107.34767914 -265.79727173]
[93.38412476 -271.96023560]
[83.48393250 -283.57696533]
[79.61279297 -298.34103394]
[82.53932953 -313.32095337]
[91.68247223 -325.54248047]
[105.22683716 -332.57901001]
[120.48318481 -333.03344727]
[134.42236328 -326.81555176]
[144.27673340 -315.15991211]
[148.08969116 -300.38073730]
[145.10418701 -285.41244507]
[135.91299438 -273.22702026]
[122.34102631 -266.24386597]
[130.45382690 -253.75260925]
[123.13084412 -239.72819519]
[123.57745361 -224.73484802]
[131.69026184 -212.24357605]
[124.36727142 -198.21916199]
[124.81388092 -183.22581482]
[125.26048279 -168.23246765]
[125.70709229 -153.23910522]
[134.29354858 -144.71858215]
[134.78833008 -132.23103333]
[126.38120270 -122.44925690]
[126.60453033 -107.45091248]
[126.82785797 -92.45257568]
[127.05118561 -77.45423889]
[127.27451324 -62.45590210]
[127.49784088 -47.45756531]
[135.95648193 -38.81014252]
[136.26528931 -26.31660843]
[127.71346283 -16.66108513]
[127.71346283 -1.66108525]
[127.71346283 13.33891487]
[134.83326721 0.13632619]
[145.80940247 -10.08740425]
[159.48350525 -16.25334167]
[174.41253662 -17.71078110]
[189.02098083 -14.30591488]
[201.76719666 -6.39806604]
[211.30603027 5.17823076]
[216.63082886 19.20130157]
[217.17965698 34.19125748]
[212.89459229 48.56617355]
[204.22784424 60.80903244]
[192.09405518 69.62780762]
[177.77369690 74.09184265]
[162.77806091 73.73003387]
[148.68966675 68.58056641]
[136.99528503 59.18687057]
[128.92906189 46.54028702]
[125.34223175 31.97525024]
[121.58592987 46.49731064]
[117.82963562 61.01936722]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[104.48365784 143.51290894]
[93.80572510 153.89707947]
[90.04942322 168.41914368]
[86.29312134 182.94119263]
[87.60157776 187.08148193]
[87.53151703 191.02604675]
[86.31375122 194.36557007]
[84.28829193 196.80773926]
[81.85678864 198.20268250]
[77.24277496 212.47541809]
[72.62876892 226.74815369]
[68.01475525 241.02088928]
[80.16056824 232.21865845]
[95.06972504 230.57032776]
[108.84501648 236.50677490]
[117.88561249 248.47621155]
[119.82831573 263.34988403]
[114.16532135 277.23983765]
[102.37691498 286.51525879]
[87.54455566 288.75158691]
[73.54538727 283.36422729]
[64.03876495 271.76147461]
[61.50961304 256.97711182]
[54.82941818 270.40747070]
[48.14922333 283.83786011]
[41.46902847 297.26821899]
[42.25083160 313.07009888]
[29.65513039 321.01980591]
[22.97493553 334.45016479]
[35.86105728 342.14242554]
[48.12052917 350.79852295]
[59.68140411 360.36767578]
[70.47583771 370.79376221]
[80.44049072 382.01553345]
[89.51688385 393.96719360]
[97.65174103 406.57855225]
[104.79733276 419.77566528]
[110.91172791 433.48101807]
[115.95903778 447.61422729]
[119.90964508 462.09231567]
[122.74037170 476.83035278]
[124.43459320 491.74185181]
[124.98237610 506.73925781]
[124.38050079 521.73461914]
[122.63250732 536.63989258]
[119.74864197 551.36761475]
[115.74583435 565.83135986]
[110.64758301 579.94628906]
[104.48379517 593.62951660]
[97.29064178 606.80072021]
[89.11034393 619.38269043]
[79.99090576 631.30151367]
[69.98584747 642.48730469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 186]
[57 185]
[59 183]
[60 182]
[61 181]
[62 180]
[63 169]
[64 168]
[65 167]
[66 166]
[67 161]
[68 160]
[69 159]
[71 157]
[72 156]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 132]
[80 131]
[81 130]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[90 119]
[91 118]
[92 117]
[93 116]
[95 114]
[96 113]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
