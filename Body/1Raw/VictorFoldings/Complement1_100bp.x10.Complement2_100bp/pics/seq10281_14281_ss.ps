%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[76.51389313 331.95123291]
[70.14573669 345.53829956]
[62.90257645 358.67980957]
[54.81542969 371.31942749]
[45.91891861 383.40307617]
[36.25114822 394.87896729]
[25.85351372 405.69799805]
[14.77053928 415.81384277]
[3.04968572 425.18313599]
[-9.25885582 433.76580811]
[-22.10237885 441.52505493]
[-35.42588425 448.42770386]
[-49.17232132 454.44415283]
[-63.28281784 459.54867554]
[-77.69696045 463.71939087]
[-92.35301971 466.93844604]
[-107.18823242 469.19201660]
[-122.13906860 470.47052002]
[-137.14152527 470.76846313]
[-152.13133240 470.08453369]
[-167.04432678 468.42169189]
[-181.81661987 465.78704834]
[-196.38497925 462.19189453]
[-210.68701172 457.65161133]
[-224.66148376 452.18566895]
[-238.24851990 445.81741333]
[-251.38996887 438.57418823]
[-264.02957153 430.48696899]
[-276.11315918 421.59039307]
[-287.58898926 411.92254639]
[-298.40795898 401.52484131]
[-308.52374268 390.44180298]
[-317.89297485 378.72091675]
[-326.47555542 366.41232300]
[-334.23474121 353.56875610]
[-341.13729858 340.24520874]
[-347.15368652 326.49871826]
[-352.25811768 312.38818359]
[-356.42874146 297.97402954]
[-359.64770508 283.31796265]
[-361.90121460 268.48272705]
[-363.17962646 253.53187561]
[-363.47744751 238.52943420]
[-362.79345703 223.53962708]
[-361.13052368 208.62664795]
[-358.49578857 193.85435486]
[-354.90054321 179.28601074]
[-350.36019897 164.98400879]
[-344.89413452 151.00958252]
[-338.52581787 137.42257690]
[-331.28250122 124.28116608]
[-323.19522095 111.64163208]
[-314.29855347 99.55809784]
[-304.63064575 88.08229828]
[-294.23291016 77.26338959]
[-283.14981079 67.14769745]
[-271.42883301 57.77853012]
[-259.12020874 49.19601822]
[-246.27658081 41.43690491]
[-232.95298767 34.53442001]
[-219.20648193 28.51812553]
[-205.09593201 23.41377831]
[-190.68173218 19.24323654]
[-176.02565002 16.02436256]
[-161.19039917 13.77093887]
[-146.23954773 12.49261475]
[-131.23709106 12.19486332]
[-116.24729156 12.87896061]
[-101.33432007 14.54197788]
[-86.56204987 17.17679214]
[-71.99372864 20.77212143]
[-57.69175339 25.31257057]
[-43.71735764 30.77869415]
[-30.13038445 37.14708710]
[-16.98901749 44.39048004]
[-4.34953070 52.47785568]
[7.73395300 61.37457657]
[19.20969009 71.04254913]
[30.02853584 81.44037628]
[40.14416885 92.52352905]
[49.51326370 104.24455261]
[58.09570694 116.55324554]
[70.93464661 108.79685211]
[83.77359009 101.04045868]
[91.48883820 86.14579010]
[108.26244354 85.99603271]
[120.98447418 78.04934692]
[133.70651245 70.10266113]
[146.42854309 62.15597916]
[159.15058899 54.20929337]
[171.87261963 46.26260757]
[184.59465027 38.31592560]
[197.31669617 30.36923981]
[210.03872681 22.42255592]
[222.76077271 14.47587109]
[215.71780396 1.22515500]
[209.61633301 -12.48457718]
[204.48606873 -26.58653069]
[200.35202026 -41.01200485]
[197.23429871 -55.69071579]
[195.14811707 -70.55115509]
[194.10363770 -85.52091980]
[194.10594177 -100.52706909]
[195.15502930 -115.49651337]
[197.24577332 -130.35630798]
[200.36799622 -145.03405762]
[204.50648499 -159.45826721]
[209.64108276 -173.55863953]
[215.74676514 -187.26649475]
[222.79380798 -200.51504517]
[230.74783325 -213.23974609]
[239.57014465 -225.37860107]
[249.21771240 -236.87246704]
[259.64355469 -247.66535950]
[270.79687500 -257.70468140]
[282.62335205 -266.94152832]
[295.06533813 -275.33090210]
[308.06225586 -282.83190918]
[321.55075073 -289.40805054]
[335.46508789 -295.02722168]
[349.73754883 -299.66210938]
[364.29852295 -303.29010010]
[379.07711792 -305.89352417]
[394.00134277 -307.45971680]
[408.99844360 -307.98101807]
[423.99536133 -307.45489502]
[438.91906738 -305.88391113]
[453.69680786 -303.27572632]
[468.25662231 -299.64306641]
[482.52758789 -295.00357056]
[496.44012451 -289.37991333]
[509.92651367 -282.79943848]
[522.92102051 -275.29425049]
[535.36029053 -266.90087891]
[547.18377686 -257.66024780]
[558.33386230 -247.61732483]
[568.75628662 -236.82109070]
[578.40014648 -225.32411194]
[587.21856689 -213.18241882]
[595.16845703 -200.45516968]
[602.21124268 -187.20434570]
[608.31250000 -173.49452209]
[613.44256592 -159.39250183]
[617.57641602 -144.96696472]
[620.69396973 -130.28820801]
[622.77990723 -115.42774200]
[623.82415771 -100.45796967]
[623.82165527 -85.45181274]
[622.77233887 -70.48238373]
[620.68139648 -55.62261963]
[617.55895996 -40.94491196]
[613.42028809 -26.52076721]
[608.28546143 -12.42046356]
[602.17956543 1.28730500]
[595.13238525 14.53575516]
[587.17816162 27.26034164]
[578.35565186 39.39907074]
[568.70794678 50.89279938]
[558.28192139 61.68553925]
[547.12847900 71.72470093]
[535.30187988 80.96138000]
[522.85974121 89.35057068]
[509.86273193 96.85140228]
[496.37414551 103.42733002]
[482.45971680 109.04632568]
[468.18719482 113.68100739]
[453.62615967 117.30878448]
[438.84753418 119.91200256]
[423.92330933 121.47796631]
[408.92620850 121.99904633]
[393.92929077 121.47270966]
[379.00561523 119.90151978]
[364.22787476 117.29312897]
[349.66812134 113.66024780]
[335.39721680 109.02056885]
[321.48477173 103.39670563]
[307.99847412 96.81604767]
[295.00408936 89.31066132]
[282.56491089 80.91711426]
[270.74154663 71.67629242]
[259.59161377 61.63322449]
[249.16938782 50.83683395]
[239.52566528 39.33972549]
[230.70744324 27.19790840]
[217.98541260 35.14459229]
[205.26338196 43.09127808]
[192.54133606 51.03796005]
[179.81930542 58.98464584]
[167.09727478 66.93132782]
[154.37522888 74.87801361]
[141.65319824 82.82469940]
[128.93116760 90.77138519]
[116.20912170 98.71807098]
[112.90834808 109.88704681]
[102.98486328 115.98342133]
[91.52997589 113.87940216]
[78.69104004 121.63579559]
[65.85209656 129.39218140]
[72.75481415 142.71565247]
[78.77135468 156.46205139]
[83.87595367 170.57252502]
[88.04674530 184.98663330]
[91.26588440 199.64266968]
[93.51956940 214.47787476]
[94.79815674 229.42871094]
[95.09617615 244.43115234]
[94.41233826 259.42095947]
[92.74958801 274.33395386]
[90.11503601 289.10629272]
[86.51996613 303.67468262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 198]
[83 197]
[84 196]
[86 193]
[87 192]
[88 191]
[89 190]
[90 189]
[91 188]
[92 187]
[93 186]
[94 185]
[95 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
