%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[288.59628296 202.93641663]
[280.95642090 215.84144592]
[272.43493652 228.18211365]
[263.07339478 239.89830017]
[252.91735840 250.93292236]
[242.01634216 261.23220825]
[230.42343140 270.74600220]
[218.19511414 279.42791748]
[205.39097595 287.23568726]
[192.07337952 294.13128662]
[178.30720520 300.08108521]
[164.15953064 305.05612183]
[149.69927979 309.03216553]
[134.99690247 311.98980713]
[120.12402344 313.91467285]
[105.15310669 314.79736328]
[90.15708160 314.63360596]
[75.20900726 313.42416382]
[60.38171387 311.17492676]
[45.74743652 307.89691162]
[31.37747192 303.60601807]
[17.34182549 298.32321167]
[3.70888042 292.07415771]
[-9.45494652 284.88937378]
[-22.08552170 276.80380249]
[-34.12131119 267.85690308]
[-45.50367737 258.09219360]
[-56.17716980 247.55729675]
[-66.08978271 236.30351257]
[-75.19322968 224.38568115]
[-83.44316101 211.86184692]
[-90.79936981 198.79302979]
[-97.22603607 185.24291992]
[-102.69183350 171.27751160]
[-107.17015076 156.96484375]
[-110.63915253 142.37466431]
[-113.08194733 127.57802582]
[-114.48663330 112.64704132]
[-114.84636688 97.65443420]
[-114.15940094 82.67325592]
[-112.42906952 67.77649689]
[-109.66381073 53.03672028]
[-105.87709808 38.52574539]
[-101.08737946 24.31426430]
[-95.31798553 10.47151470]
[-88.59702301 -2.93506193]
[-80.95724487 -15.84015179]
[-72.43585968 -28.18088341]
[-63.07439041 -39.89713287]
[-52.91844177 -50.93181992]
[-42.01749420 -61.23118591]
[-30.42465591 -70.74505615]
[-18.19640350 -79.42707062]
[-5.39231348 -87.23494720]
[7.92523575 -94.13063049]
[21.69136238 -100.08053589]
[35.83899689 -105.05567169]
[50.29921722 -109.03180695]
[65.00157166 -111.98956299]
[79.87444305 -113.91452789]
[94.84535217 -114.79733276]
[109.84137726 -114.63366699]
[124.78945923 -113.42433167]
[139.61677551 -111.17522430]
[154.25106812 -107.89729309]
[168.62106323 -103.60651398]
[182.65675354 -98.32379150]
[196.28974915 -92.07485199]
[209.45361328 -84.89015198]
[222.08425903 -76.80469513]
[234.12010193 -67.85785675]
[245.50254822 -58.09324265]
[256.17611694 -47.55841827]
[267.43222046 -57.47306824]
[278.68829346 -67.38771820]
[289.94439697 -77.30236816]
[301.20050049 -87.21701813]
[312.45660400 -97.13167572]
[323.71267700 -107.04632568]
[334.96878052 -116.96097565]
[325.71640015 -128.77279663]
[317.15991211 -141.09806824]
[309.32769775 -153.89581299]
[302.24581909 -167.12351990]
[295.93774414 -180.73727417]
[290.42449951 -194.69183350]
[285.72436523 -208.94084167]
[281.85293579 -223.43698120]
[278.82308960 -238.13206482]
[276.64489746 -252.97731018]
[275.32559204 -267.92337036]
[274.86953735 -282.92065430]
[275.27828979 -297.91925049]
[276.55044556 -312.86941528]
[278.68179321 -327.72146606]
[281.66528320 -342.42602539]
[285.49096680 -356.93429565]
[290.14614868 -371.19805908]
[295.61535645 -385.16995239]
[301.88043213 -398.80352783]
[308.92056274 -412.05352783]
[316.71237183 -424.87591553]
[325.22994995 -437.22808838]
[334.44503784 -449.06903076]
[344.32696533 -460.35943604]
[354.84298706 -471.06173706]
[365.95809937 -481.14044189]
[377.63540649 -490.56201172]
[389.83609009 -499.29519653]
[402.51968384 -507.31094360]
[415.64401245 -514.58264160]
[429.16546631 -521.08618164]
[443.03915405 -526.79992676]
[457.21896362 -531.70483398]
[471.65783691 -535.78472900]
[486.30773926 -539.02593994]
[501.12005615 -541.41778564]
[516.04559326 -542.95227051]
[531.03472900 -543.62432861]
[546.03765869 -543.43170166]
[561.00457764 -542.37506104]
[575.88580322 -540.45788574]
[590.63183594 -537.68658447]
[605.19372559 -534.07031250]
[619.52307129 -529.62109375]
[633.57226562 -524.35369873]
[647.29467773 -518.28570557]
[660.64471436 -511.43719482]
[673.57806396 -503.83093262]
[686.05163574 -495.49215698]
[698.02416992 -486.44863892]
[709.45574951 -476.73037720]
[720.30841064 -466.36965942]
[730.54620361 -455.40087891]
[740.13500977 -443.86053467]
[749.04309082 -431.78689575]
[757.24072266 -419.22009277]
[764.70074463 -406.20190430]
[771.39843750 -392.77554321]
[777.31140137 -378.98562622]
[782.42010498 -364.87792969]
[786.70758057 -350.49935913]
[790.15954590 -335.89764404]
[792.76452637 -321.12130737]
[794.51385498 -306.21945190]
[795.40179443 -291.24157715]
[795.42535400 -276.23739624]
[794.58441162 -261.25677490]
[792.88183594 -246.34951782]
[790.32324219 -231.56507874]
[786.91711426 -216.95262146]
[782.67480469 -202.56065369]
[777.61041260 -188.43701172]
[771.74066162 -174.62860107]
[765.08520508 -161.18127441]
[757.66607666 -148.13973999]
[749.50787354 -135.54728699]
[740.63775635 -123.44576263]
[731.08520508 -111.87536621]
[720.88189697 -100.87452698]
[710.06176758 -90.47979736]
[698.66070557 -80.72570801]
[686.71667480 -71.64465332]
[674.26928711 -63.26680374]
[661.35992432 -55.61998749]
[648.03143311 -48.72961044]
[634.32812500 -42.61856079]
[620.29553223 -37.30713654]
[605.98022461 -32.81298828]
[591.42974854 -29.15103531]
[576.69244385 -26.33345032]
[561.81738281 -24.36958885]
[546.85382080 -23.26597786]
[531.85156250 -23.02628136]
[516.86035156 -23.65129471]
[501.93011475 -25.13894463]
[487.11035156 -27.48428726]
[472.45034790 -30.67953110]
[457.99874878 -34.71406174]
[443.80361938 -39.57448196]
[429.91207886 -45.24463654]
[416.37026978 -51.70569992]
[403.22320557 -58.93619919]
[390.51452637 -66.91212463]
[378.28646851 -75.60697174]
[366.57965088 -84.99185944]
[355.43295288 -95.03562164]
[344.88342285 -105.70487976]
[333.62734985 -95.79022980]
[322.37124634 -85.87557983]
[311.11514282 -75.96092224]
[299.85903931 -66.04627228]
[288.60296631 -56.13162231]
[277.34686279 -46.21697235]
[266.09075928 -36.30232239]
[275.19412231 -24.38441849]
[283.44396973 -11.86052799]
[290.80007935 1.20833170]
[297.22665405 14.75849247]
[302.69235229 28.72393990]
[307.17056274 43.03663635]
[310.63946533 57.62685013]
[313.08215332 72.42350006]
[314.48672485 87.35449982]
[314.84634399 102.34710693]
[314.15927124 117.32827759]
[312.42883301 132.22503662]
[309.66348267 146.96478271]
[305.87664795 161.47573853]
[301.08682251 175.68717957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 195]
[74 194]
[75 193]
[76 192]
[77 191]
[78 190]
[79 189]
[80 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
