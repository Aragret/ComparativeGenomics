%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[175.23170471 551.38757324]
[167.08421326 538.78515625]
[159.87837219 525.62164307]
[153.65263367 511.96722412]
[148.44021606 497.89480591]
[144.26893616 483.47943115]
[141.16104126 468.79803467]
[139.13311768 453.92892456]
[138.19596863 438.95147705]
[138.35462952 423.94558716]
[139.60821533 408.99127197]
[141.95007324 394.16839600]
[145.36769104 379.55596924]
[149.84281921 365.23202515]
[155.35160828 351.27294922]
[161.86463928 337.75323486]
[169.34719849 324.74502563]
[177.75932312 312.31768799]
[187.05615234 300.53756714]
[197.18807983 289.46749878]
[208.10104370 279.16653442]
[219.73681641 269.68966675]
[211.13825989 257.39883423]
[202.53968811 245.10800171]
[193.94113159 232.81715393]
[185.16052246 220.65570068]
[176.19982910 208.62632751]
[167.23913574 196.59695435]
[158.27844238 184.56756592]
[149.31773376 172.53819275]
[140.35704041 160.50881958]
[131.39634705 148.47943115]
[121.99419403 136.79185486]
[112.16362000 125.46226501]
[102.33303833 114.13266754]
[89.18103790 109.38751221]
[86.33737183 95.69791412]
[71.44908905 90.34536743]
[68.95202637 75.66156769]
[58.87088776 64.55433655]
[48.54421616 53.67499924]
[38.21754837 42.79566574]
[27.89088058 31.91633224]
[17.56421280 21.03699684]
[7.23754358 10.15766239]
[-7.87488842 5.47525263]
[-11.02513123 -9.08239937]
[-22.83211899 0.18741742]
[-35.45527649 8.31086540]
[-48.78366470 15.21655464]
[-62.70015335 20.84379387]
[-77.08243561 25.14313316]
[-91.80413055 28.07678604]
[-106.73583984 29.61897278]
[-121.74636078 29.75613785]
[-136.70376587 28.48707962]
[-151.47660828 25.82294655]
[-165.93505859 21.78715515]
[-179.95205688 16.41517067]
[-193.40441895 9.75420380]
[-206.17391968 1.86279333]
[-218.14833069 -7.18970919]
[-229.22244263 -17.32374954]
[-239.29890442 -28.45026588]
[-248.28916931 -40.47147751]
[-256.11422729 -53.28173447]
[-262.70535278 -66.76846313]
[-268.00454712 -80.81314087]
[-271.96530151 -95.29232788]
[-274.55276489 -110.07879639]
[-275.74423218 -125.04257965]
[-275.52920532 -140.05218506]
[-273.90957642 -154.97569275]
[-270.89962769 -169.68197632]
[-266.52572632 -184.04176331]
[-260.82638550 -197.92887878]
[-253.85165405 -211.22126770]
[-245.66284180 -223.80212402]
[-236.33190918 -235.56086731]
[-225.94085693 -246.39418030]
[-214.58100891 -256.20684814]
[-202.35218811 -264.91259766]
[-189.36187744 -272.43499756]
[-175.72422791 -278.70788574]
[-161.55909729 -283.67614746]
[-146.99098206 -287.29611206]
[-132.14788818 -289.53598022]
[-117.16026306 -290.37603760]
[-102.15983582 -289.80895996]
[-87.27841949 -287.83966064]
[-72.64680481 -284.48550415]
[-58.39358139 -279.77597046]
[-44.64399719 -273.75238037]
[-31.51889420 -266.46774292]
[-19.13361931 -257.98602295]
[-7.59701395 -248.38179016]
[2.98953390 -237.73944092]
[12.53298759 -226.15251160]
[20.94947624 -213.72282410]
[28.16503334 -200.55961609]
[34.11624908 -186.77854919]
[38.75082016 -172.50076294]
[42.02802277 -157.85173035]
[43.91904831 -142.96017456]
[44.40727997 -127.95696259]
[43.48843002 -112.97396851]
[41.17057419 -98.14285278]
[37.47407532 -83.59395599]
[32.43142700 -69.45513916]
[26.08694267 -55.85065460]
[18.49637794 -42.90006638]
[9.72644043 -30.71718025]
[-0.14579703 -19.40906906]
[14.22800255 -15.50482082]
[18.11687851 -0.16900580]
[28.44354630 10.71032810]
[38.77021408 21.58966255]
[49.09688187 32.46899796]
[59.42355347 43.34833145]
[69.75022125 54.22766495]
[73.24645233 54.68450928]
[76.69510651 56.85748291]
[79.29201508 60.70578003]
[80.28161621 65.83098602]
[94.46675110 70.37316132]
[97.66696167 85.86733246]
[110.81896210 90.61248779]
[113.66262817 104.30208588]
[123.49320984 115.63168335]
[133.32379150 126.96127319]
[136.97158813 112.41158295]
[150.55732727 106.05329132]
[164.06610107 112.57350159]
[167.53973389 127.16575623]
[158.41761780 139.07318115]
[143.42572021 139.51873779]
[152.38642883 151.54811096]
[161.34712219 163.57749939]
[170.30781555 175.60687256]
[179.26850891 187.63624573]
[188.22920227 199.66563416]
[197.18989563 211.69500732]
[203.10011292 214.65826416]
[206.16633606 219.44316101]
[206.23196411 224.21859741]
[214.83053589 236.50942993]
[223.42909241 248.80027771]
[232.02766418 261.09109497]
[244.91903687 253.40899658]
[258.33679199 246.68840027]
[272.20932007 240.96516418]
[286.46258545 236.26982117]
[301.02059937 232.62744141]
[315.80563354 230.05744934]
[330.73883057 228.57356262]
[345.74050903 228.18370056]
[360.73065186 228.88992310]
[375.62921143 230.68847656]
[390.35675049 233.56976318]
[404.83468628 237.51841736]
[418.98577881 242.51336670]
[432.73449707 248.52795410]
[446.00747681 255.53009033]
[458.73394775 263.48242188]
[470.84597778 272.34249878]
[482.27893066 282.06307983]
[492.97183228 292.59231567]
[502.86764526 303.87396240]
[511.91351318 315.84786987]
[520.06121826 328.45013428]
[527.26727295 341.61352539]
[533.49322510 355.26782227]
[538.70587158 369.34017944]
[542.87738037 383.75546265]
[545.98553467 398.43682861]
[548.01373291 413.30587769]
[548.95111084 428.28332520]
[548.79266357 443.28921509]
[547.53936768 458.24353027]
[545.19775391 473.06646729]
[541.78033447 487.67892456]
[537.30548096 502.00296021]
[531.79693604 515.96209717]
[525.28405762 529.48193359]
[517.80175781 542.49029541]
[509.38983154 554.91772461]
[500.09320068 566.69805908]
[489.96145630 577.76824951]
[479.04864502 588.06939697]
[467.41302490 597.54644775]
[455.11666870 606.14886475]
[442.22515869 613.83081055]
[428.80731201 620.55114746]
[414.93469238 626.27416992]
[400.68133545 630.96929932]
[386.12326050 634.61145020]
[371.33816528 637.18115234]
[356.40493774 638.66479492]
[341.40325928 639.05444336]
[326.41314697 638.34796143]
[311.51461792 636.54919434]
[296.78710938 633.66766357]
[282.30923462 629.71875000]
[268.15823364 624.72357178]
[254.40963745 618.70874023]
[241.13674927 611.70642090]
[228.41041565 603.75384521]
[216.29853821 594.89355469]
[204.86572266 585.17279053]
[194.17300415 574.64343262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 148]
[23 147]
[24 146]
[25 145]
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[33 130]
[34 129]
[35 128]
[37 126]
[39 124]
[40 120]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[47 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
