%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[82.34565735 906.65472412]
[67.37465668 905.67181396]
[52.47264862 903.93188477]
[37.67789841 901.43945312]
[23.02837563 898.20086670]
[8.56168842 894.22442627]
[-5.68502665 889.52038574]
[-19.67519951 884.10076904]
[-33.37291718 877.97949219]
[-46.74301529 871.17236328]
[-59.75117874 863.69671631]
[-72.36401367 855.57189941]
[-84.54913330 846.81860352]
[-96.27527618 837.45941162]
[-107.51232147 827.51831055]
[-118.23144531 817.02075195]
[-128.40510559 805.99383545]
[-138.00721741 794.46575928]
[-147.01310730 782.46612549]
[-155.39967346 770.02575684]
[-163.14537048 757.17657471]
[-170.23033142 743.95159912]
[-176.63636780 730.38476562]
[-182.34701538 716.51086426]
[-187.34764099 702.36547852]
[-191.62539673 687.98504639]
[-195.16929626 673.40637207]
[-197.97026062 658.66687012]
[-200.02107239 643.80450439]
[-201.31648254 628.85729980]
[-201.85317993 613.86364746]
[-201.62976074 598.86206055]
[-200.64680481 583.89105225]
[-198.90686035 568.98907471]
[-196.41435242 554.19433594]
[-193.17572021 539.54479980]
[-189.19923401 525.07812500]
[-184.49514771 510.83142090]
[-179.07550049 496.84127808]
[-172.95422363 483.14358521]
[-166.14701843 469.77349854]
[-158.67137146 456.76535034]
[-150.54647827 444.15255737]
[-141.79316711 431.96743774]
[-132.43392944 420.24133301]
[-122.49279022 409.00430298]
[-111.99525452 398.28521729]
[-100.96828461 388.11157227]
[-89.44017792 378.50949097]
[-77.44052887 369.50363159]
[-65.00014496 361.11712646]
[-52.15095520 353.37145996]
[-38.92594528 346.28652954]
[-25.35906410 339.88052368]
[-11.48513603 334.16992188]
[2.66022348 329.16934204]
[17.04070282 324.89160156]
[31.61938858 321.34774780]
[46.35885620 318.54684448]
[61.22127151 316.49606323]
[76.16847992 315.20068359]
[91.16210938 314.66403198]
[91.38543701 299.66571045]
[91.60876465 284.66735840]
[91.83209229 269.66903687]
[92.05541992 254.67068481]
[77.98474884 246.72532654]
[69.79377747 232.68739319]
[69.79991913 216.34062195]
[78.09619904 202.14669800]
[92.50000000 194.02745056]
[92.50000000 179.02745056]
[92.50000000 164.02745056]
[92.50000000 149.02745056]
[92.50000000 134.02745056]
[84.76270294 121.30017090]
[92.50000000 107.50000000]
[91.94178772 92.51039124]
[90.82614136 77.55194092]
[89.71049500 62.59348297]
[88.59484100 47.63502884]
[87.47919464 32.67657852]
[86.36354828 17.71812439]
[74.67112732 7.42613459]
[73.75278473 -7.75975704]
[83.63668060 -18.84326744]
[82.52103424 -33.80171967]
[81.40538788 -48.76017380]
[80.28973389 -63.71862793]
[79.17408752 -78.67707825]
[70.43180847 -91.86355591]
[77.20106506 -105.13105011]
[76.08541870 -120.08950043]
[74.96977234 -135.04795837]
[60.31687927 -138.86521912]
[47.69876480 -147.23551941]
[38.48414993 -159.25091553]
[33.67255783 -173.60804749]
[33.78592300 -188.74957275]
[38.81194687 -203.03305054]
[48.20543671 -214.90913391]
[60.94746780 -223.08955383]
[75.65586853 -226.68699646]
[90.73519135 -225.31121826]
[104.54974365 -219.11146545]
[115.60102081 -208.76022339]
[122.69026184 -195.38034058]
[125.04848480 -180.42315674]
[122.41988373 -165.51110840]
[115.08959198 -152.26174927]
[103.85273743 -142.11225891]
[89.92822266 -136.16360474]
[91.04386902 -121.20515442]
[92.15952301 -106.24669647]
[100.82199860 -94.13014984]
[94.13253784 -79.79273224]
[95.24819183 -64.83427429]
[96.36383820 -49.87582397]
[97.47948456 -34.91736984]
[98.59513855 -19.95891571]
[110.01381683 -10.46421909]
[111.35832977 4.68988705]
[101.32199860 16.60247421]
[102.43764496 31.56092834]
[103.55329895 46.51938248]
[104.66894531 61.47783661]
[105.78459167 76.43628693]
[106.90024567 91.39474487]
[118.51731873 81.90561676]
[133.21083069 84.92237091]
[140.14926147 98.22117615]
[134.21786499 111.99864197]
[119.78903961 116.09853363]
[107.50000000 107.50000000]
[115.23729706 121.30017090]
[107.50000000 134.02745056]
[107.50000000 149.02745056]
[107.50000000 164.02745056]
[107.50000000 179.02745056]
[107.50000000 194.02745056]
[119.96054840 200.38336182]
[128.42657471 211.43516541]
[131.29118347 224.99143982]
[128.05110168 238.39482117]
[119.39407349 249.04304504]
[107.05376434 254.89401245]
[106.83043671 269.89236450]
[106.60710907 284.89068604]
[106.38377380 299.88903809]
[106.16044617 314.88735962]
[121.13145447 315.87017822]
[136.03347778 317.61001587]
[150.82823181 320.10241699]
[165.47778320 323.34091187]
[179.94448853 327.31729126]
[194.19122314 332.02127075]
[208.18142700 337.44079590]
[221.87918091 343.56195068]
[235.24931335 350.36904907]
[248.25752258 357.84457397]
[260.87039185 365.96939087]
[273.05557251 374.72259521]
[284.78176880 384.08172607]
[296.01885986 394.02276611]
[306.73803711 404.52023315]
[316.91177368 415.54711914]
[326.51394653 427.07513428]
[335.51989746 439.07470703]
[343.90652466 451.51501465]
[351.65228271 464.36416626]
[358.73733521 477.58911133]
[365.14343262 491.15594482]
[370.85415649 505.02981567]
[375.85485840 519.17510986]
[380.13269043 533.55560303]
[383.67666626 548.13421631]
[386.47772217 562.87365723]
[388.52862549 577.73608398]
[389.82409668 592.68328857]
[390.36087036 607.67687988]
[390.13754272 622.67846680]
[389.15469360 637.64947510]
[387.41479492 652.55151367]
[384.92239380 667.34625244]
[381.68383789 681.99578857]
[377.70742798 696.46246338]
[373.00341797 710.70922852]
[367.58383179 724.69940186]
[361.46264648 738.39715576]
[354.65551758 751.76727295]
[347.17993164 764.77545166]
[339.05511475 777.38830566]
[330.30187988 789.57342529]
[320.94268799 801.29962158]
[311.00161743 812.53668213]
[300.50415039 823.25579834]
[289.47723389 833.42950439]
[277.94915771 843.03167725]
[265.94958496 852.03759766]
[253.50923157 860.42419434]
[240.66007996 868.16992188]
[227.43511963 875.25488281]
[213.86827087 881.66094971]
[199.99436951 887.37164307]
[185.84902954 892.37231445]
[171.46858215 896.65014648]
[156.88990784 900.19409180]
[142.15046692 902.99505615]
[127.28806305 905.04589844]
[112.34085846 906.34136963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[77 134]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
