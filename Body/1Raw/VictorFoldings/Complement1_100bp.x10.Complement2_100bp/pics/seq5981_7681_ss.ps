%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[232.46763611 247.47489929]
[241.20075989 235.26329041]
[229.94465637 225.34863281]
[218.68856812 215.43397522]
[207.43246460 205.51933289]
[192.76766968 202.91302490]
[187.52610779 187.98530579]
[176.27000427 178.07066345]
[165.01391602 168.15600586]
[153.75781250 158.24134827]
[142.50172424 148.32670593]
[127.83691406 145.72039795]
[122.59535217 130.79267883]
[107.93055725 128.18637085]
[102.68899536 113.25865173]
[108.38912201 127.13339996]
[111.22052765 141.86373901]
[111.07043457 156.86299133]
[107.94480896 171.53373718]
[101.96815491 185.29162598]
[93.37851715 197.58869934]
[82.51802063 207.93518066]
[69.81922913 215.91896057]
[55.78793335 221.22204590]
[40.98299408 223.63322449]
[25.99408722 223.05645752]
[11.41821384 219.51470947]
[-2.16407323 213.14906311]
[-14.21179771 204.21305847]
[-24.24510384 193.06259155]
[-31.86436844 180.14179993]
[-36.76611710 165.96531677]
[-38.75511932 151.09777832]
[-37.75215149 136.13133240]
[-33.79715729 121.66213226]
[-27.04767036 108.26644135]
[-17.77251625 96.47782898]
[-6.34112120 86.76581573]
[6.79120731 79.51722717]
[21.10141373 75.02079010]
[36.01952744 73.45557404]
[50.95136642 74.88393402]
[65.30220032 79.24897003]
[78.50044250 86.37683868]
[90.01747894 95.98064423]
[83.94364929 82.26537323]
[77.86981201 68.55010986]
[71.79598236 54.83484268]
[58.14131927 52.95306015]
[47.28567886 44.63599777]
[41.99949646 32.14096069]
[43.56504059 18.77334404]
[51.46715927 8.01236629]
[45.59819794 -5.79181099]
[39.72923660 -19.59598732]
[33.86027527 -33.40016556]
[27.62265968 -40.07324219]
[28.00839233 -47.45382309]
[19.87342453 -34.85135269]
[4.96436644 -33.20211411]
[-5.72837973 -43.72186661]
[-4.32251930 -58.65583801]
[8.14559937 -66.99526215]
[22.48372459 -62.59374237]
[17.86971664 -76.86647797]
[13.25570679 -91.13920593]
[8.64169788 -105.41194153]
[4.02768850 -119.68467712]
[-10.69404602 -116.72354889]
[-25.65736771 -115.45990753]
[-40.66719818 -115.91022491]
[-55.52785110 -118.06863403]
[-70.04559326 -121.90699005]
[-84.03114319 -127.37525940]
[-97.30219269 -134.40214539]
[-109.68569946 -142.89605713]
[-121.02024078 -152.74623108]
[-131.15803528 -163.82426453]
[-139.96693420 -175.98573303]
[-147.33206177 -189.07208252]
[-153.15744019 -202.91270447]
[-157.36708069 -217.32716370]
[-159.90614319 -232.12753296]
[-160.74148560 -247.12086487]
[-159.86224365 -262.11169434]
[-157.27987671 -276.90454102]
[-153.02806091 -291.30664062]
[-147.16220093 -305.13012695]
[-139.75878906 -318.19488525]
[-130.91433716 -330.33050537]
[-120.74414825 -341.37881470]
[-109.38082886 -351.19577026]
[-96.97250366 -359.65338135]
[-83.68094635 -366.64138794]
[-69.67944336 -372.06869507]
[-55.15052795 -375.86453247]
[-40.28361893 -377.97943115]
[-25.27253532 -378.38583374]
[-10.31297874 -377.07836914]
[4.40002537 -374.07415771]
[18.67465973 -369.41235352]
[32.32482910 -363.15368652]
[45.17256927 -355.37982178]
[57.05039215 -346.19204712]
[67.80343628 -335.71017456]
[77.29151917 -324.07083130]
[85.39094543 -311.42578125]
[91.99612427 -297.93991089]
[97.02093506 -283.78897095]
[100.39987183 -269.15747070]
[102.08889008 -254.23617554]
[102.06596375 -239.21960449]
[100.33139038 -224.30354309]
[96.90779114 -209.68243408]
[91.83979034 -195.54690552]
[85.19346619 -182.08125305]
[77.05546570 -169.46099854]
[67.53188324 -157.85069275]
[56.74687958 -147.40170288]
[44.84105682 -138.25024414]
[31.96963692 -130.51562500]
[18.30042267 -124.29868317]
[22.91443062 -110.02595520]
[27.52844048 -95.75321960]
[32.14244843 -81.48048401]
[36.75645828 -67.20774841]
[41.89841843 -53.11661148]
[47.66445160 -39.26912689]
[53.53341293 -25.46494865]
[59.40237427 -11.66077137]
[65.27133179 2.14340520]
[81.37828064 5.31260967]
[92.53412628 17.58081436]
[94.19577026 34.24635315]
[85.51124573 48.76100922]
[91.58508301 62.47627258]
[97.65891266 76.19154358]
[103.73274994 89.90680695]
[112.60364532 102.00255585]
[128.07356262 105.31803131]
[132.51000977 119.53658295]
[147.97991943 122.85205841]
[152.41636658 137.07060242]
[163.67247009 146.98526001]
[174.92855835 156.89990234]
[186.18466187 166.81455994]
[197.44075012 176.72921753]
[212.91065979 180.04469299]
[217.34712219 194.26322937]
[228.60321045 204.17788696]
[239.85931396 214.09254456]
[251.11540222 224.00718689]
[262.12707520 213.80256653]
[274.11462402 204.76435852]
[286.95507812 196.98529053]
[300.51666260 190.54521179]
[314.66018677 185.51019287]
[329.24053955 181.93190002]
[344.10812378 179.84706116]
[359.11032104 179.27706909]
[374.09323120 180.22776794]
[388.90304565 182.68940735]
[403.38787842 186.63671875]
[417.39901733 192.02920532]
[430.79269409 198.81152344]
[443.43151855 206.91407776]
[455.18576050 216.25373840]
[465.93478394 226.73463440]
[475.56829834 238.24925232]
[483.98748779 250.67939758]
[491.10589600 263.89752197]
[496.85052490 277.76800537]
[501.16238403 292.14849854]
[503.99728394 306.89144897]
[505.32604980 321.84558105]
[505.13513184 336.85739136]
[503.42645264 351.77285767]
[500.21752930 366.43893433]
[495.54132080 380.70510864]
[489.44577026 394.42501831]
[481.99349976 407.45782471]
[473.26089478 419.66983032]
[463.33764648 430.93569946]
[452.32553101 441.13983154]
[440.33758545 450.17752075]
[427.49676514 457.95602417]
[413.93490601 464.39550781]
[399.79116821 469.42990112]
[385.21063232 473.00756836]
[370.34298706 475.09173584]
[355.34075928 475.66107178]
[340.35791016 474.70971680]
[325.54818726 472.24743652]
[311.06353760 468.29946899]
[297.05264282 462.90637207]
[283.65924072 456.12347412]
[271.02078247 448.02035522]
[259.26696777 438.68017578]
[248.51838684 428.19879150]
[238.88537598 416.68377686]
[230.46675110 404.25326538]
[223.34890747 391.03482056]
[217.60490417 377.16406250]
[213.29365540 362.78338623]
[210.45942688 348.04031372]
[209.13128662 333.08615112]
[209.32287598 318.07434082]
[211.03222656 303.15893555]
[214.24179077 288.49301147]
[218.91864014 274.22702026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[4 150]
[5 149]
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[13 141]
[15 139]
[45 138]
[46 137]
[47 136]
[48 135]
[53 131]
[54 130]
[55 129]
[56 128]
[58 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
