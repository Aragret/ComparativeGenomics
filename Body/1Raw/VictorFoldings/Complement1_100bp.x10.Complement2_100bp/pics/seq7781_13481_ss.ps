%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[72.76873779 767.44555664]
[57.77052689 767.06518555]
[42.80904770 765.94927979]
[27.92034149 764.10064697]
[13.14028072 761.52368164]
[-1.49552977 758.22454834]
[-15.95183086 754.21130371]
[-30.19379616 749.49346924]
[-44.18711472 744.08258057]
[-57.89807892 737.99157715]
[-71.29365540 731.23510742]
[-84.34156799 723.82952881]
[-97.01039124 715.79260254]
[-109.26959229 707.14373779]
[-121.08965302 697.90374756]
[-132.44209290 688.09490967]
[-143.29956055 677.74084473]
[-153.63589478 666.86651611]
[-163.42620850 655.49810791]
[-172.64689636 643.66296387]
[-181.27575684 631.38970947]
[-189.29200745 618.70776367]
[-196.67631531 605.64782715]
[-203.41091919 592.24121094]
[-209.47956848 578.52032471]
[-214.86766052 564.51824951]
[-219.56222534 550.26861572]
[-223.55191040 535.80578613]
[-226.82714844 521.16461182]
[-229.38003540 506.38034058]
[-231.20440674 491.48864746]
[-232.29588318 476.52536011]
[-232.65182495 461.52655029]
[-232.27137756 446.52835083]
[-231.15547180 431.56686401]
[-229.30677795 416.67816162]
[-226.72975159 401.89810181]
[-223.43061829 387.26229858]
[-219.41729736 372.80603027]
[-214.69947815 358.56405640]
[-209.28852844 344.57077026]
[-203.19746399 330.85980225]
[-196.44097900 317.46426392]
[-189.03535461 304.41635132]
[-180.99839783 291.74755859]
[-172.34950256 279.48837280]
[-163.10949707 267.66833496]
[-153.30062866 256.31591797]
[-142.94654846 245.45848083]
[-132.07218933 235.12217712]
[-120.70375061 225.33189392]
[-108.86861420 216.11123657]
[-96.59529877 207.48239136]
[-83.91336823 199.46618652]
[-70.85337067 192.08189392]
[-57.44678116 185.34733582]
[-43.72589111 179.27871704]
[-29.72375298 173.89065552]
[-15.47410107 169.19613647]
[-1.01126397 165.20648193]
[13.62991524 161.93127441]
[28.41416550 159.37843323]
[43.30587006 157.55410767]
[58.26914978 156.46266174]
[73.26796722 156.10675049]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[81.96990967 39.92457199]
[67.45063019 36.11592865]
[53.33785248 31.00274086]
[39.74851608 24.62738228]
[26.79523277 17.04268074]
[14.58533764 8.31148720]
[3.22001028 -1.49384654]
[-7.20657253 -12.29206944]
[-16.60801125 -23.99370193]
[-24.90639877 -36.50177765]
[-32.03297424 -49.71265411]
[-37.92868042 -63.51684952]
[-42.54466248 -77.79998779]
[-45.84267426 -92.44370270]
[-47.79537964 -107.32665253]
[-48.38660431 -122.32550812]
[-47.61144638 -137.31597900]
[-45.47632980 -152.17385864]
[-41.99894714 -166.77601624]
[-37.20811462 -181.00146484]
[-31.14352798 -194.73229980]
[-23.85544395 -207.85476685]
[-15.40425491 -220.26011658]
[-5.85999107 -231.84555054]
[4.69825888 -242.51506042]
[16.18300438 -252.18025208]
[28.49907684 -260.76101685]
[41.54442215 -268.18627930]
[55.21093369 -274.39447021]
[69.38536835 -279.33413696]
[83.95027924 -282.96441650]
[98.78495789 -285.25515747]
[113.76647949 -286.18743896]
[128.77070618 -285.75347900]
[143.67330933 -283.95687866]
[158.35079956 -280.81256104]
[172.68153381 -276.34655762]
[186.54678345 -270.59588623]
[199.83163452 -263.60818481]
[212.42601013 -255.44137573]
[224.22555542 -246.16311646]
[235.13249207 -235.85031128]
[245.05642700 -224.58839417]
[253.91513062 -212.47070312]
[261.63519287 -199.59764099]
[268.15267944 -186.07588196]
[273.41351318 -172.01747131]
[277.37414551 -157.53892517]
[280.00177002 -142.76019287]
[281.27456665 -127.80374146]
[281.18203735 -112.79352570]
[279.72491455 -97.85391235]
[276.91528320 -83.10870361]
[272.77642822 -68.68008423]
[267.34265137 -54.68761444]
[260.65893555 -41.24724197]
[252.78074646 -28.47034645]
[243.77330017 -16.46279907]
[233.71125793 -5.32410097]
[222.67799377 4.85344791]
[210.76495361 13.98551083]
[198.07083130 21.99641418]
[184.70083618 28.81977844]
[170.76573181 34.39905930]
[156.38102722 38.68802643]
[141.66589355 41.65113449]
[126.74226379 43.26383591]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[118.11334229 159.45146179]
[132.89341736 162.02838135]
[147.52923584 165.32740784]
[161.98556519 169.34062195]
[176.22755432 174.05831909]
[190.22090149 179.46917725]
[203.93188477 185.56013489]
[217.32749939 192.31651306]
[230.37544250 199.72206116]
[243.04431152 207.75891113]
[255.30355835 216.40771484]
[267.12365723 225.64762878]
[278.47616577 235.45640564]
[289.33367920 245.81040955]
[299.67007446 256.68469238]
[309.46041870 268.05307007]
[318.68118286 279.88812256]
[327.31008911 292.16137695]
[335.32641602 304.84326172]
[342.71078491 317.90319824]
[349.44546509 331.30972290]
[355.51419067 345.03057861]
[360.90234375 359.03268433]
[365.59695435 373.28228760]
[369.58673096 387.74511719]
[372.86203003 402.38626099]
[375.41497803 417.17050171]
[377.23944092 432.06219482]
[378.33099365 447.02545166]
[378.68701172 462.02426147]
[378.30664062 477.02249146]
[377.19079590 491.98394775]
[375.34219360 506.87268066]
[372.76522827 521.65270996]
[369.46615601 536.28857422]
[365.45291138 550.74487305]
[360.73516846 564.98681641]
[355.32427979 578.98016357]
[349.23330688 592.69116211]
[342.47689819 606.08673096]
[335.07131958 619.13470459]
[327.03442383 631.80352783]
[318.38558960 644.06274414]
[309.14562988 655.88281250]
[299.33685303 667.23529053]
[288.98281860 678.09277344]
[278.10848999 688.42913818]
[266.74011230 698.21948242]
[254.90501404 707.44018555]
[242.63174438 716.06909180]
[229.94984436 724.08538818]
[216.88989258 731.46972656]
[203.48333740 738.20434570]
[189.76248169 744.27307129]
[175.76036072 749.66119385]
[161.51074219 754.35577393]
[147.04791260 758.34552002]
[132.40675354 761.62078857]
[117.62252045 764.17370605]
[102.73082733 765.99810791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 150]
[67 149]
[68 148]
[69 147]
[71 145]
[72 144]
[73 143]
[74 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
