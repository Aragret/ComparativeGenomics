%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[47.66108322 611.90606689]
[34.25180435 605.15155029]
[21.63645935 597.00994873]
[9.95799828 587.57354736]
[-0.65125602 576.94927979]
[-10.07109261 565.25744629]
[-18.19477654 552.63055420]
[-24.93026161 539.21173096]
[-30.20122910 525.15295410]
[-33.94795609 510.61355591]
[-36.12798691 495.75827026]
[-36.71661758 480.75543213]
[-35.70718765 465.77499390]
[-33.11112595 450.98675537]
[-28.95785141 436.55822754]
[-23.29442215 422.65289307]
[-16.18501282 409.42837524]
[-7.71017456 397.03445435]
[2.03406405 385.61157227]
[12.93729401 375.28918457]
[24.87597275 366.18423462]
[37.71482849 358.39990234]
[51.30838394 352.02438354]
[65.50260925 347.12991333]
[80.13668823 343.77194214]
[78.35421753 328.87820435]
[69.15934753 317.16055298]
[75.20193481 302.53872681]
[73.41947174 287.64501953]
[71.63700104 272.75128174]
[69.85453796 257.85757446]
[68.07207489 242.96385193]
[66.28960419 228.07014465]
[61.30262756 242.21687317]
[53.52008820 255.03997803]
[43.27291489 265.99423218]
[30.99681473 274.61383057]
[17.21377563 280.53225708]
[2.50986242 283.49786377]
[-12.48970985 283.38458252]
[-27.14715004 280.19720459]
[-40.83921814 274.07125854]
[-52.98371887 265.26721191]
[-63.06426620 254.15943909]
[-70.65222168 241.22023010]
[-75.42494965 226.99978638]
[-77.17950439 212.10276794]
[-75.84129333 197.16256714]
[-71.46720123 182.81449890]
[-64.24323273 169.66860962]
[-54.47653961 158.28388977]
[-42.58241653 149.14442444]
[-29.06660843 142.63882446]
[-14.50380802 139.04371643]
[0.48676291 138.51194763]
[15.26769924 141.06614685]
[29.21050644 146.59770203]
[41.72233200 154.87139893]
[52.27116394 165.53546143]
[60.40846252 178.13642883]
[65.78822327 192.13850403]
[68.18170929 206.94648743]
[72.58271027 192.60664368]
[68.92011261 178.16938782]
[80.36585999 167.24667358]
[84.76685333 152.90682983]
[87.87096405 138.23153687]
[89.65343475 123.33781433]
[91.43589783 108.44409180]
[92.99642181 93.52548981]
[94.33465576 78.58530426]
[95.67288971 63.64511871]
[93.47506714 58.91049957]
[93.32785034 54.27027893]
[94.85189056 50.48976135]
[97.41909027 48.07276535]
[99.42310333 33.20723724]
[101.42711639 18.34171104]
[103.43112946 3.47618198]
[105.43514252 -11.38934612]
[107.43915558 -26.25487518]
[108.66613007 -41.20460892]
[109.11273956 -56.19795990]
[94.40608978 -62.69587326]
[83.34555817 -74.31203461]
[77.60337067 -89.24732208]
[78.03117371 -105.20416260]
[84.53391266 -119.73995972]
[96.08884430 -130.64099121]
[110.90631866 -136.25956726]
[111.12964630 -151.25790405]
[111.35297394 -166.25624084]
[111.46464539 -181.25582886]
[111.46464539 -196.25582886]
[111.46464539 -211.25582886]
[111.46464539 -226.25582886]
[111.46464539 -241.25582886]
[111.46464539 -256.25582886]
[111.46464539 -271.25582886]
[97.69077301 -277.83178711]
[88.14084625 -289.73815918]
[84.71100616 -304.61093140]
[88.08225250 -319.49707031]
[97.58522034 -331.44094849]
[111.33308411 -338.07110596]
[126.59619904 -338.07110596]
[140.34407043 -331.44094849]
[149.84703064 -319.49707031]
[153.21827698 -304.61093140]
[149.78843689 -289.73815918]
[140.23851013 -277.83178711]
[126.46464539 -271.25582886]
[126.46464539 -256.25582886]
[126.46464539 -241.25582886]
[126.46464539 -226.25582886]
[126.46464539 -211.25582886]
[126.46464539 -196.25582886]
[126.46464539 -181.25582886]
[129.60813904 -174.56701660]
[126.35131073 -166.03291321]
[126.12798309 -151.03457642]
[125.90465546 -136.03623962]
[138.99098206 -130.96797180]
[149.58383179 -121.71755219]
[156.39735413 -109.38080597]
[158.59527588 -95.42977142]
[155.89341736 -81.53708649]
[148.59634399 -69.37543488]
[137.56306458 -60.41618729]
[124.10608673 -55.75135040]
[123.65947723 -40.75800323]
[134.51679993 -51.10781479]
[149.47824097 -52.18275452]
[161.70361328 -43.49137878]
[165.60366821 -29.00726318]
[159.39533997 -15.35235119]
[145.91699219 -8.76948547]
[131.33073425 -12.26826382]
[122.30467987 -24.25086021]
[120.30066681 -9.38533306]
[118.29665375 5.48019552]
[116.29264069 20.34572411]
[114.28862762 35.21125031]
[112.28461456 50.07677841]
[110.61307526 64.98335266]
[109.27484131 79.92353821]
[107.93660736 94.86372375]
[110.30137634 99.54579926]
[109.87453461 105.21952057]
[106.32961273 110.22656250]
[104.54714966 125.12027740]
[102.76468658 140.01399231]
[112.33416748 128.46302795]
[125.93143463 122.12942505]
[140.93106079 122.23612213]
[154.43684387 128.76251221]
[163.84103394 140.44844055]
[167.32783508 155.03755188]
[164.22399902 169.71292114]
[155.12882996 181.64094543]
[141.79846191 188.51852417]
[126.80676270 189.01770020]
[113.04841614 183.04208374]
[103.17993927 171.74549866]
[99.10670471 157.30783081]
[94.70570374 171.64767456]
[98.05352020 187.11062622]
[86.92255402 197.00764465]
[82.52156067 211.34748840]
[81.18332672 226.28767395]
[82.96578979 241.18139648]
[84.74825287 256.07510376]
[86.53072357 270.96884155]
[88.31318665 285.86254883]
[90.09565735 300.75625610]
[99.41802216 313.53921509]
[93.24794006 327.09573364]
[95.03040314 341.98947144]
[110.04359436 341.79928589]
[124.99195099 343.20599365]
[139.70608521 346.19369507]
[154.01928711 350.72848511]
[167.76936340 356.75903320]
[180.80052185 364.21697998]
[192.96511841 373.01782227]
[204.12530518 383.06182861]
[214.15463257 394.23522949]
[222.93946838 406.41137695]
[230.38026428 419.45233154]
[236.39271545 433.21032715]
[240.90869141 447.52947998]
[243.87702942 462.24752808]
[245.26408386 477.19772339]
[245.05415344 492.21066284]
[243.24961853 507.11621094]
[239.87091064 521.74554443]
[234.95631409 535.93280029]
[228.56152344 549.51733398]
[220.75900269 562.34509277]
[211.63713074 574.27087402]
[201.29930115 585.15948486]
[189.86264038 594.88751221]
[177.45672607 603.34478760]
[164.22212219 610.43542480]
[150.30879211 616.07916260]
[135.87438965 620.21197510]
[121.08247375 622.78704834]
[106.10063171 623.77526855]
[91.09862518 623.16534424]
[76.24644470 620.96429443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 178]
[26 177]
[28 175]
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[62 169]
[63 168]
[65 166]
[66 165]
[67 152]
[68 151]
[69 150]
[70 147]
[71 146]
[72 145]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 131]
[83 130]
[90 122]
[91 121]
[92 120]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
