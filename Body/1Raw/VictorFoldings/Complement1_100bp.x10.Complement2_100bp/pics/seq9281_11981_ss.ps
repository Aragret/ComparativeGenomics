%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[84.31069183 312.73928833]
[80.86579132 298.13345337]
[78.48379517 283.31713867]
[77.17712402 268.36752319]
[76.95259857 253.36262512]
[77.81138611 238.38063049]
[79.74900055 223.49964905]
[82.75535583 208.79728699]
[86.81476593 194.35017395]
[91.90606689 180.23364258]
[98.00272369 166.52130127]
[105.07293701 153.28462219]
[113.07986450 140.59260559]
[121.98174286 128.51145935]
[110.57927704 118.76549530]
[99.17681885 109.01952362]
[95.32824707 108.77275848]
[91.60713959 106.83080292]
[88.76813507 103.28861237]
[87.49541473 98.57479858]
[76.53950500 88.32940674]
[65.58359528 78.08401489]
[54.62768936 67.83862305]
[43.59580994 57.67507935]
[32.48857880 47.59394073]
[21.38134384 37.51280212]
[10.64476013 47.99440002]
[-0.70510036 57.80861664]
[-12.62682247 66.91963959]
[-25.07690620 75.29421234]
[-38.00991821 82.90179443]
[-51.37867355 89.71462250]
[-65.13438416 95.70782471]
[-79.22686768 100.85954285]
[-93.60468292 105.15097809]
[-108.21538544 108.56647491]
[-123.00565338 111.09355927]
[-137.92152405 112.72301483]
[-152.90855408 113.44890594]
[-167.91207886 113.26856232]
[-182.87733459 112.18266296]
[-197.74972534 110.19516754]
[-212.47497559 107.31331635]
[-226.99935913 103.54763031]
[-241.26988220 98.91185760]
[-255.23446655 93.42289734]
[-268.84216309 87.10079956]
[-282.04330444 79.96861267]
[-294.78970337 72.05237579]
[-307.03491211 63.38097382]
[-318.73419189 53.98603821]
[-329.84487915 43.90185547]
[-340.32644653 33.16522217]
[-350.14059448 21.81531715]
[-359.25155640 9.89355278]
[-367.62609863 -2.55656862]
[-375.23361206 -15.48961830]
[-382.04638672 -28.85840416]
[-388.03952026 -42.61414337]
[-393.19116211 -56.70664597]
[-397.48254395 -71.08448792]
[-400.89794922 -85.69520569]
[-403.42498779 -100.48548126]
[-405.05438232 -115.40135193]
[-405.78018188 -130.38839722]
[-405.59979248 -145.39190674]
[-404.51382446 -160.35716248]
[-402.52624512 -175.22955322]
[-399.64431763 -189.95478821]
[-395.87857056 -204.47915649]
[-391.24273682 -218.74964905]
[-385.75372314 -232.71420288]
[-379.43154907 -246.32186890]
[-372.29928589 -259.52297974]
[-364.38299561 -272.26937866]
[-355.71154785 -284.51452637]
[-346.31655884 -296.21377563]
[-336.23233032 -307.32440186]
[-325.49563599 -317.80590820]
[-314.14569092 -327.62002563]
[-302.22387695 -336.73092651]
[-289.77371216 -345.10537720]
[-276.84063721 -352.71286011]
[-263.47180176 -359.52554321]
[-249.71604919 -365.51861572]
[-235.62351990 -370.67022705]
[-221.24566650 -374.96151733]
[-206.63493347 -378.37689209]
[-191.84463501 -380.90383911]
[-176.92875671 -382.53314209]
[-161.94171143 -383.25888062]
[-146.93820190 -383.07843018]
[-131.97294617 -381.99237061]
[-117.10057831 -380.00473022]
[-102.37535095 -377.12274170]
[-87.85099792 -373.35693359]
[-73.58052063 -368.72103882]
[-59.61599350 -363.23193359]
[-46.00836563 -356.90972900]
[-32.80728912 -349.77740479]
[-20.06093788 -341.86105347]
[-7.81582069 -333.18954468]
[3.88338041 -323.79449463]
[14.99397659 -313.71020508]
[25.47542572 -302.97348022]
[35.28948212 -291.62347412]
[44.40033722 -279.70162964]
[52.77474594 -267.25143433]
[60.38214493 -254.31831360]
[67.19478607 -240.94946289]
[73.18779755 -227.19366455]
[78.33931732 -213.10112000]
[82.63055420 -198.72323608]
[86.04584503 -184.11248779]
[88.57272339 -169.32218933]
[90.20197296 -154.40629578]
[90.92765045 -139.41925049]
[90.74710846 -124.41573334]
[89.66100311 -109.45049286]
[87.67329407 -94.57813263]
[84.79123688 -79.85291290]
[81.02535248 -65.32858276]
[76.38937378 -51.05812836]
[70.90023041 -37.09362411]
[64.57793427 -23.48602295]
[57.44557190 -10.28498077]
[49.52915573 2.46133327]
[40.85757828 14.70641041]
[31.46248245 26.40556717]
[42.56971741 36.48670578]
[53.67694855 46.56784439]
[60.74256516 48.73552704]
[64.87307739 56.88271713]
[75.82898712 67.12810516]
[86.78489685 77.37349701]
[97.74080658 87.61888885]
[108.92278290 97.61706543]
[120.32524872 107.36302948]
[131.72770691 117.10899353]
[142.27551270 106.43465424]
[153.56605530 96.54924011]
[165.54048157 87.50431061]
[178.13636780 79.34700775]
[191.28802490 72.11986542]
[204.92689514 65.86055756]
[218.98187256 60.60172272]
[233.37968445 56.37078094]
[248.04525757 53.18978500]
[262.90213013 51.07532120]
[277.87286377 50.03841400]
[292.87936401 50.08446884]
[307.84344482 51.21324539]
[322.68707275 53.41886139]
[337.33285522 56.68981552]
[351.70440674 61.00905228]
[365.72683716 66.35405731]
[379.32705688 72.69696045]
[392.43408203 80.00469208]
[404.97967529 88.23915100]
[416.89834595 97.35741425]
[428.12802124 107.31193542]
[438.61010742 118.05081940]
[448.28994751 129.51808167]
[457.11712646 141.65393066]
[465.04559326 154.39508057]
[472.03402710 167.67514038]
[478.04595947 181.42485046]
[483.05007935 195.57250977]
[487.02026367 210.04438782]
[489.93585205 224.76502991]
[491.78161621 239.65768433]
[492.54794312 254.64468384]
[492.23086548 269.64791870]
[490.83197021 284.58917236]
[488.35861206 299.39053345]
[484.82366943 313.97482300]
[480.24554443 328.26605225]
[474.64813232 342.18963623]
[468.06060791 355.67306519]
[460.51733398 368.64599609]
[452.05761719 381.04077148]
[442.72555542 392.79281616]
[432.56982422 403.84085083]
[421.64337158 414.12725830]
[410.00314331 423.59841919]
[397.70983887 432.20495605]
[384.82754517 439.90197754]
[371.42343140 446.64938354]
[357.56738281 452.41201782]
[343.33163452 457.15975952]
[328.79040527 460.86791992]
[314.01953125 463.51715088]
[299.09597778 465.09362793]
[284.09756470 465.58914185]
[269.10250854 465.00109863]
[254.18894958 463.33258057]
[239.43467712 460.59225464]
[224.91661072 456.79446411]
[210.71041870 451.95895386]
[196.89018250 446.11099243]
[183.52795410 439.28100586]
[170.69340515 431.50463867]
[158.45343018 422.82241821]
[146.87187195 413.27960205]
[136.00907898 402.92599487]
[125.92169952 391.81552124]
[116.66233063 380.00613403]
[108.27924347 367.55935669]
[100.81614685 354.54016113]
[94.31194305 341.01635742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 139]
[15 138]
[16 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 131]
[25 130]
[26 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
