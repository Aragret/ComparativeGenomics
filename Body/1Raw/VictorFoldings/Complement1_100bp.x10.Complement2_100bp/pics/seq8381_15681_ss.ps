%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[313.89816284 243.95971680]
[305.16580200 256.15319824]
[295.73919678 267.81832886]
[285.65026855 278.91561890]
[274.93319702 289.40753174]
[263.62417603 299.25851440]
[251.76150513 308.43530273]
[239.38533020 316.90679932]
[226.53752136 324.64434814]
[213.26155090 331.62176514]
[199.60234070 337.81549072]
[185.60610962 343.20449829]
[171.32022095 347.77056885]
[156.79299927 351.49829102]
[142.07360840 354.37500000]
[127.21185303 356.39099121]
[112.25802612 357.53945923]
[97.26271820 357.81646729]
[82.27667236 357.22113037]
[67.35060120 355.75543213]
[52.53499985 353.42434692]
[37.88000870 350.23574829]
[23.43520927 346.20043945]
[9.24947929 341.33209229]
[-4.62917900 335.64712524]
[-18.15380669 329.16479492]
[-31.27864075 321.90707397]
[-43.95927048 313.89846802]
[-56.15278625 305.16610718]
[-67.81793976 295.73953247]
[-78.91524506 285.65066528]
[-89.40715790 274.93359375]
[-99.25817871 263.62457275]
[-108.43498230 251.76194763]
[-116.90650177 239.38578796]
[-124.64408112 226.53799438]
[-131.62153625 213.26203918]
[-137.81527710 199.60284424]
[-143.20431519 185.60661316]
[-147.77041626 171.32072449]
[-151.49815369 156.79351807]
[-154.37490845 142.07412720]
[-156.39094543 127.21238708]
[-157.53942871 112.25856018]
[-157.81648254 97.26325226]
[-157.22117615 82.27720642]
[-155.75550842 67.35112762]
[-153.42445374 52.53552628]
[-150.23588562 37.88052750]
[-146.20060730 23.43571854]
[-141.33226013 9.24997902]
[-135.64733887 -4.62869120]
[-129.16505432 -18.15333176]
[-121.90734100 -31.27818108]
[-113.89877319 -43.95882797]
[-105.16644287 -56.15236282]
[-95.73989105 -67.81752777]
[-85.65102386 -78.91485596]
[-74.93396759 -89.40679932]
[-63.62500000 -99.25784302]
[-51.76237488 -108.43466949]
[-39.38623428 -116.90621185]
[-26.53845978 -124.64382172]
[-13.26251698 -131.62130737]
[0.39666843 -137.81506348]
[14.39287949 -143.20413208]
[28.67875671 -147.77027893]
[43.20596313 -151.49804688]
[57.92533875 -154.37483215]
[72.78708649 -156.39088440]
[87.74090576 -157.53939819]
[102.73621368 -157.81648254]
[117.72225952 -157.22120667]
[132.64834595 -155.75556946]
[147.46394348 -153.42454529]
[162.11895752 -150.23602295]
[176.56376648 -146.20075989]
[190.74952698 -141.33245850]
[204.62820435 -135.64755249]
[218.15286255 -129.16529846]
[231.27772522 -121.90761566]
[243.95838928 -113.89907074]
[256.15194702 -105.16676331]
[267.81713867 -95.74024200]
[278.91445923 -85.65139008]
[289.40643311 -74.93436432]
[299.25750732 -63.62541199]
[308.43435669 -51.76280594]
[316.90591431 -39.38668442]
[324.64355469 -26.53892326]
[337.92141724 -33.51737595]
[351.19924927 -40.49583054]
[364.47711182 -47.47428131]
[377.75494385 -54.45273209]
[371.64828491 -68.15921783]
[366.44168091 -82.23223877]
[362.15692139 -96.61277008]
[358.81198120 -111.24050140]
[356.42092896 -126.05406952]
[354.99377441 -140.99134827]
[354.53649902 -155.98966980]
[355.05105591 -170.98614502]
[356.53521729 -185.91786194]
[358.98281860 -200.72218323]
[362.38354492 -215.33703613]
[366.72317505 -229.70111084]
[371.98352051 -243.75415039]
[378.14245605 -257.43722534]
[385.17419434 -270.69293213]
[393.04919434 -283.46566772]
[401.73449707 -295.70187378]
[411.19363403 -307.35018921]
[421.38690186 -318.36181641]
[432.27160645 -328.69055176]
[443.80203247 -338.29302979]
[455.92987061 -347.12902832]
[468.60421753 -355.16143799]
[481.77194214 -362.35659790]
[495.37777710 -368.68432617]
[509.36465454 -374.11807251]
[523.67395020 -378.63504028]
[538.24560547 -382.21630859]
[553.01855469 -384.84686279]
[567.93078613 -386.51562500]
[582.91973877 -387.21560669]
[597.92254639 -386.94390869]
[612.87634277 -385.70162964]
[627.71832275 -383.49398804]
[642.38635254 -380.33026123]
[656.81878662 -376.22372437]
[670.95513916 -371.19158936]
[684.73608398 -365.25494385]
[698.10388184 -358.43869019]
[711.00244141 -350.77145386]
[723.37762451 -342.28540039]
[735.17755127 -333.01605225]
[746.35272217 -323.00234985]
[756.85626221 -312.28628540]
[766.64416504 -300.91278076]
[775.67529297 -288.92959595]
[783.91186523 -276.38693237]
[791.31921387 -263.33740234]
[797.86633301 -249.83578491]
[803.52581787 -235.93867493]
[808.27380371 -221.70437622]
[812.09051514 -207.19259644]
[814.95983887 -192.46418762]
[816.86975098 -177.58094788]
[817.81231689 -162.60527039]
[817.78344727 -147.60000610]
[816.78344727 -132.62806702]
[814.81634521 -117.75227356]
[811.89044189 -103.03499603]
[808.01806641 -88.53797913]
[803.21545410 -74.32202148]
[797.50262451 -60.44675827]
[790.90368652 -46.97037888]
[783.44622803 -33.94941330]
[775.16162109 -21.43847656]
[766.08453369 -9.49004173]
[756.25299072 1.84577215]
[745.70837402 12.52142048]
[734.49481201 22.49212456]
[722.65936279 31.71606255]
[710.25164795 40.15454865]
[697.32379150 47.77218628]
[683.92987061 54.53702545]
[670.12622070 60.42068863]
[655.97064209 65.39850616]
[641.52252197 69.44958496]
[626.84252930 72.55694580]
[611.99212646 74.70755005]
[597.03369141 75.89237976]
[582.02990723 76.10646820]
[567.04376221 75.34890747]
[552.13806152 73.62287903]
[537.37536621 70.93562317]
[522.81756592 67.29841614]
[508.52572632 62.72650528]
[494.55978394 57.23907471]
[480.97836304 50.85913849]
[467.83837891 43.61345291]
[455.19497681 35.53241348]
[443.10119629 26.64990997]
[431.60769653 17.00320435]
[420.76275635 6.63275623]
[410.61184692 -4.41793633]
[401.19754028 -16.10252380]
[392.55929565 -28.37199402]
[384.73339844 -41.17488861]
[371.45556641 -34.19643402]
[358.17770386 -27.21798325]
[344.89987183 -20.23953056]
[331.62200928 -13.26107788]
[337.81567383 0.39814606]
[343.20465088 14.39439011]
[347.77072144 28.68029594]
[351.49838257 43.20752335]
[354.37509155 57.92691803]
[356.39105225 72.78867340]
[357.53948975 87.74250793]
[357.81646729 102.73781586]
[357.22109985 117.72386169]
[355.75537109 132.64993286]
[353.42425537 147.46553040]
[350.23562622 162.12051392]
[346.20028687 176.56530762]
[341.33187866 190.75102234]
[335.64691162 204.62966919]
[329.16455078 218.15428162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 194]
[91 193]
[92 192]
[93 191]
[94 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
