%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[205.95674133 311.22070312]
[212.00137329 297.47781372]
[219.42704773 284.42932129]
[228.15504456 272.21350098]
[238.09283447 260.95986938]
[227.92929077 249.92799377]
[213.61520386 245.81016541]
[209.95509338 230.41815186]
[199.79154968 219.38627625]
[189.62799072 208.35440063]
[179.46444702 197.32252502]
[165.22702026 201.76785278]
[150.41046143 199.58177185]
[137.96138000 191.14486694]
[130.37902832 178.08621216]
[129.21365356 162.96903992]
[134.74978638 148.78762817]
[124.58623505 137.75575256]
[114.42269135 126.72387695]
[104.25914001 115.69199371]
[88.12398529 111.10582733]
[84.62836456 94.69982147]
[74.30169678 83.82048798]
[63.97502518 72.94115448]
[52.64543533 63.11057281]
[40.41894913 54.42074966]
[28.19246292 45.73092651]
[15.96597672 37.04109955]
[3.73949122 28.35127640]
[-8.48699474 19.66145134]
[-24.21788788 17.97337914]
[-30.10948944 4.29352999]
[-42.33597565 -4.39629459]
[-54.56246185 -13.08611870]
[-66.78894806 -21.77594376]
[-76.43944550 -10.28185081]
[-86.98355103 0.39842054]
[-98.35287476 10.19560528]
[-110.47367859 19.04616356]
[-123.26735687 26.89269447]
[-136.65093994 33.68431091]
[-150.53762817 39.37696838]
[-164.83735657 43.93373871]
[-179.45738220 47.32508087]
[-194.30288696 49.52898788]
[-209.27758789 50.53117752]
[-224.28439331 50.32514572]
[-239.22593689 48.91222382]
[-254.00534058 46.30158234]
[-268.52676392 42.51015091]
[-282.69598389 37.56251907]
[-296.42117310 31.49077034]
[-309.61325073 24.33428574]
[-322.18667603 16.13948059]
[-334.05993652 6.95949888]
[-345.15600586 -3.14612103]
[-355.40292358 -14.11184025]
[-364.73425293 -25.86654091]
[-373.08941650 -38.33398819]
[-380.41430664 -51.43332291]
[-386.66134644 -65.07958984]
[-391.79006958 -79.18429565]
[-395.76718140 -93.65594482]
[-398.56692505 -108.40070343]
[-400.17111206 -123.32292938]
[-400.56933594 -138.32585144]
[-399.75903320 -153.31217957]
[-397.74545288 -168.18469238]
[-394.54165649 -182.84695435]
[-390.16842651 -197.20387268]
[-384.65411377 -211.16233826]
[-378.03448486 -224.63182068]
[-370.35247803 -237.52494812]
[-361.65789795 -249.75813293]
[-352.00714111 -261.25201416]
[-341.46279907 -271.93203735]
[-330.09326172 -281.72897339]
[-317.97225952 -290.57928467]
[-305.17840576 -298.42550659]
[-291.79467773 -305.21682739]
[-277.90786743 -310.90917969]
[-263.60803223 -315.46563721]
[-248.98793030 -318.85665894]
[-234.14237976 -321.06024170]
[-219.16764832 -322.06210327]
[-204.16085815 -321.85574341]
[-189.21932983 -320.44250488]
[-174.43998718 -317.83151245]
[-159.91865540 -314.03976440]
[-145.74952698 -309.09182739]
[-132.02450562 -303.01977539]
[-118.83257294 -295.86300659]
[-106.25930786 -287.66790771]
[-94.38625336 -278.48767090]
[-83.29040527 -268.38180542]
[-73.04373169 -257.41586304]
[-63.71268082 -245.66096497]
[-55.35777283 -233.19332886]
[-48.03319168 -220.09384155]
[-41.78643799 -206.44743347]
[-36.65803146 -192.34262085]
[-32.68122864 -177.87086487]
[-29.88182068 -163.12605286]
[-28.27796364 -148.20379639]
[-27.88005829 -133.20085144]
[-28.69068718 -118.21455383]
[-30.70459366 -103.34207916]
[-33.90871429 -88.67988586]
[-38.28226852 -74.32306671]
[-43.79689026 -60.36472702]
[-50.41682053 -46.89539337]
[-58.09912109 -34.00242996]
[-45.87263489 -25.31260490]
[-33.64614868 -16.62277985]
[-21.41966438 -7.93295574]
[-6.56329203 -6.86643791]
[0.20282991 7.43496609]
[12.42931557 16.12479019]
[24.65580177 24.81461525]
[36.88228607 33.50444031]
[49.10877228 42.19426346]
[61.33525848 50.88408661]
[55.46692657 37.07964325]
[55.63924408 22.08063507]
[61.82317352 8.41465473]
[72.97661591 -1.61533725]
[87.22001648 -6.31911087]
[102.15312195 -4.90399837]
[115.25942230 2.39152908]
[124.33029938 14.33804703]
[127.83712769 28.92235756]
[125.18896484 43.68674850]
[116.83206177 56.14315796]
[104.17470551 64.19246674]
[89.34988403 66.47821808]
[74.85436249 62.61448669]
[85.18103027 73.49382019]
[95.50769806 84.37315369]
[107.11081696 85.37757111]
[115.06568909 93.88411713]
[115.29102325 105.52845001]
[125.45456696 116.56032562]
[135.61811829 127.59220123]
[145.78166199 138.62408447]
[160.36840820 134.26651001]
[175.33958435 136.66455078]
[187.73425293 145.28965759]
[195.12455750 158.38714600]
[196.09135437 173.33288574]
[190.49632263 187.15898132]
[200.65986633 198.19085693]
[210.82342529 209.22273254]
[220.98696899 220.25460815]
[236.02801514 225.16149902]
[238.96116638 239.76445007]
[249.12471008 250.79632568]
[261.15353394 241.81236267]
[274.04232788 234.11285400]
[287.65451050 227.77940369]
[301.84579468 222.87916565]
[316.46566772 219.46409607]
[331.35922241 217.57035828]
[346.36856079 217.21806335]
[361.33453369 218.41093445]
[376.09857178 221.13632202]
[390.50408936 225.36532593]
[404.39843750 231.05314636]
[417.63430786 238.13946533]
[430.07138062 246.54916382]
[441.57785034 256.19311523]
[452.03170776 266.96905518]
[461.32214355 278.76275635]
[469.35067749 291.44924927]
[476.03219604 304.89398193]
[481.29586792 318.95449829]
[485.08590698 333.48168945]
[487.36215210 348.32159424]
[488.10046387 363.31689453]
[487.29299927 378.30862427]
[484.94830322 393.13787842]
[481.09127808 407.64743042]
[475.76278687 421.68350220]
[469.01931763 435.09729004]
[460.93234253 447.74658203]
[451.58758545 459.49731445]
[441.08413696 470.22494507]
[429.53332520 479.81567383]
[417.05758667 488.16793823]
[403.78915405 495.19311523]
[389.86874390 500.81674194]
[375.44384766 504.97927856]
[360.66738892 507.63650513]
[345.69604492 508.76031494]
[330.68850708 508.33877563]
[315.80386353 506.37637329]
[301.19989014 502.89389038]
[287.03137207 497.92822266]
[273.44854736 491.53204346]
[260.59539795 483.77316284]
[248.60815430 474.73379517]
[237.61390686 464.50979614]
[227.72917175 453.20953369]
[219.05876160 440.95275879]
[211.69458008 427.86947632]
[205.71467590 414.09829712]
[201.18246460 399.78527832]
[198.14596558 385.08209229]
[196.63739014 370.14462280]
[196.67271423 355.13119507]
[198.25157166 340.20098877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 156]
[6 155]
[8 153]
[9 152]
[10 151]
[11 150]
[17 144]
[18 143]
[19 142]
[20 141]
[22 138]
[23 137]
[24 136]
[25 122]
[26 121]
[27 120]
[28 119]
[29 118]
[30 117]
[32 115]
[33 114]
[34 113]
[35 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
