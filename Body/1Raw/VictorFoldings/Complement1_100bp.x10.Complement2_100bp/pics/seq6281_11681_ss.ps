%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[106.17308044 258.23425293]
[108.37620544 273.10690308]
[108.10117340 288.13934326]
[105.35549164 302.92147827]
[100.21405029 317.05001831]
[92.81711578 330.13952637]
[83.36649323 341.83291626]
[72.11998749 351.81118774]
[59.38442230 359.80212402]
[45.50722504 365.58773804]
[30.86698151 369.01019287]
[15.86308575 369.97610474]
[0.90485585 368.45910645]
[-13.59963703 364.50064087]
[-27.25469971 358.20864868]
[-39.68781281 349.75479126]
[-50.55979156 339.36972046]
[-59.57403564 327.33670044]
[-66.48464203 313.98406982]
[-71.10307312 299.67602539]
[-73.30333710 284.80291748]
[-73.02540588 269.77053833]
[-70.27687073 254.98895264]
[-65.13271332 240.86141968]
[-57.73325729 227.77333069]
[-48.28038025 216.08175659]
[-37.03195190 206.10563660]
[-24.29484749 198.11715698]
[-10.41653728 192.33421326]
[4.22436619 188.91459656]
[19.22844696 187.95156860]
[34.18638611 189.47143555]
[48.69011307 193.43270874]
[46.98918152 178.63554382]
[59.79160309 169.33992004]
[66.06896210 155.71659851]
[72.34632874 142.09329224]
[70.64539337 127.29611969]
[83.44781494 118.00050354]
[89.72517395 104.37718964]
[95.90093994 90.70751953]
[94.41432953 74.95630646]
[106.64249420 66.45211792]
[112.71633148 52.73685455]
[111.22972107 36.98564529]
[123.45788574 28.48145485]
[129.53172302 14.76618767]
[135.60554504 1.05092132]
[141.67938232 -12.66434574]
[147.75321960 -26.37961197]
[153.82705688 -40.09487915]
[159.90089417 -53.81014633]
[146.47833252 -60.51206207]
[133.37962341 -67.82672882]
[120.63270569 -75.73853302]
[108.26477814 -84.23059845]
[96.30224609 -93.28479004]
[84.77063751 -102.88179779]
[73.69454956 -113.00113678]
[63.09762955 -123.62120056]
[53.00249100 -134.71934509]
[43.43067169 -146.27188110]
[34.40260315 -158.25413513]
[25.93755341 -170.64056396]
[18.05358315 -183.40470886]
[10.76751804 -196.51936340]
[4.09490871 -209.95651245]
[-1.95000637 -223.68748474]
[-7.35432673 -237.68296814]
[-12.10651875 -251.91313171]
[-16.19644165 -266.34756470]
[-19.61536789 -280.95550537]
[-22.35599899 -295.70574951]
[-24.41248894 -310.56680298]
[-25.78044891 -325.50698853]
[-26.45695686 -340.49441528]
[-26.44057083 -355.49710083]
[-25.73132706 -370.48303223]
[-24.33073616 -385.42019653]
[-22.24179077 -400.27673340]
[-19.46894646 -415.02093506]
[-16.01811981 -429.62136841]
[-11.89667702 -444.04684448]
[-7.11341238 -458.26660156]
[-1.67853403 -472.25024414]
[4.39635944 -485.96798706]
[11.09830475 -499.39053345]
[18.41299820 -512.48919678]
[26.32483101 -525.23614502]
[34.81691742 -537.60400391]
[43.87113953 -549.56652832]
[53.46816635 -561.09814453]
[63.58752441 -572.17419434]
[74.20761871 -582.77111816]
[85.30577850 -592.86621094]
[96.85832977 -602.43798828]
[108.84060669 -611.46606445]
[121.22705078 -619.93109131]
[133.99122620 -627.81500244]
[147.10588074 -635.10107422]
[160.54304504 -641.77362061]
[174.27403259 -647.81854248]
[188.26953125 -653.22283936]
[202.49969482 -657.97497559]
[216.93415833 -662.06488037]
[231.54208374 -665.48376465]
[246.29232788 -668.22436523]
[261.15341187 -670.28082275]
[276.09359741 -671.64874268]
[291.08102417 -672.32525635]
[306.08370972 -672.30883789]
[321.06961060 -671.59954834]
[336.00677490 -670.19891357]
[350.86331177 -668.10992432]
[365.60754395 -665.33709717]
[380.20794678 -661.88623047]
[394.63342285 -657.76477051]
[408.85314941 -652.98144531]
[422.83679199 -647.54650879]
[436.55453491 -641.47161865]
[449.97705078 -634.76965332]
[463.07571411 -627.45489502]
[475.82260132 -619.54309082]
[488.19049072 -611.05096436]
[500.15298462 -601.99670410]
[511.68457031 -592.39965820]
[522.76062012 -582.28027344]
[533.35748291 -571.66015625]
[543.45257568 -560.56195068]
[553.02435303 -549.00939941]
[562.05236816 -537.02709961]
[570.51739502 -524.64062500]
[578.40130615 -511.87646484]
[585.68731689 -498.76177979]
[592.35986328 -485.32461548]
[598.40472412 -471.59362793]
[603.80895996 -457.59808350]
[608.56109619 -443.36791992]
[612.65093994 -428.93347168]
[616.06982422 -414.32553101]
[618.81042480 -399.57525635]
[620.86682129 -384.71420288]
[622.23474121 -369.77398682]
[622.91119385 -354.78656006]
[622.89471436 -339.78387451]
[622.18542480 -324.79797363]
[620.78479004 -309.86080933]
[618.69573975 -295.00427246]
[615.92285156 -280.26007080]
[612.47198486 -265.65966797]
[608.35046387 -251.23420715]
[603.56713867 -237.01448059]
[598.13220215 -223.03085327]
[592.05725098 -209.31314087]
[585.35528564 -195.89062500]
[578.04052734 -182.79196167]
[570.12860107 -170.04508972]
[561.63647461 -157.67721558]
[552.58221436 -145.71473694]
[542.98516846 -134.18318176]
[532.86572266 -123.10716248]
[522.24560547 -112.51031494]
[511.14739990 -102.41523743]
[499.59481812 -92.84349823]
[487.61248779 -83.81549835]
[475.22601318 -75.35052490]
[462.46182251 -67.46663666]
[449.34710693 -60.18065262]
[435.90994263 -53.50812531]
[422.17892456 -47.46329498]
[408.18338013 -42.05906296]
[393.95321655 -37.30695724]
[379.51873779 -33.21712494]
[364.91079712 -29.79829025]
[350.16052246 -27.05775070]
[335.29943848 -25.00135231]
[320.35925293 -23.63348770]
[305.37182617 -22.95707130]
[290.36914062 -22.97355080]
[275.38323975 -23.68288803]
[260.44607544 -25.08357048]
[245.58953857 -27.17260933]
[230.84533691 -29.94554520]
[216.24493408 -33.39646149]
[201.81948853 -37.51799393]
[187.59977722 -42.30134583]
[173.61614990 -47.73631287]
[167.54231262 -34.02104568]
[161.46849060 -20.30577850]
[155.39465332 -6.59051132]
[149.32081604 7.12475538]
[143.24697876 20.84002113]
[137.17315674 34.55529022]
[139.09420776 49.32548904]
[126.43159485 58.81068802]
[120.35776520 72.52595520]
[122.27881622 87.29615784]
[109.61621094 96.78134918]
[109.49119568 104.84093475]
[103.34848785 110.65454865]
[97.07112885 124.27786255]
[98.32306671 140.04945374]
[85.96964264 148.37065125]
[79.69228363 161.99395752]
[73.41491699 175.61727905]
[74.66685486 191.38887024]
[62.31343079 199.71006775]
[74.74816895 208.16151428]
[85.62214661 218.54450989]
[94.63871765 230.57577515]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 207]
[35 205]
[36 204]
[37 203]
[39 201]
[40 200]
[41 198]
[43 196]
[44 195]
[46 193]
[47 192]
[48 191]
[49 190]
[50 189]
[51 188]
[52 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
