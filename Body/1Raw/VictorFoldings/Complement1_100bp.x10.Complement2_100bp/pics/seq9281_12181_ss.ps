%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[234.20834351 478.70526123]
[239.97184753 464.82720947]
[247.69467163 451.93630981]
[257.21218872 440.30725098]
[268.32156372 430.18798828]
[280.78598022 421.79415894]
[274.30648804 408.26580811]
[267.82696533 394.73745728]
[255.35102844 386.60110474]
[256.36801147 370.81262207]
[240.28150940 365.90716553]
[232.56828308 350.58331299]
[238.43756104 334.10391235]
[231.75737000 320.67352295]
[225.07716370 307.24313354]
[217.90180969 294.07067871]
[210.24121094 281.17434692]
[202.58061218 268.27801514]
[194.92001343 255.38169861]
[187.25941467 242.48536682]
[174.10733032 235.49452209]
[173.71166992 219.67825317]
[165.67050171 207.01573181]
[157.25588989 194.59823608]
[148.84126282 182.18074036]
[140.42665100 169.76324463]
[132.01202393 157.34574890]
[123.41346741 145.05491638]
[114.63285828 132.89346313]
[105.85225677 120.73200226]
[97.07165527 108.57054901]
[93.39000702 107.42256927]
[90.23224640 104.65735626]
[88.30930328 100.54526520]
[88.18488312 95.66424561]
[79.95607758 83.12284088]
[65.91637421 75.82919312]
[65.40345764 60.94342041]
[57.17465210 48.40202332]
[43.75936127 47.20009613]
[33.63354492 38.61648941]
[30.34899521 25.95577049]
[34.88798141 13.89645481]
[26.84680748 1.23392940]
[18.80563545 -11.42859554]
[10.76446152 -24.09111977]
[-3.16509342 -31.59299088]
[-3.45632267 -46.48474884]
[-19.97103691 -54.63003922]
[-20.02654266 -72.17893982]
[-28.25535011 -84.72033691]
[-42.29505157 -92.01398468]
[-42.80796432 -106.89975739]
[-56.84766769 -114.19340515]
[-57.36058044 -129.07917786]
[-61.46257782 -114.65095520]
[-74.49774170 -107.22906494]
[-88.99894714 -111.06510162]
[-96.65923309 -123.96161652]
[-93.09044647 -138.53088379]
[-80.33695221 -146.42698669]
[-65.70530701 -143.12721252]
[-72.78240967 -156.35273743]
[-79.85951996 -169.57826233]
[-86.93662262 -182.80378723]
[-100.97767639 -177.46739197]
[-115.58586884 -173.97038269]
[-130.52131653 -172.37020874]
[-145.53877258 -172.69311523]
[-160.39164734 -174.93382263]
[-174.83601379 -179.05552673]
[-188.63470459 -184.99053955]
[-201.56112671 -192.64141846]
[-213.40301514 -201.88252258]
[-223.96592712 -212.56210327]
[-233.07638550 -224.50479126]
[-240.58480835 -237.51446533]
[-246.36790466 -251.37753296]
[-250.33068848 -265.86630249]
[-252.40809631 -280.74288940]
[-252.56602478 -295.76296997]
[-250.80187988 -310.67996216]
[-247.14462280 -325.24884033]
[-241.65431213 -339.23043823]
[-234.42109680 -352.39514160]
[-225.56376648 -364.52673340]
[-215.22775269 -375.42605591]
[-203.58279419 -384.91412354]
[-190.82009888 -392.83511353]
[-177.14924622 -399.05895996]
[-162.79473877 -403.48345947]
[-147.99227905 -406.03598022]
[-132.98492432 -406.67459106]
[-118.01912689 -405.38879395]
[-103.34063721 -402.19973755]
[-89.19047546 -397.15975952]
[-75.80101776 -390.35162354]
[-63.39212036 -381.88711548]
[-52.16754913 -371.90527344]
[-42.31162643 -360.56997681]
[-33.98619461 -348.06735229]
[-27.32795906 -334.60272217]
[-22.44626045 -320.39718628]
[-19.42125702 -305.68402100]
[-18.30262375 -290.70480347]
[-19.10872841 -275.70550537]
[-21.82633591 -260.93246460]
[-26.41081810 -246.62823486]
[-32.78689575 -233.02772522]
[-40.84986877 -220.35424805]
[-50.46733093 -208.81593323]
[-61.48136139 -198.60224915]
[-73.71109772 -189.88088989]
[-66.63398743 -176.65536499]
[-59.55688477 -163.42984009]
[-52.47977829 -150.20431519]
[-44.81918335 -137.30798340]
[-31.36805725 -130.91137695]
[-30.26656532 -115.12856293]
[-16.81544113 -108.73196411]
[-15.71394920 -92.94914246]
[-7.48514175 -80.40774536]
[4.29107094 -77.64235687]
[11.24926662 -67.26125336]
[9.20620251 -54.52592087]
[22.56059837 -47.92975998]
[23.42698669 -32.13229370]
[31.46816063 -19.46976852]
[39.50933456 -6.80724335]
[47.55050659 5.85528135]
[64.10594177 8.81439590]
[73.58547211 23.11311722]
[69.71604919 40.17321396]
[77.94486237 52.71461487]
[91.39598083 59.11121750]
[92.49747467 74.89403534]
[100.72628021 87.43543243]
[109.23310852 99.78993988]
[118.01371002 111.95140076]
[126.79431915 124.11285400]
[135.57492065 136.27430725]
[141.44036865 139.32522583]
[144.43499756 144.15525818]
[144.42951965 148.93113708]
[152.84414673 161.34863281]
[161.25875854 173.76612854]
[169.67338562 186.18362427]
[178.08799744 198.60112000]
[182.05975342 200.35586548]
[184.97346497 203.01571655]
[186.67456055 206.13688660]
[187.16839600 209.27101135]
[186.60800171 212.01765442]
[200.30802917 219.93093872]
[200.15574646 234.82476807]
[207.81632996 247.72109985]
[215.47692871 260.61743164]
[223.13752747 273.51373291]
[230.79812622 286.41006470]
[236.97363281 272.74029541]
[251.47308350 268.89767456]
[263.60803223 277.71484375]
[264.43304443 292.69213867]
[253.33996582 302.78884888]
[238.50753784 300.56295776]
[245.18774414 313.99331665]
[251.86793518 327.42370605]
[265.04534912 330.21127319]
[274.07940674 339.93731689]
[275.83621216 352.89862061]
[269.89636230 364.33312988]
[282.83575439 373.43710327]
[281.35531616 388.25796509]
[287.83480835 401.78631592]
[294.31430054 415.31466675]
[308.66735840 410.86407471]
[323.51550293 408.55084229]
[338.54220581 408.42422485]
[353.42718506 410.48699951]
[367.85317993 414.69512939]
[381.51269531 420.95892334]
[394.11459351 429.14492798]
[405.39022827 439.07858276]
[415.09930420 450.54818726]
[423.03482056 463.30929565]
[429.02764893 477.08984375]
[432.95007324 491.59613037]
[434.71847534 506.51895142]
[434.29516602 521.54022217]
[431.68914795 536.33978271]
[426.95599365 550.60211182]
[420.19656372 564.02331543]
[411.55496216 576.31726074]
[401.21539307 587.22186279]
[389.39819336 596.50476074]
[376.35528564 603.96801758]
[362.36468506 609.45263672]
[347.72460938 612.84167480]
[332.74707031 614.06286621]
[317.75134277 613.09020996]
[303.05706787 609.94439697]
[288.97741699 604.69256592]
[275.81256104 597.44659424]
[263.84307861 588.36096191]
[253.32406616 577.62927246]
[244.47979736 565.48034668]
[237.49874878 552.17309570]
[232.52972412 537.99114990]
[229.67866516 523.23687744]
[229.00630188 508.22470093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 175]
[7 174]
[8 173]
[10 171]
[13 167]
[14 166]
[15 165]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[22 153]
[23 148]
[24 147]
[25 146]
[26 145]
[27 144]
[28 141]
[29 140]
[30 139]
[31 138]
[35 137]
[36 136]
[38 134]
[39 133]
[43 130]
[44 129]
[45 128]
[46 127]
[48 125]
[50 122]
[51 121]
[53 119]
[55 117]
[62 116]
[63 115]
[64 114]
[65 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
