%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[101.78573608 444.05062866]
[89.55218506 452.81570435]
[75.84358978 459.02542114]
[61.18687439 462.44113159]
[46.14540863 462.93148804]
[31.29733849 460.47772217]
[17.21339035 455.17407227]
[4.43491077 447.22442627]
[-6.54692841 436.93435669]
[-15.31001568 424.69940186]
[-21.51752090 410.98980713]
[-24.93084335 396.33251953]
[-25.41878510 381.29098511]
[-22.96258926 366.44329834]
[-17.65666771 352.36022949]
[-9.70496464 339.58303833]
[0.58687741 328.60284424]
[12.82326794 319.84173584]
[26.53387070 313.63647461]
[41.19168854 310.22552490]
[56.23331451 309.74002075]
[58.67904282 294.94073486]
[61.12477112 280.14147949]
[63.57049942 265.34219360]
[54.71483994 253.42108154]
[56.98433304 238.37767029]
[69.54833221 229.16987610]
[71.99406433 214.37060547]
[74.43978882 199.57133484]
[76.88552094 184.77206421]
[79.33124542 169.97279358]
[81.77696991 155.17352295]
[79.77333069 150.83825684]
[80.47180939 145.19830322]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[96.54793549 71.66314697]
[96.77126312 56.66481018]
[96.99459076 41.66647339]
[97.21791840 26.66813469]
[97.44124603 11.66979694]
[94.89736938 7.11175585]
[94.40543365 2.49533916]
[95.64407349 -1.38806331]
[98.02439117 -3.98930097]
[98.91720581 -18.96270752]
[99.81002045 -33.93611145]
[100.70284271 -48.90951920]
[85.79753876 -50.62616348]
[71.00943756 -53.16130447]
[56.38344574 -56.50724411]
[41.96398544 -60.65381622]
[27.79484749 -65.58842468]
[13.91906261 -71.29609680]
[0.37877050 -77.75948334]
[-12.78490639 -84.95896149]
[-25.53199005 -92.87266541]
[-37.82376862 -101.47656250]
[-49.62290955 -110.74452209]
[-60.89358521 -120.64840698]
[-71.60156250 -131.15812683]
[-81.71431732 -142.24176025]
[-91.20114136 -153.86566162]
[-100.03323364 -165.99450684]
[-108.18375397 -178.59149170]
[-115.62795258 -191.61833191]
[-122.34323120 -205.03549194]
[-128.30918884 -218.80220032]
[-133.50770569 -232.87664795]
[-137.92300415 -247.21611023]
[-141.54167175 -261.77700806]
[-144.35270691 -276.51516724]
[-146.34757996 -291.38580322]
[-147.52023315 -306.34371948]
[-147.86709595 -321.34353638]
[-147.38713074 -336.33969116]
[-146.08180237 -351.28662109]
[-143.95504761 -366.13897705]
[-141.01333618 -380.85159302]
[-137.26560974 -395.37982178]
[-132.72323608 -409.67953491]
[-127.40003204 -423.70730591]
[-121.31214142 -437.42053223]
[-114.47806549 -450.77755737]
[-106.91856384 -463.73782349]
[-98.65657806 -476.26199341]
[-89.71720886 -488.31198120]
[-80.12760925 -499.85125732]
[-69.91689301 -510.84469604]
[-59.11608124 -521.25897217]
[-47.75796509 -531.06243896]
[-35.87704468 -540.22534180]
[-23.50940323 -548.71984863]
[-10.69259548 -556.52014160]
[2.53444958 -563.60247803]
[16.13156319 -569.94549561]
[30.05745125 -575.52978516]
[44.26982117 -580.33850098]
[58.72550964 -584.35693359]
[73.38061523 -587.57293701]
[88.19062805 -589.97674561]
[103.11058044 -591.56109619]
[118.09514618 -592.32104492]
[133.09883118 -592.25445557]
[148.07604980 -591.36138916]
[162.98133850 -589.64465332]
[177.76942444 -587.10943604]
[192.39540100 -583.76336670]
[206.81481934 -579.61669922]
[220.98393250 -574.68200684]
[234.85968018 -568.97424316]
[248.39991760 -562.51074219]
[261.56353760 -555.31115723]
[274.31057739 -547.39739990]
[286.60229492 -538.79339600]
[298.40136719 -529.52532959]
[309.67196655 -519.62139893]
[320.37988281 -509.11160278]
[330.49255371 -498.02789307]
[339.97930908 -486.40393066]
[348.81130981 -474.27499390]
[356.96173096 -461.67797852]
[364.40585327 -448.65106201]
[371.12103271 -435.23385620]
[377.08688354 -421.46713257]
[382.28530884 -407.39263916]
[386.70050049 -393.05313110]
[390.31906128 -378.49218750]
[393.13000488 -363.75402832]
[395.12475586 -348.88339233]
[396.29730225 -333.92544556]
[396.64407349 -318.92562866]
[396.16400146 -303.92950439]
[394.85855103 -288.98257446]
[392.73171997 -274.13024902]
[389.78988647 -259.41763306]
[386.04205322 -244.88943481]
[381.49960327 -230.58975220]
[376.17630005 -216.56202698]
[370.08831787 -202.84884644]
[363.25415039 -189.49186707]
[355.69454956 -176.53163147]
[347.43246460 -164.00753784]
[338.49301147 -151.95759583]
[328.90332031 -140.41841125]
[318.69253540 -129.42501831]
[307.89166260 -119.01081085]
[296.53347778 -109.20742035]
[284.65249634 -100.04460907]
[272.28479004 -91.55020905]
[259.46792603 -83.75002289]
[246.24082947 -76.66773224]
[232.64366150 -70.32484436]
[218.71774292 -64.74063110]
[204.50534058 -59.93204880]
[190.04962158 -55.91369629]
[175.39448547 -52.69778442]
[160.58445740 -50.29407501]
[145.66450500 -48.70986557]
[130.67993164 -47.94997406]
[115.67624664 -48.01670074]
[114.78343201 -33.04329681]
[113.89061737 -18.06989098]
[112.99779510 -3.09648514]
[112.43959045 11.89312458]
[112.21626282 26.89146233]
[111.99293518 41.88980103]
[111.76960754 56.88813782]
[111.54627991 71.88647461]
[119.86212921 59.40262222]
[132.72669983 51.68880463]
[147.65602112 50.23443985]
[161.76750183 55.32033920]
[172.33641052 65.96450043]
[177.32206726 80.11169434]
[175.76182556 95.03032684]
[167.95692444 107.83984375]
[155.41439819 116.06692505]
[140.55598450 118.12305450]
[126.25062561 113.61121368]
[115.26045990 103.40258789]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[96.57624054 157.61924744]
[94.13051605 172.41851807]
[91.68479156 187.21778870]
[89.23905945 202.01705933]
[86.79333496 216.81632996]
[84.34760284 231.61560059]
[93.28112793 244.37608337]
[90.58999634 259.34982300]
[78.36976624 267.78793335]
[75.92404175 282.58718872]
[73.47831726 297.38647461]
[71.03258514 312.18572998]
[85.11825562 317.48480225]
[97.89930725 325.43032837]
[108.88447571 335.71682739]
[117.65151978 347.94894409]
[123.86346436 361.65655518]
[127.28153229 376.31271362]
[127.77434540 391.35409546]
[125.32295227 406.20257568]
[120.02159119 420.28735352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 201]
[22 200]
[23 199]
[24 198]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[35 189]
[36 188]
[37 187]
[39 185]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[48 167]
[49 166]
[50 165]
[51 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
