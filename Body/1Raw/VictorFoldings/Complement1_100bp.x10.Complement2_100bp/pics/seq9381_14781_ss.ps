%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[116.67945099 634.05371094]
[102.53052521 639.37341309]
[87.44208527 640.28466797]
[72.75578308 636.70642090]
[59.77751160 628.95684814]
[49.66129303 617.72503662]
[43.30665588 604.00970459]
[41.27864456 589.03045654]
[43.75759506 574.11914062]
[50.52307510 560.60174561]
[60.97350693 549.68023682]
[74.17964172 542.32568359]
[88.96720123 539.19207764]
[90.30544281 524.25189209]
[91.64367676 509.31170654]
[92.98191071 494.37152100]
[93.98616791 479.40518188]
[94.65595245 464.42016602]
[95.32573700 449.43511963]
[95.99552155 434.45007324]
[96.66530609 419.46502686]
[89.50402832 406.40496826]
[97.84982300 392.96405029]
[87.64031219 382.17974854]
[88.10610199 366.97323608]
[99.48690796 356.33767700]
[100.15669250 341.35263062]
[100.82647705 326.36761475]
[101.49626160 311.38256836]
[102.16604614 296.39752197]
[102.16604614 281.39752197]
[101.49626160 266.41247559]
[100.82647705 251.42744446]
[100.15669250 236.44241333]
[85.34661102 230.44139099]
[74.59707642 218.53924561]
[70.09782410 203.08479309]
[72.79835510 187.15785217]
[82.20804596 173.95552063]
[96.48439026 166.15039062]
[95.59156799 151.17698669]
[94.69875336 136.20358276]
[93.80593872 121.23017883]
[92.91312408 106.25677490]
[89.87996674 101.97729492]
[89.46044159 96.30302429]
[92.22339630 90.82552338]
[91.77678680 75.83217621]
[88.39325714 67.34751129]
[91.43682098 60.61263657]
[83.49491882 46.92919159]
[91.04187012 34.08813477]
[88.36340332 29.60785484]
[87.73424530 25.00813103]
[88.85671234 21.08957100]
[91.15852356 18.41861534]
[91.60513306 3.42526627]
[79.49839020 -6.10012484]
[75.37018585 -20.75656891]
[80.60192871 -34.86659622]
[92.99073792 -43.09188843]
[93.43733978 -58.08523941]
[86.11434937 -72.10966492]
[94.22715759 -84.60092163]
[94.67376709 -99.59427643]
[95.12037659 -114.58762360]
[95.56697845 -129.58097839]
[88.24398804 -143.60539246]
[96.35679626 -156.09664917]
[96.80340576 -171.09001160]
[81.89283752 -172.80720520]
[67.18161011 -175.78271484]
[52.77573013 -179.99513245]
[38.77898407 -185.41407776]
[25.29222870 -192.00051880]
[12.41263294 -199.70700073]
[0.23299699 -208.47799683]
[-11.15892220 -218.25030518]
[-21.68104553 -228.95352173]
[-31.25755692 -240.51051331]
[-39.81946182 -252.83802795]
[-47.30506134 -265.84725952]
[-53.66043091 -279.44442749]
[-58.83977127 -293.53158569]
[-62.80577087 -308.00723267]
[-65.52984619 -322.76708984]
[-66.99237823 -337.70480347]
[-67.18283081 -352.71270752]
[-66.09981537 -367.68270874]
[-63.75115585 -382.50692749]
[-60.15375900 -397.07858276]
[-55.33355331 -411.29263306]
[-49.32526779 -425.04669189]
[-42.17218781 -438.24166870]
[-33.92586136 -450.78247070]
[-24.64569473 -462.57876587]
[-14.39855957 -473.54553223]
[-3.25828552 -483.60375977]
[8.69486046 -492.68099976]
[21.37475395 -500.71182251]
[34.69003296 -507.63839722]
[48.54476166 -513.41076660]
[62.83911514 -517.98736572]
[77.47009277 -521.33526611]
[92.33229065 -523.43023682]
[107.31861115 -524.25726318]
[122.32108307 -523.81042480]
[137.23161316 -522.09283447]
[151.94274902 -519.11694336]
[166.34852600 -514.90417480]
[180.34513855 -509.48483276]
[193.83172607 -502.89804077]
[206.71112061 -495.19122314]
[218.89051819 -486.41992188]
[230.28219604 -476.64730835]
[240.80403137 -465.94384766]
[250.38024902 -454.38659668]
[258.94183350 -442.05883789]
[266.42709351 -429.04943848]
[272.78213501 -415.45211792]
[277.96109009 -401.36480713]
[281.92672729 -386.88903809]
[284.65042114 -372.12911987]
[286.11257935 -357.19137573]
[286.30261230 -342.18347168]
[285.21923828 -327.21350098]
[282.87017822 -312.38931274]
[279.27239990 -297.81777954]
[274.45184326 -283.60385132]
[268.44320679 -269.84994507]
[261.28976440 -256.65515137]
[253.04312134 -244.11454773]
[243.76264954 -232.31851196]
[233.51524353 -221.35200500]
[222.37471008 -211.29405212]
[210.42132568 -202.21713257]
[197.74122620 -194.18663025]
[184.42576599 -187.26042175]
[170.57089233 -181.48840332]
[156.27641296 -176.91215515]
[141.64533997 -173.56466675]
[126.78309631 -171.47006226]
[111.79675293 -170.64340210]
[111.35015106 -155.65005493]
[118.70507812 -142.69805908]
[110.56032562 -129.13436890]
[110.11372375 -114.14101410]
[109.66711426 -99.14766693]
[109.22051239 -84.15431976]
[116.57543945 -71.20231628]
[108.43068695 -57.63863373]
[107.98408508 -42.64528275]
[119.86135101 -33.69717789]
[124.24396515 -19.30076790]
[119.25071716 -4.91602516]
[106.59848022 3.87187219]
[106.15187836 18.86522293]
[106.04020691 33.86480713]
[113.96614075 46.47547150]
[106.43516541 60.38930893]
[106.77014160 75.38556671]
[107.21674347 90.37892151]
[107.88652802 105.36396027]
[108.77934265 120.33736420]
[109.67215729 135.31077576]
[110.56497955 150.28417969]
[111.45779419 165.25758362]
[124.72901917 170.11775208]
[135.11399841 179.64016724]
[141.06713867 192.36280823]
[141.71952820 206.35084534]
[137.00566101 219.49081421]
[127.66832733 229.81002808]
[115.14173126 235.77262878]
[115.81151581 250.75765991]
[116.48130035 265.74270630]
[117.15108490 280.72775269]
[128.04638672 270.41790771]
[143.04383850 270.69406128]
[153.55223083 281.39794922]
[153.55187988 296.39794922]
[143.04296875 307.10137939]
[128.04550171 307.37680054]
[117.15108490 297.06732178]
[116.48130035 312.05233765]
[115.81151581 327.03738403]
[115.14173126 342.02243042]
[114.47194672 357.00747681]
[124.85851288 368.61596680]
[123.96578979 383.80337524]
[112.83486176 393.63385010]
[119.94823456 407.76571655]
[111.65034485 420.13482666]
[110.98056030 435.11987305]
[110.31077576 450.10488892]
[109.64099121 465.08993530]
[108.97120667 480.07498169]
[111.37825012 484.70672607]
[111.73252106 489.33575439]
[110.37879944 493.18054199]
[107.92209625 495.70977783]
[106.58385468 510.64996338]
[105.24562073 525.59014893]
[103.90738678 540.53033447]
[117.90264893 546.24206543]
[129.59150696 555.82653809]
[137.93461609 568.43145752]
[142.19009399 582.93603516]
[141.97955322 598.05047607]
[137.32171631 612.43090820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 204]
[14 203]
[15 202]
[16 201]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[23 191]
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[31 177]
[32 176]
[33 175]
[34 174]
[40 167]
[41 166]
[42 165]
[43 164]
[44 163]
[47 162]
[48 161]
[50 160]
[52 158]
[56 157]
[57 156]
[61 152]
[62 151]
[64 149]
[65 148]
[66 147]
[67 146]
[69 144]
[70 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
