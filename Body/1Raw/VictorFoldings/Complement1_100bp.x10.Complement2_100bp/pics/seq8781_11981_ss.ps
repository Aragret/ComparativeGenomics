%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[41.83726120 821.01171875]
[26.84703255 821.62500000]
[11.84453392 821.53497314]
[-3.13725519 820.74188232]
[-18.06540298 819.24737549]
[-32.90709305 817.05487061]
[-47.62969971 814.16906738]
[-62.20086288 810.59631348]
[-76.58854675 806.34454346]
[-90.76113129 801.42309570]
[-104.68744659 795.84271240]
[-118.33689880 789.61572266]
[-131.67947388 782.75573730]
[-144.68583679 775.27795410]
[-157.32740784 767.19873047]
[-169.57640076 758.53588867]
[-181.40586853 749.30834961]
[-192.78982544 739.53656006]
[-203.70323181 729.24188232]
[-214.12211609 718.44696045]
[-224.02357483 707.17553711]
[-233.38581848 695.45245361]
[-242.18829346 683.30340576]
[-250.41163635 670.75512695]
[-258.03778076 657.83514404]
[-265.04992676 644.57196045]
[-271.43270874 630.99462891]
[-277.17208862 617.13311768]
[-282.25543213 603.01776123]
[-286.67153931 588.67968750]
[-290.41076660 574.15032959]
[-293.46484375 559.46173096]
[-295.82708740 544.64611816]
[-297.49227905 529.73602295]
[-298.45678711 514.76428223]
[-298.71844482 499.76379395]
[-298.27673340 484.76754761]
[-297.13259888 469.80847168]
[-295.28854370 454.91946411]
[-292.74862671 440.13323975]
[-289.51846313 425.48233032]
[-285.60510254 410.99896240]
[-281.01718140 396.71490479]
[-275.76477051 382.66159058]
[-269.85943604 368.86993408]
[-263.31414795 355.37023926]
[-256.14328003 342.19213867]
[-248.36259460 329.36468506]
[-239.98921204 316.91598511]
[-231.04154968 304.87347412]
[-221.53924561 293.26358032]
[-211.50321960 282.11187744]
[-200.95550537 271.44281006]
[-189.91929626 261.27987671]
[-178.41886902 251.64540100]
[-166.47949219 242.56056213]
[-154.12739563 234.04534912]
[-141.38975525 226.11845398]
[-128.29457092 218.79731750]
[-114.87061310 212.09803772]
[-101.14739990 206.03532410]
[-87.15509033 200.62251282]
[-72.92446136 195.87150574]
[-58.48677444 191.79273987]
[-43.87377548 188.39518738]
[-29.11758804 185.68632507]
[-14.25064945 183.67208862]
[0.69436193 182.35690308]
[15.68459225 181.74368286]
[30.68708992 181.83375549]
[45.66887665 182.62693787]
[60.59701538 184.12147522]
[75.43869781 186.31410217]
[78.32396698 171.59420776]
[81.20924377 156.87431335]
[84.09451294 142.15441895]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[83.96182251 102.67506409]
[86.28707123 91.26303101]
[95.64781189 84.33355713]
[98.75192261 69.65824890]
[101.85603333 54.98294830]
[104.96014404 40.30764771]
[108.06425476 25.63234329]
[93.81333160 20.90042114]
[80.18183136 14.60262394]
[67.34118652 6.81815577]
[55.45288849 -2.35508633]
[44.66644287 -12.80173969]
[35.11749649 -24.39042473]
[26.92613983 -36.97540283]
[20.19538879 -50.39840698]
[15.00988865 -64.49062347]
[11.43485260 -79.07482910]
[9.51524067 -93.96762085]
[9.27519417 -108.98168945]
[10.71773148 -123.92823029]
[13.82471180 -138.61927795]
[18.55706215 -152.87005615]
[24.85526466 -166.50137329]
[32.64011765 -179.34178162]
[41.81371689 -191.22979736]
[52.26069260 -202.01594543]
[63.84966278 -211.56454468]
[76.43488312 -219.75552368]
[89.85809326 -226.48587036]
[103.95046234 -231.67094421]
[118.53477478 -235.24554443]
[133.42762756 -237.16471863]
[148.44169617 -237.40431213]
[163.38819885 -235.96131897]
[178.07914734 -232.85391235]
[192.32978821 -228.12112427]
[205.96092224 -221.82252502]
[218.80108643 -214.03727722]
[230.68884277 -204.86332703]
[241.47467041 -194.41603088]
[251.02291870 -182.82678223]
[259.21353149 -170.24130249]
[265.94348145 -156.81790161]
[271.12811279 -142.72537231]
[274.70230103 -128.14094543]
[276.62100220 -113.24804688]
[276.86016846 -98.23396301]
[275.41671753 -83.28750610]
[272.30886841 -68.59664917]
[267.57565308 -54.34614944]
[261.27664185 -40.71521378]
[253.49102783 -27.87527275]
[244.31671143 -15.98779774]
[233.86909485 -5.20228720]
[222.27955627 4.34561920]
[209.69384766 12.53584576]
[196.27023315 19.26539421]
[182.17755127 24.44962883]
[167.59301758 28.02335739]
[152.70005798 29.94163322]
[137.68597412 30.18033218]
[122.73955536 28.73645401]
[119.63544464 43.41175461]
[116.53134155 58.08705902]
[113.42723083 72.76235962]
[110.32312012 87.43766022]
[115.93238068 103.24628448]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[98.81440735 145.03968811]
[95.92913818 159.75958252]
[93.04386139 174.47947693]
[90.15859222 189.19937134]
[104.72976685 192.77201843]
[119.11746979 197.02372742]
[133.29006958 201.94515991]
[147.21641541 207.52546692]
[160.86589050 213.75241089]
[174.20849609 220.61230469]
[187.21488953 228.09004211]
[199.85650635 236.16920471]
[212.10552979 244.83203125]
[223.93502808 254.05947876]
[235.31903076 263.83123779]
[246.23249817 274.12588501]
[256.65142822 284.92074585]
[266.55291748 296.19207764]
[275.91522217 307.91516113]
[284.71774292 320.06417847]
[292.94113159 332.61242676]
[300.56735229 345.53234863]
[307.57955933 358.79553223]
[313.96240234 372.37280273]
[319.70184326 386.23434448]
[324.78521729 400.34963989]
[329.20141602 414.68771362]
[332.94070435 429.21704102]
[335.99484253 443.90563965]
[338.35714722 458.72125244]
[340.02239990 473.63131714]
[340.98696899 488.60305786]
[341.24871826 503.60354614]
[340.80703735 518.59979248]
[339.66296387 533.55889893]
[337.81900024 548.44787598]
[335.27914429 563.23413086]
[332.04901123 577.88500977]
[328.13574219 592.36846924]
[323.54788208 606.65252686]
[318.29553223 620.70581055]
[312.39025879 634.49749756]
[305.84500122 647.99725342]
[298.67419434 661.17535400]
[290.89358521 674.00286865]
[282.52026367 686.45159912]
[273.57263184 698.49414062]
[264.07040405 710.10406494]
[254.03440857 721.25585938]
[243.48674011 731.92492676]
[232.45057678 742.08795166]
[220.95019531 751.72247314]
[209.01084900 760.80731201]
[196.65879822 769.32263184]
[183.92118835 777.24957275]
[170.82603455 784.57073975]
[157.40209961 791.27008057]
[143.67890930 797.33288574]
[129.68663025 802.74572754]
[115.45602417 807.49682617]
[101.01835632 811.57562256]
[86.40537262 814.97326660]
[71.64919281 817.68218994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 151]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
