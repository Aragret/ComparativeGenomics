%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[175.47644043 583.84075928]
[171.47529602 569.37335205]
[168.80633545 554.60198975]
[167.49166870 539.64916992]
[167.54220581 524.63879395]
[168.95750427 509.69512939]
[171.72586060 494.94213867]
[175.82431030 480.50198364]
[181.21891785 466.49435425]
[187.86497498 453.03533936]
[195.70738220 440.23645020]
[204.68118286 428.20373535]
[214.71202087 417.03692627]
[225.71675110 406.82852173]
[237.60418701 397.66314697]
[229.56301880 385.00064087]
[221.52183533 372.33810425]
[213.48066711 359.67556763]
[205.43949890 347.01306152]
[203.87709045 361.93145752]
[194.58053589 373.70321655]
[180.43045044 378.68069458]
[165.81141663 375.32156372]
[155.25328064 364.66671753]
[152.02760315 350.01766968]
[157.13389587 335.91354370]
[168.98992920 326.72473145]
[183.92195129 325.29840088]
[197.30334473 332.07678223]
[191.02597046 318.45346069]
[184.74861145 304.83013916]
[169.83409119 304.68048096]
[156.40834045 298.04281616]
[147.15805054 286.18560791]
[143.96017456 271.42779541]
[147.50134277 256.68508911]
[157.13128662 244.89416504]
[150.85391235 231.27085876]
[144.57655334 217.64753723]
[138.29919434 204.02421570]
[132.02183533 190.40090942]
[120.78613281 185.91921997]
[115.44487000 174.62077332]
[119.35449982 162.32942200]
[113.28067017 148.61415100]
[107.20683289 134.89888000]
[94.97866821 126.39469147]
[96.46527863 110.64348602]
[91.14394379 124.66786957]
[78.11472321 132.10018921]
[63.33439255 129.54248047]
[53.56032944 118.16409302]
[53.26109695 103.16707611]
[62.57350159 91.40786743]
[77.24004364 88.26261139]
[90.55662537 95.17063904]
[78.94952393 84.41955566]
[82.39676666 69.92935944]
[77.78276062 55.65662766]
[73.16875458 41.38389587]
[68.55474091 27.11116219]
[63.94073486 12.83842850]
[59.32672501 -1.43430531]
[54.71271515 -15.70703888]
[49.99258041 -29.94502831]
[45.16658401 -44.14748383]
[40.34058380 -58.34993744]
[38.29274750 -43.49038315]
[32.51776505 -29.64662933]
[23.39867210 -17.73687744]
[11.54030800 -8.55106258]
[-2.27080584 -2.69844532]
[-17.11862755 -0.56720906]
[-32.01835632 -2.29871130]
[-45.98174667 -7.77810764]
[-58.08265305 -16.64196968]
[-67.51847076 -28.30238724]
[-73.66335297 -41.98596954]
[-76.10973358 -56.78513336]
[-74.69535065 -71.71829987]
[-69.51401520 -85.79501343]
[-60.90938950 -98.08160400]
[-49.45218277 -107.76316071]
[-35.90231705 -114.19753265]
[-21.15850258 -116.95794678]
[-6.19864178 -115.86132050]
[7.98502922 -110.98039246]
[20.45175934 -102.63889313]
[30.37467384 -91.39008331]
[37.09731293 -77.97520447]
[37.09731293 -92.97520447]
[37.09731293 -107.97520447]
[37.09731293 -122.97520447]
[37.09731293 -137.97520447]
[33.96790314 -146.55685425]
[37.21064377 -153.19812012]
[37.43397141 -168.19645691]
[37.65729904 -183.19479370]
[30.12631989 -197.10862732]
[38.05225372 -209.71929932]
[24.57693863 -216.97702026]
[16.02758598 -229.67218018]
[14.36877537 -244.88752747]
[19.98168755 -259.12670898]
[31.57651901 -269.11761475]
[46.48885727 -272.56445312]
[61.29196167 -268.67514038]
[72.58418274 -258.34344482]
[77.77066040 -243.94346619]
[75.65956116 -228.78425598]
[66.73602295 -216.34925842]
[53.05059052 -209.49597168]
[60.59754181 -196.65490723]
[52.65563583 -182.97146606]
[52.43230820 -167.97312927]
[52.20898056 -152.97479248]
[52.09731293 -137.97520447]
[52.09731293 -122.97520447]
[52.09731293 -107.97520447]
[52.09731293 -92.97520447]
[52.09731293 -77.97520447]
[54.54304123 -63.17593765]
[59.36903763 -48.97348022]
[64.19503784 -34.77102661]
[69.32341003 -29.44922447]
[68.98545074 -20.32104874]
[73.59945679 -6.04831457]
[78.21346283 8.22441864]
[82.82747650 22.49715233]
[87.44148254 36.76988602]
[92.05549622 51.04261780]
[96.66950226 65.31535339]
[107.94657898 75.04554749]
[104.82936096 90.55662537]
[110.18054962 104.56964874]
[122.84315491 114.05484772]
[120.92210388 128.82504272]
[126.99593353 142.54031372]
[133.06976318 156.25558472]
[148.19348145 166.76055908]
[145.64515686 184.12353516]
[151.92251587 197.74685669]
[158.19987488 211.37017822]
[164.47723389 224.99348450]
[170.75459290 238.61680603]
[185.97450256 238.95739746]
[199.48217773 245.84431458]
[208.62280273 257.86386108]
[211.62600708 272.59957886]
[207.94860840 287.11807251]
[198.37193298 298.55276489]
[204.64929199 312.17608643]
[210.92665100 325.79940796]
[218.10202026 338.97189331]
[226.14318848 351.63439941]
[234.18437195 364.29693604]
[242.22554016 376.95947266]
[250.26670837 389.62197876]
[263.61712646 382.76037598]
[277.53619385 377.14123535]
[291.90856934 372.81109619]
[306.61517334 369.80587769]
[321.53411865 368.15048218]
[336.54177856 367.85858154]
[351.51379395 368.93264771]
[366.32614136 371.36373901]
[380.85601807 375.13174438]
[394.98303223 380.20541382]
[408.59017944 386.54269409]
[421.56463623 394.09112549]
[433.79891968 402.78811646]
[445.19165039 412.56158447]
[455.64840698 423.33059692]
[465.08255005 435.00585938]
[473.41592407 447.49066162]
[480.57943726 460.68154907]
[486.51376343 474.46920776]
[491.16967773 488.73934937]
[494.50866699 503.37377930]
[496.50302124 518.25122070]
[497.13623047 533.24835205]
[496.40301514 548.24090576]
[494.30950928 563.10473633]
[490.87298584 577.71655273]
[486.12200928 591.95538330]
[480.09585571 605.70312500]
[472.84454346 618.84594727]
[464.42810059 631.27490234]
[454.91629028 642.88696289]
[444.38793945 653.58599854]
[432.93029785 663.28332520]
[420.63827515 671.89849854]
[407.61376953 679.36022949]
[393.96469116 685.60662842]
[379.80413818 690.58599854]
[365.24945068 694.25701904]
[350.42123413 696.58923340]
[335.44238281 697.56347656]
[320.43698120 697.17150879]
[305.52941895 695.41662598]
[290.84320068 692.31335449]
[276.50000000 687.88751221]
[262.61874390 682.17565918]
[249.31437683 675.22515869]
[236.69718933 667.09362793]
[224.87171936 657.84844971]
[213.93597412 647.56622314]
[203.98054504 636.33209229]
[195.08796692 624.23925781]
[187.33189392 611.38781738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[29 153]
[30 152]
[31 151]
[37 145]
[38 144]
[39 143]
[40 142]
[41 141]
[44 139]
[45 138]
[46 137]
[48 135]
[56 134]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
[65 124]
[66 123]
[67 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[96 116]
[97 115]
[98 114]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
