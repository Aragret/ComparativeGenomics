%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[153.48457336 541.88928223]
[142.27935791 531.91156006]
[131.63075256 521.34185791]
[121.57000732 510.21118164]
[112.12662506 498.55215454]
[103.32829285 486.39895630]
[95.20082855 473.78723145]
[87.76807404 460.75399780]
[81.05181885 447.33749390]
[75.07177734 433.57702637]
[69.84548187 419.51300049]
[65.38825989 405.18667603]
[61.71319580 390.64001465]
[58.83105850 375.91574097]
[56.75030899 361.05703735]
[55.47704315 346.10745239]
[55.01500320 331.11087036]
[55.36553955 316.11126709]
[56.52762604 301.15264893]
[58.49785614 286.27886963]
[61.27044296 271.53359985]
[64.83726501 256.96002197]
[69.18785095 242.60093689]
[74.30944061 228.49844360]
[80.18701935 214.69392395]
[86.80333710 201.22784424]
[94.13899994 188.13970947]
[102.17247772 175.46792603]
[110.88021088 163.24964905]
[120.23665619 151.52072144]
[130.21437073 140.31553650]
[119.56836700 129.74848938]
[108.92236328 119.18144226]
[98.27635193 108.61439514]
[95.23851013 108.36737061]
[92.22341156 107.00954437]
[89.64264679 104.54720306]
[87.89972687 101.13861847]
[87.33475494 97.08722687]
[77.33658600 85.90525055]
[67.33840942 74.72327423]
[57.34024048 63.54130173]
[47.34206772 52.35932541]
[37.34389496 41.17734909]
[27.34572411 29.99537659]
[17.34755135 18.81340218]
[7.34937954 7.63142681]
[-2.64879251 -3.55054760]
[-12.64696503 -14.73252201]
[-24.75092316 -5.85278702]
[-37.65540314 1.81727862]
[-51.23991776 8.20605946]
[-65.37762451 13.25390434]
[-79.93652344 16.91368103]
[-94.78067780 19.15121841]
[-109.77149200 19.94562531]
[-124.76898956 19.28948402]
[-139.63314819 17.18892097]
[-154.22517395 13.66354847]
[-168.40882874 8.74628353]
[-182.05168152 2.48303843]
[-195.02633667 -5.06770754]
[-207.21165466 -13.83545399]
[-218.49388123 -23.73833466]
[-228.76763916 -34.68389130]
[-237.93704224 -46.56991959]
[-245.91644287 -59.28544235]
[-252.63136292 -72.71173859]
[-258.01910400 -86.72344971]
[-262.02932739 -101.18973541]
[-264.62463379 -115.97554016]
[-265.78076172 -130.94279480]
[-265.48690796 -145.95176697]
[-263.74584961 -160.86230469]
[-260.57385254 -175.53520203]
[-256.00045776 -189.83345032]
[-250.06845093 -203.62355042]
[-242.83319092 -216.77673340]
[-234.36221313 -229.17019653]
[-224.73461914 -240.68823242]
[-214.04031372 -251.22329712]
[-202.37915039 -260.67700195]
[-189.86000061 -268.96109009]
[-176.59974670 -275.99822998]
[-162.72221375 -281.72271729]
[-148.35696411 -286.08105469]
[-133.63813782 -289.03259277]
[-118.70315552 -290.54977417]
[-103.69146729 -290.61840820]
[-88.74323273 -289.23788452]
[-73.99803162 -286.42105103]
[-59.59352875 -282.19424438]
[-45.66422653 -276.59692383]
[-32.34017563 -269.68136597]
[-19.74578857 -261.51208496]
[-7.99865437 -252.16540527]
[2.79154277 -241.72859192]
[12.52405548 -230.29908752]
[21.10801315 -217.98359680]
[28.46326447 -204.89712524]
[34.52113724 -191.16184998]
[39.22506714 -176.90602112]
[42.53113556 -162.26275635]
[44.40847397 -147.36875916]
[44.83955002 -132.36309814]
[43.82034302 -117.38589478]
[41.36036682 -102.57698059]
[37.48258972 -88.07462311]
[32.22322083 -74.01422882]
[25.63136673 -60.52708817]
[17.76857376 -47.73912811]
[8.70825577 -35.76974106]
[-1.46499002 -24.73069382]
[8.53318214 -13.54871941]
[18.53135490 -2.36674500]
[28.52952576 8.81522942]
[38.52769852 19.99720383]
[48.52587128 31.17917824]
[58.52404404 42.36115265]
[68.52221680 53.54312897]
[78.52038574 64.72510529]
[88.51855469 75.90707397]
[98.51673126 87.08905029]
[108.84339905 97.96838379]
[119.48941040 108.53543091]
[130.13542175 119.10247803]
[140.78141785 129.66952515]
[151.91201782 119.60867310]
[163.57096863 110.16516113]
[175.72407532 101.36671448]
[188.33570862 93.23912048]
[201.36886597 85.80623627]
[214.78532410 79.08985138]
[228.54571533 73.10967255]
[242.60968018 67.88323212]
[256.93597412 63.42587280]
[271.48257446 59.75065994]
[286.20681763 56.86837387]
[301.06552124 54.78747559]
[316.01507568 53.51406097]
[331.01165771 53.05186844]
[346.01126099 53.40225601]
[360.96990967 54.56419373]
[375.84368896 56.53427124]
[390.58901978 59.30671310]
[405.16262817 62.87338638]
[419.52175903 67.22383118]
[433.62429810 72.34528351]
[447.42889404 78.22271729]
[460.89501953 84.83890533]
[473.98321533 92.17443085]
[486.65509033 100.20778656]
[498.87344360 108.91539764]
[510.60247803 118.27172852]
[521.80773926 128.24932861]
[532.45642090 138.81895447]
[542.51727295 149.94956970]
[551.96069336 161.60855103]
[560.75915527 173.76170349]
[568.88665771 186.37336731]
[576.31951904 199.40653992]
[583.03588867 212.82301331]
[589.01599121 226.58341980]
[594.24237061 240.64741516]
[598.69970703 254.97372437]
[602.37487793 269.52035522]
[605.25708008 284.24459839]
[607.33795166 299.10330200]
[608.61132812 314.05285645]
[609.07342529 329.04943848]
[608.72302246 344.04904175]
[607.56103516 359.00769043]
[605.59088135 373.88146973]
[602.81842041 388.62677002]
[599.25170898 403.20037842]
[594.90118408 417.55947876]
[589.77972412 431.66201782]
[583.90222168 445.46658325]
[577.28601074 458.93270874]
[569.95043945 472.02087402]
[561.91699219 484.69271851]
[553.20935059 496.91104126]
[543.85302734 508.64004517]
[533.87536621 519.84527588]
[523.30572510 530.49389648]
[512.17504883 540.55468750]
[500.51602173 549.99810791]
[488.36285400 558.79650879]
[475.75115967 566.92401123]
[462.71795654 574.35681152]
[449.30148315 581.07312012]
[435.54104614 587.05322266]
[421.47702026 592.27954102]
[407.15069580 596.73681641]
[392.60406494 600.41192627]
[377.87982178 603.29412842]
[363.02108765 605.37487793]
[348.07153320 606.64819336]
[333.07495117 607.11029053]
[318.07534790 606.75982666]
[303.11672974 605.59777832]
[288.24295044 603.62762451]
[273.49761963 600.85504150]
[258.92407227 597.28833008]
[244.56495667 592.93774414]
[230.46244812 587.81622314]
[216.65789795 581.93865967]
[203.19180298 575.32238770]
[190.10365295 567.98681641]
[177.43183899 559.95336914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 127]
[32 126]
[33 125]
[34 124]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
