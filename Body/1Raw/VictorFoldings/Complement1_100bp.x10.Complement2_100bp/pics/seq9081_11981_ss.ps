%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[74.38768005 781.52587891]
[59.39206696 781.03527832]
[44.44440460 779.74041748]
[29.58779907 777.64514160]
[14.86507607 774.75543213]
[0.31868961 771.07958984]
[-14.00942039 766.62829590]
[-28.07793999 761.41430664]
[-41.84630966 755.45263672]
[-55.27482986 748.76055908]
[-68.32477570 741.35736084]
[-80.95853424 733.26428223]
[-93.13967133 724.50476074]
[-104.83306122 715.10406494]
[-116.00499725 705.08923340]
[-126.62326050 694.48913574]
[-136.65724182 683.33441162]
[-146.07800293 671.65716553]
[-154.85839844 659.49108887]
[-162.97308350 646.87121582]
[-170.39868164 633.83398438]
[-177.11378479 620.41693115]
[-183.09901428 606.65881348]
[-188.33714294 592.59924316]
[-192.81303406 578.27880859]
[-196.51379395 563.73876953]
[-199.42877197 549.02099609]
[-201.54953003 534.16802979]
[-202.86997986 519.22259521]
[-203.38630676 504.22784424]
[-203.09701538 489.22702026]
[-202.00294495 474.26330566]
[-200.10723877 459.37991333]
[-197.41539001 444.61975098]
[-193.93513489 430.02532959]
[-189.67651367 415.63876343]
[-184.65182495 401.50152588]
[-178.87551880 387.65438843]
[-172.36428833 374.13723755]
[-165.13687134 360.98910522]
[-157.21414185 348.24786377]
[-148.61891174 335.95025635]
[-139.37597656 324.13174438]
[-129.51199341 312.82638550]
[-119.05540466 302.06680298]
[-108.03633881 291.88403320]
[-96.48657990 282.30737305]
[-84.43943787 273.36447144]
[-71.92962646 265.08114624]
[-58.99323273 257.48123169]
[-45.66754913 250.58663940]
[-31.99099731 244.41728210]
[-18.00301170 238.99093628]
[-3.74392271 234.32324219]
[10.74515724 230.42764282]
[25.42245102 227.31539917]
[40.24563980 224.99546814]
[55.17198944 223.47454834]
[70.15845490 222.75700378]
[85.16183472 222.84494019]
[86.05464935 207.87152100]
[86.94746399 192.89811707]
[79.98142242 179.73287964]
[88.52640533 166.41770935]
[89.41921997 151.44430542]
[75.35882568 146.38191223]
[63.29335022 137.56449890]
[54.19960785 125.70589447]
[48.81380844 111.76618195]
[47.57198715 96.87388611]
[50.57467651 82.23468018]
[57.57878494 69.03372955]
[68.01726532 58.33977890]
[81.04503632 51.01858902]
[95.60737610 47.66287994]
[96.50019073 32.68947601]
[97.39300537 17.71607018]
[98.28582001 2.74266338]
[98.73242950 -12.25068665]
[98.73242950 -27.25068665]
[98.73242950 -42.25068665]
[98.73242950 -57.25068665]
[98.73242950 -72.25068665]
[98.73242950 -87.25068665]
[84.57392883 -90.57634735]
[71.52043152 -96.97250366]
[60.22796249 -106.11396027]
[51.26321411 -117.53767395]
[45.07510376 -130.66615295]
[41.97229385 -144.83668518]
[42.10779572 -159.33479309]
[45.47143173 -173.43023682]
[51.89051819 -186.41380310]
[61.03871536 -197.63301086]
[72.45263672 -206.52485657]
[85.55530548 -212.64410400]
[99.68531799 -215.68557739]
[99.90864563 -230.68391418]
[100.13197327 -245.68225098]
[86.29574585 -252.04454041]
[76.24838257 -263.48876953]
[71.73063660 -278.03213501]
[73.52524567 -293.15493774]
[81.32128143 -306.23706055]
[93.76802826 -315.01193237]
[108.70902252 -317.95925903]
[123.55563354 -314.56838989]
[135.73561096 -305.42681885]
[143.13868713 -292.11840820]
[144.48223877 -276.94885254]
[139.53347778 -262.54644775]
[129.14982605 -251.40643311]
[115.13031006 -245.45892334]
[114.90698242 -230.46058655]
[114.68365479 -215.46224976]
[129.69644165 -211.63044739]
[143.36727905 -204.31983948]
[154.90293884 -193.94987488]
[163.63294983 -181.11767578]
[169.04856873 -166.56361389]
[170.83244324 -151.12863159]
[168.87715149 -135.70564270]
[163.29176331 -121.18782806]
[154.39564514 -108.41699219]
[142.70030212 -98.13468933]
[128.87989807 -90.93920135]
[113.73242950 -87.25068665]
[113.73242950 -72.25068665]
[113.73242950 -57.25068665]
[113.73242950 -42.25068665]
[113.73242950 -27.25068665]
[113.73242950 -12.25068665]
[115.61695862 -10.17543030]
[116.79299927 -7.22864628]
[116.92448425 -3.67644763]
[115.77779388 0.09841962]
[113.25922394 3.63547945]
[112.36640930 18.60888481]
[111.47359467 33.58229065]
[110.58078003 48.55569839]
[124.64117432 53.61808777]
[136.70664978 62.43550491]
[145.80039978 74.29410553]
[151.18618774 88.23381805]
[152.42800903 103.12611389]
[149.42532349 117.76531982]
[142.42121887 130.96626282]
[131.98272705 141.66021729]
[118.95496368 148.98141479]
[104.39262390 152.33711243]
[103.49980927 167.31053162]
[110.40199280 181.54676819]
[101.92086792 193.79093933]
[101.02805328 208.76434326]
[100.13523865 223.73774719]
[115.04275513 225.43331909]
[129.83776855 227.92662048]
[144.47763062 231.21047974]
[158.92010498 235.27543640]
[173.12356567 240.10974121]
[187.04707336 245.69949341]
[200.65046692 252.02853394]
[213.89451599 259.07864380]
[226.74104309 266.82949829]
[239.15303040 275.25872803]
[251.09465027 284.34204102]
[262.53149414 294.05325317]
[273.43060303 304.36434937]
[283.76049805 315.24560547]
[293.49145508 326.66564941]
[302.59539795 338.59155273]
[311.04608154 350.98895264]
[318.81909180 363.82208252]
[325.89208984 377.05392456]
[332.24462891 390.64636230]
[337.85842896 404.56018066]
[342.71728516 418.75527954]
[346.80715942 433.19070435]
[350.11633301 447.82485962]
[352.63519287 462.61553955]
[354.35650635 477.52011108]
[355.27532959 492.49560547]
[355.38897705 507.49880981]
[354.69714355 522.48645020]
[353.20181274 537.41540527]
[350.90731812 552.24255371]
[347.82025146 566.92517090]
[343.94952393 581.42089844]
[339.30627441 595.68798828]
[333.90393066 609.68524170]
[327.75802612 623.37237549]
[320.88632202 636.70983887]
[313.30859375 649.65924072]
[305.04672241 662.18322754]
[296.12451172 674.24572754]
[286.56768799 685.81188965]
[276.40377808 696.84838867]
[265.66217041 707.32342529]
[254.37374878 717.20678711]
[242.57109070 726.46997070]
[230.28825378 735.08624268]
[217.56060791 743.03082275]
[204.42488098 750.28076172]
[190.91894531 756.81518555]
[177.08172607 762.61523438]
[162.95312500 767.66418457]
[148.57388306 771.94744873]
[133.98545837 775.45275879]
[119.22991943 778.16992188]
[104.34979248 780.09112549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 155]
[61 154]
[62 153]
[64 151]
[65 150]
[75 140]
[76 139]
[77 138]
[78 137]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
