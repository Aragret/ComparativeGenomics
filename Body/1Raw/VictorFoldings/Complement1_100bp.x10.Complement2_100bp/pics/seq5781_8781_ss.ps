%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[157.77160645 710.31182861]
[144.68109131 702.97875977]
[132.05255127 694.87591553]
[119.93119812 686.03234863]
[108.36042786 676.47973633]
[97.38166046 666.25219727]
[87.03418732 655.38641357]
[77.35505676 643.92126465]
[68.37891388 631.89776611]
[60.13789749 619.35900879]
[52.66150665 606.34979248]
[45.97650146 592.91674805]
[40.10681534 579.10797119]
[35.07345963 564.97290039]
[30.89445305 550.56207275]
[27.58475494 535.92718506]
[25.15621185 521.12048340]
[23.61752129 506.19506836]
[22.97418785 491.20434570]
[23.22851562 476.20199585]
[24.37959480 461.24169922]
[26.42330551 446.37701416]
[29.35232925 431.66116333]
[33.15618134 417.14682007]
[37.82124710 402.88592529]
[43.33082199 388.92956543]
[49.66519165 375.32766724]
[56.80167007 362.12896729]
[64.71472168 349.38064575]
[73.37600708 337.12841797]
[82.75453186 325.41607666]
[92.81671143 314.28558350]
[103.52654266 303.77676392]
[114.84566498 293.92724609]
[126.73358154 284.77230835]
[139.14772034 276.34469604]
[152.04365540 268.67459106]
[165.37519836 261.78942871]
[153.14703369 253.28524780]
[154.63365173 237.53404236]
[148.55981445 223.81877136]
[133.84614563 214.25453186]
[135.95956421 195.96205139]
[129.68218994 182.33872986]
[123.40483856 168.71542358]
[117.12747192 155.09210205]
[110.85011292 141.46878052]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[75.52657318 64.80857086]
[68.74657440 51.42829895]
[61.47334671 38.30960464]
[54.20011902 25.19091034]
[46.92689133 12.07221699]
[39.65365982 -1.04647684]
[39.48190308 13.95253944]
[33.97119141 27.90359879]
[23.84655762 38.97120285]
[10.44007111 45.69921112]
[-4.48441553 47.20244217]
[-18.96332932 43.28312302]
[-31.09171867 34.45690155]
[-39.27388763 21.88502312]
[-42.43332672 7.22153330]
[-40.15436554 -7.60433340]
[-32.73683167 -20.64197922]
[-21.15663528 -30.17607880]
[-6.93734789 -34.95225525]
[8.05023861 -34.34212112]
[21.83424950 -28.42595291]
[32.60253906 -17.98018074]
[28.41552734 -32.38396454]
[24.22851562 -46.78774643]
[14.82659531 -35.09997940]
[-0.17313908 -35.01074982]
[-9.71344185 -46.58583832]
[-6.76155615 -61.29251480]
[6.50649738 -68.28956604]
[20.30890846 -62.42026520]
[17.20479774 -77.09556580]
[14.10068798 -91.77087402]
[10.99657822 -106.44617462]
[7.89246750 -121.12147522]
[-7.17475462 -121.61366272]
[-21.68617249 -125.69804382]
[-34.79811096 -133.13716125]
[-45.74826050 -143.49851990]
[-53.89999008 -156.17971802]
[-58.77937317 -170.44348145]
[-60.10272598 -185.46054077]
[-57.79310989 -200.35783386]
[-51.98480606 -214.26922607]
[-43.01549911 -226.38595581]
[-31.40665627 -236.00355530]
[-17.83319664 -242.56286621]
[-3.08426404 -245.68255615]
[11.98265743 -245.18122864]
[26.49159622 -241.08805847]
[39.59902191 -233.64097595]
[50.54288483 -223.27299500]
[58.68692780 -210.58685303]
[63.55766296 -196.32012939]
[64.87191010 -181.30227661]
[62.55326462 -166.40638733]
[56.73652649 -152.49850464]
[47.75987625 -140.38722229]
[36.14520264 -130.77667236]
[22.56777000 -124.22558594]
[25.67188072 -109.55028534]
[28.77598953 -94.87498474]
[31.88010025 -80.19967651]
[34.98421097 -65.52437592]
[38.63229752 -50.97475433]
[42.81930923 -36.57097244]
[47.00632095 -22.16719246]
[52.77235413 -8.31970596]
[60.04558182 4.79898787]
[67.31880951 17.91768265]
[74.59204102 31.03637505]
[81.86527252 44.15507126]
[88.44503021 30.67520523]
[103.05247498 27.26599312]
[114.91952515 36.44057846]
[115.29824829 51.43579483]
[103.90945435 61.19773102]
[89.14988708 58.53121185]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.47342682 135.19142151]
[130.75079346 148.81474304]
[137.02815247 162.43806458]
[143.30551147 176.06137085]
[149.58287048 189.68469238]
[161.39056396 194.87518311]
[166.33853149 206.35130310]
[162.27508545 217.74493408]
[168.34892273 231.46020508]
[181.01152039 240.94540405]
[179.09046936 255.71560669]
[193.14860535 250.47117615]
[207.49523926 246.07685852]
[222.07897949 242.54840088]
[236.84762573 239.89843750]
[251.74833679 238.13644409]
[266.72772217 237.26872253]
[281.73223877 237.29838562]
[296.70806885 238.22534180]
[311.60168457 240.04624939]
[326.35977173 242.75460815]
[340.92944336 246.34071350]
[355.25857544 250.79173279]
[369.29586792 256.09170532]
[382.99105835 262.22171021]
[396.29516602 269.15975952]
[409.16052246 276.88104248]
[421.54107666 285.35791016]
[433.39251709 294.56002808]
[444.67242432 304.45440674]
[455.34042358 315.00570679]
[465.35830688 326.17608643]
[474.69021606 337.92559814]
[483.30276489 350.21215820]
[491.16510010 362.99179077]
[498.24908447 376.21875000]
[504.52935791 389.84570312]
[509.98345947 403.82385254]
[514.59185791 418.10314941]
[518.33801270 432.63247681]
[521.20855713 447.35986328]
[523.19317627 462.23254395]
[524.28479004 477.19729614]
[524.47955322 492.20053101]
[523.77667236 507.18859863]
[522.17864990 522.10778809]
[519.69134521 536.90466309]
[516.32348633 551.52636719]
[512.08728027 565.92047119]
[506.99780273 580.03546143]
[501.07330322 593.82080078]
[494.33499146 607.22717285]
[486.80697632 620.20654297]
[478.51620483 632.71246338]
[469.49237061 644.70019531]
[459.76776123 656.12683105]
[449.37722778 666.95141602]
[438.35791016 677.13525391]
[426.74926758 686.64184570]
[414.59286499 695.43713379]
[401.93225098 703.48974609]
[388.81271362 710.77075195]
[375.28118896 717.25408936]
[361.38619995 722.91662598]
[347.17739868 727.73803711]
[332.70571899 731.70104980]
[318.02291870 734.79150391]
[303.18157959 736.99835205]
[288.23480225 738.31365967]
[273.23614502 738.73272705]
[258.23928833 738.25408936]
[243.29786682 736.87939453]
[228.46540833 734.61364746]
[213.79499817 731.46484375]
[199.33917236 727.44439697]
[185.14964294 722.56652832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 145]
[40 143]
[41 142]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[51 131]
[52 130]
[53 129]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[74 118]
[75 117]
[76 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
