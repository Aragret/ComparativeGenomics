%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[21.20439720 571.09564209]
[9.89560604 580.99804688]
[-2.82310033 589.00933838]
[-16.63851166 594.93225098]
[-31.21040916 598.62091064]
[-46.17995071 599.98449707]
[-61.17849350 598.98944092]
[-75.83668518 595.66015625]
[-89.79356384 590.07879639]
[-102.70541382 582.38262939]
[-114.25428009 572.76129150]
[-124.15575409 561.45166016]
[-132.16601562 548.73229980]
[-138.08778381 534.91644287]
[-141.77525330 520.34423828]
[-143.13760376 505.37457275]
[-142.14128113 490.37609863]
[-138.81082153 475.71817017]
[-133.22827148 461.76177979]
[-125.53105927 448.85055542]
[-115.90876770 437.30249023]
[-104.59834290 427.40194702]
[-91.87831116 419.39273071]
[-78.06192017 413.47210693]
[-63.48941803 409.78582764]
[-48.51965332 408.42471313]
[-33.52127457 409.42227173]
[-30.19901276 394.79479980]
[-26.87675285 380.16735840]
[-23.55449486 365.53988647]
[-20.23223495 350.91244507]
[-16.90997505 336.28497314]
[-13.58771515 321.65750122]
[-21.71811676 309.23043823]
[-18.55724716 294.34878540]
[-5.46746206 285.90512085]
[-2.14520288 271.27767944]
[-11.83188248 282.73052979]
[-24.43152428 290.86990356]
[-38.85412979 294.99157715]
[-53.85200500 294.73907471]
[-68.12767792 290.13415527]
[-80.44616699 281.57525635]
[-89.74179077 269.80276489]
[-95.21039581 255.83515930]
[-96.37888336 240.88073730]
[-93.14617157 226.23323059]
[-85.79191589 213.15977478]
[-74.95234680 202.79138184]
[-61.56518555 196.02500916]
[-46.78855896 193.44599915]
[-31.90078735 195.27748108]
[-18.18981934 201.36102295]
[-6.84178734 211.17030334]
[1.16159034 223.85675049]
[5.12794113 238.32284546]
[4.71474934 253.31367493]
[11.98797894 240.19499207]
[19.26120758 227.07629395]
[26.53443718 213.95759583]
[17.97406769 203.04025269]
[14.20941925 189.64251709]
[15.84066486 175.77824402]
[22.65431023 163.54447937]
[33.65048218 154.80436707]
[47.18953323 150.90328979]
[61.23649597 152.46199036]
[68.70423889 139.45303345]
[76.17198181 126.44408417]
[83.63971710 113.43513489]
[78.96582794 97.60723114]
[87.07534027 83.23352051]
[103.03974152 79.04954529]
[110.31297302 65.93084717]
[117.58620453 52.81215668]
[124.16622925 39.33242035]
[130.03518677 25.52824402]
[135.90415955 11.72406769]
[141.77311707 -2.08010912]
[146.59910583 -16.28256416]
[150.35540771 -30.80462456]
[154.11170959 -45.32668304]
[157.86801147 -59.84874344]
[161.62431335 -74.37080383]
[165.38061523 -88.89286041]
[168.81167603 -103.49518585]
[171.91578674 -118.17048645]
[175.01989746 -132.84579468]
[168.90747070 -150.21586609]
[181.13739014 -162.80142212]
[184.02267456 -177.52130127]
[186.90794373 -192.24119568]
[172.77204895 -197.34777832]
[159.58139038 -204.55242920]
[147.64518738 -213.68627930]
[137.24322510 -224.53521729]
[128.61933899 -236.84494019]
[121.97568512 -250.32685852]
[117.46801758 -264.66497803]
[115.20198059 -279.52316284]
[115.23071289 -294.55310059]
[117.55352783 -309.40252686]
[122.11597443 -323.72329712]
[128.81111145 -337.17971802]
[137.48199463 -349.45639038]
[147.92535400 -360.26547241]
[159.89639282 -369.35363770]
[173.11450195 -376.50781250]
[187.26980591 -381.56030273]
[202.03050232 -384.39266968]
[217.05056763 -384.93853760]
[231.97792053 -383.18508911]
[246.46263123 -379.17343140]
[260.16516113 -372.99758911]
[272.76431274 -364.80236816]
[283.96475220 -354.77984619]
[293.50390625 -343.16497803]
[301.15814209 -330.23004150]
[306.74807739 -316.27822876]
[310.14266968 -301.63659668]
[311.26229858 -286.64837646]
[310.08078003 -271.66488647]
[306.62576294 -257.03741455]
[300.97827148 -243.10879517]
[293.27069092 -230.20556641]
[283.68365479 -218.63018799]
[272.44195557 -208.65400696]
[259.80905151 -200.51086426]
[246.08114624 -194.39167786]
[231.57998657 -190.43984985]
[216.64552307 -188.74804688]
[201.62783813 -189.35592651]
[198.74255371 -174.63603210]
[195.85728455 -159.91613770]
[202.34332275 -149.70547485]
[200.06002808 -137.41847229]
[189.69519043 -129.74168396]
[186.59109497 -115.06637573]
[183.48698425 -100.39107513]
[185.09349060 -97.25237274]
[185.25956726 -93.17960358]
[183.56274414 -88.85825348]
[179.90267944 -85.13655853]
[176.14637756 -70.61450195]
[172.39007568 -56.09244156]
[168.63377380 -41.57038116]
[164.87747192 -27.04832268]
[161.12117004 -12.52626419]
[172.72152710 -22.03582382]
[187.50613403 -24.56863976]
[201.61035156 -19.46264076]
[211.34735107 -8.05251980]
[214.17190552 6.67914152]
[209.34570312 20.88152504]
[198.13027954 30.84215927]
[183.45732117 33.95735931]
[169.16232300 29.41282082]
[158.98193359 18.39647293]
[155.57728577 3.78885174]
[149.70832825 17.59302902]
[143.83937073 31.39720535]
[137.97041321 45.20138168]
[151.84834290 39.50902939]
[166.17616272 43.94903183]
[174.40338135 56.49147797]
[172.76861572 71.40213013]
[162.01927185 81.86403656]
[147.06979370 83.09416199]
[134.75489807 74.53010559]
[130.70489502 60.08538437]
[123.43167114 73.20407867]
[116.15843964 86.32277679]
[121.07562256 98.00502014]
[118.43777466 110.40241241]
[109.19049072 119.07083130]
[96.64867401 120.90287781]
[89.18093109 133.91183472]
[81.71318817 146.92077637]
[74.24544525 159.92973328]
[83.55191040 173.27603149]
[86.09734344 189.28741455]
[81.42228699 204.75041199]
[70.51125336 216.58396912]
[55.58598709 222.45338440]
[39.65313339 221.23083496]
[32.37990189 234.34951782]
[25.10667229 247.46821594]
[17.83344269 260.58691406]
[12.48225784 274.59994507]
[9.15999794 289.22738647]
[17.31816483 302.49697876]
[13.74054813 317.28399658]
[1.03974462 324.97976685]
[-2.28251481 339.60723877]
[-5.60477448 354.23468018]
[-8.92703438 368.86215210]
[-12.24929333 383.48962402]
[-15.57155323 398.11706543]
[-18.89381218 412.74453735]
[-4.93601847 418.32363892]
[7.97710371 426.01763916]
[19.52755737 435.63708496]
[29.43089867 446.94506836]
[37.44325256 459.66311646]
[43.36730957 473.47802734]
[47.05717850 488.04962158]
[48.42199707 503.01904297]
[47.42815018 518.01770020]
[44.10012054 532.67614746]
[38.51985931 546.63348389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 199]
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[36 190]
[37 189]
[57 188]
[58 187]
[59 186]
[60 185]
[67 179]
[68 178]
[69 177]
[70 176]
[73 172]
[74 171]
[75 170]
[76 162]
[77 161]
[78 160]
[79 159]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 139]
[87 138]
[88 137]
[90 134]
[91 133]
[92 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
