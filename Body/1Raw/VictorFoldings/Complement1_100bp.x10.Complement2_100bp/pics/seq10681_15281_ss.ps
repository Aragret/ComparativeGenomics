%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[251.56312561 360.23092651]
[262.33657837 349.76251221]
[248.52857971 344.17788696]
[246.48962402 328.48861694]
[237.52893066 316.45922852]
[228.56823730 304.42984009]
[219.60754395 292.40048218]
[210.64685059 280.37109375]
[207.89581299 279.83261108]
[205.19232178 278.17193604]
[202.96487427 275.40179443]
[201.62944031 271.68948364]
[201.53625488 267.34835815]
[193.30744934 254.80696106]
[185.07864380 242.26556396]
[170.48828125 239.49841309]
[161.96444702 226.89686584]
[164.96582031 211.61192322]
[156.73701477 199.07052612]
[148.50820923 186.52912903]
[140.27940369 173.98773193]
[132.05059814 161.44631958]
[123.82178497 148.90492249]
[107.74556732 141.86772156]
[106.84814453 123.47543335]
[98.43352509 111.05793762]
[89.92669678 98.70343018]
[81.32813263 86.41259003]
[72.72956848 74.12174988]
[64.13100433 61.83091354]
[48.82220078 58.95372009]
[40.27712250 46.36657333]
[43.11443329 31.78969765]
[28.86379433 24.91729736]
[27.90790367 10.05339622]
[24.23730659 24.59735489]
[11.42889786 32.40406036]
[-3.18008661 29.00147629]
[-11.22095585 16.33875847]
[-8.08753586 1.66968608]
[4.42520952 -6.60262966]
[19.14861679 -3.73995185]
[5.56793022 -11.85632706]
[5.94194365 -26.74623489]
[-1.52579749 -39.75518799]
[-8.99353886 -52.76414108]
[-21.21722031 -56.88050079]
[-27.16930199 -67.86943054]
[-24.13854599 -79.58015442]
[-31.41177559 -92.69884491]
[-38.68500519 -105.81754303]
[-52.36725235 -99.64861298]
[-66.51219940 -94.63063812]
[-81.02320862 -90.79788971]
[-95.80117035 -88.17655182]
[-110.74512482 -86.78453064]
[-125.75299835 -86.63133240]
[-140.72225952 -87.71800995]
[-155.55064392 -90.03713226]
[-170.13687134 -93.57286835]
[-184.38130188 -98.30105591]
[-198.18663025 -104.18939972]
[-211.45854187 -111.19766998]
[-224.10638428 -119.27799988]
[-236.04374695 -128.37519836]
[-247.18908691 -138.42709351]
[-257.46627808 -149.36505127]
[-266.80511475 -161.11433411]
[-275.14178467 -173.59469604]
[-282.41937256 -186.72087097]
[-288.58813477 -200.40318298]
[-293.60595703 -214.54818726]
[-297.43853760 -229.05924988]
[-300.05969238 -243.83723450]
[-301.45153809 -258.78121948]
[-301.60455322 -273.78909302]
[-300.51770020 -288.75833130]
[-298.19839478 -303.58670044]
[-294.66247559 -318.17288208]
[-289.93411255 -332.41726685]
[-284.04562378 -346.22250366]
[-277.03717041 -359.49432373]
[-268.95669556 -372.14208984]
[-259.85937500 -384.07934570]
[-249.80732727 -395.22454834]
[-238.86926270 -405.50161743]
[-227.11985779 -414.84030151]
[-214.63940430 -423.17684937]
[-201.51315308 -430.45428467]
[-187.83074951 -436.62286377]
[-173.68568420 -441.64050293]
[-159.17457581 -445.47290039]
[-144.39656067 -448.09390259]
[-129.45257568 -449.48556519]
[-114.44470215 -449.63839722]
[-99.47547150 -448.55136108]
[-84.64713287 -446.23190308]
[-70.06098938 -442.69580078]
[-55.81666946 -437.96728516]
[-42.01148605 -432.07861328]
[-28.73974037 -425.07000732]
[-16.09209633 -416.98937988]
[-4.15494823 -407.89190674]
[6.99015808 -397.83975220]
[17.26708984 -386.90155029]
[26.60564423 -375.15203857]
[34.94202805 -362.67147827]
[42.21929550 -349.54513550]
[48.38773346 -335.86267090]
[53.40520477 -321.71755981]
[57.23743439 -307.20639038]
[59.85824203 -292.42834473]
[61.24972916 -277.48434448]
[61.40238953 -262.47647095]
[60.31517792 -247.50724792]
[57.99552155 -232.67893982]
[54.45926666 -218.09283447]
[49.73057175 -203.84857178]
[43.84173584 -190.04345703]
[36.83298492 -176.77178955]
[28.75220299 -164.12425232]
[19.65458679 -152.18721008]
[9.60228348 -141.04222107]
[-1.33603835 -130.76541138]
[-13.08565807 -121.42700195]
[-25.56631088 -113.09076691]
[-18.29308128 -99.97207642]
[-11.01985264 -86.85337830]
[4.48843002 -78.63996887]
[4.01541376 -60.23188019]
[11.48315525 -47.22293091]
[18.95089531 -34.21397781]
[31.99743843 -27.02808952]
[32.15756989 -11.20769310]
[40.19874191 1.45483196]
[53.83435440 7.44810963]
[55.40526962 23.19113350]
[70.07154083 25.52265167]
[78.96679688 37.86481857]
[76.42184448 53.23234940]
[85.02040863 65.52318573]
[93.61897278 77.81402588]
[102.21753693 90.10486603]
[109.05133057 94.37942505]
[110.85102081 102.64331818]
[119.26564026 115.06081390]
[131.76162720 118.25661469]
[138.51454163 128.77241516]
[136.36318970 140.67611694]
[144.59199524 153.21751404]
[152.82080078 165.75891113]
[161.04960632 178.30032349]
[169.27841187 190.84172058]
[177.50721741 203.38311768]
[192.72357178 206.71484375]
[200.89010620 219.55082703]
[197.62004089 234.03675842]
[205.84884644 246.57815552]
[214.07765198 259.11956787]
[222.67622375 271.41040039]
[231.63691711 283.43978882]
[240.59761047 295.46914673]
[249.55830383 307.49853516]
[258.51901245 319.52789307]
[272.96795654 325.97296143]
[274.36596680 340.80181885]
[287.48040771 333.47610474]
[301.43887329 327.92486572]
[316.00253296 324.24316406]
[330.92218018 322.49392700]
[345.94247437 322.70715332]
[360.80642700 324.87911987]
[375.25973511 328.97271729]
[389.05502319 334.91787720]
[401.95626831 342.61285400]
[413.74270630 351.92602539]
[424.21264648 362.69799805]
[433.18695068 374.74444580]
[440.51205444 387.85925293]
[446.06259155 401.81799316]
[449.74362183 416.38180542]
[451.49212646 431.30151367]
[451.27822876 446.32180786]
[449.10552979 461.18566895]
[445.01123047 475.63876343]
[439.06542969 489.43377686]
[431.36981201 502.33465576]
[422.05609131 514.12066650]
[411.28363037 524.59008789]
[399.23675537 533.56378174]
[386.12161255 540.88830566]
[372.16259766 546.43817139]
[357.59860229 550.11853027]
[342.67880249 551.86633301]
[327.65853882 551.65167236]
[312.79476929 549.47827148]
[298.34185791 545.38330078]
[284.54714966 539.43682861]
[271.64663696 531.74060059]
[259.86108398 522.42633057]
[249.39216614 511.65338135]
[240.41900635 499.60607910]
[233.09515381 486.49057007]
[227.54594421 472.53131104]
[223.86630249 457.96713257]
[222.11920166 443.04724121]
[222.33454895 428.02697754]
[224.50865173 413.16333008]
[228.60430908 398.71060181]
[234.55143738 384.91616821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[13 159]
[14 158]
[15 157]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[25 146]
[26 145]
[27 143]
[28 142]
[29 141]
[30 140]
[33 137]
[35 135]
[42 134]
[44 132]
[45 131]
[46 130]
[49 128]
[50 127]
[51 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
