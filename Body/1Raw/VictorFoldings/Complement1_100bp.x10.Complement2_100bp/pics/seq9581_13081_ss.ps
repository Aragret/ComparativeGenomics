%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[131.43553162 717.27734375]
[117.92485046 710.74987793]
[104.84611511 703.39508057]
[92.24993134 695.24139404]
[80.18502808 686.32037354]
[68.69808197 676.66650391]
[57.83353424 666.31719971]
[47.63341522 655.31250000]
[38.13719177 643.69488525]
[29.38160133 631.50939941]
[21.40051651 618.80316162]
[14.22481537 605.62530518]
[7.88226128 592.02685547]
[2.39739132 578.06036377]
[-2.20857477 563.77990723]
[-5.91781712 549.24066162]
[-8.71598434 534.49902344]
[-10.59225273 519.61193848]
[-11.53936195 504.63693237]
[-11.55364799 489.63208008]
[-10.63505554 474.65533447]
[-8.78713894 459.76467896]
[-6.01704693 445.01770020]
[-2.33549666 430.47146606]
[2.24326849 416.18228149]
[7.70153427 402.20535278]
[14.01818275 388.59484863]
[21.16877747 375.40335083]
[29.12565231 362.68191528]
[37.85802460 350.47976685]
[47.33210754 338.84414673]
[57.51125336 327.82000732]
[68.35607910 317.45001221]
[79.82461548 307.77432251]
[91.87251282 298.83035278]
[104.45314789 290.65267944]
[117.51785278 283.27297974]
[131.01608276 276.71978760]
[144.89559937 271.01843262]
[140.06961060 256.81597900]
[128.64891052 247.25477600]
[131.53485107 231.69900513]
[126.70884705 217.49655151]
[123.72467804 215.61848450]
[121.50190735 212.20172119]
[120.75382233 207.61982727]
[121.99989319 202.55087280]
[117.81288147 188.14709473]
[113.62586975 173.74330139]
[109.43885803 159.33952332]
[105.25184631 144.93574524]
[89.56021881 144.02061462]
[75.12874603 137.79185486]
[63.69943237 127.00132751]
[56.65186691 112.95153809]
[54.83675385 97.33840179]
[58.47319031 82.04653931]
[67.12222290 68.92179108]
[79.73986053 59.54842758]
[75.33885956 45.20858002]
[70.93786621 30.86873436]
[66.36586761 26.09292412]
[65.08442688 20.55623245]
[66.62617493 16.03604889]
[62.65407944 1.57152569]
[58.68198395 -12.89299774]
[54.60231781 -27.32755089]
[50.41530609 -41.73133469]
[46.12118149 -56.10354614]
[41.72018433 -70.44338989]
[37.31918716 -84.78324127]
[32.91819000 -99.12308502]
[28.51719093 -113.46293640]
[24.11619377 -127.80278015]
[19.71519470 -142.14262390]
[4.85162973 -139.92179871]
[-10.17691898 -139.94117737]
[-25.03470802 -142.20031738]
[-39.38980865 -146.64877319]
[-52.92152405 -153.18714905]
[-65.32755280 -161.66937256]
[-76.33073425 -171.90596008]
[-85.68525696 -183.66821289]
[-93.18212891 -196.69335938]
[-98.65388489 -210.69041443]
[-101.97826385 -225.34667969]
[-103.08101654 -240.33473206]
[-101.93749237 -255.31971741]
[-98.57324982 -269.96688843]
[-93.06343079 -283.94900513]
[-85.53114319 -296.95370483]
[-76.14466095 -308.69046021]
[-65.11366272 -318.89706421]
[-52.68460846 -327.34552002]
[-39.13515472 -333.84704590]
[-24.76800156 -338.25643921]
[-9.90412140 -340.47515869]
[5.12442493 -340.45364380]
[19.98189354 -338.19235229]
[34.33636093 -333.74188232]
[47.86714554 -327.20156860]
[60.27196121 -318.71759033]
[71.27368927 -308.47943115]
[80.62653351 -296.71585083]
[88.12155151 -283.68963623]
[93.59130859 -269.69180298]
[96.91360474 -255.03504944]
[98.01422119 -240.04684448]
[96.86856842 -225.06201172]
[93.50223541 -210.41532898]
[87.99042511 -196.43399048]
[80.45629120 -183.43035889]
[71.06813049 -171.69494629]
[60.03568268 -161.48989868]
[47.60542297 -153.04322815]
[34.05504227 -146.54362488]
[38.45603943 -132.20378113]
[42.85703659 -117.86392975]
[47.25803757 -103.52408600]
[51.65903473 -89.18423462]
[56.06003189 -74.84439087]
[60.46102905 -60.50454330]
[65.42868042 -55.03240967]
[64.81909180 -45.91834259]
[69.00610352 -31.51456261]
[73.89173126 -25.96907425]
[73.14650726 -16.86509514]
[77.11860657 -2.40057039]
[81.09069824 12.06395340]
[85.27770996 26.46773529]
[89.67871094 40.80758286]
[94.07971191 55.14743042]
[108.20969391 55.50950623]
[121.53833008 60.21428299]
[132.76461792 68.80252075]
[140.79277039 80.43593597]
[144.83915710 93.97898865]
[144.50881958 108.10974884]
[139.83398438 121.44892120]
[131.27098083 132.69447327]
[119.65563202 140.74873352]
[123.84264374 155.15251160]
[128.02964783 169.55628967]
[132.21665955 183.96008301]
[136.40367126 198.36386108]
[140.91130066 212.67054749]
[145.73730469 226.87300110]
[157.50318909 237.45007324]
[154.27206421 251.98999023]
[159.09805298 266.19244385]
[173.57774353 262.25732422]
[188.27406311 259.23001099]
[203.13017273 257.12222290]
[218.08857727 255.94210815]
[233.09140015 255.69424438]
[248.08062744 256.37957764]
[262.99826050 257.99548340]
[277.78656006 260.53567505]
[292.38833618 263.99032593]
[306.74707031 268.34609985]
[320.80725098 273.58612061]
[334.51446533 279.69012451]
[347.81567383 286.63449097]
[360.65942383 294.39236450]
[372.99603271 302.93374634]
[384.77774048 312.22555542]
[395.95901489 322.23184204]
[406.49655151 332.91390991]
[416.34960938 344.23043823]
[425.48004150 356.13766479]
[433.85256958 368.58947754]
[441.43475342 381.53768921]
[448.19726562 394.93228149]
[454.11398315 408.72137451]
[459.16198730 422.85162354]
[463.32174683 437.26837158]
[466.57717896 451.91586304]
[468.91567993 466.73739624]
[470.32821655 481.67565918]
[470.80929565 496.67282104]
[470.35705566 511.67089844]
[468.97329712 526.61181641]
[466.66333008 541.43780518]
[463.43609619 556.09155273]
[459.30407715 570.51629639]
[454.28329468 584.65625000]
[448.39312744 598.45666504]
[441.65637207 611.86425781]
[434.09912109 624.82708740]
[425.75057983 637.29498291]
[416.64306641 649.21972656]
[406.81179810 660.55517578]
[396.29483032 671.25750732]
[385.13287354 681.28533936]
[373.36904907 690.59979248]
[361.04891968 699.16485596]
[348.22012329 706.94744873]
[334.93228149 713.91741943]
[321.23684692 720.04779053]
[307.18679810 725.31481934]
[292.83645630 729.69824219]
[278.24133301 733.18096924]
[263.45794678 735.74963379]
[248.54347229 737.39422607]
[233.55558777 738.10839844]
[218.55230713 737.88940430]
[203.59165955 736.73809814]
[188.73153687 734.65893555]
[174.02940369 731.65991211]
[159.54217529 727.75262451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 150]
[40 149]
[42 147]
[43 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[59 132]
[60 131]
[61 130]
[64 129]
[65 128]
[66 127]
[67 125]
[68 124]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
