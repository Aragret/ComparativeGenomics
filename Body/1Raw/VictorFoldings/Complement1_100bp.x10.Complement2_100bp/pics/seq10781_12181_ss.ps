%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[-4.18177891 577.46850586]
[-14.97885227 587.88946533]
[-26.45481110 597.55767822]
[-38.55729294 606.42913818]
[-51.23107529 614.46337891]
[-64.41833496 621.62359619]
[-78.05889893 627.87725830]
[-92.09052277 633.19573975]
[-106.44918823 637.55480957]
[-121.06937408 640.93463135]
[-135.88438416 643.31970215]
[-150.82659912 644.69915771]
[-165.82786560 645.06671143]
[-180.81971741 644.42071533]
[-195.73374939 642.76409912]
[-210.50192261 640.10443115]
[-225.05685425 636.45379639]
[-239.33212280 631.82885742]
[-253.26258850 626.25079346]
[-266.78469849 619.74499512]
[-279.83676147 612.34118652]
[-292.35922241 604.07312012]
[-304.29492188 594.97845459]
[-315.58941650 585.09881592]
[-326.19116211 574.47924805]
[-336.05178833 563.16815186]
[-345.12631226 551.21716309]
[-353.37332153 538.68084717]
[-360.75518799 525.61633301]
[-367.23825073 512.08331299]
[-372.79287720 498.14346313]
[-377.39376831 483.86044312]
[-381.01992798 469.29940796]
[-383.65475464 454.52676392]
[-385.28631592 439.60995483]
[-385.90710449 424.61706543]
[-385.51428223 409.61642456]
[-384.10971069 394.67654419]
[-381.69970703 379.86557007]
[-378.29534912 365.25109863]
[-373.91210938 350.89978027]
[-368.57000732 336.87710571]
[-362.29342651 323.24710083]
[-355.11102295 310.07189941]
[-347.05554199 297.41165161]
[-338.16372681 285.32409668]
[-328.47616577 273.86441040]
[-318.03707886 263.08486938]
[-306.89407349 253.03468323]
[-295.09802246 243.75968933]
[-282.70269775 235.30220032]
[-269.76467896 227.70080566]
[-256.34304810 220.99021912]
[-242.49897766 215.20101929]
[-228.29565430 210.35964966]
[-213.79791260 206.48818970]
[-199.07186890 203.60429382]
[-184.18473816 201.72114563]
[-169.20443726 200.84732056]
[-154.19932556 200.98681641]
[-139.23786926 202.13897705]
[-124.38831329 204.29856873]
[-109.71843719 207.45571899]
[-95.29516602 211.59603882]
[-81.18431091 216.70062256]
[-67.45026398 222.74618530]
[-54.15568161 229.70513916]
[-41.36122894 237.54573059]
[-29.12528801 246.23219299]
[-19.63638878 234.61492920]
[-10.14749050 222.99766541]
[-0.65859246 211.38040161]
[-2.40386415 196.63287354]
[7.05373573 184.71615601]
[22.53413391 182.98553467]
[32.02303314 171.36827087]
[41.51193237 159.75100708]
[51.00083160 148.13374329]
[60.48972702 136.51647949]
[69.97863007 124.89922333]
[79.46752167 113.28195953]
[88.95642090 101.66469574]
[98.35857391 89.97711945]
[107.67345428 78.21986389]
[116.98834229 66.46261597]
[119.49351501 50.84100342]
[133.46166992 45.66995621]
[122.43706512 35.48784637]
[112.21409607 24.50111580]
[102.85131836 12.77269650]
[94.40237427 0.36976752]
[86.91564178 -12.63662720]
[80.43402100 -26.17198563]
[74.99462891 -40.15877914]
[70.62862396 -54.51689148]
[67.36102295 -69.16407776]
[65.21052551 -84.01644897]
[64.18946838 -98.98891449]
[64.30368042 -113.99572754]
[65.55252838 -128.95091248]
[67.92884064 -143.76882935]
[71.41902161 -158.36457825]
[76.00306702 -172.65457153]
[81.65472412 -186.55696106]
[88.34162140 -199.99209595]
[96.02545166 -212.88302612]
[104.66221619 -225.15591431]
[114.20242310 -236.74046326]
[124.59143829 -247.57031250]
[135.76976013 -257.58343506]
[147.67333984 -266.72247314]
[160.23402405 -274.93505859]
[173.37983704 -282.17419434]
[187.03547668 -288.39840698]
[201.12275696 -293.57199097]
[215.56095886 -297.66537476]
[230.26737976 -300.65505981]
[245.15780640 -302.52395630]
[260.14691162 -303.26138306]
[275.14889526 -302.86303711]
[290.07775879 -301.33126831]
[304.84802246 -298.67483521]
[319.37506104 -294.90893555]
[333.57571411 -290.05514526]
[347.36859131 -284.14129639]
[360.67471313 -277.20120239]
[373.41784668 -269.27468872]
[385.52502441 -260.40710449]
[396.92684937 -250.64927673]
[407.55807495 -240.05706787]
[417.35775757 -228.69117737]
[426.26977539 -216.61668396]
[434.24310303 -203.90277100]
[441.23202515 -190.62225342]
[447.19656372 -176.85121155]
[452.10250854 -162.66850281]
[455.92178345 -148.15539551]
[458.63250732 -133.39498901]
[460.21914673 -118.47186279]
[460.67263794 -103.47146606]
[459.99032593 -88.47974396]
[458.17617798 -73.58255005]
[455.24057007 -58.86523056]
[451.20028687 -44.41207886]
[446.07852173 -30.30588341]
[439.90457153 -16.62744331]
[432.71380615 -3.45510864]
[424.54742432 9.13566971]
[415.45220947 21.07277107]
[405.48025513 32.28782272]
[394.68865967 42.71658325]
[383.13925171 52.29931259]
[370.89822388 60.98113251]
[358.03561401 68.71230316]
[344.62515259 75.44853973]
[330.74365234 81.15126801]
[316.47061157 85.78781128]
[301.88778687 89.33161926]
[287.07870483 91.76239777]
[272.12820435 93.06620789]
[257.12191772 93.23558807]
[242.14578247 92.26957703]
[227.28561401 90.17369080]
[212.62651062 86.95995331]
[198.25245667 82.64675903]
[184.24575806 77.25882721]
[170.68666077 70.82700348]
[157.65283203 63.38813782]
[145.21893311 54.98484039]
[143.38002014 69.76549530]
[128.74559021 75.77749634]
[119.43070984 87.53474426]
[110.11582947 99.29199982]
[107.97650909 107.06347656]
[100.57368469 111.15359497]
[91.08478546 122.77085876]
[81.59588623 134.38812256]
[72.10699463 146.00538635]
[62.61809158 157.62265015]
[53.12919617 169.23991394]
[43.64029694 180.85717773]
[34.15139771 192.47444153]
[35.54631805 207.98869324]
[25.75773430 219.63507080]
[10.95867062 220.86930847]
[1.46977258 232.48657227]
[-8.01912594 244.10383606]
[-17.50802422 255.72109985]
[-6.55351973 265.97644043]
[3.68365574 276.94790649]
[13.15679169 288.58544922]
[21.82266426 300.83599854]
[29.64173317 313.64361572]
[36.57831955 326.94985962]
[42.60077667 340.69406128]
[47.68161774 354.81347656]
[51.79767227 369.24371338]
[54.93014526 383.91885376]
[57.06475449 398.77203369]
[58.19175720 413.73541260]
[58.30601120 428.74075317]
[57.40699387 443.71954346]
[55.49880600 458.60348511]
[52.59015656 473.32464600]
[48.69431686 487.81588745]
[43.82906342 502.01101685]
[38.01659393 515.84533691]
[31.28343010 529.25567627]
[23.66029549 542.18090820]
[15.18197060 554.56195068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 188]
[70 187]
[71 186]
[72 185]
[75 182]
[76 181]
[77 180]
[78 179]
[79 178]
[80 177]
[81 176]
[82 175]
[83 173]
[84 172]
[85 171]
[87 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
