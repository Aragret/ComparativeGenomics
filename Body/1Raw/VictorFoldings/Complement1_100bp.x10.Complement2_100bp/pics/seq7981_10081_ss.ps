%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[99.06437683 544.80029297]
[104.70102692 530.43951416]
[117.22026062 521.42437744]
[116.32744598 506.45098877]
[112.79138947 499.96115112]
[115.53449249 491.24832153]
[114.86470795 476.26330566]
[114.19491577 461.27825928]
[113.52513123 446.29321289]
[105.22724915 433.92413330]
[112.34062195 419.79223633]
[102.11296082 405.53173828]
[110.73445892 389.26055908]
[109.84164429 374.28713989]
[101.36051941 362.04296875]
[108.26269531 347.80673218]
[107.36988068 332.83331299]
[98.88876343 320.58914185]
[105.79093933 306.35290527]
[104.89812469 291.37951660]
[89.03532410 286.99023438]
[75.61293793 277.42050171]
[66.26344299 263.81262207]
[62.13132858 247.80133057]
[63.73303986 231.31739807]
[70.89248657 216.35481262]
[82.76021576 204.72958374]
[97.91416168 197.85931396]
[96.57592773 182.91912842]
[95.23769379 167.97894287]
[93.89945984 153.03875732]
[82.42494965 162.69979858]
[67.68815613 159.90213013]
[60.55249405 146.70811462]
[66.27810669 132.84385681]
[80.64428711 128.52960205]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[92.50000000 46.72462845]
[82.51969910 43.11592102]
[73.95079803 36.89039230]
[67.46027374 28.54705048]
[63.54930115 18.74916458]
[62.51459885 8.27154636]
[64.42591095 -2.06071830]
[69.12145233 -11.43724537]
[76.22154236 -19.12591171]
[85.15926361 -24.53001595]
[95.22573090 -27.23458290]
[88.53627014 -41.57200623]
[97.19875336 -53.68855286]
[98.31439972 -68.64700317]
[99.43004608 -83.60546112]
[99.54171753 -98.60504150]
[98.64890289 -113.57845306]
[97.75608826 -128.55184937]
[96.86326599 -143.52525330]
[95.97045135 -158.49867249]
[95.07763672 -173.47207642]
[94.18482208 -188.44548035]
[93.29200745 -203.41888428]
[92.39919281 -218.39228821]
[91.50637054 -233.36569214]
[90.39072418 -248.32414246]
[89.05249023 -263.26434326]
[80.11485291 -276.31918335]
[86.68582916 -289.68600464]
[85.34759521 -304.62619019]
[84.00936127 -319.56637573]
[82.67112732 -334.50656128]
[81.33289337 -349.44674683]
[79.99465942 -364.38693237]
[78.65642548 -379.32711792]
[70.92289734 -366.47439575]
[57.84725189 -359.12405396]
[42.84743118 -359.19744873]
[29.84435081 -366.67541504]
[22.23698807 -379.60321045]
[22.01388741 -394.60156250]
[29.23336601 -407.74990845]
[42.00827026 -415.61132812]
[56.99927139 -416.13082886]
[70.28775787 -409.17266846]
[78.39987183 -396.55648804]
[79.29269409 -411.52990723]
[72.39051056 -425.76614380]
[80.87163544 -438.01031494]
[81.76445007 -452.98370361]
[82.65726471 -467.95712280]
[74.03576660 -484.22830200]
[84.26342773 -498.48880005]
[84.93321228 -513.47381592]
[85.60299683 -528.45886230]
[71.50754547 -533.99029541]
[59.97348785 -543.80072021]
[52.25196075 -556.82598877]
[49.18053818 -571.65313721]
[51.09238434 -586.67395020]
[57.78011322 -600.25897217]
[68.51829529 -610.93463135]
[82.14212799 -617.54296875]
[97.17380524 -619.36706543]
[111.98279572 -616.20916748]
[124.96273804 -608.41174316]
[134.70565796 -596.82061768]
[140.15472412 -582.69311523]
[140.71885681 -567.56164551]
[136.33686829 -553.06762695]
[127.48408508 -540.78320312]
[115.12078094 -532.04095459]
[100.58803558 -527.78912354]
[99.91825104 -512.80407715]
[99.24846649 -497.81903076]
[107.17740631 -488.68347168]
[106.74204254 -476.19369507]
[97.63066864 -467.06430054]
[96.73785400 -452.09091187]
[95.84503937 -437.11749268]
[102.81108093 -423.95227051]
[94.26609802 -410.63708496]
[93.37328339 -395.66366577]
[93.59661102 -380.66534424]
[94.93484497 -365.72515869]
[96.27307892 -350.78497314]
[97.61131287 -335.84478760]
[98.94954681 -320.90460205]
[100.28778076 -305.96441650]
[101.62601471 -291.02423096]
[110.46793365 -279.03799438]
[103.99267578 -264.60256958]
[105.33090973 -249.66238403]
[108.35634613 -245.96701050]
[109.09248352 -240.33183289]
[106.47978210 -234.25851440]
[107.37259674 -219.28511047]
[108.26541138 -204.31170654]
[109.15822601 -189.33828735]
[110.05104065 -174.36488342]
[110.94385529 -159.39147949]
[111.83667755 -144.41807556]
[112.72949219 -129.44467163]
[113.62230682 -114.47126770]
[114.51512146 -99.49785614]
[123.11523438 -111.78761292]
[136.95372009 -117.57521057]
[151.74258423 -115.06729126]
[162.89932251 -105.04096985]
[166.96690369 -90.60300446]
[162.68495178 -76.22716522]
[151.38026428 -66.36795044]
[136.55572510 -64.08035278]
[122.80488586 -70.07321167]
[114.38850403 -82.48980713]
[113.27285767 -67.53135681]
[112.15720367 -52.57290268]
[118.92646790 -39.30540848]
[110.18418884 -26.11893463]
[127.02243042 -16.09681892]
[136.47174072 1.15950894]
[135.84097290 20.90251160]
[125.22484589 37.65387344]
[107.50000000 46.72462845]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[108.83964539 151.70051575]
[110.17787933 166.64070129]
[111.51611328 181.58088684]
[112.85434723 196.52107239]
[126.16056824 199.42596436]
[138.09530640 205.95271301]
[147.69689941 215.56460571]
[154.19474792 227.47680664]
[157.07109070 240.72042847]
[156.10235596 254.22128296]
[151.37638855 266.88705444]
[143.28466797 277.69567871]
[132.48985291 285.77780151]
[119.87152863 290.48669434]
[120.76435089 305.46008301]
[129.30932617 318.77526855]
[122.34329224 331.94049072]
[123.23610687 346.91390991]
[131.78108215 360.22909546]
[124.81504822 373.39431763]
[125.70786285 388.36773682]
[134.81922913 397.49713135]
[135.25460815 409.98687744]
[127.32566071 419.12243652]
[135.67144775 432.56335449]
[128.51017761 445.62344360]
[129.17996216 460.60845947]
[129.84974670 475.59350586]
[130.51953125 490.57855225]
[131.30085754 505.55819702]
[132.19366455 520.53161621]
[145.69546509 527.99517822]
[152.99868774 541.58435059]
[151.77288818 556.96295166]
[142.40921021 569.22363281]
[127.89557648 574.45416260]
[112.86323547 570.98541260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 204]
[4 203]
[6 202]
[7 201]
[8 200]
[9 199]
[11 197]
[13 194]
[14 193]
[16 191]
[17 190]
[19 188]
[20 187]
[28 177]
[29 176]
[30 175]
[31 174]
[37 173]
[38 172]
[39 171]
[41 170]
[42 169]
[43 168]
[44 167]
[54 162]
[56 160]
[57 159]
[58 158]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 136]
[70 135]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[89 126]
[90 125]
[92 123]
[93 122]
[94 121]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
