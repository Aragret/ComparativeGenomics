%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[29.02952957 614.07598877]
[18.89551544 625.15209961]
[7.70902109 635.16412354]
[-4.41877413 644.01257324]
[-17.36733627 651.60949707]
[-31.00797081 657.87939453]
[-45.20510864 662.75994873]
[-59.81765366 666.20269775]
[-74.70036316 668.17333984]
[-89.70533752 668.65228271]
[-104.68344116 667.63488770]
[-119.48580170 665.13116455]
[-133.96531677 661.16601562]
[-147.97805786 655.77886963]
[-161.38478088 649.02325439]
[-174.05223083 640.96630859]
[-185.85450745 631.68811035]
[-196.67431641 621.28088379]
[-206.40411377 609.84802246]
[-214.94720459 597.50323486]
[-222.21867371 584.36914062]
[-228.14627075 570.57629395]
[-232.67106628 556.26184082]
[-235.74807739 541.56793213]
[-237.34675598 526.64068604]
[-237.45118713 511.62841797]
[-236.06034851 496.68035889]
[-233.18804932 481.94506836]
[-228.86285400 467.56903076]
[-223.12773132 453.69503784]
[-216.03968811 440.46105957]
[-207.66917419 427.99859619]
[-198.09938049 416.43151855]
[-187.42541504 405.87475586]
[-175.75337219 396.43325806]
[-163.19924927 388.20083618]
[-149.88780212 381.25936890]
[-135.95135498 375.67776489]
[-121.52841187 371.51156616]
[-106.76231384 368.80215454]
[-91.79981995 367.57644653]
[-76.78964233 367.84661865]
[-61.88094711 369.61001587]
[-47.22192383 372.84909058]
[-32.95825577 377.53164673]
[-26.88442230 363.81637573]
[-20.81058884 350.10110474]
[-14.73675442 336.38586426]
[-8.66292095 322.67059326]
[-2.58908677 308.95532227]
[3.48474717 295.24005127]
[9.55858135 281.52478027]
[15.63241482 267.80950928]
[10.04420662 254.05061340]
[16.00855827 240.05485535]
[30.47805595 234.28671265]
[28.55700302 219.51651001]
[41.21960831 210.03131104]
[47.29344177 196.31605530]
[53.36727524 182.60078430]
[59.44110870 168.88551331]
[65.51494598 155.17025757]
[64.66078186 150.47137451]
[66.74935913 145.18603516]
[71.97922516 141.14128113]
[70.49878693 126.32042694]
[83.43818665 117.21644592]
[89.91768646 103.68810272]
[94.10469818 89.28431702]
[95.88716125 74.39060211]
[97.66963196 59.49688339]
[99.45209503 44.60316467]
[100.79032898 29.66298103]
[101.68314362 14.68957424]
[102.57595825 -0.28383124]
[103.13417053 -15.27344131]
[103.35749817 -30.27177811]
[103.58082581 -45.27011490]
[103.80415344 -60.26845169]
[100.92286682 -66.21906281]
[101.40665436 -71.88147736]
[104.26406097 -75.70825958]
[104.93384552 -90.69329834]
[105.60363007 -105.67833710]
[106.27341461 -120.66337585]
[106.94319916 -135.64842224]
[107.61298370 -150.63345337]
[108.28276825 -165.61849976]
[108.95255280 -180.60353088]
[109.62233734 -195.58857727]
[97.85069275 -186.29188538]
[82.93767548 -187.90493774]
[73.42613983 -199.50367737]
[74.76473236 -214.44383240]
[86.18664551 -224.16699219]
[101.14888000 -223.10330200]
[111.08008575 -211.86299133]
[113.08409882 -226.72851562]
[115.08811188 -241.59403992]
[101.22116852 -247.56149292]
[89.47917175 -257.04980469]
[80.73345184 -269.35488892]
[75.63300323 -283.56359863]
[74.55631256 -298.62161255]
[77.58328247 -313.41146851]
[84.48928070 -326.83569336]
[94.76184845 -337.89810181]
[107.63867950 -345.77780151]
[122.16424561 -349.89007568]
[137.26063538 -349.92974854]
[151.80760193 -345.89385986]
[164.72566223 -338.08193970]
[175.05622864 -327.07366943]
[182.03268433 -313.68591309]
[185.13732910 -298.91217041]
[184.13978577 -283.84872437]
[179.11407471 -269.61337280]
[170.43313599 -257.26251221]
[158.74116516 -247.71263123]
[144.90577698 -241.67239380]
[129.95364380 -239.59002686]
[127.94963074 -224.72450256]
[125.94561768 -209.85897827]
[124.60737610 -194.91879272]
[123.93759155 -179.93374634]
[123.26780701 -164.94871521]
[122.59802246 -149.96366882]
[121.92823792 -134.97863770]
[121.25845337 -119.99359131]
[120.58866882 -105.00855255]
[119.91888428 -90.02351379]
[119.24909973 -75.03847504]
[118.80249023 -60.04512405]
[118.57916260 -45.04678726]
[118.35583496 -30.04845047]
[118.13250732 -15.05011368]
[120.31275940 -12.27904034]
[121.25914001 -8.31426811]
[120.42521667 -3.74722672]
[117.54936981 0.60898465]
[116.65654755 15.58239079]
[115.76373291 30.55579567]
[117.52140045 32.73954391]
[118.51996613 35.75110245]
[118.43978882 39.30482864]
[117.07044220 43.00474930]
[114.34580994 46.38563156]
[112.56334686 61.27935028]
[110.78088379 76.17306519]
[108.99841309 91.06678009]
[117.26416779 78.54970551]
[128.45260620 68.55876160]
[141.82162476 61.75661850]
[156.48452759 58.59444046]
[171.46876526 59.28196335]
[185.78048706 63.77358246]
[198.47044373 71.77138519]
[208.69696045 82.74491119]
[215.78175354 95.96632385]
[219.25491333 110.55869293]
[218.88607788 125.55415344]
[214.69969177 139.95812988]
[206.97344971 152.81523132]
[196.21980286 163.27270508]
[183.15197754 170.63694763]
[168.63673401 174.41950989]
[153.63682556 174.36952209]
[139.14712524 170.49028015]
[126.12867737 163.03909302]
[115.44496918 152.51016235]
[107.80460358 139.60183716]
[103.71433258 125.17028809]
[103.44602966 110.16759491]
[96.96653748 123.69593811]
[97.98352051 139.48442078]
[85.50756836 147.62077332]
[79.23020935 161.24407959]
[73.15637970 174.95935059]
[67.08254242 188.67462158]
[61.00870895 202.38989258]
[54.93487549 216.10514832]
[56.42148590 231.85635376]
[44.19332123 240.36054993]
[49.64672089 254.95158386]
[43.29160690 268.77429199]
[29.34768105 273.88336182]
[23.27384758 287.59860229]
[17.20001411 301.31387329]
[11.12617970 315.02914429]
[5.05234575 328.74441528]
[-1.02148795 342.45968628]
[-7.09532213 356.17495728]
[-13.16915607 369.89022827]
[-19.24299049 383.60546875]
[-6.18936634 391.02044678]
[6.06108856 399.69827271]
[17.38662148 409.55276489]
[27.67466927 420.48596191]
[36.82298279 432.38919067]
[44.74064255 445.14416504]
[51.34895325 458.62411499]
[56.58223724 472.69503784]
[60.38848495 487.21713257]
[62.72986603 502.04605103]
[63.58311081 517.03436279]
[62.93973541 532.03320312]
[60.80613708 546.89343262]
[57.20352173 561.46740723]
[52.16769409 575.61016846]
[45.74870300 589.18133545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[50 189]
[51 188]
[52 187]
[53 186]
[56 183]
[58 181]
[59 180]
[60 179]
[61 178]
[62 177]
[65 176]
[67 174]
[68 173]
[69 150]
[70 149]
[71 148]
[72 147]
[73 142]
[74 141]
[75 140]
[76 136]
[77 135]
[78 134]
[79 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
