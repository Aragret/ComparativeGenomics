%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[61.14458466 606.88000488]
[46.40081787 609.79187012]
[31.38773155 610.47369385]
[16.44071960 608.91021729]
[1.89370680 605.13635254]
[-11.92832279 599.23638916]
[-24.71657944 591.34222412]
[-36.18536758 581.63012695]
[-46.07847214 570.31713867]
[-54.17487717 557.65594482]
[-60.29370499 543.92944336]
[-64.29826355 529.44421387]
[-66.09907532 514.52392578]
[-65.65592957 499.50189209]
[-62.97871017 484.71371460]
[-58.12723541 470.48977661]
[-51.20988846 457.14779663]
[-42.38119888 444.98590088]
[-31.83841324 434.27575684]
[-19.81705284 425.25662231]
[-6.58568382 418.13003540]
[7.56010246 413.05514526]
[22.30428314 410.14538574]
[37.31746674 409.46569824]
[38.87799072 394.54708862]
[40.43851471 379.62850952]
[41.99903488 364.70989990]
[35.62779999 351.24673462]
[44.75881577 338.32638550]
[46.31933975 323.40777588]
[39.94810486 309.94464111]
[49.07911682 297.02429199]
[50.63964081 282.10568237]
[36.97502136 270.91864014]
[32.72380829 253.61610413]
[39.77151871 237.08100891]
[55.46990204 228.00805664]
[56.58554840 213.04960632]
[57.70119858 198.09114075]
[49.89533234 210.90007019]
[38.83580780 221.03352356]
[25.39482117 227.69233704]
[10.63238716 230.35137939]
[-4.28726959 228.80094910]
[-18.18752098 223.16329956]
[-29.97213554 213.88307190]
[-38.71173096 201.69210815]
[-43.71706009 187.55186462]
[-44.59339142 172.57748413]
[-41.27160645 157.94990540]
[-34.01367950 144.82273865]
[-23.39199638 134.23124695]
[-10.24423027 127.01069641]
[4.39273071 123.73055267]
[19.36455536 124.64949036]
[33.49050522 129.69503784]
[45.65654373 138.46928406]
[54.90321350 150.28025818]
[60.50127792 164.19650269]
[62.00911331 179.12397766]
[67.46446991 165.15118408]
[72.91983032 151.17837524]
[78.37518311 137.20558167]
[83.83054352 123.23278809]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[99.74363708 43.58112717]
[104.84020996 29.24656487]
[118.27272034 22.91386032]
[115.38678741 7.35809278]
[126.80747986 -2.20312881]
[131.63348389 -16.40558434]
[128.74754333 -31.96135330]
[140.16824341 -41.52257538]
[144.99423218 -55.72502899]
[142.10829163 -71.28079987]
[153.52899170 -80.84201813]
[152.53210449 -85.06815338]
[152.89535522 -88.99658203]
[154.35812378 -92.23628998]
[156.55961609 -94.52103424]
[159.08813477 -95.73127747]
[164.75093079 -109.62130737]
[170.41371155 -123.51133728]
[176.07650757 -137.40136719]
[171.80264282 -149.57086182]
[176.80514526 -161.02333069]
[187.90243530 -165.83755493]
[193.77139282 -179.64173889]
[199.64035034 -193.44590759]
[205.50930786 -207.25009155]
[211.37826538 -221.05426025]
[217.24723816 -234.85844421]
[204.32815552 -242.52531433]
[192.54629517 -251.84577942]
[182.11189270 -262.65350342]
[173.21116638 -274.75558472]
[166.00297546 -287.93606567]
[160.61593628 -301.95974731]
[157.14620972 -316.57632446]
[155.65570068 -331.52496338]
[156.17102051 -346.53887939]
[158.68295288 -361.35015869]
[163.14669800 -375.69442749]
[169.48257446 -389.31576538]
[177.57751465 -401.97100830]
[187.28706360 -413.43435669]
[198.43792725 -423.50119019]
[210.83111572 -431.99191284]
[224.24545288 -438.75497437]
[238.44155884 -443.66964722]
[253.16607666 -446.64828491]
[268.15621948 -447.63766479]
[283.14450073 -446.62017822]
[297.86340332 -443.61395264]
[312.05026245 -438.67266846]
[325.45190430 -431.88446045]
[337.82913208 -423.37054443]
[348.96112061 -413.28277588]
[358.64913940 -401.80126953]
[366.72033691 -389.13085938]
[373.03067017 -375.49768066]
[377.46752930 -361.14508057]
[379.95169067 -346.32913208]
[380.43884277 -331.31423950]
[378.92031860 -316.36843872]
[375.42318726 -301.75839233]
[370.00988770 -287.74484253]
[362.77697754 -274.57788086]
[353.85357666 -262.49249268]
[343.39892578 -251.70437622]
[331.59960938 -242.40600586]
[318.66619873 -234.76336670]
[304.82946777 -228.91284180]
[290.33639526 -224.95881653]
[275.44561768 -222.97187805]
[260.42285156 -222.98748779]
[245.53623962 -225.00535583]
[231.05140686 -228.98948669]
[225.18244934 -215.18530273]
[219.31349182 -201.38111877]
[213.44451904 -187.57695007]
[207.57556152 -173.77276611]
[201.70660400 -159.96859741]
[204.77076721 -142.68919373]
[189.96652222 -131.73857117]
[184.30374146 -117.84854889]
[178.64096069 -103.95851898]
[172.97816467 -90.06849670]
[167.73144531 -76.01602173]
[170.96257019 -61.47610855]
[159.19668579 -50.89903259]
[154.37069702 -36.69657516]
[157.60182190 -22.15666389]
[145.83593750 -11.57958698]
[141.00993347 2.62286878]
[144.24105835 17.16278267]
[132.47517395 27.73985863]
[139.26861572 40.94534302]
[134.57669067 55.41740036]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[104.19344330 119.08718872]
[103.24151611 123.63110352]
[100.86839294 126.94521332]
[97.80333710 128.68814087]
[92.34798431 142.66093445]
[86.89262390 156.63374329]
[81.43727112 170.60653687]
[75.98191071 184.57933044]
[72.65965271 199.20678711]
[71.54400635 214.16525269]
[70.42835236 229.12370300]
[80.94898987 235.87528992]
[87.56239319 246.39819336]
[89.06548309 258.66278076]
[85.23392487 270.33413696]
[76.85314941 279.21643066]
[65.55824280 283.66619873]
[63.99772263 298.58480835]
[70.25733948 313.11505127]
[61.23794174 324.96832275]
[59.67742157 339.88690186]
[65.93703461 354.41714478]
[56.91764069 366.27041626]
[55.35711670 381.18902588]
[53.79659653 396.10763550]
[52.23607254 411.02621460]
[66.78362274 414.79803467]
[80.60649109 420.69598389]
[93.39587402 428.58834839]
[104.86604309 438.29879761]
[114.76075745 449.61038208]
[122.85897064 462.27044678]
[128.97975159 475.99609375]
[132.98637390 490.48074341]
[134.78930664 505.40075684]
[134.34829712 520.42285156]
[131.67318726 535.21142578]
[126.82374573 549.43603516]
[119.90829468 562.77899170]
[111.08133698 574.94213867]
[100.54007721 585.65380859]
[88.52000427 594.67462158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 194]
[25 193]
[26 192]
[27 191]
[29 189]
[30 188]
[32 186]
[33 185]
[37 179]
[38 178]
[39 177]
[60 176]
[61 175]
[62 174]
[63 173]
[64 172]
[65 168]
[67 166]
[68 165]
[69 164]
[72 161]
[74 159]
[75 158]
[77 156]
[78 155]
[80 153]
[85 152]
[86 151]
[87 150]
[88 149]
[91 147]
[92 146]
[93 145]
[94 144]
[95 143]
[96 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
