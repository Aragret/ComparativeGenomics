%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[193.69052124 623.79650879]
[184.58415222 611.86889648]
[176.35191345 599.32202148]
[169.03573608 586.21990967]
[162.67288208 572.62915039]
[157.29582214 558.61914062]
[152.93191528 544.26123047]
[149.60340881 529.62860107]
[147.32727051 514.79577637]
[146.11511230 499.83837891]
[145.97308350 484.83261108]
[146.90193176 469.85494995]
[148.89689636 454.98168945]
[151.94784546 440.28866577]
[156.03919983 425.85073853]
[161.15013123 411.74145508]
[167.25459290 398.03274536]
[174.32147217 384.79446411]
[182.31475830 372.09402466]
[191.19372559 359.99621582]
[200.91311646 348.56265259]
[211.42341614 337.85156250]
[222.67105103 327.91760254]
[234.59872437 318.81134033]
[226.36990356 306.26992798]
[212.91879272 299.87332153]
[211.81729126 284.09051514]
[203.58848572 271.54910278]
[195.35968018 259.00772095]
[187.13087463 246.46630859]
[173.67974854 240.06970215]
[172.57824707 224.28689575]
[164.34944153 211.74548340]
[156.12063599 199.20408630]
[147.89183044 186.66268921]
[139.66302490 174.12129211]
[131.43421936 161.57989502]
[123.20540619 149.03848267]
[109.75428009 142.64189148]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.57700348 68.82833862]
[62.34819412 56.28693771]
[54.11938477 43.74553680]
[40.07968140 36.45188904]
[39.56676865 21.56611824]
[24.18632698 20.70115280]
[12.40209579 11.05826378]
[8.60052681 -3.50237036]
[14.03673458 -17.34381676]
[5.80792713 -29.88521767]
[-2.42088103 -42.42661667]
[-16.46058464 -49.72026443]
[-16.97349739 -64.60604095]
[-31.01320076 -71.89968872]
[-31.52611351 -86.78545380]
[-39.75492096 -99.32685852]
[-53.19707870 -92.63024139]
[-67.33693695 -87.57050323]
[-81.97598267 -84.21868896]
[-96.90871429 -82.62184906]
[-111.92549896 -82.80239868]
[-126.81552124 -84.75780487]
[-141.36975098 -88.46060944]
[-155.38386536 -93.85884094]
[-168.66113281 -100.87670898]
[-181.01516724 -109.41569519]
[-192.27252197 -119.35593414]
[-202.27516174 -130.55787659]
[-210.88269043 -142.86424255]
[-217.97424316 -156.10231018]
[-223.45028687 -170.08619690]
[-227.23391724 -184.61962891]
[-229.27204895 -199.49855042]
[-229.53605652 -214.51409912]
[-228.02223206 -229.45547485]
[-224.75184631 -244.11293030]
[-219.77078247 -258.28067017]
[-213.14897156 -271.75985718]
[-204.97938538 -284.36120605]
[-195.37670898 -295.90786743]
[-184.47575378 -306.23767090]
[-172.42953491 -315.20568848]
[-159.40718079 -322.68597412]
[-145.59149170 -328.57351685]
[-131.17642212 -332.78567505]
[-116.36434174 -335.26330566]
[-101.36318970 -335.97161865]
[-86.38355255 -334.90072632]
[-71.63572693 -332.06558228]
[-57.32674026 -327.50607300]
[-43.65747833 -321.28613281]
[-30.81983376 -313.49310303]
[-18.99402237 -304.23638916]
[-8.34606457 -293.64596558]
[0.97456127 -281.87045288]
[8.83700657 -269.07522583]
[15.13089561 -255.43984985]
[19.76787186 -241.15577698]
[22.68284035 -226.42352295]
[23.83487701 -211.44990540]
[23.20781326 -196.44512939]
[20.81044769 -181.61984253]
[16.67643738 -167.18217468]
[10.86381721 -153.33480835]
[3.45418739 -140.27212524]
[-5.44843197 -128.17750549]
[-15.71906281 -117.22074890]
[-27.21352005 -107.55566406]
[-18.98471260 -95.01426697]
[-5.53358936 -88.61766052]
[-4.43209696 -72.83484650]
[9.01902676 -66.43824005]
[10.12051964 -50.65542603]
[18.34932709 -38.11402512]
[26.57813454 -25.57262421]
[41.43962860 -25.04913902]
[53.28326035 -15.76515675]
[57.43772125 -1.11613441]
[52.10816956 13.33731079]
[65.55929565 19.73391342]
[66.66078186 35.51673126]
[74.88959503 48.05813217]
[83.11840057 60.59952927]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[135.23390198 125.92391205]
[135.74681091 140.80967712]
[143.97561646 153.35107422]
[152.20442200 165.89248657]
[160.43322754 178.43388367]
[168.66203308 190.97528076]
[176.89085388 203.51667786]
[185.11965942 216.05809021]
[199.15936279 223.35173035]
[199.67227173 238.23750305]
[207.90107727 250.77890015]
[216.12988281 263.32031250]
[224.35868835 275.86169434]
[238.39839172 283.15536499]
[238.91131592 298.04113770]
[247.14012146 310.58251953]
[260.24212646 303.26605225]
[273.83267212 296.90289307]
[287.84255981 291.52548218]
[302.20037842 287.16125488]
[316.83294678 283.83242798]
[331.66571045 281.55593872]
[346.62307739 280.34344482]
[361.62884521 280.20104980]
[376.60653687 281.12954712]
[391.47982788 283.12420654]
[406.17294312 286.17480469]
[420.61096191 290.26583862]
[434.72033691 295.37643433]
[448.42919922 301.48059082]
[461.66766357 308.54714966]
[474.36825562 316.54016113]
[486.46627808 325.41882324]
[497.90008545 335.13796997]
[508.61138916 345.64801025]
[518.54565430 356.89541626]
[527.65216064 368.82287598]
[535.88458252 381.36959839]
[543.20098877 394.47164917]
[549.56402588 408.06225586]
[554.94134521 422.07220459]
[559.30548096 436.43005371]
[562.63415527 451.06262207]
[564.91052246 465.89541626]
[566.12292480 480.85281372]
[566.26519775 495.85858154]
[565.33660889 510.83624268]
[563.34185791 525.70953369]
[560.29113770 540.40258789]
[556.19995117 554.84057617]
[551.08923340 568.94995117]
[544.98498535 582.65875244]
[537.91833496 595.89715576]
[529.92523193 608.59771729]
[521.04644775 620.69567871]
[511.32723999 632.12939453]
[500.81710815 642.84063721]
[489.56964111 652.77478027]
[477.64212036 661.88122559]
[465.09530640 670.11352539]
[451.99322510 677.42980957]
[438.40255737 683.79278564]
[424.39257812 689.16998291]
[410.03469849 693.53399658]
[395.40206909 696.86260986]
[380.56927490 699.13885498]
[365.61187744 700.35113525]
[350.60610962 700.49328613]
[335.62844849 699.56451416]
[320.75518799 697.56964111]
[306.06213379 694.51885986]
[291.62417603 690.42761230]
[277.51486206 685.31677246]
[263.80609131 679.21240234]
[250.56774902 672.14562988]
[237.86726379 664.15246582]
[225.76937866 655.27355957]
[214.33572388 645.55426025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 148]
[25 147]
[27 145]
[28 144]
[29 143]
[30 142]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[40 132]
[41 131]
[43 129]
[44 128]
[45 127]
[46 126]
[47 125]
[49 123]
[53 119]
[54 118]
[55 117]
[57 115]
[59 113]
[60 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
