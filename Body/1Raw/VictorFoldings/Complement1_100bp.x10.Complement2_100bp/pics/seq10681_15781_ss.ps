%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[57.92355347 906.89733887]
[42.92602539 906.51904297]
[27.95836067 905.50018311]
[13.04790020 903.84277344]
[-1.77811944 901.54968262]
[-16.49261665 898.62524414]
[-31.06871033 895.07464600]
[-45.47977829 890.90454102]
[-59.69949341 886.12243652]
[-73.70188141 880.73706055]
[-87.46137238 874.75830078]
[-100.95281982 868.19708252]
[-114.15158844 861.06536865]
[-127.03356171 853.37615967]
[-139.57521057 845.14355469]
[-151.75363159 836.38250732]
[-163.54656982 827.10913086]
[-174.93247986 817.34033203]
[-185.89057922 807.09393311]
[-196.40084839 796.38861084]
[-206.44407654 785.24401855]
[-216.00193787 773.68041992]
[-225.05694580 761.71899414]
[-233.59257507 749.38159180]
[-241.59323120 736.69073486]
[-249.04431152 723.66955566]
[-255.93218994 710.34191895]
[-262.24429321 696.73211670]
[-267.96908569 682.86505127]
[-273.09609985 668.76599121]
[-277.61599731 654.46081543]
[-281.52050781 639.97546387]
[-284.80249023 625.33660889]
[-287.45596313 610.57080078]
[-289.47607422 595.70513916]
[-290.85913086 580.76672363]
[-291.60263062 565.78289795]
[-291.70516968 550.78094482]
[-291.16659546 535.78826904]
[-289.98785400 520.83239746]
[-288.17114258 505.94049072]
[-285.71978760 491.13980103]
[-282.63821411 476.45739746]
[-278.93209839 461.92010498]
[-274.60818481 447.55441284]
[-269.67434692 433.38662720]
[-264.13967896 419.44259644]
[-258.01422119 405.74777222]
[-251.30915833 392.32720947]
[-244.03678894 379.20541382]
[-236.21035767 366.40637207]
[-227.84417725 353.95339966]
[-218.95352173 341.86932373]
[-209.55464172 330.17614746]
[-199.66470337 318.89529419]
[-189.30175781 308.04733276]
[-178.48475647 297.65206909]
[-167.23344421 287.72851562]
[-155.56837463 278.29479980]
[-143.51084900 269.36813354]
[-131.08291626 260.96484375]
[-118.30725861 253.10026550]
[-105.20722198 245.78877258]
[-91.80672455 239.04371643]
[-78.13025665 232.87742615]
[-64.20278931 227.30116272]
[-50.04977417 222.32510376]
[-35.69705963 217.95835876]
[-21.17086411 214.20887756]
[-6.49772120 211.08352661]
[8.29556656 208.58801270]
[23.18197632 206.72688293]
[38.13431549 205.50355530]
[53.12526703 204.92025757]
[68.12745667 204.97804260]
[83.11347198 205.67681885]
[76.54249573 192.31001282]
[85.48013306 179.25515747]
[86.81836700 164.31497192]
[88.15660095 149.37478638]
[89.49483490 134.43460083]
[90.83306885 119.49441528]
[92.17130280 104.55422974]
[90.14288330 101.27430725]
[89.57005310 97.11621857]
[90.81259155 92.75008392]
[93.91750336 88.98188019]
[95.92151642 74.11634827]
[97.92552948 59.25082016]
[95.94130707 54.42278290]
[96.00143433 49.78062057]
[97.69277191 46.07192230]
[100.36532593 43.77197266]
[103.03112030 29.01075363]
[105.69692230 14.24953651]
[108.36271667 -0.51168072]
[111.02851105 -15.27289772]
[105.86694336 -30.22845840]
[115.74295807 -41.37805557]
[101.97649384 -47.52198410]
[90.08082581 -56.78247070]
[80.74755859 -68.62111664]
[74.51931000 -82.34963989]
[71.75818634 -97.16988373]
[72.62471771 -112.22021484]
[77.06851959 -126.62563324]
[84.83123779 -139.54862976]
[95.46155548 -150.23785400]
[108.34143829 -158.07188416]
[122.72207642 -162.59523010]
[137.76739502 -163.54493713]
[152.60267639 -160.86576843]
[166.36541748 -154.71348572]
[178.25546265 -145.44580078]
[187.58154297 -133.60148621]
[193.80146790 -119.86919403]
[196.55360413 -105.04727936]
[195.67796326 -89.99747467]
[191.22541809 -75.59474945]
[183.45487976 -62.67647171]
[172.81808472 -51.99368286]
[159.93344116 -44.16746902]
[145.55006409 -39.65283585]
[130.50418091 -38.71226120]
[135.85641479 -24.81252098]
[125.78972626 -12.60710239]
[123.12393188 2.15411472]
[120.45813751 16.91533279]
[117.79234314 31.67654991]
[115.12654877 46.43776703]
[112.79106140 61.25483322]
[110.78704834 76.12036133]
[108.78302765 90.98589325]
[107.11148834 105.89246368]
[105.77325439 120.83264923]
[104.43502045 135.77284241]
[103.09678650 150.71301270]
[101.75855255 165.65319824]
[100.42031860 180.59338379]
[106.89557648 195.02882385]
[98.05365753 207.01504517]
[112.92530060 208.99070740]
[127.69893646 211.60002136]
[142.34759521 214.83822632]
[156.84449768 218.69941711]
[171.16317749 223.17651367]
[185.27746582 228.26136780]
[199.16159058 233.94467163]
[212.79019165 240.21604919]
[226.13836670 247.06405640]
[239.18174744 254.47616577]
[251.89648438 262.43884277]
[264.25936890 270.93756104]
[276.24780273 279.95675659]
[287.83993530 289.48001099]
[299.01452637 299.48986816]
[309.75119019 309.96807861]
[320.03030396 320.89550781]
[329.83312988 332.25216675]
[339.14172363 344.01733398]
[347.93908691 356.16949463]
[356.20916748 368.68646240]
[363.93685913 381.54541016]
[371.10800171 394.72277832]
[377.70953369 408.19454956]
[383.72940063 421.93609619]
[389.15661621 435.92233276]
[393.98120117 450.12768555]
[398.19442749 464.52621460]
[401.78854370 479.09164429]
[404.75698853 493.79733276]
[407.09436035 508.61642456]
[408.79638672 523.52185059]
[409.85995483 538.48638916]
[410.28311157 553.48272705]
[410.06509399 568.48345947]
[409.20629883 583.46118164]
[407.70828247 598.38848877]
[405.57382202 613.23815918]
[402.80676270 627.98303223]
[399.41217041 642.59625244]
[395.39630127 657.05108643]
[390.76641846 671.32110596]
[385.53100586 685.38024902]
[379.69964600 699.20281982]
[373.28298950 712.76361084]
[366.29272461 726.03784180]
[358.74163818 739.00128174]
[350.64352417 751.63018799]
[342.01318359 763.90155029]
[332.86636353 775.79290771]
[323.21978760 787.28259277]
[313.09106445 798.34954834]
[302.49871826 808.97363281]
[291.46206665 819.13537598]
[280.00128174 828.81628418]
[268.13729858 837.99859619]
[255.89181519 846.66558838]
[243.28717041 854.80145264]
[230.34638977 862.39123535]
[217.09310913 869.42114258]
[203.55155945 875.87835693]
[189.74645996 881.75103760]
[175.70303345 887.02844238]
[161.44692993 891.70092773]
[147.00418091 895.76007080]
[132.40118408 899.19830322]
[117.66461945 902.00939941]
[102.82138824 904.18829346]
[87.89861298 905.73089600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 141]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[87 133]
[88 132]
[89 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
