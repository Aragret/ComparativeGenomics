%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-1.91335618 232.98931885]
[-1.97753954 247.99607849]
[-3.14984155 262.95712280]
[-5.42385912 277.79074097]
[-8.78717232 292.41589355]
[-13.22141266 306.75274658]
[-18.70236015 320.72293091]
[-25.20007896 334.25021362]
[-32.67908096 347.26065063]
[-41.09852219 359.68322754]
[-50.41241074 371.45007324]
[-60.56988144 382.49691772]
[-71.51545715 392.76345825]
[-83.18935394 402.19357300]
[-95.52781677 410.73580933]
[-108.46344757 418.34347534]
[-121.92560577 424.97503662]
[-135.84075928 430.59426880]
[-150.13290405 435.17047119]
[-164.72399902 438.67864990]
[-179.53433228 441.09967041]
[-194.48301697 442.42028809]
[-209.48840332 442.63330078]
[-224.46855164 441.73754883]
[-239.34164429 439.73788452]
[-254.02642822 436.64529419]
[-268.44271851 432.47662354]
[-282.51177979 427.25463867]
[-296.15673828 421.00787354]
[-309.30310059 413.77047729]
[-321.87905884 405.58190918]
[-333.81594849 396.48693848]
[-345.04852295 386.53524780]
[-355.51547241 375.78118896]
[-365.15960693 364.28344727]
[-373.92828369 352.10485840]
[-381.77359009 339.31195068]
[-388.65264893 325.97457886]
[-394.52795410 312.16558838]
[-399.36734009 297.96041870]
[-403.14443970 283.43661499]
[-405.83862305 268.67352295]
[-407.43511963 253.75178528]
[-407.92526245 238.75288391]
[-407.30633545 223.75874329]
[-405.58172607 208.85127258]
[-402.76089478 194.11186218]
[-398.85922241 179.62103271]
[-393.89797974 165.45793152]
[-387.90432739 151.69990540]
[-380.91094971 138.42210388]
[-372.95608521 125.69703674]
[-364.08316040 113.59421539]
[-354.34063721 102.17973328]
[-343.78170776 91.51593781]
[-332.46408081 81.66107178]
[-320.44955444 72.66895294]
[-307.80374146 64.58870697]
[-294.59570312 57.46445465]
[-280.89758301 51.33510971]
[-266.78421021 46.23414612]
[-252.33264160 42.18943024]
[-237.62184143 39.22304916]
[-222.73213196 37.35120392]
[-207.74484253 36.58412170]
[-192.74182129 36.92598724]
[-177.80503845 38.37493515]
[-163.01603699 40.92304993]
[-148.45562744 44.55641937]
[-134.20329285 49.25519562]
[-120.33691406 54.99371719]
[-106.93220520 61.74063873]
[-94.06237793 69.45911407]
[-81.79772949 78.10698700]
[-70.20524597 87.63702393]
[-59.34824371 97.99716949]
[-49.28601837 109.13084412]
[-40.07352066 120.97724915]
[-31.76107597 133.47166443]
[-24.39407921 146.54585266]
[-10.81787300 140.16725159]
[-8.38351250 136.05836487]
[-3.34212995 133.43510437]
[3.25883937 133.80758667]
[17.01894188 127.83602905]
[30.77904510 121.86446381]
[44.53915024 115.89289856]
[58.29925156 109.92134094]
[72.05935669 103.94977570]
[85.81945801 97.97821045]
[94.29757690 86.86006927]
[108.20897675 88.26168060]
[117.78817749 75.67004395]
[132.54367065 77.70099640]
[146.30377197 71.72943115]
[160.06387329 65.75787354]
[173.82397461 59.78630829]
[187.58407593 53.81474686]
[182.54286194 39.68126297]
[178.45690918 25.24262428]
[175.34448242 10.56331730]
[173.21948242 -4.29109764]
[172.09140015 -19.25427437]
[171.96525574 -34.25938797]
[172.84164429 -49.23941422]
[174.71662903 -64.12744904]
[177.58184814 -78.85700989]
[181.42448425 -93.36229706]
[186.22740173 -107.57852936]
[191.96913147 -121.44221497]
[198.62403870 -134.89143372]
[206.16239929 -147.86611938]
[214.55053711 -160.30831909]
[223.75099182 -172.16247559]
[233.72267151 -183.37562561]
[244.42105103 -193.89768982]
[255.79833984 -203.68170166]
[267.80371094 -212.68392944]
[280.38357544 -220.86418152]
[293.48171997 -228.18591309]
[307.03964233 -234.61643982]
[320.99682617 -240.12702942]
[335.29089355 -244.69308472]
[349.85803223 -248.29418945]
[364.63314819 -250.91427612]
[379.55029297 -252.54162598]
[394.54281616 -253.16899109]
[409.54376221 -252.79356384]
[424.48611450 -251.41702271]
[439.30319214 -249.04550171]
[453.92874146 -245.68960571]
[468.29751587 -241.36433411]
[482.34527588 -236.08897400]
[496.00930786 -229.88710022]
[509.22860718 -222.78642273]
[521.94409180 -214.81864929]
[534.09899902 -206.01936340]
[545.63903809 -196.42785645]
[556.51269531 -186.08699036]
[566.67132568 -175.04292297]
[576.06958008 -163.34500122]
[584.66558838 -151.04545593]
[592.42077637 -138.19923401]
[599.30072021 -124.86370850]
[605.27453613 -111.09842682]
[610.31555176 -96.96488190]
[614.40130615 -82.52619171]
[617.51354980 -67.84684753]
[619.63836670 -52.99240494]
[620.76629639 -38.02921295]
[620.89221191 -23.02410126]
[620.01562500 -8.04408550]
[618.14050293 6.84393024]
[615.27508545 21.57345009]
[611.43225098 36.07868958]
[606.62915039 50.29486084]
[600.88726807 64.15847778]
[594.23217773 77.60761261]
[586.69366455 90.58219910]
[578.30535889 103.02429962]
[569.10473633 114.87833405]
[559.13293457 126.09135437]
[548.43444824 136.61329651]
[537.05700684 146.39715576]
[525.05151367 155.39923096]
[512.47155762 163.57933044]
[499.37332153 170.90089417]
[485.81530762 177.33125305]
[471.85806274 182.84167480]
[457.56393433 187.40754700]
[442.99676514 191.00846863]
[428.22161865 193.62835693]
[413.30444336 195.25553894]
[398.31192017 195.88270569]
[383.31097412 195.50709534]
[368.36862183 194.13035583]
[353.55160522 191.75865173]
[338.92608643 188.40257263]
[324.55737305 184.07711792]
[310.50967407 178.80157471]
[296.84570312 172.59954834]
[283.62649536 165.49870300]
[270.91110229 157.53076172]
[258.75631714 148.73132324]
[247.21640015 139.13967896]
[236.34291077 128.79866028]
[226.18440247 117.75447083]
[216.78627014 106.05643463]
[208.19046021 93.75678253]
[200.43536377 80.91046906]
[193.55564880 67.57485199]
[179.79554749 73.54640961]
[166.03544617 79.51797485]
[152.27532959 85.48954010]
[138.51522827 91.46109772]
[129.92024231 103.62561798]
[114.18054199 102.02178955]
[105.70242310 113.13993073]
[91.79102325 111.73831940]
[78.03091431 117.70987701]
[64.27081299 123.68144226]
[50.51071167 129.65299988]
[36.75060654 135.62457275]
[22.99050522 141.59613037]
[9.23040199 147.56768799]
[-4.43926811 153.74345398]
[-18.01547432 160.12207031]
[-12.65422630 174.13864136]
[-8.34278297 188.51287842]
[-5.10469294 203.16627502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 207]
[81 206]
[84 205]
[85 204]
[86 203]
[87 202]
[88 201]
[89 200]
[90 199]
[92 197]
[94 195]
[95 194]
[96 193]
[97 192]
[98 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
