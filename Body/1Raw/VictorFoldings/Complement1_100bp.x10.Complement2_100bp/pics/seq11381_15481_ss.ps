%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[70.15763092 546.75537109]
[70.52230835 531.71600342]
[73.64448547 516.99981689]
[79.41781616 503.10797119]
[87.64566803 490.51364136]
[98.04779816 479.64578247]
[110.26991272 470.87457275]
[123.89573669 464.49868774]
[120.13943481 449.97662354]
[116.38313293 435.45458984]
[112.62683105 420.93252563]
[108.87052917 406.41046143]
[105.11422729 391.88839722]
[101.91299438 406.54281616]
[94.92559052 419.81594849]
[84.65645599 430.74963379]
[71.84693146 438.55450439]
[57.42173386 442.66711426]
[42.42224503 442.79064941]
[27.93128014 438.91610718]
[14.99496174 431.32324219]
[4.54716969 420.56018066]
[-2.65785933 407.40390015]
[-6.09998846 392.80416870]
[-5.53072739 377.81497192]
[-0.99117136 363.51840210]
[7.19096518 350.94650269]
[18.42500687 341.00686646]
[31.89995766 334.41705322]
[46.64305115 331.65277100]
[61.58996582 332.91357422]
[75.66167450 338.10848999]
[87.84233093 346.86242676]
[97.25260162 358.54348755]
[103.21346283 372.30947876]
[96.24742126 359.14422607]
[104.79240417 345.82907104]
[105.68522644 330.85565186]
[106.57804108 315.88226318]
[107.47085571 300.90884399]
[100.50481415 287.74362183]
[109.04979706 274.42843628]
[108.60318756 259.43508911]
[106.82072449 244.54136658]
[105.03826141 229.64764404]
[92.95612335 225.95437622]
[83.13207245 217.93634033]
[77.04787445 206.75732422]
[75.63842010 194.06115723]
[79.14822388 181.73005676]
[87.08985138 171.60554504]
[98.31133270 165.21351624]
[89.46941376 153.22729492]
[95.94467163 138.79185486]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[88.69773865 64.14447021]
[87.13721466 49.22586823]
[75.97809601 34.57814789]
[83.74373627 18.84087563]
[81.96127319 3.94715738]
[80.17881012 -10.94655991]
[70.85643768 -23.72951889]
[77.02651978 -37.28604507]
[75.24405670 -52.17975998]
[71.11705780 -60.32872772]
[73.54763031 -67.30828094]
[71.98710632 -82.22688293]
[60.82799149 -96.87460327]
[68.59363556 -112.61187744]
[66.81116486 -127.50559235]
[65.02870178 -142.39930725]
[63.24623489 -157.29302979]
[61.46376801 -172.18675232]
[55.18578720 -158.56372070]
[43.96347427 -148.61083984]
[29.68799019 -144.00535583]
[14.76499939 -145.52336121]
[1.70929062 -152.90905762]
[-7.27902031 -164.91781616]
[-10.68524456 -179.52595520]
[-7.93537426 -194.27174377]
[0.50718969 -206.67025757]
[13.21972656 -214.63212585]
[28.05995178 -216.81564331]
[42.52702332 -212.85284424]
[54.18299103 -203.41151428]
[61.06405640 -190.08111572]
[62.17970657 -205.03956604]
[63.29535294 -219.99803162]
[64.41100311 -234.95648193]
[65.52664948 -249.91493225]
[58.83719254 -264.25234985]
[67.49967194 -276.36889648]
[68.61531830 -291.32736206]
[69.61958313 -306.29370117]
[70.51239777 -321.26712036]
[71.40521240 -336.24050903]
[57.71726608 -342.85174561]
[47.60499573 -354.20123291]
[42.61045456 -368.55819702]
[43.49526596 -383.73336792]
[50.12451172 -397.41259766]
[61.48727417 -407.50994873]
[75.85081482 -412.48559570]
[91.02479553 -411.58081055]
[104.69530487 -404.93359375]
[114.77767944 -393.55755615]
[119.73443604 -379.18746948]
[118.80970001 -364.01467896]
[112.14448547 -350.35293579]
[100.75520325 -340.28555298]
[86.37861633 -335.34768677]
[85.48580170 -320.37429810]
[84.59298706 -305.40087891]
[87.33278656 -298.53683472]
[83.57377625 -290.21170044]
[82.45812225 -275.25326538]
[89.22738647 -261.98574829]
[80.48510742 -248.79928589]
[79.36945343 -233.84083557]
[78.25380707 -218.88237000]
[77.13816071 -203.92391968]
[76.02250671 -188.96546936]
[76.35748291 -173.96920776]
[78.13995361 -159.07550049]
[79.92241669 -144.18177795]
[81.70487976 -129.28805542]
[83.48735046 -114.39434052]
[92.79972839 -106.67383575]
[94.40661621 -94.28022003]
[86.90570831 -83.78740692]
[88.46623230 -68.86879730]
[90.13777161 -53.96222687]
[91.92024231 -39.06850815]
[101.11511230 -27.35084915]
[95.07252502 -12.72902584]
[96.85498810 2.16469145]
[98.63745880 17.05840874]
[107.94982910 24.77891541]
[109.55672455 37.17252731]
[102.05581665 47.66534424]
[103.61634064 62.58395004]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[110.88484955 137.45362854]
[119.82249451 150.50848389]
[113.25151825 163.87528992]
[129.36283875 170.89373779]
[139.64785767 185.03335571]
[141.34614563 202.34577942]
[134.07960510 218.05279541]
[119.93197632 227.86518860]
[121.71443939 242.75889587]
[123.49691010 257.65261841]
[130.07035828 244.16967773]
[141.78901672 234.80628967]
[156.39021301 231.37039185]
[171.05465698 234.52539062]
[182.95088196 243.66210938]
[189.78192139 257.01638794]
[190.22882080 272.00973511]
[184.20526123 285.74716187]
[172.87431335 295.57617188]
[158.42379761 299.59896851]
[143.64390564 297.03878784]
[131.38836670 288.38998413]
[124.02320099 275.32125854]
[130.92538452 289.55749512]
[122.44425964 301.80166626]
[121.55144501 316.77505493]
[120.65863037 331.74847412]
[119.76581573 346.72189331]
[126.66799164 360.95812988]
[118.18687439 373.20230103]
[119.63629150 388.13211060]
[123.39259338 402.65414429]
[127.14888763 417.17620850]
[130.90519714 431.69827271]
[134.66149902 446.22033691]
[138.41780090 460.74240112]
[153.42619324 459.71166992]
[168.36842346 461.45654297]
[182.73554993 465.91754150]
[196.03822327 472.94274902]
[207.82336426 482.29287720]
[217.68957520 493.64950562]
[225.30082703 506.62576294]
[230.39785767 520.77972412]
[232.80709839 535.62933350]
[232.44647217 550.66876221]
[229.32826233 565.38580322]
[223.55867004 579.27917480]
[215.33421326 591.87573242]
[204.93502808 602.74639893]
[192.71527100 611.52093506]
[179.09117126 617.90045166]
[164.52674866 621.66772461]
[149.51806641 622.69439697]
[134.57630920 620.94549561]
[120.21038818 616.48065186]
[106.90961456 609.45184326]
[95.12699127 600.09851074]
[85.26383972 588.73925781]
[77.65608978 575.76092529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[35 180]
[37 178]
[38 177]
[39 176]
[40 175]
[42 173]
[43 160]
[44 159]
[45 158]
[52 153]
[54 151]
[55 150]
[56 149]
[57 147]
[58 146]
[59 145]
[60 144]
[62 141]
[63 140]
[64 139]
[66 137]
[67 136]
[69 135]
[70 134]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[96 120]
[97 119]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
