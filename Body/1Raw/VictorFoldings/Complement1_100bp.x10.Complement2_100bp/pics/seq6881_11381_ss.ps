%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[87.52198029 624.46234131]
[72.51686096 623.79168701]
[57.71413803 621.24560547]
[43.34725952 616.86425781]
[29.64281464 610.71679688]
[16.81694221 602.90008545]
[5.07192612 593.53753662]
[-5.40699911 582.77673340]
[-14.45456600 570.78735352]
[-21.92808151 557.75854492]
[-27.70967674 543.89575195]
[-31.70816612 529.41766357]
[-33.86049271 514.55261230]
[-34.13270569 499.53497314]
[-32.52051163 484.60165405]
[-29.04934311 469.98815918]
[-23.77394104 455.92495728]
[-16.77750778 442.63385010]
[-8.17038536 430.32449341]
[1.91167843 419.19097900]
[13.30967426 409.40890503]
[25.84384155 401.13256836]
[39.31649399 394.49246216]
[53.51515579 389.59335327]
[68.21588135 386.51248169]
[83.18683624 385.29843140]
[83.85662079 370.31341553]
[84.52640533 355.32836914]
[85.19618988 340.34332275]
[78.03491211 327.28326416]
[86.38069916 313.84234619]
[87.05049133 298.85729980]
[87.72027588 283.87225342]
[88.27848053 268.88265991]
[88.72509003 253.88929749]
[81.37015533 240.93730164]
[89.51490784 227.37361145]
[89.96151733 212.38026428]
[80.82283020 197.39855957]
[90.63064575 181.81369019]
[90.85397339 166.81535339]
[91.07730103 151.81701660]
[88.03372955 145.08213806]
[91.41725922 136.59747314]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[86.04970551 89.40501404]
[75.09715271 99.65400696]
[61.63664627 106.27326965]
[46.83264160 108.69018555]
[31.96583939 106.69565582]
[18.32236290 100.46223450]
[7.08250952 90.52917480]
[-0.78135878 77.75578308]
[-4.58893967 63.24708176]
[-4.01083946 48.25822449]
[0.90293014 34.08589935]
[9.72727966 21.95614624]
[21.69881439 12.91831684]
[35.78187561 7.75427103]
[50.75814056 6.91075087]
[65.33200836 10.46072960]
[78.24269867 18.09709740]
[88.37329865 29.15923309]
[94.84742737 42.69015121]
[97.10497284 57.51577377]
[101.93096924 43.31332016]
[95.19757080 29.26699829]
[100.29414368 14.93243694]
[113.72665405 8.59973335]
[118.55265045 -5.60272217]
[115.66671753 -21.15849113]
[127.08740997 -30.71971130]
[131.91340637 -44.92216873]
[136.73941040 -59.12462234]
[141.56539917 -73.32707977]
[146.39140320 -87.52953339]
[151.11154175 -101.76752472]
[155.72554016 -116.04026031]
[160.33955383 -130.31298828]
[164.84718323 -144.61967468]
[169.24818420 -158.95951843]
[173.64918518 -173.29937744]
[159.83483887 -179.17999268]
[146.71087646 -186.47239685]
[134.42108154 -195.09671021]
[123.10012054 -204.95843506]
[112.87201691 -215.94950867]
[103.84885406 -227.94950867]
[96.12947845 -240.82696533]
[89.79846954 -254.44078064]
[84.92520142 -268.64181519]
[81.56306458 -283.27444458]
[79.74889374 -298.17834473]
[79.50257111 -313.19024658]
[80.82678986 -328.14562988]
[83.70704651 -342.88070679]
[88.11177826 -357.23394775]
[93.99272919 -371.04815674]
[101.28546143 -384.17193604]
[109.91007233 -396.46151733]
[119.77206421 -407.78225708]
[130.76338196 -418.01007080]
[142.76361084 -427.03295898]
[155.64126587 -434.75201416]
[169.25523376 -441.08270264]
[183.45637512 -445.95562744]
[198.08908081 -449.31741333]
[212.99302673 -451.13119507]
[228.00492859 -451.37716675]
[242.96031189 -450.05258179]
[257.69528198 -447.17196655]
[272.04843140 -442.76687622]
[285.86248779 -436.88562012]
[298.98611450 -429.59255981]
[311.27548218 -420.96765137]
[322.59597778 -411.10537720]
[332.82354736 -400.11380005]
[341.84613037 -388.11337280]
[349.56488037 -375.23553467]
[355.89520264 -361.62139893]
[360.76779175 -347.42013550]
[364.12921143 -332.78735352]
[365.94265747 -317.88336182]
[366.18826294 -302.87145996]
[364.86331177 -287.91610718]
[361.98233032 -273.18118286]
[357.57690430 -258.82815552]
[351.69528198 -245.01423645]
[344.40191650 -231.89080811]
[335.77670288 -219.60163879]
[325.91415405 -208.28138733]
[314.92236328 -198.05409241]
[302.92169189 -189.03179932]
[290.04367065 -181.31336975]
[276.42938232 -174.98335266]
[262.22799683 -170.11111450]
[247.59513855 -166.75004578]
[232.69110107 -164.93696594]
[217.67918396 -164.69174194]
[202.72387695 -166.01704407]
[187.98902893 -168.89837646]
[183.58802795 -154.55853271]
[179.18702698 -140.21867371]
[180.22969055 -132.90194702]
[174.61228943 -125.69898224]
[169.99827576 -111.42624664]
[165.38427734 -97.15351105]
[166.31787109 -89.82206726]
[160.59385681 -82.70353699]
[155.76786804 -68.50108337]
[150.94186401 -54.29862595]
[146.11585999 -40.09616852]
[141.28987122 -25.89371490]
[144.52099609 -11.35380077]
[132.75511169 -0.77672440]
[127.92911530 13.42573166]
[134.72254944 26.63121605]
[130.03062439 41.10327530]
[116.13343048 48.13931656]
[111.30743408 62.34177017]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[106.41061401 137.04408264]
[106.07563782 152.04034424]
[105.85231018 167.03868103]
[105.62898254 182.03701782]
[114.03610229 191.81878662]
[113.54132080 204.30635071]
[104.95486450 212.82687378]
[104.50826263 227.82022095]
[111.83124542 241.84465027]
[103.71843719 254.33590698]
[103.27183533 269.32925415]
[106.14434814 278.00027466]
[102.70531464 284.54205322]
[102.03553009 299.52709961]
[101.36573792 314.51211548]
[108.47911072 328.64401245]
[100.18122864 341.01312256]
[99.51144409 355.99813843]
[98.84165955 370.98318481]
[98.17187500 385.96823120]
[112.97481537 388.51306152]
[127.34206390 392.89318848]
[141.04702759 399.03948975]
[153.87355042 406.85510254]
[165.61935425 416.21667480]
[176.09918213 426.97662354]
[185.14776611 438.96520996]
[192.62237549 451.99340820]
[198.40513611 465.85568237]
[202.40484619 480.33343506]
[204.55842590 495.19833374]
[204.83189392 510.21594238]
[203.22096252 525.14941406]
[199.75102234 539.76318359]
[194.47680664 553.82684326]
[187.48149109 567.11853027]
[178.87541199 579.42858887]
[168.79428101 590.56298828]
[157.39710999 600.34600830]
[144.86363220 608.62341309]
[131.39154053 615.26464844]
[117.19329834 620.16491699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 188]
[27 187]
[28 186]
[29 185]
[31 183]
[32 182]
[33 181]
[34 179]
[35 178]
[37 176]
[38 175]
[40 172]
[41 171]
[42 170]
[44 169]
[45 168]
[46 167]
[48 166]
[49 165]
[69 164]
[70 163]
[73 160]
[74 159]
[76 157]
[77 156]
[78 155]
[79 154]
[80 153]
[81 151]
[82 150]
[83 149]
[84 147]
[85 146]
[86 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
