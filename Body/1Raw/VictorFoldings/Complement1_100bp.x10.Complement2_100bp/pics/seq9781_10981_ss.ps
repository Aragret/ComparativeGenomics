%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[148.63897705 506.60958862]
[145.00222778 492.04324341]
[142.88249207 477.18017578]
[142.30226135 462.17794800]
[143.26765442 447.19555664]
[145.76847839 432.39184570]
[149.77818298 417.92373657]
[155.25428772 403.94458008]
[162.13874817 390.60260010]
[170.35856628 378.03921509]
[179.82661438 366.38760376]
[190.44253540 355.77130127]
[202.09378052 346.30279541]
[214.65684509 338.08248901]
[207.77743530 324.75305176]
[200.89802551 311.42361450]
[194.01860046 298.09420776]
[187.13919067 284.76477051]
[180.06208801 271.53924561]
[172.78886414 258.42053223]
[165.41816711 245.35635376]
[157.95042419 232.34741211]
[150.48268127 219.33845520]
[143.01493835 206.32949829]
[140.34739685 205.46792603]
[137.86039734 203.49777222]
[135.97790527 200.48254395]
[135.09307861 196.63786316]
[135.51641846 192.31642151]
[128.83622742 178.88604736]
[122.15602875 165.45567322]
[117.99380493 163.11367798]
[115.25861359 158.13214111]
[115.48358917 151.52449036]
[109.20623016 137.90118408]
[102.92887115 124.27786255]
[96.65151215 110.65454865]
[90.27290344 97.07833862]
[83.79341125 83.54999542]
[77.31391144 70.02165222]
[59.21819305 64.41279602]
[51.10774994 47.64575577]
[57.71348190 30.57297134]
[44.50875854 21.85828209]
[45.54726791 6.99992466]
[38.66785431 -6.32950449]
[31.78844070 -19.65893364]
[24.90902901 -32.98836136]
[19.32825279 -19.06518364]
[5.59168482 -13.03967857]
[-8.43174553 -18.36353302]
[-14.70877934 -31.98699951]
[-9.64364815 -46.10593796]
[3.86211228 -52.63238144]
[18.07106972 -47.82830429]
[12.40828323 -61.71833038]
[6.74549723 -75.60836029]
[1.08271050 -89.49838257]
[-4.58007622 -103.38841248]
[-5.63892221 -88.42583466]
[-9.95679569 -74.06073761]
[-17.32301712 -60.99403000]
[-27.37817383 -49.86326981]
[-39.63165283 -41.21154785]
[-53.48557663 -35.46100235]
[-68.26398468 -32.89221573]
[-83.24580383 -33.63051987]
[-97.70003510 -37.63989639]
[-110.92143250 -44.72471619]
[-122.26489258 -54.53929901]
[-131.17694092 -66.60476685]
[-137.22273254 -80.33241272]
[-140.10728455 -95.05244446]
[-139.68984985 -110.04663849]
[-135.99081421 -124.58338928]
[-129.19064331 -137.95341492]
[-119.62113953 -149.50436401]
[-107.74921417 -158.67265320]
[-94.15412903 -165.01092529]
[-79.49921417 -168.20991516]
[-64.49952698 -168.11357117]
[-49.88692474 -164.72654724]
[-36.37438965 -158.21414185]
[-24.62123299 -148.89410400]
[-15.20091343 -137.22116089]
[-8.57532215 -123.77108765]
[-8.57532215 -138.77108765]
[-8.57532215 -153.77108765]
[-8.57532215 -168.77108765]
[-8.57532215 -183.77108765]
[-23.33650017 -186.70262146]
[-37.24201965 -192.45785522]
[-49.75738525 -200.81559753]
[-60.40154266 -211.45458984]
[-68.76535797 -223.96589661]
[-74.52735138 -237.86862183]
[-77.46604156 -252.62837219]
[-77.46848297 -267.67782593]
[-74.53456879 -282.43853760]
[-68.77707672 -296.34310913]
[-60.41730881 -308.85714722]
[-49.77659607 -319.49957275]
[-37.26393509 -327.86135864]
[-23.36028099 -333.62109375]
[-8.60005188 -336.55740356]
[6.44940805 -336.55740356]
[21.20963669 -333.62109375]
[35.11329269 -327.86135864]
[47.62595367 -319.49957275]
[58.26666641 -308.85714722]
[66.62643433 -296.34310913]
[72.38391876 -282.43853760]
[75.31783295 -267.67782593]
[75.31539917 -252.62837219]
[72.37670898 -237.86862183]
[66.61471558 -223.96589661]
[58.25090027 -211.45458984]
[47.60674286 -200.81559753]
[35.09137344 -192.45785522]
[21.18585777 -186.70262146]
[6.42467833 -183.77108765]
[6.42467833 -168.77108765]
[6.42467833 -153.77108765]
[6.42467833 -138.77108765]
[6.42467833 -123.77108765]
[9.30995083 -109.05120087]
[14.97273731 -95.16117096]
[20.63552475 -81.27114868]
[26.29831123 -67.38111877]
[31.96109772 -53.49109268]
[38.23845673 -39.86777496]
[45.11787033 -26.53834724]
[51.99728394 -13.20891762]
[58.87669373 0.12051205]
[71.58935547 7.88179111]
[71.04290771 23.69355774]
[82.40529633 24.72434044]
[91.95801544 31.17888641]
[97.26309967 41.54951859]
[96.89962006 53.31254196]
[90.84225464 63.54215622]
[97.32175446 77.07050323]
[103.80124664 90.59884644]
[109.84662628 95.93044281]
[110.27482605 104.37718964]
[116.55218506 118.00050354]
[122.82954407 131.62382507]
[129.10690308 145.24713135]
[135.58639526 158.77548218]
[142.26660156 172.20585632]
[148.94679260 185.63623047]
[156.02389526 198.86175537]
[163.49163818 211.87071228]
[170.95938110 224.87966919]
[178.42712402 237.88862610]
[185.41351318 243.77319336]
[185.90754700 251.14730835]
[193.18078613 264.26602173]
[198.64212036 267.99230957]
[201.04158020 273.14395142]
[200.46862793 277.88534546]
[207.34803772 291.21478271]
[214.22744751 304.54421997]
[221.10685730 317.87362671]
[227.98626709 331.20306396]
[241.96469116 325.72512817]
[256.43228149 321.71353149]
[271.23565674 319.21075439]
[286.21792603 318.24340820]
[301.22024536 318.82165527]
[316.08358765 320.93945312]
[330.65039062 324.57431030]
[344.76626587 329.68768311]
[358.28152466 336.22537231]
[371.05294800 344.11810303]
[382.94509888 353.28216553]
[393.83197021 363.62045288]
[403.59811401 375.02337646]
[412.14004517 387.37002563]
[419.36715698 400.52954102]
[425.20288086 414.36239624]
[429.58535767 428.72198486]
[432.46810913 443.45608521]
[433.82058716 458.40850830]
[433.62841797 473.42074585]
[431.89370728 488.33364868]
[428.63479614 502.98916626]
[423.88626099 517.23187256]
[417.69839478 530.91088867]
[410.13684082 543.88110352]
[401.28170776 556.00506592]
[391.22692871 567.15429688]
[380.07901001 577.21057129]
[367.95620728 586.06726074]
[354.98696899 593.63049316]
[341.30880737 599.82019043]
[327.06668091 604.57055664]
[312.41162109 607.83142090]
[297.49893188 609.56811523]
[282.48672485 609.76220703]
[267.53414917 608.41168213]
[252.79965210 605.53088379]
[238.43948364 601.15032959]
[224.60585022 595.31640625]
[211.44538879 588.09100342]
[199.09762573 579.55072021]
[187.69343567 569.78601074]
[177.35371399 558.90051270]
[168.18807983 547.00958252]
[160.29368591 534.23919678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 158]
[20 157]
[21 155]
[22 154]
[23 153]
[24 152]
[29 151]
[30 150]
[31 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 143]
[39 142]
[40 141]
[43 136]
[45 134]
[46 133]
[47 132]
[48 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
