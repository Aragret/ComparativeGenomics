%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[98.11642456 401.95190430]
[84.55328369 408.76406860]
[69.44481659 410.21276855]
[54.83432770 406.10205078]
[42.69775391 396.98788452]
[34.67647171 384.10287476]
[31.85529327 369.18960571]
[34.61576080 354.26498413]
[42.58454514 341.34744263]
[54.68393326 332.18399048]
[69.27758026 328.01385498]
[62.70660400 314.64703369]
[71.64424133 301.59219360]
[72.98247528 286.65200806]
[70.44825745 279.70941162]
[74.45347595 271.49990845]
[76.01399994 256.58129883]
[77.57452393 241.66270447]
[68.02500153 230.28982544]
[69.39507294 215.13800049]
[81.38874054 205.19869995]
[75.01750946 191.73554993]
[84.14852142 178.81521606]
[77.77729034 165.35205078]
[86.90830231 152.43171692]
[88.46882629 137.51310730]
[90.02935028 122.59450531]
[91.58987427 107.67589569]
[81.10102081 118.39895630]
[66.50405884 121.85276031]
[52.32201767 116.96710205]
[42.94935226 105.25585938]
[41.29028702 90.34789276]
[47.85890198 76.86259460]
[60.61983871 68.97853088]
[75.61898041 69.13866425]
[88.20868683 77.29337311]
[94.48793030 90.91609955]
[98.02760315 76.33972168]
[97.01165771 67.26196289]
[101.73001099 61.57347107]
[105.48631287 47.05141068]
[95.65380096 58.37933350]
[83.34218597 66.94811249]
[69.30431366 72.23377228]
[54.39861298 73.91309357]
[39.53657150 71.88337708]
[25.62701035 66.26873779]
[13.52050209 57.41252899]
[3.95736647 45.85630035]
[-2.47760820 32.30672073]
[-5.39092064 17.59235382]
[-4.60442066 2.61298728]
[-0.16620289 -11.71538353]
[7.65233374 -24.51657486]
[18.37308311 -35.00778580]
[31.34046555 -42.54748154]
[45.76152420 -46.67459869]
[60.75440216 -47.13676453]
[75.40228271 -43.90571976]
[88.80944061 -37.17904663]
[100.15602112 -27.36807632]
[108.74817657 -15.07275867]
[114.06049347 -1.04495597]
[115.76812744 13.85752678]
[113.76663971 28.72342491]
[122.18125916 16.30592918]
[123.51761627 0.54126161]
[137.06248474 -5.65436554]
[145.47709656 -18.07186127]
[153.89172363 -30.48935699]
[162.21366882 -42.96915054]
[170.44247437 -55.51055145]
[161.96109009 -68.09394836]
[158.95164490 -82.92588043]
[161.84220886 -97.74000549]
[170.16172791 -110.28485107]
[182.61651611 -118.66598511]
[197.29122925 -121.63208771]
[211.94354248 -118.76170349]
[220.17234802 -131.30310059]
[228.40115356 -143.84449768]
[229.50265503 -159.62731934]
[242.95378113 -166.02392578]
[251.18258667 -178.56532288]
[259.41140747 -191.10671997]
[267.64019775 -203.64811707]
[275.86901855 -216.18952942]
[284.09780884 -228.73092651]
[272.30261230 -238.01287842]
[261.34899902 -248.27445984]
[251.31809998 -259.43966675]
[242.28413391 -271.42587280]
[234.31402588 -284.14431763]
[227.46675110 -297.50082397]
[221.79304504 -311.39654541]
[217.33488464 -325.72854614]
[214.12528992 -340.39071655]
[212.18800354 -355.27456665]
[211.53739929 -370.26983643]
[212.17828369 -385.26550293]
[214.10589600 -400.15060425]
[217.30598450 -414.81488037]
[221.75485229 -429.14974976]
[227.41954041 -443.04913330]
[234.25814819 -456.41009521]
[242.22000122 -469.13369751]
[251.24618530 -481.12576294]
[261.26986694 -492.29748535]
[272.21679688 -502.56616211]
[284.00598145 -511.85577393]
[296.55010986 -520.09753418]
[309.75628662 -527.23040771]
[323.52676392 -533.20159912]
[337.75958252 -537.96691895]
[352.34939575 -541.49102783]
[367.18811035 -543.74792480]
[382.16592407 -544.72082520]
[397.17193604 -544.40252686]
[412.09503174 -542.79541016]
[426.82470703 -539.91143799]
[441.25195312 -535.77185059]
[455.26992798 -530.40728760]
[468.77484131 -523.85760498]
[481.66671753 -516.17114258]
[493.85006714 -507.40493774]
[505.23477173 -497.62380981]
[515.73645020 -486.90020752]
[525.27740479 -475.31350708]
[533.78698730 -462.94949341]
[541.20220947 -449.89974976]
[547.46813965 -436.26083374]
[552.53839111 -422.13378906]
[556.37542725 -407.62313843]
[558.95086670 -392.83636475]
[560.24560547 -377.88293457]
[560.25006104 -362.87356567]
[558.96423340 -347.91937256]
[556.39758301 -333.13107300]
[552.56915283 -318.61813354]
[547.50732422 -304.48806763]
[541.24951172 -290.84542847]
[533.84210205 -277.79125977]
[525.33984375 -265.42221069]
[515.80578613 -253.82983398]
[505.31048584 -243.09999084]
[493.93161011 -233.31208801]
[481.75344849 -224.53860474]
[468.86614990 -216.84451294]
[455.36514282 -210.28675842]
[441.35037231 -204.91390991]
[426.92559814 -200.76573181]
[412.19763184 -197.87294006]
[397.27548218 -196.25697327]
[382.26968384 -195.92976379]
[367.29129028 -196.89375305]
[352.45120239 -199.14178467]
[337.85934448 -202.65724182]
[323.62368774 -207.41407776]
[309.84963989 -213.37709045]
[296.63922119 -220.50212097]
[288.41040039 -207.96072388]
[280.18161011 -195.41931152]
[271.95278931 -182.87791443]
[263.72399902 -170.33651733]
[255.49517822 -157.79512024]
[254.98226929 -142.90934753]
[240.94256592 -135.61569214]
[232.71376038 -123.07429504]
[224.48493958 -110.53289795]
[232.95121765 -98.23445892]
[236.07235718 -83.59191895]
[233.34230042 -68.83008575]
[225.14645386 -56.20409775]
[212.70759583 -47.65490341]
[197.90359497 -44.51093674]
[182.98387146 -47.28174210]
[174.75506592 -34.74034119]
[173.71392822 -27.42338753]
[166.30921936 -22.07473755]
[157.89459229 -9.65724277]
[149.47998047 2.76025271]
[148.74549866 17.63673782]
[134.59875488 24.72054672]
[126.18413544 37.13804245]
[120.00836945 50.80771255]
[116.25206757 65.32977295]
[112.60398102 79.87939453]
[109.06430817 94.45576477]
[106.50847626 109.23641968]
[104.94795227 124.15502930]
[103.38742828 139.07363892]
[101.82690430 153.99223328]
[108.08652496 168.52247620]
[99.06713104 180.37573242]
[105.32674408 194.90597534]
[96.30735016 206.75923157]
[105.98455048 218.96536255]
[104.18943787 234.07270813]
[92.49312592 243.22322083]
[90.93260193 258.14181519]
[89.37207794 273.06042480]
[87.92266083 287.99023438]
[86.58442688 302.93041992]
[93.05968475 317.36584473]
[84.21776581 329.35208130]
[97.83798218 336.04940796]
[108.11623383 347.21731567]
[113.66246033 361.34542847]
[113.72658539 376.52307129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[13 204]
[14 203]
[16 202]
[17 201]
[18 200]
[21 197]
[23 195]
[25 193]
[26 192]
[27 191]
[28 190]
[38 189]
[39 188]
[41 187]
[42 186]
[66 185]
[67 184]
[69 182]
[70 181]
[71 180]
[72 178]
[73 177]
[80 170]
[81 169]
[82 168]
[84 166]
[85 165]
[86 164]
[87 163]
[88 162]
[89 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
