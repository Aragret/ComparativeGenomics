%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[73.19357300 874.99798584]
[58.27882385 873.33740234]
[43.52744293 870.57989502]
[29.01999474 866.74047852]
[14.83571911 861.84008789]
[1.05208409 855.90557861]
[-12.25562668 848.96929932]
[-25.01473236 841.06915283]
[-37.15554428 832.24822998]
[-48.61175156 822.55480957]
[-59.32078934 812.04180908]
[-69.22415924 800.76660156]
[-78.26778412 788.79077148]
[-86.40225983 776.17974854]
[-93.58316040 763.00244141]
[-99.77127075 749.33074951]
[-104.93278503 735.23944092]
[-109.03952026 720.80535889]
[-112.06903839 706.10742188]
[-114.00479889 691.22589111]
[-114.83623505 676.24206543]
[-114.55879211 661.23773193]
[-113.17399597 646.29479980]
[-110.68940735 631.49505615]
[-107.11859131 616.91912842]
[-102.48105621 602.64678955]
[-96.80213165 588.75585938]
[-90.11283112 575.32232666]
[-82.44969177 562.41949463]
[-73.85456085 550.11779785]
[-64.37438965 538.48449707]
[-54.06095886 527.58312988]
[-42.97058868 517.47320557]
[-31.16385651 508.20989990]
[-18.70524788 499.84387207]
[-5.66280603 492.42080688]
[7.89223337 485.98123169]
[21.88583755 480.56033325]
[36.24157715 476.18768311]
[50.88104630 472.88720703]
[65.72428894 470.67691040]
[80.69023132 469.56884766]
[80.69023132 454.56884766]
[80.69023132 439.56884766]
[80.69023132 424.56884766]
[72.36127472 415.79644775]
[72.23851013 403.29971313]
[80.93314362 393.77258301]
[81.15647125 378.77423096]
[81.37979889 363.77590942]
[81.60312653 348.77755737]
[78.97856140 344.78750610]
[78.83266449 339.10632324]
[82.06303406 333.33776855]
[82.73281860 318.35272217]
[83.40260315 303.36767578]
[84.07238770 288.38262939]
[84.74217224 273.39761353]
[85.41195679 258.41256714]
[86.08174133 243.42752075]
[71.91645813 238.61897278]
[59.66772461 230.00505066]
[50.33312225 218.27684021]
[44.67583466 204.37950134]
[43.16226196 189.43611145]
[45.92357254 174.65682983]
[52.74438858 161.24098206]
[63.07954788 150.27970886]
[76.09768677 142.66719055]
[90.74809265 139.02775574]
[91.41787720 124.04271698]
[92.08766174 109.05767822]
[92.53427124 94.06432343]
[92.75759888 79.06598663]
[92.98092651 64.06764984]
[93.20425415 49.06931305]
[93.42758179 34.07097626]
[92.31192780 19.11252213]
[89.86620331 4.31325150]
[79.98234558 -8.04069233]
[85.54093933 -21.85920334]
[83.09521484 -36.65847397]
[73.21135712 -49.01242065]
[78.76995850 -62.83092880]
[76.32422638 -77.63020325]
[73.87850189 -92.42947388]
[63.99464417 -104.78341675]
[69.55323792 -118.60192871]
[54.52870178 -119.91115570]
[40.30205154 -124.91648102]
[27.76759148 -133.30325317]
[17.71324348 -144.54429626]
[10.77103519 -157.93296814]
[7.37735939 -172.62765503]
[7.74554491 -187.70463562]
[11.85244751 -202.21615601]
[19.43990326 -215.25000000]
[30.03096008 -225.98687744]
[42.95985413 -233.75183105]
[57.41386032 -238.05676270]
[72.48439789 -238.63105774]
[87.22410583 -235.43861389]
[100.70645142 -228.68011475]
[112.08390808 -218.78039551]
[120.64128113 -206.36178589]
[125.84065247 -192.20489502]
[127.35518646 -177.19966125]
[125.08967590 -162.28932190]
[119.18653107 -148.41114807]
[110.01682281 -136.43754578]
[98.15697479 -127.12116241]
[84.35250854 -121.04765320]
[94.06143188 -109.75225067]
[88.67777252 -94.87519836]
[91.12349701 -80.07592773]
[93.56922913 -65.27665710]
[103.27815247 -53.98125839]
[97.89448547 -39.10420227]
[100.34020996 -24.30493164]
[110.04913330 -13.00953007]
[104.66547394 1.86752415]
[107.11119843 16.66679573]
[113.07604980 2.90378070]
[124.36492920 -6.97352839]
[138.79812622 -11.05797863]
[153.58882141 -8.56092644]
[165.88116455 0.03548547]
[173.30169678 13.07142544]
[174.41763306 28.02985764]
[169.01348877 42.02254486]
[158.13273621 52.34771347]
[143.87626648 57.01174164]
[128.99678040 55.11407471]
[116.36728668 47.02112198]
[108.42591858 34.29430389]
[108.20259094 49.29264069]
[107.97926331 64.29097748]
[107.75593567 79.28931427]
[107.53260803 94.28765106]
[110.23906708 98.78087616]
[110.23539734 104.47062683]
[107.07270050 109.72746277]
[106.40291595 124.71250153]
[105.73313141 139.69754028]
[120.00041962 144.62951660]
[132.28749084 153.37309265]
[141.60351562 165.21270752]
[147.20022583 179.18357849]
[148.63198853 194.15028381]
[145.79127502 208.89904785]
[138.91668701 222.23625183]
[128.57296753 233.08489990]
[115.60457611 240.57170105]
[101.06678009 244.09730530]
[100.39699554 259.08233643]
[99.72721100 274.06738281]
[99.05742645 289.05242920]
[98.38764191 304.03747559]
[97.71785736 319.02249146]
[97.04807281 334.00753784]
[96.60146332 349.00088501]
[96.37813568 363.99923706]
[96.15480804 378.99755859]
[95.93148041 393.99591064]
[105.27091980 409.86587524]
[95.69023132 424.56884766]
[95.69023132 439.56884766]
[95.69023132 454.56884766]
[95.69023132 469.56884766]
[110.65617371 470.67691040]
[125.49941254 472.88720703]
[140.13888550 476.18768311]
[154.49462891 480.56033325]
[168.48822021 485.98123169]
[182.04325867 492.42080688]
[195.08570862 499.84387207]
[207.54431152 508.20989990]
[219.35104370 517.47320557]
[230.44142151 527.58312988]
[240.75485229 538.48449707]
[250.23501587 550.11779785]
[258.83013916 562.41949463]
[266.49328613 575.32232666]
[273.18258667 588.75585938]
[278.86151123 602.64678955]
[283.49905396 616.91912842]
[287.06985474 631.49505615]
[289.55444336 646.29479980]
[290.93923950 661.23773193]
[291.21670532 676.24206543]
[290.38525391 691.22589111]
[288.44949341 706.10742188]
[285.41998291 720.80535889]
[281.31323242 735.23944092]
[276.15173340 749.33074951]
[269.96362305 763.00244141]
[262.78271484 776.17974854]
[254.64823914 788.79077148]
[245.60461426 800.76660156]
[235.70124817 812.04180908]
[224.99221802 822.55480957]
[213.53599548 832.24822998]
[201.39518738 841.06915283]
[188.63609314 848.96929932]
[175.32836914 855.90557861]
[161.54473877 861.84008789]
[147.36045837 866.74047852]
[132.85301208 870.57989502]
[118.10163879 873.33740234]
[103.18688965 874.99798584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 169]
[43 168]
[44 167]
[45 166]
[48 164]
[49 163]
[50 162]
[51 161]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[70 144]
[71 143]
[72 142]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 122]
[79 121]
[81 119]
[82 118]
[84 116]
[85 115]
[86 114]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
