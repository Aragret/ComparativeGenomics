%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[97.49211121 750.89172363]
[82.72986603 748.20629883]
[68.15464020 744.64282227]
[53.81862259 740.21405029]
[39.77312088 734.93585205]
[26.06842041 728.82708740]
[12.75357723 721.90966797]
[-0.12374305 714.20837402]
[-12.51744270 705.75073242]
[-24.38315582 696.56701660]
[-35.67840576 686.69012451]
[-46.36275864 676.15545654]
[-56.39796448 665.00061035]
[-65.74810791 653.26562500]
[-74.37969971 640.99243164]
[-82.26186371 628.22497559]
[-89.36636353 615.00903320]
[-95.66778564 601.39184570]
[-101.14355469 587.42218018]
[-105.77407837 573.15008545]
[-109.54277802 558.62652588]
[-112.43616486 543.90362549]
[-114.44388580 529.03405762]
[-115.55873871 514.07104492]
[-115.77674103 499.06808472]
[-115.09712219 484.07897949]
[-113.52230072 469.15731812]
[-111.05791473 454.35656738]
[-107.71279144 439.72967529]
[-103.49890900 425.32904053]
[-98.43135071 411.20617676]
[-92.52824402 397.41165161]
[-85.81073761 383.99484253]
[-78.30287170 371.00378418]
[-70.03152466 358.48498535]
[-61.02629852 346.48327637]
[-51.31943893 335.04156494]
[-40.94569016 324.20086670]
[-29.94218636 313.99996948]
[-18.34832191 304.47537231]
[-6.20559645 295.66119385]
[6.44252110 287.58898926]
[19.55075264 280.28762817]
[33.07217407 273.78326416]
[46.95838547 268.09918213]
[61.15967178 263.25573730]
[75.62519836 259.27026367]
[90.30318451 256.15704346]
[105.14108276 253.92716980]
[103.80284882 238.98698425]
[102.46461487 224.04679871]
[101.12638092 209.10661316]
[92.28446198 197.12037659]
[98.75971985 182.68495178]
[95.03200531 176.30325317]
[97.51447296 167.51263428]
[88.85198975 155.39608765]
[95.54145050 141.05865479]
[94.42580414 126.10020447]
[93.31015778 111.14175415]
[91.74963379 96.22315216]
[89.74562073 81.35762024]
[87.74160767 66.49208832]
[85.73759460 51.62656403]
[74.14730835 37.31758499]
[81.44094849 21.35607719]
[79.21582794 6.52203417]
[69.51699829 -5.97769690]
[75.28072357 -19.71191788]
[65.58188629 -32.21164703]
[71.34561157 -45.94586945]
[69.12049103 -60.77991104]
[66.89537048 -75.61395264]
[64.67025757 -90.44799805]
[49.66102982 -89.95853424]
[34.69646454 -91.21487427]
[19.97894859 -94.20003510]
[5.70751381 -98.87364960]
[-7.92483330 -105.17250824]
[-20.73373222 -113.01142883]
[-32.54595566 -122.28439331]
[-43.20175552 -132.86599731]
[-52.55702591 -144.61314392]
[-60.48524857 -157.36695862]
[-66.87920380 -170.95497131]
[-71.65242004 -185.19340515]
[-74.74034119 -199.88970947]
[-76.10121155 -214.84512329]
[-75.71662140 -229.85740662]
[-73.59177399 -244.72352600]
[-69.75541687 -259.24243164]
[-64.25941467 -273.21780396]
[-57.17810059 -286.46057129]
[-48.60724640 -298.79171753]
[-38.66276169 -310.04443359]
[-27.47912788 -320.06655884]
[-15.20759678 -328.72253418]
[-2.01412606 -335.89532471]
[11.92285919 -341.48791504]
[26.41487503 -345.42465210]
[41.26593781 -347.65231323]
[56.27519989 -348.14080811]
[71.23967743 -346.88345337]
[85.95699310 -343.89730835]
[100.22811890 -339.22274780]
[113.86004639 -332.92297363]
[126.66841888 -325.08319092]
[138.48002625 -315.80944824]
[149.13511658 -305.22711182]
[158.48960876 -293.47933960]
[166.41697693 -280.72500610]
[172.81002808 -267.13656616]
[177.58229065 -252.89782715]
[180.66923523 -238.20132446]
[182.02909851 -223.24580383]
[181.64350891 -208.23355103]
[179.51766968 -193.36756897]
[175.68034363 -178.84892273]
[170.18341064 -164.87393188]
[163.10121155 -151.63160706]
[154.52954102 -139.30104065]
[144.58430481 -128.04899597]
[133.39999390 -118.02761841]
[121.12789154 -109.37245178]
[107.93393707 -102.20054626]
[93.99658203 -96.60889435]
[79.50430298 -92.67311859]
[81.72941589 -77.83907318]
[83.95453644 -63.00502777]
[86.17964935 -48.17098618]
[95.71932983 -36.73228455]
[90.11476135 -21.93703461]
[99.65444183 -10.49833393]
[94.04987335 4.29691696]
[96.27499390 19.13096046]
[105.81311035 26.57077980]
[107.78829193 38.91105652]
[100.60311890 49.62255096]
[102.60713196 64.48807526]
[104.61114502 79.35360718]
[106.61515808 94.21913147]
[108.87359619 96.26583099]
[110.43723297 99.17951965]
[110.98352814 102.70442963]
[110.28892517 106.46923828]
[108.26860809 110.02610779]
[109.38425446 124.98455811]
[110.49990845 139.94300842]
[119.24218750 153.12948608]
[112.47293091 166.39698792]
[113.69990540 181.34671021]
[122.63754272 194.40156555]
[116.06656647 207.76837158]
[117.40480042 222.70855713]
[118.74303436 237.64874268]
[120.08126831 252.58892822]
[135.07925415 252.14631653]
[150.07687378 252.60142517]
[165.02041626 253.95265198]
[179.85641479 256.19515991]
[194.53173828 259.32089233]
[208.99386597 263.31866455]
[223.19102478 268.17422485]
[237.07238770 273.87011719]
[250.58827209 280.38598633]
[263.69027710 287.69848633]
[276.33151245 295.78146362]
[288.46673584 304.60598755]
[300.05249023 314.14044189]
[311.04730225 324.35070801]
[321.41183472 335.20022583]
[331.10894775 346.65017700]
[340.10394287 358.65957642]
[348.36462402 371.18539429]
[355.86145020 384.18286133]
[362.56753540 397.60537720]
[368.45889282 411.40490723]
[373.51440430 425.53207397]
[377.71603394 439.93630981]
[381.04870605 454.56604004]
[383.50048828 469.36889648]
[385.06262207 484.29187012]
[385.72946167 499.28155518]
[385.49868774 514.28430176]
[384.37109375 529.24639893]
[382.35073853 544.11425781]
[379.44479370 558.83471680]
[375.66375732 573.35498047]
[371.02105713 587.62316895]
[365.53341675 601.58819580]
[359.22039795 615.20001221]
[352.10464478 628.40991211]
[344.21160889 641.17059326]
[335.56958008 653.43640137]
[326.20944214 665.16345215]
[316.16476440 676.30975342]
[305.47143555 686.83538818]
[294.16778564 696.70263672]
[282.29425049 705.87622070]
[269.89337158 714.32330322]
[257.00949097 722.01367188]
[243.68876648 728.91973877]
[229.97886658 735.01678467]
[215.92887878 740.28302002]
[201.58909607 744.69958496]
[187.01083374 748.25067139]
[172.24630737 750.92358398]
[157.34835815 752.70867920]
[142.37033081 753.59960938]
[127.36580658 753.59326172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 156]
[50 155]
[51 154]
[52 153]
[54 151]
[56 150]
[58 148]
[59 147]
[60 146]
[61 141]
[62 140]
[63 139]
[64 138]
[66 135]
[67 134]
[69 132]
[71 130]
[72 129]
[73 128]
[74 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
