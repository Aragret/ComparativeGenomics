%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[110.37238312 585.09826660]
[99.16235352 575.11987305]
[88.76978302 564.29266357]
[79.25875092 552.68341064]
[70.68788910 540.36370850]
[63.11005020 527.40954590]
[56.57194901 513.90075684]
[51.11389923 499.92065430]
[46.76954651 485.55538940]
[43.56568146 470.89355469]
[41.52205276 456.02554321]
[40.65126419 441.04302979]
[40.95867920 426.03836060]
[42.44240952 411.10409546]
[45.09329987 396.33227539]
[48.89501190 381.81396484]
[53.82410431 367.63870239]
[59.85018539 353.89385986]
[66.93610382 340.66421509]
[75.03817749 328.03131104]
[84.10644531 316.07302856]
[94.08499908 304.86309814]
[104.91232300 294.47061157]
[116.52165222 284.95971680]
[128.84141541 276.38897705]
[141.79566956 268.81127930]
[155.30451965 262.27331543]
[149.84916687 248.30050659]
[144.39379883 234.32771301]
[138.93844604 220.35491943]
[133.48309326 206.38211060]
[121.64685059 197.34039307]
[123.83531189 181.67127991]
[118.37995148 167.69847107]
[112.92459869 153.72567749]
[107.46923828 139.75288391]
[91.66071320 139.57949829]
[77.12615204 133.35968018]
[66.08597565 122.04358673]
[60.22674179 107.35995483]
[60.44356155 91.55196381]
[66.70330811 77.03456116]
[78.04969788 66.02552032]
[72.38691711 52.13549042]
[66.72412872 38.24546432]
[61.06134033 24.35543823]
[56.08149719 20.00656509]
[54.31121063 14.60627747]
[55.44353867 9.96657085]
[50.19682312 -4.08589983]
[44.95010376 -18.13837051]
[32.87451553 -28.36044312]
[35.67130280 -42.99011612]
[21.25137520 -38.83217239]
[6.55547142 -35.79027557]
[-8.33016777 -33.88227081]
[-23.31818771 -33.11935425]
[-38.32062912 -33.50600433]
[-53.24945068 -35.03995514]
[-68.01704407 -37.71220016]
[-82.53675079 -41.50706100]
[-96.72335052 -46.40226364]
[-110.49360657 -52.36908340]
[-123.76669312 -59.37250519]
[-136.46472168 -67.37142944]
[-148.51318359 -76.31890869]
[-159.84135437 -86.16244507]
[-170.38276672 -96.84426117]
[-180.07556152 -108.30168152]
[-188.86285400 -120.46746826]
[-196.69308472 -133.27021790]
[-203.52027893 -146.63479614]
[-209.30439758 -160.48278809]
[-214.01147461 -174.73291016]
[-217.61389160 -189.30155945]
[-220.09053040 -204.10321045]
[-221.42683411 -219.05102539]
[-221.61495972 -234.05726624]
[-220.65380859 -249.03387451]
[-218.54902649 -263.89297485]
[-215.31295776 -278.54733276]
[-210.96459961 -292.91101074]
[-205.52946472 -306.89962769]
[-199.03945923 -320.43118286]
[-191.53265381 -333.42620850]
[-183.05311584 -345.80844116]
[-173.65058899 -357.50524902]
[-163.38027954 -368.44799805]
[-152.30242920 -378.57241821]
[-140.48207092 -387.81915283]
[-127.98855591 -396.13388062]
[-114.89521027 -403.46783447]
[-101.27886963 -409.77801514]
[-87.21944427 -415.02731323]
[-72.79943848 -419.18499756]
[-58.10347748 -422.22659302]
[-43.21780396 -424.13433838]
[-28.22976875 -424.89697266]
[-13.22733498 -424.51004028]
[1.70145869 -422.97579956]
[16.46900177 -420.30328369]
[30.98863411 -416.50814819]
[45.17514420 -411.61267090]
[58.94528198 -405.64556885]
[72.21823883 -398.64190674]
[84.91611481 -390.64273071]
[96.96440125 -381.69503784]
[108.29239655 -371.85128784]
[118.83361053 -361.16925049]
[128.52618408 -349.71166992]
[137.31324768 -337.54571533]
[145.14323425 -324.74282837]
[151.97016907 -311.37811279]
[157.75402832 -297.52999878]
[162.46083069 -283.27978516]
[166.06297302 -268.71109009]
[168.53932190 -253.90937805]
[169.87535095 -238.96153259]
[170.06318665 -223.95529175]
[169.10176086 -208.97869873]
[166.99668884 -194.11964417]
[163.76034546 -179.46533203]
[159.41171265 -165.10176086]
[153.97631836 -151.11322021]
[147.48605347 -137.58180237]
[139.97900391 -124.58692932]
[131.49922180 -112.20483398]
[122.09648132 -100.50820160]
[111.82595825 -89.56566620]
[100.74792480 -79.44145203]
[88.92738342 -70.19495392]
[76.43371582 -61.88045120]
[63.34023285 -54.54673004]
[49.72377396 -48.23683167]
[61.42407990 -39.01988602]
[59.00257492 -23.38508987]
[64.24929047 -9.33261776]
[69.49600983 4.71985292]
[74.95137024 18.69265175]
[80.61415863 32.58267975]
[86.27693939 46.47270584]
[91.93972778 60.36273193]
[105.93733215 59.98963547]
[119.22338867 64.41148376]
[130.20567322 73.09835052]
[137.56802368 85.00917816]
[140.42813110 98.71654510]
[138.44323730 112.57772064]
[131.85119629 124.93154907]
[121.44203949 134.29751587]
[126.89739227 148.27032471]
[132.35275269 162.24311829]
[137.80810547 176.21591187]
[150.03454590 186.25706482]
[147.45588684 200.92675781]
[152.91123962 214.89955139]
[158.36660767 228.87236023]
[163.82196045 242.84515381]
[169.27731323 256.81796265]
[183.64244080 252.47315979]
[198.30416870 249.26884460]
[213.17211914 247.22476196]
[228.15461731 246.35351562]
[243.15927124 246.66046143]
[258.09359741 248.14373779]
[272.86550903 250.79417419]
[287.38391113 254.59544373]
[301.55932617 259.52410889]
[315.30435181 265.54977417]
[328.53424072 272.63528442]
[341.16738892 280.73696899]
[353.12594604 289.80487061]
[364.33618164 299.78308105]
[374.72897339 310.61007690]
[384.24026489 322.21911621]
[392.81137085 334.53863525]
[400.38946533 347.49264526]
[406.92785645 361.00128174]
[412.38616943 374.98129272]
[416.73083496 389.34646606]
[419.93499756 404.00823975]
[421.97891235 418.87619019]
[422.85000610 433.85870361]
[422.54290771 448.86337280]
[421.05947876 463.79766846]
[418.40890503 478.56954956]
[414.60748291 493.08792114]
[409.67868042 507.26330566]
[403.65286255 521.00823975]
[396.56723022 534.23803711]
[388.46542358 546.87115479]
[379.39739990 558.82958984]
[369.41906738 570.03973389]
[358.59194946 580.43243408]
[346.98281860 589.94354248]
[334.66323853 598.51452637]
[321.70913696 606.09252930]
[308.20040894 612.63073730]
[294.22036743 618.08892822]
[279.85513306 622.43347168]
[265.19332886 625.63745117]
[250.32534790 627.68127441]
[235.34284973 628.55218506]
[220.33818054 628.24493408]
[205.40390015 626.76135254]
[190.63203430 624.11059570]
[176.11369324 620.30902100]
[161.93838501 615.38012695]
[148.19349670 609.35418701]
[134.96376038 602.26837158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[33 153]
[34 152]
[35 151]
[36 150]
[43 142]
[44 141]
[45 140]
[46 139]
[49 138]
[50 137]
[51 136]
[53 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
