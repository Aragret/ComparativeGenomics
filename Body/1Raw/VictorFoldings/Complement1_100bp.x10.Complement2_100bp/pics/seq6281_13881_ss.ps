%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[28.91497612 349.28488159]
[34.88512421 363.17187500]
[36.49510956 378.20181274]
[33.60178375 393.03826904]
[26.46241188 406.36196899]
[15.71182537 416.98815918]
[2.30595803 423.97201538]
[-12.56314945 426.69250488]
[-27.57334518 424.90771484]
[-41.38993454 418.77639771]
[-52.78435516 408.84368896]
[-60.74341965 395.99282837]
[-64.55941772 381.36648560]
[-63.89303207 366.26525879]
[-58.80352020 352.03189087]
[-49.74343109 339.93206787]
[-37.51838684 331.04162598]
[-23.21542931 326.15115356]
[-8.10636616 325.69546509]
[-4.13426971 311.23095703]
[-0.16217354 296.76641846]
[3.80992270 282.30191040]
[7.78201866 267.83737183]
[-3.39507747 277.84100342]
[-17.78143692 282.08749390]
[-32.59927750 279.75692749]
[-44.98750687 271.29928589]
[-52.55415344 258.34759521]
[-53.83821487 243.40266418]
[-48.59175873 229.35009766]
[-37.82779694 218.90322876]
[-23.62467575 214.07917786]
[-8.72479916 215.80941772]
[3.99489951 223.75984192]
[12.07844734 236.39535522]
[13.96491528 251.27751160]
[20.44441032 237.74916077]
[26.92390633 224.22082520]
[33.40340424 210.69247437]
[39.88290024 197.16412354]
[46.36239624 183.63578796]
[45.54191208 180.20661926]
[46.34161377 176.20968628]
[49.01026154 172.41078186]
[53.44520569 169.65789795]
[60.52230835 156.43237305]
[67.59941864 143.20684814]
[67.98361206 135.82618713]
[74.88161469 129.83824158]
[82.15484619 116.71955109]
[89.42807007 103.60086060]
[96.60343933 90.42838287]
[103.68054199 77.20285797]
[91.24648285 85.59297180]
[76.84576416 89.79050446]
[61.85096741 89.39535522]
[47.69130707 84.44519806]
[35.71639252 75.41185760]
[27.06759071 63.15631485]
[22.56925392 48.84670258]
[22.65013504 33.84692001]
[27.30252457 19.58665276]
[36.08298492 7.42509413]
[48.15462112 -1.47859108]
[62.36684036 -6.27576065]
[77.36502075 -6.50917959]
[91.71964264 -2.15659881]
[104.06250000 6.36712074]
[113.21716309 18.24955177]
[118.31105804 32.35813904]
[118.85867310 47.34814072]
[114.80734253 61.79183578]
[118.69622040 46.45602036]
[133.07002258 42.55177307]
[143.39668274 31.67243958]
[153.72335815 20.79310417]
[164.05001831 9.91376972]
[174.37669373 -0.96556419]
[183.60379028 -12.79183388]
[191.64495850 -25.45435905]
[193.60365295 -34.37631989]
[199.90130615 -38.24430466]
[208.13011169 -50.78570557]
[216.35891724 -63.32710648]
[224.58772278 -75.86850739]
[232.81652832 -88.40990448]
[220.96205139 -97.61377716]
[209.87629700 -107.73040771]
[199.62934875 -118.69582367]
[190.28602600 -130.44070435]
[181.90536499 -142.89077759]
[174.54035950 -155.96736145]
[168.23757935 -169.58775330]
[163.03688049 -183.66584778]
[158.97113037 -198.11264038]
[156.06605530 -212.83679199]
[154.33999634 -227.74520874]
[153.80387878 -242.74362183]
[154.46109009 -257.73724365]
[156.30747986 -272.63122559]
[159.33137512 -287.33142090]
[163.51364136 -301.74493408]
[168.82785034 -315.78057861]
[175.24040222 -329.34960938]
[182.71076965 -342.36630249]
[191.19168091 -354.74829102]
[200.62956238 -366.41735840]
[210.96470642 -377.29965210]
[222.13179016 -387.32644653]
[234.06021118 -396.43429565]
[246.67456055 -404.56561279]
[259.89505005 -411.66903687]
[273.63812256 -417.69961548]
[287.81689453 -422.61923218]
[302.34170532 -426.39678955]
[317.12072754 -429.00839233]
[332.06054688 -430.43753052]
[347.06665039 -430.67517090]
[362.04421997 -429.71981812]
[376.89852905 -427.57751465]
[391.53567505 -424.26177979]
[405.86312866 -419.79360962]
[419.79028320 -414.20126343]
[433.22906494 -407.52005005]
[446.09457397 -399.79223633]
[458.30541992 -391.06665039]
[469.78439331 -381.39852905]
[480.45895386 -370.84893799]
[490.26162720 -359.48458862]
[499.13037109 -347.37734985]
[507.00915527 -334.60375977]
[513.84814453 -321.24456787]
[519.60418701 -307.38424683]
[524.24072266 -293.11041260]
[527.72863770 -278.51333618]
[530.04571533 -263.68527222]
[531.17736816 -248.72000122]
[531.11645508 -233.71212769]
[529.86334229 -218.75653076]
[527.42596436 -203.94776917]
[523.81970215 -189.37948608]
[519.06744385 -175.14376831]
[513.19909668 -161.33061218]
[506.25189209 -148.02738953]
[498.26965332 -135.31816101]
[489.30291748 -123.28330994]
[479.40835571 -111.99891663]
[468.64849854 -101.53633118]
[457.09140015 -91.96169281]
[444.81011963 -83.33554077]
[431.88232422 -75.71241760]
[418.38973999 -69.14051056]
[404.41763306 -63.66138077]
[390.05441284 -59.30966187]
[375.39083862 -56.11286545]
[360.51962280 -54.09120941]
[345.53479004 -53.25747299]
[330.53109741 -53.61692429]
[315.60339355 -55.16729355]
[300.84603882 -57.89878082]
[286.35238647 -61.79411316]
[272.21401978 -66.82866669]
[258.52032471 -72.97060394]
[245.35794067 -80.18109894]
[237.12911987 -67.63970184]
[228.90031433 -55.09829712]
[220.67150879 -42.55689621]
[212.44270325 -30.01549721]
[204.30747986 -17.41318512]
[196.26631165 -4.75066090]
[209.74635315 -11.33007526]
[224.73397827 -11.93926144]
[238.70350647 -6.47556114]
[249.30084229 4.14029646]
[254.74014282 18.11935234]
[254.10479736 33.10589218]
[247.50186157 46.57441711]
[236.04403687 56.25524521]
[221.66218567 60.51699066]
[206.77990723 58.64146805]
[193.90510559 50.94474030]
[185.20742798 38.72384262]
[182.15258789 24.03820610]
[185.25602722 9.36110401]
[174.92935181 20.24043846]
[164.60269165 31.11977386]
[154.27601624 41.99910736]
[143.94935608 52.87844086]
[140.79910278 67.43609619]
[125.68667603 72.11850739]
[116.90607452 84.27996063]
[109.82896423 97.50548553]
[109.10485077 105.53344727]
[102.54676819 110.87408447]
[95.27353668 123.99278259]
[88.00030518 137.11148071]
[80.82494354 150.28395081]
[73.74784088 163.50947571]
[66.67073059 176.73500061]
[59.89073944 190.11528015]
[53.41124344 203.64363098]
[46.93174744 217.17196655]
[40.45225143 230.70031738]
[33.97275543 244.22866821]
[27.49326134 257.75701904]
[22.24654198 271.80947876]
[18.27444649 286.27401733]
[14.30235004 300.73852539]
[10.33025455 315.20306396]
[6.35815811 329.66757202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 210]
[20 209]
[21 208]
[22 207]
[23 206]
[36 205]
[37 204]
[38 203]
[39 202]
[40 201]
[41 200]
[45 199]
[46 198]
[47 197]
[49 196]
[50 195]
[51 194]
[52 192]
[53 191]
[72 190]
[74 188]
[75 187]
[76 186]
[77 185]
[78 184]
[79 170]
[80 169]
[82 168]
[83 167]
[84 166]
[85 165]
[86 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
