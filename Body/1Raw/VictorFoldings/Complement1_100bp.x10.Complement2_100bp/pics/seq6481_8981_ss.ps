%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[96.04957581 761.16522217]
[86.91331482 749.23431396]
[79.61164093 736.10028076]
[74.30020905 722.04302979]
[71.09221649 707.36218262]
[70.05604553 692.37072754]
[71.21379089 677.38812256]
[74.54076385 662.73382568]
[79.96605682 648.72009277]
[87.37403107 635.64575195]
[96.60678101 623.78930664]
[107.46750641 613.40362549]
[119.72471619 604.71002197]
[133.11714172 597.89385986]
[147.35934448 593.10028076]
[137.48332214 581.95068359]
[142.64488220 566.99517822]
[139.97909546 552.23394775]
[137.31329346 537.47271729]
[134.64750671 522.71148682]
[131.98170471 507.95028687]
[129.31591797 493.18905640]
[118.75601959 488.86993408]
[111.51747894 479.89666748]
[109.48860931 468.42596436]
[113.28736115 457.28726196]
[122.07951355 449.28509521]
[119.85439301 434.45104980]
[117.62927246 419.61700439]
[108.08959961 408.17831421]
[113.69416046 393.38305664]
[111.46904755 378.54901123]
[109.24392700 363.71496582]
[106.03065491 349.06317139]
[101.84364319 334.65939331]
[97.65663147 320.25561523]
[93.46961975 305.85183716]
[90.63716125 320.58197021]
[83.82074738 333.94372559]
[73.55793762 344.88333130]
[60.65810776 352.53802490]
[46.13859177 356.30413818]
[31.14445686 355.88467407]
[16.85820580 351.31268311]
[4.40651083 342.94876099]
[-5.22863531 331.45248413]
[-11.28736496 317.73056030]
[-13.29186153 302.86508179]
[-11.08404160 288.02844238]
[-4.83802414 274.39074707]
[4.95360518 263.02746582]
[17.51863670 254.83479309]
[31.86614037 250.45881653]
[46.86461258 250.24465942]
[61.33120728 254.20919800]
[74.12503052 262.03976440]
[84.23711395 273.11883545]
[90.87105560 286.57595825]
[91.09438324 271.57763672]
[91.31771088 256.57928467]
[91.54103851 241.58094788]
[91.76436615 226.58261108]
[76.88934326 221.67750549]
[64.24248505 212.40428162]
[55.06889725 199.66102600]
[50.27632141 184.68814087]
[50.34533691 168.94766235]
[55.28120041 153.98046875]
[64.61215210 141.25546265]
[77.43447113 132.02537537]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[89.53043365 81.88945007]
[89.92986298 76.22045898]
[92.72998047 72.35155487]
[93.17658234 57.35820770]
[81.06984711 47.83281708]
[76.94164276 33.17637253]
[82.17337799 19.06634331]
[94.56218719 10.84105110]
[95.00879669 -4.15229845]
[84.70543671 -12.82729053]
[81.32890320 -25.66510391]
[85.89517975 -37.92198944]
[96.52722168 -45.20134354]
[89.41384888 -59.33324051]
[97.71173859 -71.70233154]
[98.38152313 -86.68737030]
[99.05130768 -101.67240906]
[96.34847260 -107.70616150]
[97.00063324 -113.35166931]
[99.97071075 -117.09167480]
[101.08635712 -132.05012512]
[102.20200348 -147.00859070]
[103.31765747 -161.96704102]
[103.87586975 -176.95664978]
[103.87586975 -191.95664978]
[90.10199738 -198.53260803]
[80.55207062 -210.43898010]
[77.12223053 -225.31173706]
[80.49347687 -240.19789124]
[89.99644470 -252.14176941]
[103.74430847 -258.77194214]
[119.00742340 -258.77194214]
[132.75529480 -252.14176941]
[142.25825500 -240.19789124]
[145.62950134 -225.31173706]
[142.19966125 -210.43898010]
[132.64973450 -198.53260803]
[118.87586975 -191.95664978]
[118.87586975 -176.95664978]
[131.16653442 -185.55545044]
[145.59497070 -181.45419312]
[151.52507019 -167.67617798]
[144.58537292 -154.37802124]
[129.89158630 -151.36265564]
[118.27610779 -160.85139465]
[117.16046143 -145.89292908]
[116.04480743 -130.93447876]
[114.92916107 -115.97602844]
[114.03634644 -101.00262451]
[113.36656189 -86.01758575]
[112.69677734 -71.03254700]
[119.85805511 -57.97247696]
[111.51226044 -44.53155899]
[123.38133240 -32.61669540]
[122.95219421 -15.46645641]
[110.00214386 -3.70569253]
[109.55553436 11.28765774]
[121.43280029 20.23576164]
[125.81542206 34.63217163]
[120.82216644 49.01691437]
[108.16993713 57.80481339]
[107.72332764 72.79816437]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[121.27353668 131.39639282]
[133.29357910 139.29266357]
[142.59042358 150.24455261]
[148.41705322 163.35821533]
[150.30921936 177.56669617]
[148.12240601 191.71672058]
[142.04278564 204.66229248]
[132.57145691 215.35754395]
[120.48311615 222.94119263]
[106.76270294 226.80593872]
[106.53937531 241.80427551]
[106.31604767 256.80261230]
[106.09272003 271.80096436]
[105.86939240 286.79928589]
[107.87340546 301.66482544]
[112.06041718 316.06860352]
[116.24742889 330.47238159]
[120.43444061 344.87615967]
[126.09897614 330.98684692]
[138.31190491 322.27798462]
[153.28894043 321.44812012]
[166.38925171 328.75439453]
[173.55360413 341.93286133]
[172.56201172 356.90005493]
[163.72174072 369.01821899]
[149.77204895 374.53240967]
[135.03540039 371.73397827]
[124.07797241 361.48983765]
[126.30309296 376.32388306]
[128.52821350 391.15792847]
[138.22703552 403.65765381]
[132.46331787 417.39187622]
[134.68843079 432.22592163]
[136.91355896 447.05996704]
[152.56724548 457.73126221]
[155.40129089 476.13998413]
[144.07713318 490.52325439]
[146.74291992 505.28448486]
[149.40872192 520.04571533]
[152.07450867 534.80694580]
[154.74031067 549.56811523]
[157.40611267 564.32934570]
[167.47279358 576.53479004]
[162.12055969 590.43450928]
[177.13977051 589.94360352]
[192.07040405 591.64483643]
[206.59419250 595.50189209]
[220.40158081 601.43267822]
[233.19825745 609.31066895]
[244.71145630 618.96801758]
[254.69577026 630.19879150]
[262.93838501 642.76373291]
[269.26364136 656.39489746]
[273.53665161 670.80181885]
[275.66638184 685.67736816]
[275.60742188 700.70452881]
[273.36102295 715.56286621]
[268.97509766 729.93585205]
[262.54312134 743.51696777]
[254.20214844 756.01684570]
[244.13002014 767.16894531]
[232.54139709 776.73565674]
[219.68330383 784.51300049]
[205.82980347 790.33520508]
[191.27618408 794.07824707]
[176.33265686 795.66223145]
[161.31776428 795.05352783]
[146.55151367 792.26495361]
[132.34867859 787.35601807]
[119.01198578 780.43145752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 184]
[17 182]
[18 181]
[19 180]
[20 179]
[21 178]
[22 177]
[27 174]
[28 173]
[29 172]
[31 170]
[32 169]
[33 168]
[34 158]
[35 157]
[36 156]
[37 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[71 140]
[72 139]
[74 137]
[77 136]
[78 135]
[82 131]
[83 130]
[87 127]
[89 125]
[90 124]
[91 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
