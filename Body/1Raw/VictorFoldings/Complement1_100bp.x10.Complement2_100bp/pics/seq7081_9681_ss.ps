%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[69.50720978 463.56164551]
[58.76476669 453.07202148]
[49.19817734 441.49996948]
[40.91584015 428.97659302]
[34.01160431 415.64376831]
[28.56369209 401.65261841]
[24.63383865 387.16165161]
[22.26657104 372.33505249]
[21.48871231 357.34082031]
[22.30907440 342.34884644]
[24.71836281 327.52902222]
[28.68927956 313.04925537]
[34.17683029 299.07357788]
[41.11883926 285.76040649]
[49.43664169 273.26055908]
[59.03599548 261.71566772]
[69.80813599 251.25656128]
[81.63099670 242.00172424]
[94.37062073 234.05603027]
[107.88266754 227.50950623]
[122.01401520 222.43635559]
[118.47434235 207.85998535]
[114.93466949 193.28359985]
[104.41252899 182.74160767]
[108.67477417 167.50534058]
[105.13510132 152.92895508]
[101.59542847 138.35258484]
[98.05575562 123.77620697]
[94.51608276 109.19983673]
[89.06072998 95.22703552]
[75.60238647 86.90936279]
[76.19805145 72.02667236]
[68.92481995 58.90798187]
[61.65158844 45.78928757]
[54.37836075 32.67059326]
[40.85516739 39.17069244]
[26.97690392 44.87348938]
[12.79053211 49.75968552]
[-1.65594673 53.81274796]
[-16.31365013 57.01896286]
[-31.13297844 59.36748505]
[-46.06378937 60.85036087]
[-61.05556488 61.46257401]
[-76.05757141 61.20206070]
[-91.01905060 60.06969452]
[-105.88937378 58.06930542]
[-120.61822510 55.20767212]
[-135.15576172 51.49446869]
[-149.45280457 46.94226074]
[-163.46098328 41.56645584]
[-177.13287354 35.38523865]
[-190.42222595 28.41952705]
[-203.28407288 20.69289398]
[-215.67489624 12.23147869]
[-227.55278015 3.06391597]
[-238.87750244 -6.77877569]
[-249.61076355 -17.26329041]
[-259.71624756 -28.35415459]
[-269.15975952 -40.01383591]
[-277.90933228 -52.20288467]
[-285.93539429 -64.88005066]
[-293.21075439 -78.00244904]
[-299.71078491 -91.52567291]
[-305.41351318 -105.40396118]
[-310.29965210 -119.59034729]
[-314.35266113 -134.03684998]
[-317.55880737 -148.69456482]
[-319.90728760 -163.51390076]
[-321.39010620 -178.44471741]
[-322.00225830 -193.43649292]
[-321.74166870 -208.43849182]
[-320.60925293 -223.39997864]
[-318.60879517 -238.27029419]
[-315.74710083 -252.99913025]
[-312.03384399 -267.53665161]
[-307.48156738 -281.83367920]
[-302.10571289 -295.84182739]
[-295.92443848 -309.51370239]
[-288.95867920 -322.80300903]
[-281.23196411 -335.66482544]
[-272.77050781 -348.05563354]
[-263.60290527 -359.93347168]
[-253.76016235 -371.25814819]
[-243.27560425 -381.99136353]
[-232.18469238 -392.09680176]
[-220.52497864 -401.54028320]
[-208.33589172 -410.28979492]
[-195.65869141 -418.31579590]
[-182.53625488 -425.59109497]
[-169.01301575 -432.09109497]
[-155.13470459 -437.79376221]
[-140.94828796 -442.67984009]
[-126.50177765 -446.73278809]
[-111.84404755 -449.93887329]
[-97.02469635 -452.28729248]
[-82.09387207 -453.77001953]
[-67.10209656 -454.38211060]
[-52.10009384 -454.12149048]
[-37.13862610 -452.98898315]
[-22.26831818 -450.98849487]
[-7.53948927 -448.12673950]
[6.99802351 -444.41339111]
[21.29503059 -439.86108398]
[35.30315399 -434.48516846]
[48.97499466 -428.30383301]
[62.26428986 -421.33801270]
[75.12607574 -413.61126709]
[87.51683044 -405.14974976]
[99.39463043 -395.98208618]
[110.71927643 -386.13931274]
[121.45245361 -375.65469360]
[131.55784607 -364.56375122]
[141.00126648 -352.90399170]
[149.75074768 -340.71487427]
[157.77668762 -328.03762817]
[165.05192566 -314.91516113]
[171.55186462 -301.39190674]
[177.25448608 -287.51358032]
[182.14050293 -273.32714844]
[186.19338989 -258.88061523]
[189.39941406 -244.22286987]
[191.74775696 -229.40350342]
[193.23045349 -214.47267151]
[193.84248352 -199.48089600]
[193.58177185 -184.47889709]
[192.44921875 -169.51742554]
[190.44865417 -154.64712524]
[187.58683777 -139.91830444]
[183.87344360 -125.38081360]
[179.32106018 -111.08382416]
[173.94508362 -97.07572174]
[167.76370239 -83.40390778]
[160.79782104 -70.11463928]
[153.07102966 -57.25288773]
[144.60946655 -44.86216736]
[135.44175720 -32.98440933]
[125.59891510 -21.65980339]
[115.11426544 -10.92666626]
[104.02327728 -0.82131934]
[92.36347961 8.62204552]
[80.17432404 17.37147522]
[67.49705505 25.39736366]
[74.77028656 38.51605988]
[82.04351044 51.63475418]
[89.31674194 64.75344849]
[102.25485229 72.13278198]
[102.17942047 87.95381165]
[101.87401581 72.95691681]
[106.15764618 58.58157349]
[114.62201691 46.19794083]
[126.46037292 36.98634720]
[140.54434204 31.82478905]
[155.53153992 31.20522690]
[169.99348450 35.18671799]
[182.55174255 43.38976669]
[192.00935364 55.03251266]
[197.46487427 69.00524902]
[198.39831543 83.97617340]
[194.72071838 98.51836395]
[186.78259277 111.24574280]
[175.34056091 120.94522095]
[161.48519897 126.69230652]
[146.53712463 127.93922424]
[131.92106628 124.56712341]
[119.03015900 116.89741516]
[109.09246063 105.66016388]
[112.63213348 120.23654175]
[116.17180634 134.81291199]
[119.71147919 149.38928223]
[123.25115204 163.96566772]
[134.02647400 175.55026245]
[129.51104736 189.74392700]
[133.05072021 204.32031250]
[136.59039307 218.89668274]
[151.47460938 216.92381287]
[166.48420715 216.54423523]
[181.44911194 217.76226807]
[196.19976807 220.56408691]
[210.56904602 224.91795349]
[224.39410400 230.77455139]
[237.51832581 238.06750488]
[249.79296875 246.71417236]
[261.07897949 256.61660767]
[271.24847412 267.66256714]
[280.18621826 279.72692871]
[287.79095459 292.67297363]
[293.97650146 306.35403442]
[298.67276001 320.61508179]
[301.82653809 335.29449463]
[303.40209961 350.22601318]
[303.38159180 365.24038696]
[301.76522827 380.16751099]
[298.57135010 394.83828735]
[293.83612061 409.08642578]
[287.61322021 422.75054932]
[279.97314453 435.67575073]
[271.00247192 447.71563721]
[260.80282593 458.73379517]
[249.48980713 468.60534668]
[237.19155884 477.21844482]
[224.04747009 484.47549438]
[210.20645142 490.29428101]
[195.82534790 494.60888672]
[181.06707764 497.37039185]
[166.09890747 498.54751587]
[151.09039307 498.12692261]
[136.21162415 496.11337280]
[121.63117981 492.52972412]
[107.51426697 487.41650391]
[94.02084351 480.83172607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 174]
[22 173]
[23 172]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 147]
[32 145]
[33 144]
[34 143]
[35 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
