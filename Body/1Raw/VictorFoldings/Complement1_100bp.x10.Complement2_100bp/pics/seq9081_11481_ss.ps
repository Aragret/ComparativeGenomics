%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[8.74320221 334.32775879]
[11.25972271 349.12796021]
[12.29009438 364.10516357]
[11.82407761 379.11056519]
[9.86630344 393.99496460]
[6.43622875 408.61047363]
[1.56794560 422.81182861]
[-4.69016266 436.45788574]
[-12.27589798 449.41299438]
[-21.11386871 461.54843140]
[-31.11623383 472.74359131]
[-42.18358612 482.88717651]
[-54.20592880 491.87838745]
[-67.06377411 499.62786865]
[-80.62934113 506.05859375]
[-94.76779175 511.10662842]
[-109.33860779 514.72186279]
[-124.19699097 516.86828613]
[-139.19525146 517.52465820]
[-154.18432617 516.68432617]
[-169.01525879 514.35577393]
[-183.54063416 510.56210327]
[-197.61608887 505.34097290]
[-211.10174561 498.74432373]
[-223.86355591 490.83767700]
[-235.77468872 481.69967651]
[-246.71676636 471.42108154]
[-256.58105469 460.10406494]
[-265.26947021 447.86111450]
[-272.69570923 434.81390381]
[-278.78594971 421.09210205]
[-283.47964478 406.83209229]
[-286.73016357 392.17559814]
[-288.50518799 377.26831055]
[-288.78707886 362.25833130]
[-287.57305908 347.29489136]
[-284.87515259 332.52667236]
[-280.72021484 318.10049438]
[-275.14950562 304.15966797]
[-268.21841431 290.84283447]
[-259.99578857 278.28228760]
[-250.56341553 266.60287476]
[-240.01499939 255.92065430]
[-228.45538330 246.34184265]
[-215.99945068 237.96159363]
[-202.77099609 230.86323547]
[-188.90151978 225.11727905]
[-174.52882385 220.78086853]
[-159.79579163 217.89706421]
[-144.84883118 216.49455261]
[-129.83650208 216.58728027]
[-114.90801239 218.17430115]
[-100.21172333 221.23985291]
[-85.89369202 225.75346375]
[-72.09623718 231.67028809]
[-58.95647430 238.93150330]
[-46.60500717 247.46496582]
[-35.16458130 257.18582153]
[-24.36242676 246.77845764]
[-13.56026936 236.37107849]
[-2.83589005 225.88357544]
[7.81011868 215.31652832]
[17.80829048 204.13456726]
[27.12317276 192.37730408]
[36.43805695 180.62005615]
[45.75294113 168.86280823]
[55.06782150 157.10556030]
[63.66638565 144.81471252]
[71.51814270 132.03387451]
[79.36989594 119.25302887]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[114.72867584 59.56578445]
[120.59763336 45.76160812]
[118.87667084 30.03427887]
[130.97686768 21.34897041]
[136.84582520 7.54479456]
[142.71479797 -6.25938272]
[148.37757874 -20.14941025]
[153.83293152 -34.12220764]
[159.28828430 -48.09500504]
[164.74365234 -62.06780243]
[170.19900513 -76.04060364]
[175.65435791 -90.01339722]
[162.26249695 -96.79671478]
[149.58784485 -104.84088135]
[137.74873352 -114.07079315]
[126.85572815 -124.40026093]
[117.01052856 -135.73284912]
[108.30505371 -147.96273804]
[100.82059479 -160.97573853]
[94.62702179 -174.65036011]
[89.78217316 -188.85891724]
[86.33127594 -203.46873474]
[84.30656433 -218.34341431]
[83.72693634 -233.34407043]
[84.59780121 -248.33062744]
[86.91103363 -263.16317749]
[90.64502716 -277.70321655]
[95.76492310 -291.81500244]
[102.22291565 -305.36672974]
[109.95870209 -318.23193359]
[118.90007019 -330.29043579]
[128.96351624 -341.42965698]
[140.05508423 -351.54562378]
[152.07121277 -360.54385376]
[164.89971924 -368.34033203]
[178.42080688 -374.86227417]
[192.50823975 -380.04876709]
[207.03047180 -383.85140991]
[221.85192871 -386.23468018]
[236.83421326 -387.17633057]
[251.83743286 -386.66757202]
[266.72152710 -384.71313477]
[281.34747314 -381.33129883]
[295.57876587 -376.55364990]
[309.28247070 -370.42474365]
[322.33068848 -363.00183105]
[334.60156250 -354.35421753]
[345.98052979 -344.56265259]
[356.36135864 -333.71856689]
[365.64709473 -321.92321777]
[373.75103760 -309.28668213]
[380.59753418 -295.92703247]
[386.12268066 -281.96893311]
[390.27484131 -267.54272461]
[393.01528931 -252.78314209]
[394.31842041 -237.82795715]
[394.17205811 -222.81683350]
[392.57757568 -207.88990784]
[389.54986572 -193.18655396]
[385.11718750 -178.84407043]
[379.32095337 -164.99635315]
[372.21524048 -151.77272034]
[363.86645508 -139.29661560]
[354.35250854 -127.68454742]
[343.76220703 -117.04492950]
[332.19448853 -107.47711182]
[319.75732422 -99.07041168]
[306.56686401 -91.90333557]
[292.74624634 -86.04280090]
[278.42449951 -81.54351807]
[263.73538208 -78.44750977]
[248.81602478 -76.78366852]
[233.80574036 -76.56755066]
[218.84466553 -77.80114746]
[204.07249451 -80.47296143]
[189.62716675 -84.55804443]
[184.17179871 -70.58524323]
[178.71644592 -56.61244583]
[173.26109314 -42.63964844]
[167.80572510 -28.66685104]
[162.35037231 -14.69405270]
[163.41349792 -10.03800201]
[161.56300354 -4.66466904]
[156.51896667 -0.39042175]
[150.65000916 13.41375542]
[144.78105164 27.21793175]
[146.92179871 41.95789337]
[134.40180969 51.63056564]
[128.53285217 65.43474579]
[141.41552734 57.75120544]
[156.41227722 57.43957901]
[169.60302734 64.58132172]
[177.53970337 77.30960083]
[178.14770508 92.29727173]
[171.26808167 105.62660217]
[158.69917297 113.81332397]
[143.72644043 114.71745300]
[130.26374817 108.10266113]
[121.83017731 95.69802856]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.15074158 127.10478973]
[84.29898071 139.88563538]
[76.44722748 152.66647339]
[90.77152252 148.21511841]
[105.01319122 152.92414856]
[113.86044312 165.03720093]
[114.01346588 180.03642273]
[105.41519165 192.32746887]
[91.27256775 197.32606506]
[76.86043549 193.16789246]
[67.55416870 181.40382385]
[66.82507324 166.42044067]
[57.51018906 178.17768860]
[48.19530869 189.93493652]
[38.88042450 201.69218445]
[29.56554222 213.44944763]
[44.31730270 210.73179626]
[57.89847946 217.09980774]
[65.24363708 230.17837524]
[63.61320496 245.08949280]
[53.61529922 256.27169800]
[38.97888947 259.55432129]
[25.16299438 253.71299744]
[17.32060242 240.92640686]
[18.37716675 225.96253967]
[7.73115778 236.52958679]
[3.84504795 244.79614258]
[-3.15289640 247.17323303]
[-13.95505238 257.58062744]
[-24.75720978 267.98797607]
[-15.46881676 279.78222656]
[-7.40092516 292.44271851]
[-0.63371909 305.84359741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 207]
[59 206]
[60 205]
[61 203]
[62 202]
[63 193]
[64 192]
[65 191]
[66 190]
[67 189]
[68 180]
[69 179]
[70 178]
[71 177]
[73 175]
[74 174]
[75 163]
[76 162]
[78 160]
[79 159]
[80 158]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
