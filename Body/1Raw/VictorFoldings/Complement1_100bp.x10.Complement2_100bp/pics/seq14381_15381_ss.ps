%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[18.65092850 718.72296143]
[4.25115919 722.93743896]
[-10.35890961 726.35223389]
[-25.13490677 728.95697021]
[-40.03195953 730.74383545]
[-55.00482178 731.70727539]
[-70.00801849 731.84448242]
[-84.99600220 731.15496826]
[-99.92323303 729.64080811]
[-114.74439240 727.30670166]
[-129.41445923 724.15960693]
[-143.88888550 720.20922852]
[-158.12371826 715.46740723]
[-172.07571411 709.94866943]
[-185.70249939 703.66967773]
[-198.96270752 696.64959717]
[-211.81605530 688.90966797]
[-224.22351074 680.47344971]
[-236.14739990 671.36651611]
[-247.55148315 661.61657715]
[-258.40115356 651.25317383]
[-268.66345215 640.30786133]
[-278.30722046 628.81384277]
[-287.30316162 616.80603027]
[-295.62396240 604.32086182]
[-303.24432373 591.39630127]
[-310.14114380 578.07153320]
[-316.29345703 564.38708496]
[-321.68258667 550.38452148]
[-326.29214478 536.10632324]
[-330.10815430 521.59588623]
[-333.11901855 506.89724731]
[-335.31561279 492.05508423]
[-336.69122314 477.11444092]
[-337.24169922 462.12072754]
[-336.96539307 447.11944580]
[-335.86309814 432.15615845]
[-333.93817139 417.27630615]
[-331.19647217 402.52511597]
[-327.64633179 387.94735718]
[-323.29852295 373.58728027]
[-318.16625977 359.48852539]
[-312.26510620 345.69390869]
[-305.61300659 332.24533081]
[-298.23013306 319.18362427]
[-290.13894653 306.54846191]
[-281.36401367 294.37820435]
[-271.93194580 282.70980835]
[-261.87142944 271.57873535]
[-251.21299744 261.01876831]
[-239.98902893 251.06201172]
[-228.23361206 241.73866272]
[-215.98242188 233.07704163]
[-203.27270508 225.10348511]
[-190.14303589 217.84217834]
[-176.63328552 211.31518555]
[-162.78450012 205.54231262]
[-148.63871765 200.54112244]
[-134.23892212 196.32678223]
[-119.62882996 192.91210938]
[-104.85281372 190.30744934]
[-89.95574951 188.52072144]
[-74.98287964 187.55735779]
[-59.97967529 187.42027283]
[-44.99170303 188.10989380]
[-30.06447983 189.62413025]
[-15.24334049 191.95837402]
[-0.57329452 195.10552979]
[13.90110493 199.05606079]
[28.13589859 203.79795837]
[42.08785629 209.31680298]
[48.36521530 195.69349670]
[54.64257812 182.07017517]
[60.91993713 168.44685364]
[67.19729614 154.82354736]
[60.70460892 139.30955505]
[67.57653809 123.59041595]
[84.00821686 117.58881378]
[90.08205414 103.87355042]
[95.01364899 89.70741272]
[98.76994324 75.18535614]
[102.52624512 60.66329575]
[106.28254700 46.14123917]
[110.03884888 31.61917877]
[113.79515076 17.09711838]
[117.55145264 2.57505989]
[119.44474030 -12.30497551]
[119.44474030 -27.30497551]
[119.44474030 -42.30497360]
[119.44474030 -57.30497360]
[111.70744324 -71.10514832]
[119.44474030 -83.83242035]
[119.44474030 -98.83242035]
[119.44474030 -113.83242035]
[104.86762238 -117.72728729]
[91.79576111 -125.26312256]
[81.12040710 -135.92611694]
[73.56944275 -148.98924255]
[69.65769196 -163.56182861]
[69.65186310 -178.65031433]
[73.55236053 -193.22593689]
[81.09323883 -206.29489136]
[91.76035309 -216.96612549]
[104.82639313 -224.51203918]
[119.40049744 -228.41816711]
[134.48898315 -228.41816711]
[149.06309509 -224.51203918]
[162.12913513 -216.96612549]
[172.79624939 -206.29489136]
[180.33712769 -193.22593689]
[184.23762512 -178.65031433]
[184.23179626 -163.56182861]
[180.32003784 -148.98924255]
[172.76907349 -135.92611694]
[162.09371948 -125.26312256]
[149.02186584 -117.72728729]
[134.44474792 -113.83242035]
[134.44474792 -98.83242035]
[134.44474792 -83.83242035]
[142.18203735 -71.10514832]
[134.44474792 -57.30497360]
[134.44474792 -42.30497360]
[134.44474792 -27.30497551]
[134.44474792 -12.30497551]
[141.56454468 -25.50756454]
[152.54067993 -35.73129272]
[166.21478271 -41.89723206]
[181.14381409 -43.35467148]
[195.75225830 -39.94980621]
[208.49847412 -32.04195786]
[218.03730774 -20.46566010]
[223.36210632 -6.44258881]
[223.91093445 8.54736805]
[219.62586975 22.92228317]
[210.95912170 35.16514206]
[198.82531738 43.98392105]
[184.50497437 48.44795609]
[169.50933838 48.08614731]
[155.42094421 42.93667603]
[143.72656250 33.54298019]
[135.66033936 20.89639854]
[132.07350159 6.33136034]
[128.31721497 20.85342026]
[124.56090546 35.37548065]
[120.80460358 49.89753723]
[117.04830933 64.41960144]
[113.29200745 78.94165802]
[109.53570557 93.46371460]
[120.82633972 83.58841705]
[135.39118958 80.00160980]
[149.97642517 83.50459290]
[161.32366943 93.31479645]
[166.89791870 107.24059296]
[165.45387268 122.17092133]
[157.31413269 134.77030945]
[144.29713440 142.22402954]
[129.31091309 142.86688232]
[115.70343781 136.55528259]
[106.51463318 124.69922638]
[103.79731750 109.94738770]
[97.72348785 123.66265106]
[103.98943329 135.58541870]
[102.26959229 148.74797058]
[93.41400909 158.37400818]
[80.82061768 161.10090637]
[74.54325104 174.72422791]
[68.26589203 188.34753418]
[61.98853302 201.97085571]
[55.71117020 215.59416199]
[68.97142792 222.61418152]
[81.82482910 230.35400391]
[94.23234558 238.79014587]
[106.15628815 247.89697266]
[117.56045532 257.64685059]
[128.41020203 268.01013184]
[138.67257690 278.95538330]
[148.31642151 290.44934082]
[157.31243896 302.45712280]
[165.63333130 314.94223022]
[173.25378418 327.86676025]
[180.15069580 341.19143677]
[186.30311584 354.87585449]
[191.69233704 368.87838745]
[196.30200195 383.15655518]
[200.11810303 397.66696167]
[203.12907410 412.36557007]
[205.32575989 427.20770264]
[206.70149231 442.14834595]
[207.25207520 457.14205933]
[206.97586060 472.14334106]
[205.87367249 487.10662842]
[203.94885254 501.98648071]
[201.20727539 516.73773193]
[197.65722656 531.31549072]
[193.30952454 545.67559814]
[188.17735291 559.77441406]
[182.27629089 573.56903076]
[175.62428284 587.01770020]
[168.24151611 600.07940674]
[160.15042114 612.71466064]
[151.37556458 624.88500977]
[141.94358826 636.55340576]
[131.88314819 647.68457031]
[121.22479248 658.24462891]
[110.00088501 668.20147705]
[98.24552917 677.52490234]
[85.99440765 686.18658447]
[73.28473663 694.16027832]
[60.15511703 701.42163086]
[46.64541626 707.94873047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[78 161]
[79 160]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 124]
[88 123]
[89 122]
[90 121]
[92 119]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
