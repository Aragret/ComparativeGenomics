%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[13.45503521 404.97396851]
[9.12720776 419.34533691]
[3.61198449 433.30416870]
[-3.05194998 446.75253296]
[-10.81785202 459.59609985]
[-19.63124657 471.74478149]
[-29.43031693 483.11337280]
[-40.14632416 493.62213135]
[-51.70410538 503.19732666]
[-64.02259064 511.77178955]
[-77.01537323 519.28540039]
[-90.59130859 525.68542480]
[-104.65517426 530.92700195]
[-119.10832977 534.97332764]
[-133.84938049 537.79608154]
[-148.77494812 539.37542725]
[-163.78030396 539.70025635]
[-178.76022339 538.76831055]
[-193.60963440 536.58618164]
[-208.22434998 533.16912842]
[-222.50189209 528.54107666]
[-236.34207153 522.73455811]
[-249.64784241 515.79028320]
[-262.32586670 507.75695801]
[-274.28720093 498.69091797]
[-285.44793701 488.65576172]
[-295.72982788 477.72189331]
[-305.06072998 465.96600342]
[-313.37518311 453.47055054]
[-320.61486816 440.32318115]
[-326.72900391 426.61611938]
[-331.67474365 412.44549561]
[-335.41732788 397.91070557]
[-337.93054199 383.11373901]
[-339.19677734 368.15838623]
[-339.20709229 353.14950562]
[-337.96148682 338.19238281]
[-335.46862793 323.39196777]
[-331.74606323 308.85205078]
[-326.81985474 294.67465210]
[-320.72460938 280.95916748]
[-313.50302124 267.80184937]
[-305.20578003 255.29495239]
[-295.89108276 243.52621460]
[-285.62426758 232.57820129]
[-274.47735596 222.52769470]
[-262.52850342 213.44520569]
[-249.86157227 205.39440918]
[-236.56536865 198.43182373]
[-222.73318481 192.60624695]
[-208.46205139 187.95855713]
[-193.85203552 184.52136230]
[-179.00566101 182.31875610]
[-164.02703857 181.36621094]
[-149.02124023 181.67039490]
[-134.09352112 183.22917175]
[-119.34858704 186.03160095]
[-104.88987732 190.05804443]
[-90.81880188 195.28024292]
[-77.23406219 201.66157532]
[-64.23094940 209.15728760]
[-51.90067291 217.71478271]
[-40.32971573 227.27404785]
[-29.84221649 216.54966736]
[-19.35471535 205.82528687]
[-8.86721325 195.10090637]
[1.62028754 184.37652588]
[12.10778904 173.65214539]
[12.43420601 170.14134216]
[14.47733498 166.61419678]
[18.22632408 163.87588501]
[23.31115723 162.69624329]
[34.26706696 152.45085144]
[45.22297668 142.20545959]
[56.10231018 131.87878418]
[66.90446472 121.47141266]
[70.70159912 107.06894684]
[86.00804138 103.06600952]
[90.06169128 89.68470001]
[103.58458710 86.13182831]
[114.38674164 75.72445679]
[118.39550018 67.51667786]
[125.42806244 65.24403381]
[136.38397217 54.99864197]
[147.26330566 44.67197418]
[158.06546021 34.26460266]
[162.63523865 19.11773109]
[177.16903687 15.85920143]
[187.97119141 5.45182800]
[198.77334595 -4.95554543]
[209.57550049 -15.36291885]
[199.99977112 -26.91789436]
[191.31431580 -39.15615845]
[183.56771851 -52.00927353]
[176.80331421 -65.40534973]
[171.05889893 -79.26947784]
[166.36663818 -93.52412415]
[162.75274658 -108.08956146]
[160.23745728 -122.88433838]
[158.83480835 -137.82571411]
[158.55265808 -152.83013916]
[159.39259338 -167.81369019]
[161.34989929 -182.69256592]
[164.41363525 -197.38357544]
[168.56668091 -211.80455017]
[173.78579712 -225.87483215]
[180.04180908 -239.51576233]
[187.29971313 -252.65101624]
[195.51892090 -265.20715332]
[204.65347290 -277.11398315]
[214.65229797 -288.30484009]
[225.45944214 -298.71722412]
[237.01451111 -308.29287720]
[249.25285339 -316.97821045]
[262.10601807 -324.72470093]
[275.50216675 -331.48898315]
[289.36636353 -337.23327637]
[303.62103271 -341.92541504]
[318.18649292 -345.53915405]
[332.98129272 -348.05432129]
[347.92269897 -349.45684814]
[362.92712402 -349.73886108]
[377.91067505 -348.89880371]
[392.78952026 -346.94134521]
[407.48049927 -343.87747192]
[421.90142822 -339.72430420]
[435.97167969 -334.50506592]
[449.61254883 -328.24896240]
[462.74774170 -320.99093628]
[475.30380249 -312.77160645]
[487.21054077 -303.63696289]
[498.40133667 -293.63803101]
[508.81362915 -282.83078003]
[518.38916016 -271.27563477]
[527.07440186 -259.03723145]
[534.82073975 -246.18397522]
[541.58496094 -232.78778076]
[547.32910156 -218.92353821]
[552.02111816 -204.66882324]
[555.63476562 -190.10331726]
[558.14978027 -175.30848694]
[559.55218506 -160.36709595]
[559.83404541 -145.36267090]
[558.99383545 -130.37913513]
[557.03625488 -115.50028229]
[553.97229004 -100.80933380]
[549.81896973 -86.38842773]
[544.59960938 -72.31823730]
[538.34338379 -58.67742538]
[531.08520508 -45.54229355]
[522.86578369 -32.98629379]
[513.73101807 -21.07964706]
[503.73202515 -9.88893890]
[492.92468262 0.52324557]
[481.36944580 10.09867764]
[469.13095093 18.78380585]
[456.27764893 26.53005981]
[442.88137817 33.29411697]
[429.01708984 39.03815460]
[414.76232910 43.73004150]
[400.19680786 47.34354401]
[385.40194702 49.85845566]
[370.46054077 51.26070404]
[355.45611572 51.54245377]
[340.47259521 50.70212555]
[325.59375000 48.74442291]
[310.90283203 45.68029022]
[296.48196411 41.52686691]
[282.41180420 36.30738068]
[268.77105713 30.05101585]
[255.63598633 22.79276657]
[243.08006287 14.57322121]
[231.17349243 5.43834972]
[219.98287964 -4.56076193]
[209.18072510 5.84661102]
[198.37855530 16.25398445]
[187.57640076 26.66135788]
[183.77926636 41.06382370]
[168.47283936 45.06675720]
[157.67066956 55.47413254]
[155.03480530 62.37876892]
[146.62936401 65.95455170]
[135.67344666 76.19994354]
[124.79411316 86.52661133]
[113.99195862 96.93399048]
[109.93830872 110.31529999]
[96.41541290 113.86817169]
[91.84563446 129.01504517]
[77.31183624 132.27357483]
[66.50968170 142.68093872]
[62.50092697 150.88873291]
[55.46836853 153.16136169]
[44.51245880 163.40675354]
[33.55654907 173.65214539]
[22.83216858 184.13964844]
[12.34466743 194.86402893]
[1.85716617 205.58840942]
[-8.63033485 216.31278992]
[-19.11783600 227.03717041]
[-29.60533714 237.76155090]
[-19.79005814 249.11614990]
[-10.95933914 261.25225830]
[-3.17512131 274.08471680]
[3.50799274 287.52355957]
[9.04312515 301.47451782]
[13.39145184 315.83969116]
[16.52246857 330.51837158]
[18.41421700 345.40756226]
[19.05342674 360.40280151]
[18.43561172 375.39898682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 200]
[64 199]
[65 198]
[66 197]
[67 196]
[68 195]
[72 194]
[73 193]
[74 192]
[75 190]
[76 189]
[78 187]
[80 185]
[81 184]
[83 183]
[84 182]
[85 180]
[86 179]
[88 177]
[89 176]
[90 175]
[91 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
