%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[47.24733353 660.68011475]
[33.41878891 667.36340332]
[18.10243797 666.22106934]
[5.41830111 657.56036377]
[-1.22165143 643.71093750]
[-0.03130589 628.39819336]
[8.66914082 615.74127197]
[22.53931236 609.14477539]
[23.65496063 594.18634033]
[24.77060890 579.22790527]
[25.88625717 564.26940918]
[27.00190735 549.31097412]
[28.11755562 534.35253906]
[18.42585373 525.86132812]
[15.34843063 513.14868164]
[20.22657585 500.80307007]
[31.48778343 493.41387939]
[32.82601929 478.47369385]
[34.16425323 463.53350830]
[22.71014977 473.21875000]
[7.71126080 473.40124512]
[-3.97512627 463.99761963]
[-7.00615168 449.30706787]
[0.00392823 436.04586792]
[13.85019970 430.27691650]
[28.20233345 434.63769531]
[36.49916840 447.13629150]
[39.38444138 432.41638184]
[32.81079483 416.14514160]
[45.02845001 402.36795044]
[47.69424438 387.60675049]
[50.36003876 372.84552002]
[53.02583313 358.08428955]
[55.69163132 343.32308960]
[58.13735962 328.52380371]
[60.36247635 313.68975830]
[47.20310211 306.61050415]
[37.24110794 295.43518066]
[31.69325066 281.49975586]
[31.24705505 266.47903442]
[35.97566223 252.18530273]
[45.32668686 240.34982300]
[58.18666458 232.41302490]
[73.01361847 229.34922791]
[75.23873138 214.51518250]
[69.47501373 200.78096008]
[79.17384338 188.28123474]
[73.41012573 174.54701233]
[83.10895538 162.04727173]
[85.33407593 147.21324158]
[76.30191040 135.42529297]
[78.34717560 120.34976196]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.28655243 71.93892670]
[97.84707642 57.02031708]
[99.40760040 42.10171509]
[93.14797974 27.57147789]
[102.16737366 15.71821690]
[90.43568420 8.10046291]
[83.16536713 -3.77213979]
[81.72663116 -17.55286217]
[86.34354401 -30.54644585]
[96.06138611 -40.23624802]
[108.94344330 -44.77164459]
[110.72590637 -59.66536331]
[112.50836945 -74.55908203]
[114.29084015 -89.45279694]
[116.07330322 -104.34651184]
[117.85576630 -119.24023438]
[119.63823700 -134.13394165]
[106.46053314 -139.93385315]
[95.46398163 -149.20252991]
[87.53444672 -161.18156433]
[83.30741119 -174.89469910]
[83.11705017 -189.22735596]
[86.96983337 -203.01725769]
[94.54470825 -215.14866638]
[105.21985626 -224.64263916]
[118.12372589 -230.73609924]
[132.20617676 -232.94303894]
[134.21018982 -247.80856323]
[136.21420288 -262.67410278]
[138.21821594 -277.53961182]
[132.39399719 -292.24978638]
[141.76229858 -303.82925415]
[143.43383789 -318.73583984]
[136.95858765 -333.17126465]
[145.80050659 -345.15750122]
[147.13874817 -360.09768677]
[148.47697449 -375.03787231]
[149.70394897 -389.98760986]
[150.37373352 -404.97262573]
[150.59706116 -419.97097778]
[150.82038879 -434.96929932]
[151.04371643 -449.96765137]
[136.78982544 -455.07696533]
[124.96878815 -464.53961182]
[116.86286926 -477.32916260]
[113.35134888 -492.05831909]
[114.81512451 -507.12936401]
[121.09541321 -520.90747070]
[131.51098633 -531.89813232]
[144.93202209 -538.90917969]
[159.90272522 -541.18005371]
[174.79916382 -538.46441650]
[188.00550842 -531.05694580]
[198.08923340 -519.76104736]
[203.95651245 -505.80203247]
[204.97091675 -490.69409180]
[201.02239990 -476.07601929]
[192.53929138 -463.53347778]
[180.44175720 -454.42697144]
[166.04205322 -449.74432373]
[165.81872559 -434.74597168]
[165.59539795 -419.74765015]
[165.37207031 -404.74929810]
[167.22549438 -402.64620972]
[168.35752869 -399.68225098]
[168.43612671 -396.12847900]
[167.23335266 -392.37112427]
[164.66239929 -388.87194824]
[167.29971313 -381.96786499]
[163.41716003 -373.69961548]
[162.07893372 -358.75942993]
[160.74069214 -343.81924438]
[167.31166077 -330.45245361]
[158.37402344 -317.39758301]
[160.34214783 -314.47204590]
[160.99101257 -310.44784546]
[159.81971741 -305.95550537]
[156.62783813 -301.82525635]
[162.59539795 -288.17834473]
[153.08374023 -275.53561401]
[151.07972717 -260.67007446]
[149.07571411 -245.80455017]
[147.07170105 -230.93902588]
[161.25843811 -224.30105591]
[172.71374512 -213.59069824]
[180.30804443 -199.84762573]
[183.28741455 -184.41133118]
[181.34843445 -168.79058838]
[174.66897583 -154.51597595]
[163.89201355 -142.98992920]
[150.06372070 -135.34893799]
[134.53195190 -132.35148621]
[132.74948120 -117.45776367]
[130.96702576 -102.56404877]
[129.18455505 -87.67033386]
[127.40209198 -72.77661133]
[125.61962128 -57.88289642]
[123.83715820 -42.98917770]
[137.00488281 -33.62309647]
[143.69096375 -18.80918312]
[141.98422241 -2.55175591]
[132.25631714 10.70204258]
[117.08598328 17.27873993]
[123.45721436 30.74189758]
[114.32620239 43.66223526]
[112.76567841 58.58084106]
[111.20515442 73.49944305]
[113.12949371 76.45397949]
[113.71837616 80.48737335]
[112.48032379 84.96180725]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[114.72925568 125.80710602]
[112.26136017 140.81922913]
[100.16812134 149.43835449]
[97.94300079 164.27239990]
[103.54756165 179.06764221]
[94.00788879 190.50634766]
[99.61244965 205.30158997]
[90.07277679 216.74029541]
[87.84766388 231.57434082]
[101.12316132 238.85353088]
[111.08850861 250.21415710]
[116.55546570 264.27233887]
[116.88219452 279.32437134]
[112.04855347 293.55310059]
[102.65620422 305.24749756]
[89.85380554 313.00811768]
[75.19651794 315.91488647]
[72.97140503 330.74893188]
[75.03185272 337.03112793]
[73.79589844 342.57815552]
[70.45285034 345.98889160]
[67.78705597 360.75009155]
[65.12125397 375.51132202]
[62.45545959 390.27252197]
[59.78966522 405.03375244]
[66.48937988 416.05538940]
[63.96514130 428.29516602]
[54.10433197 435.30166626]
[51.21906281 450.02154541]
[49.10443878 464.87176514]
[47.76620483 479.81195068]
[46.42796707 494.75213623]
[57.88871765 507.96841431]
[56.27683258 525.04815674]
[43.07600784 535.46813965]
[41.96036148 550.42663574]
[40.84471130 565.38507080]
[39.72906113 580.34350586]
[38.61341476 595.30200195]
[37.49776459 610.26043701]
[50.23594666 618.84149170]
[56.96258926 632.64898682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[17 200]
[18 199]
[19 198]
[27 197]
[28 196]
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 186]
[36 185]
[44 177]
[45 176]
[47 174]
[49 172]
[50 171]
[53 168]
[55 166]
[56 162]
[57 161]
[58 160]
[60 158]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 148]
[72 147]
[82 138]
[83 137]
[84 136]
[85 135]
[87 133]
[88 129]
[90 127]
[91 126]
[92 125]
[93 123]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
