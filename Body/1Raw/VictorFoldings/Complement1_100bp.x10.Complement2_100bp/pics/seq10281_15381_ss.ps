%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[97.75366974 209.69763184]
[103.85990143 223.43675232]
[107.62132263 237.99360657]
[108.93531036 252.97102356]
[107.76602173 267.96044922]
[104.14535522 282.55291748]
[98.17208099 296.35040283]
[90.00916290 308.97640991]
[79.87928772 320.08657837]
[68.05880737 329.37774658]
[54.87018967 336.59649658]
[40.67323303 341.54586792]
[25.85523796 344.09085083]
[10.82045174 344.16198730]
[-4.02096558 341.75735474]
[-18.26412964 336.94259644]
[-31.52047729 329.84899902]
[-43.42836380 320.67010498]
[-53.66293716 309.65631104]
[-61.94498444 297.10809326]
[-68.04856873 283.36779785]
[-71.80718231 268.81024170]
[-73.11828613 253.83255005]
[-71.94610596 238.84335327]
[-68.32263184 224.25157166]
[-62.34670258 210.45526123]
[-54.18135071 197.83081055]
[-44.04933548 186.72261047]
[-32.22706604 177.43370056]
[-19.03705597 170.21749878]
[-4.83914566 165.27085876]
[9.97933960 162.72874451]
[25.01413918 162.66049194]
[39.85509491 165.06797791]
[54.09732819 169.88549805]
[61.17443466 156.65997314]
[68.25154114 143.43444824]
[75.32864380 130.20890808]
[82.40575409 116.98338318]
[89.48285675 103.75785828]
[96.46131134 90.48001099]
[103.14150238 77.04963684]
[109.62100220 63.52128983]
[116.10049438 49.99294662]
[122.57999420 36.46459961]
[129.05949402 22.93625450]
[135.53898621 9.40790939]
[142.01847839 -4.12043667]
[128.77934265 -11.17700577]
[115.85604858 -18.79661751]
[103.27254486 -26.96516609]
[91.05210876 -35.66752243]
[79.21739197 -44.88756943]
[67.79029083 -54.60823822]
[56.79198456 -64.81153107]
[46.24282455 -75.47853851]
[36.16235352 -86.58953094]
[26.56923676 -98.12390900]
[17.48123550 -110.06033325]
[8.91518116 -122.37668610]
[0.88693631 -135.05017090]
[-6.58863354 -148.05731201]
[-13.49768448 -161.37403870]
[-19.82742310 -174.97566223]
[-25.56612968 -188.83702087]
[-30.70317268 -202.93243408]
[-35.22904587 -217.23579407]
[-39.13536072 -231.72064209]
[-42.41489410 -246.36012268]
[-45.06156158 -261.12716675]
[-47.07046890 -275.99438477]
[-48.43789673 -290.93426514]
[-49.16130829 -305.91912842]
[-49.23936462 -320.92126465]
[-48.67192841 -335.91287231]
[-47.46004105 -350.86614990]
[-45.60594940 -365.75347900]
[-43.11309052 -380.54724121]
[-39.98608017 -395.22006226]
[-36.23070145 -409.74478149]
[-31.85391808 -424.09445190]
[-26.86382866 -438.24258423]
[-21.26967621 -452.16290283]
[-15.08182049 -465.82965088]
[-8.31171799 -479.21755981]
[-0.97190595 -492.30178833]
[6.92402363 -505.05810547]
[15.36144924 -517.46295166]
[24.32474709 -529.49328613]
[33.79731750 -541.12689209]
[43.76162338 -552.34216309]
[54.19920731 -563.11834717]
[65.09074402 -573.43554688]
[76.41606903 -583.27459717]
[88.15420532 -592.61730957]
[100.28341675 -601.44635010]
[112.78124237 -609.74542236]
[125.62454224 -617.49908447]
[138.78953552 -624.69305420]
[152.25183105 -631.31396484]
[165.98651123 -637.34954834]
[179.96813965 -642.78863525]
[194.17083740 -647.62121582]
[208.56828308 -651.83825684]
[223.13381958 -655.43200684]
[237.84048462 -658.39575195]
[252.66104126 -660.72406006]
[267.56805420 -662.41259766]
[282.53390503 -663.45825195]
[297.53088379 -663.85900879]
[312.53118896 -663.61425781]
[327.50711060 -662.72436523]
[342.43087769 -661.19097900]
[357.27487183 -659.01696777]
[372.01156616 -656.20635986]
[386.61370850 -652.76434326]
[401.05422974 -648.69732666]
[415.30642700 -644.01275635]
[429.34387207 -638.71942139]
[443.14059448 -632.82702637]
[456.67105103 -626.34649658]
[469.91015625 -619.28991699]
[482.83343506 -611.67022705]
[495.41690063 -603.50164795]
[507.63732910 -594.79925537]
[519.47198486 -585.57916260]
[530.89904785 -575.85845947]
[541.89733887 -565.65515137]
[552.44647217 -554.98809814]
[562.52691650 -543.87707520]
[572.11999512 -532.34265137]
[581.20794678 -520.40618896]
[589.77392578 -508.08981323]
[597.80218506 -495.41629028]
[605.27770996 -482.40914917]
[612.18670654 -469.09240723]
[618.51635742 -455.49075317]
[624.25506592 -441.62936401]
[629.39202881 -427.53393555]
[633.91784668 -413.23056030]
[637.82415771 -398.74569702]
[641.10363770 -384.10620117]
[643.75024414 -369.33917236]
[645.75909424 -354.47195435]
[647.12646484 -339.53204346]
[647.84985352 -324.54718018]
[647.92785645 -309.54504395]
[647.36035156 -294.55346680]
[646.14843750 -279.60015869]
[644.29425049 -264.71282959]
[641.80139160 -249.91908264]
[638.67431641 -235.24627686]
[634.91888428 -220.72157288]
[630.54205322 -206.37190247]
[625.55187988 -192.22381592]
[619.95770264 -178.30351257]
[613.76983643 -164.63676453]
[606.99963379 -151.24890137]
[599.65979004 -138.16468811]
[591.76385498 -125.40837860]
[583.32635498 -113.00357819]
[574.36303711 -100.97325897]
[564.89044189 -89.33970642]
[554.92608643 -78.12445831]
[544.48846436 -67.34828186]
[533.59686279 -57.03113174]
[522.27154541 -47.19211578]
[510.53335571 -37.84945297]
[498.40411377 -29.02044296]
[485.90625000 -20.72143555]
[473.06292725 -12.96779728]
[459.89791870 -5.77388716]
[446.43560791 0.84697306]
[432.70089722 6.88252354]
[418.71923828 12.32158756]
[404.51654053 17.15409279]
[390.11907959 21.37109184]
[375.55352783 24.96477318]
[360.84686279 27.92848587]
[346.02630615 30.25673866]
[331.11929321 31.94522285]
[316.15344238 32.99080658]
[301.15646362 33.39155960]
[286.15612793 33.14673996]
[271.18020630 32.25679398]
[256.25643921 30.72337723]
[241.41249084 28.54932404]
[226.67579651 25.73866463]
[212.07366943 22.29660034]
[197.63314819 18.22950554]
[183.38096619 13.54491329]
[169.34353638 8.25149727]
[155.54682922 2.35905933]
[149.06732178 15.88740444]
[142.58782959 29.41575050]
[136.10833740 42.94409561]
[129.62884521 56.47244263]
[123.14934540 70.00078583]
[116.66985321 83.52912903]
[117.38372803 88.25135803]
[115.13871002 93.47217560]
[109.79074097 97.35942841]
[109.18622589 105.39727783]
[102.70838165 110.83496094]
[95.63127899 124.06049347]
[88.55417633 137.28602600]
[81.47706604 150.51155090]
[74.39996338 163.73707581]
[67.32286072 176.96260071]
[79.23251343 186.13920593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 209]
[36 208]
[37 207]
[38 206]
[39 205]
[40 204]
[41 202]
[42 199]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
