%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[99.60265350 584.35821533]
[84.74828339 581.42108154]
[71.65368652 573.81781006]
[61.73926926 562.37304688]
[56.08047104 548.32818604]
[55.29111481 533.20684814]
[59.45682526 518.64916992]
[68.12573242 506.23431396]
[80.35751343 497.30892944]
[94.82533264 492.84118652]
[95.27194214 477.84783936]
[87.91700745 464.89584351]
[96.06175995 451.33215332]
[96.50836945 436.33880615]
[96.95497131 421.34545898]
[97.40158081 406.35211182]
[97.62490845 391.35379028]
[97.62490845 376.35379028]
[97.62490845 361.35379028]
[97.62490845 346.35379028]
[97.62490845 331.35379028]
[97.62490845 316.35379028]
[83.43750000 308.61880493]
[75.03843689 294.70434570]
[74.80119324 278.35931396]
[82.88522339 264.04342651]
[97.16654968 255.71063232]
[96.94322205 240.71229553]
[96.49661255 225.71894836]
[95.82682800 210.73391724]
[95.15704346 195.74887085]
[94.48725891 180.76383972]
[93.81747437 165.77879333]
[90.96006775 161.95201111]
[90.47628021 156.28959656]
[93.35756683 150.33898926]
[93.13423920 135.34065247]
[92.91091156 120.34231567]
[92.68758392 105.34397888]
[90.32894897 102.29287720]
[89.32663727 98.21694183]
[90.10820007 93.74523163]
[92.80423737 89.67445374]
[93.25084686 74.68110657]
[93.69744873 59.68775558]
[94.14405823 44.69440842]
[91.35168457 38.70156097]
[91.91972351 33.04697418]
[94.83378601 29.26315880]
[95.72660065 14.28975296]
[87.70012665 26.96159935]
[75.86608124 36.17871857]
[61.61470795 40.85829163]
[46.62025070 40.45056534]
[32.64424133 35.00344086]
[21.32856560 25.15683937]
[14.00258255 12.06753254]
[11.52693844 -2.72676325]
[14.19246960 -17.48802757]
[21.68603134 -30.48212433]
[33.12728882 -40.18251801]
[47.17213440 -45.44961548]
[62.17059326 -45.66464233]
[76.36066437 -40.80234146]
[88.07530212 -31.43392944]
[95.93829346 -18.65999794]
[99.02595520 -3.97964668]
[103.42695618 -18.31949425]
[107.82794952 -32.65933990]
[112.22895050 -46.99918747]
[116.62995148 -61.33903503]
[121.03094482 -75.67887878]
[125.43194580 -90.01873016]
[116.66796875 -98.93279266]
[112.54946899 -110.65910339]
[113.80011749 -122.95200348]
[120.12153625 -133.48484802]
[130.26145935 -140.29035950]
[142.26139832 -142.12797546]
[147.08738708 -156.33042908]
[151.91339111 -170.53288269]
[156.73937988 -184.73533630]
[161.56538391 -198.93778992]
[163.23692322 -213.84436035]
[161.67640686 -228.76296997]
[160.11587524 -243.68157959]
[158.55535889 -258.60018921]
[149.42434692 -271.52050781]
[155.79557800 -284.98367310]
[154.23504639 -299.90228271]
[139.31507874 -302.10345459]
[125.41157532 -307.94668579]
[113.39852142 -317.06466675]
[104.03108215 -328.88421631]
[97.89808655 -342.66238403]
[95.38507080 -357.53298950]
[96.65000153 -372.56134033]
[101.61336517 -386.80267334]
[109.96315765 -399.36181641]
[121.17450714 -409.44924927]
[134.54266357 -416.43090820]
[149.22727966 -419.86788940]
[164.30526733 -419.54412842]
[178.82882690 -415.48004150]
[191.88499451 -407.93103027]
[202.65304565 -397.37167358]
[210.45606995 -384.46572876]
[214.80360413 -370.02447510]
[215.42231750 -354.95568848]
[212.27334595 -340.20663452]
[205.55461121 -326.70443726]
[195.68849182 -315.29785156]
[183.29515076 -306.70388794]
[169.15365601 -301.46279907]
[170.71417236 -286.54418945]
[179.73358154 -274.69094849]
[173.47395325 -260.16070557]
[175.03448486 -245.24209595]
[176.59500122 -230.32350159]
[178.15553284 -215.40489197]
[183.36442566 -229.47142029]
[191.26287842 -242.22346497]
[201.53631592 -253.15307617]
[213.77552795 -261.82498169]
[227.49304199 -267.89373779]
[242.14248657 -271.11764526]
[257.14038086 -271.36828613]
[271.88940430 -268.63571167]
[285.80203247 -263.02874756]
[298.32418823 -254.77067566]
[308.95712280 -244.19046021]
[317.27728271 -231.70948792]
[322.95333862 -217.82487488]
[325.75915527 -203.08963013]
[325.58300781 -188.09066772]
[322.43194580 -173.42538452]
[316.43139648 -159.67788696]
[307.82043457 -147.39573669]
[296.94198608 -137.06813049]
[284.22937012 -129.10639954]
[270.18887329 -123.82768250]
[255.37977600 -121.44220734]
[240.39189148 -122.04499054]
[225.82218933 -125.61203003]
[212.25097656 -132.00125122]
[200.21878052 -140.95816040]
[190.20484924 -152.12602234]
[182.60803223 -165.06001282]
[177.73089600 -179.24499512]
[175.76783752 -194.11180115]
[170.94183350 -179.90933228]
[166.11584473 -165.70687866]
[161.28984070 -151.50442505]
[156.46385193 -137.30197144]
[167.31134033 -123.36627960]
[167.62474060 -105.55188751]
[157.08979797 -90.98841095]
[139.77178955 -85.61772919]
[135.37078857 -71.27788544]
[130.96980286 -56.93803787]
[126.56880188 -42.59819031]
[122.16780090 -28.25834274]
[117.76679993 -13.91849613]
[113.36580658 0.42135137]
[110.70001221 15.18256855]
[109.80718994 30.15597343]
[109.13740540 45.14101410]
[108.69080353 60.13436127]
[108.24419403 75.12771606]
[107.79759216 90.12106323]
[107.68592072 105.12064362]
[107.90924835 120.11898804]
[108.13257599 135.11732483]
[108.35590363 150.11566162]
[108.80251312 165.10900879]
[109.47229767 180.09405518]
[110.14208221 195.07908630]
[110.81186676 210.06413269]
[111.48165131 225.04916382]
[114.71201324 230.81771851]
[114.56612396 236.49890137]
[111.94155884 240.48896790]
[112.16488647 255.48730469]
[124.71868134 261.65701294]
[133.34831238 272.58154297]
[136.41442871 286.09365845]
[133.37426758 299.54379272]
[124.87673950 310.31973267]
[112.62490845 316.35379028]
[112.62490845 331.35379028]
[112.62490845 346.35379028]
[112.62490845 361.35379028]
[112.62490845 376.35379028]
[112.62490845 391.35379028]
[115.59446716 397.26083374]
[115.19504547 402.92980957]
[112.39492798 406.79870605]
[111.94832611 421.79208374]
[111.50171661 436.78543091]
[111.05511475 451.77877808]
[118.37809753 465.80319214]
[110.26528931 478.29446411]
[109.81868744 493.28781128]
[123.99493408 498.60876465]
[135.67378235 508.24636841]
[143.58836365 521.15521240]
[146.88020325 535.93499756]
[145.19221497 550.98254395]
[138.70748901 564.66564941]
[128.12944031 575.50006104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 203]
[11 202]
[13 200]
[14 199]
[15 198]
[16 197]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[22 189]
[27 183]
[28 182]
[29 179]
[30 178]
[31 177]
[32 176]
[33 175]
[36 174]
[37 173]
[38 172]
[39 171]
[43 170]
[44 169]
[45 168]
[46 167]
[49 166]
[50 165]
[67 164]
[68 163]
[69 162]
[70 161]
[71 160]
[72 159]
[73 158]
[79 154]
[80 153]
[81 152]
[82 151]
[83 150]
[84 120]
[85 119]
[86 118]
[87 117]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
