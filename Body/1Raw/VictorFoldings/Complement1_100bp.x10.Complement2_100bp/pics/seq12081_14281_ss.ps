%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[78.55305481 751.36120605]
[63.54868317 751.04949951]
[48.61358643 749.57598877]
[33.83758545 746.94958496]
[19.30954742 743.18603516]
[5.11684513 738.30792236]
[-8.65516186 732.34472656]
[-21.92364693 725.33215332]
[-34.60881042 717.31250000]
[-46.63436127 708.33398438]
[-57.92797852 698.45050049]
[-68.42173767 687.72161865]
[-78.05252075 676.21179199]
[-86.76242065 663.99023438]
[-94.49903870 651.13049316]
[-101.21585846 637.70989990]
[-106.87248230 623.80914307]
[-111.43488312 609.51184082]
[-114.87561798 594.90399170]
[-117.17401123 580.07342529]
[-118.31622314 565.10931396]
[-118.29538727 550.10174561]
[-117.11164093 535.14086914]
[-114.77208710 520.31677246]
[-111.29080200 505.71850586]
[-106.68872833 491.43392944]
[-100.99354553 477.54891968]
[-94.23949432 464.14703369]
[-86.46720123 451.30880737]
[-77.72340393 439.11148071]
[-68.06069946 427.62844849]
[-57.53720093 416.92871094]
[-46.21619034 407.07666016]
[-34.16576004 398.13153076]
[-21.45837975 390.14709473]
[-8.17047787 383.17144775]
[5.61803102 377.24645996]
[19.82422066 372.40780640]
[34.36265182 368.68460083]
[49.14588547 366.09921265]
[64.08501434 364.66717529]
[79.09019470 364.39712524]
[72.12415314 351.23190308]
[80.66913605 337.91671753]
[81.56195068 322.94329834]
[82.45476532 307.96990967]
[83.34758759 292.99649048]
[69.24217987 285.48730469]
[59.78921509 272.53140259]
[56.92218399 256.69271851]
[61.26501465 241.13316345]
[71.99714661 228.98139954]
[87.00802612 222.70387268]
[79.84674835 209.64381409]
[88.19253540 196.20288086]
[81.03125763 183.14282227]
[89.37705231 169.70190430]
[90.04683685 154.71685791]
[90.71662140 139.73182678]
[91.38640594 124.74678802]
[92.05619049 109.76174927]
[92.39116669 94.76548767]
[92.39116669 79.76548767]
[92.27950287 64.76590729]
[92.05617523 49.76756668]
[91.83284760 34.76922989]
[91.60951996 19.77089119]
[83.66761017 6.08744574]
[91.21456146 -6.75361252]
[90.99123383 -21.75194931]
[90.76790619 -36.75028610]
[83.84545898 -23.44315910]
[73.02276611 -13.05714321]
[59.44197464 -6.68830109]
[44.53630066 -5.00875282]
[29.87877274 -8.19574356]
[17.01623726 -15.91294384]
[7.30610752 -27.34593773]
[1.77311528 -41.28817749]
[1.00117135 -56.26829910]
[5.07174063 -70.70542145]
[13.55524635 -83.07595825]
[25.55640411 -92.07440948]
[39.80870056 -96.75115967]
[54.80806351 -96.61265564]
[68.97156525 -91.67351532]
[80.80450439 -82.45497131]
[89.05812073 -69.92987823]
[92.86141205 -55.41986084]
[96.40108490 -69.99623871]
[99.94075775 -84.57260895]
[95.67851257 -99.80887604]
[106.20065308 -110.35087585]
[109.74032593 -124.92725372]
[113.27999878 -139.50363159]
[116.81967163 -154.08000183]
[103.04239655 -160.10975647]
[90.52159119 -168.44044495]
[79.63774109 -178.81893921]
[70.72160339 -190.92982483]
[64.04412079 -204.40507507]
[59.80822372 -218.83518982]
[58.14263153 -233.78166199]
[59.09795761 -248.79026794]
[62.64517212 -263.40493774]
[68.67648315 -277.18151855]
[77.00859833 -289.70138550]
[87.38832092 -300.58404541]
[99.50021362 -309.49880981]
[112.97622681 -316.17477417]
[127.40682220 -320.40902710]
[142.35348511 -322.07293701]
[157.36198425 -321.11590576]
[171.97624207 -317.56704712]
[185.75215149 -311.53414917]
[198.27107239 -303.20062256]
[209.15255737 -292.81967163]
[218.06594849 -280.70675659]
[224.74037170 -267.23001099]
[228.97300720 -252.79891968]
[230.63520813 -237.85208130]
[229.67648315 -222.84367371]
[226.12594604 -208.22981262]
[220.09150696 -194.45458984]
[211.75656128 -181.93663025]
[201.37437439 -171.05630493]
[189.26045227 -162.14428711]
[175.78292847 -155.47138977]
[161.35136414 -151.24040222]
[146.40432739 -149.57989502]
[131.39604187 -150.54032898]
[127.85637665 -135.96395874]
[124.31670380 -121.38758087]
[120.77703094 -106.81120300]
[125.29245758 -92.61753845]
[114.51712799 -81.03293610]
[110.97745514 -66.45656586]
[107.43778992 -51.88018799]
[105.76624298 -36.97361374]
[105.98957062 -21.97527695]
[106.21289825 -6.97694016]
[114.13883209 5.63372421]
[106.60785675 19.54756355]
[106.83118439 34.54590225]
[107.05451202 49.54423904]
[107.27783966 64.54257965]
[110.52057648 71.18384552]
[107.39116669 79.76548767]
[107.39116669 94.76548767]
[109.70411682 97.85136414]
[110.64563751 101.94177246]
[109.79757690 106.40134430]
[107.04122925 110.43153381]
[106.37144470 125.41657257]
[105.70166016 140.40161133]
[105.03187561 155.38664246]
[104.36209106 170.37168884]
[111.47546387 184.50358582]
[103.17757416 196.87268066]
[110.29094696 211.00456238]
[101.99306488 223.37365723]
[114.68664551 229.58811951]
[124.02461243 240.13926697]
[128.62184143 253.41221619]
[127.81546021 267.39221191]
[121.76016235 279.97048950]
[111.39993286 289.26226807]
[98.32099152 293.88931274]
[97.42817688 308.86273193]
[96.53535461 323.83612061]
[95.64253998 338.80953979]
[102.54472351 353.04577637]
[94.06359863 365.28994751]
[108.93037415 367.34115601]
[123.59348297 370.53826904]
[137.96473694 374.86206055]
[151.95773315 380.28649902]
[165.48828125 386.77902222]
[178.47502136 394.30050659]
[190.83984375 402.80575562]
[202.50839233 412.24362183]
[213.41047668 422.55734253]
[223.48054504 433.68490601]
[232.65802002 445.55932617]
[240.88771057 458.10925293]
[248.12013245 471.25915527]
[254.31176758 484.93002319]
[259.42541504 499.03955078]
[263.43026733 513.50292969]
[266.30227661 528.23315430]
[268.02416992 543.14166260]
[268.58557129 558.13879395]
[267.98312378 573.13427734]
[266.22045898 588.03802490]
[263.30813599 602.76031494]
[259.26370239 617.21270752]
[254.11146545 631.30816650]
[247.88243103 644.96203613]
[240.61404419 658.09210205]
[232.35003662 670.61944580]
[223.14009094 682.46875000]
[213.03961182 693.56866455]
[202.10934448 703.85253906]
[190.41500854 713.25842285]
[178.02696228 721.72979736]
[165.01968384 729.21569824]
[151.47142029 735.67114258]
[137.46363831 741.05731201]
[123.08058929 745.34173584]
[108.40879059 748.49871826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 173]
[44 171]
[45 170]
[46 169]
[47 168]
[53 161]
[55 159]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 149]
[63 148]
[64 146]
[65 145]
[66 144]
[67 143]
[69 141]
[70 140]
[71 139]
[89 138]
[90 137]
[91 136]
[93 134]
[94 133]
[95 132]
[96 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
