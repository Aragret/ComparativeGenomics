%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[101.35166168 588.68518066]
[101.35166168 573.68518066]
[101.35166168 558.68518066]
[101.35166168 543.68518066]
[101.01668549 528.68890381]
[100.34690094 513.70391846]
[99.67711639 498.71884155]
[91.37922668 486.34976196]
[98.49259949 472.21786499]
[90.19471741 459.84878540]
[97.30809021 445.71688843]
[96.63830566 430.73184204]
[88.34042358 418.36276245]
[95.45379639 404.23086548]
[94.78400421 389.24581909]
[94.11421967 374.26077271]
[93.44443512 359.27572632]
[92.44017792 344.30938721]
[91.10194397 329.36920166]
[89.76371002 314.42901611]
[88.42547607 299.48883057]
[87.08724213 284.54864502]
[85.74900818 269.60845947]
[78.43002319 282.70169067]
[65.91531372 290.97103882]
[51.00067902 292.56909180]
[37.01810074 287.13885498]
[27.09131432 275.89346313]
[23.43799400 261.34515381]
[26.87429619 246.74406433]
[36.63254547 235.35211182]
[50.53272629 229.71429443]
[65.46949768 231.09010315]
[78.10594940 239.17218018]
[85.61907196 252.15499878]
[86.73471832 237.19654846]
[87.85036469 222.23809814]
[88.96601868 207.27964783]
[89.74733734 192.30000305]
[90.19394684 177.30665588]
[90.64054871 162.31330872]
[91.08715820 147.31996155]
[91.53376007 132.32659912]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[77.97835541 78.35034180]
[64.17110443 71.23986816]
[52.29210281 61.24627304]
[42.93211746 48.87060928]
[36.55574417 34.73229218]
[33.47834396 19.53808975]
[33.85045242 4.04681063]
[37.65040588 -10.96860409]
[44.68558884 -24.75964355]
[54.60218811 -36.63953781]
[66.90299225 -46.01746750]
[80.97232056 -52.42792511]
[96.10681915 -55.55384445]
[96.33014679 -70.55218506]
[96.55347443 -85.55052185]
[96.77680206 -100.54885864]
[96.55347443 -115.54719543]
[95.88368988 -130.53224182]
[95.21390533 -145.51727295]
[94.54412079 -160.50231934]
[86.19832611 -173.94323730]
[93.35960388 -187.00329590]
[92.68981934 -201.98834229]
[83.71538544 -211.25236511]
[83.46601868 -223.74723816]
[91.53009033 -232.76373291]
[91.08348846 -247.75708008]
[90.63687897 -262.75042725]
[90.19027710 -277.74377441]
[89.74366760 -292.73712158]
[75.01737976 -295.93432617]
[61.49246979 -302.55920410]
[49.95320129 -312.22277832]
[41.06755066 -324.35995483]
[35.34852600 -338.26269531]
[33.12455368 -353.12118530]
[34.52060699 -368.07107544]
[39.45122147 -382.24377441]
[47.62567902 -394.81683350]
[58.56517410 -405.06179810]
[71.63084412 -412.38629150]
[86.06107330 -416.36837769]
[77.91632080 -429.93206787]
[85.27125549 -442.88406372]
[84.82464600 -457.87741089]
[84.37804413 -472.87075806]
[81.63317108 -477.31066895]
[80.93559265 -481.90051270]
[81.99959564 -485.83532715]
[84.26139069 -488.54028320]
[84.48471832 -503.53860474]
[84.70804596 -518.53692627]
[70.87181854 -524.89923096]
[60.82444763 -536.34344482]
[56.30670547 -550.88684082]
[58.10131454 -566.00964355]
[65.89735413 -579.09173584]
[78.34410095 -587.86663818]
[93.28508759 -590.81396484]
[108.13170624 -587.42309570]
[120.31167603 -578.28149414]
[127.71475220 -564.97308350]
[129.05830383 -549.80352783]
[124.10955048 -535.40112305]
[113.72589874 -524.26110840]
[99.70638275 -518.31359863]
[99.48305511 -503.31527710]
[99.25972748 -488.31695557]
[99.37139130 -473.31735229]
[99.81800079 -458.32400513]
[100.26460266 -443.33065796]
[108.37741089 -430.83938599]
[101.05442047 -416.81497192]
[115.69609070 -413.69888306]
[129.17456055 -407.16503906]
[140.70445251 -397.58935547]
[149.61277771 -385.52514648]
[155.37821960 -371.67105103]
[157.66163635 -356.83078003]
[156.32598877 -341.86624146]
[151.44461060 -327.64776611]
[143.29713440 -315.00320435]
[132.35351562 -304.66992188]
[119.24689484 -297.25180054]
[104.73702240 -293.18374634]
[105.18362427 -278.19039917]
[105.63023376 -263.19702148]
[106.07683563 -248.20368958]
[106.52344513 -233.21032715]
[116.53765106 -218.79913330]
[107.67485809 -202.65812683]
[108.34464264 -187.67308044]
[116.64253235 -175.30400085]
[109.52915955 -161.17210388]
[110.19894409 -146.18705750]
[110.86872864 -131.20202637]
[111.53851318 -116.21697998]
[113.51382446 -114.22794342]
[114.82027435 -111.33660889]
[115.11024475 -107.79382324]
[114.13325500 -103.97151947]
[111.77513885 -100.32553101]
[111.55181122 -85.32719421]
[111.32848358 -70.32885742]
[111.10515594 -55.33051682]
[125.23498535 -52.07356644]
[138.38102722 -45.94025421]
[149.96466064 -37.19774628]
[159.47546387 -26.22810745]
[166.49366760 -13.51161098]
[170.70874023 0.39428872]
[171.93307495 14.87939644]
[170.11036682 29.30754852]
[165.31817627 43.04455566]
[157.76464844 55.48606873]
[147.77946472 66.08419037]
[135.79946899 74.37155914]
[122.34955597 79.98201752]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[106.52711487 132.77320862]
[106.08050537 147.76655579]
[105.63390350 162.75991821]
[105.18729401 177.75326538]
[104.74069214 192.74661255]
[107.21643066 197.34202576]
[107.63957214 201.96525574]
[106.34325409 205.82978821]
[103.92446899 208.39529419]
[102.80882263 223.35374451]
[101.69317627 238.31219482]
[100.57752228 253.27064514]
[100.68919373 268.27023315]
[102.02742767 283.21041870]
[103.36566162 298.15060425]
[104.70389557 313.09078979]
[106.04212952 328.03097534]
[107.38036346 342.97116089]
[110.38463593 347.23980713]
[111.35416412 351.77999878]
[110.52625275 355.77120972]
[108.42947388 358.60595703]
[109.09925842 373.59100342]
[109.76904297 388.57601929]
[110.43883514 403.56106567]
[118.78462219 417.00198364]
[111.62334442 430.06204224]
[112.29312897 445.04708862]
[120.63892365 458.48800659]
[113.47763824 471.54809570]
[121.82343292 484.98901367]
[114.66215515 498.04907227]
[115.33193970 513.03411865]
[116.00172424 528.01916504]
[118.81240082 532.41766357]
[119.57823181 536.99664307]
[118.57292938 540.94689941]
[116.35166168 543.68518066]
[116.35166168 558.68518066]
[116.35166168 573.68518066]
[116.35166168 588.68518066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 203]
[6 202]
[7 201]
[9 199]
[11 197]
[12 196]
[14 194]
[15 193]
[16 192]
[17 191]
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[35 181]
[36 180]
[37 179]
[38 178]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[47 166]
[60 152]
[61 151]
[62 150]
[63 149]
[64 144]
[65 143]
[66 142]
[67 141]
[69 139]
[70 138]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[89 120]
[91 118]
[92 117]
[93 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
