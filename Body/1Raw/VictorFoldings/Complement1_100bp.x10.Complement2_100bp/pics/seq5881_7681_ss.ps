%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[118.26861572 210.96611023]
[121.91734314 225.56068420]
[122.82196045 240.57722473]
[120.95165253 255.50425720]
[116.37013245 269.83340454]
[109.23342896 283.07659912]
[99.78463745 294.78277588]
[88.34555817 304.55325317]
[75.30581665 312.05523682]
[61.10953522 317.03323364]
[46.24023819 319.31765747]
[31.20436096 318.83071899]
[16.51402664 315.58898926]
[2.66958117 309.70291138]
[-9.85743999 301.37292480]
[-20.64037132 290.88278198]
[-29.31194878 278.58978271]
[-35.57682419 264.91256714]
[-39.22161484 250.31701660]
[-40.12218094 235.30023193]
[-38.24785233 220.37370300]
[-33.66246796 206.04579163]
[-26.52220154 192.80451965]
[-17.07024956 181.10087585]
[-5.62854004 171.33349609]
[7.41322422 163.83502197]
[21.61084557 158.86087036]
[36.48076248 156.58045959]
[51.51650238 157.07145691]
[66.20596313 160.31712341]
[64.06521606 145.57716370]
[76.58519745 135.90449524]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[109.61062622 58.22654724]
[105.51842499 45.99475861]
[110.69087982 34.61805344]
[121.85861206 29.96957588]
[127.93244934 16.25430870]
[134.00628662 2.53904247]
[140.08010864 -11.17622471]
[146.15394592 -24.89149094]
[132.70306396 -31.53526878]
[119.54218292 -38.73648453]
[106.69440460 -46.48250580]
[94.18226624 -54.75974274]
[82.02771759 -63.55367279]
[70.25208282 -72.84886932]
[58.87602234 -82.62902069]
[47.91948700 -92.87697601]
[37.40170670 -103.57476044]
[27.34112740 -114.70359039]
[17.75540161 -126.24396515]
[8.66134453 -138.17561340]
[0.07491101 -150.47761536]
[-7.98883581 -163.12840271]
[-15.51574898 -176.10575867]
[-22.49262428 -189.38693237]
[-28.90722084 -202.94860840]
[-34.74828720 -216.76701355]
[-40.00557327 -230.81788635]
[-44.66985703 -245.07658386]
[-48.73295975 -259.51809692]
[-52.18774796 -274.11709595]
[-55.02816010 -288.84796143]
[-57.24921799 -303.68484497]
[-58.84702301 -318.60171509]
[-59.81877136 -333.57241821]
[-60.16275787 -348.57067871]
[-59.87838364 -363.57019043]
[-58.96614075 -378.54464722]
[-57.42763138 -393.46777344]
[-55.26555634 -408.31335449]
[-52.48371124 -423.05538940]
[-49.08697128 -437.66799927]
[-45.08129883 -452.12554932]
[-40.47372055 -466.40267944]
[-35.27231598 -480.47433472]
[-29.48621559 -494.31585693]
[-23.12556648 -507.90292358]
[-16.20153046 -521.21173096]
[-8.72625351 -534.21887207]
[-0.71284813 -546.90161133]
[7.82462549 -559.23760986]
[16.87119102 -571.20532227]
[26.41097641 -582.78369141]
[36.42724609 -593.95245361]
[46.90242767 -604.69195557]
[57.81814575 -614.98333740]
[69.15525055 -624.80865479]
[80.89384460 -634.15057373]
[93.01335144 -642.99273682]
[105.49249268 -651.31964111]
[118.30938721 -659.11663818]
[131.44154358 -666.37011719]
[144.86592102 -673.06732178]
[158.55897522 -679.19647217]
[172.49667358 -684.74682617]
[186.65457153 -689.70867920]
[201.00784302 -694.07330322]
[215.53129578 -697.83306885]
[230.19944763 -700.98132324]
[244.98655701 -703.51257324]
[259.86669922 -705.42242432]
[274.81378174 -706.70745850]
[289.80154419 -707.36541748]
[304.80374146 -707.39526367]
[319.79400635 -706.79675293]
[334.74606323 -705.57110596]
[349.63366699 -703.72039795]
[364.43072510 -701.24786377]
[379.11126709 -698.15783691]
[393.64953613 -694.45581055]
[408.02001953 -690.14825439]
[422.19750977 -685.24261475]
[436.15713501 -679.74768066]
[449.87442017 -673.67291260]
[463.32528687 -667.02911377]
[476.48614502 -659.82788086]
[489.33389282 -652.08178711]
[501.84600830 -643.80450439]
[514.00054932 -635.01055908]
[525.77612305 -625.71533203]
[537.15216064 -615.93511963]
[548.10870361 -605.68713379]
[558.62640381 -594.98931885]
[568.68695068 -583.86047363]
[578.27264404 -572.32006836]
[587.36669922 -560.38836670]
[595.95306396 -548.08636475]
[604.01678467 -535.43554688]
[611.54364014 -522.45819092]
[618.52050781 -509.17697144]
[624.93505859 -495.61529541]
[630.77606201 -481.79687500]
[636.03332520 -467.74597168]
[640.69757080 -453.48724365]
[644.76062012 -439.04571533]
[648.21533203 -424.44671631]
[651.05572510 -409.71585083]
[653.27673340 -394.87893677]
[654.87451172 -379.96206665]
[655.84619141 -364.99136353]
[656.19012451 -349.99310303]
[655.90570068 -334.99359131]
[654.99340820 -320.01913452]
[653.45489502 -305.09603882]
[651.29272461 -290.25045776]
[648.51086426 -275.50842285]
[645.11407471 -260.89581299]
[641.10833740 -246.43829346]
[636.50073242 -232.16117859]
[631.29931641 -218.08952332]
[625.51312256 -204.24804688]
[619.15246582 -190.66099548]
[612.22839355 -177.35221863]
[604.75305176 -164.34507751]
[596.73962402 -151.66236877]
[588.20208740 -139.32637024]
[579.15551758 -127.35868835]
[569.61566162 -115.78034973]
[559.59936523 -104.61164856]
[549.12414551 -93.87218475]
[538.20843506 -83.58079529]
[526.87127686 -73.75553894]
[515.13262939 -64.41365051]
[503.01312256 -55.57152557]
[490.53393555 -47.24466705]
[477.71704102 -39.44768524]
[464.58486938 -32.19425964]
[451.16046143 -25.49711800]
[437.46737671 -19.36800575]
[423.52966309 -13.81767750]
[409.37173462 -8.85586929]
[395.01846313 -4.49128532]
[380.49499512 -0.73158383]
[365.82684326 2.41663980]
[351.03973389 4.94786263]
[336.15957642 6.85764360]
[321.21249390 8.14263344]
[306.22473145 8.80057621]
[291.22253418 8.83031845]
[276.23226929 8.23180771]
[261.28021240 7.00609493]
[246.39262390 5.15532970]
[231.59556580 2.68275881]
[216.91503906 -0.40728003]
[202.37678528 -4.10936546]
[188.00631714 -8.41700268]
[173.82884216 -13.32263565]
[159.86921692 -18.81765747]
[153.79537964 -5.10239029]
[147.72154236 8.61287594]
[141.64772034 22.32814217]
[135.57388306 36.04341125]
[138.38043213 53.36651993]
[123.41480255 64.09551239]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[90.38937378 141.77345276]
[92.11033630 157.50077820]
[80.01013947 166.18608093]
[92.53940582 174.51268005]
[103.32516479 184.99990845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 208]
[32 206]
[33 205]
[34 204]
[36 202]
[37 201]
[38 200]
[41 198]
[42 197]
[43 196]
[44 195]
[45 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
