%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[45.03731918 512.10711670]
[35.79576492 523.93310547]
[25.60918808 534.95550537]
[14.54717636 545.09906006]
[2.68529272 554.29443359]
[-9.89543056 562.47888184]
[-23.10905457 569.59643555]
[-36.86531448 575.59851074]
[-51.07024002 580.44409180]
[-65.62679291 584.10003662]
[-80.43553925 586.54144287]
[-95.39532471 587.75164795]
[-110.40394592 587.72229004]
[-125.35887909 586.45367432]
[-140.15797424 583.95434570]
[-154.70011902 580.24151611]
[-168.88598633 575.34045410]
[-182.61868286 569.28460693]
[-195.80438232 562.11547852]
[-208.35301208 553.88189697]
[-220.17884827 544.64019775]
[-231.20112610 534.45349121]
[-241.34454346 523.39135742]
[-250.53979492 511.52938843]
[-258.72406006 498.94854736]
[-265.84146118 485.73483276]
[-271.84338379 471.97851562]
[-276.68878174 457.77352905]
[-280.34460449 443.21694946]
[-282.78585815 428.40817261]
[-283.99584961 413.44836426]
[-283.96633911 398.43975830]
[-282.69750977 383.48483276]
[-280.19802856 368.68576050]
[-276.48498535 354.14364624]
[-271.58374023 339.95785522]
[-265.52777100 326.22521973]
[-258.35845947 313.03961182]
[-250.12475586 300.49108887]
[-240.88291931 288.66534424]
[-230.69607544 277.64318848]
[-219.63381958 267.49990845]
[-207.77172852 258.30480957]
[-195.19081116 250.12066650]
[-181.97700500 243.00343323]
[-168.22061157 237.00167847]
[-154.01556396 232.15644836]
[-139.45892334 228.50080872]
[-124.65012360 226.05973816]
[-109.69030762 224.84991455]
[-94.68169403 224.87960815]
[-79.72679138 226.14862061]
[-64.92775726 228.64826965]
[-50.38569260 232.36148071]
[-36.19993973 237.26289368]
[-22.46739197 243.31901550]
[-9.28186512 250.48849487]
[-1.05305767 237.94709778]
[7.17575026 225.40570068]
[7.68866301 210.51992798]
[21.72836685 203.22627258]
[29.95717430 190.68487549]
[38.18598175 178.14347839]
[46.41479111 165.60208130]
[47.45592499 158.28512573]
[54.86063766 152.93647766]
[63.27525711 140.51898193]
[71.68987274 128.10148621]
[80.10449219 115.68399048]
[88.51911163 103.26649475]
[75.06208038 109.89282990]
[60.12664413 111.28304291]
[45.67781448 107.25423431]
[33.61658096 98.33646393]
[25.52981186 85.70301056]
[22.48145866 71.01602173]
[24.87258148 56.20783234]
[32.38859177 43.22670746]
[44.04062653 33.78054047]
[58.29565811 29.11213303]
[73.27819824 29.83569717]
[87.01702881 35.85603714]
[97.70457458 46.38107300]
[103.93470764 60.02605057]
[104.88774109 74.99574280]
[100.43717957 89.32273865]
[111.39308929 79.07734680]
[116.34182739 61.34061813]
[133.57739258 58.03881073]
[144.37954712 47.63143539]
[155.18171692 37.22406387]
[165.98387146 26.81669044]
[176.70825195 16.32918930]
[187.35424805 5.76214170]
[188.72232056 0.72473162]
[191.59825134 -2.91975737]
[195.19897461 -4.83021212]
[198.71949768 -5.02575207]
[209.82673645 -15.10689068]
[200.77531433 -27.08094788]
[192.83369446 -39.81817245]
[186.06581116 -53.21600723]
[180.52615356 -67.16658020]
[176.25932312 -81.55756378]
[173.29969788 -96.27309418]
[171.67108154 -111.19468689]
[171.38659668 -126.20219421]
[172.44853210 -141.17478943]
[174.84834290 -155.99191284]
[178.56669617 -170.53427124]
[183.57365417 -184.68476868]
[189.82891846 -198.32946777]
[197.28210449 -211.35852051]
[205.87322998 -223.66700745]
[215.53308105 -235.15583801]
[226.18392944 -245.73251343]
[237.73997498 -255.31185913]
[250.10820007 -263.81674194]
[263.18902588 -271.17871094]
[276.87710571 -277.33850098]
[291.06222534 -282.24645996]
[305.63021851 -285.86309814]
[320.46374512 -288.15930176]
[335.44338989 -289.11660767]
[350.44854736 -288.72726440]
[365.35839844 -286.99441528]
[380.05288696 -283.93200684]
[394.41369629 -279.56472778]
[408.32522583 -273.92773438]
[421.67544556 -267.06640625]
[434.35687256 -259.03598022]
[446.26736450 -249.90109253]
[457.31109619 -239.73535156]
[467.39907837 -228.62055969]
[476.45013428 -216.64622498]
[484.39138794 -203.90875244]
[491.15884399 -190.51071167]
[496.69808960 -176.55996704]
[500.96447754 -162.16885376]
[503.92364502 -147.45323181]
[505.55181885 -132.53160095]
[505.83584595 -117.52407837]
[504.77343750 -102.55152130]
[502.37319946 -87.73446655]
[498.65438843 -73.19222260]
[493.64700317 -59.04188156]
[487.39132690 -45.39736938]
[479.93771362 -32.36854553]
[471.34622192 -20.06031418]
[461.68600464 -8.57177639]
[451.03485107 2.00456786]
[439.47851562 11.58356285]
[427.11001587 20.08808136]
[414.02899170 27.44964981]
[400.34072876 33.60899353]
[386.15542603 38.51652527]
[371.58734131 42.13272858]
[356.75375366 44.42848587]
[341.77407837 45.38531494]
[326.76892090 44.99551010]
[311.85913086 43.26221085]
[297.16473389 40.19937515]
[282.80404663 35.83166122]
[268.89270020 30.19423294]
[255.54269409 23.33248711]
[242.86151123 15.30166721]
[230.95127869 6.16643476]
[219.90786743 -3.99965715]
[208.80064392 6.08148146]
[197.92131042 16.40814972]
[187.27529907 26.97519875]
[184.74252319 33.91831207]
[176.39123535 37.61884689]
[165.58908081 48.02621841]
[154.78692627 58.43359375]
[143.98477173 68.84096527]
[143.44621277 80.92552185]
[134.53193665 89.68448639]
[121.63848114 90.03325653]
[110.68257141 100.27864838]
[100.93660736 111.68111420]
[92.52198792 124.09860992]
[84.10736847 136.51609802]
[75.69274902 148.93359375]
[67.27813721 161.35108948]
[58.95619202 173.83088684]
[50.72738266 186.37228394]
[42.49857330 198.91368103]
[34.26976776 211.45509338]
[33.16827393 227.23789978]
[19.71714973 233.63450623]
[11.48834229 246.17590332]
[3.25953484 258.71731567]
[15.08559895 267.95870972]
[26.10811615 278.14517212]
[36.25178909 289.20706177]
[45.44732285 301.06884766]
[53.63190460 313.64944458]
[60.74962234 326.86300659]
[66.75186157 340.61917114]
[71.59760284 354.82406616]
[75.25376892 369.38055420]
[77.69535828 384.18927002]
[78.90571594 399.14904785]
[78.87655640 414.15768433]
[77.60808563 429.11260986]
[75.10897064 443.91174316]
[71.39627838 458.45394897]
[66.49536896 472.63986206]
[60.43973160 486.37261963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 193]
[58 192]
[59 191]
[61 189]
[62 188]
[63 187]
[64 186]
[66 185]
[67 184]
[68 183]
[69 182]
[70 181]
[86 180]
[87 179]
[89 176]
[90 175]
[91 174]
[92 173]
[93 171]
[94 170]
[98 169]
[99 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
