%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[66.49727631 535.43048096]
[54.17874908 543.99841309]
[41.33657837 551.75946045]
[28.02353668 558.68182373]
[14.29433346 564.73693848]
[0.20538302 569.90002441]
[-14.18541908 574.14978027]
[-28.81893730 577.46875000]
[-43.63504028 579.84338379]
[-58.57284546 581.26385498]
[-73.57096863 581.72430420]
[-88.56777191 581.22290039]
[-103.50164032 579.76165771]
[-118.31120300 577.34661865]
[-132.93560791 573.98767090]
[-147.31475830 569.69860840]
[-161.38955688 564.49707031]
[-175.10217285 558.40447998]
[-188.39627075 551.44586182]
[-201.21719360 543.64971924]
[-213.51228333 535.04821777]
[-225.23100281 525.67657471]
[-236.32521057 515.57342529]
[-246.74929810 504.78015137]
[-256.46044922 493.34121704]
[-265.41873169 481.30358887]
[-273.58737183 468.71673584]
[-280.93276978 455.63235474]
[-287.42477417 442.10424805]
[-293.03668213 428.18798828]
[-297.74542236 413.94076538]
[-301.53167725 399.42111206]
[-304.37985229 384.68872070]
[-306.27828979 369.80410767]
[-307.21914673 354.82846069]
[-307.19857788 339.82327271]
[-306.21667480 324.85025024]
[-304.27743530 309.97091675]
[-301.38888550 295.24636841]
[-297.56283569 280.73718262]
[-292.81503296 266.50289917]
[-287.16500854 252.60208130]
[-280.63595581 239.09182739]
[-273.25469971 226.02764893]
[-265.05160522 213.46322632]
[-256.06033325 201.45019531]
[-246.31787109 190.03791809]
[-235.86422729 179.27330017]
[-224.74237061 169.20057678]
[-212.99798584 159.86111450]
[-200.67936707 151.29331970]
[-187.83711243 143.53237915]
[-174.52400208 136.61019897]
[-160.79472351 130.55522156]
[-146.70571899 125.39232635]
[-132.31486511 121.14272308]
[-117.68131256 117.82387543]
[-102.86518097 115.44943237]
[-87.92736053 114.02914429]
[-72.92923737 113.56884003]
[-57.93243408 114.07042694]
[-42.99858093 115.53182983]
[-28.18904495 117.94704437]
[-13.56468010 121.30615997]
[0.81441718 125.59535980]
[14.88916016 130.79701233]
[28.60171127 136.88977051]
[41.89572525 143.84857178]
[54.71657181 151.64482117]
[63.31513214 139.35398865]
[71.91369629 127.06314850]
[80.51226044 114.77230835]
[89.11082458 102.48146820]
[97.61765289 90.12696075]
[98.95400238 74.36228943]
[112.49887085 68.16666412]
[120.91349030 55.74916840]
[109.05643463 46.55319977]
[97.81293488 36.61643219]
[87.22918701 25.97970772]
[77.34867859 14.68673229]
[68.21202087 2.78391075]
[59.85675812 -9.67984486]
[52.31721497 -22.65331650]
[45.62438202 -36.08319473]
[39.80575943 -49.91429520]
[34.88525391 -64.08977509]
[30.88308907 -78.55139160]
[27.81571007 -93.23971558]
[25.69571877 -108.09439087]
[24.53182983 -123.05436707]
[24.32882500 -138.05818176]
[25.08753777 -153.04417419]
[26.80485153 -167.95077515]
[29.47370911 -182.71670532]
[33.08314514 -197.28131104]
[37.61832047 -211.58473206]
[43.06060791 -225.56819153]
[49.38764191 -239.17424011]
[56.57341766 -252.34693909]
[64.58840942 -265.03219604]
[73.39968872 -277.17785645]
[82.97103882 -288.73400879]
[93.26313019 -299.65319824]
[104.23367310 -309.89053345]
[115.83758545 -319.40393066]
[128.02719116 -328.15432739]
[140.75238037 -336.10574341]
[153.96089172 -343.22549438]
[167.59841919 -349.48437500]
[181.60893250 -354.85662842]
[195.93487549 -359.32015991]
[210.51734924 -362.85668945]
[225.29646301 -365.45162964]
[240.21145630 -367.09432983]
[255.20106506 -367.77804565]
[270.20367432 -367.49993896]
[285.15765381 -366.26123047]
[300.00152588 -364.06692505]
[314.67431641 -360.92608643]
[329.11572266 -356.85159302]
[343.26638794 -351.86022949]
[357.06820679 -345.97247314]
[370.46444702 -339.21252441]
[383.40002441 -331.60815430]
[395.82180786 -323.19061279]
[407.67877197 -313.99450684]
[418.92214966 -304.05761719]
[429.50579834 -293.42077637]
[439.38616943 -282.12768555]
[448.52267456 -270.22479248]
[456.87780762 -257.76092529]
[464.41720581 -244.78736877]
[471.10989380 -231.35742188]
[476.92837524 -217.52626038]
[481.84872437 -203.35072327]
[485.85070801 -188.88905334]
[488.91793823 -174.20069885]
[491.03775024 -159.34600830]
[492.20147705 -144.38601685]
[492.40432739 -129.38220215]
[491.64544678 -114.39620972]
[489.92797852 -99.48963165]
[487.25894165 -84.72373199]
[483.64935303 -70.15916443]
[479.11401367 -55.85579681]
[473.67156982 -41.87239456]
[467.34439087 -28.26642609]
[460.15847778 -15.09379578]
[452.14334106 -2.40863562]
[443.33190918 9.73692799]
[433.76043701 21.29298592]
[423.46823120 32.21205139]
[412.49755859 42.44925690]
[400.89355469 51.96253204]
[388.70385742 60.71278381]
[375.97857666 68.66406250]
[362.76998901 75.78369141]
[349.13238525 82.04240417]
[335.12179565 87.41449738]
[320.79583740 91.87788391]
[306.21331787 95.41423798]
[291.43417358 98.00901031]
[276.51916504 99.65154266]
[261.52954102 100.33509064]
[246.52693176 100.05684662]
[231.57298279 98.81794739]
[216.72912598 96.62348938]
[202.05636597 93.48248291]
[187.61500549 89.40784454]
[173.46437073 84.41631317]
[159.66262817 78.52839661]
[146.26649475 71.76829529]
[133.33099365 64.16378784]
[124.91636658 76.58128357]
[124.18188477 91.45777130]
[110.03514862 98.54158020]
[108.47977448 106.45064545]
[101.40166473 111.08003235]
[92.80310059 123.37087250]
[84.20453644 135.66171265]
[75.60597229 147.95254517]
[67.00740814 160.24337769]
[78.72623444 169.61486816]
[89.82054901 179.71794128]
[100.24475861 190.51106262]
[109.95603180 201.94989014]
[118.91445923 213.98742676]
[127.08323669 226.57418823]
[134.42878723 239.65847778]
[140.92092896 253.18652344]
[146.53297424 267.10272217]
[151.24188232 281.34988403]
[155.02828979 295.86947632]
[157.87664795 310.60183716]
[159.77523804 325.48645020]
[160.71626282 340.46209717]
[160.69586182 355.46725464]
[159.71411133 370.44030762]
[157.77505493 385.31967163]
[154.88665771 400.04421997]
[151.06077576 414.55349731]
[146.31314087 428.78781128]
[140.66326904 442.68869019]
[134.13435364 456.19900513]
[126.75325775 469.26327515]
[118.55028534 481.82778931]
[109.55915833 493.84091187]
[99.81681061 505.25329590]
[89.36328888 516.01800537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 183]
[70 182]
[71 181]
[72 180]
[73 179]
[74 177]
[76 175]
[77 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
