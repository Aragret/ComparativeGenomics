%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[68.64566040 659.62536621]
[54.14184189 663.48352051]
[39.37459564 666.16210938]
[24.43969727 667.64373779]
[9.43400860 667.91876221]
[-5.54515123 666.98541260]
[-20.40063667 664.84979248]
[-35.03610229 661.52575684]
[-49.35662842 657.03479004]
[-63.26934052 651.40600586]
[-76.68401337 644.67602539]
[-89.51363373 636.88842773]
[-101.67501068 628.09368896]
[-113.08926392 618.34887695]
[-123.68236542 607.71716309]
[-133.38562012 596.26757812]
[-142.13607788 584.07434082]
[-149.87701416 571.21649170]
[-156.55822754 557.77746582]
[-162.13635254 543.84436035]
[-166.57525635 529.50762939]
[-169.84611511 514.86016846]
[-171.92771912 499.99700928]
[-172.80659485 485.01455688]
[-172.47702026 470.00997925]
[-170.94113159 455.08056641]
[-168.20890808 440.32315063]
[-164.29804993 425.83343506]
[-159.23393250 411.70541382]
[-153.04939270 398.03070068]
[-145.78454590 384.89797974]
[-137.48649597 372.39242554]
[-128.20907593 360.59515381]
[-118.01245117 349.58264160]
[-106.96273804 339.42636108]
[-95.13161469 330.19213867]
[-82.59580231 321.93988037]
[-69.43660736 314.72311401]
[-55.73936844 308.58862305]
[-41.59292221 303.57620239]
[-27.08901405 299.71835327]
[-12.32170868 297.04010010]
[2.61322117 295.55883789]
[17.61891556 295.28411865]
[32.59805298 296.21777344]
[47.45349121 298.35372925]
[50.77575302 283.72625732]
[54.09801102 269.09881592]
[57.31128693 254.44702148]
[60.41539383 239.77171326]
[63.51950455 225.09640503]
[66.62361908 210.42111206]
[69.72772217 195.74580383]
[72.83183289 181.07049561]
[71.02377319 176.65010071]
[71.97338867 171.04695129]
[76.25302124 166.00747681]
[79.79269409 151.43110657]
[83.33236694 136.85473633]
[70.47841644 127.65062714]
[62.13439560 114.22241211]
[59.57500076 98.62148285]
[63.19121933 83.23114014]
[72.43061066 70.40253448]
[85.88170624 62.09545135]
[101.48961639 59.57894135]
[104.81187439 44.95148087]
[108.13413239 30.32402039]
[111.45639038 15.69655991]
[114.77864838 1.06909955]
[110.29003143 -14.10202026]
[120.65405273 -24.79950905]
[123.97631073 -39.42697144]
[117.77542877 -50.73677826]
[120.84368134 -62.85162735]
[131.00750732 -69.41083527]
[134.54718018 -83.98720551]
[138.08685303 -98.56358337]
[141.62652588 -113.13996124]
[145.16619873 -127.71633148]
[148.70587158 -142.29270935]
[152.24554443 -156.86907959]
[155.78521729 -171.44546509]
[158.77998352 -186.14346313]
[161.22572327 -200.94273376]
[163.67144775 -215.74200439]
[166.11717224 -230.54127502]
[151.73173523 -234.86421204]
[138.01724243 -240.99125671]
[125.19887543 -248.82182312]
[113.48712921 -258.22732544]
[103.07433319 -269.05331421]
[94.13146210 -281.12200928]
[86.80536652 -294.23522949]
[81.21635437 -308.17767334]
[77.45619965 -322.72033691]
[75.58664703 -337.62448120]
[75.63839722 -352.64532471]
[77.61059570 -367.53619385]
[81.47086334 -382.05264282]
[87.15580750 -395.95620728]
[94.57207489 -409.01864624]
[103.59789276 -421.02545166]
[114.08503723 -431.77941895]
[125.86130524 -441.10400391]
[138.73332214 -448.84606934]
[152.48971558 -454.87847900]
[166.90458679 -459.10220337]
[181.74124146 -461.44784546]
[196.75604248 -461.87689209]
[211.70242310 -460.38232422]
[226.33497620 -456.98867798]
[240.41340637 -451.75167847]
[253.70652771 -444.75729370]
[265.99606323 -436.12042236]
[277.08020020 -425.98287964]
[286.77694702 -414.51107788]
[294.92703247 -401.89349365]
[301.39666748 -388.33721924]
[306.07962036 -374.06491089]
[308.89892578 -359.31094360]
[309.80838013 -344.31756592]
[308.79296875 -329.33099365]
[305.86941528 -314.59732056]
[301.08572388 -300.35848999]
[294.52041626 -286.84829712]
[286.28131104 -274.28863525]
[276.50372314 -262.88568115]
[265.34820557 -252.82672119]
[252.99792480 -244.27694702]
[239.65568542 -237.37670898]
[225.54058838 -232.23936462]
[210.88441467 -228.94923401]
[195.92784119 -227.56036377]
[180.91644287 -228.09555054]
[178.47071838 -213.29627991]
[176.02499390 -198.49700928]
[173.57925415 -183.69773865]
[187.10748291 -190.17750549]
[200.67413330 -183.77859497]
[204.27838135 -169.21804810]
[195.26332092 -157.22937012]
[180.27450562 -156.65014648]
[170.36158752 -167.90579224]
[166.82191467 -153.32940674]
[163.28224182 -138.75303650]
[159.74256897 -124.17665863]
[156.20289612 -109.60028839]
[152.66322327 -95.02391052]
[149.12355042 -80.44753265]
[145.58387756 -65.87116241]
[151.42442322 -49.32259369]
[138.60377502 -36.10470963]
[135.28150940 -21.47724915]
[140.00776672 -7.35238457]
[129.40611267 4.39135885]
[126.08385468 19.01881981]
[122.76158905 33.64627838]
[119.43933105 48.27373886]
[116.11707306 62.90119934]
[127.80043030 70.61944580]
[136.15211487 81.85872650]
[140.17123413 95.27210236]
[139.37612915 109.25208282]
[133.86210632 122.12327576]
[124.28994751 132.34315491]
[111.80682373 138.68695068]
[97.90874481 140.39439392]
[94.36907196 154.97077942]
[90.82939911 169.54714966]
[87.50714111 184.17460632]
[84.40303040 198.84991455]
[81.29891968 213.52522278]
[78.19480896 228.20051575]
[75.09069824 242.87582397]
[71.98658752 257.55111694]
[73.27236176 266.59460449]
[68.72547150 272.42105103]
[65.40321350 287.04852295]
[62.08095169 301.67599487]
[76.40158081 306.16662598]
[90.31441498 311.79507446]
[103.72923279 318.52478027]
[116.55902863 326.31213379]
[128.72059631 335.10656738]
[140.13507080 344.85113525]
[150.72840881 355.48257446]
[160.43190002 366.93194580]
[169.18264771 379.12503052]
[176.92385864 391.98269653]
[183.60536194 405.42160034]
[189.18380737 419.35455322]
[193.62301636 433.69122314]
[196.89419556 448.33859253]
[198.97613525 463.20169067]
[199.85533142 478.18411255]
[199.52609253 493.18872070]
[197.99053955 508.11816406]
[195.25863647 522.87567139]
[191.34809875 537.36541748]
[186.28428650 551.49359131]
[180.10005188 565.16839600]
[172.83549500 578.30126953]
[164.53771973 590.80700684]
[155.26055908 602.60449219]
[145.06417847 613.61724854]
[134.01469421 623.77374268]
[122.18376923 633.00823975]
[109.64813995 641.26080322]
[96.48910522 648.47784424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 180]
[47 179]
[48 178]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[57 170]
[58 169]
[59 168]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[72 154]
[73 153]
[76 151]
[77 150]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 144]
[84 138]
[85 137]
[86 136]
[87 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
