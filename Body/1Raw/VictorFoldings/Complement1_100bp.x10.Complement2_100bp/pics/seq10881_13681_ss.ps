%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[28.02232933 803.10754395]
[13.11834717 804.83093262]
[-1.85418987 805.79101562]
[-16.85621834 805.98529053]
[-31.84860039 805.41339111]
[-46.79222107 804.07666016]
[-61.64809799 801.97863770]
[-76.37746429 799.12487793]
[-90.94190979 795.52264404]
[-105.30342102 791.18151855]
[-119.42453003 786.11273193]
[-133.26840210 780.32946777]
[-146.79893494 773.84692383]
[-159.98080444 766.68194580]
[-172.77963257 758.85321045]
[-185.16201782 750.38122559]
[-197.09567261 741.28802490]
[-208.54945374 731.59729004]
[-219.49348450 721.33441162]
[-229.89920044 710.52612305]
[-239.73945618 699.20056152]
[-248.98860168 687.38732910]
[-257.62249756 675.11730957]
[-265.61859131 662.42236328]
[-272.95605469 649.33569336]
[-279.61572266 635.89147949]
[-285.58026123 622.12475586]
[-290.83404541 608.07141113]
[-295.36343384 593.76812744]
[-299.15655518 579.25225830]
[-302.20355225 564.56164551]
[-304.49642944 549.73461914]
[-306.02926636 534.80981445]
[-306.79803467 519.82623291]
[-306.80072021 504.82296753]
[-306.03732300 489.83911133]
[-304.50985718 474.91375732]
[-302.22225952 460.08590698]
[-299.18054199 445.39419556]
[-295.39260864 430.87695312]
[-290.86837769 416.57205200]
[-285.61962891 402.51684570]
[-279.66003418 388.74795532]
[-273.00518799 375.30136108]
[-265.67239380 362.21206665]
[-257.68084717 349.51428223]
[-249.05136108 337.24111938]
[-239.80645752 325.42459106]
[-229.97026062 314.09552002]
[-219.56842041 303.28347778]
[-208.62806702 293.01666260]
[-197.17776489 283.32186890]
[-185.24737549 274.22436523]
[-172.86802673 265.74792480]
[-160.07200623 257.91464233]
[-146.89270020 250.74491882]
[-133.36450195 244.25752258]
[-119.52269745 238.46932983]
[-105.40340424 233.39546204]
[-91.04344940 229.04916382]
[-76.48030090 225.44175720]
[-61.75195694 222.58265686]
[-46.89683533 220.47932434]
[-31.95369148 219.13725281]
[-16.96151543 218.55995178]
[-1.95941889 218.74890137]
[13.01346111 219.70361328]
[27.91806030 221.42161560]
[42.71549606 223.89842224]
[57.36716080 227.12754822]
[61.33926010 212.66302490]
[65.31135559 198.19850159]
[61.22052765 183.87669373]
[72.33599091 172.61804199]
[68.24516296 158.29623413]
[79.36062622 147.03759766]
[83.33272552 132.57307434]
[87.30482483 118.10854340]
[91.27691650 103.64402008]
[89.78188324 98.61621094]
[91.21026611 93.10866547]
[95.58860779 88.81134033]
[99.98960114 74.47148895]
[104.39060211 60.13164139]
[108.79160309 45.79179382]
[105.44378662 30.32884789]
[116.57474518 20.43182945]
[120.97574615 6.09198189]
[117.62793732 -9.37096500]
[128.75889587 -19.26798439]
[127.63661957 -23.46256065]
[127.88274384 -27.40006638]
[129.24841309 -30.68188667]
[131.38088989 -33.03116989]
[133.87226868 -34.31616211]
[139.11898804 -48.36863327]
[144.36570740 -62.42110443]
[149.61242676 -76.47357178]
[154.85914612 -90.52604675]
[141.83024597 -98.02923584]
[130.21414185 -107.57469940]
[120.32770538 -118.90202332]
[112.44065094 -131.70219421]
[106.76815033 -145.62600708]
[103.46494293 -160.29360962]
[102.62114716 -175.30487061]
[104.25978851 -190.25025940]
[108.33615875 -204.72206116]
[114.73904419 -218.32546997]
[123.29378510 -230.68939209]
[133.76698303 -241.47650146]
[145.87294006 -250.39254761]
[159.28138733 -257.19427490]
[173.62652588 -261.69613647]
[188.51702881 -263.77529907]
[203.54664612 -263.37506104]
[218.30538940 -260.50634766]
[232.39060974 -255.24740601]
[245.41804504 -247.74169922]
[257.03231812 -238.19400024]
[266.91656494 -226.86477661]
[274.80114746 -214.06307983]
[280.47097778 -200.13818359]
[283.77136230 -185.46994019]
[284.61227417 -170.45851135]
[282.97073364 -155.51344299]
[278.89160156 -141.04241943]
[272.48608398 -127.44023895]
[263.92895508 -115.07798004]
[253.45367432 -104.29287720]
[241.34600830 -95.37917328]
[227.93624878 -88.58003235]
[213.59024048 -84.08094025]
[198.69934082 -82.00463867]
[183.66979980 -82.40776825]
[168.91160583 -85.27932739]
[163.66490173 -71.22685242]
[158.41818237 -57.17438507]
[153.17146301 -43.12191391]
[147.92474365 -29.06944275]
[143.09873962 -14.86698627]
[146.76133728 -0.42972127]
[135.31559753 10.49298000]
[130.91459656 24.83282661]
[134.57719421 39.27009201]
[123.13144684 50.19279480]
[118.73044586 64.53263855]
[114.32945251 78.87248993]
[109.92845154 93.21233368]
[105.74143982 107.61611938]
[101.76934814 122.08064270]
[97.79724884 136.54516602]
[93.82514954 151.00968933]
[97.63186646 166.36610413]
[86.80051422 176.59014893]
[90.60723114 191.94656372]
[79.77587891 202.17060852]
[75.80377960 216.63513184]
[71.83168793 231.09965515]
[86.07767487 235.80609131]
[100.06475830 241.23379517]
[113.75646210 247.36860657]
[127.11705017 254.19451904]
[140.11167908 261.69375610]
[152.70645142 269.84667969]
[164.86848450 278.63211060]
[176.56607056 288.02706909]
[187.76867676 298.00704956]
[198.44709778 308.54602051]
[208.57345581 319.61651611]
[218.12133789 331.18960571]
[227.06582642 343.23510742]
[235.38360596 355.72164917]
[243.05296326 368.61657715]
[250.05389404 381.88632202]
[256.36813354 395.49621582]
[261.97918701 409.41073608]
[266.87243652 423.59365845]
[271.03512573 438.00790405]
[274.45639038 452.61590576]
[277.12728882 467.37954712]
[279.04086304 482.26028442]
[280.19213867 497.21932983]
[280.57806396 512.21765137]
[280.19766235 527.21612549]
[279.05194092 542.17559814]
[277.14389038 557.05706787]
[274.47842407 571.82171631]
[271.06256104 586.43096924]
[266.90521240 600.84674072]
[262.01721191 615.03143311]
[256.41128540 628.94805908]
[250.10208130 642.56030273]
[243.10604858 655.83258057]
[235.44146729 668.73040771]
[227.12831116 681.21997070]
[218.18826294 693.26879883]
[208.64465332 704.84545898]
[198.52239990 715.91967773]
[187.84788513 726.46258545]
[176.64895630 736.44671631]
[164.95484924 745.84600830]
[152.79605103 754.63586426]
[140.20431519 762.79351807]
[127.21245575 770.29754639]
[113.85438538 777.12835693]
[100.16495514 783.26824951]
[86.17987061 788.70111084]
[71.93563080 793.41284180]
[57.46938324 797.39105225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 159]
[71 158]
[72 157]
[74 155]
[76 153]
[77 152]
[78 151]
[79 150]
[82 149]
[83 148]
[84 147]
[85 146]
[87 144]
[88 143]
[90 141]
[95 140]
[96 139]
[97 138]
[98 137]
[99 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
