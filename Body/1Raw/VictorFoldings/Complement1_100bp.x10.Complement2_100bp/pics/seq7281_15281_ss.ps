%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[59.39262390 591.01495361]
[46.66073608 598.97503662]
[33.13043976 605.48608398]
[18.96598053 610.46917725]
[4.33930063 613.86383057]
[-10.57204437 615.62872314]
[-25.58704567 615.74255371]
[-40.52343369 614.20391846]
[-55.19989395 611.03137207]
[-69.43827057 606.26361084]
[-83.06571198 599.95837402]
[-95.91680908 592.19226074]
[-107.83555603 583.05950928]
[-118.67726135 572.67108154]
[-128.31033325 561.15295410]
[-136.61781311 548.64495850]
[-143.49888611 535.29901123]
[-148.86999512 521.27709961]
[-152.66593933 506.74942017]
[-154.84065247 491.89230347]
[-155.36773682 476.88610840]
[-154.24079895 461.91305542]
[-151.47349548 447.15481567]
[-147.09944153 432.79058838]
[-141.17172241 418.99475098]
[-133.76229858 405.93475342]
[-124.96111298 393.76913452]
[-114.87500000 382.64556885]
[-103.62640381 372.69909668]
[-91.35186768 364.05044556]
[-78.20039368 356.80462646]
[-64.33162689 351.04959106]
[-49.91392899 346.85519409]
[-35.12230682 344.27230835]
[-20.13632584 343.33236694]
[-5.13789606 344.04672241]
[9.69091225 346.40673828]
[13.66300869 331.94223022]
[17.63510513 317.47769165]
[21.60720062 303.01318359]
[25.57929802 288.54864502]
[24.31158257 286.04843140]
[23.95785141 282.89541626]
[24.77170372 279.43521118]
[26.87706947 276.09875488]
[30.24236298 273.35488892]
[35.06835938 259.15243530]
[30.00462532 248.16676331]
[33.90900803 236.29496765]
[45.20654297 230.07174683]
[50.24346161 215.94271851]
[55.28037643 201.81369019]
[60.31729126 187.68466187]
[65.35420990 173.55561829]
[70.39112854 159.42658997]
[75.42803955 145.29756165]
[70.52842712 134.23771667]
[74.60913086 122.42536163]
[85.99806976 116.37103271]
[91.24478912 102.31856537]
[90.15732574 98.61859131]
[90.70603180 94.45724487]
[93.06039429 90.57601166]
[97.05230713 87.76451874]
[102.92127228 73.96034241]
[108.79022980 60.15616989]
[108.11042786 55.86759949]
[108.76484680 51.97706604]
[110.46453857 48.85512924]
[112.82985687 46.74044800]
[115.44139099 45.72161865]
[122.12158203 32.29124451]
[128.80177307 18.86086655]
[135.48197937 5.43049049]
[142.16217041 -7.99988556]
[141.38037109 -23.80176353]
[153.97607422 -31.75145531]
[160.65626526 -45.18183136]
[167.33645630 -58.61220932]
[155.08195496 -49.96193695]
[140.70129395 -45.69621277]
[125.71208191 -46.26520157]
[111.69618988 -51.60886002]
[100.13272858 -61.16325378]
[92.24203491 -73.92008972]
[88.85681915 -88.53311157]
[90.33434296 -103.46016693]
[96.51866150 -117.12596893]
[106.75714874 -128.08833313]
[119.96930695 -135.19036865]
[134.76081848 -137.68260193]
[149.57069397 -135.30200195]
[162.83604431 -128.29978943]
[173.15690613 -117.41495514]
[179.44412231 -103.79618835]
[181.03416443 -88.88069916]
[177.75918579 -74.24238586]
[187.58976746 -85.57198334]
[197.42034912 -96.90157318]
[207.25093079 -108.23116302]
[197.00096130 -119.20185089]
[187.95390320 -131.18385315]
[180.20889282 -144.04591370]
[173.85079956 -157.64709473]
[168.94924927 -171.83839417]
[165.55798340 -186.46429443]
[163.71412659 -201.36454773]
[163.43791199 -216.37593079]
[164.73233032 -231.33393860]
[167.58323669 -246.07470703]
[171.95938110 -260.43670654]
[177.81280518 -274.26260376]
[185.07937622 -287.40087891]
[193.67948914 -299.70761108]
[203.51892090 -311.04794312]
[214.48985291 -321.29766846]
[226.47207642 -330.34442139]
[239.33433533 -338.08911133]
[252.93566895 -344.44689941]
[267.12707520 -349.34808350]
[281.75305176 -352.73901367]
[296.65335083 -354.58248901]
[311.66473389 -354.85836792]
[326.62274170 -353.56356812]
[341.36343384 -350.71231079]
[355.72531128 -346.33581543]
[369.55105591 -340.48205566]
[382.68917847 -333.21514893]
[394.99569702 -324.61474609]
[406.33581543 -314.77505493]
[416.58523560 -303.80386353]
[425.63171387 -291.82141113]
[433.37609863 -278.95898438]
[439.73352051 -265.35748291]
[444.63439941 -251.16595459]
[448.02496338 -236.53988647]
[449.86807251 -221.63954163]
[450.14358521 -206.62814331]
[448.84841919 -191.67019653]
[445.99679565 -176.92958069]
[441.61996460 -162.56777954]
[435.76586914 -148.74218750]
[428.49865723 -135.60424805]
[419.89794922 -123.29793549]
[410.05795288 -111.95806885]
[399.08651733 -101.70890045]
[387.10385132 -92.66271973]
[374.24124146 -84.91864777]
[360.63958740 -78.56153107]
[346.44793701 -73.66102600]
[331.82180786 -70.27082062]
[316.92138672 -68.42805481]
[301.91000366 -68.15292358]
[286.95208740 -69.44844818]
[272.21151733 -72.30042267]
[257.84985352 -76.67760468]
[244.02438354 -82.53203583]
[230.88662720 -89.79957581]
[218.58052063 -98.40058899]
[208.74993896 -87.07099152]
[198.91935730 -75.74140167]
[189.08877563 -64.41180420]
[180.76683044 -51.93201447]
[174.08663940 -38.50163651]
[167.40644836 -25.07126045]
[168.66606140 -10.23001289]
[155.59254456 -1.31969070]
[148.91235352 12.11068535]
[142.23216248 25.54106140]
[135.55195618 38.97143555]
[128.87176514 52.40181351]
[122.59440613 66.02513123]
[116.72544861 79.82930756]
[110.85648346 93.63348389]
[105.29725647 107.56528473]
[100.05053711 121.61775208]
[103.51863861 139.70237732]
[89.55706787 150.33448792]
[84.52015686 164.46351624]
[79.48323822 178.59254456]
[74.44631958 192.72157288]
[69.40940857 206.85060120]
[64.37248993 220.97962952]
[59.33557510 235.10865784]
[63.07254028 253.13964844]
[49.27081680 263.97842407]
[44.44482040 278.18090820]
[40.04381943 292.52075195]
[36.07172394 306.98526001]
[32.09962845 321.44979858]
[28.12753296 335.91430664]
[24.15543556 350.37884521]
[38.10985184 355.92297363]
[51.36965942 362.96859741]
[63.77389145 371.43017578]
[75.17198181 381.20495605]
[85.42556000 392.17434692]
[94.41016388 404.20513916]
[102.01672363 417.15130615]
[108.15290070 430.85571289]
[112.74420929 445.15197754]
[115.73492432 459.86654663]
[117.08872986 474.82083130]
[116.78919220 489.83328247]
[114.83995056 504.72164917]
[111.26467133 519.30523682]
[106.10674286 533.40698242]
[99.42879486 546.85571289]
[91.31187439 559.48815918]
[81.85453033 571.15100098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[46 187]
[47 186]
[50 184]
[51 183]
[52 182]
[53 181]
[54 180]
[55 179]
[56 178]
[59 176]
[60 175]
[64 174]
[65 173]
[66 172]
[71 171]
[72 170]
[73 169]
[74 168]
[75 167]
[77 165]
[78 164]
[79 163]
[97 162]
[98 161]
[99 160]
[100 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
