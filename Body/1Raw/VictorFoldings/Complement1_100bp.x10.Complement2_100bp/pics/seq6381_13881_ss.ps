%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[40.28977966 674.31927490]
[25.74866104 678.01513672]
[11.03404236 680.94494629]
[-3.81374359 683.10058594]
[-18.75399971 684.47625732]
[-33.74577713 685.06805420]
[-48.74798203 684.87451172]
[-63.71949768 683.89599609]
[-78.61928558 682.13531494]
[-93.40650177 679.59729004]
[-108.04062653 676.28875732]
[-122.48153687 672.21893311]
[-136.68965149 667.39886475]
[-150.62603760 661.84179688]
[-164.25250244 655.56298828]
[-177.53166199 648.57965088]
[-190.42715454 640.91088867]
[-202.90362549 632.57775879]
[-214.92686462 623.60302734]
[-226.46392822 614.01135254]
[-237.48318481 603.82904053]
[-247.95445251 593.08398438]
[-257.84899902 581.80566406]
[-267.13973999 570.02490234]
[-275.80117798 557.77404785]
[-283.80957031 545.08666992]
[-291.14300537 531.99761963]
[-297.78134155 518.54266357]
[-303.70642090 504.75869751]
[-308.90197754 490.68353271]
[-313.35375977 476.35577393]
[-317.04959106 461.81463623]
[-319.97933960 447.10000610]
[-322.13494873 432.25219727]
[-323.51055908 417.31195068]
[-324.10232544 402.32015991]
[-323.90872192 387.31796265]
[-322.93017578 372.34646606]
[-321.16946411 357.44668579]
[-318.63134766 342.65945435]
[-315.32281494 328.02536011]
[-311.25289917 313.58444214]
[-306.43280029 299.37634277]
[-300.87573242 285.43997192]
[-294.59686279 271.81353760]
[-287.61349487 258.53439331]
[-279.94467163 245.63891602]
[-271.61148071 233.16247559]
[-262.63674927 221.13926697]
[-253.04505920 209.60223389]
[-242.86271667 198.58299255]
[-232.11761475 188.11177063]
[-220.83923340 178.21725464]
[-209.05845642 168.92655945]
[-196.80758667 160.26515198]
[-184.12020874 152.25679016]
[-171.03108215 144.92340088]
[-157.57609558 138.28509521]
[-143.79212952 132.36006165]
[-129.71696472 127.16455841]
[-115.38917542 122.71281433]
[-100.84803772 119.01702118]
[-86.13339996 116.08732605]
[-71.28559875 113.93175507]
[-56.34533691 112.55620575]
[-41.35355759 111.96446228]
[-26.35135269 112.15813446]
[-11.37984467 113.13670349]
[3.51993108 114.89747620]
[18.30713463 117.43563080]
[32.94123459 120.74421692]
[47.38212585 124.81415558]
[61.59021759 129.63429260]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[115.78170776 44.36507797]
[119.32138062 29.78870201]
[122.86105347 15.21232605]
[126.40072632 0.63595080]
[112.26085663 -4.41199303]
[98.72610474 -10.91032410]
[85.94477844 -18.78784370]
[74.05690002 -27.95824242]
[63.19273758 -38.32104111]
[53.47131348 -49.76270676]
[44.99914551 -62.15786743]
[37.86905670 -75.37071991]
[32.15916824 -89.25650024]
[27.93204308 -103.66307068]
[25.23399353 -118.43257141]
[24.09458160 -133.40319824]
[24.52629280 -148.41090393]
[26.52439499 -163.29125977]
[30.06699753 -177.88125610]
[35.11528397 -192.02099609]
[41.61394501 -205.55558777]
[49.49177551 -218.33673096]
[58.66246414 -230.22438049]
[69.02552795 -241.08828735]
[80.46742249 -250.80943298]
[92.86279297 -259.28131104]
[106.07582092 -266.41107178]
[119.96173859 -272.12063599]
[134.36840820 -276.34741211]
[149.13796997 -279.04510498]
[164.10862732 -280.18414307]
[179.11631775 -279.75207520]
[193.99664307 -277.75360107]
[208.58654785 -274.21063232]
[222.72616577 -269.16201782]
[236.26060486 -262.66302490]
[249.04154968 -254.78488159]
[260.92898560 -245.61390686]
[271.79263306 -235.25057983]
[281.51348877 -223.80844116]
[289.98507690 -211.41287231]
[297.11450195 -198.19967651]
[302.82373047 -184.31361389]
[307.05017090 -169.90684509]
[309.74749756 -155.13720703]
[310.88616943 -140.16653442]
[310.45373535 -125.15884399]
[308.45489502 -110.27857208]
[304.91159058 -95.68875885]
[299.86260986 -81.54925537]
[293.36331177 -68.01498413]
[285.48486328 -55.23422623]
[276.31359863 -43.34702301]
[265.94998169 -32.48361206]
[254.50762939 -22.76302338]
[242.11184692 -14.29175758]
[228.89846802 -7.16263103]
[215.01226807 -1.45375514]
[200.60540771 2.77232099]
[185.83570862 5.46929407]
[170.86500549 6.60761452]
[155.85731506 6.17480993]
[140.97709656 4.17562342]
[137.43742371 18.75199890]
[133.89775085 33.32837296]
[130.35807800 47.90475082]
[141.00457764 37.33818436]
[154.99931335 31.93937492]
[169.98394775 32.61810684]
[183.43330383 39.26000977]
[193.08093262 50.74580002]
[197.30102539 65.13992310]
[195.38243103 80.01671600]
[187.64846802 92.86917877]
[175.40243530 101.53144836]
[160.70802307 104.54376984]
[146.04147339 101.39852905]
[133.87438965 92.62574005]
[126.25710297 79.70378113]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[102.42910004 148.45205688]
[115.32463837 156.12075806]
[127.80114746 164.45382690]
[139.82444763 173.42846680]
[151.36157227 183.02005005]
[162.38088989 193.20228577]
[172.85221863 203.94729614]
[182.74684143 215.22558594]
[192.03764343 227.00628662]
[200.69915771 239.25706482]
[208.70764160 251.94438171]
[216.04115295 265.03344727]
[222.67956543 278.48834229]
[228.60472107 292.27227783]
[233.80035400 306.34738159]
[238.25222778 320.67514038]
[241.94815063 335.21624756]
[244.87797546 349.93084717]
[247.03369141 364.77862549]
[248.40937805 379.71890259]
[249.00125122 394.71066284]
[248.80770874 409.71286011]
[247.82928467 424.68438721]
[246.06864929 439.58416748]
[243.53062439 454.37139893]
[240.22216797 469.00552368]
[236.15235901 483.44647217]
[231.33235168 497.65460205]
[225.77534485 511.59100342]
[219.49658203 525.21746826]
[212.51325989 538.49664307]
[204.84454346 551.39215088]
[196.51141357 563.86865234]
[187.53675842 575.89190674]
[177.94512939 587.42901611]
[167.76286316 598.44830322]
[157.01782227 608.91961670]
[145.73950195 618.81420898]
[133.95877075 628.10498047]
[121.70796204 636.76641846]
[109.02062988 644.77490234]
[95.93154907 652.10833740]
[82.47660828 658.74676514]
[68.69268036 664.67187500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 166]
[75 165]
[76 164]
[78 162]
[79 161]
[80 160]
[81 146]
[82 145]
[83 144]
[84 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
