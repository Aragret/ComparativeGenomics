%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[49.04024887 959.90979004]
[34.04115677 959.58679199]
[19.07197571 958.58636475]
[4.16329479 956.91052246]
[-10.65443230 954.56274414]
[-25.35093117 951.54779053]
[-39.89618301 947.87182617]
[-54.26046371 943.54229736]
[-68.41443634 938.56817627]
[-82.32917786 932.95947266]
[-95.97627258 926.72778320]
[-109.32782745 919.88580322]
[-122.35656738 912.44744873]
[-135.03588867 904.42791748]
[-147.33987427 895.84368896]
[-159.24337769 886.71228027]
[-170.72212219 877.05224609]
[-181.75260925 866.88336182]
[-192.31233215 856.22650146]
[-202.37971497 845.10333252]
[-211.93417358 833.53656006]
[-220.95620728 821.54992676]
[-229.42738342 809.16784668]
[-237.33038330 796.41558838]
[-244.64907837 783.31927490]
[-251.36849976 769.90557861]
[-257.47494507 756.20196533]
[-262.95590210 742.23645020]
[-267.80020142 728.03753662]
[-271.99792480 713.63415527]
[-275.54052734 699.05584717]
[-278.42077637 684.33233643]
[-280.63272095 669.49377441]
[-282.17190552 654.57031250]
[-283.03518677 639.59265137]
[-283.22076416 624.59118652]
[-282.72827148 609.59674072]
[-281.55871582 594.63977051]
[-279.71450806 579.75103760]
[-277.19937134 564.96075439]
[-274.01849365 550.29925537]
[-270.17834473 535.79650879]
[-265.68676758 521.48205566]
[-260.55297852 507.38522339]
[-254.78739929 493.53475952]
[-248.40185547 479.95898438]
[-241.40936279 466.68560791]
[-233.82423401 453.74176025]
[-225.66195679 441.15390015]
[-216.93920898 428.94772339]
[-207.67379761 417.14816284]
[-197.88465881 405.77935791]
[-187.59179688 394.86450195]
[-176.81623840 384.42590332]
[-165.57998657 374.48489380]
[-153.90599060 365.06176758]
[-141.81813049 356.17578125]
[-129.34107971 347.84509277]
[-116.50032806 340.08673096]
[-103.32211304 332.91653442]
[-89.83335876 326.34915161]
[-76.06161499 320.39797974]
[-62.03502274 315.07519531]
[-47.78223419 310.39169312]
[-33.33237076 306.35702515]
[-18.71495247 302.97943115]
[-3.95983911 300.26577759]
[10.90282440 298.22167969]
[25.84267426 296.85125732]
[40.82918930 296.15734863]
[55.83175278 296.14132690]
[70.81971741 296.80325317]
[72.15795135 281.86306763]
[73.49618530 266.92288208]
[63.93197632 258.28833008]
[61.04416656 245.53126526]
[66.10558319 233.25965881]
[77.47555542 226.03897095]
[79.03607941 211.12036133]
[80.59659576 196.20176697]
[82.15711975 181.28315735]
[83.71764374 166.36454773]
[81.45951843 162.15623474]
[81.82106018 156.48469543]
[85.55318451 151.02734375]
[87.55720520 136.16181946]
[89.56121826 121.29628754]
[91.56523132 106.43075562]
[92.90346527 91.49057007]
[93.57324982 76.50553131]
[94.01985168 61.51218414]
[94.24317932 46.51384735]
[86.71220398 32.60000610]
[94.63813782 19.98934174]
[87.10715485 6.07550287]
[95.03308868 -6.53516150]
[95.25641632 -21.53349876]
[95.47974396 -36.53183746]
[81.39913177 -42.19757843]
[70.31871796 -52.57008743]
[63.73704910 -66.24656677]
[62.54424286 -81.37738800]
[66.90161133 -95.91622162]
[76.21985626 -107.89682007]
[89.23876190 -115.69890594]
[104.19763184 -118.26730347]
[119.07339478 -115.25466156]
[131.85423279 -107.06841278]
[140.81164551 -94.81568909]
[144.73420715 -80.15356445]
[143.09143066 -65.06497192]
[136.10546875 -51.59051132]
[124.72114563 -41.55250549]
[110.47808075 -36.30850983]
[110.25475311 -21.31017113]
[110.03142548 -6.31183386]
[117.57837677 6.52922440]
[109.63647461 20.21266937]
[117.18342590 33.05373001]
[109.24151611 46.73717499]
[109.01818848 61.73551178]
[111.64276123 65.72558594]
[111.78865051 71.40676117]
[108.55828857 77.17531586]
[107.88850403 92.16035461]
[119.66014862 82.86367798]
[134.57316589 84.47672272]
[144.08470154 96.07546234]
[142.74610901 111.01561737]
[131.32420349 120.73878479]
[116.36196136 119.67509460]
[106.43075562 108.43476868]
[104.42674255 123.30030060]
[102.42272949 138.16583252]
[100.41871643 153.03135681]
[98.63625336 167.92507935]
[97.07572937 182.84367371]
[95.51520538 197.76228333]
[93.95468140 212.68089294]
[92.39415741 227.59948730]
[103.65686035 240.98495483]
[101.79087067 258.03878784]
[88.43637085 268.26110840]
[87.09813690 283.20129395]
[85.75990295 298.14147949]
[100.62690735 300.15374756]
[115.38780212 302.83575439]
[130.01242065 306.18203735]
[144.47090149 310.18576050]
[158.73368835 314.83871460]
[172.77165222 320.13140869]
[186.55610657 326.05303955]
[200.05891418 332.59152222]
[213.25245667 339.73348999]
[226.10980225 347.46432495]
[238.60467529 355.76824951]
[250.71154785 364.62832642]
[262.40570068 374.02639771]
[273.66320801 383.94332886]
[284.46112061 394.35882568]
[294.77734375 405.25158691]
[304.59082031 416.59939575]
[313.88150024 428.37908936]
[322.63037109 440.56652832]
[330.81961060 453.13687134]
[338.43246460 466.06445312]
[345.45336914 479.32281494]
[351.86798096 492.88488770]
[357.66320801 506.72296143]
[362.82720947 520.80877686]
[367.34945679 535.11352539]
[371.22064209 549.60803223]
[374.43295288 564.26269531]
[376.97973633 579.04748535]
[378.85586548 593.93231201]
[380.05746460 608.88671875]
[380.58206177 623.88006592]
[380.42861938 638.88189697]
[379.59744263 653.86138916]
[378.09024048 668.78808594]
[375.91006470 683.63140869]
[373.06140137 698.36102295]
[369.55004883 712.94689941]
[365.38317871 727.35919189]
[360.56930542 741.56848145]
[355.11828613 755.54571533]
[349.04122925 769.26239014]
[342.35055542 782.69042969]
[335.05993652 795.80242920]
[327.18426514 808.57153320]
[318.73965454 820.97174072]
[309.74331665 832.97772217]
[300.21365356 844.56488037]
[290.17013550 855.70965576]
[279.63327026 866.38909912]
[268.62457275 876.58160400]
[257.16656494 886.26617432]
[245.28265381 895.42309570]
[232.99708557 904.03369141]
[220.33499146 912.08032227]
[207.32220459 919.54656982]
[193.98535156 926.41717529]
[180.35163879 932.67810059]
[166.44894409 938.31652832]
[152.30566406 943.32104492]
[137.95068359 947.68127441]
[123.41334534 951.38842773]
[108.72333527 954.43487549]
[93.91067505 956.81439209]
[79.00562286 958.52215576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 145]
[73 144]
[74 143]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 125]
[90 124]
[91 121]
[92 120]
[94 118]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
