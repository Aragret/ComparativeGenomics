%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[39.32801056 697.65405273]
[24.77164268 701.29150391]
[10.03421783 704.10705566]
[-4.83789206 706.09185791]
[-19.79789352 707.23962402]
[-34.79871750 707.54675293]
[-49.79316330 707.01232910]
[-64.73405457 705.63800049]
[-79.57437897 703.42810059]
[-94.26744843 700.38958740]
[-108.76703644 696.53192139]
[-123.02750397 691.86737061]
[-137.00399780 686.41058350]
[-150.65254211 680.17871094]
[-163.93017578 673.19134521]
[-176.79515076 665.47052002]
[-189.20697021 657.04046631]
[-201.12658691 647.92773438]
[-212.51647949 638.16094971]
[-223.34085083 627.77093506]
[-233.56559753 616.79034424]
[-243.15858459 605.25372314]
[-252.08961487 593.19738770]
[-260.33059692 580.65924072]
[-267.85556030 567.67871094]
[-274.64089966 554.29669189]
[-280.66519165 540.55529785]
[-285.90954590 526.49768066]
[-290.35739136 512.16815186]
[-293.99481201 497.61175537]
[-296.81033325 482.87432861]
[-298.79504395 468.00219727]
[-299.94277954 453.04220581]
[-300.24987793 438.04138184]
[-299.71539307 423.04693604]
[-298.34100342 408.10604858]
[-296.13104248 393.26571655]
[-293.09243774 378.57266235]
[-289.23477173 364.07312012]
[-284.57019043 349.81265259]
[-279.11334229 335.83618164]
[-272.88137817 322.18765259]
[-265.89398193 308.91003418]
[-258.17306519 296.04510498]
[-249.74296570 283.63333130]
[-240.63020325 271.71374512]
[-230.86341858 260.32388306]
[-220.47337341 249.49954224]
[-209.49273682 239.27482605]
[-197.95608521 229.68188477]
[-185.89968872 220.75091553]
[-173.36149597 212.50999451]
[-160.38096619 204.98504639]
[-146.99891663 198.19978333]
[-133.25746155 192.17552185]
[-119.19985199 186.93124390]
[-104.87030792 182.48341370]
[-90.31391144 178.84605408]
[-75.57646179 176.03060913]
[-60.70434189 174.04592896]
[-45.74433136 172.89825439]
[-30.74350548 172.59121704]
[-15.74906254 173.12574768]
[-0.80818063 174.50019836]
[14.03213024 176.71022034]
[28.72517776 179.74887085]
[43.22472763 183.60659790]
[57.48516846 188.27124023]
[62.94052505 174.29844666]
[68.39588165 160.32565308]
[73.85123444 146.35285950]
[79.30659485 132.38005066]
[84.76195526 118.40725708]
[90.21730804 104.43446350]
[93.21208191 89.73645782]
[93.65869141 74.74310303]
[94.10529327 59.74975586]
[94.55190277 44.75640488]
[91.67938995 36.08539200]
[95.11842346 29.54361725]
[95.78820801 14.55857754]
[96.45799255 -0.42646080]
[97.12777710 -15.41149998]
[97.79756165 -30.39653778]
[83.01284027 -33.06026077]
[68.71509552 -37.67088699]
[55.15948486 -44.14613724]
[42.58792496 -52.37045288]
[31.22477341 -62.19705963]
[21.27281570 -73.45059204]
[12.90965843 -85.93021393]
[6.28455019 -99.41322327]
[1.51572490 -113.65898132]
[-1.31171262 -128.41326904]
[-2.14730334 -143.41278076]
[-0.97613525 -158.38981628]
[2.18089104 -173.07711792]
[7.26743460 -187.21255493]
[14.19271946 -200.54386902]
[22.83315659 -212.83314514]
[33.03454590 -223.86105347]
[44.61483383 -233.43081665]
[57.36735916 -241.37164307]
[71.06452942 -247.54180908]
[85.46190643 -251.83120728]
[100.30255890 -254.16328430]
[115.32162476 -254.49641418]
[130.25108337 -252.82467651]
[144.82449341 -249.17787170]
[158.78178406 -243.62112427]
[171.87385559 -236.25355530]
[183.86708069 -227.20668030]
[194.54742432 -216.64193726]
[203.72427368 -204.74786377]
[211.23385620 -191.73672485]
[216.94216919 -177.84072876]
[220.74732971 -163.30787659]
[222.58142090 -148.39749146]
[222.41174316 -133.37568665]
[220.24128723 -118.51053619]
[216.10881042 -104.06732941]
[210.08805847 -90.30383301]
[202.28646851 -77.46565247]
[192.84329224 -65.78192139]
[181.92703247 -55.46113205]
[169.73249817 -46.68748093]
[156.47734070 -39.61754227]
[142.39808655 -34.37748337]
[127.74601746 -31.06082535]
[112.78260040 -29.72675323]
[112.11281586 -14.74171448]
[111.44303131 0.24332434]
[110.77324677 15.22836304]
[110.10346222 30.21340179]
[109.54524994 45.20301056]
[109.09864807 60.19636154]
[108.65203857 75.18971252]
[108.20543671 90.18305969]
[115.28479004 76.95874023]
[125.39279175 65.87594604]
[137.91133118 57.61239624]
[152.07489014 52.67341232]
[167.01736450 51.36101532]
[181.82501221 53.75545883]
[195.59236145 59.71031952]
[207.47750854 68.86145782]
[216.75367737 80.64927673]
[222.85362244 94.35294342]
[225.40435791 109.13448334]
[224.24986267 124.08998871]
[219.46076965 138.30493164]
[211.32991028 150.91004944]
[200.35450745 161.13456726]
[187.20570374 168.35321045]
[172.68754578 172.12458801]
[157.68783569 172.21804810]
[143.12380981 168.62791443]
[129.88606262 161.57369995]
[118.78408813 151.48677063]
[110.49677277 138.98394775]
[105.53089142 124.82980347]
[104.19010925 109.88981628]
[98.73474884 123.86261749]
[93.27939606 137.83541870]
[87.82403564 151.80821228]
[82.36867523 165.78100586]
[76.91332245 179.75379944]
[71.45796204 193.72660828]
[85.10655212 199.95838928]
[98.38424683 206.94564819]
[111.24927521 214.66641235]
[123.66114807 223.09637451]
[135.58082581 232.20901489]
[146.97080994 241.97567749]
[157.79524231 252.36560059]
[168.02008057 263.34609985]
[177.61315918 274.88265991]
[186.54426575 286.93896484]
[194.78533936 299.47705078]
[202.31040955 312.45751953]
[209.09582520 325.83947754]
[215.12023926 339.58087158]
[220.36468506 353.63842773]
[224.81266785 367.96792603]
[228.45018005 382.52426147]
[231.26579285 397.26168823]
[233.25064087 412.13378906]
[234.39848328 427.09378052]
[234.70570374 442.09460449]
[234.17132568 457.08905029]
[232.79704285 472.02996826]
[230.58718872 486.87030029]
[227.54869080 501.56338501]
[223.69113159 516.06298828]
[219.02664185 530.32342529]
[213.56990051 544.29998779]
[207.33805847 557.94854736]
[200.35073853 571.22619629]
[192.62994385 584.09118652]
[184.19992065 596.50305176]
[175.08723450 608.42266846]
[165.32054138 619.81262207]
[154.93057251 630.63702393]
[143.95002747 640.86181641]
[132.41343689 650.45483398]
[120.35710907 659.38592529]
[107.81898499 667.62695312]
[94.83850098 675.15197754]
[81.45650482 681.93731689]
[67.71510315 687.96173096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 138]
[76 137]
[77 136]
[78 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
