%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[117.71075439 748.28442383]
[103.06529999 745.02770996]
[88.60198212 741.03930664]
[74.35732269 736.32916260]
[60.36731720 730.90924072]
[46.66729736 724.79333496]
[33.29187393 717.99670410]
[20.27483749 710.53668213]
[7.64906549 702.43200684]
[-4.55354548 693.70324707]
[-16.30217171 684.37237549]
[-27.56713486 674.46295166]
[-38.31997681 664.00006104]
[-48.53353882 653.01013184]
[-58.18201447 641.52093506]
[-67.24103546 629.56140137]
[-75.68771362 617.16186523]
[-83.50072479 604.35357666]
[-90.66031647 591.16888428]
[-97.14840698 577.64111328]
[-102.94860840 563.80450439]
[-108.04627228 549.69384766]
[-112.42851257 535.34497070]
[-116.08427429 520.79400635]
[-119.00430298 506.07769775]
[-121.18124390 491.23327637]
[-122.60958099 476.29824829]
[-123.28571320 461.31030273]
[-123.20793152 446.30734253]
[-122.37642670 431.32720947]
[-120.79331207 416.40777588]
[-118.46257782 401.58676147]
[-115.39011383 386.90151978]
[-111.58367920 372.38925171]
[-107.05288696 358.08654785]
[-101.80918884 344.02954102]
[-95.86582947 330.25375366]
[-89.23782349 316.79400635]
[-81.94190979 303.68426514]
[-73.99652100 290.95767212]
[-65.42173004 278.64636230]
[-56.23918915 266.78143311]
[-46.47210312 255.39286804]
[-36.14514160 244.50942993]
[-25.28438950 234.15859985]
[-13.91728497 224.36654663]
[-2.07254219 215.15798950]
[10.21991920 206.55619812]
[22.92904663 198.58288574]
[36.02273560 191.25822449]
[49.46791077 184.60067749]
[63.23060608 178.62710571]
[77.27606201 173.35256958]
[91.56878662 168.79039001]
[106.07268524 164.95211792]
[102.96857452 150.27680969]
[92.76496887 139.42620850]
[97.47897339 124.32360077]
[94.37486267 109.64829254]
[91.16158295 94.99650574]
[87.83932495 80.36904907]
[84.51706696 65.74158478]
[81.19480896 51.11412811]
[77.87255096 36.48666763]
[65.05189514 23.26878357]
[70.89244080 6.72021723]
[67.35276794 -7.85615826]
[63.81309509 -22.43253326]
[60.27342224 -37.00890732]
[56.73374939 -51.58528519]
[53.19407654 -66.16165924]
[38.28836823 -64.33508301]
[23.27139282 -64.25134277]
[8.34624100 -65.91157532]
[-6.28524303 -69.29331970]
[-20.42518616 -74.35083771]
[-33.88235855 -81.01574707]
[-46.47477341 -89.19789886]
[-58.03212738 -98.78665161]
[-68.39812469 -109.65231323]
[-77.43257141 -121.64794922]
[-85.01329041 -134.61132812]
[-91.03775787 -148.36714172]
[-95.42450714 -162.72933960]
[-98.11420441 -177.50370789]
[-99.07048035 -192.49044800]
[-98.28040314 -207.48684692]
[-95.75464630 -222.29013062]
[-91.52738190 -236.70008850]
[-85.65577698 -250.52183533]
[-78.21923065 -263.56845093]
[-69.31831360 -275.66351318]
[-59.07341003 -286.64340210]
[-47.62306213 -296.35968018]
[-35.12212753 -304.68093872]
[-21.73966217 -311.49462891]
[-7.65665388 -316.70858765]
[6.93644285 -320.25231934]
[21.84227371 -322.07788086]
[36.85925293 -322.16064453]
[51.78429413 -320.49942017]
[66.41555023 -317.11669922]
[80.55516052 -312.05822754]
[94.01188660 -305.39242554]
[106.60375214 -297.20941162]
[118.16046906 -287.61990356]
[128.52574158 -276.75354004]
[137.55938721 -264.75729370]
[145.13923645 -251.79342651]
[151.16279602 -238.03720093]
[155.54858398 -223.67471313]
[158.23728943 -208.90016174]
[159.19256592 -193.91336060]
[158.40148926 -178.91700745]
[155.87475586 -164.11389160]
[151.64651489 -149.70422363]
[145.77398682 -135.88287354]
[138.33657837 -122.83674622]
[129.43484497 -110.74228668]
[119.18920898 -99.76306152]
[107.73822021 -90.04754639]
[95.23672485 -81.72713470]
[81.85380554 -74.91435242]
[67.77045441 -69.70133209]
[71.31012726 -55.12495804]
[74.84980011 -40.54858017]
[78.38946533 -25.97220612]
[81.92913818 -11.39583015]
[85.46881104 3.18054485]
[95.63264465 9.73974800]
[98.70089722 21.85459709]
[92.50000763 33.16440964]
[95.82226562 47.79186630]
[99.14452362 62.41932678]
[102.46678925 77.04679108]
[105.78904724 91.67424774]
[110.50341797 98.21238708]
[109.05016327 106.54418182]
[112.15427399 121.21949005]
[122.57990265 133.11976624]
[117.64388275 147.17269897]
[120.74799347 161.84800720]
[135.56385803 159.48458862]
[150.47975159 157.86857605]
[165.45800781 157.00402832]
[180.46076965 156.89315796]
[195.45016479 157.53623962]
[210.38832092 158.93162537]
[225.23748779 161.07582092]
[239.96017456 163.96339417]
[254.51918030 167.58705139]
[268.87771606 171.93763733]
[282.99954224 177.00416565]
[296.84896851 182.77383423]
[310.39099121 189.23207092]
[323.59143066 196.36256409]
[336.41693115 204.14730835]
[348.83508301 212.56661987]
[360.81454468 221.59924316]
[372.32501221 231.22235107]
[383.33746338 241.41165161]
[393.82403564 252.14138794]
[403.75823975 263.38446045]
[413.11502075 275.11248779]
[421.87069702 287.29580688]
[430.00317383 299.90368652]
[437.49191284 312.90423584]
[444.31796265 326.26464844]
[450.46414185 339.95114136]
[455.91485596 353.92913818]
[460.65637207 368.16339111]
[464.67672729 382.61788940]
[467.96575928 397.25610352]
[470.51510620 412.04110718]
[472.31838989 426.93551636]
[473.37103271 441.90173340]
[473.67041016 456.90191650]
[473.21569824 471.89822388]
[472.00808716 486.85272217]
[470.05062866 501.72766113]
[467.34823608 516.48547363]
[463.90777588 531.08886719]
[459.73791504 545.50091553]
[454.84921265 559.68530273]
[449.25399780 573.60607910]
[442.96640015 587.22821045]
[436.00231934 600.51715088]
[428.37933350 613.43945312]
[420.11669922 625.96240234]
[411.23529053 638.05438232]
[401.75753784 649.68487549]
[391.70739746 660.82446289]
[381.11026001 671.44500732]
[369.99285889 681.51965332]
[358.38333130 691.02301025]
[346.31097412 699.93109131]
[333.80627441 708.22131348]
[320.90081787 715.87280273]
[307.62722778 722.86614990]
[294.01904297 729.18377686]
[280.11059570 734.80969238]
[265.93704224 739.72967529]
[251.53421021 743.93133545]
[236.93846130 747.40399170]
[222.18666077 750.13891602]
[207.31607056 752.12915039]
[192.36425781 753.36975098]
[177.36901855 753.85754395]
[162.36819458 753.59124756]
[147.39970398 752.57165527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 142]
[56 141]
[58 139]
[59 138]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
