%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[101.01411438 633.41217041]
[87.30130005 627.29858398]
[74.30266571 619.78503418]
[62.16063690 610.95391846]
[51.00823975 600.90197754]
[40.96767044 589.73931885]
[32.14893723 577.58825684]
[24.64866257 564.58197021]
[18.54902649 550.86291504]
[13.91685963 536.58148193]
[10.80291271 521.89404297]
[9.24130440 506.96151733]
[9.24914455 491.94760132]
[10.82634830 477.01678467]
[13.95563316 462.33258057]
[18.60271454 448.05593872]
[24.71667480 434.34329224]
[32.23052597 421.34481812]
[41.06194687 409.20300293]
[51.11417007 398.05087280]
[62.27706146 388.01055908]
[74.42830658 379.19213867]
[87.43478394 371.69216919]
[101.15397644 365.59286499]
[115.43556976 360.96105957]
[130.12309265 357.84744263]
[128.56256104 342.92886353]
[127.00204468 328.01025391]
[125.44152069 313.09164429]
[116.24512482 305.23333740]
[114.82292938 292.81716919]
[122.47923279 282.43719482]
[121.14099884 267.49700928]
[119.80276489 252.55683899]
[118.46453094 237.61665344]
[114.73681641 231.23495483]
[117.21928406 222.44433594]
[116.10363770 207.48587036]
[107.44115448 195.36932373]
[114.13061523 181.03190613]
[111.46482086 166.27069092]
[107.27780914 151.86691284]
[103.09079742 137.46311951]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[82.63217163 65.07704163]
[78.66007996 50.61252213]
[75.67737579 65.31298065]
[68.88836670 78.68868256]
[58.78315735 89.77401733]
[46.09125137 97.76873779]
[31.72888756 102.09568787]
[16.73289871 102.44250488]
[2.18585539 98.78415680]
[-10.86207676 91.38472748]
[-21.46895599 80.77840424]
[-28.86906433 67.73086548]
[-32.52817917 53.18401337]
[-32.18214798 38.18800354]
[-27.85595131 23.82541275]
[-19.86189842 11.13308716]
[-8.77708912 1.02729738]
[4.59825563 -5.76241207]
[19.29855728 -8.74588585]
[34.26258850 -7.70774364]
[48.41008759 -2.72293067]
[60.71972656 5.84869528]
[70.30286407 17.38834190]
[76.46802521 31.06406593]
[77.13780975 16.07902718]
[70.02443695 1.94713008]
[78.32231903 -10.42195892]
[78.99210358 -25.40699768]
[79.66188812 -40.39203644]
[80.33167267 -55.37707520]
[73.21829987 -69.50897217]
[81.51618958 -81.87805939]
[74.40281677 -96.00995636]
[82.70069885 -108.37904358]
[73.83790588 -124.52006531]
[83.85211945 -138.93125916]
[84.29872131 -153.92460632]
[84.74533081 -168.91795349]
[69.95753479 -171.59730530]
[55.73428345 -176.45083618]
[42.39332199 -183.37010193]
[30.23268700 -192.20054626]
[19.52405930 -202.74488831]
[10.50667191 -214.76754761]
[3.38197446 -227.99993896]
[-1.69086325 -242.14645386]
[-4.59851265 -256.89105225]
[-5.27601528 -271.90432739]
[-3.70823622 -286.85089111]
[0.06980059 -301.39682007]
[5.97369194 -315.21716309]
[13.87154293 -328.00317383]
[23.58691216 -339.46917725]
[34.90275574 -349.35903931]
[47.56627274 -357.45181274]
[61.29455566 -363.56671143]
[75.78090668 -367.56710815]
[90.70170593 -369.36364746]
[105.72360229 -368.91616821]
[120.51100922 -366.23474121]
[134.73356628 -361.37918091]
[148.07354736 -354.45800781]
[160.23292542 -345.62582397]
[170.94004822 -335.07995605]
[179.95571899 -323.05603027]
[187.07853699 -309.82260132]
[192.14936829 -295.67538452]
[195.05491638 -280.93035889]
[195.73027039 -265.91699219]
[194.16036987 -250.97064209]
[190.38026428 -236.42524719]
[184.47439575 -222.60575867]
[176.57472229 -209.82089233]
[166.85772705 -198.35626221]
[155.54046631 -188.46801758]
[142.87580872 -180.37704468]
[129.14665222 -174.26411438]
[114.65972900 -170.26576233]
[99.73867798 -168.47135925]
[99.29206848 -153.47799683]
[98.84546661 -138.48464966]
[106.90954590 -129.46815491]
[106.66017151 -116.97329712]
[97.68573761 -107.70925903]
[104.84702301 -94.64919281]
[96.50122833 -81.20827484]
[103.66250610 -68.14820862]
[95.31671143 -54.70729065]
[94.64692688 -39.72225189]
[93.97714233 -24.73721313]
[93.30735779 -9.75217342]
[100.46863556 3.30789232]
[92.12284851 16.74881172]
[91.45306396 31.73385048]
[93.12460327 46.64042282]
[97.09669495 61.10494995]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[117.49457550 133.27610779]
[121.68158722 147.67990112]
[125.86859894 162.08367920]
[129.57846069 147.54968262]
[138.50621033 135.49583435]
[151.32745361 127.71023560]
[166.14025879 125.34783936]
[180.74722290 128.75909424]
[192.98149109 137.43797302]
[201.02816772 150.09698486]
[203.69360352 164.85827637]
[200.58238220 179.53205872]
[192.15603638 191.94160461]
[179.66456604 200.24600220]
[164.96099854 203.21336365]
[150.22653198 200.40347290]
[137.64692688 192.23318481]
[129.08906555 179.91625977]
[137.83134460 193.10273743]
[131.06208801 206.37022400]
[132.17773438 221.32867432]
[133.40470886 236.27841187]
[134.74295044 251.21859741]
[136.08117676 266.15878296]
[137.41941833 281.09896851]
[148.35920715 295.91119385]
[140.36012268 311.53112793]
[141.92065430 326.44973755]
[143.48117065 341.36831665]
[145.04168701 356.28692627]
[160.05560303 356.29367065]
[174.98657227 357.86978149]
[189.67098999 360.99801636]
[203.94795227 365.64404297]
[217.66107178 371.75701904]
[230.66006470 379.26992798]
[242.80253601 388.10046387]
[253.95541382 398.15185547]
[263.99652100 409.31402588]
[272.81585693 421.46463013]
[280.31674194 434.47055054]
[286.41705322 448.18930054]
[291.04992676 462.47055054]
[294.16458130 477.15783691]
[295.72689819 492.09027100]
[295.71978760 507.10418701]
[294.14331055 522.03509521]
[291.01473999 536.71942139]
[286.36837769 550.99627686]
[280.25506592 564.70922852]
[272.74185181 577.70806885]
[263.91101074 589.85034180]
[253.85934448 601.00299072]
[242.69692993 611.04382324]
[230.54611206 619.86285400]
[217.54000854 627.36340332]
[203.82110596 633.46337891]
[189.53973389 638.09588623]
[174.85237122 641.21020508]
[159.91992188 642.77215576]
[144.90600586 642.76470947]
[129.97512817 641.18786621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 178]
[27 177]
[28 176]
[29 175]
[32 173]
[33 172]
[34 171]
[35 170]
[37 169]
[38 168]
[40 166]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[47 146]
[48 145]
[49 144]
[50 143]
[72 142]
[73 141]
[75 139]
[76 138]
[77 137]
[78 136]
[80 134]
[82 132]
[84 129]
[85 128]
[86 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
