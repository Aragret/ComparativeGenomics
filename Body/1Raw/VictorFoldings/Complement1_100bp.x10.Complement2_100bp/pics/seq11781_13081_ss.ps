%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[119.96946716 825.24615479]
[105.36459351 821.80944824]
[90.96919250 817.58038330]
[76.82621765 812.57147217]
[62.97787857 806.79766846]
[49.46551132 800.27630615]
[36.32943344 793.02673340]
[23.60885048 785.07061768]
[11.34172916 776.43170166]
[-0.43532318 767.13580322]
[-11.68715763 757.21063232]
[-22.38019562 746.68579102]
[-32.48252487 735.59277344]
[-41.96399307 723.96453857]
[-50.79630661 711.83593750]
[-58.95310593 699.24310303]
[-66.41004944 686.22363281]
[-73.14487457 672.81634521]
[-79.13748932 659.06134033]
[-84.37001038 644.99951172]
[-88.82682037 630.67297363]
[-92.49461365 616.12445068]
[-95.36244965 601.39733887]
[-97.42176056 586.53552246]
[-98.66641235 571.58349609]
[-99.09268951 556.58581543]
[-98.69931030 541.58721924]
[-97.48745728 526.63244629]
[-95.46073914 511.76620483]
[-92.62521362 497.03280640]
[-88.98934174 482.47625732]
[-84.56397247 468.13998413]
[-79.36230469 454.06674194]
[-73.39987183 440.29858398]
[-66.69446564 426.87658691]
[-59.26610184 413.84075928]
[-51.13694382 401.23007202]
[-42.33125305 389.08212280]
[-32.87531281 377.43316650]
[-22.79733849 366.31799316]
[-12.12741184 355.76974487]
[-0.89737320 345.81991577]
[10.85926151 336.49819946]
[23.10740471 327.83239746]
[35.81050491 319.84841919]
[48.93064880 312.57003784]
[62.42868423 306.01901245]
[76.26432037 300.21487427]
[90.39627838 295.17495728]
[104.78237152 290.91430664]
[119.37966919 287.44561768]
[116.71387482 272.68438721]
[114.04808044 257.92318726]
[111.38227844 243.16195679]
[108.71648407 228.40074158]
[99.29626465 240.07376099]
[84.39636230 241.80377197]
[72.55212402 232.59976196]
[70.54846191 217.73417664]
[79.53317261 205.72273254]
[94.35939789 203.44610596]
[106.53350830 212.20765686]
[105.19526672 197.26747131]
[103.85703278 182.32728577]
[102.51879883 167.38710022]
[101.18056488 152.44691467]
[99.17655182 137.58139038]
[96.51075745 122.82016754]
[93.84496307 108.05895233]
[89.42723083 101.31683350]
[91.25107574 93.05822754]
[88.80535126 78.25895691]
[86.35961914 63.45969009]
[83.91389465 48.66041946]
[78.71552277 62.73084641]
[68.84010315 74.02137756]
[55.58691406 81.04654694]
[40.69964218 82.88207245]
[26.13696671 79.28646088]
[13.81485271 70.73277283]
[5.35448980 58.34640121]
[1.86898351 43.75697708]
[3.81691194 28.88399696]
[10.94199181 15.68425274]
[22.30679512 5.89440012]
[36.41608810 0.80246109]
[51.41355133 1.07836866]
[65.32601166 6.68582249]
[76.32303619 16.88706589]
[82.95843506 30.34223747]
[76.05625916 16.10600090]
[84.53737640 3.86182547]
[85.43019867 -11.11157990]
[86.32301331 -26.08498573]
[87.21582794 -41.05839157]
[88.10864258 -56.03179932]
[73.78919220 -60.78740692]
[61.18904877 -69.08792877]
[51.16729736 -80.36742401]
[44.40724945 -93.85683441]
[41.36980820 -108.63642120]
[42.26207352 -123.69850159]
[47.02321243 -138.01611328]
[55.32860184 -150.61305237]
[66.61196136 -160.63044739]
[80.10398102 -167.38529968]
[94.88474274 -170.41702271]
[109.94647980 -169.51893616]
[124.26225281 -164.75227356]
[136.85598755 -156.44203186]
[146.86901855 -145.15480042]
[153.61865234 -131.66017151]
[156.64468384 -116.87824249]
[155.74078369 -101.81684875]
[150.96858215 -87.50292206]
[142.65347290 -74.91239929]
[131.36238098 -64.90372467]
[117.86515045 -58.15930176]
[103.08204651 -55.13898087]
[102.18923187 -40.16557693]
[101.29641724 -25.19217110]
[100.40360260 -10.21876431]
[99.51078796 4.75464153]
[106.47682953 17.91987991]
[97.93184662 31.23505402]
[98.71316528 46.21469116]
[101.15888977 61.01396179]
[103.60462189 75.81323242]
[106.05034637 90.61250305]
[108.60617828 105.39315796]
[111.27197266 120.15437317]
[113.93777466 134.91558838]
[123.35799408 123.24256897]
[138.25790405 121.51255798]
[150.10214233 130.71658325]
[152.10578918 145.58215332]
[143.12107849 157.59361267]
[128.29486084 159.87023926]
[116.12075043 151.10868835]
[117.45898438 166.04887390]
[118.79721832 180.98904419]
[120.13545227 195.92922974]
[121.47368622 210.86941528]
[123.47770691 225.73495483]
[126.14350128 240.49617004]
[128.80929565 255.25738525]
[131.47508240 270.01861572]
[134.14088440 284.77981567]
[149.02937317 282.92352295]
[163.99700928 281.88305664]
[178.99914551 281.66152954]
[193.99098206 282.25958252]
[208.92779541 283.67541504]
[223.76499939 285.90484619]
[238.45831299 288.94119263]
[252.96388245 292.77542114]
[267.23843384 297.39605713]
[281.23934937 302.78930664]
[294.92483521 308.93908691]
[308.25408936 315.82705688]
[321.18728638 323.43264771]
[333.68588257 331.73318481]
[345.71249390 340.70382690]
[357.23132324 350.31790161]
[368.20791626 360.54663086]
[378.60955811 371.35952759]
[388.40518188 382.72433472]
[397.56558228 394.60708618]
[406.06338501 406.97235107]
[413.87326050 419.78326416]
[420.97189331 433.00152588]
[427.33807373 446.58770752]
[432.95281982 460.50128174]
[437.79940796 474.70068359]
[441.86331177 489.14358521]
[445.13244629 503.78686523]
[447.59704590 518.58685303]
[449.24975586 533.49926758]
[450.08563232 548.47973633]
[450.10217285 563.48352051]
[449.29937744 578.46575928]
[447.67959595 593.38183594]
[445.24765015 608.18719482]
[442.01086426 622.83764648]
[437.97882080 637.28948975]
[433.16360474 651.49957275]
[427.57955933 665.42553711]
[421.24337769 679.02569580]
[414.17395020 692.25964355]
[406.39236450 705.08770752]
[397.92187500 717.47167969]
[388.78771973 729.37469482]
[379.01721191 740.76104736]
[368.63946533 751.59686279]
[357.68545532 761.84979248]
[346.18789673 771.48925781]
[334.18109131 780.48645020]
[321.70086670 788.81451416]
[308.78448486 796.44866943]
[295.47045898 803.36602783]
[281.79855347 809.54602051]
[267.80960083 814.97015381]
[253.54527283 819.62225342]
[239.04820251 823.48852539]
[224.36161804 826.55725098]
[209.52937317 828.81945801]
[194.59573364 830.26824951]
[179.60523987 830.89941406]
[164.60266113 830.71093750]
[149.63276672 829.70355225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 132]
[68 131]
[69 130]
[71 129]
[72 128]
[73 127]
[74 126]
[90 125]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
