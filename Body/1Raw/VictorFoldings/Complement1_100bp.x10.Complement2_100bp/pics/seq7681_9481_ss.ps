%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[122.16767120 722.52111816]
[107.39771271 719.68920898]
[93.34397125 714.33538818]
[80.43351746 706.62231445]
[69.05868530 696.78442383]
[59.56513977 685.12066650]
[52.24138260 671.98547363]
[47.30997467 657.77795410]
[44.92077637 642.92999268]
[45.14638901 627.89270020]
[47.97995758 613.12304688]
[53.33537674 599.06994629]
[61.04990005 586.16033936]
[70.88909149 574.78662109]
[82.55394745 565.29437256]
[95.68998718 557.97210693]
[109.89801788 553.04235840]
[124.74627686 550.65484619]
[124.96960449 535.65649414]
[125.19293976 520.65814209]
[125.41626740 505.65982056]
[125.63959503 490.66146851]
[124.85826874 475.68182373]
[123.07580566 460.78811646]
[121.29333496 445.89440918]
[119.51087189 431.00067139]
[117.72840881 416.10696411]
[115.94593811 401.21325684]
[114.16347504 386.31951904]
[111.63255310 383.86459351]
[110.16496277 380.06179810]
[110.38124847 375.42428589]
[112.64932251 370.72290039]
[111.53366852 355.76443481]
[110.41802216 340.80599976]
[109.30237579 325.84753418]
[108.18672180 310.88909912]
[93.34314728 308.89810181]
[79.23246002 303.86230469]
[66.47225189 295.99951172]
[55.62156677 285.65136719]
[47.15636826 273.26843262]
[41.44868469 259.39056396]
[38.75025558 244.62348938]
[39.18142319 229.61224365]
[42.72576904 215.01303101]
[49.23072815 201.46456909]
[58.41416550 189.56015015]
[69.87658691 179.82157898]
[83.11853027 172.67639160]
[97.56235504 168.43907166]
[96.44670105 153.48062134]
[95.33105469 138.52217102]
[94.21540833 123.56371307]
[93.09975433 108.60525513]
[81.48268127 118.09438324]
[66.78917694 115.07762909]
[59.85074234 101.77882385]
[65.78214264 88.00135803]
[80.21096039 83.90146637]
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[92.50000000 62.50000000]
[92.50000000 47.50000000]
[77.39358521 43.12560654]
[64.14163971 34.68353653]
[53.81151962 22.86342430]
[47.23250580 8.62659931]
[44.92924500 -6.87212133]
[47.07993317 -22.37808609]
[53.50252914 -36.63838577]
[63.67015839 -48.50308990]
[76.75431061 -57.01796722]
[91.69235992 -61.50123978]
[83.75045013 -75.18468475]
[91.29740143 -88.02574158]
[91.07407379 -103.02407837]
[90.85074615 -118.02241516]
[90.62741852 -133.02075195]
[90.40409088 -148.01908875]
[90.18076324 -163.01742554]
[80.37295532 -178.60231018]
[89.51164246 -193.58401489]
[89.06503296 -208.57736206]
[88.61843109 -223.57070923]
[88.17182159 -238.56405640]
[86.94484711 -253.51379395]
[84.94083405 -268.37933350]
[82.93682098 -283.24484253]
[80.93280792 -298.11038208]
[78.92879486 -312.97589111]
[64.01605988 -315.44607544]
[50.49469757 -322.20361328]
[39.56701660 -332.64761353]
[32.20470047 -345.84942627]
[29.06240082 -360.63513184]
[30.41952705 -375.69003296]
[36.15540695 -389.67541504]
[45.76000977 -401.34771729]
[58.37929916 -409.66906738]
[72.89117432 -413.89953613]
[88.00525665 -413.66293335]
[102.37760925 -408.98031616]
[114.73024750 -400.26803589]
[123.96478271 -388.30081177]
[129.26010132 -374.14273071]
[130.14532471 -359.05273438]
[126.54175568 -344.37261963]
[118.76981354 -331.40774536]
[107.52057648 -321.31091309]
[93.79431915 -314.97991943]
[95.79833221 -300.11437988]
[97.80234528 -285.24887085]
[99.80636597 -270.38333130]
[101.81037903 -255.51780701]
[110.83488464 -267.49938965]
[125.42083740 -270.99938965]
[138.89973450 -264.41763306]
[145.10920715 -250.76324463]
[141.21037292 -236.27880859]
[128.98571777 -227.58641052]
[114.02418518 -228.66011047]
[103.16517639 -239.01066589]
[103.61177826 -224.01731873]
[104.05838776 -209.02397156]
[104.50498962 -194.03060913]
[113.09144592 -185.51008606]
[113.58622742 -173.02253723]
[105.17910767 -163.24075317]
[105.40243530 -148.24241638]
[105.62576294 -133.24407959]
[105.84909058 -118.24574280]
[106.07241821 -103.24740601]
[106.29574585 -88.24906921]
[114.22167206 -75.63840485]
[106.69069672 -61.72456741]
[120.57780457 -58.17556381]
[133.08151245 -51.14332199]
[143.34457397 -41.10276031]
[150.66148376 -28.73527718]
[154.52702332 -14.88253212]
[154.67102051 -0.48915586]
[151.07739258 13.46166039]
[143.98551941 26.01532745]
[133.87438965 36.31117249]
[121.43025208 43.64145660]
[107.50000000 47.50000000]
[107.50000000 62.50000000]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
[108.05821228 107.48960876]
[109.17385864 122.44805908]
[110.28950500 137.40650940]
[111.40515900 152.36497498]
[112.52080536 167.32342529]
[127.43338776 169.37126160]
[141.58876038 174.47305298]
[154.36898804 182.40353394]
[165.21673584 192.81396484]
[173.65953064 205.24757385]
[179.33032227 219.15948486]
[181.98350525 233.94070435]
[181.50549316 248.94468689]
[177.91961670 263.51568604]
[171.38497925 277.01736450]
[162.18939209 288.86062622]
[150.73674011 298.52929688]
[137.52917480 305.60256958]
[123.14517975 309.77343750]
[124.26082611 324.73190308]
[125.37647247 339.69033813]
[126.49212646 354.64880371]
[127.60777283 369.60723877]
[129.05718994 384.53704834]
[130.83966064 399.43078613]
[132.62211609 414.32449341]
[134.40458679 429.21820068]
[136.18705750 444.11193848]
[137.96952820 459.00564575]
[139.75198364 473.89935303]
[147.60534668 461.11950684]
[161.07481384 454.51849365]
[175.98674011 456.14172363]
[187.72047424 465.48620605]
[192.64021301 479.65646362]
[189.22151184 494.26168823]
[178.52369690 504.77627563]
[163.86160278 507.94219971]
[149.77844238 502.77844238]
[140.63792419 490.88479614]
[140.41459656 505.88314819]
[140.19126892 520.88146973]
[139.96794128 535.87982178]
[139.74461365 550.87817383]
[154.51521301 553.70666504]
[168.57017517 559.05731201]
[181.48237610 566.76745605]
[192.85943604 576.60278320]
[202.35562134 588.26440430]
[209.68235779 601.39794922]
[214.61698914 615.60430908]
[217.00956726 630.45178223]
[216.78735352 645.48907471]
[213.95713806 660.25939941]
[208.60490417 674.31372070]
[200.89331055 687.22503662]
[191.05670166 698.60101318]
[179.39399719 708.09588623]
[166.25962830 715.42114258]
[152.05270386 720.35412598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[61 150]
[62 149]
[63 148]
[64 147]
[74 136]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[83 126]
[84 125]
[85 124]
[86 123]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
