%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[145.58387756 721.52807617]
[131.78559875 715.63330078]
[118.37234497 708.90832520]
[105.39403534 701.37805176]
[92.89894104 693.07061768]
[80.93354034 684.01690674]
[69.54234314 674.25054932]
[58.76774216 663.80792236]
[48.64980316 652.72784424]
[39.22617340 641.05151367]
[30.53190804 628.82244873]
[22.59935188 616.08605957]
[15.45801067 602.88977051]
[9.13445473 589.28265381]
[3.65220737 575.31536865]
[-0.96833766 561.03979492]
[-4.70999146 546.50909424]
[-7.55883408 531.77734375]
[-9.50426865 516.89929199]
[-10.53905678 501.93032837]
[-10.65934944 486.92611694]
[-9.86469936 471.94247437]
[-8.15806198 457.03515625]
[-5.54578733 442.25961304]
[-2.03759265 427.67080688]
[2.35347152 413.32299805]
[7.61106968 399.26959229]
[13.71564293 385.56283569]
[20.64448166 372.25372314]
[28.37181091 359.39181519]
[36.86888504 347.02487183]
[46.10409164 335.19900513]
[56.04307556 323.95809937]
[66.64886475 313.34405518]
[77.88200378 303.39633179]
[89.70069885 294.15191650]
[102.06099701 285.64520264]
[114.91690063 277.90786743]
[128.22059631 270.96865845]
[141.92259216 264.85339355]
[155.97190857 259.58486938]
[151.57090759 245.24501038]
[147.16990662 230.90516663]
[142.76890564 216.56532288]
[138.36791992 202.22546387]
[133.96691895 187.88562012]
[128.40768433 173.95382690]
[121.72749329 160.52345276]
[115.04730225 147.09307861]
[100.88915253 142.61174011]
[93.92316437 129.08659363]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.54608917 72.69323730]
[74.49183655 65.30278015]
[68.01234436 51.77443695]
[61.53284454 38.24608994]
[55.05334854 24.71774673]
[48.57385254 11.18940067]
[42.09435654 -2.33894515]
[27.45953751 -7.67371511]
[21.08112335 -21.48568344]
[26.25720024 -35.40487289]
[19.77770424 -48.93321991]
[13.29820824 -62.46156311]
[6.81871223 -75.98990631]
[-7.48808527 -71.40413666]
[-22.28606987 -68.80925751]
[-37.29956436 -68.25360870]
[-52.24887466 -69.74754333]
[-66.85550690 -73.26322937]
[-80.84735107 -78.73516846]
[-93.96373749 -86.06143188]
[-105.96032715 -95.10552216]
[-116.61362457 -105.69896698]
[-125.72516632 -117.64440918]
[-133.12521362 -130.71931458]
[-138.67590332 -144.68009949]
[-142.27381897 -159.26669312]
[-143.85195923 -174.20735168]
[-143.38090515 -189.22373962]
[-140.86944580 -204.03610229]
[-136.36434937 -218.36851501]
[-129.94956970 -231.95394897]
[-121.74458313 -244.53933716]
[-111.90225220 -255.89021301]
[-100.60594177 -265.79510498]
[-88.06608582 -274.06951904]
[-74.51629639 -280.55929565]
[-60.20900726 -285.14352417]
[-45.41073990 -287.73678589]
[-30.39718628 -288.29080200]
[-15.44803619 -286.79525757]
[-0.84178430 -283.27798462]
[13.14946365 -277.80453491]
[26.26506042 -270.47686768]
[38.26066971 -261.43145752]
[48.91281891 -250.83686829]
[58.02306747 -238.89044189]
[65.42169952 -225.81474304]
[70.97087860 -211.85334778]
[74.56722260 -197.26637268]
[76.14374542 -182.32554626]
[75.67106628 -167.30920410]
[73.15799713 -152.49711609]
[68.65135956 -138.16519165]
[62.23509598 -124.58044434]
[54.02874756 -111.99594116]
[44.18519211 -100.64613342]
[32.88780594 -90.74245453]
[20.34705734 -82.46940613]
[26.82655334 -68.94106293]
[33.30604935 -55.41271591]
[39.78554535 -41.88436890]
[53.87540436 -37.19273758]
[60.63925171 -23.56537247]
[55.62270355 -8.81844139]
[62.10219955 4.70990467]
[68.58169556 18.23825073]
[75.06118774 31.76659584]
[81.54068756 45.29494095]
[88.02017975 58.82328796]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[126.86259460 112.70269775]
[133.44593811 126.41816711]
[128.47767639 140.41287231]
[135.15786743 153.84326172]
[141.83805847 167.27363586]
[143.89396667 152.41519165]
[152.54418945 140.16065979]
[165.85626221 133.24772644]
[180.85623169 133.22076416]
[194.19308472 140.08580017]
[202.88729858 152.30915833]
[204.99659729 167.16011047]
[200.04972839 181.32092285]
[189.15187073 191.62803650]
[174.73759460 195.77879333]
[160.02711487 192.84593201]
[148.30676270 183.48461914]
[152.70776367 197.82447815]
[157.10876465 212.16432190]
[161.50975037 226.50416565]
[165.91075134 240.84400940]
[170.31175232 255.18386841]
[184.89776611 251.66403198]
[199.67121887 249.03996277]
[214.57717896 247.32142639]
[229.56018066 246.51481628]
[244.56448364 246.62313843]
[259.53427124 247.64598083]
[274.41384888 249.57954407]
[289.14788818 252.41662598]
[303.68154907 256.14669800]
[317.96078491 260.75582886]
[331.93249512 266.22692871]
[345.54464722 272.53964233]
[358.74661255 279.67044067]
[371.48931885 287.59283447]
[383.72534180 296.27734375]
[395.40917969 305.69165039]
[406.49731445 315.80075073]
[416.94854736 326.56701660]
[426.72399902 337.95040894]
[435.78726196 349.90856934]
[444.10467529 362.39703369]
[451.64526367 375.36932373]
[458.38095093 388.77719116]
[464.28674316 402.57077026]
[469.34063721 416.69873047]
[473.52380371 431.10852051]
[476.82073975 445.74652100]
[479.21911621 460.55828857]
[480.71008301 475.48873901]
[481.28802490 490.48229980]
[480.95083618 505.48318481]
[479.69973755 520.43560791]
[477.53942871 535.28399658]
[474.47790527 549.97302246]
[470.52658081 564.44812012]
[465.70013428 578.65539551]
[460.01654053 592.54199219]
[453.49694824 606.05627441]
[446.16555786 619.14794922]
[438.04971313 631.76831055]
[429.17956543 643.87042236]
[419.58810425 655.40924072]
[409.31106567 666.34191895]
[398.38659668 676.62768555]
[386.85540771 686.22833252]
[374.76037598 695.10815430]
[362.14648438 703.23406982]
[349.06066895 710.57586670]
[335.55160522 717.10626221]
[321.66955566 722.80096436]
[307.46615601 727.63873291]
[292.99423218 731.60162354]
[278.30761719 734.67486572]
[263.46099854 736.84704590]
[248.50955200 738.11004639]
[233.50892639 738.45922852]
[218.51490784 737.89318848]
[203.58328247 736.41418457]
[188.76960754 734.02758789]
[174.12896729 730.74237061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 145]
[47 133]
[48 132]
[49 131]
[52 128]
[54 126]
[55 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[65 116]
[66 115]
[67 114]
[68 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
