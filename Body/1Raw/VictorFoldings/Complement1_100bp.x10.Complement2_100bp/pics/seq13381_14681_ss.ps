%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[78.31792450 948.13049316]
[63.33541107 947.35900879]
[48.40037918 945.93927002]
[33.54086685 943.87390137]
[18.78477478 941.16674805]
[4.15980291 937.82293701]
[-10.30659008 933.84875488]
[-24.58724594 929.25158691]
[-38.65535355 924.04016113]
[-52.48450089 918.22418213]
[-66.04872894 911.81457520]
[-79.32256317 904.82342529]
[-92.28108978 897.26385498]
[-104.89998627 889.15002441]
[-117.15554810 880.49713135]
[-129.02478027 871.32153320]
[-140.48539734 861.64031982]
[-151.51586914 851.47180176]
[-162.09550476 840.83496094]
[-172.20442200 829.74981689]
[-181.82366943 818.23712158]
[-190.93516541 806.31860352]
[-199.52180481 794.01654053]
[-207.56748962 781.35406494]
[-215.05708313 768.35498047]
[-221.97654724 755.04364014]
[-228.31289673 741.44506836]
[-234.05421448 727.58471680]
[-239.18972778 713.48870850]
[-243.70979309 699.18347168]
[-247.60594177 684.69586182]
[-250.87083435 670.05310059]
[-253.49836731 655.28259277]
[-255.48358154 640.41217041]
[-256.82278442 625.46972656]
[-257.51342773 610.48327637]
[-257.55419922 595.48095703]
[-256.94509888 580.49096680]
[-255.68719482 565.54144287]
[-253.78288269 550.66040039]
[-251.23571777 535.87585449]
[-248.05050659 521.21551514]
[-244.23321533 506.70693970]
[-239.79101562 492.37731934]
[-234.73225403 478.25360107]
[-229.06640625 464.36227417]
[-222.80412292 450.72943115]
[-215.95715332 437.38064575]
[-208.53836060 424.34100342]
[-200.56167603 411.63494873]
[-192.04205322 399.28637695]
[-182.99551392 387.31848145]
[-173.43904114 375.75366211]
[-163.39054871 364.61370850]
[-152.86892700 353.91949463]
[-141.89392090 343.69110107]
[-130.48612976 333.94772339]
[-118.66698456 324.70767212]
[-106.45866394 315.98828125]
[-93.88408661 307.80590820]
[-80.96686554 300.17596436]
[-67.73124695 293.11273193]
[-54.20208359 286.62948608]
[-40.40477371 280.73837280]
[-26.36521912 275.45046997]
[-12.10977745 270.77572632]
[2.33478642 266.72290039]
[16.94135475 263.29959106]
[31.68250656 260.51223755]
[46.53056717 258.36605835]
[61.45765686 256.86511230]
[76.43575287 256.01217651]
[91.43673706 255.80889893]
[91.88334656 240.81555176]
[92.32994843 225.82220459]
[92.55327606 210.82386780]
[92.55327606 195.82386780]
[92.55327606 180.82386780]
[92.55327606 165.82386780]
[92.55327606 150.82386780]
[92.55327606 135.82386780]
[92.55327606 120.82386017]
[92.55327606 105.82386017]
[89.78022003 101.37143707]
[89.69917297 95.68225861]
[92.78325653 90.37892151]
[85.46026611 76.35449982]
[93.57307434 63.86323547]
[94.01968384 48.86988449]
[94.46628571 33.87653732]
[94.91289520 18.88318634]
[84.35464478 7.43062544]
[85.02115631 -7.76840115]
[96.00448608 -17.76350021]
[96.45109558 -32.75685120]
[96.89769745 -47.75019836]
[82.53292084 -52.42243958]
[70.06712341 -60.95359039]
[60.51084137 -72.65206146]
[54.63877106 -86.56951141]
[52.92692947 -101.57772064]
[55.51409149 -116.46002960]
[62.19052505 -130.01000977]
[72.41500092 -141.12922668]
[85.35866547 -148.91627502]
[99.97223663 -152.73989868]
[115.07106018 -152.29016113]
[129.43113708 -147.60348511]
[141.88836670 -139.05981445]
[151.43287659 -127.35175323]
[157.29096985 -113.42841339]
[158.98773193 -98.41849518]
[156.38562012 -83.53878784]
[149.69557190 -69.99552155]
[139.45994568 -58.88658905]
[126.50845337 -51.11254501]
[111.89105225 -47.30359268]
[111.44444275 -32.31024170]
[110.99784088 -17.31689262]
[121.36677551 -6.68577671]
[121.12744141 8.52597427]
[109.90624237 19.32979202]
[109.45964050 34.32314301]
[109.01303101 49.31649017]
[108.56642914 64.30984497]
[115.92135620 77.26184082]
[107.77660370 90.82552338]
[107.55327606 105.82386017]
[107.55327606 120.82386017]
[107.55327606 135.82386780]
[107.55327606 150.82386780]
[107.55327606 165.82386780]
[107.55327606 180.82386780]
[107.55327606 195.82386780]
[107.55327606 210.82386780]
[110.52284241 216.73091125]
[110.12341309 222.39990234]
[107.32330322 226.26879883]
[106.87669373 241.26216125]
[106.43009186 256.25549316]
[121.39237976 257.35131836]
[136.29315186 259.09423828]
[151.10444641 261.48098755]
[165.79843140 264.50714111]
[180.34753418 268.16696167]
[194.72445679 272.45358276]
[208.90217590 277.35900879]
[222.85409546 282.87396240]
[236.55403137 288.98812866]
[249.97622681 295.69000244]
[263.09552002 302.96704102]
[275.88726807 310.80554199]
[288.32742310 319.19082642]
[300.39270020 328.10711670]
[312.06039429 337.53771973]
[323.30859375 347.46487427]
[334.11624146 357.86996460]
[344.46298218 368.73348999]
[354.32940674 380.03500366]
[363.69702148 391.75329590]
[372.54821777 403.86642456]
[380.86636353 416.35156250]
[388.63586426 429.18533325]
[395.84213257 442.34362793]
[402.47164917 455.80172729]
[408.51193237 469.53439331]
[413.95166016 483.51580811]
[418.78063965 497.71975708]
[422.98980713 512.11956787]
[426.57119751 526.68817139]
[429.51815796 541.39825439]
[431.82513428 556.22216797]
[433.48776245 571.13208008]
[434.50299072 586.10009766]
[434.86883545 601.09796143]
[434.58465576 616.09765625]
[433.65097046 631.07092285]
[432.06954956 645.98968506]
[429.84335327 660.82598877]
[426.97653198 675.55187988]
[423.47451782 690.13977051]
[419.34384155 704.56225586]
[414.59228516 718.79229736]
[409.22879028 732.80316162]
[403.26336670 746.56848145]
[396.70724487 760.06250000]
[389.57272339 773.25982666]
[381.87322998 786.13574219]
[373.62319946 798.66595459]
[364.83810425 810.82708740]
[355.53442383 822.59625244]
[345.72967529 833.95135498]
[335.44226074 844.87103271]
[324.69146729 855.33483887]
[313.49746704 865.32312012]
[301.88131714 874.81707764]
[289.86477661 883.79895020]
[277.47045898 892.25183105]
[264.72158813 900.15991211]
[251.64212036 907.50823975]
[238.25660706 914.28314209]
[224.59019470 920.47180176]
[210.66850281 926.06268311]
[196.51770020 931.04522705]
[182.16435242 935.41009521]
[167.63537598 939.14910889]
[152.95808411 942.25518799]
[138.16001892 944.72259521]
[123.26895905 946.54663086]
[108.31285858 947.72387695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 140]
[74 139]
[75 138]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[86 127]
[88 125]
[89 124]
[90 123]
[91 122]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
