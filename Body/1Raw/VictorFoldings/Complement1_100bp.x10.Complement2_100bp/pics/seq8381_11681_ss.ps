%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[193.96434021 244.70211792]
[199.86909485 230.90179443]
[207.00433350 217.69558716]
[215.31091309 205.19296265]
[203.62333679 195.79080200]
[191.93576050 186.38865662]
[180.24818420 176.98651123]
[175.48785400 176.60130310]
[170.91897583 173.22161865]
[168.35806274 167.12626648]
[156.95559692 157.38029480]
[142.25361633 154.99261475]
[136.79039001 140.14459229]
[122.08840179 137.75691223]
[116.62517548 122.90888977]
[105.00791168 113.41999054]
[91.18876648 111.29325867]
[85.76499176 98.40627289]
[70.12516785 96.01746368]
[64.85028076 82.08818817]
[53.02400970 72.86109161]
[41.19773865 63.63399124]
[25.55791283 61.24518204]
[20.28302383 47.31590271]
[8.45675468 38.08880234]
[-3.50558209 29.03880310]
[-19.20959854 27.11670876]
[-24.89687347 13.35065746]
[-36.99262619 4.47976208]
[-49.08837891 -4.39113379]
[-58.79430389 7.05368662]
[-69.28336334 17.78534889]
[-80.50329590 27.75038719]
[-92.39820862 36.89915848]
[-104.90883636 45.18607712]
[-117.97286224 52.56986618]
[-131.52517700 59.01373291]
[-145.49829102 64.48558044]
[-159.82257080 68.95813751]
[-174.42666626 72.40913391]
[-189.23782349 74.82137299]
[-204.18222046 76.18283081]
[-219.18544006 76.48673248]
[-234.17272949 75.73155975]
[-249.06941223 73.92107391]
[-263.80126953 71.06430054]
[-278.29492188 67.17546844]
[-292.47814941 62.27394867]
[-306.28030396 56.38416290]
[-319.63259888 49.53545761]
[-332.46856689 41.76194763]
[-344.72418213 33.10236359]
[-356.33843994 23.59984970]
[-367.25347900 13.30174160]
[-377.41491699 2.25934792]
[-386.77209473 -9.47231865]
[-395.27841187 -21.83481026]
[-402.89151001 -34.76653671]
[-409.57345581 -48.20307541]
[-415.29095459 -62.07748413]
[-420.01553345 -76.32063293]
[-423.72363281 -90.86157990]
[-426.39675903 -105.62786102]
[-428.02163696 -120.54592896]
[-428.59017944 -135.54145813]
[-428.09951782 -150.53971863]
[-426.55209351 -165.46601868]
[-423.95565796 -180.24598694]
[-420.32312012 -194.80598450]
[-415.67257690 -209.07348633]
[-410.02719116 -222.97738647]
[-403.41510010 -236.44844055]
[-395.86923218 -249.41952515]
[-387.42721558 -261.82601929]
[-378.13107300 -273.60610962]
[-368.02709961 -284.70111084]
[-357.16567993 -295.05575562]
[-345.60092163 -304.61843872]
[-333.39041138 -313.34152222]
[-320.59500122 -321.18157959]
[-307.27844238 -328.09951782]
[-293.50704956 -334.06088257]
[-279.34945679 -339.03598022]
[-264.87619019 -343.00000000]
[-250.15936279 -345.93322754]
[-235.27229309 -347.82104492]
[-220.28912354 -348.65402222]
[-205.28453064 -348.42800903]
[-190.33325195 -347.14416504]
[-175.50978088 -344.80886841]
[-160.88796997 -341.43374634]
[-146.54066467 -337.03561401]
[-132.53932190 -331.63638306]
[-118.95372772 -325.26296997]
[-105.85154724 -317.94711304]
[-93.29805756 -309.72525024]
[-81.35581207 -300.63836670]
[-70.08428955 -290.73171997]
[-59.53964996 -280.05465698]
[-49.77443314 -268.66040039]
[-40.83728409 -256.60568237]
[-32.77272797 -243.95056152]
[-25.62094498 -230.75810242]
[-19.41756248 -217.09402466]
[-14.19348812 -203.02641296]
[-9.97474670 -188.62532043]
[-6.78235579 -173.96252441]
[-4.63222075 -159.11106873]
[-3.53505254 -144.14494324]
[-3.49631810 -129.13868713]
[-4.51621008 -114.16709137]
[-6.58964729 -99.30473328]
[-9.70629978 -84.62565613]
[-13.85064125 -70.20298767]
[-19.00202370 -56.10858154]
[-25.13478279 -42.41266251]
[-32.21836472 -29.18346214]
[-40.21748352 -16.48688507]
[-28.12173080 -7.61599016]
[-16.02597809 1.25490534]
[-1.18713188 2.54249430]
[5.36531353 16.94305038]
[10.13808727 17.11530304]
[14.85332584 20.28761482]
[17.68385315 26.26253319]
[29.51012230 35.48963165]
[44.30405426 37.21845627]
[50.42483521 51.80772018]
[62.25110626 61.03481674]
[74.07737732 70.26191711]
[88.87130737 71.99074554]
[94.99208832 86.58000946]
[108.81123352 88.70674133]
[114.23500824 101.59372711]
[119.40480804 102.31502533]
[123.38314819 104.70795441]
[125.73280334 108.03874207]
[126.37113953 111.50643158]
[141.88870239 114.59120941]
[146.53634644 128.74212646]
[162.05390930 131.82691956]
[166.70156860 145.97784424]
[178.10401917 155.72380066]
[189.65032959 165.29891968]
[201.33790588 174.70108032]
[213.02549744 184.10322571]
[224.71307373 193.50537109]
[235.14604187 182.71333313]
[246.51716614 172.91471863]
[258.73223877 164.19076538]
[271.69000244 156.61372375]
[285.28311157 150.24641418]
[299.39892578 145.14157104]
[313.92044067 141.34152222]
[328.72735596 138.87774658]
[343.69699097 137.77066040]
[358.70526123 138.02941895]
[373.62783813 139.65191650]
[388.34100342 142.62466431]
[402.72290039 146.92306519]
[416.65435791 152.51147461]
[430.01986694 159.34361267]
[442.70874023 167.36283875]
[454.61578369 176.50270081]
[465.64236450 186.68748474]
[475.69711304 197.83277893]
[484.69668579 209.84623718]
[492.56649780 222.62829590]
[499.24139404 236.07304382]
[504.66598511 250.06906128]
[508.79537964 264.50039673]
[511.59533691 279.24743652]
[513.04266357 294.18801880]
[513.12536621 309.19830322]
[511.84277344 324.15390015]
[509.20547485 338.93090820]
[505.23532104 353.40686035]
[499.96527100 367.46182251]
[493.43893433 380.97927856]
[485.71041870 393.84729004]
[476.84378052 405.95916748]
[466.91244507 417.21456909]
[455.99877930 427.52023315]
[444.19314575 436.79074097]
[431.59341431 444.94931030]
[418.30398560 451.92828369]
[404.43496704 457.66986084]
[390.10128784 462.12646484]
[375.42175293 465.26116943]
[360.51797485 467.04797363]
[345.51345825 467.47210693]
[330.53256226 466.53002930]
[315.69937134 464.22955322]
[301.13687134 460.58972168]
[286.96566772 455.64074707]
[273.30322266 449.42358398]
[260.26275635 441.98980713]
[247.95231628 433.40097046]
[236.47390747 423.72824097]
[225.92265320 413.05181885]
[216.38598633 401.46011353]
[207.94293213 389.04922485]
[200.66345215 375.92199707]
[194.60787964 362.18716431]
[189.82637024 347.95858765]
[186.35856628 333.35415649]
[184.23318481 318.49487305]
[183.46786499 303.50390625]
[184.06892395 288.50543213]
[186.03138733 273.62377930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 147]
[5 146]
[6 145]
[7 144]
[10 143]
[11 142]
[13 140]
[15 138]
[16 134]
[18 132]
[20 130]
[21 129]
[22 128]
[24 126]
[25 125]
[26 122]
[28 120]
[29 119]
[30 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
