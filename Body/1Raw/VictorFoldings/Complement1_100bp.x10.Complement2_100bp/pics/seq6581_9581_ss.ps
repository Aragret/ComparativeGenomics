%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[33.85889816 474.18911743]
[32.54162598 489.16281128]
[28.89805222 503.74606323]
[23.01790237 517.57971191]
[15.04597855 530.32312012]
[5.17859745 541.66253662]
[-6.34124708 551.31860352]
[-19.22986984 559.05358887]
[-33.16987610 564.67694092]
[-47.81797791 568.05035400]
[-62.81345749 569.09057617]
[-77.78703308 567.77203369]
[-92.36997223 564.12725830]
[-106.20315552 558.24597168]
[-118.94592285 550.27301025]
[-130.28448486 540.40472412]
[-139.93959045 528.88403320]
[-147.67350769 515.99481201]
[-153.29577637 502.05432129]
[-156.66792297 487.40594482]
[-157.70692444 472.41036987]
[-156.38717651 457.43692017]
[-152.74119568 442.85427856]
[-146.85876465 429.02157593]
[-138.88473511 416.27944946]
[-129.01548767 404.94171143]
[-117.49404907 395.28756714]
[-104.60414886 387.55468750]
[-90.66321564 381.93359375]
[-76.01455688 378.56265259]
[-61.01890564 377.52490234]
[-46.04554367 378.84585571]
[-31.46320915 382.49304199]
[-25.59424782 368.68887329]
[-19.72528648 354.88470459]
[-13.85632610 341.08053589]
[-7.98736525 327.27633667]
[-2.11840439 313.47216797]
[3.75055647 299.66799927]
[9.61951733 285.86380005]
[-3.88597775 292.39080811]
[-18.66862106 289.84649658]
[-29.21485138 279.17987061]
[-31.59118652 264.36929321]
[-24.91131020 250.93876648]
[-11.66665363 243.89752197]
[3.20285487 245.87178040]
[14.15125656 256.12521362]
[17.09493637 270.83465576]
[24.56267738 257.82571411]
[32.03041840 244.81675720]
[39.49816132 231.80780029]
[38.89694214 229.06979370]
[39.34405899 225.92866516]
[40.99848557 222.78251648]
[43.87228394 220.07958984]
[47.81746674 218.26588440]
[56.04627609 205.72448730]
[64.27508545 193.18309021]
[72.31625366 180.52056885]
[80.16801453 167.73973083]
[85.20492554 153.61068726]
[87.20893860 138.74516296]
[89.21295166 123.87963867]
[91.21697235 109.01410675]
[92.88851166 94.10753632]
[94.22674561 79.16735077]
[87.75148773 64.73191833]
[96.59340668 52.74568939]
[97.93164062 37.80550385]
[84.30963898 28.43358231]
[77.31276703 13.55610466]
[78.76503754 -2.72602630]
[88.17575073 -15.97722816]
[102.89916229 -22.63557625]
[104.01480865 -37.59402847]
[105.13045502 -52.55248260]
[106.24610901 -67.51094055]
[97.68687439 -55.19267654]
[85.10687256 -47.02300262]
[70.37226868 -44.21384430]
[55.66884613 -47.18191910]
[43.17778015 -55.48693466]
[34.75204086 -67.89688873]
[31.64153862 -82.57083130]
[34.30769730 -97.33198547]
[42.35500717 -109.99061584]
[54.58969879 -118.66888428]
[69.19682312 -122.07942200]
[84.00951385 -119.71630096]
[96.83038330 -111.93007660]
[105.75753784 -99.87578583]
[109.46657562 -85.34351349]
[113.65358734 -99.74729919]
[117.84059906 -114.15107727]
[122.02760315 -128.55485535]
[124.91287994 -143.27474976]
[126.47340393 -158.19335938]
[128.03392029 -173.11196899]
[129.59445190 -188.03056335]
[115.85321808 -194.39117432]
[104.92353821 -204.87071228]
[97.99098206 -218.33245850]
[95.80753326 -233.31616211]
[98.61003876 -248.19650269]
[106.09450531 -261.35937500]
[117.44908142 -271.37698364]
[131.44209290 -277.16268921]
[146.55569458 -278.08889771]
[161.15046692 -274.05511475]
[173.64328003 -265.49893188]
[182.67901611 -253.34844971]
[187.27754211 -238.92166138]
[186.94003296 -223.78346252]
[181.70310974 -209.57595825]
[172.13484192 -197.84025574]
[159.27310181 -189.84934998]
[144.51304626 -186.47004700]
[142.95252991 -171.55143738]
[141.39201355 -156.63284302]
[139.83148193 -141.71423340]
[149.22793579 -153.40640259]
[162.72938538 -159.94174194]
[177.72894287 -160.05838013]
[191.33039856 -153.73379517]
[200.90753174 -142.18916321]
[204.61116028 -127.65357971]
[201.72616577 -112.93363953]
[192.80958557 -100.87152100]
[179.58308411 -93.79623413]
[164.60049438 -93.07391357]
[150.75469971 -98.84401703]
[140.71913147 -109.99243164]
[136.43138123 -124.36785126]
[132.24438477 -109.96407318]
[128.05737305 -95.56028748]
[123.87035370 -81.15650177]
[121.20455933 -66.39528656]
[120.08891296 -51.43683624]
[118.97325897 -36.47838211]
[117.85761261 -21.51992798]
[129.62672424 -14.59134293]
[137.29924011 -3.21324515]
[139.33059692 10.42576790]
[135.26799011 23.67240715]
[125.84973145 33.92484665]
[112.87182617 39.14373779]
[111.53359222 54.08392334]
[118.10456848 67.45072937]
[109.16693115 80.50558472]
[107.82869720 95.44577026]
[109.85711670 98.72569275]
[110.42994690 102.88378143]
[109.18740845 107.24991608]
[106.08249664 111.01811981]
[104.07848358 125.88365173]
[102.07447052 140.74917603]
[100.07045746 155.61470032]
[108.44116211 143.16757202]
[119.18688965 132.70193481]
[131.85072327 124.66283417]
[145.89419556 119.39206696]
[160.72015381 117.11375427]
[175.69822693 117.92478180]
[190.19149780 121.79065704]
[203.58372498 128.54699707]
[215.30546570 137.90652466]
[224.85830688 149.47126770]
[231.83604431 162.74949646]
[235.94200134 177.17658997]
[237.00157166 192.13911438]
[234.96969604 207.00086975]
[229.93280029 221.12989807]
[222.10504150 233.92544556]
[211.81924438 244.84344482]
[199.51278687 253.41963196]
[185.70893860 259.28936768]
[170.99464417 262.20306396]
[155.99557495 262.03680420]
[141.34947205 258.79769897]
[127.67912292 252.62342834]
[115.56578064 243.77656555]
[105.52452087 232.63327026]
[97.98229218 219.66735840]
[93.25981140 205.43014526]
[91.55786133 190.52702332]
[92.94885254 175.59147644]
[85.09709930 188.37231445]
[84.53528595 194.95988464]
[81.22751617 199.58110046]
[76.81648254 201.41189575]
[68.58767700 213.95329285]
[60.35886765 226.49470520]
[52.50711060 239.27554321]
[45.03937149 252.28450012]
[37.57162857 265.29345703]
[30.10388947 278.30239868]
[23.42369461 291.73278809]
[17.55473328 305.53695679]
[11.68577290 319.34112549]
[5.81681204 333.14529419]
[-0.05214898 346.94949341]
[-5.92110968 360.75366211]
[-11.79007053 374.55783081]
[-17.65903091 388.36199951]
[-4.91494703 396.33288574]
[6.42523623 406.19934082]
[16.08225632 417.71838379]
[23.81829834 430.60635376]
[29.44285965 444.54589844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[49 197]
[50 196]
[51 195]
[52 194]
[57 193]
[58 192]
[59 191]
[60 188]
[61 187]
[62 158]
[63 157]
[64 156]
[65 155]
[66 151]
[67 150]
[69 148]
[70 147]
[75 141]
[76 140]
[77 139]
[78 138]
[93 137]
[94 136]
[95 135]
[96 134]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
