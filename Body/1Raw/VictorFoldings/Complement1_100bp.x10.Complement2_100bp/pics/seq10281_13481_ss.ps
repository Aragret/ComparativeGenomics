%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[36.55257034 877.78851318]
[21.55167580 877.99365234]
[6.55571461 877.55761719]
[-8.40791798 876.48120117]
[-23.31188774 874.76635742]
[-38.12897110 872.41625977]
[-52.83210373 869.43518066]
[-67.39442444 865.82855225]
[-81.78933716 861.60296631]
[-95.99053955 856.76617432]
[-109.97209930 851.32696533]
[-123.70847321 845.29528809]
[-137.17457581 838.68218994]
[-150.34579468 831.49969482]
[-163.19807434 823.76098633]
[-175.70794678 815.48016357]
[-187.85255432 806.67236328]
[-199.60971069 797.35363770]
[-210.95794678 787.54107666]
[-221.87654114 777.25256348]
[-232.34552002 766.50689697]
[-242.34577942 755.32373047]
[-251.85905457 743.72344971]
[-260.86795044 731.72723389]
[-269.35604858 719.35705566]
[-277.30780029 706.63549805]
[-284.70870972 693.58575439]
[-291.54525757 680.23168945]
[-297.80490112 666.59771729]
[-303.47628784 652.70867920]
[-308.54901123 638.59002686]
[-313.01382446 624.26751709]
[-316.86254883 609.76733398]
[-320.08816528 595.11590576]
[-322.68478394 580.34002686]
[-324.64767456 565.46667480]
[-325.97323608 550.52307129]
[-326.65902710 535.53643799]
[-326.70382690 520.53424072]
[-326.10754395 505.54376221]
[-324.87127686 490.59249878]
[-322.99728394 475.70770264]
[-320.48895264 460.91656494]
[-317.35089111 446.24615479]
[-313.58886719 431.72320557]
[-309.20968628 417.37426758]
[-304.22137451 403.22555542]
[-298.63305664 389.30294800]
[-292.45492554 375.63180542]
[-285.69827271 362.23715210]
[-278.37545776 349.14346313]
[-270.49981689 336.37460327]
[-262.08578491 323.95394897]
[-253.14868164 311.90417480]
[-243.70486450 300.24725342]
[-233.77157593 289.00454712]
[-223.36697388 278.19653320]
[-212.51002502 267.84298706]
[-201.22061157 257.96282959]
[-189.51931763 248.57405090]
[-177.42753601 239.69386292]
[-164.96734619 231.33847046]
[-152.16151428 223.52313232]
[-139.03343201 216.26211548]
[-125.60707092 209.56867981]
[-111.90697479 203.45507812]
[-97.95815277 197.93244934]
[-83.78608704 193.01091003]
[-69.41667175 188.69943237]
[-54.87615204 185.00588989]
[-40.19108963 181.93702698]
[-25.38830757 179.49847412]
[-10.49484539 177.69465637]
[4.46209097 176.52888489]
[19.45517921 176.00328064]
[34.45703506 176.11880493]
[49.44025040 176.87525940]
[64.37745667 178.27124023]
[79.24137115 180.30421448]
[81.90716553 165.54299927]
[84.57295990 150.78178406]
[87.01869202 135.98251343]
[89.24380493 121.14847565]
[91.46892548 106.31443024]
[92.80715942 91.37424469]
[93.25376129 76.38088989]
[93.70037079 61.38754272]
[94.14698029 46.39419174]
[94.59358215 31.40084267]
[95.04019165 16.40749359]
[95.48679352 1.41414368]
[95.93340302 -13.57920647]
[93.06089020 -22.25021935]
[96.49992371 -28.79199600]
[97.16970825 -43.77703476]
[82.74133301 -48.16711044]
[69.85844421 -56.00815582]
[59.33087540 -66.80728149]
[51.82039642 -79.88564301]
[47.79912567 -94.42112732]
[47.51983643 -109.50000763]
[51.00009155 -124.17443085]
[58.02111816 -137.52194214]
[68.14156342 -148.70350647]
[80.72525787 -157.01623535]
[94.98117065 -161.93759155]
[110.01316833 -163.15821838]
[124.87631989 -160.60137939]
[138.63632202 -154.42779541]
[150.42820740 -145.02554321]
[159.51072693 -132.98567200]
[165.31295776 -119.06500244]
[167.47013855 -104.13860321]
[165.84669495 -89.14476013]
[160.54467773 -75.02600098]
[151.89735413 -62.66984558]
[140.44830322 -52.85300827]
[126.91725159 -46.19258118]
[112.15474701 -43.10725021]
[111.48496246 -28.12220955]
[110.92675018 -13.13260078]
[110.48014069 1.86074960]
[110.03353882 16.85409927]
[109.58692932 31.84745026]
[109.14032745 46.84080124]
[108.69371796 61.83414841]
[108.24711609 76.82749939]
[107.80050659 91.82084656]
[118.00733948 80.82901001]
[132.70300293 77.82276917]
[146.40638733 83.92338562]
[154.00645447 96.85547638]
[152.66856384 111.79569244]
[142.89173889 123.17170715]
[128.32247925 126.74053955]
[114.39475250 121.17111206]
[106.30297089 108.53954315]
[104.07785034 123.37358856]
[101.85273743 138.20762634]
[103.91318512 144.48983765]
[102.67723083 150.03686523]
[99.33418274 153.44758606]
[96.66838837 168.20880127]
[94.00258636 182.97001648]
[108.63867188 186.26457214]
[123.12060547 190.18153381]
[137.42195129 194.71371460]
[151.51655579 199.85284424]
[165.37870789 205.58953857]
[178.98307800 211.91333008]
[192.30479431 218.81265259]
[205.31954956 226.27491760]
[218.00354004 234.28646851]
[230.33363342 242.83270264]
[242.28727722 251.89797974]
[253.84265137 261.46575928]
[264.97863770 271.51855469]
[275.67489624 282.03802490]
[285.91189575 293.00491333]
[295.67092896 304.39923096]
[304.93417358 316.20013428]
[313.68469238 328.38607788]
[321.90655518 340.93478394]
[329.58465576 353.82336426]
[336.70504761 367.02825928]
[343.25469971 380.52532959]
[349.22161865 394.28994751]
[354.59494019 408.29696655]
[359.36483765 422.52078247]
[363.52261353 436.93542480]
[367.06063843 451.51455688]
[369.97247314 466.23156738]
[372.25280762 481.05953979]
[373.89743042 495.97143555]
[374.90341187 510.93994141]
[375.26882935 525.93780518]
[374.99310303 540.93756104]
[374.07666016 555.91186523]
[372.52120972 570.83331299]
[370.32958984 585.67462158]
[367.50579834 600.40881348]
[364.05502319 615.00885010]
[359.98352051 629.44805908]
[355.29876709 643.70019531]
[350.00927734 657.73907471]
[344.12475586 671.53912354]
[337.65594482 685.07513428]
[330.61465454 698.32232666]
[323.01373291 711.25659180]
[314.86706543 723.85424805]
[306.18954468 736.09228516]
[296.99703979 747.94836426]
[287.30630493 759.40081787]
[277.13507080 770.42877197]
[266.50189209 781.01196289]
[255.42622375 791.13116455]
[243.92826843 800.76788330]
[232.02905273 809.90447998]
[219.75028992 818.52429199]
[207.11442566 826.61157227]
[194.14451599 834.15148926]
[180.86428833 841.13037109]
[167.29798889 847.53540039]
[153.47038269 853.35485840]
[139.40675354 858.57818604]
[125.13276672 863.19580078]
[110.67451477 867.19927979]
[96.05839539 870.58129883]
[81.31111145 873.33569336]
[66.45960236 875.45739746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 144]
[80 143]
[81 142]
[82 139]
[83 138]
[84 137]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
