%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[191.73329163 567.64270020]
[184.66235352 554.40588379]
[178.60038757 540.67761230]
[173.58129883 526.53472900]
[169.63314819 512.05633545]
[166.77801514 497.32336426]
[165.03186035 482.41821289]
[164.40446472 467.42425537]
[164.89932251 452.42535400]
[166.51368713 437.50537109]
[169.23849487 422.74774170]
[173.05854797 408.23501587]
[177.95245361 394.04830933]
[183.89285278 380.26702881]
[190.84652710 366.96820068]
[198.77458191 354.22622681]
[207.63267517 342.11233521]
[217.37129211 330.69430542]
[227.93594360 320.03594971]
[239.26756287 310.19692993]
[230.30686951 298.16754150]
[223.79014587 294.68124390]
[221.30389404 285.89169312]
[212.52328491 273.73025513]
[203.74269104 261.56878662]
[194.96208191 249.40733337]
[183.07414246 247.17053223]
[175.65933228 237.11048889]
[177.13169861 224.29663086]
[168.53314209 212.00579834]
[159.93457031 199.71495056]
[146.29896545 193.72167969]
[144.72804260 177.97865295]
[136.12948608 165.68782043]
[127.53092194 153.39697266]
[118.93235779 141.10614014]
[112.52232361 137.42736816]
[110.29887390 128.56768799]
[101.88425446 116.15019226]
[86.60792542 109.22125244]
[85.58466339 92.47821808]
[76.98609924 80.18737793]
[68.29627991 67.96089172]
[59.51567459 55.79943848]
[50.73507309 43.63798141]
[45.97209930 41.50228500]
[42.81983948 38.09398270]
[41.49331284 34.23971558]
[41.84830093 30.73167801]
[33.61949158 18.19027710]
[25.39068413 5.64887714]
[26.33497620 20.61912537]
[21.87716293 34.94141006]
[12.60374165 46.73139191]
[-0.26520565 54.43789673]
[-15.03654957 57.04699707]
[-29.76686478 54.21542358]
[-42.51812744 46.31571960]
[-51.61268234 34.38722229]
[-55.85399628 19.99933624]
[-54.68404007 5.04503202]
[-48.25674820 -8.50819397]
[-37.41773987 -18.87718010]
[-23.59307289 -24.69771004]
[-8.60161877 -25.20399284]
[5.58423662 -20.32941628]
[17.09962273 -10.71348572]
[11.85290337 -24.76595688]
[6.60618544 -38.81842804]
[-5.46940136 -49.04050064]
[-2.67261600 -63.67016983]
[-7.91933441 -77.72264099]
[-13.16605282 -91.77511597]
[-25.24164009 -101.99718475]
[-22.44485474 -116.62685394]
[-37.20303726 -113.75529480]
[-52.23258591 -113.35216522]
[-67.12348175 -115.42846680]
[-81.46949768 -119.92755890]
[-94.87924957 -126.72669983]
[-106.98692322 -135.64041138]
[-117.46220398 -146.42550659]
[-126.01931763 -158.78776550]
[-132.42483521 -172.38995361]
[-136.50398254 -186.86097717]
[-138.14550781 -201.80604553]
[-137.30461121 -216.81745911]
[-134.00422668 -231.48570251]
[-128.33439636 -245.41061401]
[-120.44981384 -258.21231079]
[-110.56555939 -269.54153442]
[-98.95129395 -279.08923340]
[-85.92385101 -286.59494019]
[-71.83863068 -291.85388184]
[-57.07989120 -294.72259521]
[-42.05026627 -295.12283325]
[-27.15976906 -293.04364014]
[-12.81462479 -288.54180908]
[0.59381998 -281.74008179]
[12.69977379 -272.82403564]
[23.17297745 -262.03692627]
[31.72771263 -249.67300415]
[38.13060379 -236.06959534]
[42.20697021 -221.59779358]
[43.84560776 -206.65238953]
[43.00181580 -191.64114380]
[39.69860840 -176.97352600]
[34.02610779 -163.04971313]
[26.13905334 -150.24955750]
[16.25261879 -138.92222595]
[4.63650703 -129.37677002]
[-8.39238262 -121.87357330]
[3.30792379 -112.65663147]
[0.88641882 -97.02183533]
[6.13313723 -82.96936035]
[11.37985516 -68.91689301]
[23.08016205 -59.69994354]
[20.65865707 -44.06514740]
[25.90537453 -30.01267624]
[31.15209389 -15.96020412]
[37.93208313 -2.57993078]
[46.16089249 9.96146965]
[54.38970184 22.50287056]
[62.89652634 34.85737991]
[71.67713165 47.01883316]
[80.45773315 59.18029022]
[86.92182159 62.76321411]
[89.27693939 71.58881378]
[97.87550354 83.87965393]
[109.20125580 86.59417725]
[115.80624390 96.18664551]
[114.30175018 107.73557281]
[122.71636963 120.15306854]
[131.22319031 132.50758362]
[139.82176208 144.79841614]
[148.42031860 157.08924866]
[157.01889038 169.38009644]
[171.26951599 176.25248718]
[172.22541809 191.11639404]
[180.82397461 203.40722656]
[189.42254639 215.69807434]
[206.28448486 223.09780884]
[207.12353516 240.62672424]
[215.90414429 252.78817749]
[224.68475342 264.94964600]
[233.46534729 277.11108398]
[242.33624268 289.20684814]
[251.29693604 301.23623657]
[263.96813965 293.19552612]
[277.20480347 286.12426758]
[290.93289185 280.06192017]
[305.07565308 275.04244995]
[319.55395508 271.09393311]
[334.28683472 268.23840332]
[349.19192505 266.49185181]
[364.18585205 265.86407471]
[379.18478394 266.35852051]
[394.10482788 267.97247314]
[408.86251831 270.69692993]
[423.37536621 274.51657104]
[437.56216431 279.41009521]
[451.34359741 285.35015869]
[464.64260864 292.30346680]
[477.38479614 300.23117065]
[489.49893188 309.08895874]
[500.91723633 318.82727051]
[511.57586670 329.39163208]
[521.41516113 340.72299194]
[530.38018799 352.75796509]
[538.42077637 365.42926025]
[545.49194336 378.66598511]
[551.55413818 392.39410400]
[556.57348633 406.53689575]
[560.52191162 421.01522827]
[563.37731934 435.74816895]
[565.12371826 450.65325928]
[565.75140381 465.64721680]
[565.25677490 480.64611816]
[563.64270020 495.56613159]
[560.91815186 510.32382202]
[557.09832764 524.83660889]
[552.20471191 539.02337646]
[546.26452637 552.80480957]
[539.31109619 566.10369873]
[531.38323975 578.84582520]
[522.52539062 590.95989990]
[512.78698730 602.37811279]
[502.22250366 613.03662109]
[490.89105225 622.87585449]
[478.85601807 631.84082031]
[466.18466187 639.88128662]
[452.94787598 646.95233154]
[439.21966553 653.01440430]
[425.07684326 658.03363037]
[410.59848022 661.98187256]
[395.86553955 664.83715820]
[380.96041870 666.58343506]
[365.96646118 667.21099854]
[350.96755981 666.71624756]
[336.04754639 665.10198975]
[321.28988647 662.37731934]
[306.77713013 658.55743408]
[292.59039307 653.66363525]
[278.80905151 647.72332764]
[265.51016235 640.76977539]
[252.76812744 632.84185791]
[240.65415955 623.98382568]
[229.23603821 614.24536133]
[218.57759094 603.68078613]
[208.73846436 592.34924316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 148]
[21 147]
[23 146]
[24 145]
[25 144]
[26 143]
[29 141]
[30 140]
[31 139]
[33 137]
[34 136]
[35 135]
[36 134]
[38 133]
[39 132]
[41 129]
[42 128]
[43 126]
[44 125]
[45 124]
[49 123]
[50 122]
[51 121]
[67 120]
[68 119]
[69 118]
[71 116]
[72 115]
[73 114]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
