%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[73.66995239 685.42327881]
[58.68452454 686.18518066]
[43.68061066 686.02307129]
[28.71513557 684.93768311]
[13.84486198 682.93304443]
[-0.87379771 680.01672363]
[-15.38501167 676.19989014]
[-29.63373184 671.49694824]
[-43.56591034 665.92578125]
[-57.12869644 659.50750732]
[-70.27063751 652.26641846]
[-82.94188690 644.23004150]
[-95.09437561 635.42889404]
[-106.68200684 625.89630127]
[-117.66082764 615.66839600]
[-127.98917389 604.78405762]
[-137.62788391 593.28454590]
[-146.54039001 581.21350098]
[-154.69288635 568.61663818]
[-162.05444336 555.54180908]
[-168.59713745 542.03857422]
[-174.29614258 528.15820312]
[-179.12985229 513.95330811]
[-183.07992554 499.47781372]
[-186.13137817 484.78659058]
[-188.27264404 469.93536377]
[-189.49557495 454.98049927]
[-189.79556274 439.97869873]
[-189.17144775 424.98690796]
[-187.62559509 410.06195068]
[-185.16389465 395.26049805]
[-181.79565430 380.63864136]
[-177.53367615 366.25186157]
[-172.39410400 352.15475464]
[-166.39645386 338.40078735]
[-159.56347656 325.04211426]
[-151.92108154 312.12942505]
[-143.49826050 299.71170044]
[-134.32696533 287.83605957]
[-124.44198608 276.54754639]
[-113.88082123 265.88894653]
[-102.68353271 255.90072632]
[-90.89260101 246.62077332]
[-78.55274200 238.08428955]
[-65.71077728 230.32365417]
[-52.41541672 223.36828613]
[-38.71709442 217.24459839]
[-24.66777039 211.97581482]
[-10.32074070 207.58190918]
[4.26956987 204.07955933]
[19.04781723 201.48204041]
[33.95793915 199.79922485]
[48.94337845 199.03747559]
[63.94728851 199.19969177]
[78.91275787 200.28526306]
[80.91677094 185.41973877]
[82.92078400 170.55419922]
[84.92479706 155.68867493]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[94.21742249 67.21032715]
[94.27755737 62.56816483]
[95.96888733 58.85947037]
[98.64144897 56.55951691]
[101.30724335 41.79830170]
[103.97303772 27.03708267]
[106.63883209 12.27586555]
[92.11773682 8.48632622]
[77.92934418 3.59632063]
[64.15690613 -2.36545444]
[50.88125610 -9.36401272]
[38.18029404 -17.35828209]
[26.12856102 -26.30134964]
[14.79677868 -36.14073181]
[4.25144863 -46.81869125]
[-5.44554424 -58.27255630]
[-14.23729420 -70.43511963]
[-22.07220650 -83.23500061]
[-28.90430069 -96.59707642]
[-34.69348526 -110.44294739]
[-39.40578842 -124.69135284]
[-43.01354980 -139.25866699]
[-45.49560165 -154.05941772]
[-46.83737946 -169.00674438]
[-47.03100586 -184.01290894]
[-46.07534409 -198.98988342]
[-43.97600555 -213.84974670]
[-40.74530792 -228.50529480]
[-36.40221405 -242.87054443]
[-30.97220612 -256.86117554]
[-24.48715210 -270.39508057]
[-16.98510933 -283.39285278]
[-8.51010418 -295.77822876]
[0.88812858 -307.47848511]
[11.15443611 -318.42495728]
[22.22857094 -328.55346680]
[34.04554367 -337.80450439]
[46.53601074 -346.12380981]
[59.62666321 -353.46258545]
[73.24069214 -359.77774048]
[87.29819489 -365.03219604]
[101.71667480 -369.19512939]
[116.41152191 -372.24215698]
[131.29649353 -374.15533447]
[146.28424072 -374.92346191]
[161.28681946 -374.54202271]
[176.21617126 -373.01324463]
[190.98469543 -370.34613037]
[205.50572205 -366.55630493]
[219.69403076 -361.66604614]
[233.46635437 -355.70401001]
[246.74186707 -348.70520020]
[259.44268799 -340.71069336]
[271.49423218 -331.76739502]
[282.82583618 -321.92779541]
[293.37097168 -311.24963379]
[303.06774902 -299.79559326]
[311.85925293 -287.63284302]
[319.69393921 -274.83282471]
[326.52575684 -261.47061157]
[332.31469727 -247.62463379]
[337.02673340 -233.37614441]
[340.63421631 -218.80876160]
[343.11596680 -204.00796509]
[344.45745850 -189.06062317]
[344.65081787 -174.05444336]
[343.69488525 -159.07749939]
[341.59524536 -144.21766663]
[338.36428833 -129.56217957]
[334.02090454 -115.19701385]
[328.59063721 -101.20648193]
[322.10531616 -87.67269135]
[314.60302734 -74.67506409]
[306.12780762 -62.28986740]
[296.72933960 -50.58979034]
[286.46282959 -39.64349365]
[275.38848877 -29.51521301]
[263.57135010 -20.26438904]
[251.08073425 -11.94530869]
[237.98992920 -4.60679150]
[224.37579346 1.70809543]
[210.31819153 6.96229458]
[195.89962769 11.12497139]
[181.20472717 14.17169666]
[166.31971741 16.08459091]
[151.33193970 16.85243034]
[136.32937622 16.47070694]
[121.40004730 14.94166183]
[118.73425293 29.70287895]
[116.06845856 44.46409607]
[113.40266418 59.22531128]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[99.79032135 157.69268799]
[97.78630829 172.55821228]
[95.78229523 187.42375183]
[93.77828217 202.28927612]
[108.49697113 205.20541382]
[123.00822449 209.02210999]
[137.25698853 213.72491455]
[151.18922424 219.29595947]
[164.75207520 225.71411133]
[177.89408875 232.95504761]
[190.56541443 240.99128723]
[202.71798706 249.79232788]
[214.30570984 259.32482910]
[225.28463745 269.55258179]
[235.61309814 280.43682861]
[245.25192261 291.93624878]
[254.16453552 304.00723267]
[262.31716919 316.60397339]
[269.67883301 329.67874146]
[276.22167969 343.18188477]
[281.92080688 357.06222534]
[286.75466919 371.26705933]
[290.70486450 385.74255371]
[293.75646973 400.43374634]
[295.89788818 415.28494263]
[297.12097168 430.23980713]
[297.42108154 445.24157715]
[296.79711914 460.23339844]
[295.25143433 475.15835571]
[292.78985596 489.95983887]
[289.42178345 504.58172607]
[285.15994263 518.96856689]
[280.02050781 533.06573486]
[274.02297974 546.81976318]
[267.19012451 560.17846680]
[259.54788208 573.09124756]
[251.12516785 585.50903320]
[241.95399475 597.38476562]
[232.06912231 608.67340088]
[221.50807190 619.33209229]
[210.31088257 629.32043457]
[198.52003479 638.60046387]
[186.18026733 647.13708496]
[173.33837891 654.89788818]
[160.04307556 661.85333252]
[146.34481812 667.97717285]
[132.29554749 673.24609375]
[117.94856262 677.64013672]
[103.35828400 681.14263916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 159]
[63 157]
[64 156]
[68 155]
[69 154]
[70 153]
[71 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
