%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[100.49663544 514.53033447]
[87.93342590 506.23214722]
[77.37031555 495.50302124]
[69.26908112 482.81192017]
[63.98387909 468.71368408]
[61.74574661 453.82461548]
[62.65252686 438.79559326]
[66.66458130 424.28363037]
[73.60652924 410.92312622]
[83.17488098 399.29815674]
[94.95135498 389.91687012]
[108.42114258 383.18942261]
[122.99539948 379.40991211]
[122.32561493 364.42486572]
[121.65583038 349.43981934]
[120.98603821 334.45477295]
[112.27368164 326.06304932]
[111.59303284 313.58422852]
[119.85358429 303.67837524]
[119.40698242 288.68502808]
[118.96037292 273.69168091]
[118.51377106 258.69833374]
[116.95324707 243.77972412]
[114.28745270 229.01850891]
[111.62165833 214.25729370]
[108.95586395 199.49606323]
[104.67366791 193.47239685]
[106.36197662 184.49534607]
[103.91624451 169.69607544]
[101.47052002 154.89680481]
[99.02479553 140.09753418]
[96.57906342 125.29826355]
[94.13333893 110.49899292]
[91.46754456 95.73777771]
[88.58226776 81.01788330]
[85.69699860 66.29799652]
[82.81172180 51.57810211]
[79.92645264 36.85821152]
[69.67915344 24.80402184]
[74.82386017 10.82613659]
[71.93858337 -3.89375424]
[65.96702576 -17.65385818]
[57.18642044 -29.81531334]
[48.40581512 -41.97676849]
[39.62521362 -54.13822556]
[30.84461021 -66.29968262]
[22.06400681 -78.46113586]
[13.28340340 -90.62258911]
[0.69780695 -93.44493103]
[-6.36520910 -103.75499725]
[-4.56922293 -115.71748352]
[-13.16778660 -128.00831604]
[-11.43346024 -113.10891724]
[-14.56655216 -98.43978119]
[-22.23641968 -85.54896545]
[-33.63364410 -75.79687500]
[-47.55545044 -70.21266937]
[-62.53263474 -69.38566589]
[-76.98461914 -73.40314484]
[-89.38625336 -81.84111786]
[-98.42876434 -93.80912018]
[-103.15787506 -108.04412842]
[-103.07450104 -123.04389954]
[-98.18745422 -137.22546387]
[-89.01246643 -149.09220886]
[-76.51779938 -157.39179993]
[-62.02204895 -161.24838257]
[-47.05498505 -160.25494385]
[-33.19611359 -154.51634216]
[-21.90787315 -144.63801575]
[-27.15459061 -158.69047546]
[-32.40130997 -172.74295044]
[-37.64802551 -186.79542542]
[-42.89474487 -200.84790039]
[-48.14146423 -214.90037537]
[-62.89964676 -212.02880859]
[-77.92919922 -211.62567139]
[-92.82009125 -213.70198059]
[-107.16610718 -218.20106506]
[-120.57585907 -225.00021362]
[-132.68353271 -233.91392517]
[-143.15881348 -244.69902039]
[-151.71592712 -257.06127930]
[-158.12144470 -270.66345215]
[-162.20059204 -285.13449097]
[-163.84211731 -300.07955933]
[-163.00122070 -315.09097290]
[-159.70083618 -329.75921631]
[-154.03100586 -343.68411255]
[-146.14642334 -356.48580933]
[-136.26217651 -367.81503296]
[-124.64790344 -377.36273193]
[-111.62046051 -384.86843872]
[-97.53524017 -390.12738037]
[-82.77650452 -392.99609375]
[-67.74687195 -393.39633179]
[-52.85637665 -391.31716919]
[-38.51123428 -386.81530762]
[-25.10278893 -380.01358032]
[-12.99683571 -371.09753418]
[-2.52363253 -360.31042480]
[6.03110361 -347.94650269]
[12.43399239 -334.34310913]
[16.51036072 -319.87130737]
[18.14899826 -304.92590332]
[17.30520630 -289.91464233]
[14.00200081 -275.24703979]
[8.32949734 -261.32324219]
[0.44244465 -248.52305603]
[-9.44399166 -237.19573975]
[-21.06010246 -227.65028381]
[-34.08899307 -220.14707947]
[-28.84227371 -206.09461975]
[-23.59555626 -192.04214478]
[-18.34883690 -177.98966980]
[-13.10211945 -163.93719482]
[-7.85540152 -149.88473511]
[-0.87694895 -136.60688782]
[7.72161484 -124.31604767]
[24.00022507 -117.76060486]
[25.44485855 -99.40319824]
[34.22546387 -87.24173737]
[43.00606537 -75.08028412]
[51.78666687 -62.91882706]
[60.56727219 -50.75737381]
[69.34787750 -38.59591675]
[78.12847900 -26.43446159]
[75.64294434 -41.22709656]
[76.14440155 -56.21871567]
[79.61286163 -70.81219482]
[85.91018677 -84.42630005]
[94.78556061 -96.51876831]
[105.88546753 -106.60796356]
[118.76781464 -114.29205322]
[132.91949463 -119.26496887]
[147.77685547 -121.32863617]
[162.74813843 -120.40087891]
[177.23704529 -116.51863098]
[190.66647339 -109.83653259]
[202.50154114 -100.62071991]
[212.27085876 -89.23826599]
[219.58532715 -76.14252472]
[224.15361023 -61.85508728]
[225.79376221 -46.94502640]
[224.44044495 -32.00620270]
[220.14755249 -17.63361740]
[213.08609009 -4.39973211]
[203.53730774 7.16835594]
[191.88151550 16.60989380]
[178.58297729 23.54882812]
[164.17135620 27.70878410]
[149.22067261 28.92407417]
[134.32640076 27.14628983]
[120.08176422 22.44624329]
[107.05413055 15.01113319]
[95.76239014 5.13709831]
[86.65847778 -6.77902699]
[89.54374695 7.94086456]
[99.58467102 18.94218636]
[94.64633942 33.97293854]
[97.53161621 48.69282913]
[100.41688538 63.41271973]
[103.30216217 78.13261414]
[106.18743134 92.85250092]
[109.76513672 96.68838501]
[110.93899536 102.25573730]
[108.93260956 108.05326843]
[111.37833405 122.85253906]
[113.82406616 137.65180969]
[116.26979065 152.45108032]
[118.71551514 167.25035095]
[121.16124725 182.04962158]
[123.71707916 196.83027649]
[126.38287354 211.59149170]
[129.04867554 226.35270691]
[131.71446228 241.11392212]
[138.27049255 227.62249756]
[150.63822937 219.13491821]
[165.58477783 217.86981201]
[179.20315552 224.15788269]
[187.93354797 236.35543823]
[189.49385071 251.27406311]
[183.47619629 265.01406860]
[171.45359802 273.98385620]
[156.56872559 275.83874512]
[142.71244812 270.09384155]
[133.50712585 258.25170898]
[133.95372009 273.24505615]
[134.40032959 288.23843384]
[134.84693909 303.23178101]
[144.88569641 318.66888428]
[135.97108459 333.78500366]
[136.64086914 348.77005005]
[137.31065369 363.75506592]
[137.98043823 378.74011230]
[152.83377075 381.20431519]
[166.85003662 386.70321655]
[179.41650391 394.99642944]
[189.98382568 405.72143555]
[198.09005737 418.40933228]
[203.38081360 432.50549316]
[205.62480164 447.39367676]
[204.72392273 462.42303467]
[200.71757507 476.93658447]
[193.78089905 490.29983521]
[184.21711731 501.92855835]
[172.44433594 511.31448364]
[158.97718811 518.04724121]
[144.40443420 521.83245850]
[129.36309814 522.50476074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 195]
[14 194]
[15 193]
[16 192]
[19 190]
[20 189]
[21 188]
[22 187]
[23 176]
[24 175]
[25 174]
[26 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[40 158]
[41 157]
[42 127]
[43 126]
[44 125]
[45 124]
[46 123]
[47 122]
[48 121]
[51 119]
[52 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
