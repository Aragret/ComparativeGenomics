%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[174.51918030 803.18237305]
[160.32687378 798.31707764]
[146.39254761 792.75585938]
[132.75028992 786.51239014]
[119.43349457 779.60186768]
[106.47473907 772.04119873]
[93.90574646 763.84893799]
[81.75727081 755.04516602]
[70.05903625 745.65136719]
[58.83967972 735.69049072]
[48.12665176 725.18701172]
[37.94617081 714.16656494]
[28.32314873 702.65612793]
[19.28113556 690.68389893]
[10.84226036 678.27911377]
[3.02717209 665.47222900]
[-4.14500332 652.29449463]
[-10.65671444 638.77819824]
[-16.49202538 624.95642090]
[-21.63665771 610.86297607]
[-26.07802010 596.53234863]
[-29.80524635 581.99963379]
[-32.80921173 567.30035400]
[-35.08256531 552.47052002]
[-36.61974716 537.54638672]
[-37.41698837 522.56445312]
[-37.47234726 507.56149292]
[-36.78568268 492.57412720]
[-35.35867691 477.63906860]
[-33.19482422 462.79284668]
[-30.29941368 448.07180786]
[-26.67953491 433.51196289]
[-22.34404755 419.14895630]
[-17.30355835 405.01794434]
[-11.57040310 391.15347290]
[-5.15861273 377.58950806]
[1.91612196 364.35919189]
[9.63648891 351.49496460]
[17.98359299 339.02828979]
[26.93700981 326.98965454]
[36.47482681 315.40850830]
[46.57370758 304.31323242]
[57.20893097 293.73095703]
[68.35447693 283.68759155]
[79.98307037 274.20770264]
[92.06624603 265.31448364]
[104.57444763 257.02972412]
[117.47705078 249.37365723]
[130.74249268 242.36505127]
[144.33830261 236.02104187]
[138.67552185 222.13101196]
[133.01272583 208.24098206]
[127.34994507 194.35095215]
[121.68715668 180.46093750]
[117.71064758 177.81585693]
[115.35354614 172.64466858]
[116.06935120 166.07206726]
[110.82263184 152.01959229]
[99.95138550 146.71464539]
[95.46524811 135.05023193]
[100.27824402 123.08370972]
[95.24133301 108.95468140]
[89.78342438 103.02307892]
[90.23631287 94.57762146]
[85.41030884 80.37516785]
[80.58431244 66.17271423]
[75.54740143 52.04368210]
[70.30068207 37.99121094]
[65.05396271 23.93873978]
[59.49473572 10.00694275]
[53.62577438 -3.79723454]
[47.75681305 -17.60141182]
[33.19000244 -13.89892578]
[18.22871399 -12.46355629]
[3.22366357 -13.32895184]
[-11.47340775 -16.47482491]
[-25.51798058 -21.82743073]
[-38.58082962 -29.26129913]
[-50.35574341 -38.60216904]
[-60.56670380 -49.63107681]
[-68.97434235 -62.08948517]
[-75.38158417 -75.68535614]
[-79.63822174 -90.09998322]
[-81.64448547 -104.99546814]
[-81.35333252 -120.02262878]
[-78.77160645 -134.82922363]
[-73.95980835 -149.06814575]
[-67.03073883 -162.40562439]
[-58.14682770 -174.52902222]
[-47.51633072 -185.15412903]
[-35.38843536 -194.03189087]
[-22.04743576 -200.95417786]
[-7.80606985 -205.75875854]
[7.00182724 -208.33297729]
[22.02913666 -208.61650085]
[36.92359924 -206.60267639]
[51.33606339 -202.33872986]
[64.92868042 -195.92459106]
[77.38282776 -187.51063538]
[88.40654755 -177.29408264]
[97.74144745 -165.51443481]
[105.16868591 -152.44781494]
[110.51416779 -138.40052795]
[113.65258026 -123.70185852]
[114.51036072 -108.69636536]
[113.06740570 -93.73580933]
[109.35752869 -79.17087555]
[103.46769714 -65.34299469]
[95.53598785 -52.57630539]
[85.74831390 -41.17007828]
[74.33412933 -31.39169502]
[61.56099319 -23.47037315]
[67.42995453 -9.66619492]
[73.29891205 4.13798141]
[76.41449738 5.78888226]
[78.88524628 9.03086662]
[79.97204590 13.54442024]
[79.10643005 18.69202232]
[84.35314941 32.74449539]
[89.59986877 46.79696655]
[93.49585724 49.55926895]
[95.69795227 54.79833603]
[94.78677368 61.34671402]
[99.61277008 75.54917145]
[104.43876648 89.75162506]
[109.37036133 103.91776276]
[114.40727234 118.04679108]
[128.70777893 129.64752197]
[124.87510681 146.77287292]
[130.12182617 160.82534790]
[135.57717896 174.79814148]
[141.23997498 188.68817139]
[146.90275574 202.57820129]
[152.56553650 216.46823120]
[158.22833252 230.35824585]
[172.38429260 225.38821411]
[186.76872253 221.12432861]
[201.34640503 217.57702637]
[216.08169556 214.75497437]
[230.93850708 212.66510010]
[245.88049316 211.31251526]
[260.87109375 210.70051575]
[275.87359619 210.83059692]
[290.85134888 211.70246887]
[305.76760864 213.31396484]
[320.58596802 215.66116333]
[335.27008057 218.73831177]
[349.78405762 222.53788757]
[364.09240723 227.05056763]
[378.16003418 232.26535034]
[391.95257568 238.16943359]
[405.43627930 244.74839783]
[418.57809448 251.98611450]
[431.34591675 259.86489868]
[443.70849609 268.36547852]
[455.63552856 277.46701050]
[467.09786987 287.14724731]
[478.06747437 297.38250732]
[488.51748657 308.14770508]
[498.42233276 319.41653442]
[507.75775146 331.16143799]
[516.50091553 343.35360718]
[524.63049316 355.96325684]
[532.12646484 368.95950317]
[538.97058105 382.31057739]
[545.14605713 395.98376465]
[550.63775635 409.94561768]
[555.43231201 424.16195679]
[559.51794434 438.59805298]
[562.88464355 453.21850586]
[565.52416992 467.98757935]
[567.43011475 482.86911011]
[568.59771729 497.82666016]
[569.02423096 512.82366943]
[568.70855713 527.82342529]
[567.65148926 542.78924561]
[565.85559082 557.68444824]
[563.32525635 572.47265625]
[560.06671143 587.11755371]
[556.08782959 601.58343506]
[551.39849854 615.83483887]
[546.01013184 629.83691406]
[539.93585205 643.55535889]
[533.19061279 656.95660400]
[525.79083252 670.00793457]
[517.75469971 682.67730713]
[509.10186768 694.93371582]
[499.85348511 706.74731445]
[490.03216553 718.08898926]
[479.66201782 728.93115234]
[468.76834106 739.24719238]
[457.37783813 749.01184082]
[445.51837158 758.20129395]
[433.21896362 766.79296875]
[420.50970459 774.76586914]
[407.42172241 782.10052490]
[393.98703003 788.77893066]
[380.23849487 794.78479004]
[366.20977783 800.10339355]
[351.93518066 804.72167969]
[337.44967651 808.62841797]
[322.78866577 811.81396484]
[307.98809814 814.27062988]
[293.08413696 815.99230957]
[278.11325073 816.97485352]
[263.11209106 817.21575928]
[248.11738586 816.71459961]
[233.16581726 815.47241211]
[218.29396057 813.49243164]
[203.53822327 810.77935791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[57 130]
[58 129]
[61 127]
[62 126]
[64 125]
[65 124]
[66 123]
[67 120]
[68 119]
[69 118]
[70 114]
[71 113]
[72 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
