%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[127.53526306 858.37579346]
[112.76869965 855.72174072]
[98.15413666 852.32910156]
[83.72849274 848.20642090]
[69.52820587 843.36419678]
[55.58915710 837.81457520]
[41.94655228 831.57159424]
[28.63485146 824.65100098]
[15.68768215 817.07037354]
[3.13775253 808.84875488]
[-8.98323727 800.00695801]
[-20.64466667 790.56738281]
[-31.81707954 780.55371094]
[-42.47225189 769.99139404]
[-52.58326721 758.90704346]
[-62.12458801 747.32867432]
[-71.07210541 735.28552246]
[-79.40322876 722.80804443]
[-87.09690094 709.92773438]
[-94.13368988 696.67706299]
[-100.49581909 683.08959961]
[-106.16722107 669.19970703]
[-111.13356781 655.04229736]
[-115.38231659 640.65332031]
[-118.90272522 626.06896973]
[-121.68591309 611.32623291]
[-123.72483826 596.46221924]
[-125.01436615 581.51458740]
[-125.55121613 566.52099609]
[-125.33405304 551.51940918]
[-124.36341858 536.54760742]
[-122.64175415 521.64355469]
[-120.17342377 506.84481812]
[-116.96466064 492.18878174]
[-113.02355957 477.71249390]
[-108.36009216 463.45248413]
[-102.98602295 449.44482422]
[-96.91493225 435.72485352]
[-90.16216278 422.32723999]
[-82.74476624 409.28585815]
[-74.68148804 396.63363647]
[-65.99268341 384.40252686]
[-56.70030975 372.62341309]
[-46.82783508 361.32608032]
[-36.40020752 350.53906250]
[-25.44375992 340.28958130]
[-13.98617268 330.60354614]
[-2.05638838 321.50543213]
[10.31545734 313.01821899]
[23.09811211 305.16333008]
[36.25928879 297.96063232]
[49.76573563 291.42828369]
[63.58333588 285.58282471]
[77.67718506 280.43899536]
[92.01168060 276.00982666]
[106.55061340 272.30645752]
[121.25725555 269.33825684]
[119.03214264 254.50422668]
[116.80702209 239.67018127]
[114.58190918 224.83613586]
[112.35678864 210.00209045]
[110.13167572 195.16804504]
[107.57583618 180.38739014]
[104.69056702 165.66751099]
[101.80529785 150.94761658]
[97.43389130 144.98837280]
[98.98835754 135.98718262]
[96.32256317 121.22595978]
[93.65676880 106.46473694]
[90.83221436 103.83904266]
[89.17874146 99.98107910]
[89.22074127 95.44178009]
[91.21697235 90.98589325]
[89.21295166 76.12036133]
[87.20893860 61.25483322]
[85.20492554 46.38930511]
[83.20091248 31.52377701]
[73.68926239 18.88103104]
[79.65682220 5.23414660]
[77.65280914 -9.63138199]
[68.14115906 -22.27412796]
[74.10871887 -35.92101288]
[59.08100510 -36.32590866]
[44.31287003 -39.13631058]
[30.18684387 -44.27942276]
[17.06882858 -51.62202835]
[5.29861021 -60.97393417]
[-4.81893444 -72.09290314]
[-13.02173710 -84.69092560]
[-19.09732437 -98.44168854]
[-22.88832474 -112.98900604]
[-24.29654121 -127.95606995]
[-23.28549957 -142.95520020]
[-19.88138580 -157.59788513]
[-14.17237568 -171.50483704]
[-6.30634689 -184.31584167]
[3.51295233 -195.69905090]
[15.03117847 -205.35963440]
[27.94997978 -213.04733276]
[41.93473053 -218.56301880]
[56.62319565 -221.76383972]
[71.63489532 -222.56687927]
[86.58100891 -220.95133972]
[101.07437897 -216.95906067]
[114.73960876 -210.69346619]
[127.22271729 -202.31681824]
[138.20037842 -192.04612732]
[147.38824463 -180.14741516]
[154.54830933 -166.92887878]
[159.49511719 -152.73292542]
[162.10055542 -137.92724609]
[162.29710388 -122.89537048]
[160.07969666 -108.02663422]
[155.50576782 -93.70618439]
[148.69377136 -80.30495453]
[139.82017517 -68.17006683]
[129.11482239 -57.61584854]
[116.85500336 -48.91567612]
[103.35827637 -42.29490280]
[88.97425079 -37.92502594]
[98.34255981 -26.34556198]
[92.51834106 -11.63539505]
[94.52235413 3.23013282]
[103.89066315 14.80959702]
[98.06644440 29.51976395]
[100.07045746 44.38529205]
[102.07447052 59.25082016]
[104.07848358 74.11634827]
[106.08249664 88.98188019]
[108.41798401 103.79894257]
[111.08377838 118.56016541]
[113.74957275 133.32138062]
[116.52518463 148.06234741]
[119.41046143 162.78222656]
[122.29573059 177.50212097]
[125.72779083 181.43507385]
[127.16439819 185.84974670]
[126.75620270 189.90542603]
[124.96571350 192.94293213]
[127.19083405 207.77697754]
[129.41595459 222.61102295]
[131.64106750 237.44506836]
[133.86618042 252.27911377]
[136.09130859 267.11315918]
[151.02156067 265.63577271]
[166.00720215 264.91043091]
[181.01036072 264.93896484]
[195.99313354 265.72125244]
[210.91767883 267.25537109]
[225.74629211 269.53744507]
[240.44151306 272.56164551]
[254.96621704 276.32043457]
[269.28372192 280.80422974]
[283.35787964 286.00173950]
[297.15307617 291.89981079]
[310.63452148 298.48358154]
[323.76815796 305.73641968]
[336.52078247 313.63998413]
[348.86016846 322.17428589]
[360.75518799 331.31781006]
[372.17578125 341.04745483]
[383.09304810 351.33862305]
[393.47949219 362.16534424]
[403.30883789 373.50021362]
[412.55624390 385.31466675]
[421.19833374 397.57882690]
[429.21334839 410.26168823]
[436.58096313 423.33126831]
[443.28262329 436.75448608]
[449.30136108 450.49749756]
[454.62197876 464.52557373]
[459.23104858 478.80322266]
[463.11694336 493.29446411]
[466.26980591 507.96261597]
[468.68173218 522.77062988]
[470.34655762 537.68115234]
[471.26010132 552.65655518]
[471.42007446 567.65887451]
[470.82608032 582.65026855]
[469.47958374 597.59289551]
[467.38400269 612.44903564]
[464.54464722 627.18109131]
[460.96865845 641.75189209]
[456.66506958 656.12457275]
[451.64480591 670.26287842]
[445.92050171 684.13110352]
[439.50662231 697.69421387]
[432.41937256 710.91790771]
[424.67663574 723.76885986]
[416.29800415 736.21447754]
[407.30465698 748.22344971]
[397.71926880 759.76538086]
[387.56607056 770.81109619]
[376.87069702 781.33270264]
[365.66021729 791.30364990]
[353.96286011 800.69879150]
[341.80825806 809.49426270]
[329.22708130 817.66796875]
[316.25109863 825.19921875]
[302.91311646 832.06896973]
[289.24682617 838.25994873]
[275.28671265 843.75634766]
[261.06808472 848.54443359]
[246.62683105 852.61212158]
[231.99943542 855.94897461]
[217.22285461 858.54675293]
[202.33442688 860.39880371]
[187.37173462 861.50042725]
[172.37260437 861.84881592]
[157.37490845 861.44323730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 135]
[64 134]
[65 133]
[67 132]
[68 131]
[69 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[79 123]
[80 122]
[82 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
