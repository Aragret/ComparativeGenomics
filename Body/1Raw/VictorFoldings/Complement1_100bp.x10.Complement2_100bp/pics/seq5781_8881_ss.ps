%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[146.52874756 734.61169434]
[133.54721069 727.08605957]
[121.07452393 718.74414062]
[109.16193390 709.62017822]
[97.85839844 699.75177002]
[87.21035004 689.17944336]
[77.26156616 677.94653320]
[68.05290985 666.09936523]
[59.62223816 653.68646240]
[52.00418091 640.75897217]
[45.23004913 627.36987305]
[39.32767868 613.57434082]
[34.32132339 599.42895508]
[30.23155785 584.99188232]
[27.07518387 570.32238770]
[24.86517334 555.48083496]
[23.61060905 540.52819824]
[23.31664467 525.52587891]
[23.98448944 510.53558350]
[25.61139870 495.61883545]
[28.19068527 480.83700562]
[31.71175385 466.25079346]
[36.16013336 451.92013550]
[41.51754379 437.90393066]
[47.76197052 424.25976562]
[54.86775208 411.04373169]
[62.80569458 398.31015015]
[71.54317474 386.11126709]
[81.04428864 374.49731445]
[91.26998901 363.51593018]
[102.17826843 353.21228027]
[113.72428894 343.62869263]
[125.86061859 334.80456543]
[138.53736877 326.77615356]
[151.70246887 319.57641602]
[165.30180359 313.23498535]
[159.84645081 299.26220703]
[154.39108276 285.28939819]
[148.93572998 271.31658936]
[143.48037720 257.34381104]
[140.97013855 256.09603882]
[138.80291748 253.77877808]
[137.38853455 250.51765442]
[137.08381653 246.58424377]
[138.14352417 242.37342834]
[133.52951050 228.10069275]
[128.91549683 213.82795715]
[124.30149078 199.55522156]
[119.68748474 185.28248596]
[115.07347107 171.00975037]
[110.45946503 156.73703003]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[72.88871765 65.67137146]
[76.33596039 51.18117523]
[71.72195435 36.90844345]
[67.10794067 22.63570976]
[52.46462631 25.93547440]
[37.58190918 27.88996696]
[22.58312416 28.48299026]
[7.59255505 27.70963097]
[-7.26557827 25.57629585]
[-21.86815453 22.10066414]
[-36.09416962 17.31153488]
[-49.82573700 11.24859524]
[-62.94907761 3.96208525]
[-75.35543823 -4.48761654]
[-86.94201660 -14.03049088]
[-97.61280060 -24.58746147]
[-107.27936554 -36.07104874]
[-115.86161041 -48.38609314]
[-123.28841400 -61.43054581]
[-129.49824524 -75.09631348]
[-134.43963623 -89.27015686]
[-138.07165527 -103.83462524]
[-140.36418152 -118.66902924]
[-141.29823303 -133.65045166]
[-140.86607361 -148.65472412]
[-139.07127380 -163.55754089]
[-135.92871094 -178.23539734]
[-131.46443176 -192.56668091]
[-125.71542358 -206.43261719]
[-118.72931671 -219.71830750]
[-110.56401825 -232.31365967]
[-101.28717804 -244.11431885]
[-90.97566986 -255.02249146]
[-79.71495056 -264.94778442]
[-67.59831238 -273.80792236]
[-54.72617722 -281.52954102]
[-41.20520401 -288.04864502]
[-27.14743042 -293.31115723]
[-12.66935062 -297.27355957]
[2.10906577 -299.90292358]
[17.06535721 -301.17752075]
[32.07558823 -301.08679199]
[47.01537323 -299.63146973]
[61.76092148 -296.82360840]
[76.19004059 -292.68646240]
[90.18315887 -287.25436401]
[103.62432861 -280.57229614]
[116.40216827 -272.69561768]
[128.41079712 -263.68960571]
[139.55070496 -253.62889099]
[149.72956848 -242.59686279]
[158.86306763 -230.68490601]
[166.87548828 -217.99174500]
[173.70045471 -204.62257385]
[179.28141785 -190.68814087]
[183.57209778 -176.30393982]
[186.53697205 -161.58915710]
[188.15147400 -146.66574097]
[188.40219116 -131.65733337]
[187.28707886 -116.68830109]
[184.81536865 -101.88269806]
[181.00753784 -87.36320496]
[175.89514160 -73.25013733]
[169.52055359 -59.66044235]
[161.93656921 -46.70673370]
[153.20606995 -34.49634933]
[143.40136719 -23.13047218]
[132.60372925 -12.70328236]
[120.90262604 -3.30118799]
[108.39501953 4.99790287]
[95.18454742 12.12521839]
[81.38067627 18.02169991]
[85.99468231 32.29443359]
[90.60869598 46.56716537]
[101.88577271 56.29736710]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[124.73220062 152.12301636]
[129.34620667 166.39575195]
[133.96022034 180.66848755]
[138.57421875 194.94120789]
[143.18823242 209.21394348]
[147.80224609 223.48667908]
[152.41625977 237.75941467]
[157.45317078 251.88844299]
[162.90852356 265.86123657]
[168.36389160 279.83404541]
[173.81924438 293.80682373]
[179.27459717 307.77963257]
[193.57310486 303.22900391]
[208.13380432 299.60382080]
[222.89685059 296.91900635]
[237.80157471 295.18557739]
[252.78674316 294.41067505]
[267.79077148 294.59744263]
[282.75198364 295.74517822]
[297.60894775 297.84912109]
[312.30056763 300.90060425]
[326.76651001 304.88714600]
[340.94729614 309.79232788]
[354.78469849 315.59597778]
[368.22180176 322.27429199]
[381.20339966 329.79980469]
[393.67617798 338.14160156]
[405.58886719 347.26538086]
[416.89251709 357.13366699]
[427.54067993 367.70593262]
[437.48959351 378.93869019]
[446.69839478 390.78579712]
[455.12918091 403.19857788]
[462.74740601 416.12600708]
[469.52166748 429.51498413]
[475.42419434 443.31048584]
[480.43069458 457.45584106]
[484.52062988 471.89285278]
[487.67718506 486.56228638]
[489.88735962 501.40380859]
[491.14208984 516.35644531]
[491.43621826 531.35876465]
[490.76852417 546.34906006]
[489.14178467 561.26580811]
[486.56265259 576.04772949]
[483.04174805 590.63397217]
[478.59353638 604.96466064]
[473.23626709 618.98089600]
[466.99200439 632.62512207]
[459.88638306 645.84124756]
[451.94857788 658.57495117]
[443.21121216 670.77392578]
[433.71023560 682.38800049]
[423.48464966 693.36944580]
[412.57650757 703.67321777]
[401.03057861 713.25695801]
[388.89434814 722.08123779]
[376.21768188 730.10980225]
[363.05267334 737.30963135]
[349.45339966 743.65124512]
[335.47576904 749.10845947]
[321.17721558 753.65893555]
[306.61648560 757.28393555]
[291.85342407 759.96862793]
[276.94866943 761.70190430]
[261.96350098 762.47662354]
[246.95945740 762.28967285]
[231.99824524 761.14178467]
[217.14131165 759.03765869]
[202.44972229 755.98602295]
[187.98382568 751.99932861]
[173.80308533 747.09399414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[56 134]
[57 133]
[59 131]
[60 130]
[61 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
