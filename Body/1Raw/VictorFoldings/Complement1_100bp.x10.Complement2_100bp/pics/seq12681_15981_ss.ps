%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[103.72465515 422.42620850]
[104.72673035 407.43481445]
[107.80553436 392.72879028]
[112.90113068 378.59439087]
[119.91433716 365.30676270]
[128.70863342 353.12454224]
[139.11282349 342.28485107]
[150.92442322 332.99871826]
[163.91348267 325.44686890]
[158.25068665 311.55685425]
[152.58790588 297.66680908]
[146.92510986 283.77679443]
[142.94860840 281.13171387]
[140.59150696 275.96054077]
[141.30731201 269.38790894]
[136.06059265 255.33544922]
[130.81387329 241.28297424]
[125.56716156 227.23049927]
[117.06057739 239.58517456]
[102.10902405 240.78979492]
[91.73423004 229.95634460]
[93.58410645 215.07084656]
[106.29499817 207.10633850]
[120.49571991 211.93281555]
[116.30870819 197.52902222]
[112.12169647 183.12524414]
[107.93468475 168.72146606]
[103.74767303 154.31768799]
[95.59296417 166.90739441]
[80.95389557 170.17813110]
[68.21639252 162.25625610]
[64.67707062 147.67979431]
[72.36341095 134.79879761]
[86.87233734 130.99209595]
[99.89189148 138.43955994]
[97.00661469 123.71967316]
[94.12134552 108.99978638]
[88.56211853 95.06798553]
[80.52094269 82.40546417]
[68.12564850 78.83901978]
[61.68882370 68.12683105]
[64.19364929 56.29245758]
[56.34189224 43.51161194]
[48.49013519 30.73077202]
[40.63837814 17.94992828]
[32.78662491 5.16908598]
[24.93486786 -7.61175632]
[17.08311272 -20.39259911]
[9.23135757 -33.17344284]
[1.19018483 -45.83596802]
[-7.03862286 -58.37736511]
[-15.26743126 -70.91876984]
[-31.90158653 -78.81727600]
[-32.21836090 -96.36340332]
[-40.63298035 -108.78089905]
[-49.04759979 -121.19839478]
[-57.46221924 -133.61589050]
[-65.87683868 -146.03338623]
[-74.29145813 -158.45088196]
[-87.61669159 -151.52595520]
[-101.65576935 -146.19483948]
[-116.21884155 -142.52966309]
[-131.10894775 -140.57997131]
[-146.12471008 -140.37213135]
[-161.06307983 -141.90895081]
[-175.72201538 -145.16966248]
[-189.90325928 -150.11015320]
[-203.41505432 -156.66362000]
[-216.07466125 -164.74142456]
[-227.71086121 -174.23434448]
[-238.16630554 -185.01396179]
[-247.29957581 -196.93452454]
[-254.98716736 -209.83482361]
[-261.12512207 -223.54037476]
[-265.63040161 -237.86582947]
[-268.44210815 -252.61747742]
[-269.52221680 -267.59579468]
[-268.85607910 -282.59820557]
[-266.45275879 -297.42187500]
[-262.34472656 -311.86627197]
[-256.58752441 -325.73605347]
[-249.25906372 -338.84368896]
[-240.45840454 -351.01190186]
[-230.30459595 -362.07608032]
[-218.93493652 -371.88665771]
[-206.50318909 -380.31094360]
[-193.17750549 -387.23498535]
[-179.13806152 -392.56515503]
[-164.57475281 -396.22933960]
[-149.68450928 -398.17807007]
[-134.66873169 -398.38488770]
[-119.73046875 -396.84707642]
[-105.07175446 -393.58538818]
[-90.89083099 -388.64395142]
[-77.37947083 -382.08956909]
[-64.72040558 -374.01092529]
[-53.08483887 -364.51724243]
[-42.63012314 -353.73690796]
[-33.49764633 -341.81573486]
[-25.81091309 -328.91494751]
[-19.67388344 -315.20898438]
[-15.16954899 -300.88320923]
[-12.35882759 -286.13137817]
[-11.27973080 -271.15298462]
[-11.94685268 -256.15060425]
[-14.35117054 -241.32713318]
[-18.46016884 -226.88301086]
[-24.21827698 -213.01359558]
[-31.54762650 -199.90644836]
[-40.34909058 -187.73883057]
[-50.50364685 -176.67530823]
[-61.87395859 -166.86549377]
[-53.45933914 -154.44799805]
[-45.04472351 -142.03050232]
[-36.63010406 -129.61300659]
[-28.21548462 -117.19551849]
[-19.80086708 -104.77802277]
[-7.98478651 -102.18827057]
[-0.87280321 -91.91191101]
[-2.72603059 -79.14757538]
[5.50277710 -66.60617828]
[13.73158550 -54.06477356]
[18.14261818 -52.23397446]
[21.45038795 -47.61275482]
[22.01219940 -41.02519608]
[29.86395645 -28.24435425]
[37.71570969 -15.46351147]
[45.56746674 -2.68266940]
[53.41922379 10.09817314]
[61.27097702 22.87901497]
[69.12273407 35.65985870]
[76.97448730 48.44070053]
[92.83405304 55.95343781]
[93.18347168 74.36428833]
[101.22463989 87.02680969]
[99.61748505 72.11315918]
[101.44578552 57.22499847]
[106.61363983 43.14333725]
[114.84995270 30.60686302]
[125.72266388 20.27322006]
[138.66140747 12.68449020]
[152.98745728 8.23876190]
[167.94927979 7.16924858]
[182.76200867 9.53205681]
[196.64862061 15.20323658]
[208.88061523 23.88529015]
[218.81636047 35.12277222]
[225.93463135 48.32619095]
[229.86201477 62.80291748]
[230.39250183 77.79353333]
[227.49824524 92.51166534]
[221.33108521 106.18521881]
[212.21453857 118.09691620]
[200.62683105 127.62188721]
[187.17584229 134.26048279]
[172.56716919 137.66444397]
[157.56718445 137.65519714]
[142.96272278 134.23324585]
[129.51991272 127.57809448]
[117.94395447 118.03885651]
[108.84123230 106.11450958]
[111.72650909 120.83440399]
[114.61177826 135.55429077]
[118.15145111 150.13067627]
[122.33846283 164.53445435]
[126.52547455 178.93823242]
[130.71249390 193.34201050]
[134.89950562 207.74580383]
[139.61962891 221.98377991]
[144.86634827 236.03625488]
[150.11306763 250.08872986]
[155.35978699 264.14120483]
[160.81513977 278.11401367]
[166.47793579 292.00402832]
[172.14071655 305.89404297]
[177.80349731 319.78408813]
[192.37014771 316.10183716]
[207.30751038 314.48275757]
[222.32482910 314.95840454]
[237.12979126 317.51953125]
[251.43420410 322.11624146]
[264.95965576 328.65905762]
[277.44284058 337.02066040]
[288.64074707 347.03826904]
[298.33547974 358.51690674]
[306.33825684 371.23309326]
[312.49334717 384.93933105]
[316.68090820 399.36883545]
[318.81945801 414.24069214]
[318.86734009 429.26547241]
[316.82360840 444.15069580]
[312.72811890 458.60659790]
[306.66052246 472.35177612]
[298.73895264 485.11871338]
[289.11758423 496.65890503]
[277.98373413 506.74768066]
[265.55410767 515.18865967]
[252.07064819 521.81756592]
[237.79582214 526.50537109]
[223.00747681 529.16076660]
[207.99349976 529.73217773]
[193.04612732 528.20831299]
[178.45629883 524.61901855]
[164.50804138 519.03399658]
[151.47283936 511.56210327]
[139.60443115 502.34866333]
[129.13385010 491.57308960]
[120.26488495 479.44512939]
[113.17019653 466.20083618]
[107.98787689 452.09799194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 176]
[10 175]
[11 174]
[12 173]
[15 172]
[16 171]
[17 170]
[18 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[35 163]
[36 162]
[37 161]
[38 135]
[39 134]
[42 132]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[49 125]
[50 122]
[51 121]
[52 120]
[54 117]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
