%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[137.90440369 948.16900635]
[123.35738373 944.49139404]
[109.06163025 939.93371582]
[95.07031250 934.51306152]
[81.43549347 928.24945068]
[68.20788574 921.16625977]
[55.43670273 913.28985596]
[43.16945648 904.64953613]
[31.45177460 895.27740479]
[20.32725334 885.20837402]
[9.83727646 874.47979736]
[0.02086695 863.13171387]
[-9.08545780 851.20629883]
[-17.44782066 838.74792480]
[-25.03511429 825.80285645]
[-31.81911087 812.41937256]
[-37.77457428 798.64715576]
[-42.87935257 784.53753662]
[-47.11445236 770.14294434]
[-50.46411896 755.51690674]
[-52.91588974 740.71386719]
[-54.46064758 725.78894043]
[-55.09264374 710.79754639]
[-54.80952835 695.79553223]
[-53.61235428 680.83862305]
[-51.50557327 665.98260498]
[-48.49702835 651.28259277]
[-44.59790421 636.79339600]
[-39.82270813 622.56884766]
[-34.18920517 608.66180420]
[-27.71835327 595.12414551]
[-20.43422508 582.00610352]
[-12.36391544 569.35656738]
[-3.53744841 557.22253418]
[6.01234102 545.64923096]
[16.24992752 534.67956543]
[27.13722420 524.35449219]
[38.63373184 514.71234131]
[50.69668198 505.78900146]
[63.28119659 497.61764526]
[76.34046173 490.22869873]
[89.82589722 483.64965820]
[103.68733978 477.90496826]
[117.87321472 473.01605225]
[132.33074951 469.00100708]
[147.00617981 465.87484741]
[144.78105164 451.04080200]
[142.55593872 436.20675659]
[140.33082581 421.37271118]
[138.10571289 406.53866577]
[125.91896820 403.20678711]
[115.86054230 395.48480225]
[109.44619751 384.49188232]
[107.65936279 371.84332275]
[110.80046082 359.41317749]
[118.43712616 349.05670166]
[129.46331787 342.33340454]
[127.68085480 327.43969727]
[125.89838409 312.54595947]
[124.11592102 297.65225220]
[122.33345032 282.75854492]
[120.55098724 267.86480713]
[118.43636322 253.01461792]
[115.99063873 238.21534729]
[113.54490662 223.41607666]
[111.09918213 208.61680603]
[108.65345764 193.81753540]
[96.43322754 185.37942505]
[93.74209595 170.40570068]
[102.67561340 157.64521790]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[81.03036499 100.99668121]
[66.13046265 102.72669983]
[54.28622437 93.52267456]
[52.28256989 78.65709686]
[61.26727676 66.64564514]
[76.09350586 64.36901855]
[88.26760864 73.13057709]
[86.92937469 58.19038773]
[77.99173737 45.13553619]
[84.56271362 31.76872826]
[75.62507629 18.71387291]
[82.19605255 5.34706593]
[80.85781860 -9.59311867]
[79.51957703 -24.53330421]
[78.18134308 -39.47348785]
[75.55858612 -42.93399429]
[74.30001068 -46.67304611]
[74.32567596 -50.22758484]
[75.41345978 -53.20807648]
[77.23536682 -55.33852386]
[76.78875732 -70.33187103]
[76.34215546 -85.32522583]
[62.11896515 -90.68892670]
[51.03446960 -101.09096527]
[44.77897644 -114.94510651]
[44.30640030 -130.13868713]
[49.68880844 -144.35481262]
[60.10541916 -155.42561340]
[73.96777344 -161.66288757]
[89.16197205 -162.11546326]
[103.37100220 -156.71437073]
[114.42809296 -146.28320312]
[120.64711761 -132.41264343]
[121.07971954 -117.21787262]
[115.65992737 -103.01596069]
[105.21422577 -91.97260284]
[91.33550262 -85.77182770]
[91.78211212 -70.77848053]
[92.22871399 -55.78512955]
[93.12152863 -40.81172180]
[94.45976257 -25.87153816]
[95.79799652 -10.93135357]
[97.13623047 4.00883198]
[105.97814941 15.99506378]
[99.50289917 30.43049431]
[108.34481049 42.41672516]
[101.86956024 56.85215378]
[103.20779419 71.79234314]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[119.48571777 148.08764648]
[117.47488403 155.19949341]
[130.03889465 164.40728760]
[132.30838013 179.45069885]
[123.45272827 191.37181091]
[125.89845276 206.17108154]
[128.34417725 220.97035217]
[130.78990173 235.76962280]
[133.23564148 250.56889343]
[136.54907227 254.60227966]
[137.85360718 259.05776978]
[137.32484436 263.09948730]
[135.44470215 266.08236694]
[137.22717285 280.97607422]
[139.00964355 295.86978149]
[140.79209900 310.76351929]
[142.57456970 325.65722656]
[144.35704041 340.55093384]
[160.67018127 347.08657837]
[171.37162781 360.91369629]
[173.58462524 378.16787720]
[166.78895569 394.08428955]
[152.93975830 404.31356812]
[155.16487122 419.14761353]
[157.38998413 433.98165894]
[159.61509705 448.81570435]
[161.84022522 463.64974976]
[176.78698730 462.33255005]
[191.78625488 461.92901611]
[206.78222656 462.44067383]
[221.71910095 463.86560059]
[236.54133606 466.19845581]
[251.19377136 469.43063354]
[265.62191772 473.55004883]
[279.77209473 478.54141235]
[293.59164429 484.38613892]
[307.02917480 491.06250000]
[320.03466797 498.54565430]
[332.55978394 506.80773926]
[344.55792236 515.81805420]
[355.98443604 525.54302979]
[366.79681396 535.94659424]
[376.95483398 546.98992920]
[386.42071533 558.63201904]
[395.15924072 570.82952881]
[403.13790894 583.53704834]
[410.32702637 596.70739746]
[416.69982910 610.29150391]
[422.23266602 624.23883057]
[426.90490723 638.49755859]
[430.69918823 653.01458740]
[433.60140991 667.73596191]
[435.60073853 682.60681152]
[436.68978882 697.57196045]
[436.86444092 712.57562256]
[436.12408447 727.56207275]
[434.47149658 742.47546387]
[431.91278076 757.26037598]
[428.45745850 771.86181641]
[424.11843872 786.22540283]
[418.91180420 800.29779053]
[412.85693359 814.02661133]
[405.97637939 827.36071777]
[398.29571533 840.25054932]
[389.84350586 852.64819336]
[380.65121460 864.50744629]
[370.75302124 875.78430176]
[360.18576050 886.43670654]
[348.98876953 896.42510986]
[337.20364380 905.71228027]
[324.87423706 914.26373291]
[312.04647827 922.04760742]
[298.76800537 929.03497314]
[285.08825684 935.19982910]
[271.05813599 940.51922607]
[256.72979736 944.97344971]
[242.15657043 948.54583740]
[227.39266968 951.22314453]
[212.49301147 952.99536133]
[197.51301575 953.85601807]
[182.50842285 953.80175781]
[167.53503418 952.83288574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[70 130]
[71 128]
[72 127]
[73 126]
[75 124]
[82 123]
[83 122]
[85 120]
[87 118]
[88 117]
[89 116]
[90 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
