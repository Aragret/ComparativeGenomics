%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[49.91938019 423.16409302]
[42.16783905 409.58294678]
[45.01045990 394.20587158]
[57.10504150 384.29351807]
[57.10504150 369.29351807]
[57.10504150 354.29351807]
[57.10504150 339.29351807]
[57.10504150 324.29351807]
[57.10504150 309.29351807]
[46.80863953 301.54666138]
[42.79421616 289.09811401]
[46.74062729 276.42388916]
[57.42106247 268.21762085]
[57.64439011 253.21926880]
[49.44696426 244.32383728]
[49.51027298 231.82664490]
[58.34578705 222.43002319]
[58.79239273 207.43667603]
[59.23899841 192.44332886]
[52.15964508 205.66764832]
[42.05164337 216.75044250]
[29.53310585 225.01399231]
[15.36954594 229.95297241]
[0.42706898 231.26536560]
[-14.38058567 228.87092590]
[-28.14792442 222.91606140]
[-40.03306961 213.76492310]
[-49.30924225 201.97711182]
[-55.40919495 188.27343750]
[-57.95991898 173.49189758]
[-56.80543137 158.53639221]
[-52.01633453 144.32145691]
[-43.88548279 131.71632385]
[-32.91007614 121.49182892]
[-19.76127052 114.27317810]
[-5.24311829 110.50180817]
[9.75658989 110.40833282]
[24.32061768 113.99847412]
[37.55836487 121.05269623]
[48.66034317 131.13961792]
[56.94766235 143.64244080]
[61.91354370 157.79658508]
[63.25432587 172.73657227]
[68.70968628 158.76377869]
[74.16503906 144.79096985]
[79.62039948 130.81817627]
[77.04173279 116.14849091]
[89.26817322 106.10733795]
[77.98973846 115.99655914]
[64.32209015 122.17681885]
[49.44763565 124.11344910]
[34.65315628 121.63891602]
[21.21851921 114.96729279]
[10.30595875 104.67573547]
[2.85952044 91.65457916]
[-0.47660458 77.03027344]
[0.58619159 62.06797409]
[5.95596647 48.06206512]
[15.16818142 36.22419739]
[27.42588615 27.57846642]
[41.66866684 22.87281418]
[56.66438293 22.51432800]
[71.11575317 26.53401756]
[83.77259064 34.58414078]
[93.53994751 45.96828461]
[99.57286072 59.70160294]
[101.34941101 74.59602356]
[98.71703339 89.35970306]
[107.85583496 77.46507263]
[109.84639740 59.15881348]
[126.31296539 53.09095383]
[135.27366638 41.06157684]
[144.23435974 29.03219795]
[153.19505310 17.00282097]
[147.28413391 -0.13832082]
[152.79759216 -17.24625397]
[167.34815979 -27.52884674]
[185.00080872 -27.02307510]
[186.57173157 -42.76609802]
[200.20733643 -48.75937653]
[208.80589294 -61.05021286]
[217.40446472 -73.34104919]
[226.00302124 -85.63188934]
[227.57394409 -101.37491608]
[241.20954895 -107.36819458]
[249.80812073 -119.65902710]
[258.40667725 -131.94987488]
[266.91351318 -144.30438232]
[275.32812500 -156.72187805]
[283.74273682 -169.13937378]
[292.15737915 -181.55686951]
[300.57199097 -193.97436523]
[288.97518921 -203.50531006]
[278.30731201 -214.06564331]
[268.65930176 -225.56524658]
[260.11352539 -237.90600586]
[252.74287415 -250.98263550]
[246.61022949 -264.68356323]
[241.76792908 -278.89187622]
[238.25727844 -293.48641968]
[236.10823059 -308.34259033]
[235.33912659 -323.33370972]
[235.95651245 -338.33181763]
[237.95513916 -353.20898438]
[241.31794739 -367.83828735]
[246.01623535 -382.09487915]
[252.00993347 -395.85714722]
[259.24789429 -409.00769043]
[267.66839600 -421.43426514]
[277.19952393 -433.03091431]
[287.76004028 -443.69863892]
[299.25979614 -453.34643555]
[311.60070801 -461.89199829]
[324.67745972 -469.26245117]
[338.37847900 -475.39483643]
[352.58688354 -480.23690796]
[367.18148804 -483.74731445]
[382.03768921 -485.89611816]
[397.02880859 -486.66497803]
[412.02691650 -486.04733276]
[426.90405273 -484.04846191]
[441.53329468 -480.68542480]
[455.78979492 -475.98687744]
[469.55197144 -469.99295044]
[482.70239258 -462.75476074]
[495.12884521 -454.33407593]
[506.72531128 -444.80273438]
[517.39288330 -434.24206543]
[527.04046631 -422.74212646]
[535.58587646 -410.40109253]
[542.95605469 -397.32421875]
[549.08825684 -383.62307739]
[553.93005371 -369.41458130]
[557.44024658 -354.81994629]
[559.58880615 -339.96371460]
[560.35742188 -324.97256470]
[559.73950195 -309.97448730]
[557.74035645 -295.09738159]
[554.37707520 -280.46820068]
[549.67834473 -266.21176147]
[543.68414307 -252.44967651]
[536.44573975 -239.29939270]
[528.02484131 -226.87307739]
[518.49334717 -215.27676392]
[507.93246460 -204.60939026]
[496.43237305 -194.96197510]
[484.09121704 -186.41680908]
[471.01422119 -179.04681396]
[457.31298828 -172.91485596]
[443.10440063 -168.07327271]
[428.50970459 -164.56333923]
[413.65341187 -162.41503906]
[398.66226196 -161.64668274]
[383.66418457 -162.26481628]
[368.78710938 -164.26419067]
[354.15798950 -167.62773132]
[339.90164185 -172.32673645]
[326.13964844 -178.32112122]
[312.98947144 -185.55973816]
[304.57485962 -173.14224243]
[296.16024780 -160.72474670]
[287.74563599 -148.30725098]
[279.33099365 -135.88975525]
[278.18106079 -128.58911133]
[270.69750977 -123.35130310]
[262.09896851 -111.06046295]
[253.50039673 -98.76963043]
[252.54450989 -83.90572357]
[238.29386902 -77.03332520]
[229.69529724 -64.74248505]
[221.09674072 -52.45164871]
[212.49816895 -40.16081238]
[211.54228210 -25.29691124]
[197.29164124 -18.42451096]
[202.90649414 -7.66120958]
[203.41532898 4.54018497]
[198.66026306 15.86671734]
[189.48710632 24.14515877]
[177.59553528 27.75892639]
[165.22442627 25.96351624]
[156.26373291 37.99289322]
[147.30303955 50.02227402]
[138.34234619 62.05165100]
[139.78137207 74.06230164]
[132.41452026 84.15750885]
[119.75046539 86.60387421]
[110.61166382 98.49850464]
[103.24097443 111.56269073]
[105.42942810 127.23181152]
[93.59319305 136.27352905]
[88.13784027 150.24633789]
[82.68247986 164.21913147]
[77.22712708 178.19192505]
[74.23235321 192.88993835]
[73.78574371 207.88328552]
[73.33913422 222.87663269]
[82.44126129 238.88391113]
[72.64272308 253.44259644]
[72.41939545 268.44094849]
[84.83138275 280.76821899]
[84.49430084 297.92053223]
[72.10504150 309.29351807]
[72.10504150 324.29351807]
[72.10504150 339.29351807]
[72.10504150 354.29351807]
[72.10504150 369.29351807]
[72.10504150 384.29351807]
[84.19962311 394.20587158]
[87.04224396 409.58294678]
[79.29070282 423.16409302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[13 199]
[14 198]
[17 196]
[18 195]
[19 194]
[43 193]
[44 192]
[45 191]
[46 190]
[48 188]
[68 187]
[69 186]
[71 183]
[72 182]
[73 181]
[74 180]
[78 174]
[80 172]
[81 171]
[82 170]
[83 169]
[85 167]
[86 166]
[87 165]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
