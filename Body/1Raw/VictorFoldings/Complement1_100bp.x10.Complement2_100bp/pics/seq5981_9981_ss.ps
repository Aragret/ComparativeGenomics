%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[162.92347717 835.19830322]
[148.15559387 832.55786133]
[133.50769043 829.31719971]
[119.00415802 825.48181152]
[104.66913605 821.05798340]
[90.52648163 816.05316162]
[76.59974670 810.47564697]
[62.91209412 804.33471680]
[49.48631287 797.64062500]
[36.34474945 790.40441895]
[23.50927544 782.63824463]
[11.00125504 774.35498047]
[-1.15849423 765.56848145]
[-12.94973278 756.29327393]
[-24.35283470 746.54479980]
[-35.34882355 736.33935547]
[-45.91939545 725.69390869]
[-56.04695511 714.62615967]
[-65.71464539 703.15454102]
[-74.90637970 691.29809570]
[-83.60686493 679.07659912]
[-91.80160522 666.51043701]
[-99.47696686 653.62042236]
[-106.62017822 640.42810059]
[-113.21935272 626.95544434]
[-119.26349640 613.22473145]
[-124.74255371 599.25897217]
[-129.64741516 585.08135986]
[-133.96989441 570.71545410]
[-137.70283508 556.18524170]
[-140.83998108 541.51477051]
[-143.37612915 526.72863770]
[-145.30706787 511.85131836]
[-146.62957764 496.90762329]
[-147.34144592 481.92242432]
[-147.44149780 466.92068481]
[-146.92956543 451.92730713]
[-145.80650330 436.96731567]
[-144.07418823 422.06558228]
[-141.73547363 407.24688721]
[-138.79428101 392.53594971]
[-135.25549316 377.95721436]
[-131.12501526 363.53494263]
[-126.40969849 349.29315186]
[-121.11740112 335.25552368]
[-115.25694275 321.44546509]
[-108.83805847 307.88595581]
[-101.87144470 294.59951782]
[-94.36869812 281.60830688]
[-86.34230042 268.93392944]
[-77.80560303 256.59750366]
[-68.77283478 244.61952209]
[-59.25901413 233.01994324]
[-49.27997971 221.81808472]
[-38.85234070 211.03257751]
[-27.99345589 200.68136597]
[-16.72139549 190.78170776]
[-5.05492258 181.35003662]
[6.98654652 172.40208435]
[19.38296890 163.95274353]
[32.11371231 156.01605225]
[45.15758896 148.60523987]
[58.49288559 141.73263550]
[72.09741211 135.40968323]
[85.94851685 129.64689636]
[100.02315521 124.45388794]
[95.40914154 110.18115234]
[90.68901062 95.94316101]
[85.86301422 81.74070740]
[81.03701019 67.53825378]
[76.21101379 53.33579636]
[70.48699951 46.21726990]
[71.42060089 38.88581848]
[66.80659485 24.61308479]
[62.19258499 10.34035110]
[57.57857513 -3.93238258]
[42.71812820 -1.66011167]
[27.68561935 -1.80118716]
[12.87043285 -4.35195446]
[-1.34368396 -9.24634361]
[-14.58855247 -16.35757637]
[-26.52109718 -25.50145721]
[-36.83223724 -36.44113541]
[-45.25489044 -48.89324570]
[-51.57088470 -62.53525543]
[-55.61662674 -77.01379395]
[-57.28732300 -91.95384216]
[-56.53969193 -106.96840668]
[-53.39310074 -121.66857910]
[-47.92905807 -135.67359924]
[-40.28909302 -148.62068176]
[-30.67109871 -160.17448425]
[-19.32420349 -170.03573608]
[-6.54232073 -177.94898987]
[7.34346819 -183.70928955]
[21.97348785 -187.16741943]
[36.96878815 -188.23381042]
[51.94094849 -186.88084412]
[66.50215912 -183.14355469]
[80.27525330 -177.11875916]
[92.90346527 -168.96250916]
[104.05970001 -158.88607788]
[113.45497894 -147.15045166]
[120.84594727 -134.05963135]
[126.04116058 -119.95268250]
[128.90605164 -105.19502258]
[129.36640930 -90.16889954]
[127.41030884 -75.26354218]
[123.08841705 -60.86501694]
[116.51268768 -47.34629059]
[107.85344696 -35.05752945]
[97.33497620 -24.31704140]
[85.22975159 -15.40303135]
[71.85131073 -8.54639149]
[76.46531677 5.72634172]
[81.07933044 19.99907494]
[85.69333649 34.27180862]
[90.41347504 48.50979614]
[95.23947144 62.71225357]
[100.06546783 76.91471100]
[104.89146423 91.11716461]
[110.26045227 97.12936401]
[109.68187714 105.56713867]
[114.29588318 119.83987427]
[128.74694824 115.81126404]
[143.35029602 112.37545013]
[158.08164978 109.53814697]
[172.91645813 107.30406952]
[187.83004761 105.67694855]
[202.79760742 104.65948486]
[217.79420471 104.25337219]
[232.79487610 104.45928955]
[247.77467346 105.27689362]
[262.70864868 106.70481873]
[277.57196045 108.74069977]
[292.33987427 111.38113403]
[306.98779297 114.62173462]
[321.49133301 118.45710754]
[335.82635498 122.88086700]
[349.96902466 127.88565063]
[363.89578247 133.46313477]
[377.58346558 139.60401917]
[391.00924683 146.29809570]
[404.15084839 153.53424072]
[416.98632812 161.30036926]
[429.49438477 169.58358765]
[441.65414429 178.37008667]
[453.44540405 187.64526367]
[464.84854126 197.39367676]
[475.84457397 207.59909058]
[486.41516113 218.24452209]
[496.54275513 229.31225586]
[506.21047974 240.78385925]
[515.40222168 252.64025879]
[524.10278320 264.86172485]
[532.29754639 277.42788696]
[539.97296143 290.31784058]
[547.11621094 303.51013184]
[553.71539307 316.98281860]
[559.75958252 330.71347046]
[565.23870850 344.67922974]
[570.14355469 358.85684204]
[574.46612549 373.22271729]
[578.19909668 387.75296021]
[581.33630371 402.42337036]
[583.87249756 417.20953369]
[585.80346680 432.08682251]
[587.12597656 447.03051758]
[587.83789062 462.01571655]
[587.93798828 477.01745605]
[587.42614746 492.01083374]
[586.30310059 506.97082520]
[584.57080078 521.87255859]
[582.23217773 536.69128418]
[579.29101562 551.40222168]
[575.75225830 565.98095703]
[571.62182617 580.40325928]
[566.90655518 594.64508057]
[561.61425781 608.68267822]
[555.75384521 622.49273682]
[549.33502197 636.05230713]
[542.36846924 649.33874512]
[534.86572266 662.33001709]
[526.83935547 675.00439453]
[518.30273438 687.34082031]
[509.26998901 699.31884766]
[499.75619507 710.91845703]
[489.77719116 722.12036133]
[479.34957886 732.90588379]
[468.49072266 743.25708008]
[457.21868896 753.15679932]
[445.55224609 762.58850098]
[433.51080322 771.53649902]
[421.11441040 779.98590088]
[408.38366699 787.92260742]
[395.33981323 795.33343506]
[382.00454712 802.20611572]
[368.40005493 808.52905273]
[354.54895020 814.29193115]
[340.47433472 819.48498535]
[326.19961548 824.09960938]
[311.74853516 828.12817383]
[297.14517212 831.56396484]
[282.41381836 834.40124512]
[267.57897949 836.63525391]
[252.66539001 838.26232910]
[237.69784546 839.27978516]
[222.70124817 839.68585205]
[207.70056152 839.47985840]
[192.72076416 838.66223145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 124]
[67 123]
[68 121]
[69 120]
[70 119]
[71 118]
[73 117]
[74 116]
[75 115]
[76 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
