%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[117.47497559 385.36041260]
[115.28337860 370.51107788]
[114.43170929 355.52505493]
[114.92681122 340.52301025]
[116.76470947 325.62576294]
[119.93059540 310.95321655]
[124.39898682 296.62353516]
[130.13391113 282.75210571]
[137.08918762 269.45056152]
[145.20880127 256.82608032]
[154.42739868 244.98023987]
[164.67074585 234.00845337]
[175.85636902 223.99905396]
[166.89567566 211.96968079]
[157.93496704 199.94029236]
[148.97427368 187.91091919]
[140.01358032 175.88154602]
[135.29373169 190.11962891]
[121.27271271 195.44984436]
[108.28631592 187.94296265]
[105.90761566 173.13276672]
[115.89010620 161.93678284]
[130.87361145 162.60751343]
[122.83243561 149.94499207]
[114.79125977 137.28245544]
[106.75009155 124.61993408]
[98.70891571 111.95741272]
[90.48011017 99.41600800]
[76.33336639 92.33219910]
[75.59888458 77.45571899]
[67.18426514 65.03822327]
[58.76964951 52.62072372]
[49.89875412 40.52497482]
[40.58386993 28.76772118]
[31.26898766 17.01047134]
[21.95410538 5.25321960]
[12.63922215 -6.50403166]
[3.32433915 -18.26128387]
[-5.99054337 -30.01853371]
[-15.30542660 -41.77578735]
[-27.70948601 -33.32965851]
[-40.69067001 -25.80060577]
[-54.18129349 -19.22787476]
[-68.11103058 -13.64573669]
[-82.40724945 -9.08329296]
[-96.99541473 -5.56433153]
[-111.79947662 -3.10719752]
[-126.74224854 -1.72470224]
[-141.74583435 -1.42405319]
[-156.73199463 -2.20681787]
[-171.62260437 -4.06891537]
[-186.34002686 -7.00063705]
[-200.80755615 -10.98669910]
[-214.94972229 -16.00631905]
[-228.69284058 -22.03332520]
[-241.96520996 -29.03629875]
[-254.69767761 -36.97872543]
[-266.82385254 -45.81920242]
[-278.28048706 -55.51163101]
[-289.00787354 -66.00548553]
[-298.95007324 -77.24604797]
[-308.05526733 -89.17472076]
[-316.27597046 -101.72931671]
[-323.56930542 -114.84436798]
[-329.89730835 -128.45150757]
[-335.22692871 -142.47979736]
[-339.53042603 -156.85609436]
[-342.78530884 -171.50544739]
[-344.97463989 -186.35147095]
[-346.08700562 -201.31677246]
[-346.11660767 -216.32333374]
[-345.06329346 -231.29292297]
[-342.93255615 -246.14746094]
[-339.73547363 -260.80953979]
[-335.48873901 -275.20269775]
[-330.21450806 -289.25192261]
[-323.94024658 -302.88391113]
[-316.69869995 -316.02764893]
[-308.52758789 -328.61456299]
[-299.46954346 -340.57907104]
[-289.57174683 -351.85876465]
[-278.88586426 -362.39486694]
[-267.46752930 -372.13241577]
[-255.37635803 -381.02066040]
[-242.67532349 -389.01327515]
[-229.43067932 -396.06854248]
[-215.71145630 -402.14971924]
[-201.58918762 -407.22509766]
[-187.13751221 -411.26821899]
[-172.43176270 -414.25796509]
[-157.54861450 -416.17880249]
[-142.56565857 -417.02069092]
[-127.56101227 -416.77923584]
[-112.61289978 -415.45571899]
[-97.79925537 -413.05700684]
[-83.19731903 -409.59561157]
[-68.88320923 -405.08963013]
[-54.93156433 -399.56246948]
[-41.41511154 -393.04302979]
[-28.40432739 -385.56524658]
[-15.96704006 -377.16812134]
[-4.16809559 -367.89544678]
[6.93099165 -357.79553223]
[17.27235603 -346.92108154]
[26.80208206 -335.32873535]
[35.47048569 -323.07897949]
[43.23237228 -310.23565674]
[50.04727554 -296.86575317]
[55.87966537 -283.03890991]
[60.69913483 -268.82730103]
[64.48056030 -254.30494690]
[67.20421600 -239.54759216]
[68.85591125 -224.63217163]
[69.42703247 -209.63645935]
[68.91460419 -194.63861084]
[67.32128906 -179.71685791]
[64.65541077 -164.94895935]
[60.93085098 -150.41191101]
[56.16703796 -136.18153381]
[50.38880157 -122.33199310]
[43.62627411 -108.93550110]
[35.91471100 -96.06190491]
[27.29431343 -83.77831268]
[17.81002808 -72.14878082]
[7.51130104 -61.23392868]
[-3.54817510 -51.09066772]
[5.76670790 -39.33341599]
[15.08159065 -27.57616615]
[24.39647293 -15.81891441]
[33.71135712 -4.06166315]
[43.02623749 7.69558811]
[52.34112167 19.45283890]
[61.65600586 31.21009064]
[65.94984436 16.83779335]
[79.80593872 11.09248161]
[93.01009369 18.20938683]
[95.82869720 32.94218826]
[86.18397522 44.43041611]
[71.18714142 44.20610809]
[79.60176086 56.62360382]
[88.01638031 69.04109955]
[101.56124878 75.23672485]
[102.89760590 91.00138855]
[107.69093323 93.13164520]
[110.94950867 97.79586792]
[111.37143707 103.91623688]
[119.41261292 116.57876587]
[127.45378876 129.24128723]
[135.49496460 141.90380859]
[143.53613281 154.56634521]
[152.04295349 166.92085266]
[161.00366211 178.95022583]
[169.96435547 190.97959900]
[178.92504883 203.00898743]
[187.88574219 215.03836060]
[200.67839050 207.18632507]
[214.12339783 200.51263428]
[228.11250305 195.07102966]
[242.53308105 190.90530396]
[257.26901245 188.04902649]
[272.20166016 186.52516174]
[287.21081543 186.34600830]
[302.17556763 187.51300049]
[316.97549438 190.01673889]
[331.49139404 193.83706665]
[345.60641479 198.94322205]
[359.20687866 205.29408264]
[372.18328857 212.83853149]
[384.43118286 221.51582336]
[395.85192871 231.25607300]
[406.35360718 241.98088074]
[415.85162354 253.60388184]
[424.26950073 266.03149414]
[431.53948975 279.16363525]
[437.60302734 292.89462280]
[442.41131592 307.11386108]
[445.92562866 321.70684814]
[448.11767578 336.55615234]
[448.96981812 351.54214478]
[448.47515869 366.54418945]
[446.63772583 381.44149780]
[443.47229004 396.11413574]
[439.00433350 410.44396973]
[433.26983643 424.31558228]
[426.31497192 437.61730957]
[418.19573975 450.24206543]
[408.97750854 462.08816528]
[398.73449707 473.06027222]
[387.54916382 483.07000732]
[375.51159668 492.03680420]
[362.71871948 499.88845825]
[349.27349854 506.56173706]
[335.28424072 512.00292969]
[320.86352539 516.16821289]
[306.12750244 519.02404785]
[291.19482422 520.54742432]
[276.18566895 520.72613525]
[261.22094727 519.55865479]
[246.42109680 517.05450439]
[231.90530396 513.23370361]
[217.79045105 508.12713623]
[204.19018555 501.77584839]
[191.21398926 494.23098755]
[178.96635437 485.55334473]
[167.54589844 475.81274414]
[157.04457092 465.08761597]
[147.54692078 453.46432495]
[139.12940979 441.03646851]
[131.85983276 427.90408325]
[125.79670715 414.17291260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 155]
[14 154]
[15 153]
[16 152]
[17 151]
[23 150]
[24 149]
[25 148]
[26 147]
[27 146]
[28 143]
[30 141]
[31 140]
[32 139]
[33 133]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
