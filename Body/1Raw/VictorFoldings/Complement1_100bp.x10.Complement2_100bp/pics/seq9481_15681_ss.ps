%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[87.74790192 534.89288330]
[75.39966583 543.51464844]
[61.48652267 549.27996826]
[46.65921783 551.91906738]
[31.61124611 551.30859375]
[17.04643250 547.47711182]
[3.64600015 540.60382080]
[-7.96328974 531.01013184]
[-17.23844910 519.14483643]
[-23.74566269 505.56286621]
[-27.18057632 490.89944458]
[-27.38253212 475.84045410]
[-24.34208298 461.09020996]
[-18.20143890 447.33862305]
[-9.24780846 435.22885132]
[2.10003257 425.32730103]
[15.31132412 418.09710693]
[29.76815033 413.87640381]
[44.79433823 412.86264038]
[47.01945496 398.02859497]
[49.24457169 383.19454956]
[51.46968842 368.36050415]
[53.47370148 353.49496460]
[55.14524460 338.58840942]
[56.70576859 323.66979980]
[58.26628876 308.75119019]
[56.60788345 306.49111938]
[55.74479294 303.43798828]
[55.98357391 299.89138794]
[57.51676178 296.25628662]
[60.38963699 293.00045776]
[62.83536530 278.20117188]
[65.28108978 263.40191650]
[59.72249603 249.58340454]
[69.60635376 237.22946167]
[72.05207825 222.43019104]
[74.49781036 207.63092041]
[76.94353485 192.83164978]
[79.38925934 178.03237915]
[73.83066559 164.21386719]
[83.71452332 151.85992432]
[86.16024780 137.06065369]
[88.60597992 122.26137543]
[91.05170441 107.46210480]
[80.97598267 118.57425690]
[67.10947418 124.29438782]
[52.12957764 123.51802826]
[38.92868042 116.39508057]
[30.05566788 104.30088806]
[27.22377968 89.57063293]
[30.97980881 75.04850006]
[40.59852600 63.53849411]
[54.22270584 57.26300812]
[69.22173309 57.43374252]
[82.69953156 64.01773834]
[92.05374908 75.74371338]
[95.47824860 90.34885406]
[100.51515961 76.21982574]
[105.55207825 62.09079742]
[102.89806366 46.49378586]
[114.45984650 37.10366058]
[119.49676514 22.97463226]
[124.53367615 8.84560204]
[129.57058716 -5.28342724]
[134.60751343 -19.41245651]
[139.64442444 -33.54148483]
[144.36456299 -47.77947617]
[148.76556396 -62.11932373]
[153.16654968 -76.45916748]
[155.39167786 -91.29321289]
[155.39167786 -106.29321289]
[155.39167786 -121.29321289]
[155.39167786 -136.29321289]
[155.39167786 -151.29321289]
[142.70582581 -155.73486328]
[132.02400208 -163.85557556]
[124.37723541 -174.85391235]
[120.49813080 -187.65153503]
[120.75076294 -200.99897766]
[125.09651184 -213.59757996]
[133.09919739 -224.22587585]
[143.96881104 -231.85803223]
[156.63949585 -235.76277161]
[157.08610535 -250.75611877]
[157.53271484 -265.74948120]
[157.97932434 -280.74282837]
[142.48687744 -287.42385864]
[130.77447510 -299.51647949]
[124.61856842 -315.14596558]
[124.93727112 -331.90426636]
[131.65342712 -347.22103882]
[143.71087646 -358.75790405]
[159.24037170 -364.76547241]
[159.24037170 -379.76547241]
[159.24037170 -394.76547241]
[159.24037170 -409.76547241]
[144.84719849 -414.42291260]
[132.59889221 -423.30178833]
[123.69542694 -435.53219604]
[119.00905609 -449.91598511]
[118.99892426 -465.04394531]
[123.66600800 -479.43399048]
[132.55307007 -491.67636108]
[144.78947449 -500.57162476]
[159.17639160 -505.24835205]
[174.30435181 -505.24835205]
[188.69126892 -500.57162476]
[200.92765808 -491.67636108]
[209.81472778 -479.43399048]
[214.48181152 -465.04394531]
[214.47167969 -449.91598511]
[209.78530884 -435.53219604]
[200.88185120 -423.30178833]
[188.63354492 -414.42291260]
[174.24037170 -409.76547241]
[174.24037170 -394.76547241]
[174.24037170 -379.76547241]
[174.24037170 -364.76547241]
[186.78918457 -360.48519897]
[197.42674255 -352.53280640]
[205.10943604 -341.67095947]
[209.07814026 -328.94854736]
[208.93325806 -315.59951782]
[204.67485046 -302.92303467]
[196.70401001 -292.15725708]
[185.78514099 -284.35818481]
[172.97267151 -280.29620361]
[172.52606201 -265.30285645]
[172.07945251 -250.30950928]
[171.63284302 -235.31616211]
[186.97659302 -228.84889221]
[198.68519592 -216.95812988]
[204.94233704 -201.44818115]
[204.76194763 -184.68783569]
[198.14341736 -169.24856567]
[186.07615662 -157.51002502]
[170.39167786 -151.29321289]
[170.39167786 -136.29321289]
[170.39167786 -121.29321289]
[170.39167786 -106.29321289]
[170.39167786 -91.29321289]
[177.22323608 -104.64723206]
[187.49844360 -115.57518768]
[200.40693665 -123.21525574]
[214.93070984 -126.96491241]
[229.92436218 -126.52845001]
[244.20541382 -121.94026947]
[256.64761353 -113.56223297]
[266.26974487 -102.05506134]
[272.31289673 -88.32625580]
[274.30053711 -73.45853424]
[272.07592773 -58.62441635]
[265.81445312 -44.99378967]
[256.00994873 -33.64162445]
[243.43562317 -25.46319199]
[229.08317566 -21.10348320]
[214.08447266 -20.90632248]
[199.62237549 -24.88725853]
[186.83743286 -32.73233795]
[176.73791504 -43.82286072]
[170.12031555 -57.28419113]
[167.50640869 -72.05817413]
[163.10540771 -57.71832275]
[158.70440674 -43.37847900]
[160.02450562 -40.10896683]
[159.82655334 -36.03762054]
[157.75096130 -31.88488388]
[153.77345276 -28.50457001]
[148.73654175 -14.37554073]
[143.69963074 -0.24651085]
[138.66270447 13.88251877]
[133.62579346 28.01154900]
[128.58888245 42.14057922]
[131.60316467 56.72698593]
[119.68110657 67.12771606]
[114.64418793 81.25674438]
[109.60727692 95.38577271]
[105.85097504 109.90782928]
[103.40525055 124.70709991]
[100.95951843 139.50637817]
[98.51379395 154.30564880]
[103.89745331 169.18269348]
[94.18852997 180.47810364]
[91.74280548 195.27737427]
[89.29708099 210.07664490]
[86.85134888 224.87591553]
[84.40562439 239.67518616]
[89.78928375 254.55223083]
[80.08036041 265.84762573]
[77.63463593 280.64691162]
[75.18891144 295.44616699]
[73.18489075 310.31170654]
[71.62437439 325.23031616]
[70.06385040 340.14892578]
[72.28348541 349.00955200]
[68.36742401 355.27743530]
[70.61399841 361.49551392]
[69.54375458 367.07687378]
[66.30373383 370.58560181]
[64.07861328 385.41964722]
[61.85350037 400.25369263]
[59.62837982 415.08773804]
[73.69582367 420.46557617]
[86.27805328 428.74215698]
[96.78656769 439.53036499]
[104.72987366 452.32559204]
[109.73645020 466.52938843]
[111.57212830 481.47744751]
[110.15104675 496.47061157]
[105.53967285 510.80758667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 202]
[20 201]
[21 200]
[22 199]
[23 196]
[24 194]
[25 193]
[26 192]
[31 191]
[32 190]
[33 189]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[41 181]
[42 180]
[43 179]
[44 178]
[57 177]
[58 176]
[59 175]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 164]
[68 163]
[69 162]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[83 130]
[84 129]
[85 128]
[86 127]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
