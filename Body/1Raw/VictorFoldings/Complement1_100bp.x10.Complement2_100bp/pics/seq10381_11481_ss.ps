%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[151.92005920 971.61053467]
[136.99858093 970.06042480]
[122.14596558 967.95019531]
[107.38323212 965.28277588]
[92.73128510 962.06195068]
[78.21086121 958.29223633]
[63.84250641 953.97900391]
[49.64656448 949.12835693]
[35.64312363 943.74719238]
[21.85200882 937.84307861]
[8.29273605 931.42437744]
[-5.01550293 924.50024414]
[-18.05387115 917.08038330]
[-30.80391312 909.17529297]
[-43.24758148 900.79626465]
[-55.36726761 891.95507812]
[-67.14582062 882.66424561]
[-78.56655121 872.93701172]
[-89.61331940 862.78698730]
[-100.27046967 852.22863770]
[-110.52293396 841.27691650]
[-120.35618591 829.94726562]
[-129.75631714 818.25579834]
[-138.71002197 806.21899414]
[-147.20462036 793.85394287]
[-155.22810364 781.17803955]
[-162.76910400 768.20941162]
[-169.81694031 754.96624756]
[-176.36164856 741.46734619]
[-182.39398193 727.73181152]
[-187.90536499 713.77911377]
[-192.88803101 699.62896729]
[-197.33489990 685.30139160]
[-201.23970032 670.81671143]
[-204.59689331 656.19543457]
[-207.40171814 641.45819092]
[-209.65023804 626.62585449]
[-211.33923340 611.71948242]
[-212.46633911 596.76007080]
[-213.02993774 581.76892090]
[-213.02925110 566.76715088]
[-212.46427917 551.77600098]
[-211.33580017 536.81671143]
[-209.64543152 521.91046143]
[-207.39556885 507.07836914]
[-204.58938599 492.34136963]
[-201.23085022 477.72036743]
[-197.32472229 463.23605347]
[-192.87654114 448.90890503]
[-187.89257812 434.75921631]
[-182.37991333 420.80700684]
[-176.34632874 407.07205200]
[-169.80038452 393.57376099]
[-162.75132751 380.33123779]
[-155.20913696 367.36325073]
[-147.18449402 354.68814087]
[-138.68876648 342.32385254]
[-129.73396301 330.28787231]
[-120.33275604 318.59722900]
[-110.49845886 307.26849365]
[-100.24500275 296.31771851]
[-89.58687592 285.76034546]
[-78.53918457 275.61135864]
[-67.11755371 265.88513184]
[-55.33815765 256.59539795]
[-43.21765900 247.75531006]
[-30.77322197 239.37741089]
[-18.02245522 231.47352600]
[-4.98340797 224.05485535]
[8.32546520 217.13189697]
[21.88532639 210.71446228]
[35.67698288 204.81161499]
[49.68091583 199.43171692]
[63.87730408 194.58239746]
[78.24605560 190.27049255]
[92.76682281 186.50212097]
[107.41906738 183.28262329]
[104.75327301 168.52140808]
[102.08747101 153.76019287]
[99.42167664 138.99897766]
[96.75588226 124.23775482]
[94.09008789 109.47653961]
[91.31447601 94.73557281]
[88.42920685 80.01568604]
[85.54393005 65.29579163]
[82.65866089 50.57590103]
[79.77338409 35.85600662]
[64.71652985 34.99469757]
[50.34716034 30.41517448]
[37.56855011 22.40530968]
[27.18397141 11.46861172]
[19.84621048 -1.70743024]
[16.01652336 -16.29455948]
[15.93564701 -31.37581444]
[19.60866737 -46.00317764]
[26.80469322 -59.25716019]
[37.07137680 -70.30460358]
[49.76334763 -78.45105743]
[64.08277130 -83.18443298]
[79.12953186 -84.20717621]
[93.95775604 -81.45500183]
[107.63534546 -75.10092163]
[119.30251312 -65.54434967]
[128.22584534 -53.38602066]
[133.84440613 -39.39021683]
[135.80503845 -24.43672943]
[133.98446655 -9.46554661]
[128.49713135 4.58223200]
[119.68799591 16.82355118]
[108.11079407 26.48890877]
[94.49327850 32.97073746]
[97.37854767 47.69062805]
[100.26382446 62.41051865]
[103.14909363 77.13040924]
[106.03437042 91.85030365]
[110.55198669 98.52590179]
[108.85130310 106.81073761]
[111.51709747 121.57196045]
[114.18289948 136.33317566]
[116.84869385 151.09439087]
[119.51448822 165.85560608]
[122.18028259 180.61682129]
[137.03308105 178.50787354]
[151.95469666 176.95910645]
[166.92402649 175.97271729]
[181.91984558 175.55009460]
[196.92095947 175.69183350]
[211.90611267 176.39773560]
[226.85412598 177.66680908]
[241.74380493 179.49726868]
[256.55410767 181.88648987]
[271.26406860 184.83111572]
[285.85284424 188.32696533]
[300.29980469 192.36911011]
[314.58447266 196.95181274]
[328.68667603 202.06858826]
[342.58642578 207.71220398]
[356.26403809 213.87466431]
[369.70019531 220.54724121]
[382.87585449 227.72048950]
[395.77236938 235.38427734]
[408.37145996 243.52774048]
[420.65533447 252.13935852]
[432.60656738 261.20693970]
[444.20831299 270.71765137]
[455.44406128 280.65802002]
[466.29797363 291.01400757]
[476.75463867 301.77090454]
[486.79928589 312.91354370]
[496.41772461 324.42611694]
[505.59628296 336.29232788]
[514.32202148 348.49542236]
[522.58251953 361.01806641]
[530.36621094 373.84259033]
[537.66192627 386.95083618]
[544.45941162 400.32418823]
[550.74908447 413.94381714]
[556.52203369 427.79034424]
[561.77001953 441.84423828]
[566.48559570 456.08560181]
[570.66223145 470.49426270]
[574.29388428 485.04983521]
[577.37548828 499.73168945]
[579.90264893 514.51910400]
[581.87176514 529.39105225]
[583.28009033 544.32659912]
[584.12567139 559.30450439]
[584.40716553 574.30364990]
[584.12432861 589.30279541]
[583.27752686 604.28063965]
[581.86785889 619.21606445]
[579.89746094 634.08782959]
[577.36901855 648.87500000]
[574.28613281 663.55664062]
[570.65319824 678.11187744]
[566.47534180 692.52014160]
[561.75842285 706.76110840]
[556.50921631 720.81451416]
[550.73510742 734.66058350]
[544.44427490 748.27966309]
[537.64556885 761.65240479]
[530.34869385 774.76000977]
[522.56396484 787.58386230]
[514.30230713 800.10577393]
[505.57553101 812.30810547]
[496.39593506 824.17352295]
[486.77651978 835.68530273]
[476.73089600 846.82702637]
[466.27325439 857.58300781]
[455.41845703 867.93804932]
[444.18182373 877.87744141]
[432.57928467 887.38714600]
[420.62725830 896.45367432]
[408.34262085 905.06420898]
[395.74279785 913.20660400]
[382.84564209 920.86926270]
[369.66937256 928.04138184]
[356.23263550 934.71276855]
[342.55447388 940.87402344]
[328.65423584 946.51641846]
[314.55157471 951.63195801]
[300.26651001 956.21343994]
[285.81918335 960.25433350]
[271.23010254 963.74890137]
[256.51989746 966.69226074]
[241.70939636 969.08020020]
[226.81954956 970.90936279]
[211.87142944 972.17712402]
[196.88619995 972.88171387]
[181.88508606 973.02215576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
