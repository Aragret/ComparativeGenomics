%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[-12.73468685 536.51739502]
[-11.66354465 551.52569580]
[-13.45236588 566.46545410]
[-18.03648758 580.79663086]
[-25.25019455 594.00115967]
[-34.83271790 605.60168457]
[-46.43765259 615.17883301]
[-59.64548874 622.38641357]
[-73.97877502 626.96392822]
[-88.91936493 628.74584961]
[-103.92716980 627.66772461]
[-118.45967102 623.76867676]
[-131.99151611 617.18945312]
[-144.03355408 608.16802979]
[-154.15045166 597.03051758]
[-161.97650146 584.17944336]
[-167.22880554 570.07946777]
[-169.71748352 555.24023438]
[-169.35256958 540.19818115]
[-166.14727783 525.49707031]
[-160.21743774 511.66836548]
[-151.77745056 499.21191406]
[-141.13238525 488.57803345]
[-128.66706848 480.15115356]
[-114.83210754 474.23587036]
[-100.12763977 471.04605103]
[-85.08521271 470.69696045]
[-70.24859619 473.20126343]
[-65.00188446 459.14877319]
[-67.79866791 444.51910400]
[-55.72307968 434.29702759]
[-50.47636032 420.24456787]
[-45.22964478 406.19210815]
[-46.35278702 402.84982300]
[-45.91286469 398.79745483]
[-43.59377670 394.77563477]
[-39.42212296 391.63806152]
[-33.55316162 377.83389282]
[-27.68420219 364.02969360]
[-39.27274323 354.57015991]
[-47.73475266 342.21597290]
[-52.37739563 327.96356201]
[-52.81629562 312.96527100]
[-49.00733566 298.43643188]
[-41.25093842 285.55657959]
[-30.16837502 275.37399292]
[-16.65202522 268.72015381]
[-1.79351115 266.14202881]
[13.20445919 267.85693359]
[19.07341957 254.05274963]
[24.94238091 240.24856567]
[30.81134224 226.44438171]
[36.68030167 212.64021301]
[35.75798416 209.99305725]
[35.82866669 206.82104492]
[37.09751129 203.50057983]
[39.62975693 200.47531128]
[43.33146286 198.20565796]
[50.01165771 184.77528381]
[56.69185257 171.34490967]
[63.37204742 157.91453552]
[70.05224609 144.48416138]
[64.02433777 128.78373718]
[71.36123657 113.27616882]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[111.46632385 58.69734955]
[117.94581604 45.16900635]
[124.42531586 31.64065933]
[130.70266724 18.01734352]
[136.77650452 4.30207634]
[142.64546204 -9.50209999]
[148.30825806 -23.39212799]
[153.97103882 -37.28215408]
[159.63383484 -51.17218018]
[165.29661560 -65.06221008]
[161.02275085 -77.23171234]
[166.02525330 -88.68417358]
[177.12254333 -93.49840546]
[175.40158081 -109.22573090]
[187.50177002 -117.91104126]
[178.79055786 -127.44488525]
[174.34828186 -139.52136230]
[174.80169678 -152.33421326]
[180.04817200 -163.98127747]
[189.27604675 -172.74678040]
[201.09013367 -177.35417175]
[213.72253418 -177.15190125]
[219.99989319 -190.77522278]
[226.27725220 -204.39854431]
[232.55461121 -218.02185059]
[238.11384583 -231.95365906]
[242.93983459 -246.15611267]
[247.76583862 -260.35855103]
[252.59182739 -274.56100464]
[257.41781616 -288.76348877]
[262.24383545 -302.96594238]
[249.05943298 -310.20077515]
[237.33178711 -319.61529541]
[227.41726685 -330.92343140]
[219.61715698 -343.78146362]
[214.16851807 -357.79870605]
[211.23689270 -372.54919434]
[210.91140747 -387.58465576]
[213.20191956 -402.44821167]
[218.03884888 -416.68811035]
[225.27519226 -429.87167358]
[234.69105530 -441.59826660]
[246.00028992 -451.51150513]
[258.85922241 -459.31015015]
[272.87710571 -464.75720215]
[287.62789917 -467.68716431]
[302.66342163 -468.01095581]
[317.52667236 -465.71875000]
[331.76605225 -460.88018799]
[344.94879150 -453.64236450]
[356.67431641 -444.22518921]
[366.58627319 -432.91482544]
[374.38345337 -420.05499268]
[379.82891846 -406.03649902]
[382.75720215 -391.28536987]
[383.07928467 -376.24981689]
[380.78540039 -361.38681030]
[375.94522095 -347.14797974]
[368.70590210 -333.96606445]
[359.28738403 -322.24160767]
[347.97589111 -312.33093262]
[335.11520386 -304.53521729]
[321.09609985 -299.09133911]
[306.34460449 -296.16473389]
[291.30902100 -295.84436035]
[276.44628906 -298.13992310]
[271.62026978 -283.93746948]
[266.79428101 -269.73501587]
[261.96829224 -255.53256226]
[257.14230347 -241.33010864]
[252.31629944 -227.12765503]
[265.73242188 -233.83642578]
[280.35076904 -230.47438049]
[289.48806763 -218.57858276]
[288.96682739 -203.58764648]
[279.02539062 -192.35520935]
[264.20880127 -190.01661682]
[251.29106140 -197.64100647]
[246.17793274 -211.74449158]
[239.90057373 -198.12117004]
[233.62321472 -184.49786377]
[227.34584045 -170.87454224]
[237.78924561 -157.18608093]
[239.87197876 -140.00541687]
[232.93072510 -124.05477142]
[218.79499817 -113.76438904]
[201.30595398 -112.04207611]
[203.44670105 -97.30211639]
[190.92671204 -87.62944031]
[193.99087524 -70.35003662]
[179.18664551 -59.39942169]
[173.52384949 -45.50939560]
[167.86106873 -31.61936760]
[162.19828796 -17.72934151]
[156.53549194 -3.83931375]
[157.52917480 0.83204931]
[155.59889221 6.17723513]
[150.49177551 10.37591076]
[144.41793823 24.09117699]
[145.27209473 28.79005432]
[143.18351746 34.07540131]
[137.95365906 38.12015533]
[131.47416687 51.64850235]
[124.99466705 65.17684937]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[107.40085602 126.35000610]
[105.28988647 139.45550537]
[96.15161896 148.81361389]
[83.48262024 151.16435242]
[76.80242157 164.59472656]
[70.12223053 178.02510071]
[63.44203568 191.45547485]
[56.76184082 204.88584900]
[50.48447800 218.50917053]
[44.61551666 232.31335449]
[38.74655914 246.11752319]
[32.87759781 259.92169189]
[27.00863647 273.72589111]
[38.64957047 283.33673096]
[47.10214615 295.82577515]
[51.68841553 310.17608643]
[52.04484558 325.22204590]
[48.15109253 339.74414062]
[40.33097076 352.56762695]
[29.22554207 362.65771484]
[15.74056339 369.20303345]
[0.97262692 371.68081665]
[-13.88002491 369.89865112]
[-19.74898529 383.70285034]
[-25.61794662 397.50701904]
[-31.17717171 411.43881226]
[-36.42388916 425.49130249]
[-41.67060852 439.54376221]
[-39.24910355 455.17855835]
[-50.94940948 464.39550781]
[-56.19612885 478.44796753]
[-43.34870148 486.27996826]
[-32.21584320 496.40200806]
[-23.19999313 508.44821167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 207]
[29 206]
[31 204]
[32 203]
[33 202]
[37 201]
[38 200]
[39 199]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[58 184]
[59 183]
[60 182]
[61 181]
[62 180]
[65 176]
[67 174]
[68 173]
[69 172]
[70 171]
[71 170]
[72 167]
[73 166]
[74 163]
[75 162]
[76 161]
[77 160]
[78 159]
[81 157]
[83 155]
[90 150]
[91 149]
[92 148]
[93 147]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
