%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[93.20179749 390.38009644]
[87.48242950 404.26486206]
[80.21757507 417.40713501]
[71.50193024 429.63558960]
[61.44913864 440.79083252]
[50.19024658 450.72738647]
[37.87204361 459.31573486]
[24.65511894 466.44387817]
[10.71178436 472.01895142]
[-3.77618074 475.96820068]
[-18.61989594 478.24017334]
[-33.62584305 478.80523682]
[-48.59838867 477.65606689]
[-63.34233475 474.80758667]
[-77.66546631 470.29696655]
[-91.38104248 464.18298340]
[-104.31026459 456.54537964]
[-116.28456879 447.48373413]
[-127.14785004 437.11611938]
[-136.75846863 425.57775879]
[-144.99114990 413.01907349]
[-151.73854065 399.60375977]
[-156.91270447 385.50674438]
[-160.44616699 370.91180420]
[-162.29286194 356.00921631]
[-162.42871094 340.99325562]
[-160.85194397 326.05966187]
[-157.58312988 311.40316772]
[-152.66488647 297.21484375]
[-146.16131592 283.67965698]
[-138.15721130 270.97409058]
[-128.75691223 259.26373291]
[-118.08300018 248.70127869]
[-106.27461243 239.42443848]
[-93.48569489 231.55416870]
[-79.88297272 225.19303894]
[-65.64379883 220.42401123]
[-50.95380402 217.30923462]
[-36.00450134 215.88934326]
[-20.99078751 216.18281555]
[-6.10839558 218.18585205]
[8.44865131 221.87232971]
[22.49057388 227.19419861]
[29.36998558 213.86476135]
[36.24939728 200.53533936]
[43.12881088 187.20590210]
[50.00822449 173.87648010]
[56.78821564 160.49620056]
[63.46841049 147.06582642]
[70.14860535 133.63545227]
[76.82879639 120.20507812]
[64.25255585 128.38053894]
[49.51924515 131.19647217]
[34.81446075 128.23516846]
[22.31957436 119.93590546]
[13.88812637 107.52983093]
[10.77087116 92.85731506]
[13.43023586 78.09494019]
[21.47171974 65.43260956]
[33.70241547 56.74871063]
[48.30797195 53.33145142]
[63.12174606 55.68775558]
[75.94619751 63.46807861]
[84.87889099 75.51826477]
[88.59472656 90.05072784]
[86.54309845 104.90786743]
[88.77265167 91.10494232]
[101.69965363 85.77725220]
[104.20482635 70.15563965]
[118.17298889 64.98459625]
[127.48786926 53.22734451]
[136.80274963 41.47009277]
[146.11763000 29.71284294]
[155.43252563 17.95559120]
[157.69541931 -0.31900424]
[174.25050354 -6.14102650]
[183.38929749 -18.03565979]
[176.61004639 -31.66661453]
[176.42208862 -46.82747269]
[182.80915833 -60.51050949]
[194.45590210 -70.02442169]
[209.01834106 -73.52366638]
[223.59559631 -70.36626434]
[232.73439026 -82.26089478]
[241.87319946 -94.15552521]
[251.01199341 -106.05016327]
[239.82812500 -116.05682373]
[229.42332458 -126.87127686]
[219.85580444 -138.43304443]
[211.17903137 -150.67747498]
[203.44157410 -163.53608704]
[196.68666077 -176.93695068]
[190.95210266 -190.80516052]
[186.26995850 -205.06312561]
[182.66641235 -219.63113403]
[180.16162109 -234.42768860]
[178.76957703 -249.37005615]
[178.49807739 -264.37466431]
[179.34864807 -279.35763550]
[181.31651306 -294.23510742]
[184.39068604 -308.92395020]
[188.55397034 -323.34197998]
[193.78306580 -337.40853882]
[200.04875183 -351.04501343]
[207.31597900 -364.17514038]
[215.54409790 -376.72543335]
[224.68710327 -388.62576294]
[234.69386292 -399.80953979]
[245.50840759 -410.21423340]
[257.07025146 -419.78167725]
[269.31475830 -428.45831299]
[282.17343140 -436.19567871]
[295.57437134 -442.95046997]
[309.44262695 -448.68490601]
[323.70065308 -453.36691284]
[338.26867676 -456.97033691]
[353.06527710 -459.47500610]
[368.00765991 -460.86691284]
[383.01226807 -461.13827515]
[397.99520874 -460.28756714]
[412.87268066 -458.31958008]
[427.56149292 -455.24526978]
[441.97946167 -451.08187866]
[456.04598999 -445.85263062]
[469.68240356 -439.58685303]
[482.81246948 -432.31948853]
[495.36270142 -424.09127808]
[507.26293945 -414.94815063]
[518.44665527 -404.94131470]
[528.85125732 -394.12664795]
[538.41857910 -382.56472778]
[547.09509277 -370.32012939]
[554.83233643 -357.46139526]
[561.58703613 -344.06039429]
[567.32135010 -330.19210815]
[572.00323486 -315.93405151]
[575.60650635 -301.36596680]
[578.11108398 -286.56936646]
[579.50280762 -271.62698364]
[579.77404785 -256.62234497]
[578.92321777 -241.63941956]
[576.95507812 -226.76197815]
[573.88067627 -212.07319641]
[569.71716309 -197.65524292]
[564.48779297 -183.58876038]
[558.22186279 -169.95239258]
[550.95440674 -156.82241821]
[542.72607422 -144.27226257]
[533.58282471 -132.37210083]
[523.57586670 -121.18849182]
[512.76116943 -110.78398132]
[501.19912720 -101.21675110]
[488.95446777 -92.54031372]
[476.09567261 -84.80318451]
[462.69461060 -78.04863739]
[448.82626343 -72.31444550]
[434.56817627 -67.63267517]
[420.00006104 -64.02951813]
[405.20343018 -61.52510834]
[390.26101685 -60.13346481]
[375.25640869 -59.86236572]
[360.27346802 -60.71332932]
[345.39605713 -62.68159485]
[330.70730591 -65.75614929]
[316.28939819 -69.91981506]
[302.22293091 -75.14928436]
[288.58663940 -81.41532898]
[275.45672607 -88.68290710]
[262.90664673 -96.91136169]
[253.76783752 -85.01672363]
[244.62902832 -73.12209320]
[235.49021912 -61.22745895]
[242.29644775 -47.95565796]
[242.66690063 -32.98327637]
[236.47456360 -19.27868462]
[224.89881897 -9.58216667]
[210.20127869 -5.85803032]
[195.28393555 -8.89685726]
[186.14514160 2.99777579]
[187.40518188 15.02852249]
[179.88883972 25.01292992]
[167.18977356 27.27047348]
[157.87489319 39.02772522]
[148.55999756 50.78497696]
[139.24511719 62.54222870]
[129.93023682 74.29947662]
[128.09132385 89.08013153]
[113.45690155 95.09213257]
[111.22734833 108.89505768]
[98.30034637 114.22274780]
[90.25917816 126.88527679]
[83.57897949 140.31564331]
[76.89878845 153.74603271]
[70.21858978 167.17640686]
[69.19873047 176.25372314]
[63.33765411 180.75588989]
[56.45824051 194.08532715]
[49.57882690 207.41474915]
[42.69941330 220.74418640]
[35.82000351 234.07360840]
[48.29263687 242.43609619]
[59.73069382 252.16587830]
[69.98506165 263.13610840]
[78.92204285 275.20373535]
[86.42514038 288.21148682]
[92.39653015 301.98974609]
[96.75835419 316.35888672]
[99.45375824 331.13156128]
[100.44759369 346.11523438]
[99.72691345 361.11450195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 194]
[49 193]
[50 192]
[51 191]
[66 190]
[68 188]
[70 186]
[71 185]
[72 184]
[73 183]
[74 182]
[76 179]
[77 178]
[83 172]
[84 171]
[85 170]
[86 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
