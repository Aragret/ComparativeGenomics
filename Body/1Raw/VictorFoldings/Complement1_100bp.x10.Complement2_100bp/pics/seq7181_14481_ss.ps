%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[119.02092743 363.03909302]
[105.80960083 370.21618652]
[91.59709930 375.12075806]
[76.77114868 377.61895752]
[61.73621368 377.64266968]
[46.90245438 375.19125366]
[32.67455292 370.33157349]
[19.44064903 363.19616699]
[7.56177902 353.97976685]
[-2.63799453 342.93374634]
[-10.88041496 330.35946655]
[-16.94062233 316.59997559]
[-20.65328979 302.03060913]
[-21.91713142 287.04888916]
[-20.69767189 272.06347656]
[-17.02817917 257.48318481]
[-11.00875568 243.70579529]
[-2.80361891 231.10716248]
[7.36338997 220.03097534]
[19.21490669 210.77941895]
[32.42761612 203.60485840]
[46.64105988 198.70304871]
[61.46749115 196.20768738]
[76.50243378 196.18687439]
[78.94815826 181.38760376]
[81.39389038 166.58833313]
[75.83528900 152.76982117]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[91.65219116 57.06061935]
[101.36111450 45.76521683]
[103.80683899 30.96594620]
[106.03195953 16.13190269]
[108.03597260 1.26637435]
[110.03998566 -13.59915352]
[112.04399872 -28.46468163]
[114.04801178 -43.33021164]
[99.28568268 -46.00431442]
[84.65927124 -49.34275818]
[70.19865417 -53.33871841]
[55.93337631 -57.98403931]
[41.89257812 -63.26922607]
[28.10494995 -69.18347931]
[14.59865284 -75.71472168]
[1.40128255 -82.84960175]
[-11.46020031 -90.57355499]
[-23.95951843 -98.87079620]
[-36.07114029 -107.72437286]
[-47.77031708 -117.11619568]
[-59.03315353 -127.02708435]
[-69.83663940 -137.43678284]
[-80.15869904 -148.32403564]
[-89.97824860 -159.66659546]
[-99.27522278 -171.44128418]
[-108.03063965 -183.62405396]
[-116.22660065 -196.19001770]
[-123.84636688 -209.11349487]
[-130.87437439 -222.36810303]
[-137.29624939 -235.92672729]
[-143.09889221 -249.76170349]
[-148.27044678 -263.84475708]
[-152.80033875 -278.14709473]
[-156.67930603 -292.63952637]
[-159.89944458 -307.29244995]
[-162.45416260 -322.07589722]
[-164.33825684 -336.95971680]
[-165.54785156 -351.91342163]
[-166.08050537 -366.90655518]
[-165.93510437 -381.90841675]
[-165.11195374 -396.88839722]
[-163.61273193 -411.81585693]
[-161.44052124 -426.66033936]
[-158.59973145 -441.39151001]
[-155.09619141 -455.97924805]
[-150.93704224 -470.39379883]
[-146.13079834 -484.60565186]
[-140.68725586 -498.58581543]
[-134.61753845 -512.30572510]
[-127.93405914 -525.73730469]
[-120.65046692 -538.85321045]
[-112.78164673 -551.62658691]
[-104.34366608 -564.03131104]
[-95.35375977 -576.04211426]
[-85.83030701 -587.63439941]
[-75.79275513 -598.78448486]
[-65.26161194 -609.46960449]
[-54.25839233 -619.66796875]
[-42.80557632 -629.35870361]
[-30.92655754 -638.52197266]
[-18.64560699 -647.13916016]
[-5.98781538 -655.19256592]
[7.02096033 -662.66577148]
[20.35414314 -669.54351807]
[33.98449326 -675.81176758]
[47.88416672 -681.45764160]
[62.02476883 -686.46972656]
[76.37740326 -690.83764648]
[90.91275787 -694.55261230]
[105.60112762 -697.60687256]
[120.41251373 -699.99438477]
[135.31665039 -701.71014404]
[150.28309631 -702.75061035]
[165.28128052 -703.11376953]
[180.28054810 -702.79882812]
[195.25025940 -701.80639648]
[210.15983582 -700.13861084]
[224.97882080 -697.79870605]
[239.67692566 -694.79162598]
[254.22413635 -691.12341309]
[268.59072876 -686.80163574]
[282.74737549 -681.83508301]
[296.66513062 -676.23382568]
[310.31555176 -670.00946045]
[323.67077637 -663.17462158]
[336.70349121 -655.74322510]
[349.38711548 -647.73052979]
[361.69567871 -639.15289307]
[373.60409546 -630.02783203]
[385.08798218 -620.37396240]
[396.12393188 -610.21099854]
[406.68936157 -599.55975342]
[416.76269531 -588.44201660]
[426.32336426 -576.88037109]
[435.35180664 -564.89855957]
[443.82962036 -552.52099609]
[451.73944092 -539.77301025]
[459.06515503 -526.68060303]
[465.79174805 -513.27050781]
[471.90554810 -499.57019043]
[477.39398193 -485.60760498]
[482.24588013 -471.41125488]
[486.45132446 -457.01016235]
[490.00173950 -442.43374634]
[492.88986206 -427.71179199]
[495.10977173 -412.87435913]
[496.65695190 -397.95178223]
[497.52822876 -382.97454834]
[497.72183228 -367.97320557]
[497.23739624 -352.97845459]
[496.07583618 -338.02093506]
[494.23962402 -323.13116455]
[491.73242188 -308.33956909]
[488.55938721 -293.67639160]
[484.72698975 -279.17153931]
[480.24310303 -264.85470581]
[475.11685181 -250.75511169]
[469.35867310 -236.90156555]
[462.98040771 -223.32235718]
[455.99505615 -210.04524231]
[448.41683960 -197.09735107]
[440.26132202 -184.50511169]
[431.54510498 -172.29426575]
[422.28601074 -160.48976135]
[412.50296021 -149.11569214]
[402.21594238 -138.19532776]
[391.44598389 -127.75096130]
[380.21505737 -117.80393219]
[368.54611206 -108.37454987]
[356.46301270 -99.48210144]
[343.99041748 -91.14472961]
[331.15383911 -83.37948608]
[317.97946167 -76.20222473]
[304.49423218 -69.62760925]
[290.72567749 -63.66907501]
[276.70193481 -58.33879089]
[262.45166016 -53.64765167]
[248.00395203 -49.60523605]
[233.38835144 -46.21980286]
[218.63468933 -43.49827194]
[203.77311707 -41.44619751]
[188.83399963 -40.06777954]
[173.84786987 -39.36582565]
[158.84530640 -39.34177780]
[143.85699463 -39.99567795]
[128.91354370 -41.32619476]
[126.90953064 -26.46066856]
[124.90551758 -11.59514046]
[122.90149689 3.27038813]
[120.89748383 18.13591576]
[123.02931213 22.40959740]
[122.49906921 28.06785393]
[118.60610962 33.41167450]
[116.16038513 48.21094513]
[121.71897888 62.02945709]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[105.90208435 157.73864746]
[96.19316101 169.03405762]
[93.74742889 183.83332825]
[91.30170441 198.63259888]
[105.53054047 203.48954773]
[118.76582336 210.62237549]
[130.64646912 219.83650208]
[140.84837341 230.88055420]
[149.09321594 243.45324707]
[155.15606689 257.21157837]
[158.87153625 271.78021240]
[160.13827515 286.76171875]
[158.92169189 301.74734497]
[155.25502014 316.32833862]
[149.23825073 330.10690308]
[141.03553772 342.70712280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 198]
[25 197]
[26 196]
[28 194]
[29 193]
[30 192]
[32 190]
[33 189]
[35 187]
[36 186]
[37 183]
[38 182]
[39 181]
[40 180]
[41 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
