%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[132.58306885 704.32958984]
[131.29209900 689.30346680]
[133.77935791 674.42846680]
[139.88847351 660.63970947]
[149.23542786 648.80395508]
[161.23266602 639.66522217]
[175.12603760 633.79791260]
[172.90092468 618.96386719]
[163.36123657 607.52514648]
[168.96580505 592.72991943]
[166.74069214 577.89587402]
[164.51557922 563.06182861]
[162.29045105 548.22778320]
[160.06533813 533.39373779]
[146.15429688 528.06939697]
[136.71327209 516.41937256]
[134.35557556 501.50939941]
[139.81333923 487.32809448]
[151.71423340 477.71997070]
[149.48912048 462.88592529]
[147.26400757 448.05187988]
[145.03887939 433.21783447]
[142.81376648 418.38378906]
[140.58865356 403.54974365]
[138.36352539 388.71572876]
[122.33284760 381.30700684]
[113.88418579 365.62036133]
[116.56661987 347.84722900]
[129.49275208 335.13217163]
[126.82695770 320.37097168]
[124.16116333 305.60974121]
[121.49536896 290.84854126]
[112.61084747 285.80093384]
[107.87177277 276.50094604]
[109.05804443 265.90979004]
[116.01794434 257.55105591]
[113.79283142 242.71701050]
[111.56771088 227.88296509]
[109.34259796 213.04891968]
[107.11747742 198.21487427]
[104.89235687 183.38082886]
[102.66724396 168.54678345]
[100.44212341 153.71273804]
[98.21701050 138.87869263]
[95.99188995 124.04465485]
[93.76677704 109.21060944]
[84.00317383 120.59797668]
[69.05837250 121.88359833]
[57.49342346 112.33100891]
[55.93325806 97.41236877]
[65.27160645 85.67375183]
[80.15904999 83.83956909]
[92.06688690 92.95970154]
[91.17407227 77.98629761]
[90.28125763 63.01289368]
[89.38844299 48.03948593]
[88.49562836 33.06608200]
[87.60280609 18.09267616]
[75.84574127 27.40779114]
[61.19878006 24.17260170]
[54.45911407 10.77196980]
[60.59498215 -2.91565800]
[75.08324432 -6.80027151]
[87.24290466 1.98027313]
[87.46623230 -13.01806450]
[87.68955994 -28.01640129]
[87.91288757 -43.01473999]
[88.13621521 -58.01307678]
[88.35954285 -73.01141357]
[88.58287048 -88.00975037]
[85.58157349 -96.63703918]
[88.92282867 -103.22928619]
[89.36943817 -118.22264099]
[89.81604004 -133.21598816]
[90.26264954 -148.20933533]
[89.70443726 -163.19894409]
[88.14391327 -178.11755371]
[86.58338928 -193.03616333]
[77.45237732 -205.95649719]
[83.82361603 -219.41966248]
[82.26309204 -234.33825684]
[80.70256805 -249.25686646]
[78.92010498 -264.15057373]
[76.91608429 -279.01611328]
[74.91207123 -293.88165283]
[59.88928604 -294.72561646]
[45.29776764 -298.39767456]
[31.66499329 -304.76510620]
[19.48378181 -313.59768677]
[9.19447422 -324.57614136]
[1.16902351 -337.30361938]
[-4.30245590 -351.32003784]
[-7.02217293 -366.11865234]
[-6.89181185 -381.16458130]
[-3.91608500 -395.91387939]
[1.79743683 -409.83334351]
[10.04221344 -422.41986084]
[20.52020073 -433.21838379]
[32.85262680 -441.83859253]
[46.59368515 -447.96884155]
[61.24663925 -451.38751221]
[76.28179169 -451.97106934]
[91.15564728 -449.69839478]
[105.33050537 -444.65161133]
[118.29396820 -437.01321411]
[129.57740784 -427.05929565]
[138.77293396 -415.14968872]
[145.54814148 -401.71493530]
[149.65809631 -387.24063110]
[150.95425415 -372.25009155]
[149.38972473 -357.28518677]
[145.02108765 -342.88687134]
[138.00625610 -329.57562256]
[128.59881592 -317.83270264]
[117.13884735 -308.08255005]
[104.04061127 -300.67764282]
[89.77760315 -295.88565063]
[91.78161621 -281.02011108]
[93.78562927 -266.15460205]
[96.97305298 -262.59799194]
[97.96008301 -257.00131226]
[95.62117004 -250.81738281]
[97.18169403 -235.89878845]
[98.74221802 -220.98017883]
[107.76161194 -209.12692261]
[101.50199890 -194.59667969]
[103.06252289 -179.67807007]
[104.62304688 -164.75947571]
[112.66580963 -177.42098999]
[126.23206329 -183.82072449]
[141.11816406 -181.97566223]
[152.71147156 -172.45751953]
[157.41969299 -158.21559143]
[153.78392029 -143.66288757]
[142.93074036 -133.30871582]
[128.22314453 -130.36145020]
[114.21841431 -135.73432922]
[105.25599670 -147.76272583]
[104.80939484 -132.76937866]
[104.36278534 -117.77603149]
[103.91618347 -102.78268433]
[103.58120728 -87.78642273]
[103.35787964 -72.78808594]
[103.13455200 -57.78974915]
[102.91122437 -42.79141235]
[102.68789673 -27.79307365]
[102.46456909 -12.79473686]
[102.24124146 2.20360088]
[102.57621765 17.19985962]
[103.46903229 32.17326736]
[104.36184692 47.14667130]
[105.25466156 62.12007904]
[106.14747620 77.09348297]
[107.04029846 92.06688690]
[108.60081482 106.98549652]
[110.82593536 121.81953430]
[113.05105591 136.65357971]
[115.27616882 151.48762512]
[117.50128937 166.32167053]
[119.72640228 181.15571594]
[121.95152283 195.98976135]
[124.17663574 210.82380676]
[126.40175629 225.65783691]
[128.62687683 240.49188232]
[130.85198975 255.32592773]
[144.10832214 270.51251221]
[136.25659180 288.18273926]
[138.92237854 302.94393921]
[141.58818054 317.70516968]
[144.25396729 332.46640015]
[156.13012695 336.36828613]
[165.16795349 344.89974976]
[169.69445801 356.39715576]
[168.90771484 368.65612793]
[163.01828003 379.35412598]
[153.19757080 386.49060059]
[155.42269897 401.32464600]
[157.64781189 416.15869141]
[159.87292480 430.99273682]
[162.09803772 445.82678223]
[164.32316589 460.66082764]
[166.54827881 475.49487305]
[180.74443054 481.18838501]
[190.12278748 493.14428711]
[192.24345398 508.08981323]
[186.63604736 521.99713135]
[174.89938354 531.16864014]
[177.12449646 546.00268555]
[179.34960938 560.83673096]
[181.57473755 575.67077637]
[183.79985046 590.50476074]
[193.49868774 603.00451660]
[187.73495483 616.73876953]
[189.96008301 631.57281494]
[204.96345520 633.10552979]
[219.11401367 638.32214355]
[231.52221680 646.89459229]
[241.40808105 658.28411865]
[248.15019226 671.77465820]
[251.32470703 686.51824951]
[250.73208618 701.58807373]
[246.40959167 716.03680420]
[238.62892151 728.95623779]
[227.87918091 739.53424072]
[214.83610535 747.10583496]
[200.31961060 751.19512939]
[185.24218750 751.54498291]
[170.55165100 748.13342285]
[157.17141724 741.17492676]
[145.94261169 731.10693359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 194]
[8 193]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[29 170]
[30 169]
[31 168]
[32 167]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[53 154]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 128]
[77 127]
[78 126]
[80 124]
[81 123]
[82 122]
[83 119]
[84 118]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
