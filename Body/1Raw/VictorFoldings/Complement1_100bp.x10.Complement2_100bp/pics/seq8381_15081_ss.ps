%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[82.92269135 333.06222534]
[85.40000916 313.83950806]
[85.62333679 298.84115601]
[85.84666443 283.84283447]
[86.06999207 268.84448242]
[86.29331970 253.84614563]
[86.51664734 238.84780884]
[83.89208221 234.85772705]
[83.74619293 229.17655945]
[86.97655487 223.40800476]
[87.64633942 208.42295837]
[88.31612396 193.43792725]
[88.98590851 178.45288086]
[89.65569305 163.46784973]
[79.44618225 152.68353271]
[79.91197205 137.47702026]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[87.27859497 43.37180710]
[95.57647705 31.00271606]
[87.98657227 43.94077682]
[76.81190491 53.94710922]
[63.11756516 60.06798172]
[48.20881271 61.71998596]
[33.50665665 58.74566269]
[20.41241074 51.42850876]
[10.17413616 40.46595001]
[3.76767969 26.90286064]
[1.80366457 12.03199577]
[4.46928740 -2.72925258]
[11.51047897 -15.97393608]
[22.25611687 -26.43965530]
[35.68199539 -33.12888336]
[50.50844574 -35.40404892]
[65.32230377 -33.04829407]
[78.71160889 -26.28615761]
[89.40017700 -15.76216030]
[96.36923981 -2.47938466]
[98.95458221 12.29727554]
[103.56858826 -1.97545779]
[108.18259430 -16.24819183]
[112.79660797 -30.52092552]
[117.09072876 -44.89313889]
[121.06282806 -59.35766220]
[125.03491974 -73.82218170]
[129.00701904 -88.28671265]
[132.97911072 -102.75123596]
[118.72400665 -107.42916107]
[104.71561432 -112.80091858]
[90.98766327 -118.85356903]
[77.57324982 -125.57253265]
[64.50466919 -132.94160461]
[51.81341934 -140.94305420]
[39.53006744 -149.55760193]
[27.68421173 -158.76448059]
[16.30438232 -168.54153442]
[5.41799974 -178.86517334]
[-4.94871187 -189.71055603]
[-14.77077770 -201.05154419]
[-24.02453613 -212.86082458]
[-32.68769455 -225.10993958]
[-40.73937988 -237.76937866]
[-48.16019440 -250.80865479]
[-54.93226242 -264.19631958]
[-61.03927231 -277.90017700]
[-66.46650696 -291.88717651]
[-71.20089722 -306.12362671]
[-75.23103333 -320.57525635]
[-78.54720306 -335.20721436]
[-81.14142609 -349.98425293]
[-83.00743866 -364.87078857]
[-84.14076233 -379.83096313]
[-84.53865814 -394.82870483]
[-84.20017242 -409.82791138]
[-83.12610626 -424.79244995]
[-81.31906891 -439.68627930]
[-78.78339386 -454.47348022]
[-75.52519989 -469.11846924]
[-71.55233765 -483.58590698]
[-66.87437439 -497.84100342]
[-61.50257874 -511.84939575]
[-55.44989395 -525.57733154]
[-48.73090363 -538.99169922]
[-41.36178970 -552.06030273]
[-33.36030579 -564.75152588]
[-24.74573326 -577.03485107]
[-15.53882122 -588.88067627]
[-5.76175117 -600.26049805]
[4.56192398 -611.14685059]
[15.40733242 -621.51354980]
[26.74834824 -631.33557129]
[38.55764771 -640.58929443]
[50.80678177 -649.25244141]
[63.46623993 -657.30407715]
[76.50553131 -664.72485352]
[89.89322662 -671.49688721]
[103.59709167 -677.60388184]
[117.58410645 -683.03106689]
[131.82057190 -687.76544189]
[146.27220154 -691.79553223]
[160.90415955 -695.11163330]
[175.68121338 -697.70581055]
[190.56774902 -699.57183838]
[205.52792358 -700.70507812]
[220.52568054 -701.10296631]
[235.52488708 -700.76446533]
[250.48942566 -699.69036865]
[265.38323975 -697.88323975]
[280.17044067 -695.34753418]
[294.81539917 -692.08929443]
[309.28283691 -688.11639404]
[323.53793335 -683.43841553]
[337.54629517 -678.06658936]
[351.27423096 -672.01385498]
[364.68859863 -665.29486084]
[377.75714111 -657.92572021]
[390.44836426 -649.92419434]
[402.73165894 -641.30957031]
[414.57748413 -632.10266113]
[425.95724487 -622.32556152]
[436.84359741 -612.00183105]
[447.21023560 -601.15643311]
[457.03225708 -589.81536865]
[466.28594971 -578.00604248]
[474.94906616 -565.75689697]
[483.00067139 -553.09741211]
[490.42141724 -540.05810547]
[497.19342041 -526.67041016]
[503.30038452 -512.96649170]
[508.72753906 -498.97949219]
[513.46185303 -484.74301147]
[517.49194336 -470.29138184]
[520.80804443 -455.65939331]
[523.40216064 -440.88235474]
[525.26812744 -425.99578857]
[526.40136719 -411.03561401]
[526.79919434 -396.03787231]
[526.46063232 -381.03866577]
[525.38647461 -366.07412720]
[523.57934570 -351.18032837]
[521.04364014 -336.39312744]
[517.78533936 -321.74816895]
[513.81243896 -307.28073120]
[509.13436890 -293.02566528]
[503.76251221 -279.01730347]
[497.70974731 -265.28939819]
[490.99069214 -251.87503052]
[483.62152100 -238.80650330]
[475.61999512 -226.11531067]
[467.00534058 -213.83203125]
[457.79837036 -201.98623657]
[448.02124023 -190.60647583]
[437.69750977 -179.72016907]
[426.85205078 -169.35354614]
[415.51098633 -159.53157043]
[403.70166016 -150.27789307]
[391.45248413 -141.61482239]
[378.79296875 -133.56323242]
[365.75366211 -126.14251709]
[352.36590576 -119.37054443]
[338.66201782 -113.26364136]
[324.67498779 -107.83650970]
[310.43847656 -103.10222626]
[295.98684692 -99.07219696]
[281.35485840 -95.75613403]
[266.57781982 -93.16202545]
[251.69125366 -91.29611969]
[236.73107910 -90.16291046]
[221.73332214 -89.76512909]
[206.73410034 -90.10372925]
[191.76957703 -91.17790222]
[176.87577820 -92.98505402]
[162.08859253 -95.52083588]
[147.44363403 -98.77913666]
[143.47154236 -84.31461334]
[139.49945068 -69.85009003]
[135.52734375 -55.38556671]
[131.55525208 -40.92103958]
[132.97210693 -37.69228363]
[132.89547729 -33.61684799]
[130.94444275 -29.40415573]
[127.06934357 -25.90691566]
[122.45532990 -11.63418198]
[117.84132385 2.63855147]
[113.22731018 16.91128540]
[110.56151581 31.67250252]
[117.72280121 44.73256683]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[116.66438293 139.11975098]
[115.77165985 154.30715942]
[104.64073181 164.13763428]
[103.97094727 179.12266541]
[103.30116272 194.10771179]
[102.63137817 209.09274292]
[101.96159363 224.07778931]
[101.51498413 239.07113647]
[101.29165649 254.06947327]
[101.06832886 269.06781006]
[100.84500122 284.06616211]
[100.62167358 299.06448364]
[100.39834595 314.06283569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[6 206]
[7 205]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[17 197]
[18 196]
[20 194]
[21 193]
[22 192]
[24 190]
[43 189]
[44 188]
[45 187]
[46 186]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
