%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[118.00386047 231.47920227]
[119.66075897 246.40762329]
[119.43352509 261.42599487]
[117.32572174 276.29745483]
[113.37060547 290.78747559]
[107.63055420 304.66748047]
[100.19609070 317.71862793]
[91.18446350 329.73501587]
[80.73781586 340.52719116]
[69.02088928 349.92489624]
[56.21847916 357.77993774]
[42.53250504 363.96841431]
[28.17881203 368.39273071]
[13.38377666 370.98315430]
[-1.61926043 371.69876099]
[-16.59368134 370.52828979]
[-31.30331612 367.49023438]
[-45.51617432 362.63244629]
[-59.00809479 356.03161621]
[-71.56629944 347.79177856]
[-82.99271393 338.04290771]
[-93.10713959 326.93878174]
[-101.75005341 314.65451050]
[-108.78514099 301.38385010]
[-114.10144806 287.33605957]
[-117.61513519 272.73272705]
[-119.27078247 257.80416870]
[-119.04228210 242.78581238]
[-116.93322754 227.91453552]
[-112.97689819 213.42485046]
[-107.23567200 199.54531860]
[-99.80010986 186.49481201]
[-90.78747559 174.47917175]
[-80.33991241 163.68789673]
[-68.62219238 154.29116821]
[-55.81912613 146.43721008]
[-42.13263321 140.24987793]
[-27.77856636 135.82675171]
[-12.98331356 133.23759460]
[2.01978397 132.52325439]
[16.99410629 133.69496155]
[31.70348549 136.73428345]
[45.91593552 141.59324646]
[59.40729904 148.19523621]
[67.63610840 135.65382385]
[75.86491394 123.11242676]
[84.09372711 110.57102966]
[81.25088501 96.36312866]
[89.19964600 84.24853516]
[103.36487579 81.20016479]
[111.59368134 68.65876007]
[119.82249451 56.11736298]
[107.64226532 47.35887527]
[95.84741211 38.08793259]
[84.45948029 28.32146263]
[73.49925995 18.07731056]
[62.98678970 7.37418604]
[52.94126129 -3.76835799]
[43.38102341 -15.32996845]
[34.32354355 -27.28952789]
[25.78536606 -39.62518692]
[17.78208733 -52.31441498]
[10.32832527 -65.33403015]
[3.43769670 -78.66025543]
[-2.87721181 -92.26873779]
[-8.60486507 -106.13462830]
[-13.73480034 -120.23259735]
[-18.25764656 -134.53689575]
[-22.16514206 -149.02137756]
[-25.45015144 -163.65960693]
[-28.10667038 -178.42483521]
[-30.12984848 -193.29008484]
[-31.51599121 -208.22821045]
[-32.26256180 -223.21192932]
[-32.36820221 -238.21385193]
[-31.83271790 -253.20658875]
[-30.65708351 -268.16275024]
[-28.84345055 -283.05502319]
[-26.39513016 -297.85620117]
[-23.31659508 -312.53924561]
[-19.61346817 -327.07730103]
[-15.29251575 -341.44387817]
[-10.36162758 -355.61270142]
[-4.82981348 -369.55786133]
[1.29282272 -383.25393677]
[7.99509716 -396.67587280]
[15.26476669 -409.79919434]
[23.08855247 -422.59985352]
[31.45216370 -435.05453491]
[40.34032059 -447.14047241]
[49.73678970 -458.83557129]
[59.62440491 -470.11846924]
[69.98510742 -480.96856689]
[80.79996490 -491.36605835]
[92.04923248 -501.29193115]
[103.71235657 -510.72805786]
[115.76802826 -519.65722656]
[128.19422913 -528.06304932]
[140.96826172 -535.93029785]
[154.06680298 -543.24450684]
[167.46589661 -549.99230957]
[181.14109802 -556.16143799]
[195.06741333 -561.74053955]
[209.21939087 -566.71954346]
[223.57121277 -571.08923340]
[238.09663391 -574.84173584]
[252.76913452 -577.97009277]
[267.56188965 -580.46868896]
[282.44793701 -582.33288574]
[297.40002441 -583.55926514]
[312.39083862 -584.14569092]
[327.39303589 -584.09100342]
[342.37921143 -583.39532471]
[357.32196045 -582.05987549]
[372.19400024 -580.08721924]
[386.96813965 -577.48083496]
[401.61746216 -574.24554443]
[416.11511230 -570.38726807]
[430.43469238 -565.91302490]
[444.55001831 -560.83099365]
[458.43527222 -555.15045166]
[472.06512451 -548.88183594]
[485.41467285 -542.03649902]
[498.45953369 -534.62695312]
[511.17584229 -526.66680908]
[523.54040527 -518.17059326]
[535.53070068 -509.15377808]
[547.12469482 -499.63287354]
[558.30126953 -489.62524414]
[569.04003906 -479.14916992]
[579.32135010 -468.22381592]
[589.12646484 -456.86911011]
[598.43737793 -445.10580444]
[607.23718262 -432.95538330]
[615.50976562 -420.44006348]
[623.23999023 -407.58267212]
[630.41381836 -394.40670776]
[637.01800537 -380.93627930]
[643.04064941 -367.19592285]
[648.47064209 -353.21078491]
[653.29809570 -339.00637817]
[657.51416016 -324.60870361]
[661.11120605 -310.04400635]
[664.08258057 -295.33889771]
[666.42291260 -280.52026367]
[668.12792969 -265.61517334]
[669.19445801 -250.65084839]
[669.62060547 -235.65460205]
[669.40557861 -220.65383911]
[668.54980469 -205.67596436]
[667.05480957 -190.74835205]
[664.92327881 -175.89823914]
[662.15917969 -161.15278625]
[658.76751709 -146.53889465]
[654.75451660 -132.08328247]
[650.12750244 -117.81234741]
[644.89489746 -103.75215149]
[639.06628418 -89.92839050]
[632.65234375 -76.36631012]
[625.66473389 -63.09068680]
[618.11621094 -50.12576675]
[610.02062988 -37.49523163]
[601.39276123 -25.22215271]
[592.24829102 -13.32895470]
[582.60400391 -1.83735800]
[572.47747803 9.23164463]
[561.88726807 19.85783386]
[550.85266113 30.02180099]
[539.39379883 39.70497513]
[527.53167725 48.88967514]
[515.28790283 57.55911636]
[502.68487549 65.69747162]
[489.74563599 73.28986359]
[476.49377441 80.32242584]
[462.95349121 86.78232574]
[449.14956665 92.65774536]
[435.10720825 97.93796539]
[420.85202026 102.61332703]
[406.41009521 106.67530823]
[391.80780029 110.11647034]
[377.07177734 112.93054199]
[362.22897339 115.11237335]
[347.30651855 116.65798187]
[332.33163452 117.56455231]
[317.33169556 117.83041382]
[302.33407593 117.45508575]
[287.36621094 116.43926239]
[272.45544434 114.78479004]
[257.62896729 112.49469757]
[242.91387939 109.57315826]
[228.33706665 106.02552032]
[213.92517090 101.85825348]
[199.70449829 97.07897949]
[185.70103455 91.69642639]
[171.94035339 85.72042084]
[158.44758606 79.16188049]
[145.24740601 72.03279114]
[132.36389160 64.34616852]
[124.13508606 76.88757324]
[115.90627289 89.42897034]
[118.74911499 103.63687134]
[110.80035400 115.75146484]
[96.63512421 118.79983521]
[88.40631866 131.34123230]
[80.17750549 143.88264465]
[71.94869995 156.42404175]
[83.37593842 166.17193604]
[93.49130249 177.27520752]
[102.13524628 189.55874634]
[109.17144775 202.82882690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 206]
[45 205]
[46 204]
[47 203]
[50 200]
[51 199]
[52 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
