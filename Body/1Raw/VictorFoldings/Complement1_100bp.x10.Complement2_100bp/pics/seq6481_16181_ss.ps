%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[167.35142517 663.14514160]
[155.89033508 653.46032715]
[145.06657410 643.06805420]
[134.92372131 632.01025391]
[125.50262451 620.33142090]
[116.84121704 608.07855225]
[108.97438049 595.30102539]
[101.93377686 582.05029297]
[95.74777222 568.37963867]
[90.44126129 554.34423828]
[86.03562927 540.00048828]
[82.54859924 525.40618896]
[79.99422455 510.62011719]
[78.38278198 495.70181274]
[77.72076416 480.71136475]
[78.01084137 465.70907593]
[79.25183868 450.75540161]
[81.43875885 435.91052246]
[84.56280518 421.23425293]
[88.61138916 406.78567505]
[93.56820679 392.62295532]
[99.41330719 378.80316162]
[106.12314606 365.38186646]
[113.67070770 352.41317749]
[122.02560425 339.94931030]
[131.15419006 328.04043579]
[141.01969910 316.73449707]
[151.58242798 306.07705688]
[162.79981995 296.11096191]
[174.62672424 286.87643433]
[187.01550293 278.41058350]
[179.35491943 265.51425171]
[171.69432068 252.61791992]
[164.03372192 239.72158813]
[156.37312317 226.82527161]
[153.69303894 226.00349426]
[151.17698669 224.07060242]
[149.24981689 221.08372498]
[148.30783081 217.25263977]
[148.66679382 212.92538452]
[141.78736877 199.59596252]
[134.90795898 186.26652527]
[128.02854919 172.93710327]
[122.16747284 168.43492126]
[121.14761353 159.35760498]
[114.46741486 145.92723083]
[107.78722382 132.49685669]
[101.10702515 119.06648254]
[87.40441132 114.35643768]
[80.95155334 101.38312531]
[85.46259308 87.61370850]
[78.78240204 74.18333435]
[72.10220337 60.75296021]
[66.31475067 74.59150696]
[52.48999786 80.41182709]
[38.54738617 74.87977600]
[32.47388077 61.16436386]
[37.74866104 47.12240219]
[51.35009384 40.79776382]
[65.48594666 45.81285477]
[60.03059387 31.84005737]
[54.57523727 17.86725998]
[53.28372192 32.81155777]
[48.62580109 47.07001877]
[40.84581757 59.89468002]
[30.35190010 70.61277771]
[17.69453430 78.66207123]
[3.53770089 83.62030029]
[-11.37596130 85.22737885]
[-26.26411057 83.39898682]
[-40.34574509 78.23104858]
[-52.88217163 69.99466705]
[-63.21575165 59.12189484]
[-70.80440521 46.18310547]
[-75.25005341 31.85703659]
[-76.31948090 16.89520645]
[-73.95658112 2.08248520]
[-68.28532410 -11.80408382]
[-59.60319901 -24.03603935]
[-48.36565781 -33.97171402]
[-35.16220093 -41.08990860]
[-20.68544960 -45.01721191]
[-5.69482994 -45.54760361]
[9.02328205 -42.65326691]
[22.69680214 -36.48602676]
[34.60844803 -27.36940956]
[44.13335419 -15.78164959]
[50.77242279 -2.32905960]
[50.77242279 -17.32905960]
[42.22060013 -26.98458099]
[42.52940369 -39.47811508]
[50.98804474 -48.12554169]
[51.21137238 -63.12387848]
[51.43470001 -78.12221527]
[51.65802765 -93.12055206]
[51.88135529 -108.11888885]
[52.10468292 -123.11722565]
[52.32801056 -138.11557007]
[52.55133820 -153.11390686]
[38.71511459 -159.47619629]
[28.66774559 -170.92041016]
[24.15000343 -185.46379089]
[25.94461250 -200.58660889]
[33.74065018 -213.66871643]
[46.18739700 -222.44358826]
[61.12838745 -225.39091492]
[75.97499847 -222.00004578]
[88.15497589 -212.85847473]
[95.55804443 -199.55004883]
[96.90159607 -184.38050842]
[91.95285034 -169.97808838]
[81.56919861 -158.83808899]
[67.54967499 -152.89057922]
[67.32634735 -137.89224243]
[67.10301971 -122.89389801]
[66.87969208 -107.89556122]
[66.65636444 -92.89722443]
[66.43303680 -77.89888763]
[66.20970917 -62.90055084]
[65.98638153 -47.90221405]
[75.34710693 -33.05823135]
[65.77242279 -17.32905960]
[65.77242279 -2.32905960]
[68.54803467 12.41190338]
[74.00338745 26.38470078]
[79.45874786 40.35749817]
[85.53258514 54.07276535]
[92.21277618 67.50314331]
[98.89297485 80.93351746]
[112.59558868 85.64356232]
[119.04844666 98.61687469]
[114.53740692 112.38629150]
[121.21759796 125.81666565]
[127.89779663 139.24703979]
[134.57798767 152.67741394]
[141.35798645 166.05769348]
[148.23739624 179.38711548]
[155.11680603 192.71655273]
[161.99621582 206.04597473]
[169.26943970 219.16467285]
[176.93003845 232.06100464]
[184.59063721 244.95732117]
[192.25123596 257.85363770]
[199.91183472 270.74996948]
[213.27252197 263.92028809]
[227.03947449 257.95172119]
[241.15725708 252.86834717]
[255.56901550 248.69061279]
[270.21673584 245.43534851]
[285.04144287 243.11564636]
[299.98339844 241.74085999]
[314.98248291 241.31652832]
[329.97827148 241.84434509]
[344.91040039 243.32220459]
[359.71875000 245.74414062]
[374.34365845 249.10041809]
[388.72625732 253.37748718]
[402.80862427 258.55816650]
[416.53405762 264.62158203]
[429.84729004 271.54330444]
[442.69473267 279.29547119]
[455.02459717 287.84686279]
[466.78732300 297.16305542]
[477.93545532 307.20654297]
[488.42416382 317.93685913]
[498.21118164 329.31079102]
[507.25711060 341.28256226]
[515.52551270 353.80398560]
[522.98315430 366.82461548]
[529.59991455 380.29199219]
[535.34924316 394.15194702]
[540.20788574 408.34863281]
[544.15637207 422.82489014]
[547.17877197 437.52243042]
[549.26287842 452.38208008]
[550.40032959 467.34399414]
[550.58654785 482.34790039]
[549.82080078 497.33343506]
[548.10614014 512.24023438]
[545.44946289 527.00823975]
[541.86151123 541.57806396]
[537.35668945 555.89099121]
[531.95318604 569.88934326]
[525.67266846 583.51678467]
[518.54052734 596.71850586]
[510.58544922 609.44128418]
[501.83941650 621.63391113]
[492.33770752 633.24725342]
[482.11856079 644.23455811]
[471.22314453 654.55163574]
[459.69528198 664.15692139]
[447.58145142 673.01171875]
[434.93038940 681.08038330]
[421.79302979 688.33038330]
[408.22232056 694.73260498]
[394.27285767 700.26116943]
[380.00085449 704.89392090]
[365.46374512 708.61212158]
[350.72009277 711.40087891]
[335.82925415 713.24890137]
[320.85116577 714.14874268]
[305.84619141 714.09680176]
[290.87469482 713.09332275]
[275.99697876 711.14227295]
[261.27297974 708.25152588]
[246.76196289 704.43280029]
[232.52236938 699.70135498]
[218.61152649 694.07635498]
[205.08544922 687.58038330]
[191.99859619 680.23962402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 144]
[32 143]
[33 142]
[34 141]
[35 140]
[40 139]
[41 138]
[42 137]
[43 136]
[45 135]
[46 134]
[47 133]
[48 132]
[51 129]
[52 128]
[53 127]
[60 126]
[61 125]
[62 124]
[88 123]
[89 122]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
