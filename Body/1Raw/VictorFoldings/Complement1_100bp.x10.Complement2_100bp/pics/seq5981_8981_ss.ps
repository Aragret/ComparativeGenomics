%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[92.75996399 613.39184570]
[92.11760712 598.33026123]
[95.09908295 583.55279541]
[101.53103638 569.91851807]
[111.03952789 558.22015381]
[123.07174683 549.13775635]
[136.92816162 543.19952393]
[134.48243713 528.40020752]
[132.03671265 513.60095215]
[129.59098816 498.80169678]
[127.14525604 484.00241089]
[115.72352600 478.03805542]
[109.73310089 466.41061401]
[111.56018829 453.26254272]
[120.75968170 443.42465210]
[118.53456116 428.59060669]
[116.30944824 413.75656128]
[105.43031311 424.08346558]
[90.55313110 422.16790771]
[82.64479065 409.42199707]
[87.53504181 395.24151611]
[101.61896515 390.07983398]
[114.51349640 397.74053955]
[113.39784241 382.78207397]
[112.28219604 367.82360840]
[111.16654968 352.86517334]
[110.05089569 337.90670776]
[108.93524933 322.94827271]
[99.97690582 314.81964111]
[98.92501831 302.36663818]
[106.88697052 292.21920776]
[105.99415588 277.24581909]
[105.10134125 262.27239990]
[96.62021637 250.02822876]
[103.52239990 235.79199219]
[93.08355713 221.68534851]
[101.46183777 205.28759766]
[100.34619141 190.32914734]
[89.69847870 176.37948608]
[97.83169556 159.85882568]
[96.49346161 144.91864014]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[83.81634521 101.57114410]
[91.03981781 86.43186951]
[89.36827850 71.52529144]
[87.58581543 56.63157654]
[85.80334473 41.73785782]
[84.02088165 26.84414101]
[80.91677094 12.16883850]
[76.51576996 -2.17100859]
[72.11477661 -16.51085663]
[60.66902542 -27.43355751]
[64.33162689 -41.87082291]
[58.87451172 -27.89871216]
[46.79258728 -19.00898743]
[31.82957840 -17.95623016]
[18.62192917 -25.06664467]
[11.26217556 -38.13699341]
[12.03081703 -53.11728668]
[20.68968201 -65.36571503]
[34.55572891 -71.08697510]
[49.33240891 -68.50827026]
[60.44114304 -58.42841339]
[57.99541473 -73.22768402]
[55.54968643 -88.02695465]
[53.10395813 -102.82622528]
[50.65823364 -117.62549591]
[36.25302887 -127.55068970]
[33.53644943 -144.48985291]
[43.70727539 -157.88362122]
[41.04148102 -172.64483643]
[38.37568665 -187.40605164]
[35.70988846 -202.16726685]
[33.04409409 -216.92848206]
[30.37829971 -231.68969727]
[27.71250343 -246.45092773]
[17.64580917 -258.65634155]
[22.99805450 -272.55609131]
[12.93136024 -284.76150513]
[18.28360367 -298.66122437]
[15.61780930 -313.42245483]
[12.95201397 -328.18368530]
[-2.09148431 -328.27209473]
[-16.86254692 -331.12347412]
[-30.85807800 -336.64068604]
[-43.60139465 -344.63583374]
[-54.65846252 -354.83660889]
[-63.65268326 -366.89559937]
[-70.27771759 -380.40200806]
[-74.30792236 -394.89587402]
[-75.60602570 -409.88351440]
[-74.12780762 -424.85449219]
[-69.92363739 -439.29882812]
[-63.13668442 -452.72463989]
[-53.99812317 -464.67459106]
[-42.81920624 -474.74169922]
[-29.98068047 -482.58303833]
[-15.91982555 -487.93161011]
[-1.11554682 -490.60516357]
[13.92792702 -490.51269531]
[28.69821930 -487.65734863]
[42.69226456 -482.13635254]
[55.43342209 -474.13775635]
[66.48773956 -463.93399048]
[75.47871399 -451.87261963]
[82.10010529 -438.36437988]
[86.12640381 -423.86944580]
[87.42046356 -408.88143921]
[85.93821716 -393.91088867]
[81.73014832 -379.46765137]
[74.93957520 -366.04370117]
[65.79779816 -354.09622192]
[54.61616516 -344.03213501]
[41.77552795 -336.19421387]
[27.71323013 -330.84945679]
[30.37902641 -316.08825684]
[33.04482269 -301.32702637]
[42.92084122 -290.17742920]
[37.75926971 -275.22186279]
[47.63528824 -264.07226562]
[42.47372055 -249.11671448]
[45.13951492 -234.35549927]
[47.80531311 -219.59428406]
[50.47110748 -204.83306885]
[53.13690186 -190.07185364]
[55.80269623 -175.31062317]
[58.46849442 -160.54940796]
[69.97776031 -154.75576782]
[76.14062500 -143.21882629]
[74.50950623 -130.04498291]
[65.45750427 -120.07122803]
[67.90322876 -105.27195740]
[70.34896088 -90.47268677]
[72.79468536 -75.67341614]
[75.24040985 -60.87414169]
[78.67147064 -46.27182007]
[89.80243683 -36.37480164]
[86.45462036 -20.91185379]
[90.85562134 -6.57200670]
[95.25662231 7.76784039]
[99.32924652 -6.66870070]
[109.19730377 -17.96566582]
[122.95542908 -23.94178963]
[137.94712830 -23.44317436]
[151.27777100 -16.56609344]
[160.37338257 -4.63840771]
[163.47776794 10.03683662]
[159.99151611 24.62607956]
[150.58775330 36.31236649]
[137.08221436 42.83925629]
[122.08259583 42.94651413]
[108.48509216 36.61342621]
[98.91459656 25.06167412]
[100.69706726 39.95539093]
[102.47953033 54.84910965]
[104.26199341 69.74282837]
[108.17806244 76.01069641]
[105.95842743 84.87134552]
[114.54747009 92.73706818]
[115.67284393 104.32907867]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.43364716 143.58039856]
[112.77188110 158.52058411]
[122.15102386 167.37464905]
[122.95806885 179.84591675]
[115.30464172 189.21350098]
[116.42029572 204.17195129]
[125.66657257 213.16467285]
[126.28784943 225.64657593]
[118.49580383 234.89916992]
[127.04078674 248.21434021]
[120.07474518 261.37957764]
[120.96755981 276.35299683]
[121.86037445 291.32638550]
[132.35430908 306.45779419]
[123.89370728 321.83261108]
[125.00935364 336.79107666]
[126.12500000 351.74951172]
[127.24065399 366.70797729]
[128.35629272 381.66641235]
[129.47195435 396.62487793]
[131.14349365 411.53146362]
[133.36860657 426.36550903]
[135.59371948 441.19952393]
[149.84956360 451.33810425]
[152.31364441 468.31582642]
[141.94451904 481.55667114]
[144.39025879 496.35595703]
[146.83598328 511.15521240]
[149.28170776 525.95446777]
[151.72743225 540.75378418]
[166.75764465 541.91827393]
[181.07221985 546.64654541]
[193.83889771 554.66369629]
[204.31547546 565.50366211]
[211.89282227 578.53619385]
[216.13043213 593.00366211]
[216.78192139 608.06481934]
[213.80940247 622.84411621]
[207.38572693 636.48229980]
[197.88432312 648.18640137]
[185.85760498 657.27606201]
[172.00479126 663.22271729]
[157.13127136 665.68072510]
[142.10176086 664.50714111]
[127.79006958 659.77020264]
[115.02824402 651.74530029]
[104.55825043 640.89892578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[9 191]
[10 190]
[11 189]
[15 186]
[16 185]
[17 184]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[31 176]
[32 175]
[33 174]
[35 172]
[37 169]
[38 168]
[40 165]
[41 164]
[42 163]
[43 162]
[45 159]
[46 157]
[47 156]
[48 155]
[49 154]
[50 141]
[51 140]
[52 139]
[54 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[79 120]
[81 118]
[82 117]
[83 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
