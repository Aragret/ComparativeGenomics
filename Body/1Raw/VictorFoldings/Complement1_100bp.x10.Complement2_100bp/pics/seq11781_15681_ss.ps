%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[85.43826294 565.97174072]
[72.04187012 572.76263428]
[57.91248322 577.85577393]
[43.26428986 581.17395020]
[28.31935692 582.66680908]
[13.30424690 582.31170654]
[-1.55341661 580.11413574]
[-16.02839470 576.10729980]
[-29.90125084 570.35198975]
[-42.96167755 562.93548584]
[-55.01167679 553.97015381]
[-65.86858368 543.59191895]
[-75.36779785 531.95819092]
[-83.36531830 519.24517822]
[-89.73990631 505.64578247]
[-94.39492798 491.36605835]
[-97.25981140 476.62252808]
[-98.29112244 461.63867188]
[-97.47322845 446.64163208]
[-94.81853485 431.85879517]
[-90.36727142 417.51425171]
[-84.18693542 403.82546997]
[-76.37120819 390.99993896]
[-67.03857422 379.23211670]
[-56.33052063 368.70040894]
[-44.40937424 359.56445312]
[-31.45585632 351.96273804]
[-17.66633987 346.01052856]
[-3.24987102 341.79803467]
[11.57500172 339.38912964]
[26.58353615 338.82034302]
[41.54820633 340.10028076]
[44.65231705 325.42498779]
[47.75642776 310.74969482]
[50.86053467 296.07437134]
[45.92451096 282.02145386]
[56.35014343 270.12115479]
[42.74580002 263.86627197]
[30.86883736 254.73631287]
[21.31687164 243.18664551]
[14.57143593 229.79446411]
[10.97370529 215.22996521]
[10.70723534 200.22283936]
[13.78860664 185.52565002]
[20.06642723 171.87617493]
[29.22877121 159.96031189]
[40.81867218 150.37763977]
[54.25691605 143.61122131]
[68.87098694 140.00328064]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[89.93703461 58.68664932]
[93.29409790 43.84802246]
[105.87891388 35.96399307]
[108.98302460 21.28868866]
[112.08713531 6.61338663]
[110.80135345 -2.43009686]
[115.34825134 -8.25654984]
[118.67050934 -22.88401031]
[121.99276733 -37.51147079]
[108.75630951 -30.45483780]
[94.36735535 -34.69253922]
[87.06856537 -47.79702759]
[91.04100800 -62.26145554]
[104.00908661 -69.79994202]
[118.54410553 -66.09410095]
[126.31958771 -53.26774597]
[130.93359375 -67.54047394]
[135.54760742 -81.81320953]
[140.16162109 -96.08594513]
[126.26213074 -101.74380493]
[112.81844330 -108.41272736]
[99.90399170 -116.05629730]
[87.58930969 -124.63276672]
[75.94165039 -134.09529114]
[65.02463531 -144.39218140]
[54.89789200 -155.46720886]
[45.61672592 -167.25988770]
[37.23182678 -179.70579529]
[29.78899193 -192.73696899]
[23.32887268 -206.28222656]
[17.88675308 -220.26759338]
[13.49235630 -234.61668396]
[10.16968250 -249.25114441]
[7.93687820 -264.09100342]
[6.80613995 -279.05526733]
[6.78364277 -294.06213379]
[7.86951017 -309.02972412]
[10.05781078 -323.87622070]
[13.33659267 -338.52056885]
[17.68794823 -352.88275146]
[23.08811188 -366.88439941]
[29.50758934 -380.44894409]
[36.91131973 -393.50238037]
[45.25886536 -405.97338867]
[54.50463486 -417.79382324]
[64.59812927 -428.89916992]
[75.48422241 -439.22875977]
[87.10345459 -448.72613525]
[99.39237213 -457.33950806]
[112.28384399 -465.02175903]
[125.70747375 -471.73095703]
[139.58993530 -477.43048096]
[153.85542297 -482.08914185]
[168.42599487 -485.68154907]
[183.22209167 -488.18807983]
[198.16290283 -489.59503174]
[213.16682434 -489.89471436]
[228.15188599 -489.08547974]
[243.03627014 -487.17178345]
[257.73867798 -484.16403198]
[272.17880249 -480.07870483]
[286.27780151 -474.93807983]
[299.95861816 -468.77023315]
[313.14657593 -461.60888672]
[325.76962280 -453.49310303]
[337.75881958 -444.46725464]
[349.04870605 -434.58059692]
[359.57757568 -423.88714600]
[369.28799438 -412.44531250]
[378.12683105 -400.31759644]
[386.04589844 -387.57022095]
[393.00189209 -374.27279663]
[398.95684814 -360.49795532]
[403.87823486 -346.32098389]
[407.73916626 -331.81924438]
[410.51855469 -317.07196045]
[412.20120239 -302.15966797]
[412.77798462 -287.16384888]
[412.24566650 -272.16641235]
[410.60720825 -257.24920654]
[407.87155151 -242.49375916]
[404.05361938 -227.98063660]
[399.17428589 -213.78910828]
[393.26019287 -199.99668884]
[386.34365845 -186.67871094]
[378.46240234 -173.90791321]
[369.65954590 -161.75404358]
[359.98309326 -150.28347778]
[349.48596191 -139.55888367]
[338.22543335 -129.63880920]
[326.26303101 -120.57744598]
[313.66409302 -112.42428589]
[300.49743652 -105.22386169]
[286.83493042 -99.01549530]
[272.75125122 -93.83309937]
[258.32330322 -89.70497894]
[243.62988281 -86.65367889]
[228.75123596 -84.69586182]
[213.76863098 -83.84222412]
[198.76390076 -84.09742737]
[183.81898499 -85.46007538]
[169.01551819 -87.92272949]
[154.43435669 -91.47193146]
[149.82034302 -77.19920349]
[145.20632935 -62.92646790]
[140.59233093 -48.65373611]
[136.62022400 -34.18921280]
[133.29797363 -19.56175041]
[129.97570801 -4.93429041]
[126.76243591 9.71749687]
[123.65832520 24.39279938]
[120.55421448 39.06809998]
[128.86872864 51.37274933]
[125.92977905 66.29981232]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[112.26462555 149.18186951]
[124.16608429 158.39836121]
[133.71348572 170.02668762]
[140.43048096 183.48162842]
[143.98309326 198.08694458]
[144.19624329 213.10939026]
[141.06248474 227.79548645]
[134.74211121 241.40937805]
[125.55503082 253.26963806]
[113.96454620 262.78341675]
[100.55397797 269.47607422]
[85.99733734 273.01480103]
[71.02544403 273.22528076]
[75.73944092 288.32788086]
[65.53583527 299.17849731]
[62.43172836 313.85379028]
[59.32761765 328.52911377]
[56.22350693 343.20440674]
[70.42475128 348.09362793]
[83.91750336 354.69097900]
[96.49723053 362.89648438]
[107.97321320 372.58572388]
[118.17148590 383.61181641]
[126.93745422 395.80761719]
[134.13821411 408.98822021]
[139.66459656 422.95385742]
[143.43284607 437.49276733]
[145.38583374 452.38455200]
[145.49392700 467.40347290]
[143.75552368 482.32183838]
[140.19694519 496.91348267]
[134.87216187 510.95721436]
[127.86188507 524.24011230]
[119.27238464 536.56085205]
[109.23388672 547.73260498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 193]
[33 192]
[34 191]
[35 190]
[37 188]
[50 175]
[51 174]
[52 173]
[54 171]
[55 170]
[58 167]
[59 166]
[60 165]
[62 164]
[63 163]
[64 162]
[71 161]
[72 160]
[73 159]
[74 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
