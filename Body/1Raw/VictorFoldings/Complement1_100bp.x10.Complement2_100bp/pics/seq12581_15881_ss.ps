%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[237.02746582 605.33862305]
[234.58174133 590.53936768]
[232.13601685 575.74005127]
[229.69027710 560.94079590]
[227.24455261 546.14154053]
[217.53562927 534.84613037]
[222.91929626 519.96905518]
[220.47357178 505.16979980]
[218.02784729 490.37054443]
[215.58210754 475.57125854]
[213.13638306 460.77200317]
[210.69065857 445.97271729]
[188.64965820 443.44464111]
[168.64714050 433.80749512]
[152.90905762 418.12094116]
[143.19102478 398.11859131]
[140.58244324 376.01629639]
[145.38439941 354.26684570]
[157.07498169 335.28765869]
[174.36593628 321.19213867]
[168.49697876 307.38793945]
[162.62802124 293.58377075]
[156.75904846 279.77960205]
[150.89009094 265.97543335]
[145.02113342 252.17124939]
[139.04957581 238.41114807]
[132.97573853 224.69587708]
[120.74757385 216.19168091]
[122.23418427 200.44047546]
[116.16034698 186.72520447]
[113.44303894 201.47703552]
[104.25424957 213.33308411]
[90.64676666 219.64471436]
[75.66055298 219.00186157]
[62.64355469 211.54815674]
[54.50380325 198.94876099]
[53.05974579 184.01844788]
[58.63398361 170.09263611]
[69.98122406 160.28242493]
[84.56645203 156.77943420]
[99.13130951 160.36624146]
[110.42195892 170.24154663]
[106.66566467 155.71948242]
[102.90936279 141.19741821]
[99.15306091 126.67536926]
[95.39675903 112.15330505]
[91.20974731 97.74952698]
[86.59574127 83.47679138]
[81.98172760 69.20405579]
[77.36772156 54.93132401]
[65.76062012 44.18024445]
[69.20786285 29.69004822]
[64.59385681 15.41731453]
[59.97984314 1.14458144]
[55.33724594 -3.56262875]
[53.97351837 -9.07962704]
[55.44779587 -13.62226391]
[51.26078415 -28.02604485]
[47.07377625 -42.42982864]
[36.16668320 -49.31445694]
[32.97584152 -61.39759827]
[38.68447876 -72.06240082]
[34.71238327 -86.52692413]
[23.59691811 -97.78556824]
[27.68774605 -112.10738373]
[23.98139763 -97.57249451]
[15.33417416 -85.31584167]
[2.88376451 -76.95000458]
[-11.73176479 -73.57563782]
[-26.58948898 -75.63671112]
[-39.73461914 -82.86205292]
[-49.43768692 -94.30104065]
[-54.42208862 -108.44868469]
[-54.03203964 -123.44361115]
[-48.31885910 -137.31298828]
[-38.03421021 -148.23205566]
[-24.53121567 -154.76422119]
[-9.58643150 -156.05006409]
[4.83390236 -151.92042542]
[16.83254242 -142.91860962]
[24.83174515 -130.22676086]
[24.16195869 -145.21180725]
[23.49217415 -160.19683838]
[22.04275513 -175.12664795]
[19.81763840 -189.96069336]
[17.59252167 -204.79473877]
[15.36740398 -219.62878418]
[13.14228630 -234.46282959]
[10.91716957 -249.29685974]
[8.69205189 -264.13092041]
[-6.27440405 -266.17587280]
[-20.05791664 -272.35580444]
[-31.54111862 -282.16970825]
[-39.79311752 -294.82202148]
[-44.14496231 -309.28707886]
[-44.24386597 -324.39227295]
[-40.08181381 -338.91308594]
[-31.99620247 -351.67239380]
[-20.64249611 -361.63583374]
[-6.94109106 -367.99569702]
[7.99730349 -370.23648071]
[22.96169853 -368.17648315]
[36.73899460 -361.98272705]
[48.21233368 -352.15728760]
[56.45161819 -339.49667358]
[60.78892899 -325.02725220]
[60.87265778 -309.92196655]
[56.69601822 -295.40533447]
[48.59759521 -282.65417480]
[37.23388290 -272.70214844]
[23.52609634 -266.35601807]
[25.75121307 -251.52198792]
[27.97632980 -236.68794250]
[30.20144844 -221.85389709]
[32.42656326 -207.01985168]
[34.65168381 -192.18580627]
[36.87680054 -177.35176086]
[45.72191620 -189.46638489]
[60.25414276 -193.18315125]
[73.82954407 -186.80282593]
[80.24161530 -173.24238586]
[76.55886078 -158.70150757]
[64.46498108 -149.82806396]
[49.48912811 -150.67887878]
[38.47721481 -160.86662292]
[39.14699936 -145.88159180]
[39.81678391 -130.89654541]
[42.15227127 -116.07947540]
[52.98362350 -105.85543823]
[49.17690659 -90.49902344]
[53.14900208 -76.03450012]
[66.28112030 -64.39343262]
[61.47755814 -46.61684036]
[65.66456604 -32.21305847]
[69.85157776 -17.80927467]
[74.25257874 -3.46942782]
[78.86658478 10.80330563]
[83.48059845 25.07603836]
[94.75767517 34.80623627]
[91.64045715 50.31731415]
[96.25446320 64.59004974]
[100.86846924 78.86278534]
[105.48248291 93.13551331]
[108.06870270 94.74826813]
[110.12527466 97.33767700]
[111.28931427 100.70938873]
[111.27484894 104.53771210]
[109.91881561 108.39700317]
[113.67511749 122.91906738]
[117.43141937 137.44113159]
[121.18772125 151.96318054]
[124.94402313 166.48524475]
[129.87561035 180.65138245]
[135.94944763 194.36663818]
[148.61206055 203.85183716]
[146.69100952 218.62203979]
[152.76483154 232.33731079]
[159.10112000 238.91677856]
[158.82530212 246.30229187]
[164.69427490 260.10647583]
[170.56323242 273.91064453]
[176.43218994 287.71481323]
[182.30114746 301.51898193]
[188.17012024 315.32318115]
[196.75009155 313.38583374]
[205.50767517 312.58996582]
[214.29173279 312.94869995]
[222.95071411 314.45526123]
[231.33534241 317.08300781]
[239.30113220 320.78607178]
[246.71092224 325.50003052]
[253.43717957 331.14300537]
[259.36425781 337.61718750]
[264.39031982 344.81045532]
[268.42916870 352.59838867]
[271.41165161 360.84634399]
[273.28686523 369.41177368]
[274.02310181 378.14682007]
[273.60818481 386.90069580]
[272.04992676 395.52243042]
[269.37579346 403.86331177]
[265.63250732 411.77969360]
[260.88519287 419.13525391]
[255.21623230 425.80334473]
[248.72393799 431.66937256]
[241.52069092 436.63256836]
[233.73114014 440.60778809]
[225.48992920 443.52697754]
[227.93565369 458.32626343]
[230.38137817 473.12551880]
[232.82711792 487.92480469]
[235.27284241 502.72406006]
[237.71856689 517.52331543]
[247.60241699 529.87731934]
[242.04382324 543.69580078]
[244.48954773 558.49505615]
[246.93528748 573.29437256]
[249.38101196 588.09362793]
[251.82673645 602.89288330]
[266.48849487 607.13500977]
[277.85192871 617.32495117]
[283.66085815 631.43945312]
[282.76187134 646.67608643]
[275.33352661 660.00958252]
[262.85067749 668.79260254]
[247.79179382 671.28125000]
[233.14686584 666.98138428]
[221.82363892 656.74676514]
[216.07034302 642.60949707]
[217.02929688 627.37652588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[7 193]
[8 192]
[9 191]
[10 190]
[11 189]
[12 188]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 157]
[27 156]
[29 154]
[30 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[47 143]
[48 142]
[49 141]
[50 140]
[52 138]
[53 137]
[54 136]
[57 135]
[58 134]
[59 133]
[62 131]
[63 130]
[65 128]
[81 127]
[82 126]
[83 125]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
