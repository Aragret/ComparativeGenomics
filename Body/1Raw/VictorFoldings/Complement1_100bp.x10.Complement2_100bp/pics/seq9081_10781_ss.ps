%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[7.97267628 780.47381592]
[-5.43636799 787.21075439]
[-19.28722954 792.98510742]
[-33.51090622 797.76794434]
[-48.03652954 801.53558350]
[-62.79173660 804.26922607]
[-77.70301819 805.95526123]
[-92.69609070 806.58520508]
[-107.69624329 806.15600586]
[-122.62876129 804.66979980]
[-137.41923523 802.13391113]
[-151.99400330 798.56109619]
[-166.28042603 793.96905518]
[-180.20735168 788.38067627]
[-193.70538330 781.82385254]
[-206.70727539 774.33117676]
[-219.14825439 765.94006348]
[-230.96633911 756.69226074]
[-242.10264587 746.63385010]
[-252.50170898 735.81494141]
[-262.11172485 724.28948975]
[-270.88476562 712.11480713]
[-278.77719116 699.35162354]
[-285.74963379 686.06353760]
[-291.76739502 672.31671143]
[-296.80044556 658.17962646]
[-300.82376099 643.72271729]
[-303.81726074 629.01800537]
[-305.76605225 614.13879395]
[-306.66040039 599.15917969]
[-306.49591064 584.15380859]
[-305.27331543 569.19738770]
[-302.99877930 554.36444092]
[-299.68359375 539.72894287]
[-295.34429932 525.36370850]
[-290.00250244 511.34039307]
[-283.68481445 497.72879028]
[-276.42269897 484.59674072]
[-268.25234985 472.00964355]
[-259.21447754 460.03027344]
[-249.35409546 448.71826172]
[-238.72033691 438.12994385]
[-227.36616516 428.31811523]
[-215.34817505 419.33166504]
[-202.72621155 411.21530151]
[-189.56317139 404.00952148]
[-175.92463684 397.75021362]
[-161.87854004 392.46853638]
[-147.49485779 388.19082642]
[-132.84527588 384.93835449]
[-118.00274658 382.72738647]
[-103.04123688 381.56890869]
[-88.03527069 381.46868896]
[-73.05962372 382.42721558]
[-58.18888855 384.43972778]
[-43.49716187 387.49621582]
[-29.05763245 391.58142090]
[-14.94223881 396.67501831]
[-8.86840534 382.95974731]
[-2.79457116 369.24447632]
[3.27926278 355.52920532]
[9.35309696 341.81393433]
[7.43204355 327.04373169]
[20.09465027 317.55853271]
[25.44583511 303.54553223]
[21.99859047 289.05532837]
[33.60569382 278.30422974]
[38.21970367 264.03152466]
[42.83371353 249.75877380]
[47.44772339 235.48603821]
[52.06172943 221.21331787]
[56.67573929 206.94058228]
[61.28974915 192.66784668]
[65.90375519 178.39511108]
[70.51776886 164.12237549]
[65.29103088 153.21330261]
[69.01822662 141.28469849]
[80.22186279 134.89396667]
[85.04785919 120.69150543]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[98.88886261 77.87646484]
[103.28985596 63.53662109]
[107.69085693 49.19677353]
[112.09185791 34.85692596]
[115.52291870 20.25460434]
[117.96864319 5.45533371]
[120.41437531 -9.34393692]
[122.52899933 -24.19413567]
[124.31146240 -39.08785248]
[118.26887512 -53.70967484]
[127.46374512 -65.42733765]
[117.96934509 -77.77619171]
[119.98918915 -92.85514069]
[131.82043457 -101.83049774]
[133.60290527 -116.72422028]
[135.38537598 -131.61793518]
[137.16784668 -146.51165771]
[138.95030212 -161.40536499]
[140.73277283 -176.29908752]
[126.99503326 -182.63388062]
[115.88859558 -192.90531921]
[108.50157166 -206.10710144]
[105.55764771 -220.94584656]
[107.34525299 -235.96781921]
[113.68925476 -249.70130920]
[123.96813202 -260.80087280]
[137.17485046 -268.17904663]
[152.01557922 -271.11300659]
[167.03634644 -269.31533813]
[180.76557922 -262.96215820]
[191.85824585 -252.67584229]
[199.22756958 -239.46417236]
[202.15161133 -224.62149048]
[200.34387207 -209.60192871]
[193.98147583 -195.87693787]
[183.68772888 -184.79118347]
[170.47113037 -177.43070984]
[155.62649536 -174.51661682]
[153.84402466 -159.62290955]
[152.06155396 -144.72918701]
[150.27909851 -129.83546448]
[148.49662781 -114.94174957]
[146.71415710 -100.04803467]
[156.09329224 -88.53424072]
[154.49778748 -73.40450287]
[142.35746765 -63.64487076]
[148.52754211 -50.08834457]
[139.20518494 -37.30538559]
[137.42271423 -22.41166878]
[139.30284119 -19.42881012]
[139.83161926 -15.38709641]
[138.52708435 -10.93159389]
[135.21363831 -6.89821005]
[132.76791382 7.90106106]
[130.32218933 22.70033264]
[141.43069458 12.62059212]
[156.20735168 10.04174232]
[170.07344055 15.76286793]
[178.73242188 28.01121521]
[179.50122070 42.99150085]
[172.14158630 56.06192017]
[158.93400574 63.17246246]
[143.97097778 62.11984634]
[131.88897705 53.23023987]
[126.43170166 39.25792313]
[122.03070831 53.59777069]
[117.62970734 67.93762207]
[113.22870636 82.27746582]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[99.25031281 125.51750183]
[94.42431641 139.71995544]
[98.42932129 157.69331360]
[84.79050446 168.73638916]
[80.17649078 183.00912476]
[75.56248474 197.28186035]
[70.94847107 211.55458069]
[66.33446503 225.82731628]
[61.72045517 240.10005188]
[57.10644531 254.37278748]
[52.49243546 268.64550781]
[47.87842560 282.91824341]
[50.99564743 298.42932129]
[39.71857071 308.15951538]
[53.03331757 301.25173950]
[67.70011902 304.39578247]
[77.01351166 316.15420532]
[76.71553040 331.15124512]
[66.94241333 342.53045654]
[52.16230011 345.08938599]
[39.13245392 337.65817261]
[33.80991745 323.63238525]
[35.29652786 339.38357544]
[23.06836319 347.88778687]
[16.99452972 361.60302734]
[10.92069530 375.31829834]
[4.84686136 389.03356934]
[-1.22697234 402.74884033]
[12.03135204 409.77777100]
[24.76083565 417.72439575]
[36.89805984 426.54919434]
[48.38255310 436.20812988]
[59.15710831 446.65313721]
[69.16803741 457.83215332]
[78.36547089 469.68945312]
[86.70359039 482.16604614]
[94.14084625 495.19967651]
[100.64019012 508.72549438]
[106.16925049 522.67608643]
[110.70046997 536.98187256]
[114.21128082 551.57171631]
[116.68418884 566.37286377]
[118.10687256 581.31158447]
[118.47225189 596.31341553]
[117.77849579 611.30364990]
[116.02906799 626.20764160]
[113.23268127 640.95111084]
[109.40327454 655.46057129]
[104.55991364 669.66375732]
[98.72673035 683.48992920]
[91.93280029 696.87017822]
[84.21195221 709.73785400]
[75.60266113 722.02886963]
[66.14781189 733.68200684]
[55.89451981 744.63909912]
[44.89385605 754.84570312]
[33.20063019 764.25085449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 181]
[59 180]
[60 179]
[61 178]
[62 177]
[64 175]
[65 167]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[78 155]
[79 154]
[80 153]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 136]
[87 135]
[88 134]
[89 130]
[90 129]
[92 127]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
