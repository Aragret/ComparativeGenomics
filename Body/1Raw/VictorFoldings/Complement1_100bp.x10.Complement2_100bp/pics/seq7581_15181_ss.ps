%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[93.17688751 503.78973389]
[80.03002930 511.04632568]
[66.14165497 516.75689697]
[51.69284821 520.84710693]
[36.87196732 523.26354980]
[21.87223816 523.97479248]
[6.88920784 522.97149658]
[-7.88178539 520.26678467]
[-22.24817276 515.89587402]
[-36.02265930 509.91580200]
[-49.02566147 502.40451050]
[-61.08766556 493.45989990]
[-72.05141449 483.19863892]
[-81.77397919 471.75442505]
[-90.12859344 459.27651978]
[-97.00634766 445.92758179]
[-102.31758118 431.88165283]
[-105.99303436 417.32180786]
[-107.98480225 402.43789673]
[-108.26691437 387.42398071]
[-106.83570099 372.47573853]
[-103.70980835 357.78811646]
[-98.92999268 343.55255127]
[-92.55857086 329.95465088]
[-84.67861176 317.17169189]
[-75.39283752 305.37033081]
[-64.82231903 294.70440674]
[-53.10484695 285.31298828]
[-40.39319992 277.31851196]
[-26.85309219 270.82519531]
[-12.66104698 265.91769409]
[1.99791098 262.65997314]
[16.93267250 261.09451294]
[31.94853401 261.24176025]
[46.84973145 263.09973145]
[50.38940430 248.52334595]
[53.92907715 233.94697571]
[57.36013794 219.34465027]
[60.57341385 204.69285583]
[63.67752075 190.01756287]
[66.78163147 175.34225464]
[69.88574219 160.66694641]
[72.98985291 145.99165344]
[63.03018570 157.20793152]
[49.72477722 164.13369751]
[34.82418060 165.85771179]
[20.28882980 162.15318298]
[8.03109646 153.50749207]
[-0.33630273 141.05813599]
[-3.71249270 126.44303131]
[-1.65327728 111.58504486]
[5.57041836 98.43901062]
[17.00819206 88.73451233]
[31.15521049 83.74834442]
[46.15018463 84.13651276]
[60.02027512 89.84796143]
[70.94062805 100.13124084]
[77.47448730 113.63342285]
[78.76197052 128.58041382]
[85.03933716 114.95709229]
[91.31669617 101.33377838]
[90.50738525 98.39532471]
[90.74937439 95.09745026]
[92.17784119 91.82897186]
[94.78243256 89.02320099]
[98.39467621 87.10366058]
[98.08370209 71.28550720]
[110.91051483 63.71436310]
[117.98761749 50.48883438]
[125.06472015 37.26330566]
[132.14183044 24.03778076]
[119.18848419 31.60157013]
[104.28768158 33.32379532]
[89.95046997 28.91423607]
[78.59291077 19.11597633]
[72.12895966 5.58019495]
[71.64790344 -9.41208935]
[77.23081970 -23.33441353]
[87.93686676 -33.84062195]
[101.96190643 -39.16023636]
[116.94246674 -38.39680099]
[130.35406494 -31.67897797]
[139.93659973 -20.13883018]
[144.07525635 -5.72107983]
[142.07203674 9.14619350]
[151.56092834 -2.47107005]
[161.04983521 -14.08833313]
[170.53872681 -25.70559692]
[180.02763367 -37.32286072]
[182.76510620 -52.90544128]
[196.80871582 -57.86794662]
[199.54618835 -73.45052338]
[213.58979797 -78.41303253]
[223.07868958 -90.03029633]
[232.56759644 -101.64756012]
[242.05648804 -113.26482391]
[251.54537964 -124.88208771]
[240.90505981 -135.47219849]
[231.35400391 -147.05426025]
[222.98419189 -159.51672363]
[215.87623596 -172.73956299]
[210.09858704 -186.59545898]
[205.70689392 -200.95094299]
[202.74345398 -215.66775513]
[201.23680115 -230.60418701]
[201.20144653 -245.61636353]
[202.63772583 -260.55972290]
[205.53181458 -275.29034424]
[209.85585022 -289.66635132]
[215.56816101 -303.54928589]
[222.61375427 -316.80548096]
[230.92477417 -329.30722046]
[240.42117310 -340.93414307]
[251.01148987 -351.57424927]
[262.59375000 -361.12506104]
[275.05636597 -369.49462891]
[288.27935791 -376.60232544]
[302.13537598 -382.37969971]
[316.49093628 -386.77111816]
[331.20782471 -389.73425293]
[346.14425659 -391.24060059]
[361.15643311 -391.27566528]
[376.09976196 -389.83908081]
[390.83032227 -386.94470215]
[405.20626831 -382.62039185]
[419.08908081 -376.90780640]
[432.34512329 -369.86193848]
[444.84671021 -361.55065918]
[456.47344971 -352.05404663]
[467.11334229 -341.46350098]
[476.66394043 -329.88107300]
[485.03323364 -317.41827393]
[492.14068604 -304.19512939]
[497.91775513 -290.33901978]
[502.30889893 -275.98336792]
[505.27172852 -261.26641846]
[506.77780151 -246.32992554]
[506.81256104 -231.31774902]
[505.37567139 -216.37445068]
[502.48098755 -201.64395142]
[498.15640259 -187.26811218]
[492.44351196 -173.38540649]
[485.39739990 -160.12950134]
[477.08587646 -147.62808228]
[467.58901978 -136.00154114]
[456.99826050 -125.36185455]
[445.41564941 -115.81149292]
[432.95266724 -107.44242859]
[419.72940063 -100.33526611]
[405.87316895 -94.55844879]
[391.51742554 -90.16761780]
[376.80041504 -87.20505524]
[361.86392212 -85.69929504]
[346.85171509 -85.66484070]
[331.90844727 -87.10202026]
[317.17800903 -89.99699402]
[302.80227661 -94.32188416]
[288.91967773 -100.03503418]
[275.66390991 -107.08142090]
[263.16265869 -115.39318848]
[253.67375183 -103.77592468]
[244.18486023 -92.15866089]
[234.69595337 -80.54139709]
[225.20706177 -68.92413330]
[223.14828491 -54.17250061]
[208.42597961 -48.37904739]
[206.36720276 -33.62741470]
[191.64489746 -27.83396149]
[182.15599060 -16.21669769]
[172.66709900 -4.59943533]
[163.17819214 7.01782846]
[153.68930054 18.63509178]
[145.36735535 31.11488533]
[138.29025269 44.34041214]
[131.21315002 57.56594086]
[124.13603973 70.79146576]
[124.95321655 85.66364288]
[111.62020874 94.18076324]
[104.94001007 107.61113739]
[98.66265106 121.23445892]
[92.38529205 134.85777283]
[87.66515350 149.09576416]
[84.56104279 163.77105713]
[81.45693207 178.44636536]
[78.35282135 193.12167358]
[75.24871826 207.79696655]
[76.53449249 216.84045410]
[71.98760223 222.66690063]
[73.13858795 231.72853088]
[68.50545502 237.48664856]
[64.96578217 252.06301880]
[61.42610931 266.63940430]
[75.51985931 271.82244873]
[88.93090057 278.57830811]
[101.48439789 286.81890869]
[113.01669312 296.43679810]
[123.37742615 307.30661011]
[132.43153381 319.28662109]
[140.06098938 332.22067261]
[146.16630554 345.94009399]
[150.66789246 360.26608276]
[153.50706482 375.01181030]
[154.64680481 389.98507690]
[154.07226562 404.99066162]
[151.79092407 419.83294678]
[147.83251953 434.31842041]
[142.24868774 448.25823975]
[135.11218262 461.47067261]
[126.51607513 473.78344727]
[116.57241821 485.03607178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 192]
[36 191]
[37 190]
[38 188]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[59 181]
[60 180]
[61 179]
[66 178]
[68 176]
[69 175]
[70 174]
[71 173]
[85 172]
[86 171]
[87 170]
[88 169]
[89 168]
[91 166]
[93 164]
[94 163]
[95 162]
[96 161]
[97 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
