%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[148.74417114 422.73669434]
[146.11779785 437.58770752]
[139.87988281 451.31866455]
[130.42254639 463.06643677]
[118.34030151 472.09249878]
[104.39263153 477.82949829]
[89.45629883 479.91680908]
[74.47022247 478.22320557]
[60.37643433 472.85516357]
[48.06088257 464.15011597]
[38.29773331 452.65527344]
[31.70070457 439.09317017]
[28.68449402 424.31640625]
[29.43870354 409.25378418]
[33.91592026 394.85223389]
[41.83470154 382.01696777]
[52.69727325 371.55487061]
[65.82079315 364.12359619]
[80.38031769 360.19027710]
[95.46061707 360.00213623]
[99.00028992 345.42575073]
[102.53996277 330.84939575]
[106.07963562 316.27301025]
[109.61930847 301.69662476]
[113.15898132 287.12026978]
[116.69865417 272.54388428]
[120.23832703 257.96749878]
[120.79653931 242.97790527]
[118.35080719 228.17863464]
[115.90508270 213.37936401]
[113.45935822 198.58009338]
[111.01362610 183.78082275]
[108.56790161 168.98155212]
[98.85897827 157.68614197]
[104.24263763 142.80908203]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[64.60083008 36.59183502]
[68.26342773 22.15456963]
[63.86243057 7.81472301]
[59.46143341 -6.52512407]
[55.06043243 -20.86497116]
[50.44642639 -35.13770294]
[45.62042618 -49.34016037]
[30.23980713 -47.48071671]
[14.81352139 -48.85026932]
[0.01184859 -53.38695526]
[-13.52255630 -60.89135742]
[-25.20257187 -71.03524780]
[-34.52207184 -83.37597656]
[-41.07786560 -97.37574005]
[-44.58713531 -112.42506409]
[-44.89963150 -127.86932373]
[-42.00411606 -143.03718567]
[-36.02874374 -157.26985168]
[-27.23538208 -169.94960022]
[-16.00815392 -180.52667236]
[-2.83664703 -188.54304504]
[-7.87356329 -202.67207336]
[-12.91047955 -216.80110168]
[-17.94739532 -230.93013000]
[-22.98431206 -245.05915833]
[-28.02122879 -259.18820190]
[-33.05814362 -273.31723022]
[-34.88452148 -258.42883301]
[-40.45274734 -244.50062561]
[-49.39351273 -232.45642090]
[-61.11379623 -223.09507751]
[-74.83624268 -217.03747559]
[-89.65068817 -214.68540955]
[-104.57454681 -216.19488525]
[-118.61796570 -221.46578979]
[-130.84950256 -230.14849854]
[-140.45788574 -241.66714478]
[-146.80580139 -255.25772095]
[-149.47225952 -270.01882935]
[-148.28036499 -284.97137451]
[-143.30918884 -299.12368774]
[-134.88844299 -311.53701782]
[-123.57665253 -321.38809204]
[-110.12408447 -328.02346802]
[-95.42300415 -331.00311279]
[-80.44847107 -330.12933350]
[-66.19370270 -325.46011353]
[-53.60416412 -317.30514526]
[-43.51486969 -306.20532227]
[-36.59324646 -292.89202881]
[-36.81657410 -307.89035034]
[-37.03990173 -322.88870239]
[-37.26322937 -337.88702393]
[-37.48655701 -352.88537598]
[-37.70988464 -367.88372803]
[-37.93321228 -382.88204956]
[-51.95273590 -388.82955933]
[-62.33638763 -399.96957397]
[-67.28513336 -414.37197876]
[-65.94158173 -429.54153442]
[-58.53850937 -442.84994507]
[-46.35853958 -451.99151611]
[-31.51192474 -455.38238525]
[-16.57093430 -452.43505859]
[-4.12418509 -443.66018677]
[3.67184997 -430.57806396]
[5.46646023 -415.45526123]
[0.94871795 -400.91189575]
[-9.09864998 -389.46768188]
[-22.93487740 -383.10537720]
[-22.71154976 -368.10705566]
[-22.48822021 -353.10870361]
[-22.26489258 -338.11035156]
[-22.04156494 -323.11203003]
[-21.81823730 -308.11367798]
[-21.59490967 -293.11535645]
[-18.92911530 -278.35412598]
[-13.89219856 -264.22509766]
[-8.85528278 -250.09608459]
[-3.81836605 -235.96704102]
[1.21855009 -221.83801270]
[6.25546646 -207.70898438]
[11.29238224 -193.57995605]
[25.68218040 -195.66828918]
[40.20742416 -194.90063477]
[54.30657578 -191.30470276]
[67.43418121 -185.01762390]
[79.08197784 -176.28063965]
[88.79859924 -165.42990112]
[96.20700073 -152.88352966]
[101.01916504 -139.12548828]
[103.04724884 -124.68690491]
[102.21092987 -110.12560272]
[98.54060364 -96.00453949]
[92.17624664 -82.87000275]
[83.36210632 -71.23053741]
[72.43732452 -61.53721619]
[59.82288361 -54.16615677]
[64.64888000 -39.96370316]
[68.46089935 -37.08662796]
[70.50602722 -31.78431702]
[69.40028381 -25.26597023]
[73.80127716 -10.92612171]
[78.20227814 3.41372490]
[82.60327911 17.75357246]
[93.73423767 27.65059090]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[120.60854340 109.83365631]
[132.69046021 100.94393158]
[147.65347290 99.89117432]
[160.86112976 107.00159454]
[168.22087097 120.07193756]
[167.45223999 135.05223083]
[158.79336548 147.30065918]
[144.92732239 153.02192688]
[130.15065002 150.44322205]
[119.04190826 140.36335754]
[128.92576599 152.71730042]
[123.36717224 166.53581238]
[125.81289673 181.33508301]
[128.25862122 196.13435364]
[130.70436096 210.93362427]
[133.15008545 225.73289490]
[135.59580994 240.53216553]
[139.94055176 226.17518616]
[147.23123169 213.06617737]
[157.13618469 201.80152893]
[169.20475769 192.89372253]
[182.88795471 186.74797058]
[197.56326294 183.64389038]
[212.56306458 183.72268677]
[227.20494080 186.98077393]
[240.82281494 193.26992798]
[252.79716492 202.30404663]
[262.58322144 213.67211914]
[269.73577881 226.85699463]
[273.92944336 241.25883484]
[274.97344971 256.22247314]
[272.82031250 271.06710815]
[267.56796265 285.11749268]
[259.45532227 297.73434448]
[248.85153198 308.34375000]
[236.23892212 316.46301270]
[222.19132996 321.72274780]
[207.34780884 323.88372803]
[192.38363647 322.84759521]
[177.97958374 318.66149902]
[164.79095459 311.51586914]
[153.41772461 301.73580933]
[144.37730408 289.76620483]
[138.08097839 276.15164185]
[134.81469727 261.50717163]
[131.27502441 276.08355713]
[127.73535919 290.65994263]
[124.19568634 305.23629761]
[120.65601349 319.81268311]
[117.11634064 334.38906860]
[113.57666779 348.96542358]
[110.03699493 363.54180908]
[123.35150146 370.62521362]
[134.48558044 380.79788208]
[142.73931885 393.42034912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 207]
[21 206]
[22 205]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[35 165]
[36 155]
[37 154]
[39 152]
[40 151]
[41 150]
[42 149]
[44 147]
[45 146]
[46 145]
[47 144]
[48 141]
[49 140]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
