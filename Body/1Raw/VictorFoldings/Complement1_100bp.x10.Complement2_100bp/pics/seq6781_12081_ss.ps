%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[67.28128815 733.60357666]
[52.28182983 733.94976807]
[37.28480911 733.51049805]
[22.33132744 732.28698730]
[7.46237612 730.28253174]
[-7.28129196 727.50262451]
[-21.85926437 723.95489502]
[-36.23158264 719.64904785]
[-50.35885620 714.59692383]
[-64.20236206 708.81237793]
[-77.72415161 702.31127930]
[-90.88716888 695.11132812]
[-103.65533447 687.23242188]
[-115.99364471 678.69604492]
[-127.86829376 669.52563477]
[-139.24671936 659.74633789]
[-150.09773254 649.38488770]
[-160.39161682 638.46978760]
[-170.10012817 627.03088379]
[-179.19667053 615.09954834]
[-187.65629578 602.70849609]
[-195.45584106 589.89166260]
[-202.57391357 576.68420410]
[-208.99101257 563.12237549]
[-214.68952942 549.24322510]
[-219.65385437 535.08483887]
[-223.87039185 520.68609619]
[-227.32757568 506.08639526]
[-230.01593018 491.32574463]
[-231.92808533 476.44464111]
[-233.05880737 461.48385620]
[-233.40498352 446.48440552]
[-232.96568298 431.48736572]
[-231.74208069 416.53390503]
[-229.73756409 401.66494751]
[-226.95761108 386.92129517]
[-223.40985107 372.34332275]
[-219.10398865 357.97100830]
[-214.05183411 343.84375000]
[-208.26724243 330.00027466]
[-201.76606750 316.47851562]
[-194.56611633 303.31552124]
[-186.68714905 290.54736328]
[-178.15074158 278.20907593]
[-168.98028564 266.33447266]
[-159.20092773 254.95606995]
[-148.83947754 244.10507202]
[-137.92433167 233.81123352]
[-126.48540497 224.10275269]
[-114.55404663 215.00625610]
[-102.16297150 206.54666138]
[-89.34613037 198.74714661]
[-76.13865662 191.62911987]
[-62.57675934 185.21206665]
[-48.69760513 179.51359558]
[-34.53923416 174.54930115]
[-20.14045525 170.33280945]
[-5.54073477 166.87567139]
[9.21990967 164.18736267]
[24.10102081 162.27525330]
[39.06180954 161.14457703]
[54.06127167 160.79844666]
[69.05828857 161.23779297]
[84.01176453 162.46142578]
[86.01577759 147.59590149]
[88.01979065 132.73037720]
[82.05223083 119.08348846]
[91.56388092 106.44074249]
[92.67953491 91.48229218]
[92.90286255 76.48395538]
[93.12619019 61.48561478]
[93.34951782 46.48727798]
[85.81853485 32.57343674]
[93.74446869 19.96277428]
[93.96779633 4.96443653]
[79.05362701 3.24802947]
[64.38446808 0.05515968]
[50.10611725 -4.58243942]
[36.36048126 -10.61867619]
[23.28417778 -17.99355888]
[11.00716496 -26.63378906]
[-0.34853813 -36.45349503]
[-10.67007065 -47.35507965]
[-19.85484886 -59.23019791]
[-27.81159019 -71.96082306]
[-34.46121216 -85.42044067]
[-39.73762894 -99.47525787]
[-43.58839798 -113.98561096]
[-45.97525024 -128.80726624]
[-46.87445831 -143.79292297]
[-46.27708817 -158.79365540]
[-44.18907547 -173.66035461]
[-40.63117599 -188.24526978]
[-35.63874817 -202.40345764]
[-29.26140976 -215.99420166]
[-21.56254387 -228.88241577]
[-12.61866760 -240.94001770]
[-2.51867223 -252.04716492]
[8.63706207 -262.09347534]
[20.73766327 -270.97906494]
[33.66286469 -278.61569214]
[47.28420639 -284.92739868]
[61.46630859 -289.85147095]
[76.06822205 -293.33898926]
[90.94482422 -295.35525513]
[105.94825745 -295.88024902]
[120.92940521 -294.90878296]
[135.73937988 -292.45046997]
[150.23098755 -288.52975464]
[164.26019287 -283.18560791]
[177.68757629 -276.47113037]
[190.37966919 -268.45306396]
[202.21034241 -259.21112061]
[213.06202698 -248.83712769]
[222.82684326 -237.43418884]
[231.40774536 -225.11564636]
[238.71946716 -212.00392151]
[244.68933105 -198.22933960]
[249.25801086 -183.92877197]
[252.38008118 -169.24438477]
[254.02453613 -154.32211304]
[254.17500305 -139.31025696]
[252.83001709 -124.35800934]
[250.00292969 -109.61398315]
[245.72184753 -95.22472382]
[240.02929688 -81.33322906]
[232.98188782 -68.07756805]
[224.64962769 -55.58948517]
[215.11535645 -43.99309921]
[204.47381592 -33.40365601]
[192.83078003 -23.92640495]
[180.30195618 -15.65553761]
[167.01187134 -8.67325497]
[153.09262085 -3.04895353]
[138.68251038 1.16146994]
[123.92479706 3.91616869]
[108.96613312 5.18776464]
[108.74280548 20.18610191]
[116.28975677 33.02716064]
[108.34785461 46.71060562]
[108.12452698 61.70894241]
[107.90119934 76.70728302]
[107.67787170 91.70561981]
[117.71991730 80.56303406]
[132.36920166 77.33832550]
[146.16188049 83.23424530]
[153.95364380 96.05175018]
[152.83834839 111.01023102]
[143.23197937 122.53054047]
[128.71746826 126.31589508]
[114.70836639 120.95444489]
[106.42941284 108.44475555]
[112.25363159 123.15492249]
[102.88532257 134.73439026]
[100.88130951 149.59991455]
[98.87729645 164.46543884]
[113.62097931 167.24526978]
[128.19897461 170.79290771]
[142.57131958 175.09863281]
[156.69862366 180.15065002]
[170.54216003 185.93511963]
[184.06399536 192.43617249]
[197.22705078 199.63600159]
[209.99526978 207.51486206]
[222.33363342 216.05116272]
[234.20832825 225.22151184]
[245.58680725 235.00074768]
[256.43789673 245.36210632]
[266.73184204 256.27716064]
[276.44042969 267.71600342]
[285.53701782 279.64727783]
[293.99673462 292.03826904]
[301.79635620 304.85504150]
[308.91452026 318.06243896]
[315.33169556 331.62429810]
[321.03030396 345.50338745]
[325.99472046 359.66171265]
[330.21133423 374.06045532]
[333.66860962 388.66015625]
[336.35705566 403.42077637]
[338.26928711 418.30187988]
[339.40008545 433.26263428]
[339.74636841 448.26211548]
[339.30715942 463.25912476]
[338.08364868 478.21261597]
[336.07922363 493.08157349]
[333.29934692 507.82525635]
[329.75167847 522.40325928]
[325.44589233 536.77557373]
[320.39382935 550.90283203]
[314.60931396 564.74639893]
[308.10821533 578.26818848]
[300.90835571 591.43121338]
[293.02947998 604.19940186]
[284.49313354 616.53778076]
[275.32275391 628.41241455]
[265.54345703 639.79089355]
[255.18208313 650.64190674]
[244.26699829 660.93585205]
[232.82812500 670.64440918]
[220.89682007 679.74096680]
[208.50579834 688.20062256]
[195.68901062 696.00024414]
[182.48158264 703.11834717]
[168.91972351 709.53546143]
[155.04058838 715.23400879]
[140.88224792 720.19842529]
[126.48349762 724.41497803]
[111.88380432 727.87219238]
[97.12316895 730.56060791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 156]
[65 155]
[66 154]
[68 152]
[69 143]
[70 142]
[71 141]
[72 140]
[74 138]
[75 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
