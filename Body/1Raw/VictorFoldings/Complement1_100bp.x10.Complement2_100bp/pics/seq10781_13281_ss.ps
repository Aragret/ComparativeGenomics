%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[98.93748474 559.36010742]
[85.98842621 566.95971680]
[72.30492401 573.13983154]
[58.04203033 577.83050537]
[43.36135101 580.97845459]
[28.42922592 582.54809570]
[13.41485310 582.52166748]
[-1.51164532 580.89935303]
[-16.18114090 577.69970703]
[-30.42741585 572.95880127]
[-44.08905029 566.73052979]
[-57.01124573 559.08532715]
[-69.04758453 550.10986328]
[-80.06169128 539.90588379]
[-89.92875671 528.58892822]
[-98.53698730 516.28729248]
[-105.78884125 503.14035034]
[-111.60214996 489.29702759]
[-115.91104889 474.91418457]
[-118.66670990 460.15484619]
[-119.83791351 445.18618774]
[-119.41138458 430.17785645]
[-117.39196014 415.29989624]
[-113.80251312 400.72085571]
[-108.68373108 386.60598755]
[-102.09359741 373.11514282]
[-94.10678864 360.40127563]
[-84.81380463 348.60836792]
[-74.31993866 337.87008667]
[-62.74409866 328.30807495]
[-50.21744156 320.03070068]
[-36.88190842 313.13171387]
[-22.88859940 307.68936157]
[-8.39606953 303.76522827]
[6.43146896 301.40383911]
[21.42600822 300.63192749]
[36.41765213 301.45822144]
[51.23652649 303.87338257]
[55.20862579 289.40884399]
[59.18072128 274.94433594]
[63.15281677 260.47979736]
[67.12491608 246.01527405]
[71.09700775 231.55075073]
[75.06910706 217.08622742]
[79.04119873 202.62170410]
[81.92647552 187.90180969]
[83.70893860 173.00808716]
[85.49140930 158.11437988]
[87.27387238 143.22065735]
[89.05633545 128.32695007]
[90.83880615 113.43322754]
[84.20520782 103.86051941]
[85.67522430 92.30715179]
[94.49465179 84.70064545]
[96.49866486 69.83512115]
[90.67444611 55.12495041]
[100.04275513 43.54548645]
[102.04676819 28.67995834]
[104.05078125 13.81443024]
[93.12591553 6.92771578]
[85.64429474 -3.54130244]
[82.68860626 -16.01683426]
[84.66356659 -28.63740349]
[91.24085999 -39.53359604]
[101.41313934 -47.10496140]
[113.64813995 -50.25505447]
[116.09386444 -65.05432892]
[118.53959656 -79.85359955]
[120.98532104 -94.65287018]
[123.43104553 -109.45214081]
[108.85202789 -113.01157379]
[94.58396149 -117.66340637]
[80.70856476 -123.38100433]
[67.30533600 -130.13160706]
[54.45102692 -137.87655640]
[42.21928024 -146.57148743]
[30.68015480 -156.16658020]
[19.89974785 -166.60690308]
[9.93980789 -177.83262634]
[0.85738653 -189.77946472]
[-7.29549360 -202.37899780]
[-14.47213268 -215.55902100]
[-20.63142204 -229.24407959]
[-25.73808289 -243.35574341]
[-29.76286316 -257.81323242]
[-32.68270874 -272.53369141]
[-34.48089981 -287.43280029]
[-35.14712906 -302.42526245]
[-34.67758179 -317.42514038]
[-33.07495499 -332.34658813]
[-30.34841728 -347.10406494]
[-26.51359367 -361.61306763]
[-21.59244728 -375.79052734]
[-15.61316872 -389.55517578]
[-8.61000443 -402.82818604]
[-0.62306947 -415.53353882]
[8.30188751 -427.59848022]
[18.11374474 -438.95385742]
[28.75629807 -449.53466797]
[40.16859055 -459.28027344]
[52.28525162 -468.13488770]
[65.03687286 -476.04776001]
[78.35041809 -482.97357178]
[92.14963531 -488.87265015]
[106.35546875 -493.71121216]
[120.88655090 -497.46154785]
[135.65965271 -500.10214233]
[150.59014893 -501.61791992]
[165.59252930 -502.00018311]
[180.58084106 -501.24673462]
[195.46925354 -499.36187744]
[210.17247009 -496.35641479]
[224.60627747 -492.24755859]
[238.68800354 -487.05886841]
[252.33697510 -480.82006836]
[265.47503662 -473.56683350]
[278.02688599 -465.34078979]
[289.92068481 -456.18899536]
[301.08825684 -446.16390991]
[311.46566772 -435.32293701]
[320.99346924 -423.72817993]
[329.61706543 -411.44604492]
[337.28707886 -398.54687500]
[343.95956421 -385.10458374]
[349.59634399 -371.19616699]
[354.16506958 -356.90127563]
[357.63961792 -342.30178833]
[360.00003052 -327.48132324]
[361.23284912 -312.52481079]
[361.33099365 -297.51788330]
[360.29388428 -282.54650879]
[358.12750244 -267.69647217]
[354.84417725 -253.05278015]
[350.46279907 -238.69935608]
[345.00842285 -224.71839905]
[338.51229858 -211.18998718]
[331.01165771 -198.19163513]
[322.54940796 -185.79776001]
[313.17407227 -174.07937622]
[302.93933105 -163.10360718]
[291.90383911 -152.93331909]
[280.13076782 -143.62675476]
[267.68753052 -135.23724365]
[254.64547729 -127.81282043]
[241.07926941 -121.39602661]
[227.06660461 -116.02361298]
[212.68777466 -111.72635651]
[198.02511597 -108.52885437]
[183.16264343 -106.44944763]
[168.18545532 -105.50002289]
[153.17936707 -105.68603516]
[138.23031616 -107.00640869]
[135.78459167 -92.20713806]
[133.33886719 -77.40786743]
[130.89314270 -62.60859680]
[128.44740295 -47.80932617]
[142.14277649 -37.37500763]
[148.70071411 -21.35917854]
[146.23109436 -4.13985968]
[135.32495117 9.52640629]
[118.91631317 15.81844425]
[116.91230011 30.68397141]
[114.90828705 45.54949951]
[120.87584686 59.19638443]
[111.36419678 71.83913422]
[109.36018372 86.70465851]
[116.12969971 102.05229187]
[105.73252106 115.21569061]
[103.95005798 130.10940552]
[102.16758728 145.00312805]
[100.38512421 159.89685059]
[98.60266113 174.79055786]
[96.82019043 189.68428040]
[107.04606628 178.71014404]
[121.35975647 174.22480774]
[136.01968384 177.40069580]
[147.19380188 187.40765381]
[151.96121216 201.62988281]
[149.07571411 216.34973145]
[139.29158020 227.71946716]
[125.16635895 232.76705933]
[110.39234924 230.17308044]
[98.83144379 220.61560059]
[93.50572205 206.59379578]
[89.53363037 221.05831909]
[85.56153107 235.52284241]
[81.58943939 249.98736572]
[77.61734009 264.45190430]
[73.64524078 278.91641235]
[69.67314911 293.38095093]
[65.70104980 307.84545898]
[79.67509460 313.33712769]
[92.98622894 320.28305054]
[105.48363495 328.60452271]
[117.02570343 338.20724487]
[127.48165894 348.98245239]
[136.73303223 360.80804443]
[144.67497253 373.55001831]
[151.21751404 387.06396484]
[156.28652954 401.19680786]
[159.82456970 415.78839111]
[161.79154968 430.67340088]
[162.16517639 445.68313599]
[160.94123840 460.64755249]
[158.13357544 475.39709473]
[153.77401733 489.76464844]
[147.91194153 503.58740234]
[140.61380005 516.70874023]
[131.96226501 528.97998047]
[122.05538177 540.26202393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 191]
[39 190]
[40 189]
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[54 166]
[55 165]
[57 163]
[58 162]
[59 161]
[66 156]
[67 155]
[68 154]
[69 153]
[70 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
