%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[86.17872620 620.50531006]
[72.46591187 614.39166260]
[59.46727753 606.87811279]
[47.32524490 598.04699707]
[36.17284775 587.99505615]
[26.13227844 576.83239746]
[17.31354523 564.68139648]
[9.81327248 551.67510986]
[3.71363664 537.95605469]
[-0.91853088 523.67456055]
[-4.03247786 508.98712158]
[-5.59408617 494.05462646]
[-5.58624554 479.04071045]
[-4.00904226 464.10986328]
[-0.87975723 449.42568970]
[3.76732373 435.14904785]
[9.88128471 421.43637085]
[17.39513779 408.43792725]
[26.22655678 396.29611206]
[36.27877808 385.14395142]
[47.44166946 375.10366821]
[59.59291840 366.28521729]
[72.59939575 358.78527832]
[86.31858063 352.68597412]
[100.60018158 348.05413818]
[115.28769684 344.94055176]
[113.72717285 330.02194214]
[112.16665649 315.10333252]
[98.09326935 310.16314697]
[87.51692963 299.55889893]
[82.57332611 285.35601807]
[84.29356384 270.35397339]
[92.38967133 257.53445435]
[105.30110931 249.46873474]
[103.74058533 234.55012512]
[92.68225861 220.92367554]
[100.31999207 204.16818237]
[98.53752899 189.27445984]
[96.75505829 174.38073730]
[94.97259521 159.48703003]
[93.19013214 144.59330750]
[91.40766144 129.69958496]
[85.58619690 143.52386475]
[75.21647644 154.36216736]
[61.66281891 160.78854370]
[46.70843506 161.95748901]
[32.32083511 157.71520996]
[20.39295578 148.61984253]
[12.49411201 135.86805725]
[9.66353321 121.13754272]
[12.27363300 106.36637878]
[19.98100471 93.49794769]
[31.77161407 84.22532654]
[46.09420013 79.76847839]
[61.06438446 80.71378326]
[74.71257782 86.93686676]
[85.24313354 97.61898041]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[87.48445892 55.52393341]
[98.33868408 41.73434448]
[99.67691803 26.79415703]
[101.01515198 11.85397243]
[94.53989410 -2.58145714]
[103.38181305 -14.56768894]
[104.72004700 -29.50787354]
[97.06375122 -39.88784790]
[98.48593903 -52.30401230]
[107.68234253 -60.16231155]
[109.24285889 -75.08091736]
[110.80338287 -89.99951935]
[96.06487274 -92.83812714]
[81.62494659 -96.93323517]
[67.59050751 -102.25451660]
[54.06547165 -108.76258087]
[41.14997482 -116.40923309]
[28.93963623 -125.13787079]
[17.52486038 -134.88386536]
[6.99016190 -145.57505798]
[-2.58646536 -157.13229370]
[-11.13411713 -169.47000122]
[-18.58950806 -182.49684143]
[-24.89744186 -196.11636353]
[-30.01121330 -210.22773743]
[-33.89296341 -224.72647095]
[-36.51395035 -239.50523376]
[-37.85477448 -254.45460510]
[-37.90549850 -269.46389771]
[-36.66575623 -284.42199707]
[-34.14472580 -299.21813965]
[-30.36106491 -313.74276733]
[-25.34279442 -327.88839722]
[-19.12706566 -341.55023193]
[-11.75989723 -354.62716675]
[-3.29583597 -367.02236938]
[6.20245266 -378.64407349]
[16.66464615 -389.40625000]
[28.01328278 -399.22915649]
[40.16434097 -408.04013062]
[53.02785873 -415.77392578]
[66.50859833 -422.37326050]
[80.50674438 -427.78927612]
[94.91866302 -431.98190308]
[109.63764954 -434.92007446]
[124.55473328 -436.58203125]
[139.55946350 -436.95547485]
[154.54075623 -436.03765869]
[169.38768005 -433.83538818]
[183.99032593 -430.36489868]
[198.24058533 -425.65197754]
[212.03292847 -419.73144531]
[225.26525879 -412.64718628]
[237.83959961 -404.45159912]
[249.66285706 -395.20541382]
[260.64749146 -384.97705078]
[270.71215820 -373.84225464]
[279.78237915 -361.88348389]
[287.79098511 -349.18923950]
[294.67864990 -335.85351562]
[300.39443970 -321.97506714]
[304.89596558 -307.65661621]
[308.14996338 -293.00421143]
[310.13229370 -278.12634277]
[310.82830811 -263.13308716]
[310.23284912 -248.13552856]
[308.35034180 -233.24467468]
[305.19467163 -218.57078552]
[300.78924561 -204.22248840]
[295.16665649 -190.30601501]
[288.36856079 -176.92442322]
[280.44525146 -164.17675781]
[271.45544434 -152.15742493]
[261.46563721 -140.95538330]
[250.54985046 -130.65359497]
[238.78886414 -121.32833862]
[226.26976013 -113.04862976]
[213.08523560 -105.87578583]
[199.33288574 -99.86290741]
[185.11456299 -95.05451965]
[170.53552246 -91.48621368]
[155.70368958 -89.18441772]
[140.72888184 -88.16616058]
[125.72199249 -88.43899536]
[124.16146851 -73.52039337]
[122.60094452 -58.60178757]
[130.60002136 -42.98188019]
[119.66023254 -28.16963959]
[118.32199860 -13.22945499]
[124.89297485 0.13735300]
[115.95533752 13.19220734]
[114.61710358 28.13239288]
[113.27886963 43.07257843]
[120.79197693 52.55307007]
[119.79934692 65.01094055]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[106.30137634 127.91712189]
[108.08384705 142.81083679]
[109.86631012 157.70455933]
[111.64878082 172.59828186]
[113.43124390 187.49198914]
[115.21370697 202.38571167]
[124.85231781 210.95660400]
[126.03031921 223.39830017]
[118.65919495 232.98960876]
[120.21971893 247.90821838]
[134.52079773 253.12744141]
[145.09452820 263.99404907]
[149.88206482 278.31536865]
[147.98461914 293.23382568]
[139.83168030 305.79721069]
[127.08525848 313.54281616]
[128.64578247 328.46142578]
[130.20629883 343.38003540]
[145.22021484 343.38677979]
[160.15118408 344.96289062]
[174.83558655 348.09109497]
[189.11256409 352.73715210]
[202.82568359 358.85009766]
[215.82467651 366.36300659]
[227.96713257 375.19354248]
[239.12002563 385.24496460]
[249.16113281 396.40710449]
[257.98046875 408.55773926]
[265.48135376 421.56365967]
[271.58166504 435.28240967]
[276.21453857 449.56365967]
[279.32919312 464.25094604]
[280.89151001 479.18334961]
[280.88439941 494.19726562]
[279.30792236 509.12820435]
[276.17935181 523.81256104]
[271.53298950 538.08941650]
[265.41967773 551.80236816]
[257.90646362 564.80114746]
[249.07562256 576.94342041]
[239.02394104 588.09606934]
[227.86154175 598.13690186]
[215.71072388 606.95593262]
[202.70462036 614.45654297]
[188.98571777 620.55651855]
[174.70434570 625.18902588]
[160.01698303 628.30328369]
[145.08453369 629.86529541]
[130.07061768 629.85778809]
[115.13973236 628.28094482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 178]
[27 177]
[28 176]
[34 170]
[35 169]
[37 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[58 160]
[60 158]
[61 157]
[63 154]
[64 153]
[65 152]
[67 150]
[68 149]
[71 147]
[72 146]
[73 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
