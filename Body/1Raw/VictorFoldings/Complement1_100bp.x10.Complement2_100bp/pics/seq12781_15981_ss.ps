%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[59.93553162 416.71951294]
[61.13985062 431.74658203]
[58.71226501 446.62509155]
[52.79391098 460.49002075]
[43.72887802 472.53530884]
[32.04418945 482.06060791]
[18.41917992 488.51217651]
[3.64599109 491.51489258]
[-11.41648483 490.89419556]
[-25.89253426 486.68618774]
[-38.94054031 479.13546753]
[-49.80190659 468.68109131]
[-57.84516907 455.93081665]
[-62.60270309 441.62594604]
[-63.79790878 426.59814453]
[-61.36130524 411.72109985]
[-55.43454742 397.85977173]
[-46.36221313 385.81997681]
[-34.67174911 376.30175781]
[-21.04283333 369.85845947]
[-6.26782560 366.86471558]
[8.79427052 367.49453735]
[12.98128223 353.09075928]
[17.16829300 338.68698120]
[21.35530472 324.28320312]
[25.54231644 309.87939453]
[29.72932625 295.47561646]
[33.91633987 281.07183838]
[32.68598938 278.55303955]
[32.37923813 275.39511108]
[33.24452209 271.94738770]
[35.39932632 268.64266968]
[38.80509949 265.94921875]
[33.90548706 254.88935852]
[37.98619080 243.07701111]
[49.37512970 237.02267456]
[54.62184525 222.97019958]
[59.86856461 208.91772461]
[65.11528015 194.86526489]
[70.25724030 180.77412415]
[75.29415894 166.64509583]
[79.58827972 152.27287292]
[83.12795258 137.69650269]
[86.66762543 123.12012482]
[90.20729828 108.54375458]
[93.31140900 93.86844635]
[95.97720337 79.10723114]
[98.64299774 64.34601593]
[101.30879211 49.58479691]
[92.56624603 36.69272232]
[95.48001862 21.76072502]
[107.82452393 13.50548935]
[102.66295624 -1.45007038]
[112.53897095 -12.59966850]
[115.20476532 -27.36088562]
[103.81668854 -42.50109482]
[107.05602264 -60.84284210]
[122.40566254 -70.81801605]
[124.63078308 -85.65206146]
[126.85589600 -100.48610687]
[129.08100891 -115.32014465]
[119.95849609 -127.94621277]
[122.42639923 -142.95834351]
[134.51963806 -151.57745361]
[136.74475098 -166.41149902]
[138.96987915 -181.24554443]
[124.32112122 -184.50114441]
[109.93515778 -188.77066040]
[95.88206482 -194.03329468]
[82.23031616 -200.26341248]
[69.04640961 -207.43064880]
[56.39458084 -215.50010681]
[44.33647156 -224.43243408]
[32.93082809 -234.18415833]
[22.23321533 -244.70774841]
[12.29575443 -255.95191956]
[3.16685843 -267.86190796]
[-5.10899639 -280.37969971]
[-12.49149132 -293.44430542]
[-18.94465828 -306.99203491]
[-24.43705940 -320.95693970]
[-28.94193459 -335.27093506]
[-32.43733597 -349.86431885]
[-34.90623474 -364.66598511]
[-36.33660507 -379.60382080]
[-36.72147369 -394.60504150]
[-36.05896759 -409.59655762]
[-34.35231781 -424.50537109]
[-31.60983276 -439.25878906]
[-27.84487724 -453.78497314]
[-23.07579422 -468.01312256]
[-17.32581711 -481.87393188]
[-10.62296009 -495.29989624]
[-2.99987936 -508.22558594]
[5.50628614 -520.58801270]
[14.85409546 -532.32696533]
[24.99800491 -543.38525391]
[35.88859558 -553.70904541]
[47.47280884 -563.24792480]
[59.69420624 -571.95550537]
[72.49324799 -579.78936768]
[85.80757141 -586.71136475]
[99.57231903 -592.68768311]
[113.72042847 -597.68927002]
[128.18296814 -601.69171143]
[142.88946533 -604.67559814]
[157.76829529 -606.62628174]
[172.74694824 -607.53436279]
[187.75245667 -607.39532471]
[202.71171570 -606.20996094]
[217.55184937 -603.98388672]
[232.20056152 -600.72808838]
[246.58645630 -596.45837402]
[260.63946533 -591.19555664]
[274.29113770 -584.96520996]
[287.47494507 -577.79779053]
[300.12664795 -569.72814941]
[312.18463135 -560.79565430]
[323.59014893 -551.04376221]
[334.28759766 -540.52001953]
[344.22491455 -529.27569580]
[353.35363770 -517.36560059]
[361.62930298 -504.84768677]
[369.01159668 -491.78298950]
[375.46456909 -478.23516846]
[380.95678711 -464.27020264]
[385.46145630 -449.95611572]
[388.95663452 -435.36267090]
[391.42532349 -420.56097412]
[392.85549927 -405.62313843]
[393.24014282 -390.62191772]
[392.57742310 -375.63040161]
[390.87054443 -360.72161865]
[388.12786865 -345.96823120]
[384.36270142 -331.44210815]
[379.59341431 -317.21401978]
[373.84323120 -303.35327148]
[367.14019775 -289.92739868]
[359.51690674 -277.00183105]
[351.01058960 -264.63952637]
[341.66259766 -252.90069580]
[331.51852417 -241.84254456]
[320.62780762 -231.51895142]
[309.04345703 -221.98020935]
[296.82192993 -213.27279663]
[284.02276611 -205.43911743]
[270.70834351 -198.51736450]
[256.94351196 -192.54122925]
[242.79533386 -187.53985596]
[228.33274841 -183.53758240]
[213.62619019 -180.55393982]
[198.74734497 -178.60342407]
[183.76867676 -177.69558716]
[168.76316833 -177.83480835]
[153.80390930 -179.02043152]
[151.57879639 -164.18638611]
[149.35368347 -149.35234070]
[158.38584900 -137.56439209]
[156.34057617 -122.48886871]
[143.91505432 -113.09503174]
[141.68994141 -98.26098633]
[139.46482849 -83.42694092]
[137.23970032 -68.59290314]
[145.84852600 -61.10594177]
[149.81520081 -50.28091812]
[148.04568481 -38.76733017]
[140.86521912 -29.44306564]
[129.96598816 -24.69508934]
[127.30018616 -9.93387222]
[132.65243530 3.96586657]
[122.58573914 16.17128563]
[131.26292419 28.22292328]
[128.76971436 43.23087311]
[116.07001495 52.25059128]
[113.40422058 67.01181030]
[110.73841858 81.77302551]
[108.07262421 96.53424835]
[109.59199524 99.17640686]
[110.18357086 102.42980194]
[109.61911774 105.95185089]
[107.80013275 109.32046509]
[104.78367615 112.08342743]
[101.24400330 126.65979767]
[97.70433044 141.23617554]
[94.16465759 155.81254578]
[106.92874908 147.93359375]
[121.78877258 149.97805786]
[131.95091248 161.01121521]
[132.76919556 175.98889160]
[123.86949158 188.06346130]
[109.32064056 191.71461487]
[95.77417755 185.27308655]
[89.42318726 171.68200684]
[84.38626862 185.81103516]
[84.45230103 194.94522095]
[79.16775513 200.11198425]
[73.92103577 214.16444397]
[68.67431641 228.21691895]
[63.42760086 242.26939392]
[66.89569855 260.35403442]
[52.93412781 270.98611450]
[48.32012177 285.25885010]
[44.13311005 299.66262817]
[39.94609833 314.06640625]
[35.75908661 328.47021484]
[31.57207489 342.87399292]
[27.38506317 357.27777100]
[23.19805336 371.68154907]
[36.25063324 379.22433472]
[47.11833572 389.67211914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[27 203]
[28 202]
[33 201]
[36 199]
[37 198]
[38 197]
[39 196]
[40 194]
[41 193]
[42 185]
[43 184]
[44 183]
[45 182]
[46 177]
[47 176]
[48 175]
[49 174]
[52 171]
[54 169]
[55 168]
[58 163]
[59 162]
[60 161]
[61 160]
[64 157]
[65 156]
[66 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
