%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[101.32250977 527.72454834]
[99.76924896 512.76373291]
[100.91252136 497.76596069]
[104.71557617 483.21340942]
[111.05616760 469.57388306]
[119.73046875 457.28582764]
[130.45962524 446.74426270]
[142.89875793 438.28805542]
[156.64799500 432.18899536]
[153.10832214 417.61264038]
[149.56864929 403.03625488]
[146.02897644 388.45986938]
[142.48930359 373.88351440]
[131.55607605 371.66647339]
[122.19709015 365.50146484]
[115.78549194 356.24713135]
[113.27904510 345.21868896]
[115.07718658 334.00091553]
[120.95794678 324.22045898]
[130.10455322 317.31005859]
[127.21928406 302.59017944]
[117.17835999 291.58883667]
[122.11669159 276.55810547]
[119.23141479 261.83819580]
[116.34614563 247.11831665]
[113.46086884 232.39842224]
[110.57559967 217.67852783]
[107.69032288 202.95863342]
[104.80505371 188.23875427]
[102.55653381 186.56474304]
[100.83563995 183.89920044]
[100.02333832 180.43861389]
[100.42251587 176.51367188]
[102.21369171 172.55821228]
[100.20967865 157.69268799]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[74.45693970 72.63812256]
[60.66593170 68.04326630]
[48.25339127 60.49243927]
[37.84279251 50.36884308]
[29.95618248 38.18479919]
[24.98799133 24.55583954]
[23.18531799 10.16960144]
[24.63563728 -4.24886370]
[29.26255989 -17.97363663]
[36.82984924 -30.31447220]
[46.95349121 -40.65151596]
[59.12115860 -48.46643829]
[72.71815491 -53.36842728]
[70.93569183 -68.26214600]
[61.61332321 -81.04510498]
[67.78340149 -94.60163116]
[66.00093842 -109.49534607]
[64.21847534 -124.38906097]
[62.43600845 -139.28277588]
[60.65354156 -154.17649841]
[58.87107468 -169.07022095]
[55.54881668 -183.69767761]
[50.72281647 -197.90013123]
[45.89682007 -212.10258484]
[41.07082367 -226.30503845]
[36.24482346 -240.50749207]
[31.41882706 -254.70994568]
[15.58810616 -262.15359497]
[10.14597416 -278.42312622]
[17.99686241 -293.29598999]
[12.95994663 -307.42501831]
[7.92303085 -321.55404663]
[2.88611460 -335.68307495]
[-2.15080166 -349.81210327]
[-7.18771791 -363.94113159]
[-22.00058746 -361.35522461]
[-37.03740692 -361.31008911]
[-51.86553955 -363.80697632]
[-66.05834961 -368.77407837]
[-79.20748138 -376.06848145]
[-90.93460846 -385.48031616]
[-100.90232086 -396.73876953]
[-108.82382202 -409.51992798]
[-114.47119904 -423.45602417]
[-117.68196106 -438.14611816]
[-118.36373138 -453.16754150]
[-116.49689484 -468.08810425]
[-112.13516235 -482.47848511]
[-105.40402985 -495.92468262]
[-96.49716949 -508.03979492]
[-85.67083740 -518.47521973]
[-73.23654175 -526.93078613]
[-59.55203629 -533.16314697]
[-45.01105499 -536.99298096]
[-30.03196716 -538.31018066]
[-15.04575062 -537.07672119]
[-0.48359135 -533.32818604]
[13.23552895 -527.17242432]
[25.71688461 -518.78649902]
[36.60136414 -508.41168213]
[45.57579422 -496.34655762]
[52.38196564 -482.93820190]
[56.82405090 -468.57241821]
[58.77424240 -453.66250610]
[58.17642975 -438.63751221]
[55.04780960 -423.92971802]
[49.47840500 -409.96224976]
[41.62845612 -397.13702393]
[31.72381973 -385.82305908]
[20.04947281 -376.34582520]
[6.94131136 -368.97805786]
[11.97822762 -354.84902954]
[17.01514435 -340.72000122]
[22.05206108 -326.59097290]
[27.08897591 -312.46194458]
[32.12589264 -298.33291626]
[44.42578506 -294.49337769]
[52.38726807 -284.11566162]
[52.92594147 -270.85214233]
[45.62128448 -259.53594971]
[50.44728088 -245.33349609]
[55.27327728 -231.13104248]
[60.09927750 -216.92858887]
[64.92527008 -202.72613525]
[69.75127411 -188.52366638]
[72.80845642 -203.20881653]
[81.18905640 -215.64929199]
[93.64987946 -223.99963379]
[108.34242249 -227.02108765]
[123.08713531 -224.26547241]
[135.69673157 -216.14155579]
[144.30064392 -203.85446167]
[147.62254333 -189.22691345]
[145.16964722 -174.42883301]
[137.30581665 -161.65541077]
[125.19760895 -152.80152893]
[110.64121246 -149.18057251]
[95.79597473 -151.32972717]
[82.86409760 -158.93016052]
[73.76479340 -170.85267639]
[75.54725647 -155.95896912]
[77.32972717 -141.06524658]
[79.11219025 -126.17153168]
[80.89465332 -111.27780914]
[82.67712402 -96.38409424]
[91.87199402 -84.66643524]
[85.82940674 -70.04460907]
[87.61186981 -55.15089417]
[103.00200653 -53.35916519]
[117.52699280 -47.94052887]
[130.34468079 -39.20470428]
[140.71081543 -27.65387535]
[148.02232361 -13.95382309]
[151.85232544 1.10445726]
[151.97509766 16.65041924]
[148.37936401 31.78429413]
[141.26919556 45.62916946]
[131.05241394 57.38180161]
[118.31723785 66.35920715]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[115.07520294 155.68867493]
[117.07921600 170.55419922]
[119.52494812 185.35346985]
[122.41021729 200.07336426]
[125.29548645 214.79325867]
[128.18075562 229.51315308]
[131.06604004 244.23304749]
[133.95130920 258.95294189]
[136.83657837 273.67282104]
[147.08387756 285.72702026]
[141.93917847 299.70489502]
[144.82444763 314.42477417]
[162.51055908 321.74166870]
[172.13723755 338.11044312]
[169.97048950 356.82498169]
[157.06568909 370.34384155]
[160.60536194 384.92019653]
[164.14503479 399.49658203]
[167.68470764 414.07296753]
[171.22438049 428.64932251]
[186.23953247 427.76333618]
[201.17155457 429.57284546]
[215.54045105 434.01971436]
[228.88432312 440.96093750]
[240.77421570 450.17346191]
[250.82792664 461.36108398]
[258.72225952 474.16418457]
[264.20343018 488.17117310]
[267.09527588 502.93185425]
[267.30480957 517.97167969]
[264.82531738 532.80712891]
[259.73648071 546.96142578]
[252.20190430 559.97949219]
[242.46377563 571.44287109]
[230.83515930 580.98303223]
[217.68983459 588.29333496]
[203.45040894 593.13873291]
[188.57458496 595.36358643]
[173.54057312 594.89624023]
[158.83166504 591.75177002]
[144.92066956 586.03125000]
[132.25479126 577.91857910]
[121.24116516 567.67456055]
[112.23384857 555.62847900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[20 178]
[21 177]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[34 168]
[35 167]
[36 166]
[37 165]
[38 164]
[40 162]
[41 161]
[54 149]
[55 148]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
