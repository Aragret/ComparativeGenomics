%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[9.98258018 223.00871277]
[15.38428211 237.01544189]
[19.38705635 251.48417664]
[21.95235252 266.27560425]
[23.05546570 281.24722290]
[22.68577003 296.25491333]
[20.84682846 311.15408325]
[17.55634880 325.80123901]
[12.84602261 340.05535889]
[6.76121426 353.77911377]
[-0.63947523 366.84039307]
[-9.28477192 379.11334229]
[-19.09141350 390.47979736]
[-29.96495438 400.83032227]
[-41.80067444 410.06515503]
[-54.48458862 418.09542847]
[-67.89453888 424.84378052]
[-81.90137482 430.24520874]
[-96.37019348 434.24768066]
[-111.16166687 436.81268311]
[-126.13332367 437.91549683]
[-141.14099121 437.54550171]
[-156.04011536 435.70626831]
[-170.68721008 432.41549683]
[-184.94123840 427.70486450]
[-198.66488647 421.61978149]
[-211.72599792 414.21884155]
[-223.99877930 405.57330322]
[-235.36505127 395.76641846]
[-245.71534729 384.89266968]
[-254.94995117 373.05676270]
[-262.97998047 360.37271118]
[-269.72802734 346.96261597]
[-275.12918091 332.95568848]
[-279.13137817 318.48678589]
[-281.69607544 303.69525146]
[-282.79858398 288.72357178]
[-282.42831421 273.71591187]
[-280.58877563 258.81683350]
[-277.29769897 244.16978455]
[-272.58679199 229.91586304]
[-266.50143433 216.19233704]
[-259.10021973 203.13137817]
[-250.45445251 190.85874939]
[-240.64735413 179.49267578]
[-229.77339172 169.14260864]
[-217.93730164 159.90823364]
[-205.25306702 151.87847900]
[-191.84284973 145.13067627]
[-177.83580017 139.72981262]
[-163.36682129 135.72790527]
[-148.57524109 133.16349792]
[-133.60354614 132.06127930]
[-118.59589386 132.43186951]
[-103.69683838 134.27171326]
[-89.04986572 137.56306458]
[-74.79604340 142.27424622]
[-61.07263565 148.35987854]
[-48.01181793 155.76135254]
[-35.73937225 164.40739441]
[-24.37349510 174.21470642]
[-14.02364540 185.08888245]
[-2.19737530 175.86177063]
[9.62889481 166.63467407]
[21.45516396 157.40757751]
[33.28143311 148.18048096]
[45.10770416 138.95338440]
[56.58240509 129.29257202]
[67.68963623 119.21143341]
[78.79687500 109.13029480]
[89.90410614 99.04915619]
[93.28192139 91.73049164]
[101.25257111 88.90212250]
[112.50865936 78.98747253]
[123.76475525 69.07282257]
[120.84895325 54.05798340]
[125.80741119 39.69447327]
[137.21383667 29.80710793]
[151.93927002 26.97560501]
[166.01008606 31.86207199]
[177.26618958 21.94742012]
[188.52227783 12.03277016]
[199.77838135 2.11811852]
[190.56539917 -9.72509575]
[182.09155273 -22.10794449]
[174.38838196 -34.98435974]
[167.48454285 -48.30644226]
[161.40571594 -62.02463150]
[156.17451477 -76.08789062]
[151.81039429 -90.44391632]
[148.32960510 -105.03928375]
[145.74507141 -119.81971741]
[144.06643677 -134.73020935]
[143.29991150 -149.71531677]
[143.44837952 -164.71928406]
[144.51126099 -179.68627930]
[146.48463440 -194.56063843]
[149.36112976 -209.28703308]
[153.13005066 -223.81066895]
[157.77740479 -238.07752991]
[163.28585815 -252.03451538]
[169.63494873 -265.62973022]
[176.80105591 -278.81259155]
[184.75750732 -291.53405762]
[193.47473145 -303.74679565]
[202.92025757 -315.40539551]
[213.05897522 -326.46646118]
[223.85317993 -336.88885498]
[235.26268005 -346.63378906]
[247.24505615 -355.66503906]
[259.75573730 -363.94900513]
[272.74816895 -371.45483398]
[286.17401123 -378.15466309]
[299.98333740 -384.02349854]
[314.12475586 -389.03958130]
[328.54568481 -393.18420410]
[343.19244385 -396.44192505]
[358.01058960 -398.80068970]
[372.94494629 -400.25167847]
[387.94000244 -400.78952026]
[402.93997192 -400.41220093]
[417.88900757 -399.12112427]
[432.73153687 -396.92108154]
[447.41232300 -393.82025146]
[461.87680054 -389.83023071]
[476.07107544 -384.96578979]
[489.94244385 -379.24505615]
[503.43920898 -372.68930054]
[516.51123047 -365.32293701]
[529.10980225 -357.17333984]
[541.18817139 -348.27084351]
[552.70129395 -338.64855957]
[563.60644531 -328.34228516]
[573.86297607 -317.39035034]
[583.43273926 -305.83352661]
[592.28015137 -293.71478271]
[600.37225342 -281.07919312]
[607.67907715 -267.97378540]
[614.17327881 -254.44728088]
[619.83081055 -240.55003357]
[624.63055420 -226.33374023]
[628.55468750 -211.85127258]
[631.58862305 -197.15650940]
[633.72106934 -182.30410767]
[634.94409180 -167.34934998]
[635.25311279 -152.34782410]
[634.64697266 -137.35537720]
[633.12799072 -122.42777252]
[630.70184326 -107.62052917]
[627.37744141 -92.98873901]
[623.16717529 -78.58683777]
[618.08679199 -64.46839905]
[612.15515137 -50.68593979]
[605.39422607 -37.29073334]
[597.82934570 -24.33261681]
[589.48852539 -11.85979176]
[580.40277100 0.08134217]
[570.60601807 11.44636250]
[560.13458252 22.19298935]
[549.02746582 32.28124619]
[537.32598877 41.67359924]
[525.07366943 50.33511734]
[512.31610107 58.23356628]
[499.10073853 65.33957672]
[485.47677612 71.62670135]
[471.49484253 77.07156372]
[457.20697021 81.65389252]
[442.66632080 85.35665894]
[427.92700195 88.16607666]
[413.04379272 90.07169342]
[398.07211304 91.06642914]
[383.06762695 91.14657593]
[368.08618164 90.31183624]
[353.18347168 88.56532288]
[338.41497803 85.91352844]
[323.83560181 82.36631012]
[309.49960327 77.93687439]
[295.46029663 72.64169312]
[281.76992798 66.50047302]
[268.47940063 59.53604507]
[255.63819885 51.77433014]
[243.29406738 43.24420166]
[231.49291992 33.97738647]
[220.27867126 24.00836372]
[209.69302368 13.37421417]
[198.43693542 23.28886604]
[187.18083191 33.20351791]
[175.92474365 43.11816788]
[178.99612427 57.69322205]
[174.32862854 71.94350433]
[163.08062744 82.01071930]
[148.20613098 85.11656952]
[133.67941284 80.32891846]
[122.42331696 90.24356842]
[111.16722107 100.15821838]
[99.98524475 110.15638733]
[88.87801361 120.23752594]
[77.77077484 130.31866455]
[66.66354370 140.39981079]
[81.29106903 143.72177124]
[87.95116425 157.16213989]
[81.73425293 170.81314087]
[67.22321320 174.61178589]
[55.11504364 165.75785828]
[54.33480072 150.77964783]
[42.50853348 160.00674438]
[30.68226242 169.23385620]
[18.85599327 178.46095276]
[7.02972317 187.68804932]
[-4.79654694 196.91514587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 210]
[63 209]
[64 208]
[65 207]
[66 206]
[67 205]
[68 199]
[69 198]
[70 197]
[71 196]
[73 195]
[74 194]
[75 193]
[80 188]
[81 187]
[82 186]
[83 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
