%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[99.75157166 765.65502930]
[84.91991425 768.13092041]
[69.88317108 768.06445312]
[55.07398224 765.45751953]
[40.91843796 760.38519287]
[27.82382202 752.99334717]
[16.16688919 743.49475098]
[6.28303528 732.16259766]
[-1.54336226 719.32299805]
[-7.08712244 705.34533691]
[-10.18874073 690.63183594]
[-10.75897598 675.60571289]
[-8.78142262 660.69946289]
[-4.31297779 646.34185791]
[2.51779151 632.94598389]
[11.51435089 620.89733887]
[22.41785049 610.54254150]
[34.91457748 602.17956543]
[48.64497375 596.04895020]
[63.21398926 592.32714844]
[78.20243835 591.12121582]
[79.54067230 576.18103027]
[80.87891388 561.24084473]
[74.30793762 547.87402344]
[83.24557495 534.81921387]
[84.47254944 519.86944580]
[85.58819580 504.91101074]
[78.81893921 491.64352417]
[87.56121826 478.45703125]
[74.58983612 471.09439087]
[66.06644440 458.77929688]
[63.72566223 443.92395020]
[68.08467865 429.46643066]
[78.33018494 418.28982544]
[92.46952820 412.64712524]
[93.58517456 397.68865967]
[94.70082855 382.73019409]
[95.81647491 367.77175903]
[96.26308441 352.77841187]
[96.03975677 337.78005981]
[95.81642914 322.78173828]
[95.59309387 307.78338623]
[95.36976624 292.78506470]
[95.14643860 277.78671265]
[94.92311096 262.78839111]
[80.27128601 259.70196533]
[66.66716003 253.42932129]
[54.79436493 244.28211975]
[45.25030518 232.71653748]
[38.51612473 219.31060791]
[34.93243408 204.73521423]
[34.68208313 189.72056580]
[37.78084946 175.01966858]
[44.07646561 161.37043762]
[53.25611115 149.45877075]
[64.86194611 139.88404846]
[78.31396484 133.12892151]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[84.86257172 105.93611145]
[84.77587128 94.28992462]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[83.94817352 60.91779709]
[84.25698090 48.42426300]
[92.71562195 39.77684021]
[92.93894958 24.77850342]
[93.16227722 9.78016567]
[93.38560486 -5.21817207]
[93.60893250 -20.21650887]
[78.90120697 -23.39057350]
[65.09978485 -29.37122726]
[52.73436356 -37.92688751]
[42.27912140 -48.72719574]
[34.13454819 -61.35575104]
[28.61209488 -75.32617188]
[25.92226982 -90.10084534]
[26.16660881 -105.11157990]
[29.33384705 -119.78148651]
[35.30042648 -133.54716492]
[43.83531189 -145.88026428]
[54.60893631 -156.30786133]
[67.20592499 -164.43052673]
[81.14111328 -169.93765259]
[95.87823486 -172.61930847]
[96.10156250 -187.61764526]
[88.57058716 -201.53149414]
[96.49652100 -214.14215088]
[96.38484955 -229.14173889]
[95.93824768 -244.13508606]
[95.49163818 -259.12844849]
[95.04503632 -274.12179565]
[91.66150665 -282.60644531]
[94.70507050 -289.34133911]
[86.76316071 -303.02478027]
[94.31011963 -315.86584473]
[94.08679199 -330.86416626]
[79.84371948 -336.10815430]
[68.45939636 -346.14617920]
[61.47344971 -359.62063599]
[59.83066559 -374.70922852]
[63.75322723 -389.37133789]
[72.71063232 -401.62408447]
[85.49147034 -409.81033325]
[100.36724091 -412.82296753]
[115.32611084 -410.25457764]
[128.34501648 -402.45248413]
[137.66326904 -390.47189331]
[142.02062988 -375.93304443]
[140.82781982 -360.80221558]
[134.24615479 -347.12576294]
[123.16574097 -336.75323486]
[109.08512878 -331.08749390]
[109.30845642 -316.08917236]
[117.23439026 -303.47848511]
[109.70340729 -289.56466675]
[110.03838348 -274.56838989]
[110.48499298 -259.57504272]
[110.93159485 -244.58169556]
[111.37820435 -229.58834839]
[113.68001556 -226.91738892]
[114.80248260 -222.99882507]
[114.17332458 -218.39910889]
[111.49485779 -213.91882324]
[119.04180908 -201.07777405]
[111.09989929 -187.39431763]
[110.87657166 -172.39598083]
[125.52732086 -169.27673340]
[139.29235840 -163.35714722]
[151.64192200 -154.86302185]
[162.10031128 -144.11927795]
[170.26420593 -131.53752136]
[175.81828308 -117.60031128]
[178.54733276 -102.84260559]
[178.34465027 -87.83124542]
[175.21611023 -73.14321899]
[169.28015137 -59.34341049]
[160.76319885 -46.96294785]
[149.99102783 -36.47872162]
[137.37634277 -28.29501724]
[123.40297699 -22.72793579]
[108.60726929 -19.99318123]
[108.38394165 -4.99484444]
[108.16061401 10.00349331]
[107.93728638 25.00183105]
[107.71395874 40.00016785]
[117.07468414 54.84414673]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[116.25928497 99.87895203]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[122.66279602 132.46856689]
[136.30996704 138.82017517]
[148.19573975 148.04510498]
[157.72596741 159.67817688]
[164.42518616 173.13391113]
[167.96028137 187.73603821]
[168.15707397 202.75148010]
[165.00894165 217.42710876]
[158.67689514 231.02760315]
[149.48141479 242.87220764]
[137.88621521 252.36886597]
[124.47488403 259.04376221]
[109.92145538 262.56506348]
[110.14478302 277.56338501]
[110.36811066 292.56173706]
[110.59143829 307.56005859]
[110.81476593 322.55841064]
[111.03809357 337.55673218]
[111.26142120 352.55508423]
[122.45884705 342.57421875]
[137.44143677 343.29675293]
[147.62648010 354.30880737]
[147.17950439 369.30215454]
[136.35658264 379.68792725]
[121.35755920 379.51669312]
[110.77492523 368.88739014]
[109.65927887 383.84585571]
[108.54363251 398.80432129]
[107.42797852 413.76275635]
[120.57384491 421.44049072]
[129.04804993 434.01327515]
[131.21418762 448.95745850]
[126.69564819 463.30120850]
[116.43972778 474.21566772]
[102.51966858 479.57269287]
[109.20912933 493.91012573]
[100.54664612 506.02664185]
[99.43099976 520.98510742]
[101.91346741 529.77575684]
[98.18576050 536.15740967]
[104.66101074 550.59283447]
[95.81909180 562.57910156]
[94.48085785 577.51928711]
[93.14262390 592.45947266]
[107.67816925 596.30993652]
[121.35382080 602.56170654]
[133.77612305 611.03485107]
[144.58763123 621.48565674]
[153.47731018 633.61334229]
[160.18937683 647.06909180]
[164.53070068 661.46563721]
[166.37638855 676.38885498]
[165.67332458 691.40924072]
[162.44172668 706.09478760]
[156.77459717 720.02288818]
[148.83499146 732.79278564]
[138.85133362 744.03710938]
[127.11087036 753.43231201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 196]
[22 195]
[23 194]
[25 192]
[26 190]
[27 189]
[29 187]
[35 181]
[36 180]
[37 179]
[38 178]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[58 152]
[59 151]
[62 149]
[63 148]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[85 127]
[86 126]
[88 124]
[89 120]
[90 119]
[91 118]
[92 117]
[94 116]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
