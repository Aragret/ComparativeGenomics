%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[28.93698502 350.02789307]
[31.87949371 364.76177979]
[32.74272537 379.76181030]
[31.50988007 394.73599243]
[28.20495224 409.39285278]
[22.89227486 423.44711304]
[15.67526054 436.62515259]
[6.69439030 448.67047119]
[-3.87552023 459.34863281]
[-15.82872486 468.45178223]
[-28.93255043 475.80267334]
[-42.93192673 481.25830078]
[-57.55435562 484.71237183]
[-72.51519775 486.09774780]
[-87.52324677 485.38739014]
[-102.28636169 482.59515381]
[-116.51718140 477.77539062]
[-129.93869019 471.02191162]
[-142.28962708 462.46618652]
[-153.32958984 452.27474976]
[-162.84367371 440.64599609]
[-170.64669800 427.80624390]
[-176.58677673 414.00546265]
[-180.54826355 399.51226807]
[-182.45405579 384.60879517]
[-182.26705933 369.58508301]
[-179.99090576 354.73364258]
[-175.66992188 340.34353638]
[-169.38819885 326.69488525]
[-161.26802063 314.05334473]
[-151.46743774 302.66497803]
[-140.17723083 292.75146484]
[-127.61716461 284.50582886]
[-114.03172302 278.08850098]
[-99.68535614 273.62442017]
[-84.85732269 271.20050049]
[-69.83624268 270.86392212]
[-54.91450882 272.62121582]
[-40.38258362 276.43817139]
[-26.52333069 282.24053955]
[-18.86273384 269.34420776]
[-11.20213604 256.44787598]
[-11.71341133 252.95919800]
[-10.56031036 249.04954529]
[-7.56338120 245.50387573]
[-2.90052485 243.15763855]
[5.32828283 230.61624146]
[13.55709076 218.07482910]
[21.78589821 205.53343201]
[30.01470566 192.99203491]
[38.24351501 180.45063782]
[38.75642776 165.56486511]
[52.79613113 158.27120972]
[61.02493668 145.72981262]
[69.25374603 133.18841553]
[60.51270676 122.08068085]
[55.62600327 108.81766510]
[55.07062531 94.69395447]
[58.90078354 81.08817291]
[66.74261475 69.32836151]
[77.83068848 60.56239700]
[91.08270264 55.64591599]
[105.20512390 55.05881882]
[118.81947327 58.85841370]
[127.23409271 46.44091797]
[135.64871216 34.02342224]
[144.06333923 21.60592651]
[152.47795105 9.18843079]
[142.43133545 -1.37660539]
[134.81083679 -13.79858875]
[129.94911194 -27.53045845]
[128.05734253 -41.96808624]
[129.21615601 -56.47685242]
[133.37210083 -70.41954041]
[140.34016418 -83.18433380]
[149.81201172 -94.21163940]
[161.36958313 -103.01864624]
[174.50360107 -109.22044373]
[188.63594055 -112.54685974]
[203.14517212 -112.85420990]
[217.39378357 -110.13153839]
[230.75627136 -104.50093079]
[239.35482788 -116.79176331]
[247.95339966 -129.08259583]
[256.55197144 -141.37344360]
[265.15051270 -153.66427612]
[273.74908447 -165.95512390]
[282.34765625 -178.24595642]
[282.79867554 -183.44630432]
[284.98114014 -187.54388428]
[288.18502808 -190.06385803]
[291.61474609 -190.88194275]
[300.75354004 -202.77658081]
[309.89236450 -214.67120361]
[308.03613281 -230.13705444]
[317.47363281 -242.06971741]
[332.22937012 -243.74401855]
[341.36819458 -255.63865662]
[350.50698853 -267.53329468]
[339.65884399 -277.91430664]
[329.99670410 -289.40734863]
[321.63385010 -301.87771606]
[314.66833496 -315.17916870]
[309.18182373 -329.15576172]
[305.23861694 -343.64364624]
[302.88497925 -358.47293091]
[302.14849854 -373.46975708]
[303.03778076 -388.45828247]
[305.54244995 -403.26281738]
[309.63311768 -417.70974731]
[315.26177979 -431.62969971]
[322.36251831 -444.85946655]
[330.85205078 -457.24395752]
[340.63079834 -468.63793945]
[351.58419800 -478.90783691]
[363.58374023 -487.93325806]
[376.48876953 -495.60833740]
[390.14801025 -501.84313965]
[404.40127563 -506.56454468]
[419.08145142 -509.71719360]
[434.01647949 -511.26412964]
[449.03115845 -511.18719482]
[463.94952393 -509.48733521]
[478.59664917 -506.18444824]
[492.80081177 -501.31726074]
[506.39541626 -494.94281006]
[519.22113037 -487.13589478]
[531.12762451 -477.98803711]
[541.97515869 -467.60644531]
[551.63671875 -456.11285400]
[559.99890137 -443.64205933]
[566.96368408 -430.34020996]
[572.44946289 -416.36331177]
[576.39184570 -401.87524414]
[578.74468994 -387.04583740]
[579.48040771 -372.04895020]
[578.59027100 -357.06045532]
[576.08483887 -342.25607300]
[571.99340820 -327.80935669]
[566.36395264 -313.88970947]
[559.26251221 -300.66033936]
[550.77233887 -288.27630615]
[540.99298096 -276.88284302]
[530.03900146 -266.61352539]
[518.03900146 -257.58877563]
[505.13354492 -249.91436768]
[491.47396851 -243.68029785]
[477.22045898 -238.95967102]
[462.54010010 -235.80781555]
[447.60501099 -234.26168823]
[432.59030151 -234.33941650]
[417.67202759 -236.04008484]
[403.02508545 -239.34376526]
[388.82119751 -244.21173096]
[375.22692871 -250.58688354]
[362.40161133 -258.39450073]
[353.26281738 -246.49986267]
[344.12402344 -234.60522461]
[346.30758667 -219.91619873]
[337.20898438 -207.72315979]
[321.78698730 -205.53240967]
[312.64819336 -193.63777161]
[303.50936890 -181.74314880]
[294.63848877 -169.64738464]
[286.03991699 -157.35655212]
[277.44134521 -145.06571960]
[268.84280396 -132.77487183]
[260.24423218 -120.48403931]
[251.64567566 -108.19319916]
[243.04710388 -95.90236664]
[253.48777771 -84.50864410]
[261.14215088 -71.07546997]
[265.62561035 -56.27161789]
[266.71145630 -40.83491135]
[264.34240723 -25.53542900]
[258.63366699 -11.13708305]
[249.86717224 1.64050603]
[238.47784424 12.15798664]
[225.03190613 19.88826180]
[210.19879150 24.44291115]
[194.71774292 25.59169960]
[179.36103821 23.27421761]
[164.89544678 17.60305023]
[156.48083496 30.02054405]
[148.06620789 42.43804169]
[139.65159607 54.85553741]
[131.23696899 67.27303314]
[140.54916382 79.93588257]
[144.96675110 95.02062988]
[143.95651245 110.70642853]
[137.64039612 125.09987640]
[126.78079224 136.46357727]
[112.68853760 143.42584229]
[97.06468201 145.14628601]
[81.79514313 141.41722107]
[73.56633759 153.95861816]
[65.33753204 166.50001526]
[64.23603821 182.28283691]
[50.78491592 188.67944336]
[42.55610657 201.22084045]
[34.32729721 213.76223755]
[26.09849167 226.30364990]
[17.86968422 238.84504700]
[9.64087582 251.38644409]
[1.69419098 264.10848999]
[-5.96640635 277.00479126]
[-13.62700367 289.90112305]
[-1.90190268 299.29623413]
[8.40148735 310.23181152]
[17.08260727 322.49493408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 207]
[41 206]
[42 205]
[46 204]
[47 203]
[48 202]
[49 201]
[50 200]
[51 199]
[53 197]
[54 196]
[55 195]
[64 187]
[65 186]
[66 185]
[67 184]
[68 183]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 165]
[88 164]
[92 163]
[93 162]
[94 161]
[97 158]
[98 157]
[99 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
