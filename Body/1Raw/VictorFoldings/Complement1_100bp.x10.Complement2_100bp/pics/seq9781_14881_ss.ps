%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[160.65937805 420.03582764]
[173.66354370 412.30618286]
[170.34127808 397.67874146]
[167.01902771 383.05126953]
[163.69676208 368.42379761]
[153.33273315 357.72631836]
[157.82135010 342.55520630]
[154.49909973 327.92773438]
[151.17683411 313.30029297]
[147.85458374 298.67282104]
[135.70610046 297.23312378]
[124.56287384 292.12573242]
[115.50583649 283.82955933]
[109.41857910 273.13360596]
[106.90120697 261.06207275]
[108.21115875 248.77601624]
[113.23703003 237.46194458]
[121.50780487 228.21708679]
[132.23703003 221.94302368]
[129.57122803 207.18180847]
[126.90544128 192.42059326]
[124.23963928 177.65937805]
[119.83864594 163.31953430]
[113.76480865 149.60426331]
[101.53664398 141.10006714]
[103.02325439 125.34886169]
[96.94942474 111.63359833]
[90.67206573 98.01027679]
[84.19256592 84.48193359]
[77.71307373 70.95359039]
[71.23357391 57.42524338]
[58.29417419 48.32126236]
[59.77461243 33.50041580]
[53.29511642 19.97206879]
[48.06525040 15.92731380]
[45.97667313 10.64196873]
[46.83083344 5.94309092]
[40.75699997 -7.77217579]
[34.68316650 -21.48744202]
[19.71238899 -19.54944038]
[4.81713724 -21.90607643]
[-8.79677963 -28.35792351]
[-20.02971649 -38.37437820]
[-27.97701645 -51.13731003]
[-32.00186539 -65.60785675]
[-31.78631783 -80.61100006]
[-27.35638618 -94.93096924]
[-19.07925034 -107.40975952]
[-7.63283300 -117.04079437]
[-13.70666695 -130.75605774]
[-17.30333519 -133.18875122]
[-19.69796944 -136.32406616]
[-20.81728363 -139.69787598]
[-20.74625969 -142.86987305]
[-19.70665741 -145.47320557]
[-24.95337677 -159.52568054]
[-30.20009422 -173.57815552]
[-35.44681168 -187.63061523]
[-40.69353104 -201.68309021]
[-57.56177521 -202.02105713]
[-72.97268677 -208.79719543]
[-84.57348633 -220.94615173]
[-90.60494995 -236.58467102]
[-90.16814423 -253.30351257]
[-83.35832214 -268.53860474]
[-71.24595642 -279.96429443]
[-76.90873718 -293.85430908]
[-82.57152557 -307.74435425]
[-88.23431396 -321.63436890]
[-102.76541138 -317.82620239]
[-117.66926575 -315.94732666]
[-132.69085693 -316.02996826]
[-147.57313538 -318.07263184]
[-162.06146240 -322.04043579]
[-175.90792847 -327.86544800]
[-188.87556458 -335.44799805]
[-200.74252319 -344.65835571]
[-211.30570984 -355.33889771]
[-220.38439941 -367.30685425]
[-227.82322693 -380.35748291]
[-233.49491882 -394.26745605]
[-237.30239868 -408.79873657]
[-239.18055725 -423.70266724]
[-239.09721375 -438.72427368]
[-237.05381775 -453.60644531]
[-233.08534241 -468.09457397]
[-227.25967407 -481.94076538]
[-219.67649841 -494.90805054]
[-210.46559143 -506.77456665]
[-199.78454590 -517.33721924]
[-187.81613159 -526.41534424]
[-174.76515198 -533.85357666]
[-160.85491943 -539.52459717]
[-146.32345581 -543.33142090]
[-131.41943359 -545.20880127]
[-116.39784241 -545.12475586]
[-101.51575470 -543.08068848]
[-87.02780151 -539.11151123]
[-73.18190765 -533.28515625]
[-60.21497726 -525.70141602]
[-48.34890366 -516.48992920]
[-37.78672791 -505.80834961]
[-28.70918274 -493.83950806]
[-21.27159691 -480.78817749]
[-15.60123444 -466.87768555]
[-11.79512691 -452.34603882]
[-9.91839886 -437.44192505]
[-10.00316525 -422.42034912]
[-12.04797459 -407.53836060]
[-16.01783752 -393.05059814]
[-21.84482574 -379.20495605]
[-29.42923164 -366.23840332]
[-38.64127350 -354.37277222]
[-49.32332230 -343.81109619]
[-61.29259872 -334.73413086]
[-74.34428406 -327.29714966]
[-68.68149567 -313.40713501]
[-63.01871109 -299.51708984]
[-57.35592651 -285.62707520]
[-44.11981583 -286.40097046]
[-31.26723862 -283.05291748]
[-20.05249405 -275.89517212]
[-11.57450771 -265.61245728]
[-6.66914988 -253.19653320]
[-5.82684422 -239.85047913]
[-9.14357090 -226.87219238]
[-16.31016159 -215.52815247]
[-26.64105988 -206.92980957]
[-21.39434052 -192.87733459]
[-16.14762306 -178.82485962]
[-10.90090466 -164.77239990]
[-5.65418673 -150.71992493]
[0.00859970 -136.82989502]
[6.08243370 -123.11463165]
[20.90690613 -125.11771393]
[35.71009445 -122.86008453]
[49.29102707 -116.51626587]
[60.54545212 -106.59262848]
[68.55563354 -93.88699341]
[72.66516876 -79.42449951]
[72.53279114 -64.37488556]
[68.16068268 -49.95789337]
[59.89498520 -37.34438705]
[48.39843369 -27.56127548]
[54.47226715 -13.84600925]
[60.54610062 -0.13074285]
[66.82346344 13.49257374]
[73.30295563 27.02091980]
[85.77890015 35.15726089]
[84.76192474 50.94574738]
[91.24141693 64.47409058]
[97.72090912 78.00244141]
[104.20040894 91.53078461]
[108.62470245 94.34851837]
[111.15532684 99.44451904]
[110.66468811 105.55976105]
[116.73852539 119.27503204]
[129.40112305 128.76022339]
[127.48007965 143.53042603]
[133.55390930 157.24569702]
[134.87480164 142.30397034]
[141.16366577 128.68594360]
[151.68165588 117.99147797]
[165.19316101 111.47692108]
[180.11083984 109.90761566]
[194.68218994 113.46790314]
[207.19538879 121.73954010]
[216.18038940 133.75077820]
[220.58163452 148.09054565]
[219.88209534 163.07421875]
[214.16394043 176.94154358]
[204.09892273 188.06338501]
[190.86947632 195.13317871]
[176.02978516 197.32035828]
[161.32321167 194.36796570]
[148.47746277 186.62287903]
[139.00085449 174.99357605]
[141.66665649 189.75479126]
[144.33244324 204.51602173]
[146.99824524 219.27723694]
[164.43298340 223.58926392]
[178.18327332 235.06065369]
[185.50712585 251.34344482]
[184.97050476 269.13641357]
[176.72796631 284.85440063]
[162.48204041 295.35055542]
[165.80429077 309.97802734]
[169.12655640 324.60546875]
[172.44882202 339.23294067]
[183.05047607 350.97668457]
[178.32421875 365.10156250]
[181.64648438 379.72900391]
[184.96873474 394.35647583]
[188.29100037 408.98391724]
[203.35824585 410.33782959]
[217.26889038 416.28338623]
[228.66006470 426.23809814]
[236.41581726 439.22668457]
[239.77630615 453.97668457]
[238.41229248 469.04302979]
[232.45742798 482.94964600]
[222.49510193 494.33416748]
[209.50131226 502.08120728]
[194.74906921 505.43182373]
[179.68365479 504.05770874]
[165.78099060 498.09353638]
[154.40316772 488.12356567]
[146.66482544 475.12460327]
[143.32411194 460.37011719]
[144.70831299 445.30563354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[7 189]
[8 188]
[9 187]
[10 186]
[19 180]
[20 179]
[21 178]
[22 177]
[23 160]
[24 159]
[26 157]
[27 156]
[28 153]
[29 152]
[30 151]
[31 150]
[33 148]
[34 147]
[37 146]
[38 145]
[39 144]
[49 134]
[50 133]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[66 119]
[67 118]
[68 117]
[69 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
