%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[75.51805878 815.72564697]
[60.53041458 815.05572510]
[45.58879089 813.70434570]
[30.72415924 811.67431641]
[15.96732807 808.96984863]
[1.34888387 805.59649658]
[-13.10087490 801.56134033]
[-27.35199928 796.87268066]
[-41.37495041 791.54022217]
[-55.14066315 785.57501221]
[-68.62061310 778.98944092]
[-81.78684998 771.79724121]
[-94.61208344 764.01318359]
[-107.06974792 755.65344238]
[-119.13400269 746.73535156]
[-130.77986145 737.27746582]
[-141.98316956 727.29925537]
[-152.72071838 716.82147217]
[-162.97024536 705.86590576]
[-172.71051025 694.45513916]
[-181.92132568 682.61285400]
[-190.58358765 670.36364746]
[-198.67936707 657.73284912]
[-206.19186401 644.74670410]
[-213.10551453 631.43206787]
[-219.40599060 617.81652832]
[-225.08024597 603.92834473]
[-230.11648560 589.79632568]
[-234.50430298 575.44970703]
[-238.23458862 560.91827393]
[-241.29960632 546.23205566]
[-243.69302368 531.42156982]
[-245.40985107 516.51751709]
[-246.44656372 501.55081177]
[-246.80097961 486.55236816]
[-246.47239685 471.55337524]
[-245.46147156 456.58486938]
[-243.77030945 441.67785645]
[-241.40240479 426.86331177]
[-238.36268616 412.17187500]
[-234.65744019 397.63400269]
[-230.29434204 383.27984619]
[-225.28244019 369.13916016]
[-219.63212585 355.24124146]
[-213.35511780 341.61489868]
[-206.46440125 328.28836060]
[-198.97428894 315.28927612]
[-190.90026855 302.64456177]
[-182.25910950 290.38043213]
[-173.06871033 278.52233887]
[-163.34811401 267.09481812]
[-153.11747742 256.12155151]
[-142.39799500 245.62532043]
[-131.21188354 235.62785339]
[-119.58233643 226.14988708]
[-107.53345490 217.21104431]
[-95.09021759 208.82987976]
[-82.27840424 201.02374268]
[-69.12457275 193.80882263]
[-55.65599060 187.20007324]
[-41.90057373 181.21118164]
[-27.88682747 175.85458374]
[-13.64379978 171.14135742]
[0.79898703 167.08128357]
[15.41160011 163.68278503]
[30.16374969 160.95288086]
[45.02486420 158.89726257]
[59.96413803 157.52015686]
[74.95060730 156.82444763]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[80.21845245 40.25842667]
[65.69950867 36.43322372]
[51.66941071 31.08639526]
[38.28714371 24.27852821]
[25.70433807 16.08675766]
[14.06356430 6.60390711]
[3.49672151 -4.06257868]
[-5.87646008 -15.79183960]
[-13.94977474 -28.45097351]
[-20.63174629 -41.89654541]
[-25.84666061 -55.97620010]
[-29.53543091 -70.53041077]
[-31.65626144 -85.39427185]
[-32.18511963 -100.39934540]
[-31.11601257 -115.37563324]
[-28.46105576 -130.15342712]
[-24.25032997 -144.56529236]
[-18.53154945 -158.44793701]
[-11.36950874 -171.64404297]
[-2.84536052 -184.00410461]
[6.94430923 -195.38806152]
[17.88857651 -205.66691589]
[29.86343575 -214.72422791]
[42.73320007 -222.45735168]
[56.35204697 -228.77867126]
[70.56566620 -233.61656189]
[85.21300507 -236.91621399]
[100.12808990 -238.64021301]
[115.14193726 -238.76905823]
[130.08441162 -237.30126953]
[144.78622437 -234.25347900]
[159.08076477 -229.66021729]
[172.80609131 -223.57354736]
[185.80667114 -216.06240845]
[197.93519592 -207.21194458]
[209.05424500 -197.12240601]
[219.03784180 -185.90812683]
[227.77284241 -173.69616699]
[235.16029358 -160.62492371]
[241.11647034 -146.84246826]
[245.57389832 -132.50498962]
[248.48207092 -117.77492523]
[249.80802917 -102.81919098]
[249.53675842 -87.80724335]
[247.67132568 -72.90918732]
[244.23286438 -58.29381180]
[239.26034546 -44.12673569]
[232.81008911 -30.56847382]
[224.95521545 -17.77265549]
[215.78469849 -5.88426781]
[205.40246582 4.96198654]
[193.92613220 14.64321136]
[181.48576355 23.04970932]
[168.22230530 30.08622932]
[154.28602600 35.67304230]
[139.83486938 39.74684525]
[125.03254700 42.26147842]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[119.87987518 158.83264160]
[134.74452209 160.86260986]
[149.50135803 163.56703186]
[164.11981201 166.94030762]
[178.56959534 170.97543335]
[192.82073975 175.66406250]
[206.84370422 180.99647522]
[220.60945129 186.96159363]
[234.08941650 193.54708862]
[247.25567627 200.73928833]
[260.08096313 208.52330017]
[272.53863525 216.88296509]
[284.60293579 225.80099487]
[296.24884033 235.25886536]
[307.45217896 245.23701477]
[318.18975830 255.71472168]
[328.43933105 266.67028809]
[338.17965698 278.08102417]
[347.39050293 289.92324829]
[356.05282593 302.17242432]
[364.14865112 314.80319214]
[371.66119385 327.78933716]
[378.57492065 341.10394287]
[384.87542725 354.71942139]
[390.54974365 368.60757446]
[395.58602905 382.73959351]
[399.97390747 397.08618164]
[403.70425415 411.61764526]
[406.76934814 426.30380249]
[409.16281128 441.11425781]
[410.87969971 456.01831055]
[411.91647339 470.98504639]
[412.27093506 485.98345947]
[411.94241333 500.98248291]
[410.93154907 515.95098877]
[409.24044800 530.85797119]
[406.87261963 545.67254639]
[403.83294678 560.36401367]
[400.12774658 574.90191650]
[395.76470947 589.25604248]
[390.75286865 603.39678955]
[385.10260010 617.29473877]
[378.82565308 630.92108154]
[371.93499756 644.24768066]
[364.44491577 657.24676514]
[356.37097168 669.89154053]
[347.72985840 682.15563965]
[338.53948975 694.01379395]
[328.81893921 705.44140625]
[318.58834839 716.41467285]
[307.86889648 726.91094971]
[296.68283081 736.90844727]
[285.05334473 746.38647461]
[273.00448608 755.32537842]
[260.56127930 763.70660400]
[247.74949646 771.51275635]
[234.59570312 778.72772217]
[221.12713623 785.33654785]
[207.37174988 791.32550049]
[193.35801697 796.68212891]
[179.11502075 801.39544678]
[164.67224121 805.45556641]
[150.05964661 808.85412598]
[135.30751038 811.58404541]
[120.44639587 813.63977051]
[105.50713348 815.01690674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 144]
[71 143]
[72 142]
[73 141]
[75 139]
[76 138]
[77 137]
[78 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
