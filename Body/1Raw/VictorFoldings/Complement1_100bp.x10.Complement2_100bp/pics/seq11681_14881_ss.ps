%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[202.88430786 350.95843506]
[204.35122681 336.01977539]
[207.17051697 321.27642822]
[211.31883240 306.85052490]
[216.76179504 292.86160278]
[223.45429993 279.42562866]
[231.34088135 266.65390015]
[240.35620117 254.65226746]
[250.42553711 243.52017212]
[240.26199341 232.48829651]
[230.09844971 221.45640564]
[219.93489075 210.42453003]
[209.77134705 199.39265442]
[198.89201355 189.06599426]
[187.34571838 179.49087524]
[175.79940796 169.91575623]
[164.18214417 160.42684937]
[152.49456787 151.02470398]
[140.80699158 141.62254333]
[123.34557343 139.87158203]
[116.83418274 122.64709473]
[105.00791168 113.41999054]
[91.18876648 111.29325867]
[85.76499176 98.40627289]
[70.12516785 96.01746368]
[64.85028076 82.08818817]
[53.02400970 72.86109161]
[41.19773865 63.63399124]
[25.55791283 61.24518204]
[20.28302383 47.31590271]
[8.45675468 38.08880234]
[-3.36951518 28.86170387]
[-15.19578457 19.63460541]
[-33.48672104 17.50782013]
[-39.43182373 0.99653059]
[-51.39416122 -8.05346966]
[-63.35649872 -17.10346985]
[-73.36894226 -5.92265797]
[-84.27049255 4.39313745]
[-95.98669434 13.77344894]
[-108.43750000 22.15419769]
[-121.53786469 29.47813416]
[-135.19828796 35.69522858]
[-149.32546997 40.76300812]
[-163.82289124 44.64685822]
[-178.59152222 47.32024765]
[-193.53048706 48.76491165]
[-208.53771973 48.97098160]
[-223.51071167 47.93704987]
[-238.34718323 45.67018509]
[-252.94577026 42.18586349]
[-267.20678711 37.50789261]
[-281.03274536 31.66822433]
[-294.32928467 24.70675468]
[-307.00549316 16.67103386]
[-318.97485352 7.61595917]
[-330.15554810 -2.39661598]
[-340.47119141 -13.29829407]
[-349.85137939 -25.01460266]
[-358.23196411 -37.46551132]
[-365.55575562 -50.56595993]
[-371.77267456 -64.22646332]
[-376.84030151 -78.35369873]
[-380.72396851 -92.85116577]
[-383.39718628 -107.61983490]
[-384.84167480 -122.55880737]
[-385.04757690 -137.56604004]
[-384.01345825 -152.53903198]
[-381.74642944 -167.37547302]
[-378.26193237 -181.97402954]
[-373.58377075 -196.23497009]
[-367.74395752 -210.06088257]
[-360.78231812 -223.35731506]
[-352.74645996 -236.03344727]
[-343.69122314 -248.00268555]
[-333.67852783 -259.18325806]
[-322.77673340 -269.49877930]
[-311.06030273 -278.87881470]
[-298.60928345 -287.25927734]
[-285.50875854 -294.58291626]
[-271.84817505 -300.79968262]
[-257.72088623 -305.86712646]
[-243.22337341 -309.75061035]
[-228.45466614 -312.42364502]
[-213.51568604 -313.86795044]
[-198.50843811 -314.07366943]
[-183.53547668 -313.03939819]
[-168.69905090 -310.77215576]
[-154.10054016 -307.28750610]
[-139.83966064 -302.60919189]
[-126.01380920 -296.76919556]
[-112.71745300 -289.80740356]
[-100.04141998 -281.77139282]
[-88.07228851 -272.71603394]
[-76.89183807 -262.70318604]
[-66.57643127 -251.80125427]
[-57.19654083 -240.08471680]
[-48.81623459 -227.63362122]
[-41.49276733 -214.53298950]
[-35.27616119 -200.87234497]
[-30.20888519 -186.74497986]
[-26.32555389 -172.24742126]
[-23.65269470 -157.47869873]
[-22.20856476 -142.53968811]
[-22.00303078 -127.53244019]
[-23.03749657 -112.55948639]
[-25.30489540 -97.72309875]
[-28.78973770 -83.12462616]
[-33.46821976 -68.86379242]
[-39.30838013 -55.03801727]
[-46.27032471 -41.74174500]
[-54.30649948 -29.06580544]
[-42.34416199 -20.01580620]
[-30.38182449 -10.96580601]
[-18.36079216 -12.31537533]
[-8.32070637 -4.87357235]
[-5.96868658 7.80833626]
[5.85758305 17.03543472]
[17.68385315 26.26253319]
[29.51012230 35.48963165]
[44.30405426 37.21845627]
[50.42483521 51.80772018]
[62.25110626 61.03481674]
[74.07737732 70.26191711]
[88.87130737 71.99074554]
[94.99208832 86.58000946]
[108.81123352 88.70674133]
[114.23500824 101.59372711]
[126.06127930 110.82082367]
[138.93443298 110.01790619]
[148.59460449 117.94664764]
[150.20913696 129.93496704]
[161.89671326 139.33711243]
[173.58430481 148.73927307]
[182.23242188 151.67997742]
[185.37452698 158.36944580]
[196.92083740 167.94456482]
[208.46713257 177.51968384]
[205.36486816 162.84399414]
[210.58970642 148.78337097]
[222.52264404 139.69464111]
[237.46615601 138.39407349]
[250.78982544 145.28463745]
[258.36517334 158.23123169]
[257.84487915 173.22219849]
[249.39018250 185.61244202]
[235.62084961 191.56269836]
[220.80322266 189.22911072]
[230.96678162 200.26098633]
[241.13032532 211.29286194]
[251.29386902 222.32473755]
[261.45742798 233.35661316]
[273.37585449 224.23161316]
[286.07473755 216.22822571]
[299.44876099 209.41276550]
[313.38714600 203.84173584]
[327.77441406 199.56129456]
[342.49130249 196.60688782]
[357.41586304 195.00302124]
[372.42443848 194.76296997]
[387.39266968 195.88874817]
[402.19653320 198.37098694]
[416.71328735 202.18916321]
[430.82272339 207.31159973]
[444.40786743 213.69586182]
[457.35617065 221.28906250]
[469.56036377 230.02825928]
[480.91925049 239.84103394]
[491.33874512 250.64610291]
[500.73251343 262.35388184]
[509.02270508 274.86740112]
[516.14062500 288.08294678]
[522.02728271 301.89102173]
[526.63385010 316.17715454]
[529.92230225 330.82302856]
[531.86523438 345.70727539]
[532.44665527 360.70651245]
[531.66162109 375.69647217]
[529.51678467 390.55294800]
[526.02984619 405.15283203]
[521.22967529 419.37512207]
[515.15606689 433.10198975]
[507.85937500 446.21966553]
[499.40005493 458.61947632]
[489.84820557 470.19863892]
[479.28295898 480.86123657]
[467.79190063 490.51889038]
[455.47018433 499.09158325]
[442.41998291 506.50827026]
[428.74938965 512.70751953]
[414.57171631 517.63787842]
[400.00445557 521.25860596]
[385.16827393 523.53961182]
[370.18612671 524.46209717]
[355.18218994 524.01824951]
[340.28076172 522.21191406]
[325.60534668 519.05798340]
[311.27755737 514.58258057]
[297.41607666 508.82281494]
[284.13580322 501.82641602]
[271.54678345 493.65133667]
[259.75332642 484.36535645]
[248.85316467 474.04537964]
[238.93661499 462.77697754]
[230.08584595 450.65347290]
[222.37422180 437.77536011]
[215.86561584 424.24932861]
[210.61399841 410.18746948]
[206.66284180 395.70632935]
[204.04492188 380.92587280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[14 138]
[15 137]
[16 136]
[17 134]
[18 133]
[19 132]
[21 129]
[22 128]
[24 126]
[26 124]
[27 123]
[28 122]
[30 120]
[31 119]
[32 118]
[33 117]
[35 114]
[36 113]
[37 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
