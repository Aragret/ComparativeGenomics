%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[132.97718811 770.85449219]
[119.10568237 765.13104248]
[105.65709686 758.47424316]
[92.69414520 750.91528320]
[80.27725220 742.48925781]
[68.46432495 733.23553467]
[57.31043243 723.19720459]
[46.86758423 712.42114258]
[37.18446732 700.95758057]
[28.30623245 688.85992432]
[20.27427292 676.18457031]
[13.12603760 662.99066162]
[6.89485455 649.33966064]
[1.60977805 635.29528809]
[-2.70455122 620.92297363]
[-6.02801704 606.28973389]
[-8.34512424 591.46380615]
[-9.64506912 576.51434326]
[-9.92179108 561.51098633]
[-9.17399883 546.52374268]
[-7.40518045 531.62249756]
[-4.62358189 516.87664795]
[-0.84217256 502.35501099]
[3.92141628 488.12530518]
[9.64497471 474.25384521]
[16.30181694 460.80529785]
[23.86090469 447.84237671]
[32.28699493 435.42556763]
[41.54079819 423.61270142]
[51.57917023 412.45886230]
[62.35531235 402.01608276]
[73.81896973 392.33303833]
[85.91670227 383.45489502]
[98.59210205 375.42303467]
[111.78606415 368.27487183]
[125.43708038 362.04379272]
[139.48150635 356.75878906]
[153.85383606 352.44458008]
[150.53158569 337.81710815]
[140.16755676 327.11962891]
[144.65617371 311.94848633]
[141.33392334 297.32104492]
[130.96989441 286.62353516]
[135.45851135 271.45242310]
[122.85929871 259.23660278]
[128.45184326 241.69223022]
[124.91216278 227.11584473]
[112.13246918 215.08894348]
[117.46318054 197.46325684]
[106.78524780 187.07908630]
[110.82017517 171.78105164]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.71087646 75.59896088]
[81.52386475 61.19518280]
[77.33685303 46.79140091]
[73.14984131 32.38761902]
[68.85571289 18.01540565]
[64.13558197 3.77741575]
[59.09866714 -10.35161400]
[54.06174850 -24.48064423]
[49.23396301 -10.27879524]
[37.56103897 -0.85845292]
[22.65996170 0.86138892]
[9.14798832 -5.65218163]
[1.21195424 -18.38086510]
[1.31092429 -33.38053894]
[9.41423225 -46.00339127]
[23.01097870 -52.33809280]
[37.88806534 -50.42177200]
[49.43581009 -40.84800339]
[46.33169937 -55.52330399]
[43.22758865 -70.19860840]
[32.80195618 -82.09889221]
[37.73798370 -96.15182495]
[34.63387299 -110.82712555]
[31.52976227 -125.50242615]
[28.42565155 -140.17773438]
[13.38619041 -139.81820679]
[-1.46321940 -142.22853088]
[-15.61681366 -147.32661438]
[-28.59252548 -154.93881226]
[-39.94840622 -164.80584717]
[-49.29768372 -176.59167480]
[-56.32191467 -189.89486694]
[-60.78186798 -204.26231384]
[-62.52563095 -219.20466614]
[-61.49381638 -234.21299744]
[-57.72156906 -248.77612305]
[-51.33736038 -262.39804077]
[-42.55864716 -274.61477661]
[-31.68441963 -285.01025391]
[-19.08505440 -293.23037720]
[-5.18967867 -298.99520874]
[9.52843475 -302.10836792]
[24.56799126 -302.46386719]
[39.41675186 -300.04953003]
[53.56896973 -294.94763184]
[66.54263306 -287.33193970]
[77.89585114 -277.46182251]
[87.24195099 -265.67349243]
[94.26259613 -252.36840820]
[98.71867371 -237.99975586]
[100.45841217 -223.05693054]
[99.42255402 -208.04888916]
[95.64637756 -193.48677063]
[89.25849915 -179.86657715]
[80.47649384 -167.65220642]
[69.59946442 -157.25965881]
[56.99788284 -149.04292297]
[43.10095596 -143.28184509]
[46.20506287 -128.60653687]
[49.30917358 -113.93123627]
[52.41328430 -99.25593567]
[62.61688995 -88.40532684]
[57.90289307 -73.30271912]
[61.00700378 -58.62741470]
[64.11111450 -43.95211411]
[68.19078064 -29.51755905]
[73.22769165 -15.38852978]
[78.26461029 -1.25950050]
[81.27640533 0.57391626]
[83.54980469 3.95721459]
[84.36602783 8.52745342]
[83.19556427 13.61440659]
[88.16321564 19.08654022]
[87.55361938 28.20060730]
[91.74063110 42.60438919]
[95.92764282 57.00817108]
[100.11465454 71.41194916]
[103.79440308 74.45637512]
[105.60073090 79.84471130]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[125.34223175 168.02474976]
[136.28884888 179.44763184]
[131.98522949 193.70695496]
[142.68251038 200.91328430]
[145.51217651 213.08607483]
[139.48854065 223.57617188]
[143.02821350 238.15255737]
[153.61700439 245.51733398]
[156.26512146 257.73089600]
[150.08598328 268.13015747]
[160.68763733 279.87390137]
[155.96138000 293.99877930]
[159.28364563 308.62625122]
[169.88529968 320.36999512]
[165.15904236 334.49484253]
[168.48130798 349.12231445]
[183.30717468 346.80490112]
[198.25662231 345.50466919]
[213.25994873 345.22763062]
[228.24722290 345.97512817]
[243.14852905 347.74365234]
[257.89440918 350.52493286]
[272.41610718 354.30606079]
[286.64593506 359.06936646]
[300.51751709 364.79263306]
[313.96618652 371.44921875]
[326.92926025 379.00805664]
[339.34625244 387.43386841]
[351.15930176 396.68743896]
[362.31332397 406.72558594]
[372.75631714 417.50152588]
[382.43960571 428.96499634]
[391.31799316 441.06256104]
[399.35012817 453.73779297]
[406.49853516 466.93161011]
[412.72988892 480.58248901]
[418.01516724 494.62680054]
[422.32968140 508.99905396]
[425.65335083 523.63226318]
[427.97064209 538.45812988]
[429.27081299 553.40759277]
[429.54772949 568.41094971]
[428.80014038 583.39819336]
[427.03152466 598.29949951]
[424.25012207 613.04534912]
[420.46890259 627.56701660]
[415.70550537 641.79681396]
[409.98211670 655.66833496]
[403.32546997 669.11700439]
[395.76654053 682.08001709]
[387.34063721 694.49694824]
[378.08697510 706.30993652]
[368.04876709 717.46386719]
[357.27276611 727.90679932]
[345.80923462 737.59002686]
[333.71160889 746.46832275]
[321.03631592 754.50036621]
[307.84246826 761.64868164]
[294.19152832 767.87994385]
[280.14718628 773.16510010]
[265.77490234 777.47955322]
[251.14169312 780.80310059]
[236.31579590 783.12030029]
[221.36631775 784.42034912]
[206.36297607 784.69720459]
[191.37573242 783.94952393]
[176.47444153 782.18078613]
[161.72859192 779.39929199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 158]
[39 157]
[41 155]
[42 154]
[44 152]
[46 149]
[47 148]
[49 145]
[51 143]
[52 142]
[53 141]
[54 140]
[55 139]
[57 137]
[58 134]
[59 133]
[60 132]
[61 131]
[62 129]
[63 125]
[64 124]
[65 123]
[75 122]
[76 121]
[77 120]
[79 118]
[80 117]
[81 116]
[82 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
