%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[74.20227814 230.17448425]
[78.58015442 215.80654907]
[84.72432709 202.10063171]
[92.53791046 189.27287292]
[101.89765930 177.52560425]
[112.65596008 167.04409790]
[124.64315033 157.99363708]
[117.17540741 144.98469543]
[109.70766449 131.97573853]
[102.23992157 118.96678925]
[88.28125000 115.08068848]
[81.06764984 102.51445770]
[84.75112152 88.50095367]
[77.28338623 75.49200439]
[63.70269775 67.37562561]
[64.07671356 52.48571777]
[56.60897064 39.47676468]
[49.14122772 26.46781349]
[35.81032944 33.34982681]
[22.18609238 39.63116074]
[8.29556656 45.29934311]
[-5.83366966 50.34311676]
[-20.17356491 54.75246811]
[-34.69564819 58.51864624]
[-49.37108612 61.63417053]
[-64.17074585 64.09285736]
[-79.06523132 65.88982391]
[-94.02498627 67.02150726]
[-109.02030945 67.48564911]
[-124.02141571 67.28134155]
[-138.99853516 66.40898132]
[-153.92192078 64.87030029]
[-168.76194763 62.66835785]
[-183.48915100 59.80752563]
[-198.07429504 56.29347992]
[-212.48841858 52.13320160]
[-226.70291138 47.33494949]
[-240.68954468 41.90824509]
[-254.42054749 35.86386871]
[-267.86865234 29.21381950]
[-281.00720215 21.97130013]
[-293.81005859 14.15068913]
[-306.25180054 5.76751375]
[-318.30776978 -3.16158080]
[-329.95401001 -12.61886787]
[-341.16738892 -22.58556938]
[-351.92562866 -33.04189682]
[-362.20742798 -43.96709442]
[-371.99230957 -55.33946609]
[-381.26089478 -67.13643646]
[-389.99475098 -79.33457947]
[-398.17654419 -91.90968323]
[-405.79003906 -104.83677673]
[-412.82009888 -118.09019470]
[-419.25280762 -131.64361572]
[-425.07534790 -145.47015381]
[-430.27618408 -159.54232788]
[-434.84497070 -173.83222961]
[-438.77267456 -188.31146240]
[-442.05148315 -202.95127869]
[-444.67483521 -217.72264099]
[-446.63760376 -232.59619141]
[-447.93585205 -247.54241943]
[-448.56698608 -262.53161621]
[-448.52975464 -277.53408813]
[-447.82427979 -292.51998901]
[-446.45193481 -307.45959473]
[-444.41540527 -322.32321167]
[-441.71878052 -337.08139038]
[-438.36743164 -351.70477295]
[-434.36795044 -366.16433716]
[-429.72830200 -380.43139648]
[-424.45773315 -394.47760010]
[-418.56668091 -408.27505493]
[-412.06683350 -421.79641724]
[-404.97109985 -435.01480103]
[-397.29357910 -447.90396118]
[-389.04949951 -460.43832397]
[-380.25524902 -472.59298706]
[-370.92825317 -484.34384155]
[-361.08706665 -495.66754150]
[-350.75122070 -506.54159546]
[-339.94122314 -516.94445801]
[-328.67855835 -526.85540771]
[-316.98553467 -536.25476074]
[-304.88543701 -545.12396240]
[-292.40225220 -553.44531250]
[-279.56076050 -561.20233154]
[-266.38647461 -568.37957764]
[-252.90553284 -574.96282959]
[-239.14471436 -580.93902588]
[-225.13133240 -586.29626465]
[-210.89321899 -591.02398682]
[-196.45863342 -595.11267090]
[-181.85623169 -598.55432129]
[-167.11502075 -601.34210205]
[-152.26425171 -603.47039795]
[-137.33340454 -604.93499756]
[-122.35214996 -605.73309326]
[-107.35021210 -605.86297607]
[-92.35738373 -605.32446289]
[-77.40342712 -604.11859131]
[-62.51803207 -602.24774170]
[-47.73075485 -599.71569824]
[-33.07094955 -596.52740479]
[-18.56772995 -592.68920898]
[-4.24988317 -588.20880127]
[9.85416031 -583.09497070]
[23.71639824 -577.35797119]
[37.30930710 -571.00915527]
[50.60590363 -564.06109619]
[63.57978439 -556.52758789]
[76.20519257 -548.42364502]
[88.45706177 -539.76531982]
[100.31107330 -530.56982422]
[111.74367523 -520.85534668]
[122.73218536 -510.64126587]
[133.25477600 -499.94781494]
[143.29057312 -488.79620361]
[152.81962585 -477.20861816]
[161.82302856 -465.20806885]
[170.28291321 -452.81832886]
[178.18246460 -440.06402588]
[185.50601196 -426.97052002]
[192.23902893 -413.56372070]
[198.36811829 -399.87033081]
[203.88111877 -385.91748047]
[208.76710510 -371.73291016]
[213.01634216 -357.34475708]
[216.62043762 -342.78161621]
[219.57218933 -328.07235718]
[221.86578369 -313.24621582]
[223.49662781 -298.33261108]
[224.46148682 -283.36117554]
[224.75846863 -268.36163330]
[224.38697815 -253.36372375]
[223.34774780 -238.39726257]
[221.64282227 -223.49194336]
[219.27561951 -208.67738342]
[216.25082397 -193.98298645]
[212.57443237 -179.43791199]
[208.25375366 -165.07104492]
[203.29736328 -150.91091919]
[197.71510315 -136.98564148]
[191.51806641 -123.32285309]
[184.71853638 -109.94969177]
[177.33003235 -96.89270782]
[169.36720276 -84.17781830]
[160.84588623 -71.83026886]
[151.78297424 -59.87457657]
[142.19645691 -48.33447647]
[132.10539246 -37.23287964]
[121.52980804 -26.59183311]
[110.49069214 -16.43245697]
[99.00997162 -6.77492619]
[87.11042786 2.36158729]
[74.81569672 10.95894337]
[62.15018082 19.00007248]
[69.61791992 32.00902557]
[77.08566284 45.01797867]
[90.13220215 52.20386505]
[90.29233551 68.02426147]
[97.76007843 81.03321075]
[111.71875000 84.91931152]
[118.93235016 97.48554230]
[115.24887848 111.49904633]
[122.71661377 124.50799561]
[130.18435669 137.51695251]
[137.65209961 150.52590942]
[151.51249695 144.73864746]
[165.98896790 140.73422241]
[180.85316467 138.57582092]
[195.87068176 138.29747009]
[210.80465698 139.90356445]
[225.41957092 143.36875916]
[239.48492432 148.63839722]
[252.77886963 155.62940979]
[265.09176636 164.23149109]
[276.22940063 174.30900574]
[286.01614380 185.70300293]
[294.29760742 198.23377991]
[300.94320679 211.70372009]
[305.84814453 225.90037537]
[308.93499756 240.59983826]
[310.15518188 255.57029724]
[309.48934937 270.57562256]
[306.94808960 285.37918091]
[302.57141113 299.74746704]
[296.42840576 313.45391846]
[288.61590576 326.28231812]
[279.25714111 338.03039551]
[268.49972534 348.51278687]
[256.51327515 357.56427002]
[243.48690796 365.04199219]
[229.62602234 370.82809448]
[215.14921570 374.83129883]
[200.28483582 376.98843384]
[185.26730347 377.26553345]
[170.33345032 375.65820312]
[155.71882629 372.19177246]
[141.65393066 366.92092896]
[128.36056519 359.92880249]
[116.04839325 351.32568359]
[104.91160583 341.24725342]
[95.12583160 329.85241699]
[86.84541321 317.32095337]
[80.20095062 303.85043335]
[75.29722595 289.65338135]
[72.21157837 274.95364380]
[70.99268341 259.98309326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 169]
[8 168]
[9 167]
[10 166]
[13 163]
[14 162]
[16 160]
[17 159]
[18 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
