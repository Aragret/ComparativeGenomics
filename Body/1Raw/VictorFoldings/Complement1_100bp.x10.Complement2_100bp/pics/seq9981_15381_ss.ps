%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[6.24848747 470.29690552]
[10.88544941 484.63549805]
[12.09011269 499.65701294]
[9.79751015 514.55133057]
[4.13127947 528.51519775]
[-4.60300636 540.79565430]
[-15.93431854 550.73034668]
[-29.25157356 557.78350830]
[-43.83658981 561.57482910]
[-58.90281296 561.89984131]
[-73.63774109 558.74090576]
[-87.24674225 552.26855469]
[-98.99589539 542.83166504]
[-108.25158691 530.93933105]
[-114.51467133 517.23272705]
[-117.44737244 502.45111084]
[-116.89155579 487.39163208]
[-112.87718201 472.86642456]
[-105.62074280 459.65881348]
[-95.51357269 448.48107910]
[-83.10073853 439.93600464]
[-69.05164337 434.48443604]
[-54.12394333 432.42034912]
[-39.12266541 433.85507202]
[-34.29666901 419.65261841]
[-29.47067070 405.45016479]
[-24.64467430 391.24771118]
[-19.81867599 377.04525757]
[-14.99267769 362.84280396]
[-16.21483803 359.53543091]
[-15.89576435 355.47177124]
[-13.69744873 351.38269043]
[-9.62106037 348.12228394]
[-4.16570330 334.14950562]
[1.28965354 320.17669678]
[6.74501038 306.20388794]
[12.20036793 292.23110962]
[17.65572548 278.25830078]
[15.07706356 263.58862305]
[27.30350304 253.54747009]
[32.75886154 239.57466125]
[31.69573593 234.91860962]
[33.54622650 229.54528809]
[38.59026718 225.27104187]
[44.45922852 211.46685791]
[50.32818985 197.66268921]
[56.19715118 183.85850525]
[62.06611252 170.05433655]
[56.27367401 156.38014221]
[62.02898788 142.29714966]
[76.41100311 136.31420898]
[82.27996063 122.51004028]
[73.41212463 110.66708374]
[71.63569641 95.97904968]
[77.42447662 82.36346436]
[89.23450470 73.45182037]
[103.91586304 71.62100220]
[109.78482056 57.81682205]
[97.37142944 66.23749542]
[82.54670715 68.52388763]
[68.17307281 64.23452759]
[57.02585220 54.19762421]
[51.25739288 40.35115051]
[51.98149872 25.36863708]
[59.05835724 12.14297771]
[71.12153625 3.22783780]
[85.84182739 0.34459195]
[100.37696838 4.04994965]
[111.92045593 13.62846375]
[118.24341583 27.23067474]
[118.12470245 42.23144913]
[126.35350800 29.69004822]
[134.58232117 17.14864922]
[142.81112671 4.60724783]
[151.03993225 -7.93415213]
[152.14143372 -23.71696854]
[165.59254456 -30.11357117]
[173.82136536 -42.65497208]
[182.05017090 -55.19637299]
[190.27897644 -67.73777008]
[198.50778198 -80.27917480]
[206.73658752 -92.82057190]
[214.96539307 -105.36197662]
[209.36389160 -125.63003540]
[220.38623047 -143.19145203]
[240.49539185 -146.85385132]
[247.96313477 -159.86279297]
[255.43087769 -172.87174988]
[262.89862061 -185.88070679]
[270.36636353 -198.88964844]
[277.83410645 -211.89860535]
[282.76568604 -226.06474304]
[284.99081421 -240.89878845]
[287.21591187 -255.73283386]
[289.44104004 -270.56686401]
[291.66616821 -285.40090942]
[293.89126587 -300.23495483]
[296.11639404 -315.06900024]
[282.17309570 -320.80032349]
[270.00698853 -329.70254517]
[260.32537842 -341.25805664]
[253.69114685 -354.79504395]
[250.48999023 -369.52651978]
[250.90803528 -384.59597778]
[254.92095947 -399.12731934]
[262.29547119 -412.27569580]
[272.60281372 -423.27670288]
[285.24374390 -431.49072266]
[299.48333740 -436.44024658]
[314.49368286 -437.83746338]
[329.40216064 -435.60119629]
[343.34197998 -429.86141968]
[355.50268555 -420.95184326]
[365.17730713 -409.39044189]
[371.80331421 -395.84942627]
[374.99554443 -381.11602783]
[374.56835938 -366.04684448]
[370.54663086 -351.51791382]
[363.16415405 -338.37402344]
[352.85012817 -327.37927246]
[340.20422363 -319.17288208]
[325.96163940 -314.23202515]
[310.95043945 -312.84387207]
[308.72531128 -298.00985718]
[306.50021362 -283.17581177]
[304.27508545 -268.34176636]
[302.04995728 -253.50770569]
[299.82485962 -238.67367554]
[297.59973145 -223.83963013]
[306.15982056 -236.15728760]
[317.29803467 -246.20419312]
[330.43008423 -253.45329285]
[344.86706543 -257.52432251]
[359.85168457 -258.20370483]
[374.59783936 -255.45582581]
[388.33200073 -249.42483521]
[400.33367920 -240.42707825]
[409.97329712 -228.93458557]
[416.74520874 -215.55021667]
[420.29415894 -200.97608948]
[420.43392944 -185.97674561]
[417.15725708 -171.33900452]
[410.63598633 -157.83074951]
[401.21224976 -146.16056824]
[389.38034058 -136.94068909]
[375.76098633 -130.65475464]
[361.06860352 -127.63250732]
[346.07394409 -128.03250122]
[331.56356812 -131.83372498]
[318.29870605 -138.83680725]
[306.97515869 -148.67436218]
[298.18698120 -160.83033752]
[292.39514160 -174.66705322]
[289.90350342 -189.45866394]
[290.84304810 -204.43086243]
[283.37530518 -191.42192078]
[275.90756226 -178.41296387]
[268.43981934 -165.40400696]
[260.97207642 -152.39505005]
[253.50433350 -139.38610840]
[258.60830688 -131.54646301]
[260.51812744 -122.32965851]
[258.93011475 -112.99324799]
[254.02084351 -104.82688904]
[246.42861938 -98.97412872]
[237.17060852 -96.27234650]
[227.50680542 -97.13316345]
[219.27798462 -84.59176636]
[211.04917908 -72.05036926]
[202.82037354 -59.50896454]
[194.59156799 -46.96756363]
[186.36276245 -34.42616272]
[178.13395691 -21.88476372]
[177.62103271 -6.99899292]
[163.58132935 0.29465553]
[155.35252380 12.83605576]
[147.12371826 25.37745667]
[138.89491272 37.91885757]
[130.66610718 50.46025848]
[123.58899689 63.68578339]
[117.72003937 77.48995972]
[126.58787537 89.33291626]
[128.36430359 104.02095032]
[122.57552338 117.63653564]
[110.76549530 126.54817963]
[96.08413696 128.37899780]
[90.21517944 142.18318176]
[95.88520813 156.69139099]
[89.73660278 170.60719299]
[75.87028503 175.92329407]
[70.00132751 189.72746277]
[64.13237000 203.53164673]
[58.26340485 217.33581543]
[52.39444351 231.13999939]
[46.73165894 245.03002930]
[41.27630234 259.00280762]
[43.46475983 274.67193604]
[31.62852287 283.71365356]
[26.17316628 297.68646240]
[20.71780777 311.65927124]
[15.26245117 325.63204956]
[9.80709457 339.60485840]
[4.35173702 353.57766724]
[-0.79022241 367.66879272]
[-5.61622000 381.87124634]
[-10.44221783 396.07369995]
[-15.26821518 410.27615356]
[-20.09421349 424.47860718]
[-24.92020988 438.68106079]
[-12.15045834 446.68295288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[33 203]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[40 196]
[41 195]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[51 187]
[52 186]
[57 181]
[58 180]
[71 179]
[72 178]
[73 177]
[74 176]
[75 175]
[77 173]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[91 155]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
