%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[306.99264526 232.73315430]
[298.51571655 245.10534668]
[289.30029297 256.93771362]
[279.38064575 268.18630981]
[268.79370117 278.80920410]
[257.57885742 288.76693726]
[245.77778625 298.02243042]
[233.43441772 306.54129028]
[220.59466553 314.29180908]
[207.30628967 321.24514771]
[193.61874390 327.37542725]
[179.58291626 332.65985107]
[165.25103760 337.07879639]
[150.67643738 340.61578369]
[135.91329956 343.25765991]
[121.01657104 344.99459839]
[106.04165649 345.82015991]
[91.04427338 345.73123169]
[76.08020020 344.72821045]
[61.20510864 342.81475830]
[46.47433853 339.99801636]
[31.94268608 336.28848267]
[17.66421127 331.69995117]
[3.69203067 326.24948120]
[-9.92187977 319.95733643]
[-23.12687492 312.84695435]
[-35.87383270 304.94476318]
[-48.11532974 296.28015137]
[-59.80583191 286.88537598]
[-70.90184784 276.79537964]
[-81.36209869 266.04769897]
[-91.14766693 254.68231201]
[-100.22216034 242.74150085]
[-108.55181885 230.26966858]
[-116.10565186 217.31323242]
[-122.85556030 203.92039490]
[-128.77642822 190.14096069]
[-133.84625244 176.02619934]
[-138.04614258 161.62861633]
[-141.36048889 147.00177002]
[-143.77696228 132.20007324]
[-145.28656006 117.27858734]
[-145.88369751 102.29282379]
[-145.56613159 87.29853821]
[-144.33503723 72.35150146]
[-142.19500732 57.50731277]
[-139.15399170 42.82120514]
[-135.22332764 28.34780312]
[-130.41760254 14.14095116]
[-124.75472260 0.25349957]
[-118.25573730 -13.26288891]
[-110.94483185 -26.35793304]
[-102.84919739 -38.98292160]
[-93.99895477 -51.09088135]
[-84.42702484 -62.63677979]
[-74.16902161 -73.57765961]
[-63.26309204 -83.87281799]
[-51.74981689 -93.48396301]
[-39.67202377 -102.37532806]
[-27.07464600 -110.51385498]
[-14.00454235 -117.86925507]
[-0.51033562 -124.41417694]
[13.35777473 -130.12425232]
[27.54820061 -134.97827148]
[42.00814819 -138.95814514]
[56.68383026 -142.04908752]
[71.52065277 -144.23959351]
[86.46341705 -145.52149963]
[101.45653534 -145.89007568]
[116.44424438 -145.34391785]
[131.37077332 -143.88507080]
[146.18060303 -141.51895142]
[160.81863403 -138.25436401]
[175.23042297 -134.10346985]
[189.36235046 -129.08169556]
[203.16183472 -123.20771790]
[216.57756042 -116.50339508]
[229.55961609 -108.99367523]
[242.05969238 -100.70648193]
[254.03131104 -91.67265320]
[265.42990112 -81.92578888]
[276.21310425 -71.50215149]
[286.34078979 -60.44052124]
[295.77526855 -48.78203964]
[304.48144531 -36.57007980]
[317.20349121 -44.51676559]
[329.92550659 -52.46345139]
[342.64755249 -60.41013336]
[355.36959839 -68.35681915]
[368.09161377 -76.30350494]
[380.81365967 -84.25019073]
[393.53570557 -92.19686890]
[386.43539429 -105.41609192]
[380.21484375 -119.07138824]
[374.90072632 -133.10429382]
[370.51577759 -147.45471191]
[367.07879639 -162.06120300]
[364.60449219 -176.86120605]
[363.10345459 -191.79133606]
[362.58209229 -206.78768921]
[363.04269409 -221.78602600]
[364.48321533 -236.72212219]
[366.89755249 -251.53202820]
[370.27532959 -266.15231323]
[374.60208130 -280.52038574]
[379.85928345 -294.57470703]
[386.02444458 -308.25509644]
[393.07113647 -321.50299072]
[400.96920776 -334.26162720]
[409.68481445 -346.47637939]
[419.18066406 -358.09494019]
[429.41607666 -369.06759644]
[440.34719849 -379.34732056]
[451.92727661 -388.89007568]
[464.10665894 -397.65502930]
[476.83322144 -405.60467529]
[490.05249023 -412.70489502]
[503.70782471 -418.92535400]
[517.74078369 -424.23941040]
[532.09118652 -428.62423706]
[546.69769287 -432.06115723]
[561.49774170 -434.53536987]
[576.42785645 -436.03631592]
[591.42425537 -436.55758667]
[606.42254639 -436.09692383]
[621.35864258 -434.65628052]
[636.16857910 -432.24188232]
[650.78881836 -428.86401367]
[665.15686035 -424.53717041]
[679.21118164 -419.27987671]
[692.89154053 -413.11465454]
[706.13934326 -406.06787109]
[718.89794922 -398.16973877]
[731.11267090 -389.45404053]
[742.73114014 -379.95812988]
[753.70373535 -369.72265625]
[763.98339844 -358.79147339]
[773.52612305 -347.21136475]
[782.29101562 -335.03192139]
[790.24053955 -322.30529785]
[797.34069824 -309.08599854]
[803.56109619 -295.43060303]
[808.87500000 -281.39764404]
[813.25976562 -267.04718018]
[816.69659424 -252.44064331]
[819.17071533 -237.64060974]
[820.67163086 -222.71044922]
[821.19274902 -207.71409607]
[820.73199463 -192.71577454]
[819.29132080 -177.77969360]
[816.87683105 -162.96980286]
[813.49884033 -148.34956360]
[809.17193604 -133.98153687]
[803.91455078 -119.92727661]
[797.74926758 -106.24696350]
[790.70239258 -92.99916840]
[782.80419922 -80.24062347]
[774.08843994 -68.02597046]
[764.59240723 -56.40750504]
[754.35687256 -45.43498993]
[743.42565918 -35.15540314]
[731.84545898 -25.61277008]
[719.66595459 -16.84794807]
[706.93933105 -8.89847469]
[693.71997070 -1.79838800]
[680.06457520 4.42190695]
[666.03155518 9.73577404]
[651.68103027 14.12045765]
[637.07452393 17.55718231]
[622.27447510 20.03123093]
[607.34429932 21.53201103]
[592.34796143 22.05309296]
[577.34960938 21.59224701]
[562.41351318 20.15144730]
[547.60369873 17.73686218]
[532.98345947 14.35883141]
[518.61547852 10.03182125]
[504.56121826 4.77436018]
[490.88095093 -1.39103806]
[477.63317871 -8.43797207]
[464.87469482 -16.33626556]
[452.66009521 -25.05209732]
[441.04168701 -34.54814529]
[430.06921387 -44.78374100]
[419.78970337 -55.71505737]
[410.24713135 -67.29528809]
[401.48239136 -79.47483826]
[388.76034546 -71.52815247]
[376.03829956 -63.58146667]
[363.31628418 -55.63478470]
[350.59423828 -47.68809891]
[337.87219238 -39.74141312]
[325.15017700 -31.79472923]
[312.42813110 -23.84804535]
[319.58328247 -10.66724110]
[325.92153931 2.92525053]
[331.41937256 16.87886620]
[336.05630493 31.14169693]
[339.81512451 45.66068268]
[342.68179321 60.38181686]
[344.64566040 75.25032806]
[345.69946289 90.21091461]
[345.83923340 105.20791626]
[345.06445312 120.18553925]
[343.37805176 135.08807373]
[340.78625488 149.86007690]
[337.29873657 164.44660950]
[332.92843628 178.79338074]
[327.69161987 192.84704590]
[321.60778809 206.55531311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 194]
[86 193]
[87 192]
[88 191]
[89 190]
[90 189]
[91 188]
[92 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
