%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[86.02122498 391.55380249]
[80.56409454 377.57165527]
[76.32914734 363.17211914]
[73.34774780 348.46182251]
[71.64196014 333.54968262]
[71.22441864 318.54611206]
[72.09820557 303.56219482]
[74.25686646 288.70886230]
[77.68441010 274.09606934]
[82.35545349 259.83203125]
[88.23542786 246.02235413]
[95.28079224 232.76925659]
[103.43938446 220.17089844]
[112.65079498 208.32052612]
[122.84683228 197.30587769]
[133.95201111 187.20852661]
[145.88409424 178.10321045]
[137.84292603 165.44068909]
[129.80174255 152.77816772]
[121.76057434 140.11564636]
[113.71939850 127.45311737]
[104.49230194 115.62684631]
[92.88918304 114.62242889]
[84.93431091 106.11588287]
[84.70897675 94.47154999]
[74.54543304 83.43967438]
[64.38188934 72.40779877]
[54.21833801 61.37591934]
[43.65129089 50.72990799]
[32.69538116 40.48451614]
[21.73947334 30.23912621]
[10.78356361 19.99373436]
[-0.17234616 9.74834347]
[-6.51510811 7.88262463]
[-10.38288975 3.71881747]
[-11.29615879 -0.96893066]
[-21.94216728 -11.53597832]
[-32.58817673 -22.10302544]
[-43.23418427 -32.67007446]
[-53.88019180 -43.23712158]
[-65.26553345 -33.45887375]
[-77.39176941 -24.61610794]
[-90.18223572 -16.76473427]
[-103.55606079 -9.95439148]
[-117.42870331 -4.22813797]
[-131.71244812 0.37782219]
[-146.31697083 3.83436894]
[-161.14996338 6.11964846]
[-176.11763000 7.21921253]
[-191.12535095 7.12610912]
[-206.07821655 5.84092617]
[-220.88171387 3.37179017]
[-235.44223022 -0.26568851]
[-249.66772461 -5.04851198]
[-263.46826172 -10.94644165]
[-276.75656128 -17.92218781]
[-289.44863892 -25.93164825]
[-301.46423340 -34.92418289]
[-312.72735596 -44.84293747]
[-323.16683960 -55.62520218]
[-332.71667480 -67.20280457]
[-341.31646729 -79.50254822]
[-348.91183472 -92.44667053]
[-355.45480347 -105.95333099]
[-360.90396118 -119.93714142]
[-365.22485352 -134.30967712]
[-368.39019775 -148.98008728]
[-370.37994385 -163.85559082]
[-371.18154907 -178.84217834]
[-370.78991699 -193.84506226]
[-369.20751953 -208.76940918]
[-366.44439697 -223.52085876]
[-362.51797485 -238.00613403]
[-357.45312500 -252.13368225]
[-351.28182983 -265.81414795]
[-344.04312134 -278.96105957]
[-335.78274536 -291.49127197]
[-326.55297852 -303.32559204]
[-316.41210938 -314.38919067]
[-305.42431641 -324.61212158]
[-293.65902710 -333.92974854]
[-281.19064331 -342.28317261]
[-268.09799194 -349.61953735]
[-254.46385193 -355.89251709]
[-240.37440491 -361.06240845]
[-225.91876221 -365.09655762]
[-211.18829346 -367.96942139]
[-196.27613831 -369.66287231]
[-181.27658081 -370.16616821]
[-166.28445435 -369.47616577]
[-151.39453125 -367.59719849]
[-136.70097351 -364.54116821]
[-122.29666138 -360.32739258]
[-108.27268219 -354.98248291]
[-94.71768188 -348.54028320]
[-81.71737671 -341.04147339]
[-69.35395050 -332.53347778]
[-57.70557785 -323.07009888]
[-46.84589386 -312.71118164]
[-36.84356689 -301.52218628]
[-27.76183319 -289.57388306]
[-19.65810966 -276.94177246]
[-12.58363152 -263.70578003]
[-6.58312798 -249.94953918]
[-1.69453549 -235.76004028]
[2.05123758 -221.22700500]
[4.63050938 -206.44229126]
[6.02697229 -191.49940491]
[6.23179817 -176.49279785]
[5.24369097 -161.51736450]
[3.06889820 -146.66777039]
[-0.27883002 -132.03791809]
[-4.77832794 -117.72027588]
[-10.40114784 -103.80539703]
[-17.11174011 -90.38124084]
[-24.86767769 -77.53267670]
[-33.61992645 -65.34095001]
[-43.31314468 -53.88312912]
[-32.66713715 -43.31608200]
[-22.02112770 -32.74903488]
[-11.37511921 -22.18198776]
[-0.72911096 -11.61493969]
[10.07304573 -1.20756614]
[21.02895546 9.03782558]
[31.98486519 19.28321648]
[42.94077301 29.52860832]
[53.89668274 39.77400208]
[56.01101303 24.92376137]
[68.86154175 17.18658447]
[82.97534180 22.26603127]
[87.94823456 36.41772079]
[80.11440277 49.20955276]
[65.25021362 51.21237183]
[75.41376495 62.24424744]
[85.57730865 73.27612305]
[95.74085999 84.30800629]
[111.87601471 88.89417267]
[115.37163544 105.30017853]
[112.26819611 90.62473297]
[115.32237244 75.93895721]
[124.01950073 63.71766281]
[136.89395142 56.02035141]
[151.77615356 54.14415741]
[166.15818787 58.40524673]
[177.61643982 68.08555603]
[184.22000122 81.55378723]
[184.85603333 96.54029083]
[179.41735840 110.51959229]
[168.82051086 121.13593292]
[154.85121155 126.60026550]
[139.86357117 125.99176025]
[126.38192749 119.41194153]
[134.42309570 132.07446289]
[142.46426392 144.73698425]
[150.50544739 157.39952087]
[158.54661560 170.06204224]
[171.86166382 163.13449097]
[185.72294617 157.37721252]
[200.02784729 152.83285522]
[214.67045593 149.53503418]
[229.54235840 147.50819397]
[244.53343201 146.76731873]
[259.53271484 147.31790161]
[274.42913818 149.15586853]
[289.11239624 152.26760864]
[303.47381592 156.63009644]
[317.40704346 162.21101379]
[330.80892944 168.96903992]
[343.58023071 176.85415649]
[355.62643433 185.80798340]
[366.85830688 195.76420593]
[377.19268799 206.64913940]
[386.55310059 218.38217163]
[394.87023926 230.87644958]
[402.08248901 244.03944397]
[408.13650513 257.77374268]
[412.98739624 271.97760010]
[416.59930420 286.54592896]
[418.94546509 301.37078857]
[420.00854492 316.34246826]
[419.78060913 331.35012817]
[418.26336670 346.28262329]
[415.46807861 361.02941895]
[411.41540527 375.48132324]
[406.13540649 389.53131104]
[399.66711426 403.07540894]
[392.05844116 416.01333618]
[383.36572266 428.24926758]
[373.65328979 439.69262695]
[362.99310303 450.25869751]
[351.46405029 459.86923218]
[339.15151978 468.45309448]
[326.14663696 475.94674683]
[312.54571533 482.29464722]
[298.44943237 487.44985962]
[283.96215820 491.37420654]
[269.19116211 494.03860474]
[254.24578857 495.42333984]
[239.23670959 495.51818848]
[224.27503967 494.32238770]
[209.47155762 491.84484863]
[194.93585205 488.10388184]
[180.77555847 483.12719727]
[167.09550476 476.95162964]
[153.99697876 469.62292480]
[141.57695007 461.19531250]
[129.92739868 451.73120117]
[119.13454437 441.30068970]
[109.27832031 429.98095703]
[100.43168640 417.85583496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 156]
[18 155]
[19 154]
[20 153]
[21 152]
[22 138]
[25 136]
[26 135]
[27 134]
[28 133]
[29 127]
[30 126]
[31 125]
[32 124]
[33 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
