%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[88.21945190 435.52554321]
[85.70788574 450.35333252]
[80.65948486 464.51965332]
[73.22766113 477.59402466]
[63.63825226 489.17910767]
[52.18267822 498.92288208]
[39.20905685 506.52920532]
[25.11164284 511.76696777]
[10.31884098 514.47698975]
[-4.71981430 514.57684326]
[-19.54731369 512.06359863]
[-33.71306610 507.01361084]
[-46.78659058 499.58029175]
[-58.37059784 489.98959351]
[-68.11306000 478.53289795]
[-75.71791840 465.55841064]
[-80.95407104 451.46041870]
[-83.66239929 436.66729736]
[-83.76058960 421.62863159]
[-81.24566650 406.80142212]
[-76.19404602 392.63623047]
[-68.75925446 379.56356812]
[-59.16722488 367.98065186]
[-47.70943832 358.23947144]
[-34.73409271 350.63607788]
[-20.63549232 345.40151978]
[-5.84207439 342.69488525]
[9.19660282 342.59838867]
[24.02353096 345.11502075]
[29.06044769 330.98599243]
[33.99204254 316.81985474]
[30.76091576 302.27993774]
[42.52680206 291.70285034]
[47.35279846 277.50039673]
[52.17879486 263.29794312]
[57.00479507 249.09548950]
[61.83079147 234.89303589]
[66.44480133 220.62030029]
[70.84579468 206.28045654]
[75.24679565 191.94059753]
[79.64779663 177.60075378]
[82.97005463 162.97329712]
[85.19516754 148.13925171]
[79.43144989 134.40502930]
[89.13027954 121.90530396]
[91.35540009 107.07125854]
[93.47002411 92.22106171]
[95.47403717 77.35552979]
[89.64981842 62.64536667]
[99.01812744 51.06590271]
[101.02214050 36.20037079]
[102.58266449 21.28176880]
[103.69831085 6.32331467]
[104.81396484 -8.63513851]
[104.81396484 -23.63513947]
[103.69831085 -38.59359360]
[102.58266449 -53.55204391]
[101.46701813 -68.51049805]
[100.35136414 -83.46895599]
[88.73429108 -73.97982788]
[74.04078674 -76.99658203]
[67.10234833 -90.29538727]
[73.03375244 -104.07285309]
[87.46257019 -108.17274475]
[99.75160980 -99.57421112]
[99.75160980 -114.57421112]
[87.36663055 -123.73491669]
[82.80387878 -138.26194763]
[87.61318970 -152.52148438]
[99.75160980 -161.11199951]
[99.75160980 -176.11199951]
[99.75160980 -191.11199951]
[99.75160980 -206.11199951]
[99.75160980 -221.11199951]
[99.75160980 -236.11199951]
[99.41663361 -251.10826111]
[98.74684906 -266.09329224]
[98.07706451 -281.07833862]
[97.40727997 -296.06338501]
[82.43417358 -297.24053955]
[67.71922302 -300.24880981]
[53.48550034 -305.04266357]
[39.94879150 -311.54934692]
[27.31430435 -319.67025757]
[15.77357769 -329.28231812]
[5.50156403 -340.23974609]
[-3.34601450 -352.37646484]
[-10.63503170 -365.50848389]
[-16.25498772 -379.43670654]
[-20.12068367 -393.95001221]
[-22.17351913 -408.82836914]
[-22.38237381 -423.84622192]
[-20.74407959 -438.77590942]
[-17.28347397 -453.39111328]
[-12.05301666 -467.47024536]
[-5.13200283 -480.79986572]
[3.37464786 -493.17794800]
[13.33797646 -504.41677856]
[24.60694313 -514.34606934]
[37.01071167 -522.81518555]
[50.36124039 -529.69580078]
[64.45614624 -534.88360596]
[79.08174896 -538.29992676]
[94.01633453 -539.89300537]
[109.03348541 -539.63867188]
[123.90555573 -537.54077148]
[138.40708923 -533.63116455]
[152.31823730 -527.96905518]
[165.42813110 -520.64031982]
[177.53799438 -511.75601196]
[188.46427917 -501.45086670]
[198.04132080 -489.88110352]
[206.12394714 -477.22207642]
[212.58963013 -463.66574097]
[217.34034729 -449.41757202]
[220.30406189 -434.69357300]
[221.43586731 -419.71694946]
[220.71859741 -404.71478271]
[218.16313171 -389.91448975]
[213.80819702 -375.54040527]
[207.71983337 -361.81045532]
[199.99032593 -348.93280029]
[190.73684692 -337.10263062]
[180.09968567 -326.49929810]
[168.24008179 -317.28356934]
[155.33786011 -309.59515381]
[141.58857727 -303.55056763]
[127.20069885 -299.24145508]
[112.39231873 -296.73315430]
[113.06210327 -281.74810791]
[113.73188782 -266.76309204]
[114.40167236 -251.77804565]
[116.74299622 -249.14164734]
[117.92368317 -245.24023438]
[117.36307526 -240.63165283]
[114.75160980 -236.11199951]
[114.75160980 -221.11199951]
[114.75160980 -206.11199951]
[114.75160980 -191.11199951]
[114.75160980 -176.11199951]
[114.75160980 -161.11199951]
[126.89002991 -152.52148438]
[131.69934082 -138.26194763]
[127.13658905 -123.73491669]
[114.75160980 -114.57421112]
[114.75160980 -99.57421112]
[115.30982208 -84.58460236]
[116.42546844 -69.62614441]
[117.54111481 -54.66769409]
[118.65676880 -39.70923996]
[119.77241516 -24.75078773]
[127.69644165 -37.48694611]
[140.88008118 -44.64179611]
[155.87713623 -44.34507370]
[168.76744080 -36.67433929]
[176.18148804 -23.63471031]
[176.18125916 -8.63471031]
[168.76681519 4.40469599]
[155.87628174 12.07503796]
[140.87921143 12.37130833]
[127.69580078 5.21606112]
[119.77241516 -7.51949024]
[118.65676880 7.43896341]
[117.54111481 22.39741707]
[119.26607513 24.60709000]
[120.21968842 27.63318062]
[120.08660889 31.18532181]
[118.66233826 34.86444473]
[115.88767242 38.20438766]
[113.88365936 53.06991577]
[119.85121918 66.71679688]
[110.33956909 79.35954285]
[108.33554840 94.22507477]
[110.46520996 101.99920654]
[106.18944550 109.29637146]
[103.96432495 124.13041687]
[109.56889343 138.92567444]
[100.02921295 150.36436462]
[97.80410004 165.19841003]
[108.35218048 154.53361511]
[122.79306793 150.47642517]
[137.35194397 154.08738708]
[148.22315979 164.42260742]
[152.56500244 178.78047180]
[149.24252319 193.40788269]
[139.12420654 204.48126221]
[124.85496521 209.10606384]
[110.16474152 206.07336426]
[98.89351654 196.17590332]
[93.98764038 182.00175476]
[89.58664703 196.34159851]
[85.18564606 210.68144226]
[80.78464508 225.02130127]
[81.89038849 231.53964233]
[79.84526062 236.84194946]
[76.03324890 239.71902466]
[71.20725250 253.92147827]
[66.38124847 268.12393188]
[61.55525208 282.32638550]
[56.72925568 296.52883911]
[59.61519241 312.08462524]
[48.19449615 321.64584351]
[48.39651871 330.77804565]
[43.18947601 336.02288818]
[38.15256119 350.15191650]
[51.22777176 357.58227539]
[62.81395340 367.17034912]
[72.55901337 378.62481689]
[80.16681671 391.59759521]
[85.40616608 405.69439697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 205]
[30 204]
[31 202]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 193]
[39 192]
[40 191]
[41 190]
[42 179]
[43 178]
[45 176]
[46 175]
[47 173]
[48 172]
[50 170]
[51 169]
[52 164]
[53 163]
[54 162]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[65 146]
[66 145]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 132]
[77 131]
[78 130]
[79 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
