%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[62.71713638 631.00390625]
[62.97778702 615.97613525]
[65.52946472 601.16436768]
[70.31235504 586.91571045]
[77.21434021 573.56420898]
[86.07363129 561.42279053]
[96.68254089 550.77612305]
[108.79239655 541.87377930]
[122.11931610 534.92443848]
[117.29331970 520.72198486]
[112.46732330 506.51950073]
[107.64132690 492.31704712]
[96.22062683 482.75582886]
[99.10656738 467.20007324]
[94.28057098 452.99761963]
[91.78703308 467.78890991]
[84.68381500 481.00042725]
[73.72054291 491.23791504]
[60.05419159 497.42105103]
[45.12700653 498.89724731]
[30.51428795 495.51071167]
[17.75815010 487.61889648]
[8.20478153 476.05459595]
[2.86236978 462.03820801]
[2.29471231 447.04895020]
[6.56171560 432.66867065]
[15.21307278 420.41494751]
[27.33578491 411.58093262]
[41.65051651 407.09890747]
[56.64659500 407.44186401]
[70.74144745 412.57363892]
[82.44761658 421.95263672]
[90.52980042 434.58926392]
[89.41414642 419.63079834]
[88.29850006 404.67233276]
[87.18285370 389.71389771]
[86.06719971 374.75543213]
[77.40472412 362.63888550]
[84.09418488 348.30148315]
[82.97853088 333.34301758]
[81.86288452 318.38455200]
[80.74723816 303.42611694]
[79.63158417 288.46765137]
[68.98387146 274.51800537]
[77.11709595 257.99731445]
[75.77885437 243.05714417]
[74.44062042 228.11695862]
[73.10238647 213.17677307]
[71.76415253 198.23658752]
[66.26762390 212.19323730]
[57.38890839 224.28324890]
[45.71691513 233.70474243]
[32.02579880 239.83282471]
[17.22364235 242.26103210]
[2.29222202 240.82832336]
[-11.77811623 235.62971497]
[-24.05413818 227.01000977]
[-33.72161865 215.54092407]
[-40.13934708 201.98316956]
[-42.88166046 187.23597717]
[-41.76667023 172.27746582]
[-36.86833191 158.09980774]
[-28.51153183 145.64332581]
[-17.25054550 135.73422241]
[-3.83227754 129.02973938]
[10.85328960 125.97456360]
[25.83211327 126.77132416]
[40.11070251 131.36717224]
[52.74201202 139.45730591]
[62.88824844 150.50509644]
[69.87644958 163.77781677]
[73.24361420 178.40022278]
[76.78328705 163.82385254]
[80.32295990 149.24748230]
[83.86263275 134.67109680]
[87.40230560 120.09472656]
[90.94197845 105.51834869]
[93.93675232 90.82035065]
[96.38247681 76.02108002]
[89.50053406 58.94125366]
[101.15628815 45.82216644]
[103.38140106 30.98812294]
[96.24593353 14.01265240]
[107.70507050 0.72148353]
[109.70908356 -14.14404488]
[103.88485718 -28.85421181]
[113.25317383 -40.43367767]
[115.25718689 -55.29920578]
[109.43296051 -70.00936890]
[118.80127716 -81.58883667]
[112.97705841 -96.29900360]
[122.34536743 -107.87846375]
[124.34938049 -122.74399567]
[126.24267578 -137.62402344]
[128.02513123 -152.51774597]
[129.80760193 -167.41146851]
[115.62065887 -172.47883606]
[102.91728210 -180.57649231]
[92.33468628 -191.29826355]
[84.40367126 -204.10633850]
[79.52205658 -218.35827637]
[77.93471527 -233.33920288]
[79.72125244 -248.29766846]
[84.79206848 -262.48339844]
[92.89279938 -275.18481445]
[103.61713409 -285.76480103]
[116.42712402 -293.69271851]
[130.68023682 -298.57086182]
[145.66154480 -300.15457153]
[160.61959839 -298.36441040]
[174.80407715 -293.29016113]
[187.50352478 -285.18637085]
[198.08093262 -274.45947266]
[206.00573730 -261.64755249]
[210.88044739 -247.39324951]
[212.46052551 -232.41156006]
[210.66674805 -217.45394897]
[205.58905029 -203.27069092]
[197.48216248 -190.57321167]
[186.75271606 -179.99839783]
[173.93887329 -172.07670593]
[159.68339539 -167.20545959]
[144.70132446 -165.62899780]
[142.91885376 -150.73527527]
[141.13638306 -135.84156799]
[143.46278381 -128.82659912]
[139.21490479 -120.73998260]
[137.21089172 -105.87445068]
[143.17845154 -92.22756958]
[133.66680908 -79.58482361]
[139.63436890 -65.93793488]
[130.12271118 -53.29518890]
[128.11869812 -38.42966080]
[134.08625793 -24.78277779]
[124.57460785 -12.14003086]
[122.57059479 2.72549725]
[129.65287781 12.53201294]
[128.10496521 24.93313026]
[118.21544647 33.21323776]
[115.99033356 48.04728317]
[122.92582703 57.95815659]
[121.19345093 70.33485413]
[111.18174744 78.46680450]
[108.73602295 93.26607513]
[122.26423645 86.78631592]
[135.83088684 93.18521881]
[139.43513489 107.74575806]
[130.42007446 119.73444366]
[115.43125916 120.31366730]
[105.51834869 109.05802155]
[101.97867584 123.63439941]
[98.43900299 138.21076965]
[94.89933777 152.78715515]
[91.35966492 167.36352539]
[87.81999207 181.93989563]
[86.70433807 196.89836121]
[88.04257202 211.83854675]
[89.38080597 226.77871704]
[90.71903992 241.71890259]
[92.05727386 256.65908813]
[101.43642426 265.51315308]
[102.24346924 277.98443604]
[94.59004211 287.35202026]
[95.70568848 302.31045532]
[96.82133484 317.26892090]
[97.93698883 332.22735596]
[99.05263519 347.18582153]
[107.79491425 360.37228394]
[101.02565765 373.63980103]
[102.14130402 388.59823608]
[103.25695038 403.55670166]
[104.37260437 418.51513672]
[105.48825073 433.47360229]
[108.48302460 448.17160034]
[113.30902100 462.37405396]
[125.07490540 472.95114136]
[121.84378052 487.49105835]
[126.66977692 501.69351196]
[131.49577332 515.89593506]
[136.32177734 530.09844971]
[151.12361145 527.48962402]
[166.15022278 527.17102051]
[181.04934692 529.15002441]
[195.47174072 533.38031006]
[209.07929993 539.76263428]
[221.55305481 548.14752197]
[232.60061646 558.33825684]
[241.96299744 570.09613037]
[249.42074585 583.14532471]
[254.79902649 597.18011475]
[257.97177124 611.87139893]
[258.86459351 626.87481689]
[257.45657349 641.83874512]
[253.78073120 656.41229248]
[247.92321777 670.25390625]
[240.02134705 683.03906250]
[230.26034546 694.46813965]
[218.86903381 704.27313232]
[206.11444092 712.22430420]
[192.29553223 718.13513184]
[177.73626709 721.86718750]
[162.77792358 723.33294678]
[147.77114868 722.49798584]
[133.06771851 719.38195801]
[119.01231384 714.05786133]
[105.93440247 706.65051270]
[94.14055634 697.33355713]
[83.90723419 686.32537842]
[75.47432709 673.88409424]
[69.03951263 660.30120850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 180]
[10 179]
[11 178]
[12 177]
[14 175]
[15 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[39 167]
[40 166]
[41 165]
[42 164]
[43 163]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 144]
[79 143]
[81 140]
[82 139]
[84 136]
[85 135]
[87 133]
[88 132]
[90 130]
[92 128]
[93 127]
[94 125]
[95 124]
[96 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
