%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[98.64189148 341.63555908]
[92.83294678 355.47314453]
[85.98178101 368.82546997]
[78.12860107 381.61413574]
[69.31950378 393.76412964]
[59.60616684 405.20416260]
[49.04560089 415.86703491]
[37.69978333 425.69024658]
[25.63529587 434.61608887]
[12.92293549 442.59222412]
[-0.36269441 449.57180786]
[-14.14362717 455.51391602]
[-28.33899117 460.38366699]
[-42.86547852 464.15246582]
[-57.63784409 466.79821777]
[-72.56939697 468.30538940]
[-87.57250214 468.66513062]
[-102.55912781 467.87533569]
[-117.44132233 465.94061279]
[-132.13174438 462.87234497]
[-146.54418945 458.68856812]
[-160.59407043 453.41375732]
[-174.19895935 447.07891846]
[-187.27897644 439.72122192]
[-199.75740051 431.38385010]
[-211.56097412 422.11572266]
[-222.62045288 411.97122192]
[-232.87091064 401.00988770]
[-242.25221252 389.29605103]
[-250.70928955 376.89846802]
[-258.19250488 363.88983154]
[-264.65798950 350.34655762]
[-270.06774902 336.34808350]
[-274.39007568 321.97656250]
[-277.59954834 307.31637573]
[-279.67739868 292.45349121]
[-280.61138916 277.47515869]
[-280.39605713 262.46926880]
[-279.03265381 247.52391052]
[-276.52920532 232.72676086]
[-272.90036011 218.16467285]
[-268.16744995 203.92311096]
[-262.35824585 190.08563232]
[-255.50683594 176.73344421]
[-247.65341187 163.94491577]
[-238.84407043 151.79507446]
[-229.13052368 140.35525513]
[-218.56976318 129.69256592]
[-207.22375488 119.86957550]
[-195.15910339 110.94395447]
[-182.44659424 102.96806335]
[-169.16082764 95.98871613]
[-155.37977600 90.04687500]
[-141.18432617 85.17739868]
[-126.65776062 81.40886688]
[-111.88535309 78.76339722]
[-96.95377350 77.25651550]
[-81.95065308 76.89706421]
[-66.96404266 77.68715668]
[-52.08188629 79.62214661]
[-37.39152145 82.69068146]
[-22.97915459 86.87475586]
[-8.92936993 92.14981842]
[4.67538595 98.48490906]
[17.75527191 105.84284973]
[30.23353195 114.18046570]
[42.03693390 123.44882202]
[53.09621429 133.59353638]
[64.05212402 123.34813690]
[75.00803375 113.10274506]
[85.96394348 102.85735321]
[90.21636963 89.53787994]
[103.79066467 86.18673706]
[114.74657440 75.94134521]
[125.70248413 65.69595337]
[126.39279175 50.13442230]
[137.64958191 39.90021133]
[152.48088074 40.65420914]
[163.43678284 30.40881729]
[174.39270020 20.16342545]
[185.34860229 9.91803360]
[175.77377319 -1.63437581]
[166.90696716 -13.73872375]
[158.77992249 -26.35168076]
[151.42173767 -39.42809296]
[144.85874939 -52.92115402]
[139.11444092 -66.78255463]
[134.20939636 -80.96268463]
[130.16114807 -95.41077423]
[126.98422241 -110.07510376]
[124.68997192 -124.90318298]
[123.28660583 -139.84193420]
[122.77915192 -154.83786011]
[123.16942596 -169.83729553]
[124.45603943 -184.78656006]
[126.63437653 -199.63211060]
[129.69664001 -214.32081604]
[133.63188171 -228.80007935]
[138.42599487 -243.01809692]
[144.06182861 -256.92395020]
[150.51919556 -270.46789551]
[157.77500916 -283.60137939]
[165.80325317 -296.27746582]
[174.57522583 -308.45071411]
[184.05950928 -320.07757568]
[194.22215271 -331.11642456]
[205.02677917 -341.52774048]
[216.43470764 -351.27426147]
[228.40509033 -360.32110596]
[240.89509583 -368.63586426]
[253.86001587 -376.18878174]
[267.25341797 -382.95281982]
[281.02734375 -388.90377808]
[295.13253784 -394.02035522]
[309.51846313 -398.28421021]
[324.13366699 -401.68008423]
[338.92578125 -404.19583130]
[353.84185791 -405.82244873]
[368.82852173 -406.55410767]
[383.83212280 -406.38818359]
[398.79895020 -405.32528687]
[413.67541504 -403.36920166]
[428.40826416 -400.52694702]
[442.94476318 -396.80868530]
[457.23291016 -392.22775269]
[471.22149658 -386.80050659]
[484.86047363 -380.54641724]
[498.10101318 -373.48782349]
[510.89572144 -365.65002441]
[523.19879150 -357.06109619]
[534.96618652 -347.75177002]
[546.15576172 -337.75534058]
[556.72753906 -327.10763550]
[566.64355469 -315.84674072]
[575.86840820 -304.01296997]
[584.36901855 -291.64871216]
[592.11499023 -278.79818726]
[599.07855225 -265.50744629]
[605.23486328 -251.82403564]
[610.56176758 -237.79695129]
[615.04028320 -223.47639465]
[618.65435791 -208.91363525]
[621.39105225 -194.16079712]
[623.24060059 -179.27070618]
[624.19628906 -164.29666138]
[624.25476074 -149.29225159]
[623.41577148 -134.31120300]
[621.68243408 -119.40715027]
[619.06079102 -104.63343811]
[615.56036377 -90.04294586]
[611.19360352 -75.68791199]
[605.97613525 -61.61972809]
[599.92675781 -47.88874817]
[593.06695557 -34.54412460]
[585.42138672 -21.63363075]
[577.01739502 -9.20348454]
[567.88507080 2.70181918]
[558.05712891 14.03966141]
[547.56866455 24.76945496]
[536.45733643 34.85279083]
[524.76287842 44.25357437]
[512.52709961 52.93814850]
[499.79388428 60.87542725]
[486.60876465 68.03700256]
[473.01895142 74.39722443]
[459.07308960 79.93333435]
[444.82110596 84.62551880]
[430.31402588 88.45697021]
[415.60375977 91.41397858]
[400.74301147 93.48595428]
[385.78491211 94.66548157]
[370.78308105 94.94834137]
[355.79116821 94.33352661]
[340.86285400 92.82322693]
[326.05157471 90.42285156]
[311.41036987 87.14099121]
[296.99163818 82.98940277]
[282.84698486 77.98294067]
[269.02706909 72.13952637]
[255.58135986 65.48007965]
[242.55798340 58.02844620]
[230.00354004 49.81129456]
[217.96299744 40.85803604]
[206.47944641 31.20073128]
[195.59399414 20.87394333]
[184.63809204 31.11933517]
[173.68217468 41.36472702]
[162.72627258 51.61011887]
[162.48561096 66.45861053]
[151.52070618 77.00496674]
[135.94787598 76.65186310]
[124.99196625 86.89725494]
[114.03605652 97.14264679]
[109.78363037 110.46212006]
[96.20933533 113.81326294]
[85.25342560 124.05865479]
[74.29751587 134.30404663]
[63.34160614 144.54943848]
[72.72312164 156.26309204]
[81.18044281 168.66053772]
[88.66391754 181.66900635]
[95.12964630 195.21217346]
[100.53967285 209.21054077]
[104.86225891 223.58197021]
[108.07202911 238.24212646]
[110.15014648 253.10496521]
[111.08442688 268.08328247]
[110.86937714 283.08917236]
[109.50626373 298.03454590]
[107.00308228 312.83175659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 198]
[69 197]
[70 196]
[71 195]
[73 193]
[74 192]
[75 191]
[78 188]
[79 187]
[80 186]
[81 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
