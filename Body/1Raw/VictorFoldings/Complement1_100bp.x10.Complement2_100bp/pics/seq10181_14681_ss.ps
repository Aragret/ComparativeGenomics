%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[73.19390869 791.90191650]
[58.83058548 787.47009277]
[45.33745193 780.84570312]
[33.04679108 772.19207764]
[22.26126480 761.72216797]
[13.24647999 749.69384766]
[6.22443342 736.40332031]
[1.36804950 722.17791748]
[-1.20307899 707.36798096]
[-1.42563581 692.33807373]
[0.70585972 677.45843506]
[5.13891745 663.09552002]
[11.76436996 649.60290527]
[20.41905785 637.31298828]
[30.88985443 626.52832031]
[42.91890335 617.51452637]
[56.20998383 610.49359131]
[70.43578339 605.63836670]
[85.24598694 603.06848145]
[85.02265930 588.07012939]
[84.79933167 573.07177734]
[84.57600403 558.07342529]
[84.35267639 543.07507324]
[70.84442902 538.83947754]
[59.28716660 530.62658691]
[50.81850052 519.22869873]
[46.27704620 505.75225830]
[46.11937332 491.51058960]
[50.37414551 477.89593506]
[58.63802338 466.24337769]
[70.11386108 457.69979858]
[83.68758392 453.11117554]
[83.68758392 438.11117554]
[83.68758392 423.11117554]
[83.68758392 408.11117554]
[72.91690063 402.51046753]
[65.50566864 392.80447388]
[62.90913010 380.79785156]
[65.68000793 368.75616455]
[73.35227203 358.97839355]
[84.51822662 353.35797119]
[77.16329193 340.40597534]
[85.30804443 326.84228516]
[85.75465393 311.84893799]
[86.20125580 296.85559082]
[86.64786530 281.86221313]
[87.09446716 266.86886597]
[84.15151215 260.08944702]
[87.66098785 251.65608215]
[88.33077240 236.67105103]
[89.00055695 221.68600464]
[89.67034912 206.70097351]
[90.34013367 191.71592712]
[76.03387451 181.36206055]
[70.76033020 164.34323120]
[76.81136322 147.41796875]
[91.94187927 137.42671204]
[92.16520691 122.42837524]
[92.38853455 107.43003845]
[91.49571991 92.45662689]
[89.49170685 77.59110260]
[87.48769379 62.72557449]
[85.48368073 47.86004639]
[75.97202301 35.21730042]
[81.93958282 21.57041359]
[79.93556976 6.70488548]
[77.93155670 -8.16064262]
[66.35163879 -15.03960037]
[60.92710114 -27.15507889]
[63.43380356 -39.99246597]
[72.73668671 -48.90795135]
[70.95422363 -63.80166626]
[69.17175293 -78.69538879]
[67.38928986 -93.58910370]
[65.60681915 -108.48281860]
[63.82435608 -123.37653351]
[51.68403625 -133.13616943]
[50.08852768 -148.26589966]
[59.46766281 -159.77969360]
[57.68519592 -174.67341614]
[54.03473282 -180.18572998]
[53.75767517 -185.86203003]
[56.07820511 -190.03625488]
[54.73997116 -204.97644043]
[53.40173721 -219.91662598]
[52.06350327 -234.85681152]
[40.21914291 -244.97357178]
[39.07481384 -260.14410400]
[48.79259491 -271.37353516]
[47.45436096 -286.31372070]
[46.11612701 -301.25390625]
[31.24965286 -303.83276367]
[17.55760193 -310.17233276]
[5.97351742 -319.84039307]
[-2.71277595 -332.17776489]
[-7.90903282 -346.34326172]
[-9.26096439 -361.37103271]
[-6.67639208 -376.23651123]
[-0.33153817 -389.92611694]
[9.34099579 -401.50646973]
[21.68171883 -410.18801880]
[35.84922409 -415.37878418]
[50.87754059 -416.72491455]
[65.74201965 -414.13461304]
[79.42916870 -407.78448486]
[91.00578308 -398.10745239]
[99.68254852 -385.76339722]
[104.86786652 -371.59387207]
[106.20819092 -356.56506348]
[103.61214447 -341.70156860]
[97.25671387 -328.01687622]
[87.57524109 -316.44400024]
[75.22782135 -307.77200317]
[61.05631256 -302.59216309]
[62.39454651 -287.65197754]
[63.73278046 -272.71179199]
[75.29155731 -263.38815308]
[76.86154938 -248.25573730]
[67.00368500 -236.19503784]
[68.34191895 -221.25485229]
[69.68015289 -206.31466675]
[71.01838684 -191.37449646]
[72.57891083 -176.45588684]
[74.36138153 -161.56216431]
[86.19263458 -152.58680725]
[88.21247101 -137.50785828]
[78.71807098 -125.15900421]
[80.50054169 -110.26528931]
[82.28300476 -95.37156677]
[84.06547546 -80.47785187]
[85.84793854 -65.58413696]
[87.63040161 -50.69041824]
[101.28334045 -40.87023163]
[103.65626526 -23.87952423]
[92.79708862 -10.16465664]
[94.80110168 4.70087194]
[96.80511475 19.56640053]
[106.17342377 31.14586449]
[100.34920502 45.85603333]
[102.35321808 60.72156143]
[104.35723114 75.58708954]
[106.36124420 90.45261383]
[113.51315308 77.26738739]
[126.24755096 69.34052277]
[141.23568726 68.74407959]
[154.55970764 75.63396454]
[162.73674011 88.20919037]
[163.62933350 103.18260956]
[157.00415039 116.64021301]
[144.59301758 125.06420898]
[129.64016724 126.25259399]
[116.05423737 119.89472961]
[107.38687134 107.65336609]
[107.16354370 122.65170288]
[106.94021606 137.65003967]
[117.84406281 143.76345825]
[125.07207489 153.87406921]
[127.30249786 166.02745056]
[124.17242432 177.90615845]
[116.33518982 187.27156067]
[105.32517242 192.38571167]
[104.65538788 207.37075806]
[103.98559570 222.35578918]
[103.31581116 237.34083557]
[102.64602661 252.32588196]
[102.08781433 267.31549072]
[101.64121246 282.30883789]
[101.19460297 297.30218506]
[100.74800110 312.29553223]
[100.30139160 327.28887939]
[107.62438202 341.31329346]
[99.51157379 353.80456543]
[114.18086243 364.46145630]
[119.47010803 381.64004517]
[113.44189453 398.40643311]
[98.68758392 408.11117554]
[98.68758392 423.11117554]
[98.68758392 438.11117554]
[98.68758392 453.11117554]
[113.68760681 458.48135376]
[125.92131805 468.64608765]
[133.92132568 482.36221313]
[136.73623657 497.96212769]
[134.04380798 513.55639648]
[126.18768311 527.26275635]
[114.13366699 537.43304443]
[99.35101318 542.85174561]
[99.57434082 557.85009766]
[99.79766846 572.84844971]
[100.02099609 587.84680176]
[100.24432373 602.84515381]
[115.12447357 604.97296143]
[129.48852539 609.40246582]
[142.98275757 616.02453613]
[155.27484131 624.67620850]
[166.06210327 635.14434814]
[175.07887268 647.17114258]
[182.10310364 660.46051025]
[186.96183777 674.68505859]
[189.53541565 689.49462891]
[189.76045227 704.52447510]
[187.63140869 719.40447998]
[183.20071411 733.76812744]
[176.57749939 747.26184082]
[167.92483521 759.55322266]
[157.45581055 770.33959961]
[145.42825317 779.35534668]
[132.13833618 786.37847900]
[117.91333771 791.23608398]
[103.10355377 793.80841064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[32 179]
[33 178]
[34 177]
[35 176]
[41 172]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[57 155]
[58 154]
[59 153]
[60 142]
[61 141]
[62 140]
[63 139]
[65 137]
[66 136]
[67 135]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[79 124]
[80 123]
[83 122]
[84 121]
[85 120]
[86 119]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
