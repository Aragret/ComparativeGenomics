%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[98.29604340 397.94134521]
[91.56343079 411.36801147]
[83.20104980 423.84494019]
[73.34080505 435.17538452]
[62.13819122 445.18060303]
[49.76990128 453.70285034]
[36.43099213 460.60769653]
[22.33184242 465.78622437]
[7.69481421 469.15676880]
[-7.24924421 470.66619873]
[-22.26464462 470.29067993]
[-37.11457062 468.03616333]
[-51.56481934 463.93817139]
[-65.38748932 458.06134033]
[-78.36457825 450.49835205]
[-90.29141235 441.36853027]
[-100.97989655 430.81582642]
[-110.26145172 419.00668335]
[-117.98970032 406.12734985]
[-124.04275513 392.38095093]
[-128.32514954 377.98425293]
[-130.76933289 363.16436768]
[-131.33677673 348.15499878]
[-130.01852417 333.19287109]
[-126.83536530 318.51394653]
[-121.83749390 304.34973145]
[-115.10375214 290.92364502]
[-106.74032593 278.44741821]
[-96.87911987 267.11782837]
[-85.67566681 257.11352539]
[-73.30665588 248.59233093]
[-59.96716690 241.68861389]
[-45.86758041 236.51126099]
[-31.23027039 233.14193726]
[-16.28608513 231.63377380]
[-1.27071691 232.01055908]
[13.57901955 234.26634216]
[28.02892303 238.36555481]
[33.89788437 224.56137085]
[39.76684570 210.75718689]
[45.63580704 196.95301819]
[44.66302109 193.56391907]
[45.28345108 189.53524780]
[47.77981186 185.62098694]
[52.08740616 182.67280579]
[58.56690216 169.14447021]
[57.08646393 154.32362366]
[70.02586365 145.21963501]
[76.50536346 131.69128418]
[75.02492523 116.87044525]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[98.38076019 79.14378357]
[101.18981171 74.20351410]
[105.38643646 71.92375183]
[112.26585388 58.59431839]
[119.14526367 45.26488876]
[117.85075378 26.89628220]
[132.97682190 17.99858284]
[139.65701294 4.56820774]
[146.33721924 -8.86216831]
[153.01741028 -22.29254532]
[159.69760132 -35.72291946]
[166.37779236 -49.15329742]
[164.80995178 -67.50059509]
[179.80186462 -76.62251282]
[186.28135681 -90.15085602]
[192.76086426 -103.67920685]
[179.64431763 -110.96581268]
[166.99168396 -119.03108978]
[154.84909058 -127.84560394]
[143.26086426 -137.37718201]
[132.26927185 -147.59106445]
[121.91444397 -158.44996643]
[112.23415375 -169.91426086]
[103.26372528 -181.94212341]
[95.03588867 -194.48966980]
[87.58066559 -207.51110840]
[80.92526245 -220.95892334]
[75.09396362 -234.78404236]
[70.10804749 -248.93603516]
[65.98570251 -263.36325073]
[62.74197769 -278.01303101]
[60.38870239 -292.83197021]
[58.93447113 -307.76593018]
[58.38458252 -322.76043701]
[58.74105072 -337.76080322]
[60.00256729 -352.71228027]
[62.16453552 -367.56033325]
[65.21906281 -382.25073242]
[69.15500641 -396.72991943]
[73.95800018 -410.94500732]
[79.61051941 -424.84420776]
[86.09194183 -438.37673950]
[93.37861633 -451.49322510]
[101.44394684 -464.14584351]
[110.25852203 -476.28839111]
[119.79015350 -487.87655640]
[130.00408936 -498.86810303]
[140.86303711 -509.22286987]
[152.32737732 -518.90313721]
[164.35528564 -527.87347412]
[176.90286255 -536.10125732]
[189.92433167 -543.55645752]
[203.37217712 -550.21179199]
[217.19732666 -556.04302979]
[231.34934998 -561.02886963]
[245.77658081 -565.15112305]
[260.42639160 -568.39477539]
[275.24530029 -570.74798584]
[290.17929077 -572.20214844]
[305.17379761 -572.75195312]
[320.17416382 -572.39544678]
[335.12564087 -571.13385010]
[349.97366333 -568.97180176]
[364.66406250 -565.91723633]
[379.14321899 -561.98120117]
[393.35830688 -557.17816162]
[407.25744629 -551.52557373]
[420.78994751 -545.04406738]
[433.90643311 -537.75738525]
[446.55899048 -529.69195557]
[458.70150757 -520.87731934]
[470.28964233 -511.34564209]
[481.28112793 -501.13165283]
[491.63586426 -490.27267456]
[501.31604004 -478.80828857]
[510.28637695 -466.78033447]
[518.51409912 -454.23272705]
[525.96917725 -441.21121216]
[532.62445068 -427.76333618]
[538.45562744 -413.93814087]
[543.44140625 -399.78613281]
[547.56365967 -385.35885620]
[550.80725098 -370.70904541]
[553.16033936 -355.89010620]
[554.61444092 -340.95611572]
[555.16418457 -325.96160889]
[554.80761719 -310.96124268]
[553.54595947 -296.00976562]
[551.38385010 -281.16174316]
[548.32916260 -266.47137451]
[544.39306641 -251.99223328]
[539.58996582 -237.77717590]
[533.93731689 -223.87805176]
[527.45574951 -210.34558105]
[520.16894531 -197.22914124]
[512.10351562 -184.57661438]
[503.28884888 -172.43414307]
[493.75708008 -160.84605408]
[483.54306030 -149.85461426]
[472.68402100 -139.49992371]
[461.21960449 -129.81979370]
[449.19158936 -120.84953308]
[436.64395142 -112.62187195]
[423.62240601 -105.16683197]
[410.17449951 -98.51161194]
[396.34927368 -92.68051147]
[382.19723511 -87.69478607]
[367.76995850 -83.57264709]
[353.12011719 -80.32912445]
[338.30117798 -77.97605896]
[323.36718750 -76.52203369]
[308.37265015 -75.97235107]
[293.37228394 -76.32902527]
[278.42083740 -77.59075165]
[263.57284546 -79.75292969]
[248.88246155 -82.80765533]
[234.40335083 -86.74380493]
[220.18830872 -91.54699707]
[206.28919983 -97.19970703]
[199.80970764 -83.67136383]
[193.33021545 -70.14301300]
[197.05262756 -58.63344955]
[191.76516724 -47.30973053]
[179.80816650 -42.47310257]
[173.12797546 -29.04272652]
[166.44778442 -15.61234951]
[159.76759338 -2.18197393]
[153.08738708 11.24840260]
[146.40719604 24.67877769]
[149.95783997 36.24249268]
[144.50238037 47.48623276]
[132.47470093 52.14430237]
[125.59528351 65.47373199]
[118.71586609 78.80316162]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[102.50965118 130.03443909]
[90.03370667 138.17079163]
[83.55421448 151.69912720]
[84.57118988 167.48762512]
[72.09524536 175.62396240]
[65.61575317 189.15231323]
[59.43998337 202.82197571]
[53.57102203 216.62615967]
[47.70206070 230.43032837]
[41.83309937 244.23451233]
[54.81082153 251.79638672]
[66.73842621 260.92520142]
[77.42780304 271.47702026]
[86.71035004 283.28536987]
[94.43968201 296.16406250]
[100.49389648 309.90997314]
[104.77749634 324.30627441]
[107.22293854 339.12597656]
[107.79164124 354.13528442]
[106.47464752 369.09753418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 200]
[39 199]
[40 198]
[41 197]
[45 196]
[46 195]
[48 193]
[49 192]
[51 190]
[53 188]
[56 187]
[57 186]
[58 185]
[60 182]
[61 181]
[62 180]
[63 179]
[64 178]
[65 177]
[67 174]
[68 173]
[69 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
