%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[32.89868927 767.46649170]
[21.06120872 776.71466064]
[8.11783886 784.33862305]
[-5.70994377 790.20782471]
[-20.18552780 794.22186279]
[-35.06121445 796.31201172]
[-50.08246613 796.44262695]
[-64.99224854 794.61138916]
[-79.53543091 790.84960938]
[-93.46315765 785.22167969]
[-106.53711700 777.82397461]
[-118.53359222 768.78295898]
[-129.24731445 758.25341797]
[-138.49493408 746.41546631]
[-146.11824036 733.47174072]
[-151.98678589 719.64367676]
[-156.00013733 705.16790771]
[-158.08961487 690.29211426]
[-158.21948242 675.27087402]
[-156.38752747 660.36120605]
[-152.62506104 645.81817627]
[-146.99650574 631.89074707]
[-139.59812927 618.81713867]
[-130.55656433 606.82104492]
[-120.02651978 596.10784912]
[-108.18815613 586.86077881]
[-95.24405670 579.23809814]
[-81.41571808 573.37023926]
[-66.93975067 569.35754395]
[-52.06386566 567.26879883]
[-37.04260254 567.13964844]
[-22.13299751 568.97229004]
[-18.37669754 554.45025635]
[-14.62039661 539.92816162]
[-22.37719345 527.26452637]
[-18.77464294 512.48358154]
[-5.43926191 504.43341064]
[-1.68296123 489.91137695]
[2.07333946 475.38931274]
[-5.68345690 462.72567749]
[-2.08090639 447.94473267]
[11.25447464 439.89453125]
[15.01077461 425.37249756]
[18.65886307 410.82287598]
[22.19853592 396.24649048]
[25.73820686 381.67010498]
[16.38262367 367.69470215]
[20.10262489 350.94729614]
[35.07304382 341.89709473]
[38.39530563 327.26965332]
[41.71756363 312.64218140]
[45.03982544 298.01470947]
[40.31357574 283.88986206]
[50.91522598 272.14611816]
[39.17954254 262.94073486]
[32.57728958 249.49751282]
[32.46606445 234.45927429]
[38.92149353 220.80836487]
[50.71159363 211.27523804]
[65.53155518 207.79238892]
[68.85381317 193.16493225]
[72.17607117 178.53747559]
[70.43402863 174.09063721]
[71.46695709 168.50225830]
[75.82114410 163.52705383]
[79.57744598 149.00500488]
[83.33374786 134.48294067]
[87.09004974 119.96088409]
[90.84635162 105.43881989]
[93.40218353 90.65816498]
[94.74041748 75.71797943]
[96.07865143 60.77779770]
[97.41688538 45.83761215]
[98.75511932 30.89742851]
[100.09335327 15.95724297]
[101.43158722 1.01705754]
[88.97990417 -7.86566544]
[82.68773651 -21.69698715]
[84.15378571 -36.72087097]
[92.88465118 -48.91217804]
[106.45412445 -55.05505753]
[107.79235840 -69.99523926]
[109.13059235 -84.93542480]
[110.46882629 -99.87561035]
[111.36164093 -114.84902191]
[111.80825043 -129.84236145]
[104.48526001 -143.86679077]
[112.59806824 -156.35804749]
[105.27507782 -170.38247681]
[113.38788605 -182.87373352]
[106.06490326 -196.89816284]
[114.17771149 -209.38941956]
[114.62431335 -224.38276672]
[111.75180054 -233.05378723]
[115.19084167 -239.59556580]
[115.86062622 -254.58059692]
[116.53041077 -269.56564331]
[109.41703796 -283.69754028]
[117.71492004 -296.06661987]
[118.38470459 -311.05166626]
[104.74404144 -317.82308960]
[95.04187012 -329.56137085]
[90.95913696 -344.23281860]
[93.20321655 -359.29550171]
[101.38529968 -372.13967896]
[114.08779144 -380.54010010]
[129.10990906 -383.04125977]
[143.84898376 -379.20983887]
[155.75137329 -369.70968628]
[162.75492859 -356.18673706]
[163.64622498 -340.98394775]
[158.27085876 -326.73522949]
[147.56013489 -315.90933228]
[133.36975098 -310.38186646]
[132.69996643 -295.39685059]
[139.86123657 -282.33676147]
[131.51544189 -268.89584351]
[130.84565735 -253.91081238]
[130.17587280 -238.92576599]
[129.61766052 -223.93615723]
[129.17106628 -208.94281006]
[136.52598572 -195.99081421]
[128.38124084 -182.42712402]
[135.73617554 -169.47512817]
[127.59141541 -155.91145325]
[134.94635010 -142.95944214]
[126.80159760 -129.39576721]
[126.35498810 -114.40241241]
[128.17689514 -112.27196503]
[129.26467896 -109.29147339]
[129.29034424 -105.73693848]
[128.03176880 -101.99788666]
[125.40901184 -98.53737640]
[124.07077789 -83.59719086]
[122.73254395 -68.65700531]
[121.39431000 -53.71682358]
[133.65606689 -45.26016617]
[140.08131409 -31.71128654]
[138.85397339 -16.66602135]
[130.20387268 -4.17311859]
[116.37177277 2.35529184]
[115.03353882 17.29547691]
[113.69530487 32.23566055]
[112.35707092 47.17584610]
[111.01883698 62.11603165]
[109.68060303 77.05621338]
[108.34236908 91.99639893]
[117.87175751 80.41233063]
[131.65687561 74.49874878]
[146.61808777 75.57675171]
[159.41302490 83.40552521]
[167.18325806 96.23609161]
[168.19290161 111.20207214]
[162.21640015 124.96002960]
[150.58891296 134.43640137]
[135.90806580 137.51414490]
[121.45357513 133.50567627]
[110.45462799 123.30650330]
[105.36840820 109.19512177]
[101.61210632 123.71717834]
[97.85580444 138.23924255]
[94.09951019 152.76130676]
[90.34320831 167.28335571]
[86.80353546 181.85974121]
[83.48127747 196.48719788]
[80.15901184 211.11465454]
[92.02051544 220.65751648]
[98.53589630 234.34826660]
[98.46124268 249.44842529]
[91.86491394 262.96322632]
[80.10340118 272.23553467]
[65.54268646 275.46838379]
[70.03131104 290.63949585]
[59.66728592 301.33697510]
[56.34502411 315.96444702]
[53.02276611 330.59188843]
[49.70050430 345.21936035]
[58.14280701 355.71423340]
[58.98691940 368.96179199]
[52.14828491 380.11145020]
[40.31458282 385.20977783]
[36.77490997 399.78616333]
[33.23523712 414.36254883]
[34.25118637 423.44030762]
[29.53283501 429.12878418]
[25.77653313 443.65084839]
[33.53599930 457.15744019]
[29.51970291 471.83139038]
[16.59539795 479.14559937]
[12.83909798 493.66766357]
[9.08279705 508.18972778]
[16.84226227 521.69635010]
[12.82596779 536.37023926]
[-0.09833762 543.68450928]
[-3.85463834 558.20654297]
[-7.61093903 572.72857666]
[6.31732893 578.35516357]
[19.39199257 585.75164795]
[31.38932991 594.79150391]
[42.10404968 605.32006836]
[51.35280609 617.15710449]
[58.97734451 630.10009766]
[64.84719849 643.92761230]
[68.86192322 658.40301514]
[70.95282745 673.27856445]
[71.08412933 688.29980469]
[69.25357819 703.20971680]
[65.49250793 717.75305176]
[59.86526489 731.68103027]
[52.46814728 744.75537109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 196]
[33 195]
[34 194]
[37 191]
[38 190]
[39 189]
[42 186]
[43 185]
[44 183]
[45 182]
[46 181]
[49 177]
[50 176]
[51 175]
[52 174]
[54 172]
[60 166]
[61 165]
[62 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[81 136]
[82 135]
[83 134]
[84 133]
[85 128]
[86 127]
[88 125]
[90 123]
[92 121]
[93 120]
[95 119]
[96 118]
[97 117]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
