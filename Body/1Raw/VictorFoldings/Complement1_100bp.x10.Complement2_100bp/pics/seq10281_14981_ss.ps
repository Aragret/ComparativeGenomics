%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[3.99646902 693.39587402]
[-9.58350754 699.77746582]
[-23.52727509 705.31933594]
[-37.78295898 710.00085449]
[-52.29753494 713.80450439]
[-67.01699829 716.71624756]
[-81.88659668 718.72521973]
[-96.85100555 719.82397461]
[-111.85456848 720.00836182]
[-126.84146118 719.27770996]
[-141.75593567 717.63476562]
[-156.54251099 715.08563232]
[-171.14617920 711.63977051]
[-185.51260376 707.31005859]
[-199.58834839 702.11248779]
[-213.32106018 696.06652832]
[-226.65962219 689.19464111]
[-239.55444336 681.52227783]
[-251.95755005 673.07812500]
[-263.82278442 663.89355469]
[-275.10601807 654.00262451]
[-285.76528931 643.44232178]
[-295.76089478 632.25177002]
[-305.05572510 620.47265625]
[-313.61514282 608.14880371]
[-321.40731812 595.32604980]
[-328.40328979 582.05212402]
[-334.57702637 568.37640381]
[-339.90551758 554.34973145]
[-344.36898804 540.02429199]
[-347.95083618 525.45336914]
[-350.63769531 510.69119263]
[-352.41958618 495.79266357]
[-353.28991699 480.81323242]
[-353.24539185 465.80862427]
[-352.28622437 450.83459473]
[-350.41595459 435.94692993]
[-347.64154053 421.20095825]
[-343.97332764 406.65155029]
[-339.42495728 392.35284424]
[-334.01330566 378.35803223]
[-327.75854492 364.71914673]
[-320.68395996 351.48696899]
[-312.81582642 338.71069336]
[-304.18344116 326.43783569]
[-294.81890869 314.71408081]
[-284.75704956 303.58306885]
[-274.03530884 293.08612061]
[-262.69360352 283.26235962]
[-250.77407837 274.14831543]
[-238.32109070 265.77789307]
[-225.38098145 258.18222046]
[-212.00187683 251.38955688]
[-198.23353577 245.42517090]
[-184.12719727 240.31124878]
[-169.73533630 236.06683350]
[-155.11148071 232.70768738]
[-140.31004333 230.24633789]
[-125.38608551 228.69190979]
[-110.39511871 228.05020142]
[-95.39291382 228.32360840]
[-80.43528748 229.51109314]
[-65.57787323 231.60824585]
[-50.87594223 234.60726929]
[-36.38419342 238.49700928]
[-22.15653419 243.26298523]
[-8.24589252 248.88748169]
[5.29598141 255.34956360]
[12.56921101 242.23086548]
[19.84243965 229.11218262]
[19.24678040 214.22949219]
[32.70512009 205.91181946]
[39.97834778 192.79312134]
[47.25157928 179.67442322]
[54.52480698 166.55574036]
[53.92914963 151.67304993]
[67.38748932 143.35537720]
[66.79182434 128.47268677]
[80.25016785 120.15501404]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[103.86553955 71.38376617]
[105.31495667 56.45395660]
[106.65319061 41.51377487]
[107.99142456 26.57358742]
[98.13356781 14.51289463]
[99.70355225 -0.61951417]
[111.26232910 -9.94315147]
[112.60056305 -24.88333702]
[104.46734619 -41.40399933]
[115.11505890 -55.35366440]
[116.23071289 -70.31211853]
[117.34635925 -85.27056885]
[118.46200562 -100.22902679]
[104.09529877 -104.77814484]
[91.16526031 -112.51834869]
[80.36918640 -123.03222656]
[72.28929901 -135.75276184]
[67.36133575 -149.99397278]
[65.85105896 -164.98782349]
[67.83990479 -179.92573547]
[73.22062683 -194.00212097]
[81.70304871 -206.45785522]
[92.82971954 -216.62121582]
[106.00059509 -223.94410706]
[120.50538635 -228.03161621]
[135.56187439 -228.66329956]
[150.35806274 -225.80509949]
[164.09603882 -219.61116028]
[176.03491211 -210.41551208]
[185.53083801 -198.71405029]
[192.07171631 -185.13783264]
[195.30479431 -170.41900635]
[195.05572510 -155.35133362]
[191.33795166 -140.74740601]
[184.35195923 -127.39477539]
[174.47448730 -116.01355743]
[162.23822021 -107.21750641]
[148.30303955 -101.48099518]
[133.42045593 -99.11337280]
[132.30480957 -84.15492249]
[131.18916321 -69.19646454]
[130.07351685 -54.23801422]
[137.72694397 -44.87042999]
[136.91989136 -32.39916611]
[127.54074860 -23.54510307]
[126.20251465 -8.60491753]
[135.92030334 2.62452102]
[134.77597046 17.79505730]
[122.93161011 27.91182327]
[121.59337616 42.85200882]
[120.25514221 57.79219437]
[122.78936005 64.73477936]
[118.78414154 72.94429016]
[126.77561188 60.25033951]
[137.27737427 49.53992462]
[149.81167603 41.30030441]
[163.80828857 35.90631866]
[178.63044739 33.60336685]
[193.60385132 34.49620819]
[208.04730225 38.54423141]
[221.30374146 45.56327438]
[232.77006531 55.23402023]
[241.92465210 67.11650848]
[248.35101318 80.67017365]
[251.75679016 95.27841187]
[251.98707581 110.27664948]
[249.03134155 124.98255157]
[243.02409363 138.72711182]
[234.23861694 150.88504028]
[223.07458496 160.90324402]
[210.03987122 168.32594299]
[195.72749329 172.81546021]
[180.78855896 174.16755676]
[165.90267944 172.32070923]
[151.74708557 167.35894775]
[138.96574402 159.50801086]
[128.14012146 149.12504578]
[119.76272583 136.68240356]
[114.21466064 122.74615479]
[111.74832916 107.95030212]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[93.36885834 127.42823792]
[93.44429016 143.24926758]
[80.50617981 150.62860107]
[80.58161163 166.44963074]
[67.64350128 173.82896423]
[60.37027359 186.94766235]
[53.09704208 200.06634521]
[45.82381439 213.18504333]
[45.89924240 229.00607300]
[32.96113586 236.38540649]
[25.68790436 249.50410461]
[18.41467476 262.62280273]
[31.06959915 270.68466187]
[43.20949554 279.50305176]
[54.78921127 289.04510498]
[65.76566315 299.27539062]
[76.09801483 310.15579224]
[85.74783325 321.64587402]
[94.67922211 333.70285034]
[102.85895538 346.28192139]
[110.25659943 359.33627319]
[116.84463501 372.81732178]
[122.59855652 386.67492676]
[127.49696350 400.85754395]
[131.52162170 415.31237793]
[134.65756226 429.98571777]
[136.89312744 444.82293701]
[138.22000122 459.76885986]
[138.63323975 474.76785278]
[138.13130188 489.76416016]
[136.71606445 504.70196533]
[134.39279175 519.52569580]
[131.17012024 534.18023682]
[127.06004333 548.61102295]
[122.07785034 562.76440430]
[116.24207306 576.58776855]
[109.57442474 590.02960205]
[102.09970093 603.03997803]
[93.84571838 615.57043457]
[84.84318542 627.57440186]
[75.12557983 639.00720215]
[64.72905731 649.82629395]
[53.69229889 659.99151611]
[42.05635452 669.46490479]
[29.86451530 678.21136475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 177]
[69 176]
[70 175]
[72 173]
[73 172]
[74 171]
[75 170]
[77 168]
[79 166]
[80 165]
[82 163]
[83 135]
[84 133]
[85 132]
[86 131]
[89 128]
[90 127]
[92 124]
[93 123]
[94 122]
[95 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
