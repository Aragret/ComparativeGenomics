%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[142.70857239 393.79202271]
[151.69076538 381.71697998]
[162.85627747 371.62652588]
[175.77597046 363.90847778]
[170.73904419 349.77944946]
[165.70213318 335.65042114]
[151.74057007 325.01831055]
[155.20866394 306.93368530]
[149.96194458 292.88122559]
[144.71522522 278.82876587]
[138.56858826 292.51153564]
[125.12007904 299.15518188]
[110.51818848 295.72225952]
[101.43870544 283.78228760]
[102.03264618 268.79403687]
[112.02846527 257.60995483]
[126.85620880 255.34324646]
[139.73800659 263.03164673]
[135.98170471 248.50958252]
[132.22540283 233.98753357]
[128.46910095 219.46546936]
[124.38944244 205.03091431]
[119.98844147 190.69107056]
[115.58744812 176.35122681]
[111.18644714 162.01138306]
[106.78544617 147.67152405]
[102.38445282 133.33168030]
[97.98345184 118.99183655]
[85.23217010 112.11063385]
[80.98094177 98.25879669]
[87.67669678 85.40916443]
[76.23094940 74.48646545]
[79.89354706 60.04919815]
[75.49255371 45.70935059]
[69.62358856 31.90517235]
[62.35036087 18.78647804]
[55.07713318 5.66778469]
[47.51275253 -7.28521395]
[39.66099930 -20.06605721]
[31.80924225 -32.84690094]
[31.80856133 -17.84689903]
[25.78140640 -4.11105537]
[14.74346161 6.04590178]
[0.55481392 10.91234589]
[-14.39350033 9.66819668]
[-27.58242798 2.52311397]
[-36.78940201 -9.31882954]
[-40.46288681 -23.86205864]
[-37.98383331 -38.65578461]
[-29.77000809 -51.20700073]
[-17.20558548 -59.40061188]
[-2.40788889 -61.85585022]
[12.12940788 -58.15896225]
[23.95758629 -48.93167114]
[18.71086884 -62.98414230]
[13.46415043 -77.03661346]
[8.21743202 -91.08908081]
[2.97071409 -105.14155579]
[-2.27600408 -119.19403076]
[-7.52272224 -133.24650574]
[-12.76944065 -147.29896545]
[-18.01615906 -161.35144043]
[-23.26287651 -175.40391541]
[-28.50959587 -189.45639038]
[-33.75631332 -203.50885010]
[-39.00303268 -217.56132507]
[-44.24974823 -231.61380005]
[-49.49646759 -245.66627502]
[-64.09670258 -242.14624023]
[-79.01477814 -240.41178894]
[-94.03314972 -240.48820496]
[-108.93280792 -242.37435913]
[-123.49646759 -246.04277039]
[-137.51174927 -251.43992615]
[-150.77426147 -258.48712158]
[-163.09060669 -267.08157349]
[-174.28118896 -277.09799194]
[-184.18278503 -288.39028931]
[-192.65101624 -300.79376221]
[-199.56240845 -314.12756348]
[-204.81614685 -328.19723511]
[-208.33561707 -342.79757690]
[-210.06951904 -357.71572876]
[-209.99255371 -372.73410034]
[-208.10583496 -387.63369751]
[-204.43687439 -402.19720459]
[-199.03919983 -416.21228027]
[-191.99151611 -429.47454834]
[-183.39657593 -441.79055786]
[-173.37974548 -452.98077393]
[-162.08709717 -462.88195801]
[-149.68330383 -471.34973145]
[-136.34924316 -478.26058960]
[-122.27938080 -483.51382446]
[-107.67888641 -487.03274536]
[-92.76068115 -488.76608276]
[-77.74230957 -488.68856812]
[-62.84279633 -486.80126953]
[-48.27941132 -483.13177490]
[-34.26453400 -477.73358154]
[-21.00254440 -470.68539429]
[-8.68683815 -462.08999634]
[2.50298381 -452.07275391]
[12.40374088 -440.77972412]
[20.87105179 -428.37561035]
[27.78143692 -415.04132080]
[33.03412247 -400.97125244]
[36.55251312 -386.37060547]
[38.28529358 -371.45233154]
[38.20719910 -356.43399048]
[36.31936646 -341.53454590]
[32.64932632 -326.97128296]
[27.25059891 -312.95660400]
[20.20191574 -299.69488525]
[11.60606384 -287.37951660]
[1.58839834 -276.19006348]
[-9.70499420 -266.28973389]
[-22.10942459 -257.82287598]
[-35.44399643 -250.91297913]
[-30.19727898 -236.86051941]
[-24.95055962 -222.80804443]
[-19.70384216 -208.75556946]
[-14.45712376 -194.70309448]
[-9.21040535 -180.65063477]
[-3.96368742 -166.59815979]
[1.28303087 -152.54568481]
[6.52974892 -138.49320984]
[11.77646732 -124.44074249]
[17.02318573 -110.38827515]
[22.26990318 -96.33580017]
[27.51662254 -82.28333282]
[32.76334000 -68.23085785]
[38.01005936 -54.17839050]
[44.59008408 -40.69865417]
[52.44184113 -27.91781235]
[60.29359818 -15.13696957]
[63.61960602 -13.96650314]
[66.54393768 -11.12690067]
[68.28826141 -6.82450056]
[68.19582367 -1.60544503]
[75.46905518 11.51324940]
[82.74228668 24.63194275]
[83.14096069 9.63724232]
[89.17723846 -4.09459448]
[99.95568085 -14.52653027]
[113.87735748 -20.11104965]
[128.87707520 -20.01972198]
[142.72972107 -14.26609421]
[153.38034058 -3.70368576]
[159.24896240 10.10063553]
[159.46501160 25.09907913]
[153.99645996 39.06671524]
[143.65451050 49.93153000]
[129.97334290 56.08179092]
[114.98248291 56.60514450]
[100.90571594 51.42395020]
[89.83239746 41.30834961]
[94.23339844 55.64819717]
[105.36435699 65.54521942]
[102.01654816 81.00816345]
[114.76782990 87.88936615]
[119.01905823 101.74120331]
[112.32330322 114.59083557]
[116.72429657 128.93067932]
[121.12529755 143.27053833]
[125.52629089 157.61038208]
[129.92729187 171.95022583]
[134.32829285 186.29006958]
[138.72929382 200.62991333]
[142.55189514 204.18446350]
[144.43998718 208.42573547]
[144.45593262 212.50186157]
[142.99116516 215.70916748]
[146.74746704 230.23123169]
[150.50376892 244.75329590]
[154.26007080 259.27536011]
[158.76770020 273.58203125]
[164.01441956 287.63449097]
[169.26113892 301.68698120]
[180.65007019 307.74130249]
[184.73077393 319.55364990]
[179.83116150 330.61349487]
[184.86807251 344.74255371]
[189.90499878 358.87158203]
[204.79345703 356.67614746]
[219.82414246 357.42782593]
[234.41928101 361.09768677]
[248.01791382 367.54467773]
[260.09732056 376.52099609]
[270.19317627 387.68161011]
[277.91748047 400.59756470]
[282.97329712 414.77233887]
[285.16632080 429.66116333]
[284.41220093 444.69171143]
[280.73999023 459.28628540]
[274.29080200 472.88385010]
[265.31253052 484.96179199]
[254.15026855 495.05587769]
[241.23307800 502.77807617]
[227.05746460 507.83160400]
[212.16828918 510.02221680]
[197.13786316 509.26568604]
[182.54389954 505.59109497]
[168.94735718 499.13967896]
[156.87086487 490.15945435]
[146.77859497 478.99557495]
[139.05848694 466.07714844]
[134.00724792 451.90069580]
[131.81906128 437.01116943]
[132.57803345 421.98086548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 184]
[5 183]
[6 182]
[8 179]
[9 178]
[10 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[31 160]
[33 158]
[34 157]
[35 142]
[36 141]
[37 140]
[38 136]
[39 135]
[40 134]
[54 133]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
