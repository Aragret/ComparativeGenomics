%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[113.85510254 745.86480713]
[99.43817139 741.70330811]
[85.32779694 736.59814453]
[71.58568573 730.57153320]
[58.27191544 723.64984131]
[45.44471741 715.86340332]
[33.16017151 707.24627686]
[21.47200584 697.83599854]
[10.43132210 687.67388916]
[0.08640278 676.80426025]
[-9.51751709 665.27471924]
[-18.33844185 653.13568115]
[-26.33779907 640.44012451]
[-33.48060989 627.24371338]
[-39.73564148 613.60406494]
[-45.07553864 599.58081055]
[-49.47695541 585.23535156]
[-52.92063904 570.63031006]
[-55.39153671 555.82958984]
[-56.87884521 540.89794922]
[-57.37605667 525.90069580]
[-56.88099670 510.90335083]
[-55.39582825 495.97149658]
[-52.92705536 481.17044067]
[-49.48546219 466.56494141]
[-45.08610535 452.21881104]
[-39.74821854 438.19479370]
[-33.49514389 424.55426025]
[-26.35422516 411.35678101]
[-18.35668755 398.66012573]
[-9.53750420 386.51980591]
[0.06476283 374.98886108]
[10.40812397 364.11779785]
[21.44734955 353.95407104]
[33.13416672 344.54214478]
[45.41747284 335.92321777]
[58.24355698 328.13494873]
[71.55633545 321.21139526]
[85.29758453 315.18280029]
[99.40722656 310.07559204]
[113.82356262 305.91204834]
[128.48355103 302.71038818]
[126.25843048 287.87637329]
[124.03330994 273.04232788]
[121.80819702 258.20828247]
[119.58307648 243.37422180]
[107.92733002 230.25514221]
[114.80926514 213.17532349]
[112.36354065 198.37605286]
[109.91781616 183.57676697]
[107.47208405 168.77749634]
[104.58681488 154.05761719]
[101.26454926 139.43014526]
[90.90052795 128.73266602]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[80.01660919 45.87833405]
[76.69435120 31.25087547]
[73.37209320 16.62341499]
[70.04983521 1.99595523]
[66.72757721 -12.63150501]
[63.40531540 -27.25896454]
[60.08305359 -41.88642502]
[56.37886429 -27.35098648]
[48.77922440 -14.41864491]
[37.88347626 -4.10929680]
[24.55090141 2.76401782]
[9.83296299 5.65924168]
[-5.10961914 4.34804487]
[-19.09841156 -1.06616557]
[-31.03020096 -10.15640354]
[-39.96399307 -22.20577431]
[-45.19523621 -36.26401138]
[-46.31137085 -51.22243118]
[-43.22437668 -65.90134430]
[-36.17770004 -79.14310455]
[-25.72707748 -89.90342712]
[-12.69668579 -97.33369446]
[1.88584304 -100.84793091]
[16.87047005 -100.16899109]
[31.07544518 -95.35041046]
[43.38050461 -86.77220917]
[52.81521988 -75.11090088]
[58.63641357 -61.28278732]
[59.75205994 -76.24124146]
[60.86771011 -91.19969177]
[61.98336029 -106.15814972]
[63.09900665 -121.11660004]
[56.40954590 -135.45402527]
[65.07202911 -147.57057190]
[65.74181366 -162.55560303]
[65.96514130 -177.55393982]
[66.18846893 -192.55227661]
[66.41179657 -207.55061340]
[66.63512421 -222.54896545]
[66.85845184 -237.54730225]
[53.02222443 -243.90959167]
[42.97485733 -255.35380554]
[38.45711517 -269.89718628]
[40.25172424 -285.01998901]
[48.04776001 -298.10211182]
[60.49451065 -306.87698364]
[75.43550110 -309.82431030]
[90.28211212 -306.43344116]
[102.46208191 -297.29187012]
[109.86515808 -283.98342896]
[111.20870972 -268.81390381]
[106.25996399 -254.41148376]
[95.87631226 -243.27148438]
[81.85678864 -237.32397461]
[81.63346100 -222.32563782]
[81.41013336 -207.32728577]
[81.18680573 -192.32894897]
[80.96347809 -177.33061218]
[80.74015045 -162.33227539]
[82.59357452 -160.22920227]
[83.72560883 -157.26522827]
[83.80419922 -153.71147156]
[82.60143280 -149.95408630]
[80.03047943 -146.45492554]
[86.79974365 -133.18742371]
[78.05746460 -120.00095367]
[76.94181061 -105.04249573]
[75.82616425 -90.08404541]
[74.71051788 -75.12559509]
[73.59486389 -60.16713715]
[74.71051788 -45.20868301]
[78.03277588 -30.58122444]
[81.35503387 -15.95376492]
[84.67729187 -1.32630432]
[87.99954987 13.30115604]
[91.32181549 27.92861557]
[94.64407349 42.55607605]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[120.61826324 121.98302460]
[115.89201355 136.10789490]
[119.21427155 150.73535156]
[122.27584839 153.81443787]
[124.02268219 157.35182190]
[124.47213745 160.87791443]
[123.79229736 163.97702026]
[122.27135468 166.33177185]
[124.71708679 181.13104248]
[127.16281128 195.93031311]
[129.60853577 210.72958374]
[139.62023926 218.86154175]
[141.35261536 231.23823547]
[134.41711426 241.14910889]
[136.64224243 255.98315430]
[138.86735535 270.81719971]
[141.09246826 285.65124512]
[143.31759644 300.48529053]
[158.27174377 299.24478149]
[173.27519226 298.99533081]
[188.26232910 299.73803711]
[203.16760254 301.46960449]
[217.92585754 304.18249512]
[232.47254944 307.86483765]
[246.74404907 312.50051880]
[260.67797852 318.06930542]
[274.21340942 324.54681396]
[287.29113770 331.90472412]
[299.85397339 340.11087036]
[311.84698486 349.12933350]
[323.21774292 358.92074585]
[333.91653442 369.44223022]
[343.89654541 380.64782715]
[353.11416626 392.48849487]
[361.52905273 404.91247559]
[369.10443115 417.86541748]
[375.80718994 431.29074097]
[381.60797119 445.12966919]
[386.48147583 459.32174683]
[390.40634155 473.80487061]
[393.36544800 488.51574707]
[395.34579468 503.39001465]
[396.33877563 518.36267090]
[396.34005737 533.36816406]
[395.34957886 548.34094238]
[393.37170410 563.21557617]
[390.41506958 577.92694092]
[386.49264526 592.41070557]
[381.62152100 606.60357666]
[375.82302856 620.44348145]
[369.12255859 633.86993408]
[361.54934692 646.82415771]
[353.13653564 659.24957275]
[343.92089844 671.09179688]
[333.94277954 682.29901123]
[323.24575806 692.82232666]
[311.87664795 702.61566162]
[299.88513184 711.63610840]
[287.32366943 719.84436035]
[274.24719238 727.20446777]
[260.71286011 733.68426514]
[246.77984619 739.25537109]
[232.50910950 743.89343262]
[217.96304321 747.57824707]
[203.20524597 750.29364014]
[188.30026245 752.02770996]
[173.31326294 752.77288818]
[158.30976868 752.52593994]
[143.35539246 751.28796387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[48 152]
[49 151]
[50 150]
[51 149]
[52 144]
[53 143]
[55 141]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[93 123]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
