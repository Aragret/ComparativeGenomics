%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[38.36271286 522.17681885]
[39.29587936 537.17639160]
[37.98295212 552.14746094]
[34.45326233 566.75567627]
[28.78566360 580.67456055]
[21.10677719 593.59326172]
[11.58814716 605.22308350]
[0.44242543 615.30426025]
[-12.08138847 623.61163330]
[-25.70350838 629.95947266]
[-40.11960983 634.20611572]
[-55.00763321 636.25659180]
[-70.03497314 636.06506348]
[-84.86592102 633.63592529]
[-99.16913605 629.02337646]
[-112.62508392 622.33044434]
[-124.93315125 613.70672607]
[-135.81837463 603.34478760]
[-145.03758240 591.47619629]
[-152.38479614 578.36602783]
[-157.69589233 564.30718994]
[-160.85221863 549.61383057]
[-161.78323364 534.61413574]
[-160.46818542 519.64324951]
[-156.93641663 505.03555298]
[-151.26683044 491.11746216]
[-143.58610535 478.19985962]
[-134.06581116 466.57138062]
[-122.91866302 456.49176025]
[-110.39366150 448.18621826]
[-96.77063751 441.84027100]
[-82.35393524 437.59573364]
[-67.46561432 435.54739380]
[-52.43830490 435.74099731]
[-37.60770798 438.17227173]
[-23.30514908 442.78686523]
[-16.62495422 429.35650635]
[-9.94475937 415.92611694]
[-3.36473155 402.44638062]
[3.11476421 388.91802979]
[9.59426022 375.38967896]
[15.56582260 361.62957764]
[12.98716164 346.95989990]
[25.21360207 336.91876221]
[30.66895866 322.94595337]
[36.12431717 308.97314453]
[41.57967377 295.00036621]
[47.03503036 281.02755737]
[52.49038696 267.05474854]
[57.94574356 253.08195496]
[63.40110016 239.10916138]
[57.20409775 225.61351013]
[62.53755951 211.36538696]
[76.73506165 204.95690918]
[82.19042206 190.98411560]
[87.64577484 177.01130676]
[90.64054871 162.31330872]
[91.08715820 147.31996155]
[91.53376007 132.32659912]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[85.70329285 68.19571686]
[93.81610107 55.70445251]
[94.26271057 40.71110535]
[91.39019775 32.04008865]
[94.82923126 25.49831581]
[95.49901581 10.51327610]
[96.16880035 -4.47176266]
[85.79944611 6.36689520]
[71.06065369 9.15400505]
[57.44962692 2.85004234]
[50.04294205 -10.19376945]
[51.60311127 -25.11241150]
[61.54822540 -36.34159851]
[76.16900635 -39.69312286]
[90.01226807 -33.91694641]
[97.91509247 -21.16630936]
[100.36081696 -35.96557999]
[102.80654907 -50.76485062]
[105.25227356 -65.56412506]
[107.69799805 -80.36339569]
[110.14373016 -95.16266632]
[101.21020508 -107.92314911]
[103.90134430 -122.89687347]
[116.12156677 -131.33497620]
[118.56729126 -146.13424683]
[121.01302338 -160.93351746]
[115.62935638 -175.81057739]
[125.33827972 -187.10597229]
[123.37158966 -193.41816711]
[124.68999481 -198.94616699]
[128.08345032 -202.30674744]
[130.96873474 -217.02662659]
[133.85400391 -231.74652100]
[136.73927307 -246.46641541]
[122.85091400 -252.27143860]
[110.41558838 -260.75363159]
[99.94251251 -271.56564331]
[91.86056519 -284.26473999]
[86.50067902 -298.33090210]
[84.08234406 -313.18807983]
[84.70459747 -328.22796631]
[88.34194946 -342.83462524]
[94.84545898 -356.40994263]
[103.94880676 -368.39801025]
[115.27922058 -378.30795288]
[128.37272644 -385.73391724]
[142.69314575 -390.37185669]
[157.65406799 -392.03182983]
[172.64286804 -390.64584351]
[187.04574585 -386.27072144]
[200.27291870 -379.08554077]
[211.78274536 -369.38458252]
[221.10391235 -357.56506348]
[227.85470581 -344.11099243]
[231.75869751 -329.57333374]
[232.65600586 -314.54736328]
[230.50991821 -299.64840698]
[225.40827942 -285.48654175]
[217.56002808 -272.64169312]
[207.28651428 -261.63989258]
[195.00846863 -252.93159485]
[181.22863770 -246.87344360]
[166.51132202 -243.71348572]
[151.45916748 -243.58114624]
[148.57389832 -228.86125183]
[145.68861389 -214.14135742]
[142.80334473 -199.42146301]
[140.13755798 -184.66024780]
[145.69615173 -170.84173584]
[135.81228638 -158.48779297]
[133.36656189 -143.68852234]
[130.92083740 -128.88925171]
[139.77648926 -116.96813965]
[137.50700378 -101.92473602]
[124.94300079 -92.71693420]
[122.49726868 -77.91766357]
[120.05154419 -63.11839294]
[117.60581970 -48.31912231]
[115.16008759 -33.51985168]
[112.71436310 -18.72058296]
[111.15383911 -3.80197740]
[110.48405457 11.18306160]
[109.81427002 26.16810036]
[109.25605774 41.15771103]
[108.80944824 56.15105820]
[116.16438293 69.10305786]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[106.52711487 132.77320862]
[106.08050537 147.76655579]
[105.63390350 162.75991821]
[112.71325684 149.53558350]
[122.82125854 138.45278931]
[135.33979797 130.18923950]
[149.50335693 125.25026703]
[164.44583130 123.93786621]
[179.25349426 126.33231354]
[193.02082825 132.28717041]
[204.90597534 141.43830872]
[214.18214417 153.22612000]
[220.28208923 166.92979431]
[222.83282471 181.71133423]
[221.67832947 196.66683960]
[216.88923645 210.88177490]
[208.75837708 223.48690796]
[197.78297424 233.71141052]
[184.63417053 240.93006897]
[170.11601257 244.70143127]
[155.11631775 244.79490662]
[140.55227661 241.20475769]
[127.31453705 234.15054321]
[116.21255493 224.06361389]
[107.92523956 211.56080627]
[102.95935822 197.40664673]
[101.61857605 182.46667480]
[96.16321564 196.43946838]
[90.70786285 210.41226196]
[96.80734253 224.74523926]
[91.07578278 238.83792114]
[77.37390137 244.56451416]
[71.91854095 258.53732300]
[66.46318817 272.51010132]
[61.00782776 286.48291016]
[55.55247116 300.45571899]
[50.09711456 314.42849731]
[44.64175797 328.40130615]
[39.18639755 342.37411499]
[41.37485886 358.04321289]
[29.53862000 367.08493042]
[44.11492538 363.54498291]
[56.06370926 372.61288452]
[56.57677460 387.60409546]
[45.27590942 397.46768188]
[30.49168587 394.93255615]
[23.12260628 381.86920166]
[16.64311028 395.39752197]
[10.16361427 408.92587280]
[9.27901363 418.01736450]
[3.48561668 422.60632324]
[-3.19457793 436.03668213]
[-9.87477207 449.46707153]
[2.43452692 458.08905029]
[13.32122993 468.44943237]
[22.54212189 480.31674194]
[29.89120865 493.42584229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 206]
[37 205]
[38 204]
[39 202]
[40 201]
[41 200]
[42 194]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[54 182]
[55 181]
[56 180]
[57 156]
[58 155]
[59 154]
[60 153]
[63 150]
[65 148]
[66 147]
[68 146]
[69 145]
[70 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[87 135]
[88 134]
[89 133]
[91 131]
[94 130]
[95 129]
[96 128]
[97 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
