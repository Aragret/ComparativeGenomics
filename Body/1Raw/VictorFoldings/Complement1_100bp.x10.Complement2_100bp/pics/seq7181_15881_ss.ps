%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[105.17584991 449.95697021]
[105.23997498 434.77935791]
[110.78620911 420.65124512]
[121.06445312 409.48333740]
[134.68467712 402.78601074]
[133.34643555 387.84582520]
[124.50452423 375.85958862]
[130.97978210 361.42416382]
[129.64154053 346.48397827]
[128.30331421 331.54379272]
[126.96507263 316.60360718]
[125.40454865 301.68499756]
[123.62208557 286.79129028]
[121.83962250 271.89758301]
[120.05715179 257.00384521]
[118.16386414 242.12382507]
[115.71813202 227.32455444]
[112.72335815 212.62654114]
[109.61924744 197.95123291]
[106.51513672 183.27593994]
[103.77529144 181.05657959]
[101.97428131 177.39988708]
[101.77596283 172.76156616]
[103.61556244 167.87658691]
[101.16983032 153.07731628]
[98.72410583 138.27804565]
[96.27837372 123.47878265]
[93.83264923 108.67951202]
[90.18456268 94.12989044]
[84.46054077 87.01136017]
[85.39414978 79.67990875]
[80.78014374 65.40718079]
[76.16613007 51.13444519]
[71.55212402 36.86170959]
[66.93811035 22.58897781]
[62.32410431 8.31624413]
[51.21686554 1.75941098]
[47.66767883 -10.22337055]
[53.05625534 -21.05341148]
[48.65525818 -35.39326096]
[44.25426102 -49.73310471]
[39.85326004 -64.07295227]
[27.30669975 -68.97177124]
[19.97933960 -80.04065704]
[20.35938263 -93.11496735]
[28.08411980 -103.42797089]
[23.89710808 -117.83174896]
[19.71009636 -132.23553467]
[15.52308559 -146.63931274]
[6.12116480 -134.95155334]
[-8.87856960 -134.86231995]
[-18.41887283 -146.43740845]
[-15.46698666 -161.14408875]
[-2.19893312 -168.14114380]
[11.60347748 -162.27183533]
[8.49936771 -176.94714355]
[5.39525747 -191.62243652]
[2.29114723 -206.29774475]
[-0.81296295 -220.97303772]
[-3.91707301 -235.64834595]
[-7.67337370 -250.17041016]
[-12.07437134 -264.51025391]
[-16.47537041 -278.85009766]
[-20.87636757 -293.18994141]
[-25.27736664 -307.52978516]
[-29.67836380 -321.86962891]
[-34.07936096 -336.20950317]
[-38.48036194 -350.54934692]
[-42.88135910 -364.88919067]
[-56.21565247 -368.38021851]
[-66.00605011 -377.92834473]
[-69.76998138 -390.96301270]
[-66.62704468 -404.04986572]
[-57.50217438 -413.79559326]
[-61.68918610 -428.19937134]
[-65.87619781 -442.60314941]
[-69.58605957 -428.06915283]
[-78.51380157 -416.01531982]
[-91.33505249 -408.22970581]
[-106.14785004 -405.86730957]
[-120.75481415 -409.27856445]
[-132.98907471 -417.95745850]
[-141.03576660 -430.61645508]
[-143.70120239 -445.37774658]
[-140.58998108 -460.05154419]
[-132.16363525 -472.46109009]
[-119.67215729 -480.76547241]
[-104.96858978 -483.73284912]
[-90.23412323 -480.92294312]
[-77.65452576 -472.75265503]
[-69.09666443 -460.43572998]
[-70.21231079 -475.39419556]
[-71.32796478 -490.35263062]
[-86.06723022 -493.70605469]
[-99.16240692 -501.25640869]
[-109.44907379 -512.33233643]
[-116.01255035 -525.94891357]
[-118.26921844 -540.89544678]
[-116.01840973 -555.84289551]
[-109.46027374 -569.46209717]
[-99.17795563 -580.54205322]
[-86.08573914 -588.09753418]
[-71.34779358 -591.45672607]
[-56.27458954 -590.32092285]
[-42.20643616 -584.79113770]
[-30.39426422 -575.35906982]
[-21.88839912 -562.86340332]
[-17.44518089 -548.41522217]
[-17.45969582 -533.29931641]
[-21.93065262 -518.85974121]
[-30.46049690 -506.38043213]
[-42.29076385 -496.97103882]
[-56.36950684 -491.46829224]
[-55.25386047 -476.50982666]
[-54.13821030 -461.55139160]
[-51.47241592 -446.79016113]
[-47.28540421 -432.38638306]
[-43.09839249 -417.98260498]
[-27.48217392 -412.92184448]
[-17.86321831 -399.41491699]
[-18.19373131 -382.67001343]
[-28.54151154 -369.29019165]
[-24.14051247 -354.95034790]
[-19.73951530 -340.61047363]
[-15.33851719 -326.27062988]
[-10.93751907 -311.93078613]
[-6.53652096 -297.59094238]
[-2.13552260 -283.25109863]
[2.26547527 -268.91125488]
[6.66647339 -254.57141113]
[14.63283348 -267.28112793]
[29.22158241 -270.76947021]
[42.07562256 -263.03811646]
[45.83157349 -248.51596069]
[38.33786011 -235.52195740]
[23.88721848 -231.49964905]
[10.75822926 -238.75245667]
[13.86233902 -224.07714844]
[16.96644974 -209.40185547]
[20.07056046 -194.72654724]
[23.17466927 -180.05125427]
[26.27877998 -165.37594604]
[29.92686844 -150.82632446]
[34.11388016 -136.42254639]
[38.30089188 -122.01876068]
[42.48789978 -107.61497498]
[57.55930328 -100.15229797]
[62.67078018 -83.77586365]
[54.19310760 -68.47395325]
[58.59410858 -54.13410568]
[62.99510574 -39.79425812]
[67.39610291 -25.45441055]
[80.86899567 -14.20949745]
[76.59683990 3.70223498]
[81.21084595 17.97496796]
[85.82485199 32.24770355]
[90.43886566 46.52043533]
[95.05287170 60.79316711]
[99.66688538 75.06590271]
[104.38701630 89.30389404]
[108.40958405 74.85331726]
[118.61947632 63.86432648]
[132.73579407 58.79187393]
[147.60488892 60.76916504]
[159.90499878 69.35446930]
[166.88822937 82.62980652]
[166.99450684 97.62942505]
[160.20010376 111.00238800]
[148.02288818 119.76112366]
[133.18328857 121.94892120]
[118.99652100 117.07701111]
[108.63191986 106.23377991]
[111.07764435 121.03305054]
[113.52337646 135.83232117]
[115.96910095 150.63159180]
[118.41483307 165.43086243]
[121.19044495 180.17182922]
[124.29454803 194.84713745]
[127.39865875 209.52243042]
[132.23622131 217.27070618]
[130.43801880 224.43927002]
[133.40657043 227.60813904]
[135.04730225 231.19596863]
[135.39157104 234.73388672]
[134.61976624 237.81137085]
[133.02938843 240.11979675]
[137.27725220 248.20642090]
[134.95086670 255.22138977]
[136.73333740 270.11511230]
[138.51580811 285.00881958]
[140.29826355 299.90252686]
[143.94873047 305.41485596]
[144.22578430 311.09115601]
[141.90525818 315.26538086]
[143.24349976 330.20556641]
[144.58172607 345.14575195]
[145.91996765 360.08593750]
[154.85760498 373.14077759]
[148.28662109 386.50759888]
[149.62486267 401.44778442]
[164.21850586 405.61788940]
[176.31788635 414.78137207]
[184.28666687 427.69891357]
[187.04714966 442.62353516]
[184.22596741 457.53680420]
[176.20468140 470.42181396]
[164.06811523 479.53598022]
[149.45761108 483.64666748]
[134.34915161 482.19799805]
[120.78601074 475.38580322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 200]
[6 199]
[8 197]
[9 196]
[10 195]
[11 194]
[12 191]
[13 190]
[14 189]
[15 188]
[16 186]
[17 181]
[18 179]
[19 178]
[20 177]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 160]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[39 152]
[40 151]
[41 150]
[42 149]
[46 146]
[47 145]
[48 144]
[49 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[74 118]
[75 117]
[76 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
