%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[137.90963745 883.73602295]
[123.09860992 881.34765625]
[108.40493774 878.31994629]
[93.85622406 874.65856934]
[79.47976685 870.37042236]
[65.30255890 865.46350098]
[51.35122681 859.94708252]
[37.65195084 853.83142090]
[24.23046112 847.12811279]
[11.11194706 839.84967041]
[-1.67895877 832.00982666]
[-14.11824417 823.62322998]
[-26.18255615 814.70562744]
[-37.84924316 805.27380371]
[-49.09640503 795.34545898]
[-59.90292358 784.93920898]
[-70.24851227 774.07458496]
[-80.11374664 762.77203369]
[-89.48011017 751.05273438]
[-98.33000946 738.93865967]
[-106.64683533 726.45263672]
[-114.41497803 713.61804199]
[-121.61985016 700.45898438]
[-128.24792480 687.00018311]
[-134.28675842 673.26690674]
[-139.72500610 659.28491211]
[-144.55247498 645.08044434]
[-148.76008606 630.68017578]
[-152.33995056 616.11120605]
[-155.28533936 601.40081787]
[-157.59072876 586.57666016]
[-159.25178528 571.66650391]
[-160.26539612 556.69842529]
[-160.62966919 541.70050049]
[-160.34388733 526.70086670]
[-159.40861511 511.72769165]
[-157.82560730 496.80908203]
[-155.59782410 481.97302246]
[-152.72944641 467.24743652]
[-149.22587585 452.65991211]
[-145.09367371 438.23785400]
[-140.34060669 424.00833130]
[-134.97560120 409.99807739]
[-129.00871277 396.23336792]
[-122.45116425 382.74005127]
[-115.31525421 369.54345703]
[-107.61437988 356.66839600]
[-99.36299896 344.13900757]
[-90.57661438 331.97882080]
[-81.27170563 320.21066284]
[-71.46575165 308.85662842]
[-61.17715836 297.93801880]
[-50.42524338 287.47537231]
[-39.23019409 277.48828125]
[-27.61302185 267.99554443]
[-15.59554100 259.01495361]
[-3.20031214 250.56336975]
[9.54939365 242.65666199]
[22.62963867 235.30969238]
[36.01586914 228.53623962]
[49.68295288 222.34901428]
[63.60522842 216.75962830]
[77.75656128 211.77859497]
[92.11038208 207.41526794]
[106.63973999 203.67781067]
[103.53562927 189.00250244]
[100.43151855 174.32720947]
[97.32740784 159.65190125]
[91.17597961 173.33255005]
[79.06642914 182.18460083]
[64.16416931 183.89414978]
[50.36461258 178.01434326]
[41.27492523 166.08213806]
[39.27113724 151.21658325]
[44.87702942 137.30349731]
[56.62723923 127.97972870]
[71.45028687 125.68248749]
[85.47145844 131.01226807]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[89.10848236 43.34432602]
[88.10422516 28.37798309]
[86.98857880 13.41952991]
[85.87292480 -1.53892362]
[84.75727844 -16.49737740]
[83.64163208 -31.45582962]
[74.39534760 -40.44855499]
[73.77407074 -52.93045044]
[81.56611633 -62.18304825]
[80.67330170 -77.15645599]
[66.13870239 -81.46009064]
[53.95442963 -90.47781372]
[45.59178543 -103.12067413]
[42.06060410 -117.86199188]
[43.78728867 -132.92169189]
[50.56333923 -146.48121643]
[61.57050705 -156.90321350]
[75.47962952 -162.92916870]
[90.61111450 -163.83140564]
[105.13775635 -159.50099182]
[117.30539703 -150.46083069]
[125.64472198 -137.80258179]
[129.14874268 -123.05477905]
[127.39430237 -107.99829102]
[120.59326935 -94.45127106]
[109.56691742 -84.04957581]
[95.64670563 -78.04927063]
[96.53952789 -63.07586670]
[106.97837067 -48.96921921]
[98.60008240 -32.57147980]
[99.71572876 -17.61302567]
[100.83138275 -2.65457225]
[101.94702911 12.30388069]
[103.06267548 27.26233482]
[106.69496155 33.69881821]
[104.08188629 42.45151138]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[112.00271606 156.54779053]
[115.10682678 171.22309875]
[118.21093750 185.89840698]
[121.31504059 200.57369995]
[136.11335754 198.10778809]
[151.00460815 196.28521729]
[165.96081543 195.10945129]
[180.95393372 194.58265686]
[195.95579529 194.70585632]
[210.93823242 195.47879028]
[225.87312317 196.90002441]
[240.73242188 198.96687317]
[255.48825073 201.67549133]
[270.11288452 205.02075195]
[284.57888794 208.99641418]
[298.85906982 213.59497070]
[312.92666626 218.80783081]
[326.75524902 224.62518311]
[340.31881714 231.03610229]
[353.59197998 238.02857971]
[366.54974365 245.58944702]
[379.16784668 253.70455933]
[391.42254639 262.35864258]
[403.29086304 271.53546143]
[414.75048828 281.21777344]
[425.77996826 291.38742065]
[436.35852051 302.02532959]
[446.46636963 313.11148071]
[456.08444214 324.62509155]
[465.19476318 336.54452515]
[473.78018188 348.84741211]
[481.82461548 361.51068115]
[489.31289673 374.51052856]
[496.23104858 387.82257080]
[502.56604004 401.42178345]
[508.30596924 415.28268433]
[513.44006348 429.37918091]
[517.95874023 443.68487549]
[521.85345459 458.17288208]
[525.11688232 472.81600952]
[527.74291992 487.58673096]
[529.72668457 502.45736694]
[531.06439209 517.39996338]
[531.75354004 532.38647461]
[531.79284668 547.38879395]
[531.18218994 562.37872314]
[529.92285156 577.32812500]
[528.01702881 592.20898438]
[525.46838379 606.99328613]
[522.28173828 621.65325928]
[518.46301270 636.16149902]
[514.01934814 650.49066162]
[508.95919800 664.61389160]
[503.29196167 678.50463867]
[497.02832031 692.13690186]
[490.18002319 705.48498535]
[482.75994873 718.52386475]
[474.78198242 731.22912598]
[466.26113892 743.57684326]
[457.21340942 755.54388428]
[447.65579224 767.10772705]
[437.60620117 778.24664307]
[427.08349609 788.93981934]
[416.10748291 799.16717529]
[404.69873047 808.90936279]
[392.87866211 818.14825439]
[380.66946411 826.86645508]
[368.09408569 835.04754639]
[355.17608643 842.67620850]
[341.93975830 849.73815918]
[328.40997314 856.22003174]
[314.61206055 862.10974121]
[300.57199097 867.39624023]
[286.31607056 872.06958008]
[271.87112427 876.12097168]
[257.26419067 879.54284668]
[242.52276611 882.32873535]
[227.67449951 884.47344971]
[212.74725342 885.97290039]
[197.76907349 886.82434082]
[182.76806641 887.02612305]
[167.77239990 886.57788086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 132]
[66 131]
[67 130]
[68 129]
[79 128]
[80 127]
[81 126]
[83 124]
[84 123]
[85 122]
[86 121]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
