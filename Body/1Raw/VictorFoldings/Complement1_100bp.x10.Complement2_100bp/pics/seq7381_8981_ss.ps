%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[89.40662384 914.90850830]
[74.44229126 913.84149170]
[59.53770828 912.13171387]
[44.72048950 909.78228760]
[30.01806831 906.79748535]
[15.45767021 903.18298340]
[1.06625807 898.94537354]
[-13.12951851 894.09259033]
[-27.10337067 888.63354492]
[-40.82942581 882.57830811]
[-54.28226089 875.93823242]
[-67.43697357 868.72546387]
[-80.26918793 860.95349121]
[-92.75515747 852.63659668]
[-104.87175751 843.79022217]
[-116.59654999 834.43078613]
[-127.90781403 824.57556152]
[-138.78462219 814.24285889]
[-149.20681763 803.45178223]
[-159.15510559 792.22229004]
[-168.61105347 780.57519531]
[-177.55717468 768.53204346]
[-185.97688293 756.11517334]
[-193.85459900 743.34759521]
[-201.17573547 730.25292969]
[-207.92671204 716.85534668]
[-214.09506226 703.17980957]
[-219.66934204 689.25152588]
[-224.63923645 675.09631348]
[-228.99552917 660.74035645]
[-232.73017883 646.21032715]
[-235.83624268 631.53302002]
[-238.30798340 616.73571777]
[-240.14082336 601.84576416]
[-241.33135986 586.89074707]
[-241.87741089 571.89837646]
[-241.77793884 556.89636230]
[-241.03314209 541.91253662]
[-239.64439392 526.97460938]
[-237.61425781 512.11029053]
[-234.94651794 497.34704590]
[-231.64610291 482.71224976]
[-227.71911621 468.23300171]
[-223.17283630 453.93612671]
[-218.01567078 439.84805298]
[-212.25718689 425.99490356]
[-205.90805054 412.40231323]
[-198.97999573 399.09548950]
[-191.48587036 386.09902954]
[-183.43954468 373.43701172]
[-174.85592651 361.13287354]
[-165.75088501 349.20944214]
[-156.14132690 337.68878174]
[-146.04499817 326.59219360]
[-135.48063660 315.94024658]
[-124.46776581 305.75265503]
[-113.02680969 296.04830933]
[-101.17893982 286.84515381]
[-88.94610596 278.16024780]
[-76.35094452 270.00967407]
[-63.41679382 262.40850830]
[-50.16759872 255.37084961]
[-36.62789536 248.90971375]
[-22.82275391 243.03706360]
[-8.77774048 237.76377869]
[5.48113823 233.09962463]
[19.92747688 229.05323792]
[34.53452301 225.63212585]
[49.27523041 222.84259033]
[64.12230682 220.68983459]
[79.04824829 219.17781067]
[94.02541351 218.30934143]
[93.80208588 203.31100464]
[84.00355530 188.75231934]
[93.10567474 172.74504089]
[92.65907288 157.75169373]
[92.21246338 142.75833130]
[89.91065216 140.08738708]
[88.78818512 136.16882324]
[89.41734314 131.56910706]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[82.47447968 64.16722107]
[78.90718079 51.38110352]
[83.29046631 39.05759430]
[93.81295776 31.62074852]
[94.25955963 16.62739944]
[94.70616913 1.63404858]
[95.15277100 -13.35930157]
[95.59938049 -28.35265160]
[96.04598236 -43.34600067]
[96.49259186 -58.33935165]
[96.60425568 -73.33893585]
[96.38092804 -88.33727264]
[96.15760040 -103.33560944]
[95.93427277 -118.33394623]
[82.24884796 -125.18724060]
[73.32530212 -137.62222290]
[71.21421051 -152.78144836]
[76.40068054 -167.18141174]
[87.69290161 -177.51312256]
[102.49600220 -181.40243530]
[117.40834808 -177.95559692]
[129.00317383 -167.96467590]
[134.61608887 -153.72550964]
[132.95727539 -138.51016235]
[124.40792847 -125.81499481]
[110.93260956 -118.55727386]
[111.15593719 -103.55893707]
[111.37926483 -88.56060028]
[111.60259247 -73.56226349]
[113.86438751 -70.85733032]
[114.92839050 -66.92249298]
[114.23081207 -62.33264923]
[111.48593903 -57.89274597]
[111.03933716 -42.89939499]
[110.59272766 -27.90604591]
[110.14612579 -12.91269588]
[109.69951630 2.08065462]
[109.25291443 17.07400513]
[108.80630493 32.06735611]
[120.85145569 43.80418396]
[120.67770386 60.95891190]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[107.20581818 142.31173706]
[107.65242004 157.30508423]
[108.09902954 172.29843140]
[116.93453979 181.69505310]
[116.99784851 194.19224548]
[108.80042267 203.08767700]
[109.02375031 218.08601379]
[124.02014160 218.50817871]
[138.98448181 219.57511902]
[153.88906860 221.28488159]
[168.70629883 223.63427734]
[183.40872192 226.61897278]
[197.96914673 230.23344421]
[212.36056519 234.47099304]
[226.55635071 239.32376099]
[240.53022766 244.78277588]
[254.25630188 250.83792114]
[267.70916748 257.47799683]
[280.86389160 264.69067383]
[293.69613647 272.46264648]
[306.18212891 280.77947998]
[318.29876709 289.62579346]
[330.02359009 298.98519897]
[341.33489990 308.84036255]
[352.21173096 319.17306519]
[362.63394165 329.96411133]
[372.58227539 341.19357300]
[382.03826904 352.84063721]
[390.98443604 364.88372803]
[399.40417480 377.30056763]
[407.28195190 390.06814575]
[414.60311890 403.16281128]
[421.35415649 416.56033325]
[427.52255249 430.23587036]
[433.09686279 444.16415405]
[438.06680298 458.31936646]
[442.42315674 472.67526245]
[446.15783691 487.20529175]
[449.26394653 501.88256836]
[451.73574829 516.67987061]
[453.56863403 531.56982422]
[454.75924683 546.52484131]
[455.30532837 561.51721191]
[455.20590210 576.51922607]
[454.46115112 591.50305176]
[453.07244873 606.44097900]
[451.04238892 621.30529785]
[448.37469482 636.06854248]
[445.07431030 650.70336914]
[441.14736938 665.18261719]
[436.60113525 679.47955322]
[431.44403076 693.56762695]
[425.68560791 707.42077637]
[419.33648682 721.01336670]
[412.40847778 734.32025146]
[404.91439819 747.31671143]
[396.86813354 759.97875977]
[388.28454590 772.28289795]
[379.17956543 784.20635986]
[369.57000732 795.72711182]
[359.47372437 806.82373047]
[348.90939331 817.47570801]
[337.89657593 827.66333008]
[326.45565796 837.36773682]
[314.60781860 846.57092285]
[302.37500000 855.25585938]
[289.77987671 863.40643311]
[276.84573364 871.00769043]
[263.59658813 878.04534912]
[250.05688477 884.50653076]
[236.25177002 890.37927246]
[222.20677185 895.65258789]
[207.94790649 900.31677246]
[193.50158691 904.36322021]
[178.89454651 907.78436279]
[164.15385437 910.57397461]
[149.30679321 912.72674561]
[134.38084412 914.23883057]
[119.40367889 915.10736084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 138]
[73 137]
[75 134]
[76 133]
[77 132]
[81 131]
[82 130]
[84 128]
[85 127]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
