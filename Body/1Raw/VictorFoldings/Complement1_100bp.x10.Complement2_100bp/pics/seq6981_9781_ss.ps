%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[162.64945984 737.75799561]
[151.72488403 727.46722412]
[141.66380310 716.33074951]
[132.53147888 704.42077637]
[124.38711548 691.81463623]
[117.28354645 678.59399414]
[111.26684570 664.84460449]
[106.37602234 650.65563965]
[102.64280701 636.11914062]
[100.09140778 621.32940674]
[98.73836517 606.38232422]
[98.59246826 591.37481689]
[99.65464783 576.40423584]
[101.91802979 561.56768799]
[105.36791992 546.96136475]
[109.98195648 532.67999268]
[115.73020172 518.81622314]
[122.57539368 505.45999146]
[130.47312927 492.69784546]
[139.37217712 480.61260986]
[149.21484375 469.28262329]
[159.93727112 458.78140259]
[171.46994019 449.17703247]
[183.73805237 440.53179932]
[196.66203308 432.90179443]
[210.15806580 426.33648682]
[204.70271301 412.36367798]
[199.24736023 398.39089966]
[193.79199219 384.41809082]
[188.33663940 370.44528198]
[182.88128662 356.47250366]
[177.42591858 342.49969482]
[162.54675293 341.46258545]
[149.53988647 334.03756714]
[141.01174927 321.65081787]
[138.69793701 306.72879028]
[143.11033630 292.22302246]
[153.42500305 281.02618408]
[147.96965027 267.05337524]
[142.51429749 253.08058167]
[130.67805481 244.03886414]
[132.86651611 228.36975098]
[121.03028107 219.32801819]
[123.21873474 203.65890503]
[117.76337433 189.68611145]
[112.30802155 175.71330261]
[106.85266113 161.74050903]
[103.47936249 176.35627747]
[93.77033234 187.79022217]
[79.89459991 193.48793030]
[64.95203400 192.17655945]
[52.28084564 184.14904785]
[44.71180725 171.19876099]
[43.93586349 156.21885681]
[50.12636185 142.55584717]
[61.90032959 133.26210022]
[76.62743378 130.41386414]
[91.01759338 134.64744568]
[101.85603333 145.01704407]
[98.75192261 130.34175110]
[95.64781189 115.66644287]
[84.11772156 103.48313141]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[82.84647369 58.33782959]
[77.89408875 50.66243362]
[79.58535767 43.46789551]
[76.48124695 28.79259300]
[73.37713623 14.11728954]
[69.83746338 -0.45908543]
[65.86536407 -14.92360973]
[52.46729660 -27.55583763]
[57.56307983 -44.34869003]
[53.37606812 -58.75247192]
[49.18905640 -73.15625763]
[45.00204468 -87.56003571]
[33.72018814 -98.65193939]
[37.59733200 -113.03307343]
[33.41032028 -127.43685150]
[29.22330856 -141.84063721]
[14.24153042 -140.44677734]
[-0.73326963 -141.91369629]
[-15.15976334 -146.18836975]
[-28.51644135 -153.11625671]
[-40.32046890 -162.44692993]
[-50.14513397 -173.84309387]
[-57.63528824 -186.89276123]
[-62.52016068 -201.12422180]
[-64.62316895 -216.02301025]
[-63.86829376 -231.05053711]
[-60.28281784 -245.66357422]
[-53.99635696 -259.33386230]
[-45.23616028 -271.56726074]
[-34.31890488 -281.92147827]
[-21.63924599 -290.02227783]
[-7.65553951 -295.57675171]
[7.12670851 -298.38418579]
[22.17313004 -298.34304810]
[36.93980789 -295.45483398]
[50.89293289 -289.82397461]
[63.52811050 -281.65396118]
[74.38858795 -271.24020386]
[83.08176422 -258.95910645]
[89.29338074 -245.25465393]
[92.79890442 -230.62222290]
[93.47160339 -215.59078979]
[91.28716278 -200.70373535]
[86.32454681 -186.49919128]
[78.76315308 -173.49066162]
[68.87631989 -162.14839172]
[57.02145004 -152.88240051]
[43.62709045 -146.02764893]
[47.81410217 -131.62387085]
[52.00111389 -117.22008514]
[62.98348618 -107.15843964]
[59.40582657 -91.74704742]
[63.59283829 -77.34326935]
[67.77984619 -62.93948364]
[71.96685791 -48.53570175]
[82.41343689 -42.43688202]
[86.01958466 -30.47111893]
[80.32989502 -18.89570618]
[84.30198669 -4.43118143]
[86.66878510 -2.92904449]
[88.58316803 -0.39887953]
[89.65060425 2.99169326]
[89.54445648 6.93545485]
[88.05243683 11.01317978]
[91.15654755 25.68848228]
[94.26065826 40.36378479]
[97.47393036 55.01557159]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[113.58132935 91.05983734]
[116.07622528 102.43598175]
[110.32312012 112.56233978]
[113.42723083 127.23764038]
[116.53134155 141.91294861]
[120.82546234 156.28515625]
[126.28081512 170.25794983]
[131.73617554 184.23074341]
[137.19152832 198.20355225]
[149.41796875 208.24470520]
[146.83930969 222.91438293]
[159.06575012 232.95553589]
[156.48709106 247.62522888]
[161.94244385 261.59802246]
[167.39781189 275.57083130]
[182.57044983 276.81671143]
[195.64425659 284.49542236]
[204.05326843 297.03768921]
[206.17405701 311.92605591]
[201.63902283 326.19992065]
[191.39872742 337.04434204]
[196.85408020 351.01715088]
[202.30943298 364.98992920]
[207.76480103 378.96273804]
[213.22015381 392.93554688]
[218.67550659 406.90832520]
[224.13085938 420.88113403]
[238.50509644 416.56512451]
[253.18000793 413.41979980]
[268.06042480 411.46548462]
[283.04986572 410.71493530]
[298.05108643 411.17294312]
[312.96679688 412.83657837]
[327.70028687 415.69503784]
[342.15597534 419.72979736]
[356.24011230 424.91467285]
[369.86138916 431.21606445]
[382.93142700 438.59307861]
[395.36547852 446.99786377]
[407.08291626 456.37594604]
[418.00772095 466.66647339]
[428.06903076 477.80273438]
[437.20162964 489.71249390]
[445.34628296 502.31848145]
[452.45013428 515.53900146]
[458.46713257 529.28820801]
[463.35827637 543.47705078]
[467.09179688 558.01348877]
[469.64352417 572.80316162]
[470.99688721 587.75024414]
[471.14312744 602.75775146]
[470.08126831 617.72833252]
[467.81823730 632.56494141]
[464.36865234 647.17132568]
[459.75494385 661.45275879]
[454.00698853 675.31665039]
[447.16210938 688.67309570]
[439.26464844 701.43536377]
[430.36587524 713.52081299]
[420.52343750 724.85101318]
[409.80123901 735.35247803]
[398.26879883 744.95709229]
[386.00088501 753.60260010]
[373.07705688 761.23291016]
[359.58117676 767.79852295]
[345.60073853 773.25683594]
[331.22640991 777.57250977]
[316.55142212 780.71752930]
[301.67095947 782.67150879]
[286.68148804 783.42175293]
[271.68029785 782.96337891]
[256.76461792 781.29943848]
[242.03118896 778.44067383]
[227.57559204 774.40557861]
[213.49154663 769.22039795]
[199.87042236 762.91870117]
[186.80053711 755.54138184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[38 148]
[39 147]
[40 146]
[42 144]
[44 142]
[45 141]
[46 140]
[47 139]
[59 138]
[60 137]
[61 136]
[63 133]
[64 132]
[65 131]
[67 130]
[68 129]
[69 128]
[70 123]
[71 122]
[73 119]
[74 118]
[75 117]
[76 116]
[78 114]
[79 113]
[80 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
