%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[91.04150391 449.78424072]
[75.79360962 449.10272217]
[62.35551071 441.86529541]
[53.39534378 429.50900269]
[50.69216537 414.48715210]
[54.78268814 399.78237915]
[64.85473633 388.31433105]
[78.90850067 382.35995483]
[71.74721527 369.29989624]
[80.09300995 355.85897827]
[80.76279449 340.87393188]
[81.43257904 325.88888550]
[82.10236359 310.90383911]
[70.23329926 298.98898315]
[70.66243744 281.83874512]
[83.61248779 270.07797241]
[84.05908966 255.08462524]
[84.50569916 240.09127808]
[84.95230865 225.09793091]
[85.39891052 210.10458374]
[85.84552002 195.11123657]
[83.70676422 192.30799866]
[82.81951904 188.32957458]
[83.72134399 183.77546692]
[86.66173553 179.46255493]
[87.77738190 164.50410461]
[88.89303589 149.54563904]
[90.00868225 134.58718872]
[91.12432861 119.62873840]
[92.23998260 104.67028046]
[90.16294861 101.42092896]
[89.52827454 97.27182007]
[90.70567322 92.88767242]
[93.75413513 89.07365417]
[95.53659821 74.17993927]
[97.31906891 59.28622437]
[99.10153198 44.39250565]
[100.88399506 29.49878883]
[92.61824799 42.01586914]
[81.42980957 52.00681305]
[68.06078339 58.80895233]
[53.39788437 61.97113037]
[38.41364670 61.28360748]
[24.10192680 56.79198837]
[11.41196632 48.79418182]
[1.18544495 37.82065582]
[-5.89934874 24.59924698]
[-9.37250519 10.00687981]
[-9.00366306 -4.98858500]
[-4.81728697 -19.39255142]
[2.90895724 -32.24965668]
[13.66261482 -42.70713425]
[26.73043442 -50.07138062]
[41.24567413 -53.85394669]
[56.24559021 -53.80395126]
[70.73529053 -49.92470932]
[83.75373077 -42.47351837]
[94.43743896 -31.94458961]
[102.07781219 -19.03626633]
[106.16807556 -4.60471392]
[106.43637848 10.39797688]
[112.91587830 -3.13036895]
[119.39537048 -16.65871429]
[125.87487030 -30.18705940]
[113.94506836 -21.09421349]
[99.95745850 -15.67694378]
[85.01516724 -14.36247921]
[70.29659271 -17.25448418]
[56.96251678 -24.12488365]
[46.06451416 -34.43185043]
[38.46204376 -47.36252975]
[34.75467682 -61.89715576]
[35.23478317 -76.88947296]
[39.86450577 -91.15711975]
[48.27872086 -103.57488251]
[59.81385040 -113.16345978]
[73.56018066 -119.16664886]
[88.43363190 -121.11101532]
[103.26120758 -118.84320831]
[116.87355042 -112.54209137]
[128.19714355 -102.70458984]
[136.33892822 -90.10652924]
[140.65684509 -75.74144745]
[140.81036377 -60.74222946]
[136.78594971 -46.28860474]
[146.94950867 -57.32048416]
[157.11305237 -68.35236359]
[167.27659607 -79.38423920]
[177.44013977 -90.41611481]
[187.60368347 -101.44799042]
[197.76724243 -112.47987366]
[201.42735291 -127.87188721]
[215.74142456 -131.98970032]
[225.90498352 -143.02157593]
[236.06852722 -154.05345154]
[225.95764160 -165.14666748]
[216.85208130 -177.07890320]
[208.82113647 -189.75933838]
[201.92593384 -203.09146118]
[196.21896362 -216.97381592]
[191.74363708 -231.30075073]
[188.53402710 -245.96321106]
[186.61456299 -260.84960938]
[185.99986267 -275.84664917]
[186.69458008 -290.84020996]
[188.69343567 -305.71615601]
[191.98123169 -320.36129761]
[196.53292847 -334.66415405]
[202.31388855 -348.51583862]
[209.28012085 -361.81100464]
[217.37858582 -374.44839478]
[226.54768372 -386.33187866]
[236.71762085 -397.37100220]
[247.81097412 -407.48171997]
[259.74331665 -416.58712769]
[272.42385864 -424.61788940]
[285.75610352 -431.51287842]
[299.63851929 -437.21966553]
[313.96551514 -441.69479370]
[328.62802124 -444.90420532]
[343.51446533 -446.82345581]
[358.51150513 -447.43795776]
[373.50506592 -446.74301147]
[388.38098145 -444.74395752]
[403.02606201 -441.45596313]
[417.32885742 -436.90405273]
[431.18048096 -431.12289429]
[444.47552490 -424.15649414]
[457.11282349 -416.05783081]
[468.99618530 -406.88858032]
[480.03512573 -396.71850586]
[490.14572144 -385.62500000]
[499.25094604 -373.69250488]
[507.28152466 -361.01184082]
[514.17633057 -347.67953491]
[519.88293457 -333.79702759]
[524.35784912 -319.46997070]
[527.56707764 -304.80740356]
[529.48608398 -289.92095947]
[530.10040283 -274.92388916]
[529.40527344 -259.93035889]
[527.40600586 -245.05445862]
[524.11779785 -230.40942383]
[519.56567383 -216.10670471]
[513.78430176 -202.25515747]
[506.81771851 -188.96020508]
[498.71890259 -176.32302856]
[489.54946899 -164.43980408]
[479.37921143 -153.40097046]
[468.28558350 -143.29055786]
[456.35296631 -134.18550110]
[443.67221069 -126.15509033]
[430.33978271 -119.26045227]
[416.45718384 -113.55406189]
[402.13006592 -109.07933807]
[387.46746826 -105.87035370]
[372.58099365 -103.95151520]
[357.58392334 -103.33743286]
[342.59039307 -104.03278351]
[327.71453857 -106.03226471]
[313.06954956 -109.32067108]
[298.76687622 -113.87297058]
[284.91540527 -119.65451813]
[271.62054443 -126.62130737]
[258.98348999 -134.72032166]
[247.10040283 -143.88990784]
[236.93685913 -132.85803223]
[226.77330017 -121.82615662]
[223.84014893 -107.22321320]
[208.79911804 -102.31632233]
[198.63555908 -91.28444672]
[188.47201538 -80.25257111]
[178.30847168 -69.22068787]
[168.14492798 -58.18881607]
[157.98138428 -47.15693665]
[147.81782532 -36.12506104]
[139.40321350 -23.70756340]
[132.92372131 -10.17921829]
[126.44422150 3.34912682]
[119.96472931 16.87747192]
[115.77771759 31.28125381]
[113.99524689 46.17497253]
[112.21278381 61.06868744]
[110.43031311 75.96240997]
[108.64785004 90.85612488]
[107.19843292 105.78593445]
[106.08278656 120.74438477]
[104.96713257 135.70283508]
[103.85148621 150.66128540]
[102.73583984 165.61975098]
[101.62018585 180.57820129]
[100.83886719 195.55783081]
[100.39225769 210.55119324]
[99.94565582 225.54454041]
[99.49904633 240.53788757]
[99.05244446 255.53123474]
[98.60583496 270.52459717]
[108.90918732 279.19958496]
[112.28572845 292.03738403]
[107.71945190 304.29428101]
[97.08740234 311.57363892]
[96.41761780 326.55868530]
[95.74783325 341.54370117]
[95.07804871 356.52874756]
[102.19142151 370.66064453]
[93.89353943 383.02972412]
[107.36003876 390.21417236]
[116.36878967 402.53509521]
[119.13110352 417.54617310]
[115.09851837 432.26693726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[10 204]
[11 203]
[12 202]
[13 201]
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[61 180]
[62 179]
[63 178]
[64 177]
[85 176]
[86 175]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[93 168]
[94 167]
[95 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
