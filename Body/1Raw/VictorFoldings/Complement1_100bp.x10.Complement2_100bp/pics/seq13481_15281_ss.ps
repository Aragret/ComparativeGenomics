%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[132.91157532 482.78347778]
[126.74324799 469.10043335]
[121.75756073 454.94357300]
[117.99042511 440.41488647]
[115.46899414 425.61904907]
[114.21142578 410.66271973]
[114.22678375 395.65359497]
[115.51496887 380.69985962]
[118.06668091 365.90924072]
[121.86354065 351.38827515]
[126.87820435 337.24166870]
[133.07452393 323.57128906]
[140.40785217 310.47561646]
[148.82537842 298.04907227]
[158.26641846 286.38113403]
[168.66296387 275.55590820]
[179.94010925 265.65136719]
[192.01660156 256.73889160]
[184.16485596 243.95806885]
[176.31309509 231.17721558]
[163.05838013 224.38296509]
[162.42729187 208.57434082]
[154.57553101 195.79350281]
[146.72378540 183.01266479]
[138.58856201 170.41035461]
[130.17395020 157.99285889]
[116.62908173 151.79722595]
[115.29272461 136.03256226]
[106.87810516 123.61506653]
[98.46348572 111.19757080]
[96.62248993 126.08416748]
[86.46755219 137.12396240]
[71.78621674 140.19940186]
[58.05425262 134.16340637]
[50.39334869 121.26726532]
[51.66083145 106.32091522]
[61.38396072 94.89897156]
[75.93624878 91.26154327]
[89.89096069 96.76603699]
[76.68623352 88.05134583]
[77.72473907 73.19299316]
[70.84532928 59.86356354]
[64.12866974 53.67290115]
[63.96438980 46.28406906]
[57.28419495 32.85369492]
[50.60400391 19.42331886]
[43.92380905 5.99294281]
[31.96680832 1.15631294]
[26.67935181 -10.16740322]
[30.40176773 -21.67697144]
[23.92227173 -35.20531845]
[17.44277573 -48.73366165]
[10.96328068 -62.26200867]
[-3.06188917 -56.91839981]
[-17.48043060 -52.75124359]
[-32.19384766 -49.78900146]
[-47.10163116 -48.05191040]
[-62.10194778 -47.55183792]
[-77.09232330 -48.29219818]
[-91.97035980 -50.26793289]
[-106.63442993 -53.46554947]
[-120.98434448 -57.86320114]
[-134.92208862 -63.43085098]
[-148.35246277 -70.13046265]
[-161.18370056 -77.91626740]
[-173.32817078 -86.73508453]
[-184.70289612 -96.52666473]
[-195.23017883 -107.22413635]
[-204.83811951 -118.75440216]
[-213.46105957 -131.03871155]
[-221.04011536 -143.99314880]
[-227.52351379 -157.52922058]
[-232.86694336 -171.55445862]
[-237.03393555 -185.97305298]
[-239.99600220 -200.68649292]
[-241.73291016 -215.59429932]
[-242.23281860 -230.59461975]
[-241.49227905 -245.58499146]
[-239.51635742 -260.46301270]
[-236.31857300 -275.12704468]
[-231.92074585 -289.47689819]
[-226.35293579 -303.41458130]
[-219.65316772 -316.84487915]
[-211.86720276 -329.67602539]
[-203.04823303 -341.82037354]
[-193.25651550 -353.19497681]
[-182.55892944 -363.72213745]
[-171.02853394 -373.32995605]
[-158.74412537 -381.95272827]
[-145.78959656 -389.53164673]
[-132.25344849 -396.01489258]
[-118.22815704 -401.35815430]
[-103.80951691 -405.52496338]
[-89.09602356 -408.48684692]
[-74.18820190 -410.22360229]
[-59.18787384 -410.72329712]
[-44.19751358 -409.98260498]
[-29.31952286 -408.00650024]
[-14.65553570 -404.80853271]
[-0.30572081 -400.41055298]
[13.63189507 -394.84255981]
[27.06210327 -388.14263916]
[39.89315796 -380.35650635]
[52.03741074 -371.53741455]
[63.41190338 -361.74554443]
[73.93893433 -351.04785156]
[83.54659271 -339.51733398]
[92.16925049 -327.23281860]
[99.74799347 -314.27819824]
[106.23106384 -300.74197388]
[111.57417297 -286.71661377]
[115.74081421 -272.29794312]
[118.70252991 -257.58441162]
[120.43908691 -242.67655945]
[120.93862915 -227.67622375]
[120.19773102 -212.68586731]
[118.22146606 -197.80790710]
[115.02332306 -183.14395142]
[110.62516022 -168.79418945]
[105.05700684 -154.85664368]
[98.35691833 -141.42651367]
[90.57065582 -128.59555054]
[81.75140381 -116.45140839]
[71.95941162 -105.07703400]
[61.26156998 -94.55012512]
[49.73095322 -84.94260406]
[37.44633484 -76.32009888]
[24.49162674 -68.74150848]
[30.97112274 -55.21315765]
[37.45061874 -41.68481445]
[43.93011475 -28.15646744]
[58.92203140 -19.03455162]
[57.35418320 -0.68725193]
[64.03437805 12.74312401]
[70.71456909 26.17350006]
[77.39476776 39.60387421]
[84.17475891 52.98414993]
[91.05416870 66.31357574]
[103.76683807 74.07485962]
[103.22039032 89.88662720]
[110.88098145 102.78295135]
[119.29560089 115.20044708]
[127.71022034 127.61794281]
[141.85696411 134.70175171]
[142.59144592 149.57823181]
[151.00605774 161.99572754]
[155.70333862 164.27229309]
[158.75271606 167.77293396]
[159.96389771 171.66499329]
[159.50462341 175.16090393]
[167.35638428 187.94175720]
[175.20812988 200.72259521]
[189.02445984 208.43101501]
[189.09393311 223.32546997]
[196.94569397 236.10630798]
[204.79743958 248.88714600]
[218.20610046 242.14312744]
[232.13839722 236.56056213]
[246.49392700 232.17964172]
[261.16928101 229.03195190]
[276.05871582 227.14018250]
[291.05493164 226.51792908]
[306.04989624 227.16970825]
[320.93557739 229.09080505]
[335.60467529 232.26739502]
[349.95156860 236.67657471]
[363.87283325 242.28657532]
[377.26818848 249.05699158]
[390.04110718 256.93902588]
[402.09954834 265.87588501]
[413.35665894 275.80319214]
[423.73132324 286.64941406]
[433.14874268 298.33639526]
[441.54113770 310.77993774]
[448.84799194 323.89038086]
[455.01666260 337.57327271]
[460.00271606 351.73001099]
[463.77023315 366.25857544]
[466.29205322 381.05432129]
[467.54998779 396.01065063]
[467.53503418 411.01977539]
[466.24722290 425.97354126]
[463.69589233 440.76422119]
[459.89941406 455.28527832]
[454.88513184 469.43203735]
[448.68914795 483.10256958]
[441.35614014 496.19842529]
[432.93896484 508.62518311]
[423.49822998 520.29333496]
[413.10195923 531.11883545]
[401.82504272 541.02368164]
[389.74880981 549.93646240]
[376.96017456 557.79302979]
[363.55136108 564.53668213]
[349.61892700 570.11889648]
[335.26327515 574.49945068]
[320.58782959 577.64672852]
[305.69836426 579.53814697]
[290.70211792 580.15997314]
[275.70718384 579.50781250]
[260.82153320 577.58636475]
[246.15251160 574.40936279]
[231.80574036 569.99981689]
[217.88461304 564.38946533]
[204.48944092 557.61871338]
[191.71673584 549.73632812]
[179.65850830 540.79919434]
[168.40165710 530.87158203]
[158.02728271 520.02508545]
[148.61015320 508.33786011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 156]
[19 155]
[20 154]
[22 152]
[23 151]
[24 150]
[25 146]
[26 145]
[28 143]
[29 142]
[30 141]
[39 140]
[41 138]
[42 137]
[44 136]
[45 135]
[46 134]
[47 133]
[50 131]
[51 130]
[52 129]
[53 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
