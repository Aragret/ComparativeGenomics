%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[86.19662476 604.95794678]
[73.06565094 597.61682129]
[61.50732803 587.98767090]
[51.91534042 576.39849854]
[44.61638641 563.24407959]
[39.85906219 548.97235107]
[37.80540085 534.06939697]
[38.52534866 519.04290771]
[41.99438858 504.40457153]
[48.09436035 490.65301514]
[56.61750793 478.25662231]
[67.27352905 467.63760376]
[79.69949341 459.15762329]
[93.47216797 453.10549927]
[108.12245941 449.68737793]
[107.45267487 434.70233154]
[106.78289032 419.71731567]
[106.11310577 404.73226929]
[105.44332123 389.74722290]
[104.77353668 374.76217651]
[104.10375214 359.77716064]
[103.43396759 344.79211426]
[88.59678650 342.71890259]
[74.38944244 337.95327759]
[61.29626846 330.65612793]
[49.76388931 321.07473755]
[40.18599701 309.53427124]
[32.88991547 296.42681885]
[28.12540436 282.19808960]
[26.05611992 267.33218384]
[26.75398636 252.33515930]
[30.19670105 237.71789551]
[36.26844406 223.97850037]
[44.76376724 211.58552551]
[55.39455414 200.96183777]
[67.79979706 192.47029114]
[81.55783081 186.40130615]
[96.20069885 182.96289062]
[95.53091431 167.97784424]
[94.86112976 152.99281311]
[94.19134521 138.00776672]
[93.52156067 123.02272797]
[92.85176849 108.03768921]
[89.20368195 93.48806763]
[82.72418976 79.95972443]
[76.24468994 66.43138123]
[69.76519775 52.90303421]
[63.28570175 39.37468719]
[56.80620575 25.84634399]
[53.48210526 40.47338486]
[42.85256577 51.05699921]
[28.21126938 54.31774139]
[14.09497833 49.24523163]
[4.87778139 37.41124344]
[3.41572523 22.48266792]
[10.16184521 9.08528519]
[23.02578163 1.37041998]
[38.02150345 1.72860825]
[50.50259018 10.04905796]
[45.88858032 -4.22367525]
[41.27457428 -18.49640846]
[36.66056442 -32.76914215]
[23.22352600 -33.09326172]
[10.56167221 -37.53451538]
[-0.09744491 -45.64744949]
[-7.72502899 -56.63137817]
[-11.59032631 -69.40938568]
[-11.33061886 -82.73390961]
[-6.98521614 -95.30853271]
[1.00973880 -105.91413116]
[11.86500168 -113.52706909]
[7.67798996 -127.93085480]
[3.49097896 -142.33464050]
[-0.69603229 -156.73841858]
[-4.88304329 -171.14219666]
[-9.07005501 -185.54597473]
[-23.97362518 -183.60072327]
[-38.99946976 -183.95338440]
[-53.79536819 -186.59571838]
[-68.01447296 -191.46577454]
[-81.32347870 -198.44938660]
[-93.41040039 -207.38284302]
[-103.99189758 -218.05676270]
[-112.81992340 -230.22090149]
[-119.68754578 -243.59011841]
[-124.43377686 -257.85104370]
[-126.94734955 -272.66934204]
[-127.16934967 -287.69769287]
[-125.09457397 -302.58380127]
[-120.77165222 -316.97866821]
[-114.30191803 -330.54492188]
[-105.83704376 -342.96450806]
[-95.57544708 -353.94631958]
[-83.75767517 -363.23291016]
[-70.66075897 -370.60659790]
[-56.59170151 -375.89453125]
[-41.88031006 -378.97271729]
[-26.87143898 -379.76907349]
[-11.91691303 -378.26489258]
[2.63270926 -374.49539185]
[16.43636322 -368.54901123]
[29.17047501 -360.56509399]
[40.53653336 -350.73080444]
[50.26810455 -339.27670288]
[58.13706970 -326.47122192]
[63.95896149 -312.61462402]
[67.59731293 -298.03164673]
[68.96683502 -283.06417847]
[68.03542328 -268.06307983]
[64.82490540 -253.38000488]
[59.41054916 -239.35911560]
[51.91927338 -226.32910156]
[42.52667999 -214.59541321]
[31.45294762 -204.43307495]
[18.95766068 -196.08033752]
[5.33372736 -189.73298645]
[9.52073860 -175.32920837]
[13.70774937 -160.92543030]
[17.89476013 -146.52165222]
[22.08177185 -132.11785889]
[26.26878357 -117.71408081]
[42.85792542 -116.28012085]
[57.65645218 -108.56744385]
[68.38109589 -95.73419189]
[73.36492920 -79.73097229]
[71.81643677 -63.00440979]
[63.94503784 -48.12309647]
[50.93329620 -37.38315201]
[55.54730606 -23.11041832]
[60.16131592 -8.83768463]
[64.77532196 5.43504858]
[70.33454895 19.36684799]
[76.81404877 32.89519119]
[83.29354095 46.42353821]
[89.77304077 59.95188522]
[96.25253296 73.48023224]
[102.73203278 87.00857544]
[102.89656067 72.00947571]
[106.23828125 57.38645172]
[112.60517883 43.80474854]
[121.70758820 31.88224220]
[133.13140869 22.16133118]
[146.35694885 15.08424950]
[160.78253174 10.97295761]
[175.75187683 10.01449203]
[190.58398438 12.25245667]
[204.60411072 17.58503914]
[217.17439270 25.76964188]
[227.72300720 36.43391800]
[235.77003479 49.09272003]
[240.94941711 63.17015076]
[243.02549744 78.02578735]
[241.90383911 92.98379517]
[237.63548279 107.36367798]
[230.41459656 120.51125336]
[220.56968689 131.82839966]
[208.54862976 140.80024719]
[194.89830017 147.01864624]
[180.23970032 150.20071411]
[165.23970032 150.20166016]
[150.58068848 147.02145386]
[136.92958069 140.80477905]
[124.90737915 131.83445740]
[115.06103516 120.51856232]
[107.83680725 107.36790466]
[108.50659943 122.35294342]
[109.17638397 137.33798218]
[109.84616852 152.32302856]
[110.51595306 167.30805969]
[111.18573761 182.29310608]
[126.07697296 184.41142273]
[140.32159424 189.22879028]
[153.43495178 196.57972717]
[164.97114563 206.21261597]
[174.53823853 217.79827881]
[181.81153870 230.94117737]
[186.54460144 245.19300842]
[188.57765198 260.06796265]
[187.84289551 275.05920410]
[184.36680603 289.65628052]
[178.26921082 303.36239624]
[169.75910950 315.71133423]
[159.12751770 326.28338623]
[146.73757935 334.71954346]
[133.01205444 340.73367310]
[118.41900635 344.12231445]
[119.08879089 359.10736084]
[119.75857544 374.09240723]
[120.42835999 389.07745361]
[121.09814453 404.06246948]
[121.76792908 419.04751587]
[122.43771362 434.03256226]
[123.10749817 449.01760864]
[138.00431824 451.11505127]
[152.26202393 455.91427612]
[165.39497375 463.25186157]
[176.95588684 472.87786865]
[186.55101013 484.46444702]
[193.85350037 497.61694336]
[198.61468506 511.88739014]
[200.67236328 526.78973389]
[199.95645142 541.81646729]
[196.49136353 556.45574951]
[190.39509583 570.20892334]
[181.87528992 582.60760498]
[171.22213745 593.22949219]
[158.79846191 601.71282959]
[145.02742004 607.76867676]
[130.37803650 611.19073486]
[115.34928894 611.86248779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[59 131]
[60 130]
[61 129]
[62 128]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
