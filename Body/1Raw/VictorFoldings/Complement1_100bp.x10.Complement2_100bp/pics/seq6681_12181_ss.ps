%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[110.98653412 610.93609619]
[97.80938721 603.04571533]
[90.35687256 589.61608887]
[90.63368225 574.25964355]
[98.56534576 561.10729980]
[112.01829529 553.69696045]
[112.24162292 538.69860840]
[112.46495056 523.70025635]
[100.45578003 514.92999268]
[95.85930634 500.60043335]
[100.63784027 486.14294434]
[113.15782928 477.16763306]
[113.38115692 462.16931152]
[113.60448456 447.17095947]
[113.82781219 432.17263794]
[114.05113983 417.17428589]
[113.93947601 402.17471313]
[113.49286652 387.18136597]
[113.04626465 372.18798828]
[112.59965515 357.19464111]
[111.92987061 342.20962524]
[111.03705597 327.23620605]
[110.14424133 312.26278687]
[109.25142670 297.28939819]
[108.24716187 282.32305908]
[107.13151550 267.36459351]
[106.01586914 252.40614319]
[95.36815643 238.45648193]
[103.50137329 221.93582153]
[94.65945435 209.94958496]
[101.13471222 195.51416016]
[99.79647827 180.57397461]
[98.45824432 165.63378906]
[97.12001038 150.69360352]
[95.78177643 135.75341797]
[94.44354248 120.81323242]
[93.10530853 105.87304688]
[90.52626801 103.00582886]
[89.22357941 99.01573181]
[89.67039490 94.49827576]
[92.05619049 90.23825073]
[91.38640594 75.25321198]
[80.00559998 64.61766052]
[79.53981018 49.41115952]
[89.74932098 38.62684250]
[89.07953644 23.64180374]
[88.40975189 8.65676498]
[87.73996735 -6.32827377]
[87.07018280 -21.31331253]
[86.40039825 -36.29835129]
[85.73060608 -51.28339005]
[71.01094055 -54.56464005]
[57.65261459 -61.53891373]
[46.56343842 -71.72547913]
[38.49526596 -84.42552948]
[33.99300385 -98.77011871]
[33.35782623 -113.77963257]
[36.62703323 -128.43066406]
[43.57190704 -141.72583008]
[53.71371841 -152.76158142]
[66.35671234 -160.78976440]
[80.63584137 -165.26815796]
[79.96605682 -180.25318909]
[79.18473053 -195.23283386]
[78.29191589 -210.20623779]
[77.39910126 -225.17964172]
[76.50628662 -240.15304565]
[75.61347198 -255.12644958]
[74.72065735 -270.09985352]
[73.82784271 -285.07327271]
[71.93454742 -299.95330811]
[69.04927063 -314.67318726]
[66.16400146 -329.39306641]
[63.27872849 -344.11297607]
[59.84666824 -348.04592896]
[58.41006088 -352.46060181]
[58.81825638 -356.51626587]
[60.60874557 -359.55377197]
[58.38362885 -374.38781738]
[56.15850830 -389.22186279]
[53.93339157 -404.05590820]
[51.70827484 -418.88995361]
[42.60223007 -424.83877563]
[38.36071396 -434.61578369]
[40.16261673 -444.89691162]
[47.17515945 -452.32907104]
[45.39269257 -467.22280884]
[43.61022568 -482.11651611]
[28.62815285 -483.69296265]
[14.37267399 -488.56420898]
[1.55883884 -496.48593140]
[-9.17061615 -507.06072998]
[-17.27750587 -519.75823975]
[-22.35519218 -533.94146729]
[-24.14898109 -548.89910889]
[-22.56889725 -563.88079834]
[-17.69419479 -578.13507080]
[-9.76938725 -590.94696045]
[0.80801827 -601.67388916]
[13.50746536 -609.77770996]
[27.69195366 -614.85192871]
[42.64999771 -616.64208984]
[57.63130569 -615.05841064]
[71.88442230 -610.18023682]
[84.69441986 -602.25231934]
[95.41874695 -591.67230225]
[103.51948547 -578.97088623]
[108.59029388 -564.78521729]
[110.37683105 -549.82672119]
[108.78948975 -534.84576416]
[103.90788269 -520.59387207]
[95.97686768 -507.78579712]
[85.39426422 -497.06402588]
[72.69088745 -488.96636963]
[58.50394440 -483.89898682]
[60.28641129 -469.00527954]
[62.06887436 -454.11154175]
[74.75950623 -439.52267456]
[66.54232025 -421.11508179]
[68.76743317 -406.28103638]
[70.99255371 -391.44699097]
[73.21767426 -376.61294556]
[75.44278717 -361.77890015]
[77.99861908 -346.99822998]
[80.88389587 -332.27835083]
[83.76916504 -317.55847168]
[86.65444183 -302.83856201]
[93.53553009 -316.16714478]
[106.47673035 -323.75167847]
[121.46807098 -323.24203491]
[133.86431885 -314.79617310]
[139.82437134 -301.03106689]
[137.50141907 -286.21203613]
[127.61528015 -274.93087769]
[113.22926331 -270.68322754]
[98.80104065 -274.78521729]
[88.80124664 -285.96606445]
[89.69406128 -270.99267578]
[90.58687592 -256.01925659]
[91.47969055 -241.04586792]
[92.37250519 -226.07244873]
[93.26532745 -211.09904480]
[94.15814209 -196.12564087]
[97.69419098 -189.63578796]
[94.95109558 -180.92297363]
[95.62088013 -165.93794250]
[110.24260712 -162.75132751]
[123.55142975 -155.88311768]
[134.63735962 -145.79617310]
[142.74067688 -133.17362976]
[147.30393982 -118.87267303]
[148.01039124 -103.86634827]
[144.80583191 -89.17728424]
[137.90287781 -75.80807495]
[127.76672363 -64.67279816]
[115.08387756 -56.53456497]
[100.71564484 -51.95317459]
[101.38543701 -36.96813583]
[102.05522156 -21.98309708]
[102.72500610 -6.99805927]
[103.39479065 7.98697948]
[104.06457520 22.97201920]
[104.73435974 37.95705795]
[115.86528778 47.78752136]
[116.75801086 62.97494125]
[106.37144470 74.58342743]
[107.04122925 89.56846619]
[108.04549408 104.53481293]
[109.38372803 119.47499847]
[110.72196198 134.41517639]
[112.06019592 149.35536194]
[113.39842987 164.29554749]
[114.73666382 179.23573303]
[116.07489777 194.17591858]
[125.01253510 207.23077393]
[118.44155884 220.59757996]
[127.82070160 229.45164490]
[128.62774658 241.92291260]
[120.97431946 251.29049683]
[122.08997345 266.24896240]
[123.20561981 281.20739746]
[126.96463013 289.53253174]
[124.22483063 296.39657593]
[125.11764526 311.36999512]
[126.01045990 326.34338379]
[126.90328217 341.31680298]
[130.21917725 347.03662109]
[130.15788269 352.71932983]
[127.59300995 356.74804688]
[128.03961182 371.74139404]
[128.48622131 386.73474121]
[128.93283081 401.72808838]
[131.67770386 406.16799927]
[132.37527466 410.75784302]
[131.31126404 414.69268799]
[129.04948425 417.39761353]
[128.82615662 432.39596558]
[128.60282898 447.39428711]
[128.37950134 462.39263916]
[128.15617371 477.39096069]
[140.40338135 486.73504639]
[144.74934387 501.32839966]
[139.72825623 515.51477051]
[127.46328735 523.92358398]
[127.23995972 538.92193604]
[127.01663208 553.92028809]
[140.24298096 561.72790527]
[147.77954102 575.11059570]
[147.59901428 590.46838379]
[139.74995422 603.67022705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 192]
[18 191]
[19 190]
[20 189]
[21 186]
[22 185]
[23 184]
[24 183]
[25 181]
[26 180]
[27 179]
[29 176]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[37 168]
[41 167]
[42 166]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[62 146]
[63 145]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 127]
[72 126]
[73 125]
[74 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[86 117]
[87 116]
[88 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
