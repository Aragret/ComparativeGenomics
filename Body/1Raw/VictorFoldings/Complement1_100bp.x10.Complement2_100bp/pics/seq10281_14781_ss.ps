%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[95.75544739 439.91918945]
[106.65002441 429.50741577]
[119.65235901 421.88928223]
[115.25135803 407.54943848]
[110.85036469 393.20959473]
[105.91876984 379.04345703]
[100.46340942 365.07064819]
[95.00805664 351.09786987]
[89.55269623 337.12506104]
[84.09734344 323.15225220]
[78.64198303 309.17947388]
[67.69295502 304.03695679]
[63.03365326 292.44064331]
[67.66795349 280.40377808]
[66.10488892 295.32211304]
[60.92882919 309.40075684]
[52.45628738 321.77880859]
[41.20536804 331.69934082]
[27.86406136 338.55569458]
[13.24819756 341.92858887]
[-1.74845695 341.61181641]
[-16.20885277 337.62472534]
[-29.24872971 330.21112061]
[-40.07069397 319.82434082]
[-48.01298141 307.09954834]
[-52.58991623 292.81488037]
[-53.52161407 277.84384155]
[-50.75110626 263.10192871]
[-44.44780731 249.49060059]
[-34.99716568 237.84219360]
[-22.97709656 228.86900330]
[-9.12262726 223.11978149]
[5.71903515 220.94606018]
[20.64031601 222.48077393]
[34.72877502 227.63008118]
[47.12289810 236.07908630]
[57.06477737 247.31114197]
[63.94647217 260.63943481]
[63.72314453 245.64108276]
[63.49981689 230.64274597]
[63.27648926 215.64440918]
[56.56600571 229.05967712]
[46.24290848 239.94239807]
[33.20024872 247.35112000]
[18.56634903 250.64489746]
[3.60718703 249.53878784]
[-10.38312054 244.12849426]
[-22.19427109 234.88204956]
[-30.80448341 222.59936523]
[-35.46888733 208.34301758]
[-35.78396606 193.34632874]
[-31.72245789 178.90666199]
[-23.63572884 166.27317810]
[-12.22336197 156.53881836]
[1.52736235 150.54568481]
[16.42686653 148.81225586]
[31.18619537 151.48849487]
[44.52851868 158.34286499]
[55.29959106 168.78239441]
[62.56761169 181.90397644]
[65.70359802 196.56895447]
[69.67568970 182.10443115]
[73.64778900 167.63990784]
[77.61988068 153.17538452]
[81.59197998 138.71084595]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[90.93160248 68.54299164]
[103.88894653 56.70769882]
[107.64524841 42.18563843]
[95.36054993 34.67718124]
[85.70088196 24.02244568]
[79.44284821 11.09139919]
[77.08579254 -3.06353545]
[78.81199646 -17.29313469]
[84.47258759 -30.44467354]
[93.60031891 -41.45530701]
[105.44817352 -49.43796921]
[119.05045319 -53.75282669]
[133.30149841 -54.05855942]
[137.27360535 -68.52308655]
[141.24569702 -82.98760986]
[133.68818665 -96.60824585]
[137.92250061 -111.22074890]
[150.95426941 -118.34173584]
[153.40000916 -133.14100647]
[154.29281616 -148.11441040]
[155.18563843 -163.08781433]
[156.07844543 -178.06123352]
[156.97126770 -193.03463745]
[157.86408997 -208.00804138]
[158.75689697 -222.98144531]
[159.64971924 -237.95484924]
[160.54252625 -252.92825317]
[161.43534851 -267.90167236]
[162.32815552 -282.87506104]
[148.23771667 -288.38095093]
[136.53961182 -297.97311401]
[128.37989807 -310.71179199]
[124.55798340 -325.34899902]
[125.44829559 -340.45074463]
[130.96360779 -354.53750610]
[140.56361389 -366.22918701]
[153.30775452 -374.38034058]
[167.94754028 -378.19247437]
[183.04867554 -377.29202271]
[197.13172913 -371.76727295]
[208.81697083 -362.15945435]
[216.95960999 -349.40982056]
[220.76190186 -334.76751709]
[219.85134888 -319.66696167]
[214.31715393 -305.58764648]
[204.70150757 -293.90884399]
[191.94644165 -285.77474976]
[177.30157471 -281.98223877]
[176.40875244 -267.00885010]
[175.51593018 -252.03544617]
[174.62312317 -237.06202698]
[173.73030090 -222.08862305]
[172.83749390 -207.11521912]
[171.94467163 -192.14181519]
[171.05184937 -177.16841125]
[170.15904236 -162.19500732]
[169.26622009 -147.22160339]
[168.37341309 -132.24819946]
[176.74829102 -144.69252014]
[189.20526123 -153.04858398]
[203.89640808 -156.07681274]
[218.64239502 -153.32797241]
[231.25572205 -145.20985413]
[239.86529541 -132.92672729]
[243.19392395 -118.30071259]
[240.74783325 -103.50150299]
[232.88989258 -90.72447205]
[220.78575134 -81.86500549]
[206.23101807 -78.23736572]
[191.38479614 -80.37968445]
[178.44941711 -87.97416687]
[169.34379578 -99.89421082]
[165.41879272 -114.36964417]
[172.98619080 -101.59191895]
[169.16397095 -86.86625671]
[155.71022034 -79.01551056]
[151.73812866 -64.55098724]
[147.76602173 -50.08646393]
[160.93875122 -41.61264038]
[170.86044312 -29.46786690]
[176.55056763 -14.83339310]
[177.44093323 0.86257190]
[173.43238831 16.08423424]
[164.90570068 29.33849335]
[152.68547058 39.32139587]
[137.96029663 45.04641342]
[122.16730499 45.94194031]
[118.41100311 60.46400070]
[124.27779388 71.04262543]
[121.26721191 83.17193604]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[96.05650330 142.68295288]
[92.08441162 157.14747620]
[88.11231232 171.61199951]
[84.14021301 186.07652283]
[80.16812134 200.54104614]
[78.27482605 215.42108154]
[78.49815369 230.41941833]
[78.72148132 245.41775513]
[78.94480896 260.41610718]
[81.72042084 275.15704346]
[96.19205475 286.54357910]
[92.61478424 303.72412109]
[98.07013702 317.69689941]
[103.52549744 331.66970825]
[108.98085022 345.64248657]
[114.43621063 359.61529541]
[119.89156342 373.58810425]
[128.21325684 361.10812378]
[143.14521790 359.68106079]
[153.68016052 370.35882568]
[152.05210876 385.27023315]
[139.46121216 393.42309570]
[125.19020844 388.80859375]
[129.59120178 403.14843750]
[133.99220276 417.48828125]
[149.02954102 416.50085449]
[163.88917542 419.00848389]
[177.76972961 424.87591553]
[189.92263794 433.78677368]
[199.69253540 445.26049805]
[206.55250549 458.67828369]
[210.13262939 473.31658936]
[210.23983765 488.38592529]
[206.86831665 503.07366943]
[200.19992065 516.58770752]
[190.59425354 528.19921875]
[178.56933594 537.28210449]
[164.77366638 543.34643555]
[149.95121765 546.06518555]
[134.90135193 545.29174805]
[120.43567657 541.06787109]
[107.33432770 533.62133789]
[96.30383301 523.35369873]
[87.93904877 510.81863403]
[82.69108582 496.69223022]
[80.84296417 481.73623657]
[82.49433899 466.75726318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[5 186]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[14 173]
[38 172]
[39 171]
[40 170]
[41 169]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 162]
[69 160]
[71 157]
[72 156]
[82 147]
[83 146]
[84 145]
[87 142]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
