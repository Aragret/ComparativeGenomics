%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[71.11072540 894.27868652]
[56.12335587 893.60876465]
[41.17868805 892.29473877]
[26.30438805 890.33892822]
[11.52800369 887.74499512]
[-3.12310314 884.51776123]
[-17.62180328 880.66320801]
[-31.94124603 876.18847656]
[-46.05491638 871.10180664]
[-59.93667984 865.41265869]
[-73.56082916 859.13153076]
[-86.90213776 852.27008057]
[-99.93589783 844.84100342]
[-112.63796997 836.85809326]
[-124.98484039 828.33605957]
[-136.95364380 819.29077148]
[-148.52221680 809.73889160]
[-159.66912842 799.69818115]
[-170.37374878 789.18719482]
[-180.61625671 778.22534180]
[-190.37767029 766.83306885]
[-199.63993835 755.03137207]
[-208.38587952 742.84210205]
[-216.59931946 730.28784180]
[-224.26504517 717.39184570]
[-231.36885071 704.17797852]
[-237.89758301 690.67071533]
[-243.83917236 676.89514160]
[-249.18258667 662.87664795]
[-253.91795349 648.64123535]
[-258.03649902 634.21533203]
[-261.53060913 619.62554932]
[-264.39376831 604.89898682]
[-266.62072754 590.06286621]
[-268.20733643 575.14465332]
[-269.15066528 560.17199707]
[-269.44894409 545.17266846]
[-269.10168457 530.17431641]
[-268.10943604 515.20483398]
[-266.47412109 500.29193115]
[-264.19869995 485.46316528]
[-261.28744507 470.74600220]
[-257.74569702 456.16772461]
[-253.58004761 441.75534058]
[-248.79820251 427.53549194]
[-243.40901184 413.53454590]
[-237.42247009 399.77841187]
[-230.84963989 386.29257202]
[-223.70271301 373.10198975]
[-215.99490356 360.23110962]
[-207.74049377 347.70376587]
[-198.95478821 335.54312134]
[-189.65402222 323.77172852]
[-179.85543823 312.41137695]
[-169.57717896 301.48309326]
[-158.83828735 291.00711060]
[-147.65863037 281.00286865]
[-136.05891418 271.48883057]
[-124.06063080 262.48266602]
[-111.68598938 254.00103760]
[-98.95790100 246.05963135]
[-85.89994049 238.67318726]
[-72.53629303 231.85536194]
[-58.89170074 225.61877441]
[-44.99142838 219.97499084]
[-30.86121559 214.93444824]
[-16.52723122 210.50648499]
[-2.01601863 206.69931030]
[12.64555264 203.51995850]
[27.43033218 200.97433472]
[42.31093979 199.06713867]
[57.25982285 197.80189514]
[72.24929810 197.18096924]
[87.25160980 197.20550537]
[87.92139435 182.22045898]
[88.59117889 167.23542786]
[85.74948120 160.41291809]
[89.38413239 152.03276062]
[90.27694702 137.05935669]
[91.16976929 122.08594513]
[92.06258392 107.11254120]
[91.61597443 92.11918640]
[89.83351135 77.22547150]
[88.05104065 62.33175659]
[86.26857758 47.43803787]
[84.48611450 32.54431915]
[82.70364380 17.65060234]
[80.69963074 2.78507471]
[78.47451782 -12.04896927]
[76.24939728 -26.88301277]
[61.28294373 -28.92797470]
[47.49942780 -35.10789871]
[36.01622772 -44.92180252]
[27.76422691 -57.57412338]
[23.41238213 -72.03918457]
[23.31347847 -87.14438629]
[27.47553062 -101.66519165]
[35.56114197 -114.42449188]
[46.91484833 -124.38792419]
[60.61625671 -130.74780273]
[75.55464935 -132.98858643]
[90.51904297 -130.92858887]
[104.29634094 -124.73481750]
[115.76967621 -114.90937805]
[124.00896454 -102.24877930]
[128.34626770 -87.77935028]
[128.43000793 -72.67406464]
[124.25336456 -58.15743637]
[116.15493774 -45.40627289]
[104.79122925 -35.45425034]
[91.08344269 -29.10812950]
[93.30855560 -14.27408600]
[95.53367615 0.55995744]
[98.77369690 4.06870413]
[99.84394073 9.65006542]
[97.59736633 15.86813736]
[99.37982941 30.76185417]
[101.16229248 45.65557098]
[102.94476318 60.54928970]
[104.72722626 75.44300842]
[106.50968933 90.33672333]
[113.08314514 76.85378265]
[124.80181122 67.49040222]
[139.40299988 64.05449677]
[154.06744385 67.20949554]
[165.96366882 76.34622192]
[172.79470825 89.70050049]
[173.24159241 104.69384003]
[167.21804810 118.43126678]
[155.88710022 128.26028442]
[141.43658447 132.28308105]
[126.65668488 129.72290039]
[114.40116119 121.07408142]
[107.03598785 108.00535583]
[106.14317322 122.97875977]
[105.25035858 137.95216370]
[104.35753632 152.92556763]
[103.57621765 167.90521240]
[102.90643311 182.89024353]
[102.23664856 197.87528992]
[117.18132019 199.18930054]
[132.05563354 201.14505005]
[146.83201599 203.73890686]
[161.48313904 206.96607971]
[175.98185730 210.82058716]
[190.30131531 215.29530334]
[204.41499329 220.38192749]
[218.29678345 226.07104492]
[231.92094421 232.35211182]
[245.26228333 239.21351624]
[258.29605103 246.64254761]
[270.99816895 254.62542725]
[283.34506226 263.14739990]
[295.31390381 272.19268799]
[306.88250732 281.74450684]
[318.02944946 291.78518677]
[328.73410034 302.29614258]
[338.97665405 313.25790405]
[348.73809814 324.65017700]
[358.00039673 336.45187378]
[366.74639893 348.64111328]
[374.95986938 361.19534302]
[382.62564087 374.09130859]
[389.72949219 387.30514526]
[396.25827026 400.81234741]
[402.19989014 414.58795166]
[407.54336548 428.60641479]
[412.27877808 442.84176636]
[416.39736938 457.26770020]
[419.89151001 471.85745239]
[422.75476074 486.58401489]
[424.98175049 501.42013550]
[426.56842041 516.33831787]
[427.51177979 531.31097412]
[427.81011963 546.31030273]
[427.46289062 561.30865479]
[426.47070312 576.27813721]
[424.83541870 591.19104004]
[422.56005859 606.01983643]
[419.64886475 620.73699951]
[416.10717773 635.31530762]
[411.94155884 649.72772217]
[407.15975952 663.94757080]
[401.77062988 677.94854736]
[395.78411865 691.70465088]
[389.21133423 705.19055176]
[382.06445312 718.38110352]
[374.35668945 731.25201416]
[366.10232544 743.77941895]
[357.31665039 755.94012451]
[348.01593018 767.71154785]
[338.21737671 779.07189941]
[327.93917847 790.00024414]
[317.20031738 800.47625732]
[306.02069092 810.48052979]
[294.42098999 819.99456787]
[282.42276001 829.00079346]
[270.04812622 837.48248291]
[257.32006836 845.42388916]
[244.26214600 852.81042480]
[230.89851379 859.62829590]
[217.25393677 865.86492920]
[203.35368347 871.50872803]
[189.22349548 876.54931641]
[174.88952637 880.97735596]
[160.37832642 884.78454590]
[145.71676636 887.96398926]
[130.93199158 890.50964355]
[116.05138397 892.41687012]
[101.10250854 893.68218994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 140]
[75 139]
[76 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
