%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[25.24998283 717.10314941]
[11.04452801 721.94512939]
[-3.50072241 725.64324951]
[-18.29380798 728.17401123]
[-33.24119949 729.52142334]
[-48.24839401 729.67700195]
[-63.22050858 728.63977051]
[-78.06288910 726.41632080]
[-92.68168640 723.02056885]
[-106.98448181 718.47412109]
[-120.88084412 712.80572510]
[-134.28291321 706.05114746]
[-147.10595703 698.25305176]
[-159.26892090 689.46087646]
[-170.69487000 679.73010254]
[-181.31159973 669.12231445]
[-191.05195618 657.70452881]
[-199.85438538 645.54901123]
[-207.66320801 632.73254395]
[-214.42907715 619.33612061]
[-220.10919189 605.44451904]
[-224.66766357 591.14556885]
[-228.07566833 576.52966309]
[-230.31164551 561.68914795]
[-231.36146545 546.71789551]
[-231.21849060 531.71057129]
[-229.88363647 516.76208496]
[-227.36532593 501.96685791]
[-223.67947388 487.41848755]
[-218.84941101 473.20898438]
[-212.90565491 459.42813110]
[-205.88578796 446.16308594]
[-197.83419800 433.49768066]
[-188.80178833 421.51205444]
[-178.84565735 410.28192139]
[-168.02876282 399.87832642]
[-156.41949463 390.36700439]
[-144.09124756 381.80813599]
[-131.12194824 374.25582886]
[-117.59362793 367.75778198]
[-103.59178925 362.35513306]
[-89.20497131 358.08200073]
[-74.52413177 354.96545410]
[-59.64208603 353.02511597]
[-44.65292740 352.27334595]
[-29.65142250 352.71481323]
[-14.73241425 354.34680176]
[0.00976925 357.15893555]
[3.98186541 342.69439697]
[7.95396185 328.22988892]
[2.24532390 317.56506348]
[5.43616390 305.48193359]
[16.34325600 298.59729004]
[20.53026772 284.19351196]
[24.71727943 269.78973389]
[28.90429115 255.38595581]
[33.09130096 240.98217773]
[37.27831268 226.57838440]
[41.46532440 212.17460632]
[29.58697510 221.33456421]
[14.73350334 223.42607117]
[0.78757006 217.90238953]
[-8.60539150 206.20742798]
[-10.99008274 191.39819336]
[-5.74315214 177.34580994]
[5.76386595 167.72351074]
[20.52306366 165.04655457]
[34.67642212 170.01469421]
[44.52429199 181.32926941]
[47.49250793 196.03178406]
[53.76986694 182.40847778]
[60.04722977 168.78515625]
[66.32459259 155.16183472]
[64.62365723 140.36466980]
[77.42607880 131.06906128]
[83.70343781 117.44573975]
[76.57381439 104.59842682]
[78.31781769 90.00926971]
[88.27484131 79.20451355]
[102.67324066 76.27690125]
[108.95060730 62.65358353]
[115.22796631 49.03026962]
[113.97602844 33.25867462]
[126.32945251 24.93748474]
[132.60681152 11.31416893]
[138.88417053 -2.30914760]
[137.63224792 -18.08074379]
[149.98567200 -26.40193176]
[155.33685303 -40.41495514]
[159.73785400 -54.75480270]
[164.13883972 -69.09465027]
[168.53984070 -83.43449402]
[172.94084167 -97.77434540]
[177.34184265 -112.11418915]
[181.52885437 -126.51797485]
[185.50094604 -140.98249817]
[189.47303772 -155.44702148]
[193.44514465 -169.91154480]
[197.41723633 -184.37606812]
[183.95928955 -191.11180115]
[172.07420349 -200.34385681]
[162.21879578 -211.71739197]
[154.77189636 -224.79522705]
[150.01972961 -239.07469177]
[148.14495850 -254.00691223]
[149.21965027 -269.01794434]
[153.20249939 -283.53082275]
[159.94039917 -296.98767090]
[169.17439270 -308.87127686]
[180.54951477 -318.72482300]
[193.62855530 -326.16961670]
[207.90878296 -330.91946411]
[222.84132385 -332.79180908]
[237.85218811 -331.71469116]
[252.36441040 -327.72952271]
[265.82015991 -320.98941040]
[277.70227051 -311.75350952]
[287.55398560 -300.37680054]
[294.99667358 -287.29653931]
[299.74420166 -273.01553345]
[301.61413574 -258.08270264]
[300.53457642 -243.07202148]
[296.54705811 -228.56045532]
[289.80477905 -215.10577393]
[280.56695557 -203.22517395]
[269.18862915 -193.37528992]
[256.10717773 -185.93473816]
[241.82540894 -181.18951416]
[226.89227295 -179.32199097]
[211.88175964 -180.40397644]
[207.90966797 -165.93945312]
[203.93756104 -151.47492981]
[199.96546936 -137.01040649]
[195.99337769 -122.54587555]
[197.53512573 -118.02569580]
[196.25369263 -112.48899841]
[191.68168640 -107.71318817]
[187.28068542 -93.37334442]
[182.87969971 -79.03350067]
[178.47869873 -64.69364929]
[174.07769775 -50.35380173]
[169.67669678 -36.01395798]
[182.03227234 -44.51922607]
[197.02099609 -45.10078430]
[209.99844360 -37.57842255]
[216.94340515 -24.28303146]
[215.70391846 -9.33432961]
[206.66404724 2.63566351]
[192.62490845 7.91791582]
[177.93664551 4.87566376]
[167.15061951 -5.54841757]
[163.60897827 -20.12457085]
[165.30992126 -5.32740593]
[152.50749207 3.96821308]
[146.23013306 17.59152985]
[139.95277405 31.21484566]
[141.65370178 46.01200867]
[128.85128784 55.30762863]
[122.57392120 68.93094635]
[116.29656219 82.55426025]
[123.42618561 95.40157318]
[121.68218231 109.99073029]
[111.72515869 120.79548645]
[97.32675934 123.72309875]
[91.04939270 137.34642029]
[92.30133057 153.11801147]
[79.94790649 161.43919373]
[73.67054749 175.06251526]
[67.39318848 188.68583679]
[61.11582565 202.30914307]
[55.86910629 216.36161804]
[51.68209457 230.76539612]
[47.49508286 245.16918945]
[43.30807114 259.57296753]
[39.12105942 273.97674561]
[34.93405151 288.38052368]
[30.74703789 302.78430176]
[35.55060196 320.56091309]
[22.41848564 332.20196533]
[18.44639015 346.66650391]
[14.47429276 361.13101196]
[28.58513641 366.24218750]
[42.24528503 372.45834351]
[55.36837769 379.74014282]
[67.87143707 388.04156494]
[79.67542267 397.31011963]
[90.70569611 407.48721313]
[100.89252472 418.50848389]
[110.17150116 430.30426025]
[118.48396301 442.79998779]
[125.77735901 455.91662598]
[132.00556946 469.57128906]
[137.12921143 483.67761230]
[141.11590576 498.14642334]
[143.94044495 512.88623047]
[145.58496094 527.80383301]
[146.03906250 542.80499268]
[145.29988098 557.79479980]
[143.37207031 572.67846680]
[140.26785278 587.36187744]
[136.00683594 601.75231934]
[130.61596680 615.75866699]
[124.12931061 629.29248047]
[116.58789825 642.26812744]
[108.03939819 654.60357666]
[98.53786469 666.22082520]
[88.14336395 677.04644775]
[76.92162323 687.01202393]
[64.94358063 696.05450439]
[52.28497314 704.11676025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 181]
[49 180]
[50 179]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 171]
[70 170]
[71 169]
[72 168]
[73 167]
[75 165]
[76 164]
[80 160]
[81 159]
[82 158]
[84 156]
[85 155]
[86 154]
[88 152]
[89 142]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
