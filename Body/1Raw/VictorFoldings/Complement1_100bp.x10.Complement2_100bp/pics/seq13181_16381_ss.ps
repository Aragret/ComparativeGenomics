%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[63.25856018 638.46112061]
[48.26067734 639.30877686]
[33.28046799 638.19152832]
[18.57425880 635.12841797]
[4.39369631 630.17193604]
[-9.01857185 623.40692139]
[-21.43304634 614.94903564]
[-32.63729477 604.94299316]
[-42.43960190 593.56011963]
[-50.67223740 580.99517822]
[-57.19432831 567.46307373]
[-61.89427185 553.19543457]
[-64.69165039 538.43640137]
[-65.53859711 523.43847656]
[-64.42060852 508.45831299]
[-61.35682678 493.75225830]
[-56.39967346 479.57192993]
[-49.63397598 466.15997314]
[-41.17549515 453.74591064]
[-31.16897392 442.54211426]
[-19.78563499 432.74035645]
[-7.22026253 424.50833130]
[6.31213379 417.98687744]
[20.57999611 413.28762817]
[35.33918381 410.49093628]
[50.33714676 409.64471436]
[51.45279694 394.68624878]
[44.68353653 381.41876221]
[53.42581940 368.23229980]
[54.54146576 353.27383423]
[55.65711594 338.31536865]
[56.77276230 323.35693359]
[43.10024261 318.84173584]
[30.90089798 311.17535400]
[20.88867188 300.80111694]
[13.65078831 288.32089233]
[9.61331940 274.46032715]
[9.01610470 260.02661133]
[11.89850807 245.86137390]
[18.09685898 232.79168701]
[27.25373840 221.58181763]
[38.83858109 212.88842773]
[52.17842865 207.22218323]
[66.49700928 204.91775513]
[67.83524323 189.97756958]
[58.87400055 202.00653076]
[45.83495712 209.42161560]
[30.91542244 210.97322083]
[16.62960052 206.39990234]
[5.38490248 196.47232056]
[-0.92374206 182.86346436]
[-1.23321617 167.86665344]
[4.50863218 154.00912476]
[15.33420086 143.62611389]
[29.41919136 138.46733093]
[44.39003372 139.40211487]
[57.72388077 146.27296448]
[67.17374420 157.92201233]
[71.14725494 172.38781738]
[75.33426666 157.98403931]
[79.52127838 143.58026123]
[83.70829010 129.17648315]
[87.89530182 114.77269745]
[81.00897980 102.02417755]
[85.05349731 88.11058044]
[97.70092010 81.04029083]
[101.88792419 66.63651276]
[106.07493591 52.23273087]
[108.96021271 37.51283646]
[102.70059204 22.98260117]
[111.71999359 11.12934113]
[113.28051758 -3.78926396]
[114.84103394 -18.70786858]
[116.40155792 -33.62647247]
[117.96208191 -48.54507828]
[119.52260590 -63.46368408]
[119.85758209 -78.45994568]
[118.96476746 -93.43334961]
[118.07195282 -108.40675354]
[117.17913818 -123.38015747]
[116.28631592 -138.35356140]
[115.39350128 -153.32696533]
[112.07761383 -159.04679871]
[112.13890076 -164.72950745]
[114.70377350 -168.75822449]
[114.25716400 -183.75157166]
[113.81056213 -198.74491882]
[113.36395264 -213.73826599]
[112.91735077 -228.73161316]
[98.07543182 -231.22235107]
[84.00472260 -236.56101990]
[71.24606323 -244.54241943]
[60.28986359 -254.85978699]
[51.55724716 -267.11651611]
[45.38387299 -280.84152222]
[42.00703049 -295.50723267]
[41.55651855 -310.54995728]
[44.04964828 -325.39147949]
[49.39059830 -339.46130371]
[57.37406921 -352.21868896]
[67.69319916 -363.17321777]
[79.95134735 -371.90383911]
[93.67735291 -378.07498169]
[108.34361267 -381.44946289]
[123.38639832 -381.89755249]
[138.22750854 -379.40200806]
[152.29649353 -374.05877686]
[165.05256653 -366.07324219]
[176.00543213 -355.75234985]
[184.73406982 -343.49276733]
[190.90299988 -329.76577759]
[194.27510071 -315.09896851]
[194.72074890 -300.05612183]
[192.22280884 -285.21539307]
[186.87730408 -271.14727783]
[178.88970947 -258.39251709]
[168.56703186 -247.44131470]
[156.30604553 -238.71466064]
[142.57804871 -232.54794312]
[127.91069794 -229.17822266]
[128.35729980 -214.18487549]
[128.80390930 -199.19152832]
[129.25051880 -184.19818115]
[129.69712830 -169.20481873]
[130.36691284 -154.21978760]
[131.25971985 -139.24638367]
[132.15254211 -124.27297211]
[133.04534912 -109.29956818]
[133.93817139 -94.32616425]
[134.83099365 -79.35276031]
[142.53656006 -92.22226715]
[155.29193115 -100.11532593]
[170.24752808 -101.26860809]
[184.06224060 -95.42446899]
[193.64979553 -83.88849640]
[196.86834717 -69.23786926]
[192.99884033 -54.74556351]
[182.90573120 -43.64920425]
[168.84385681 -38.42774200]
[153.95466614 -40.24766541]
[141.56445312 -48.70240021]
[134.44120789 -61.90316010]
[132.88069153 -46.98455429]
[131.32015991 -32.06595230]
[129.75964355 -17.14734650]
[128.19911194 -2.22874093]
[126.63859558 12.68986416]
[133.00982666 26.15302277]
[123.87881470 39.07336044]
[133.27526855 27.38119507]
[146.77671814 20.84585762]
[161.77627563 20.72921944]
[175.37773132 27.05380249]
[184.95486450 38.59842682]
[188.65849304 53.13401031]
[185.77349854 67.85395813]
[176.85691833 79.91606903]
[163.63041687 86.99135590]
[148.64782715 87.71368408]
[134.80203247 81.94357300]
[124.76645660 70.79515839]
[120.47872162 56.41973877]
[116.29170990 70.82352448]
[112.10469818 85.22730255]
[118.99102020 97.97582245]
[114.94650269 111.88941956]
[102.29907990 118.95970917]
[98.11207581 133.36349487]
[93.92506409 147.76727295]
[89.73805237 162.17105103]
[85.55104065 176.57482910]
[82.77542877 191.31579590]
[81.43719482 206.25598145]
[96.15167999 211.59248352]
[108.97805786 220.54399109]
[119.04818726 232.49765015]
[125.68230438 246.63758850]
[128.43490601 262.00067139]
[127.12461853 277.54214478]
[121.84621429 292.20657349]
[112.96372986 304.99957275]
[101.08537292 315.05529785]
[87.02188873 321.69491577]
[71.73121643 324.47256470]
[70.61557007 339.43103027]
[69.49991608 354.38949585]
[68.38426971 369.34793091]
[75.07373047 383.68536377]
[66.41124725 395.80191040]
[65.29560089 410.76034546]
[80.00209808 413.82205200]
[94.18313599 418.77716064]
[107.59604645 425.54095459]
[120.01132965 433.99765015]
[131.21652222 444.00259399]
[141.01991272 455.38452148]
[149.25375366 467.94873047]
[155.77713013 481.48019409]
[160.47843933 495.74737549]
[163.27722168 510.50616455]
[164.12557983 525.50402832]
[163.00903320 540.48425293]
[159.94664001 555.19061279]
[154.99084473 569.37139893]
[148.22642517 582.78399658]
[139.76911926 595.19891357]
[129.76367188 606.40362549]
[118.38126373 616.20648193]
[105.81667328 624.43969727]
[92.28489685 630.96240234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 190]
[27 189]
[29 187]
[30 186]
[31 185]
[32 184]
[44 173]
[45 172]
[59 171]
[60 170]
[61 169]
[62 168]
[63 167]
[66 164]
[67 163]
[68 162]
[69 149]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
