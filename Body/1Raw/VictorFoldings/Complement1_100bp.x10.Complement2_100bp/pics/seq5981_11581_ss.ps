%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[96.72711182 667.03527832]
[81.85641479 664.99133301]
[67.23320770 661.60357666]
[52.97865295 656.90008545]
[39.21087265 650.91979980]
[26.04395485 643.71234131]
[13.58700848 635.33740234]
[1.94325638 625.86437988]
[-8.79081535 615.37176514]
[-18.52626038 603.94653320]
[-27.18240356 591.68328857]
[-34.68751526 578.68371582]
[-40.97941208 565.05554199]
[-46.00594711 550.91168213]
[-49.72547150 536.36932373]
[-52.10716248 521.54895020]
[-53.13128662 506.57342529]
[-52.78936005 491.56683350]
[-51.08420944 476.65347290]
[-48.02996445 461.95700073]
[-43.65193939 447.59912109]
[-37.98641205 433.69888306]
[-31.08032608 420.37142944]
[-22.99091148 407.72717285]
[-13.78520012 395.87097168]
[-3.53947449 384.90097046]
[7.66136360 374.90817261]
[19.72449875 365.97531128]
[32.54997253 358.17642212]
[46.03150177 351.57614136]
[60.05737305 346.22918701]
[74.51136780 342.17980957]
[89.27370453 339.46160889]
[104.22206116 338.09710693]
[104.22206116 323.09710693]
[104.22206116 308.09710693]
[104.22206116 293.09710693]
[102.00079346 290.35879517]
[100.99549103 286.40853882]
[101.76132202 281.82958984]
[104.57199860 277.43106079]
[105.24178314 262.44601440]
[105.91156769 247.46096802]
[106.35816956 232.46762085]
[106.58150482 217.46928406]
[106.69316864 202.46969604]
[106.69316864 187.46969604]
[106.69316864 172.46969604]
[106.69316864 157.46969604]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[82.24440002 103.56279755]
[68.33901215 109.18776703]
[54.03289795 104.67832184]
[45.86661530 92.09611511]
[47.57368088 77.19356537]
[58.37364578 66.78392029]
[73.32891083 65.62632751]
[85.60320282 74.25153351]
[82.93740845 59.49031448]
[80.27160645 44.72909546]
[77.60581207 29.96788025]
[74.94001770 15.20666218]
[72.27422333 0.44544491]
[69.60842896 -14.31577206]
[66.94263458 -29.07699013]
[62.28252411 -14.81924057]
[53.29808426 -2.80758667]
[40.93746185 5.69035482]
[26.50510216 9.77777576]
[11.52408791 9.02332020]
[-2.42460036 3.50660825]
[-13.86892319 -6.19016838]
[-21.60113335 -19.04368591]
[-24.80523491 -33.69748306]
[-23.14308739 -48.60510635]
[-16.79010582 -62.19332123]
[-6.41673136 -73.02812958]
[6.88230658 -79.96611786]
[21.70352936 -82.27508545]
[36.48281860 -79.71137238]
[49.66048050 -72.54553986]
[59.84584427 -61.53379822]
[65.96407318 -47.83806992]
[66.96833038 -62.80441666]
[67.86115265 -77.77782440]
[68.75396729 -92.75122833]
[60.13247299 -109.02240753]
[70.36013031 -123.28291321]
[71.02991486 -138.26794434]
[71.69969940 -153.25299072]
[72.36948395 -168.23802185]
[63.50669479 -184.37904358]
[73.52090454 -198.79023743]
[73.96750641 -213.78358459]
[74.41411591 -228.77694702]
[74.86071777 -243.77029419]
[61.28874969 -250.75343323]
[52.09755325 -262.93887329]
[49.11204910 -277.90716553]
[52.92501831 -292.68634033]
[62.77938461 -304.34197998]
[76.71855927 -310.55987549]
[91.97490692 -310.10543823]
[105.51927948 -303.06887817]
[114.66241455 -290.84735107]
[117.58895111 -275.86743164]
[113.71781158 -261.10339355]
[103.81761932 -249.48663330]
[89.85407257 -243.32368469]
[89.40746307 -228.33033752]
[88.96086121 -213.33699036]
[88.51425171 -198.34362793]
[96.57833099 -189.32713318]
[96.32896423 -176.83227539]
[87.35452271 -167.56823730]
[86.68473816 -152.58320618]
[86.01495361 -137.59815979]
[85.34516907 -122.61312866]
[93.27410889 -113.47756195]
[92.83873749 -100.98780060]
[83.72737122 -91.85841370]
[82.83455658 -76.88500214]
[81.94174194 -61.91159821]
[84.68154144 -55.04754257]
[80.92252350 -46.72242355]
[81.70384979 -31.74278450]
[84.36964417 -16.98156738]
[87.03543854 -2.22035050]
[89.70123291 12.54086685]
[92.36702728 27.30208397]
[95.03282928 42.06330109]
[97.69862366 56.82452011]
[100.36441803 71.58573914]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[121.90081024 123.71915436]
[128.97357178 110.49130249]
[139.58876038 99.89328766]
[152.82803345 92.84194183]
[167.54608154 89.94727325]
[182.46963501 91.45970917]
[196.30766296 97.24839783]
[207.86303711 106.81256866]
[216.13610840 119.32482147]
[220.41114807 133.70271301]
[220.31835938 148.70243835]
[215.86573792 163.02633667]
[207.43849182 175.43527222]
[195.76567078 184.85572815]
[181.85707092 190.47276306]
[166.91593933 191.80043030]
[152.23484802 188.72387695]
[139.08381653 181.50926208]
[128.60058594 170.78073120]
[121.69316864 157.46969604]
[121.69316864 172.46969604]
[121.69316864 187.46969604]
[121.69316864 202.46969604]
[124.82257843 211.05134583]
[121.57984161 217.69261169]
[121.35651398 232.69094849]
[124.23780060 238.64155579]
[123.75401306 244.30398560]
[120.89660645 248.13076782]
[120.22682190 263.11581421]
[119.55703735 278.10083008]
[119.22206116 293.09710693]
[119.22206116 308.09710693]
[119.22206116 323.09710693]
[119.22206116 338.09710693]
[134.17041016 339.46160889]
[148.93275452 342.17980957]
[163.38674927 346.22918701]
[177.41261292 351.57614136]
[190.89414978 358.17642212]
[203.71961975 365.97531128]
[215.78276062 374.90817261]
[226.98359680 384.90097046]
[237.22932434 395.87097168]
[246.43502808 407.72717285]
[254.52444458 420.37142944]
[261.43054199 433.69888306]
[267.09606934 447.59912109]
[271.47409058 461.95700073]
[274.52832031 476.65347290]
[276.23348999 491.56683350]
[276.57540894 506.57342529]
[275.55126953 521.54895020]
[273.16958618 536.36932373]
[269.45007324 550.91168213]
[264.42352295 565.05554199]
[258.13162231 578.68371582]
[250.62652588 591.68328857]
[241.97038269 603.94653320]
[232.23493958 615.37176514]
[221.50086975 625.86437988]
[209.85711670 635.33740234]
[197.40016174 643.71234131]
[184.23324585 650.91979980]
[170.46546936 656.90008545]
[156.21090698 661.60357666]
[141.58770752 664.99133301]
[126.71701050 667.03527832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 177]
[35 176]
[36 175]
[37 174]
[41 173]
[42 172]
[43 171]
[44 168]
[45 167]
[46 165]
[47 164]
[48 163]
[49 162]
[50 142]
[51 141]
[52 140]
[54 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[87 129]
[88 127]
[89 126]
[90 125]
[92 122]
[93 121]
[94 120]
[95 119]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
