%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[46.45211792 602.70849609]
[32.40173721 608.03808594]
[17.72506714 611.26501465]
[2.73494768 612.32055664]
[-12.24910831 611.18218994]
[-26.90771484 607.87414551]
[-40.92842102 602.46697998]
[-54.01237869 595.07592773]
[-65.88069916 585.85845947]
[-76.28041077 575.01116943]
[-84.98983765 562.76519775]
[-91.82334137 549.38159180]
[-96.63526917 535.14562988]
[-99.32305145 520.36071777]
[-99.82939148 505.34201050]
[-98.14350891 490.40963745]
[-94.30133057 475.88189697]
[-88.38475037 462.06842041]
[-80.51988983 449.26367188]
[-70.87438202 437.74053955]
[-59.65382385 427.74472046]
[-47.09737778 419.48919678]
[-33.47269058 413.14996338]
[-19.07017326 408.86215210]
[-4.19681454 406.71716309]
[10.83035946 406.76068115]
[13.05547619 391.92663574]
[15.28059387 377.09259033]
[17.50571060 362.25854492]
[8.47354603 350.47061157]
[10.51881409 335.39508057]
[22.94433403 326.00122070]
[25.16945076 311.16720581]
[27.39456749 296.33316040]
[25.60408020 293.29562378]
[25.19588280 289.23995972]
[26.63249016 284.82528687]
[30.06455231 280.89233398]
[32.94982529 266.17245483]
[35.83509827 251.45256042]
[38.72037125 236.73266602]
[41.60564423 222.01277161]
[39.80744553 214.84420776]
[44.64500427 207.09593201]
[34.68534088 218.31221008]
[21.37993050 225.23797607]
[6.47933578 226.96200562]
[-8.05601597 223.25746155]
[-20.31374931 214.61178589]
[-28.68114853 202.16241455]
[-32.05733871 187.54730225]
[-29.99812317 172.68933105]
[-22.77442741 159.54328918]
[-11.33665371 149.83879089]
[2.81036305 144.85261536]
[17.80533981 145.24079895]
[31.67542839 150.95223999]
[42.59577942 161.23551941]
[49.12963867 174.73770142]
[50.41712570 189.68469238]
[56.69448853 176.06137085]
[62.97184753 162.43806458]
[69.24920654 148.81474304]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.12747192 44.90789413]
[123.40483856 31.28458023]
[129.68218994 17.66126442]
[135.95956421 4.03794765]
[142.23692322 -9.58536911]
[140.12350464 -27.87785339]
[154.83717346 -37.44209290]
[160.91101074 -51.15735626]
[166.88256836 -64.91745758]
[172.75152588 -78.72164154]
[178.62049866 -92.52581787]
[184.48945618 -106.32999420]
[190.35841370 -120.13417053]
[196.22737122 -133.93833923]
[195.80577087 -140.53636169]
[198.39141846 -145.59713745]
[202.48207092 -148.06201172]
[208.75942993 -161.68533325]
[215.03678894 -175.30863953]
[221.31414795 -188.93196106]
[221.08917236 -195.53959656]
[223.82437134 -200.52114868]
[227.98658752 -202.86314392]
[234.66677856 -216.29351807]
[241.34698486 -229.72389221]
[248.02717590 -243.15426636]
[235.50277710 -251.44396973]
[224.09205627 -261.20999146]
[213.96797180 -272.30422974]
[205.28402710 -284.55856323]
[198.17184448 -297.78720093]
[192.73925781 -311.78958130]
[189.06863403 -326.35345459]
[187.21559143 -341.25799561]
[187.20825195 -356.27731323]
[189.04670715 -371.18368530]
[192.70307922 -385.75112915]
[198.12196350 -399.75881958]
[205.22119141 -412.99438477]
[213.89314270 -425.25720215]
[224.00636292 -436.36135864]
[235.40753174 -446.13854980]
[247.92381287 -454.44049072]
[261.36544800 -461.14138794]
[275.52868652 -466.13961792]
[290.19882202 -469.35940552]
[305.15341187 -470.75198364]
[320.16580200 -470.29617310]
[335.00839233 -467.99896240]
[349.45617676 -463.89514160]
[363.29010010 -458.04690552]
[376.30047607 -450.54290771]
[388.29006958 -441.49694824]
[399.07711792 -431.04614258]
[408.49807739 -419.34890747]
[416.41012573 -406.58261108]
[422.69335938 -392.94070435]
[427.25247192 -378.63009644]
[430.01837158 -363.86767578]
[430.94915771 -348.87722778]
[430.03067017 -333.88601685]
[427.27685547 -319.12133789]
[422.72946167 -304.80697632]
[416.45745850 -291.15994263]
[408.55584717 -278.38714600]
[399.14450073 -266.68218994]
[388.36602783 -256.22253418]
[376.38385010 -247.16676331]
[363.37963867 -239.65211487]
[349.55050659 -233.79254150]
[335.10610962 -229.67686462]
[320.26541138 -227.36747742]
[305.25338745 -226.89938354]
[290.29763794 -228.27967834]
[275.62487793 -231.48745728]
[261.45755005 -236.47407532]
[254.77735901 -223.04370117]
[248.09715271 -209.61332703]
[241.41696167 -196.18295288]
[234.93746948 -182.65460205]
[228.66011047 -169.03128052]
[222.38275146 -155.40797424]
[216.10539246 -141.78465271]
[210.03155518 -128.06938171]
[204.16259766 -114.26520538]
[198.29362488 -100.46102905]
[192.42466736 -86.65685272]
[186.55570984 -72.85267639]
[180.68675232 -59.04850006]
[180.96255493 -51.66299438]
[174.62628174 -45.08352280]
[168.55244446 -31.36825752]
[172.61589050 -19.97462082]
[167.66792297 -8.49849796]
[155.86022949 -3.30800796]
[149.58287048 10.31530857]
[143.30551147 23.93862343]
[137.02815247 37.56193924]
[130.75079346 51.18525696]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[82.87252808 155.09210205]
[76.59516144 168.71542358]
[70.31780243 182.33872986]
[64.04044342 195.96205139]
[59.32030869 210.20004272]
[56.32553482 224.89804077]
[53.44026184 239.61793518]
[50.55498886 254.33782959]
[47.66971588 269.05770874]
[44.78444290 283.77761841]
[42.22861099 298.55825806]
[40.00349426 313.39230347]
[37.77837753 328.22634888]
[46.90089417 340.85241699]
[44.43299484 355.86453247]
[32.33975601 364.48367310]
[30.11463737 379.31771851]
[27.88952065 394.15176392]
[25.66440392 408.98577881]
[40.04299927 413.35314941]
[53.63243484 419.76760864]
[66.14305115 428.09240723]
[77.30818939 438.15011597]
[86.88985443 449.72634888]
[94.68381500 462.57440186]
[100.52394104 476.42034912]
[104.28575897 490.96911621]
[105.88906860 505.91058350]
[105.29971313 520.92626953]
[102.53025055 535.69610596]
[97.63970184 549.90527344]
[90.73232269 563.25091553]
[81.95532990 575.44854736]
[71.49581909 586.23815918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 195]
[27 194]
[28 193]
[29 192]
[32 189]
[33 188]
[34 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[44 181]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[65 175]
[66 174]
[68 172]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[77 162]
[78 161]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[87 153]
[88 152]
[89 151]
[90 150]
[93 149]
[94 148]
[95 147]
[96 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
