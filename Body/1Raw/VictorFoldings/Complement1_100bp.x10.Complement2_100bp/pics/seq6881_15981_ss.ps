%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[73.11470795 493.82772827]
[61.06684494 484.87075806]
[49.97068787 474.75869751]
[39.93652344 463.59204102]
[31.06407547 451.48178101]
[23.44152641 438.54827881]
[17.14463425 424.92007446]
[12.23598289 410.73263550]
[8.76435566 396.12692261]
[6.76425791 381.24813843]
[6.25556755 366.24417114]
[7.24334049 351.26406860]
[9.71775913 336.45678711]
[13.65423107 321.96945190]
[19.01363373 307.94607544]
[25.74270058 294.52600098]
[33.77455139 281.84262085]
[43.02936554 270.02200317]
[53.41515732 259.18161011]
[64.82870483 249.42919922]
[77.15657806 240.86169434]
[90.27624512 233.56423950]
[104.05731964 227.60934448]
[118.36283112 223.05622864]
[115.25872040 208.38093567]
[112.15460968 193.70562744]
[109.05049896 179.03031921]
[105.94638824 164.35502625]
[102.84227753 149.67971802]
[99.73816681 135.00442505]
[89.53456879 124.15380859]
[94.24856567 109.05120087]
[89.00184631 94.99872589]
[81.72861481 81.88003540]
[74.45538330 68.76134491]
[65.67478180 56.59988403]
[55.51123428 45.56800842]
[45.34769058 34.53613281]
[35.18414307 23.50425339]
[25.02059555 12.47237682]
[14.85704899 1.44049954]
[4.69350195 -9.59137726]
[-5.47004509 -20.62325478]
[-15.63359165 -31.65513229]
[-30.67463493 -36.56202698]
[-33.60778809 -51.16496658]
[-43.77133179 -62.19684219]
[-53.93487930 -73.22872162]
[-65.89173889 -64.15247345]
[-78.65721893 -56.25391006]
[-92.11570740 -49.60456467]
[-106.14532471 -44.26465225]
[-120.61900330 -40.28253555]
[-135.40568542 -37.69427872]
[-150.37142944 -36.52331924]
[-165.38072205 -36.78026199]
[-180.29760742 -38.46278381]
[-194.98703003 -41.55564499]
[-209.31593323 -46.03083420]
[-223.15455627 -51.84782410]
[-236.37756348 -58.95392990]
[-248.86520386 -67.28480530]
[-260.50439453 -76.76499176]
[-271.18972778 -87.30863953]
[-280.82443237 -98.82026672]
[-289.32122803 -111.19560242]
[-296.60317993 -124.32259369]
[-302.60437012 -138.08233643]
[-307.27041626 -152.35023499]
[-310.55905151 -166.99705505]
[-312.44052124 -181.89016724]
[-312.89776611 -196.89469910]
[-311.92666626 -211.87474060]
[-309.53601074 -226.69464111]
[-305.74740601 -241.22018433]
[-300.59524536 -255.31982422]
[-294.12609863 -268.86587524]
[-286.39862061 -281.73562622]
[-277.48278809 -293.81256104]
[-267.45932007 -304.98730469]
[-256.41897583 -315.15863037]
[-244.46179199 -324.23443604]
[-231.69602966 -332.13253784]
[-218.23728943 -338.78140259]
[-204.20748901 -344.12078857]
[-189.73365784 -348.10238647]
[-174.94688416 -350.69009399]
[-159.98109436 -351.86050415]
[-144.97181702 -351.60302734]
[-130.05497742 -349.91995239]
[-115.36567688 -346.82656860]
[-101.03694153 -342.35086060]
[-87.19853210 -336.53335571]
[-73.97578430 -329.42675781]
[-61.48843765 -321.09542847]
[-49.84959412 -311.61483765]
[-39.16464996 -301.07080078]
[-29.53037643 -289.55880737]
[-21.03402328 -277.18316650]
[-13.75253773 -264.05590820]
[-7.75186348 -250.29594421]
[-3.08634377 -236.02787781]
[0.20176779 -221.38093567]
[2.08269334 -206.48774719]
[2.53939819 -191.48321533]
[1.56774664 -176.50320435]
[-0.82346201 -161.68339539]
[-4.61257172 -147.15798950]
[-9.76526737 -133.05853271]
[-16.23488426 -119.51273346]
[-23.96283150 -106.64324951]
[-32.87911987 -94.56663513]
[-42.90300369 -83.39226532]
[-32.73945618 -72.36038971]
[-22.57590866 -61.32851410]
[-8.26183128 -57.21069336]
[-4.60171461 -41.81867981]
[5.56183195 -30.78680229]
[15.72537899 -19.75492477]
[25.88892555 -8.72304726]
[36.05247116 2.30883002]
[46.21601868 13.34070683]
[56.37956619 24.37258530]
[66.54311371 35.40446091]
[76.70665741 46.43634033]
[73.15007782 31.86408043]
[74.72318268 16.94679832]
[81.24117279 3.43695736]
[91.93832397 -7.07831717]
[105.55793762 -13.36370277]
[120.50000763 -14.68079853]
[135.00914001 -10.87487221]
[147.38081360 -2.39304161]
[156.16163635 9.76825714]
[160.32003784 24.18032646]
[159.36749268 39.15005112]
[153.41589355 52.91880035]
[143.16444397 63.86904144]
[129.81745911 70.71434021]
[114.94294739 72.65053558]
[100.28833771 69.45014191]
[87.57408142 61.48811340]
[94.84731293 74.60680389]
[102.12053680 87.72550201]
[101.62016296 72.73384857]
[105.30786896 58.19422150]
[112.89284515 45.25327301]
[123.77690887 34.93157959]
[137.10168457 28.04315948]
[151.81632996 25.13125420]
[166.76039124 26.42551231]
[180.75531006 31.82386398]
[192.69738770 40.90056992]
[201.64483643 52.93980789]
[206.89201355 66.99211121]
[208.02510071 81.94924927]
[204.95474243 96.63165283]
[197.92308044 109.88139343]
[187.48466492 120.65355682]
[174.46270752 128.09858704]
[159.88417053 131.62934875]
[144.89877319 130.96739197]
[130.68835449 126.16492462]
[118.37358093 117.60067749]
[108.92386627 105.94709015]
[119.34949493 117.84737396]
[114.41347504 131.90031433]
[117.51758575 146.57560730]
[120.62169647 161.25091553]
[123.72579956 175.92620850]
[126.82991028 190.60151672]
[129.93402100 205.27682495]
[133.03813171 219.95211792]
[147.96205139 218.32264709]
[162.97406006 218.18724060]
[177.92494202 219.54724121]
[192.66612244 222.38911438]
[207.05108643 226.68464661]
[220.93685913 232.39112854]
[234.18544006 239.45184326]
[246.66514587 247.79661560]
[258.25195312 257.34252930]
[268.83071899 267.99468994]
[278.29629517 279.64724731]
[286.55456543 292.18435669]
[293.52349854 305.48144531]
[299.13385010 319.40634155]
[303.32980347 333.82064819]
[306.06970215 348.58111572]
[307.32626343 363.54104614]
[307.08706665 378.55175781]
[305.35443115 393.46405029]
[302.14562988 408.12973022]
[297.49249268 422.40304565]
[291.44131470 436.14208984]
[284.05221558 449.21038818]
[275.39865112 461.47799683]
[265.56658936 472.82299805]
[254.65377808 483.13269043]
[242.76869202 492.30453491]
[230.02941895 500.24743652]
[216.56257629 506.88241577]
[202.50202942 512.14355469]
[187.98750305 515.97851562]
[173.16325378 518.34924316]
[158.17662048 519.23217773]
[143.17655945 518.61846924]
[128.31213379 516.51428223]
[113.73108673 512.94055176]
[99.57833862 507.93273926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[32 165]
[33 144]
[34 143]
[35 142]
[36 125]
[37 124]
[38 123]
[39 122]
[40 121]
[41 120]
[42 119]
[43 118]
[44 117]
[46 115]
[47 114]
[48 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
