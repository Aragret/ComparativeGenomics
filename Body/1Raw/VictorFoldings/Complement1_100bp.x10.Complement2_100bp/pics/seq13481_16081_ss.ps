%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[114.35275269 757.72570801]
[99.31829834 757.05371094]
[84.70391083 753.46124268]
[71.07130432 747.08642578]
[58.94449997 738.17425537]
[48.78960800 727.06732178]
[40.99695969 714.19250488]
[35.86608505 700.04467773]
[33.59419632 685.16766357]
[34.26862335 670.13336182]
[37.86344147 655.51953125]
[44.24047852 641.88800049]
[53.15460968 629.76263428]
[64.26320648 619.60949707]
[77.13928223 611.81896973]
[91.28791809 606.69036865]
[106.16527557 604.42089844]
[106.83506012 589.43585205]
[107.50484467 574.45080566]
[108.17462921 559.46575928]
[108.84441376 544.48071289]
[109.51419830 529.49566650]
[109.73752594 514.49737549]
[109.51419830 499.49902344]
[109.29087067 484.50067139]
[109.06754303 469.50234985]
[101.14160919 456.89166260]
[108.67259216 442.97784424]
[108.44926453 427.97949219]
[95.89205170 416.79220581]
[95.29962921 399.64685059]
[107.52670288 387.13613892]
[107.08010101 372.14279175]
[106.63349152 357.14944458]
[106.18688965 342.15606689]
[105.74028015 327.16271973]
[97.62747192 314.67147827]
[104.95046234 300.64703369]
[104.50385284 285.65368652]
[103.72253418 270.67407227]
[102.60688782 255.71560669]
[101.49123383 240.75715637]
[92.82875824 228.64060974]
[99.51821899 214.30317688]
[90.55986786 206.17456055]
[89.50798035 193.72155762]
[97.46993256 183.57414246]
[96.57711792 168.60073853]
[95.68430328 153.62731934]
[94.79148865 138.65391541]
[93.89867401 123.68051147]
[93.00585938 108.70710754]
[92.00159454 93.74076843]
[90.88594818 78.78231049]
[89.77030182 63.82386017]
[88.65464783 48.86540604]
[87.53900146 33.90695190]
[83.77998352 25.58183098]
[86.51979065 18.71777344]
[85.62697601 3.74436855]
[84.73415375 -11.22903728]
[83.84133911 -26.20244217]
[82.94852448 -41.17584991]
[71.19145966 -31.86073303]
[56.54449463 -35.09592438]
[49.80482864 -48.49655533]
[55.94069672 -62.18418121]
[70.42896271 -66.06879425]
[82.58861542 -57.28824997]
[82.81194305 -72.28659058]
[83.03527069 -87.28492737]
[75.50429535 -101.19876862]
[83.43022919 -113.80943298]
[83.65355682 -128.80776978]
[83.87688446 -143.80610657]
[80.87558746 -152.43339539]
[84.21684265 -159.02565002]
[84.66345215 -174.01899719]
[74.10520172 -185.47155762]
[74.77171326 -200.67057800]
[85.75504303 -210.66567993]
[86.20165253 -225.65902710]
[71.17072296 -229.79690552]
[57.57067871 -237.40069580]
[46.18665695 -248.02664185]
[37.67472076 -261.05670166]
[32.52405167 -275.73437500]
[31.02883720 -291.20874023]
[33.27146530 -306.58377075]
[39.11801147 -320.97012329]
[48.22621536 -333.53671265]
[60.06551743 -343.55862427]
[73.94795990 -350.45895386]
[89.06817627 -353.84207153]
[89.29150391 -368.84042358]
[89.51483154 -383.83874512]
[81.98385620 -397.75259399]
[89.90979004 -410.36325073]
[90.13311768 -425.36160278]
[76.29689026 -431.72387695]
[66.24951935 -443.16809082]
[61.73178101 -457.71148682]
[63.52639008 -472.83428955]
[71.32242584 -485.91641235]
[83.76917267 -494.69128418]
[98.71016693 -497.63858032]
[113.55677795 -494.24774170]
[125.73674774 -485.10617065]
[133.13983154 -471.79772949]
[134.48338318 -456.62820435]
[129.53462219 -442.22576904]
[119.15097809 -431.08578491]
[105.13145447 -425.13827515]
[104.90812683 -410.13992310]
[112.45507812 -397.29885864]
[104.51316833 -383.61541748]
[104.28984070 -368.61709595]
[104.06651306 -353.61874390]
[118.09970856 -350.15792847]
[131.01437378 -343.65127563]
[142.15849304 -334.42352295]
[150.96859741 -322.93692017]
[156.99827576 -309.76797485]
[159.94073486 -295.57864380]
[159.64451599 -281.08291626]
[156.12117004 -267.01104736]
[149.54492188 -254.07264709]
[140.24401855 -242.92091370]
[128.68438721 -234.11972046]
[115.44624329 -228.11505127]
[101.19499969 -225.21241760]
[100.74839783 -210.21907043]
[111.11733246 -199.58795166]
[110.87799835 -184.37620544]
[99.65679932 -173.57238770]
[99.21019745 -158.57904053]
[98.87522125 -143.58277893]
[98.65189362 -128.58444214]
[98.42856598 -113.58610535]
[105.97551727 -100.74504089]
[98.03360748 -87.06159973]
[97.81027985 -72.06326294]
[97.58695221 -57.06492233]
[97.92192841 -42.06866455]
[98.81475067 -27.09525871]
[99.70756531 -12.12185287]
[100.60037994 2.85155272]
[101.49319458 17.82495880]
[102.49745178 32.79130173]
[103.61310577 47.74975586]
[104.72875214 62.70820999]
[105.84439850 77.66666412]
[106.96005249 92.62511444]
[110.65238953 99.79025269]
[107.97926331 107.81429291]
[108.87207794 122.78769684]
[109.76489258 137.76110840]
[110.65770721 152.73451233]
[111.55052185 167.70791626]
[112.44334412 182.68132019]
[122.93727112 197.81271362]
[114.47666931 213.18753052]
[123.21894836 226.37400818]
[116.44969177 239.64151001]
[117.56533813 254.59996033]
[118.68098450 269.55841064]
[121.62137604 273.87133789]
[122.52320099 278.42544556]
[121.63595581 282.40386963]
[119.49720764 285.20709229]
[119.94380951 300.20043945]
[128.08856201 313.76412964]
[120.73363495 326.71612549]
[121.18023682 341.70947266]
[121.62684631 356.70281982]
[122.07344818 371.69616699]
[122.52005768 386.68951416]
[133.32148743 394.73587036]
[137.45616150 407.34994507]
[133.62751770 419.85690308]
[123.44760132 427.75616455]
[123.67092896 442.75451660]
[131.61283875 456.43795776]
[124.06587982 469.27902222]
[124.28920746 484.27734375]
[124.51253510 499.27569580]
[124.73586273 514.27404785]
[127.09397888 517.92004395]
[128.07096863 521.74230957]
[127.78100586 525.28509521]
[126.47455597 528.17645264]
[124.49923706 530.16546631]
[123.82945251 545.15051270]
[123.15966797 560.13555908]
[122.48988342 575.12060547]
[121.82009888 590.10565186]
[121.15031433 605.09069824]
[135.76586914 608.67840576]
[149.40052795 615.04882812]
[161.53022766 623.95703125]
[171.68870544 635.06072998]
[179.48551941 647.93298340]
[184.62098694 662.07916260]
[186.89768982 676.95538330]
[186.22811890 691.98992920]
[182.63803101 706.60491943]
[176.26541138 720.23858643]
[167.35520935 732.36682129]
[156.24989319 742.52349854]
[143.37634277 750.31823730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 192]
[23 187]
[24 186]
[25 185]
[26 184]
[28 182]
[29 181]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[38 171]
[39 170]
[40 166]
[41 165]
[42 164]
[44 162]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[52 155]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[69 143]
[70 142]
[71 141]
[73 139]
[74 138]
[75 137]
[77 136]
[78 135]
[81 132]
[82 131]
[94 118]
[95 117]
[96 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
