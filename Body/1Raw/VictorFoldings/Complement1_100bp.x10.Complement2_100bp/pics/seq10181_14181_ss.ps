%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[152.66482544 344.58953857]
[148.47781372 330.18576050]
[144.29080200 315.78198242]
[140.10380554 301.37820435]
[135.91679382 286.97439575]
[131.72978210 272.57061768]
[127.54276276 258.16683960]
[123.35575104 243.76306152]
[113.95383453 255.45083618]
[98.95410156 255.54005432]
[89.41379547 243.96496582]
[92.36568451 229.25828552]
[105.63373566 222.26124573]
[119.43614197 228.13053894]
[109.23254395 217.27993774]
[113.94654083 202.17732239]
[110.84243011 187.50201416]
[100.63882446 176.65141296]
[105.35282135 161.54879761]
[102.24871063 146.87350464]
[92.04510498 136.02288818]
[96.75910187 120.92028046]
[85.38890839 115.31919098]
[79.25638580 104.22659302]
[80.55987549 91.61887360]
[88.83211517 82.01556396]
[85.94684601 67.29566956]
[83.06156921 52.57577896]
[80.17630005 37.85588455]
[69.92900085 25.80169868]
[75.07370758 11.82381344]
[59.01605606 11.16366959]
[43.58615875 6.69919825]
[29.67151451 -1.30863535]
[18.07147408 -12.39517689]
[9.45131683 -25.91904449]
[4.30409813 -41.09923172]
[2.92244792 -57.06021881]
[5.38193798 -72.88245392]
[11.53695869 -87.65534210]
[21.02933502 -100.52965546]
[33.30916595 -110.76632690]
[47.66667557 -117.77890778]
[44.34441757 -132.40637207]
[31.52376747 -145.62425232]
[37.36430740 -162.17282104]
[33.82463455 -176.74919128]
[30.28496170 -191.32556152]
[26.74528885 -205.90194702]
[23.20561790 -220.47831726]
[19.66594505 -235.05468750]
[16.12627220 -249.63107300]
[12.58659935 -264.20745850]
[-0.62744761 -272.45526123]
[-4.00953293 -287.28820801]
[3.93494678 -299.83496094]
[0.39527422 -314.41134644]
[-3.14439821 -328.98770142]
[-6.68407059 -343.56408691]
[-24.10841179 -345.87045288]
[-39.28039932 -354.67379761]
[-49.88679886 -368.60064697]
[-54.32252884 -385.49865723]
[-51.93351364 -402.76943970]
[-43.11296844 -417.76800537]
[-29.23699379 -428.20785522]
[-33.42400360 -442.61163330]
[-37.61101532 -457.01541138]
[-41.79802704 -471.41918945]
[-45.98503876 -485.82299805]
[-50.17205048 -500.22677612]
[-54.35906219 -514.63055420]
[-58.54607391 -529.03430176]
[-73.40170288 -526.79968262]
[-88.42263794 -526.56512451]
[-103.34080505 -528.33477783]
[-117.88996887 -532.07714844]
[-131.81050110 -537.72534180]
[-144.85394287 -545.17864990]
[-156.78755188 -554.30407715]
[-167.39833069 -564.93865967]
[-176.49693298 -576.89270020]
[-183.92097473 -589.95281982]
[-189.53797913 -603.88598633]
[-193.24769592 -618.44348145]
[-194.98391724 -633.36560059]
[-194.71566772 -648.38592529]
[-192.44772339 -663.23651123]
[-188.22055054 -677.65228271]
[-182.10961914 -691.37603760]
[-174.22396851 -704.16271973]
[-164.70431519 -715.78424072]
[-153.72056580 -726.03314209]
[-141.46871948 -734.72662354]
[-128.16744995 -741.70941162]
[-114.05412292 -746.85699463]
[-99.38059998 -750.07739258]
[-84.40876007 -751.31329346]
[-69.40578461 -750.54248047]
[-54.63941574 -747.77880859]
[-40.37318802 -743.07159424]
[-26.86169052 -736.50476074]
[-14.34605503 -728.19561768]
[-3.04963756 -718.29235840]
[6.82596493 -706.97174072]
[15.10450935 -694.43585205]
[21.63825798 -680.90832520]
[26.31060410 -666.63061523]
[29.03816795 -651.85754395]
[29.77227211 -636.85272217]
[28.49981499 -621.88397217]
[25.24350548 -607.21832275]
[20.06145668 -593.11767578]
[13.04614639 -579.83349609]
[4.32277298 -567.60296631]
[-5.95298529 -556.64428711]
[-17.59774590 -547.15307617]
[-30.40369225 -539.29870605]
[-44.14229202 -533.22131348]
[-39.95528030 -518.81756592]
[-35.76826859 -504.41378784]
[-31.58125687 -490.01000977]
[-27.39424515 -475.60620117]
[-23.20723534 -461.20242310]
[-19.02022362 -446.79864502]
[-14.83321190 -432.39486694]
[-2.25308537 -432.08404541]
[9.74982357 -428.24514771]
[20.20512390 -421.17797852]
[28.26458168 -411.44375610]
[33.27093124 -399.82052612]
[34.81146622 -387.24105835]
[32.75204849 -374.71789551]
[27.24872971 -363.26196289]
[18.73595619 -353.80087280]
[7.89230490 -347.10375977]
[11.43197727 -332.52737427]
[14.97164917 -317.95101929]
[18.51132202 -303.37463379]
[31.32529640 -295.86880493]
[35.12267303 -281.13668823]
[27.16297531 -267.74713135]
[30.70264816 -253.17074585]
[34.24232101 -238.59436035]
[37.78199387 -224.01799011]
[41.32166672 -209.44161987]
[44.86133575 -194.86523438]
[48.40100861 -180.28886414]
[51.94068146 -165.71249390]
[62.10451126 -159.15328979]
[65.17276764 -147.03843689]
[58.97187805 -135.72862244]
[62.29413605 -121.10116577]
[76.27962494 -121.20382690]
[89.98419189 -118.38140869]
[102.80258179 -112.75585938]
[114.16813660 -104.57299042]
[123.57778931 -94.19173431]
[130.61437988 -82.06838226]
[134.96514893 -68.73657227]
[136.43559265 -54.78373718]
[134.95820618 -40.82528687]
[130.59555054 -27.47740936]
[123.53763580 -15.32990646]
[114.09358978 -4.92011786]
[102.67819214 3.29084921]
[89.79359436 8.93854046]
[99.83451843 19.93986320]
[94.89619446 34.97061539]
[97.78146362 49.69050598]
[100.66674042 64.41039276]
[103.55200958 79.13028717]
[117.45539093 88.02206421]
[120.75035858 104.19336700]
[111.43440247 117.81616974]
[121.86003876 129.71646118]
[116.92401123 143.76939392]
[120.02812195 158.44468689]
[130.45375061 170.34497070]
[125.51773071 184.39790344]
[128.62184143 199.07321167]
[139.04747009 210.97349548]
[134.11145020 225.02642822]
[137.75953674 239.57604980]
[141.94654846 253.97982788]
[146.13356018 268.38360596]
[150.32057190 282.78738403]
[154.50758362 297.19119263]
[158.69459534 311.59497070]
[162.88160706 325.99874878]
[167.06861877 340.40252686]
[182.17410278 340.42962646]
[196.65969849 344.71264648]
[209.35110474 352.90441895]
[219.21948242 364.34082031]
[225.46485901 378.09481812]
[227.58094788 393.05139160]
[225.39619446 407.99807739]
[219.08772278 421.72323608]
[209.16693115 433.11419678]
[196.43803406 441.24758911]
[181.93293762 445.46405029]
[166.82746887 445.42178345]
[152.34619141 441.12420654]
[139.66302490 432.91970825]
[129.80613708 421.47338867]
[123.57458496 407.71313477]
[121.47351837 392.75445557]
[123.67328644 377.80996704]
[129.99554443 364.09115601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[7 185]
[8 184]
[14 183]
[16 181]
[17 180]
[19 178]
[20 177]
[22 175]
[26 172]
[27 171]
[28 170]
[29 169]
[31 167]
[43 153]
[44 152]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[52 143]
[53 142]
[56 139]
[57 138]
[58 137]
[59 136]
[66 126]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
