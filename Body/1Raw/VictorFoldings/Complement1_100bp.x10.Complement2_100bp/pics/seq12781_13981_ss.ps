%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[86.28948212 468.93017578]
[77.35720062 481.76559448]
[62.25077820 485.80664062]
[48.10300446 479.14523315]
[41.59402466 464.92666626]
[45.79718018 449.86456299]
[58.72787094 441.07073975]
[60.06610489 426.13055420]
[61.40433884 411.19036865]
[62.74257278 396.25018311]
[64.08081055 381.30999756]
[65.41904449 366.36981201]
[66.75727844 351.42962646]
[68.09551239 336.48944092]
[57.26643753 328.68090820]
[51.66491318 316.44296265]
[52.85131454 302.92770386]
[60.62229538 291.67468262]
[73.03607941 285.68395996]
[66.66484070 272.22079468]
[75.79586029 259.30047607]
[77.35637665 244.38186646]
[70.98514557 230.91870117]
[80.11615753 217.99836731]
[81.67668152 203.07975769]
[83.23720551 188.16116333]
[84.79772949 173.24255371]
[86.35825348 158.32394409]
[87.91877747 143.40534973]
[89.47929382 128.48674011]
[91.03981781 113.56813049]
[83.81634521 98.42885590]
[93.81699371 84.96173096]
[87.34173584 70.52630615]
[96.18365479 58.54006958]
[89.70839691 44.10464096]
[98.55031586 32.11840820]
[99.88854980 17.17822456]
[101.22678375 2.23803926]
[88.53337860 -11.82580280]
[90.12342072 -30.38340759]
[104.52191162 -41.68823242]
[105.41472626 -56.66163635]
[106.30754089 -71.63504028]
[107.20036316 -86.60845184]
[108.09317780 -101.58185577]
[93.18098450 -103.23219299]
[78.37152100 -105.63570404]
[63.70280457 -108.78621674]
[49.21248245 -112.67564392]
[34.93775940 -117.29400635]
[20.91526985 -122.62944031]
[7.18101692 -128.66825867]
[-6.22974682 -135.39495850]
[-19.28259659 -142.79226685]
[-31.94402313 -150.84118652]
[-44.18153000 -159.52108765]
[-55.96369553 -168.80966187]
[-67.26028442 -178.68305969]
[-78.04228973 -189.11596680]
[-88.28203583 -200.08157349]
[-97.95323944 -211.55174255]
[-107.03108215 -223.49703979]
[-115.49224854 -235.88677979]
[-123.31501770 -248.68916321]
[-130.47932434 -261.87133789]
[-136.96676636 -275.39947510]
[-142.76068115 -289.23880005]
[-147.84622192 -303.35385132]
[-152.21031189 -317.70834351]
[-155.84176636 -332.26547241]
[-158.73123169 -346.98782349]
[-160.87132263 -361.83764648]
[-162.25654602 -376.77679443]
[-162.88331604 -391.76693726]
[-162.75004578 -406.76959229]
[-161.85708618 -421.74621582]
[-160.20671082 -436.65841675]
[-157.80316162 -451.46786499]
[-154.65260315 -466.13656616]
[-150.76313782 -480.62689209]
[-146.14474487 -494.90158081]
[-140.80926514 -508.92407227]
[-134.77040100 -522.65832520]
[-128.04367065 -536.06903076]
[-120.64633179 -549.12188721]
[-112.59736633 -561.78326416]
[-103.91744232 -574.02075195]
[-94.62883759 -585.80291748]
[-84.75539398 -597.09948730]
[-74.32246399 -607.88146973]
[-63.35683060 -618.12115479]
[-51.88663483 -627.79235840]
[-39.94132233 -636.87011719]
[-27.55155563 -645.33129883]
[-14.74914265 -653.15399170]
[-1.56694567 -660.31829834]
[11.96119690 -666.80566406]
[25.80055809 -672.59954834]
[39.91561127 -677.68505859]
[54.27012634 -682.04913330]
[68.82725525 -685.68054199]
[83.54962158 -688.56994629]
[98.39944458 -690.71002197]
[113.33860016 -692.09515381]
[128.32873535 -692.72192383]
[143.33137512 -692.58862305]
[158.30801392 -691.69561768]
[173.22019958 -690.04516602]
[188.02964783 -687.64160156]
[202.69834900 -684.49102783]
[217.18864441 -680.60150146]
[231.46334839 -675.98303223]
[245.48580933 -670.64752197]
[259.22003174 -664.60864258]
[272.63076782 -657.88189697]
[285.68356323 -650.48449707]
[298.34494019 -642.43548584]
[310.58239746 -633.75555420]
[322.36453247 -624.46691895]
[333.66104126 -614.59344482]
[344.44299316 -604.16046143]
[354.68267822 -593.19482422]
[364.35382080 -581.72460938]
[373.43161011 -569.77923584]
[381.89270020 -557.38946533]
[389.71539307 -544.58703613]
[396.87963867 -531.40478516]
[403.36700439 -517.87664795]
[409.16085815 -504.03726196]
[414.24630737 -489.92221069]
[418.61032104 -475.56768799]
[422.24169922 -461.01055908]
[425.13107300 -446.28817749]
[427.27108765 -431.43832397]
[428.65621948 -416.49917603]
[429.28292847 -401.50903320]
[429.14956665 -386.50640869]
[428.25653076 -371.52975464]
[426.60607910 -356.61758423]
[424.20242310 -341.80813599]
[421.05181885 -327.13946533]
[417.16226196 -312.64916992]
[412.54379272 -298.37448120]
[407.20822144 -284.35202026]
[401.16931152 -270.61782837]
[394.44250488 -257.20712280]
[387.04507446 -244.15432739]
[378.99603271 -231.49296570]
[370.31604004 -219.25553894]
[361.02737427 -207.47344971]
[351.15386963 -196.17694092]
[340.72088623 -185.39501953]
[329.75518799 -175.15536499]
[318.28494263 -165.48425293]
[306.33959961 -156.40650940]
[293.94976807 -147.94544983]
[281.14730835 -140.12277222]
[267.96508789 -132.95858765]
[254.43690491 -126.47125244]
[240.59751892 -120.67744446]
[226.48243713 -115.59202576]
[212.12789917 -111.22805023]
[197.57073975 -107.59672546]
[182.84835815 -104.70736694]
[167.99851990 -102.56739807]
[153.05935669 -101.18230438]
[138.06922913 -100.55564880]
[123.06658173 -100.68904114]
[122.17376709 -85.71563721]
[121.28095245 -70.74222565]
[120.38813019 -55.76882172]
[119.49531555 -40.79541779]
[128.73776245 -34.10635376]
[133.65438843 -23.67838669]
[132.91911316 -12.05284214]
[126.59915161 -2.12515116]
[116.16696930 3.57627344]
[114.82873535 18.51645851]
[113.49050140 33.45664215]
[120.06147766 46.82345200]
[111.12384033 59.87830353]
[117.69481659 73.24510956]
[108.75717926 86.29996490]
[115.67284393 95.67092133]
[114.54747009 107.26293182]
[105.95842743 115.12865448]
[104.39790344 130.04725647]
[102.83737946 144.96586609]
[101.27685547 159.88447571]
[99.71633148 174.80307007]
[98.15580750 189.72167969]
[96.59528351 204.64028931]
[95.03476715 219.55888367]
[101.29438019 234.08912659]
[92.27498627 245.94238281]
[90.71446228 260.86099243]
[96.97407532 275.39123535]
[87.95468140 287.24447632]
[100.68285370 298.38403320]
[104.22811127 314.75268555]
[97.38685608 329.85760498]
[83.03569794 337.82766724]
[81.69746399 352.76785278]
[80.35923004 367.70803833]
[79.02099609 382.64822388]
[77.68276215 397.58840942]
[76.34452820 412.52859497]
[75.00629425 427.46878052]
[73.66805267 442.40896606]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[14 203]
[19 199]
[21 197]
[22 196]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
[33 184]
[35 182]
[37 180]
[38 179]
[39 178]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
