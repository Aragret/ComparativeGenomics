%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[113.16049194 333.65924072]
[109.11048889 348.12301636]
[103.27957916 361.96511841]
[95.75972748 374.96722412]
[86.66954041 386.92431641]
[76.15237427 397.64776611]
[64.37409973 406.96847534]
[51.52048111 414.73941040]
[37.79423904 420.83807373]
[23.41185570 425.16821289]
[8.60015965 427.66159058]
[-6.40724564 428.27886963]
[-21.37367249 427.01028442]
[-36.06307983 423.87585449]
[-50.24378967 418.92504883]
[-63.69215775 412.23590088]
[-76.19608307 403.91390991]
[-87.55835724 394.09039307]
[-97.59977722 382.92019653]
[-106.16198730 370.57952881]
[-113.10993958 357.26303101]
[-118.33406067 343.18072510]
[-121.75195312 328.55465698]
[-123.30972290 313.61557007]
[-122.98278046 298.59902954]
[-120.77630615 283.74188232]
[-116.72508240 269.27847290]
[-110.89300537 255.43685913]
[-103.37206268 242.43536377]
[-94.28086853 230.47906494]
[-83.76279449 219.75648499]
[-71.98374176 210.43678284]
[-59.12947083 202.66690063]
[-45.40271378 196.56941223]
[-31.01996422 192.24046326]
[-16.20805931 189.74833679]
[-1.20060134 189.13233948]
[13.76571846 190.40219116]
[28.45486069 193.53784180]
[42.63515472 198.48985291]
[49.31534958 185.05947876]
[55.99554443 171.62910461]
[62.67573929 158.19873047]
[69.35593414 144.76835632]
[68.09632111 129.92710876]
[81.16983032 121.01678467]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[86.37496185 94.25455475]
[71.87802124 98.10662842]
[56.93183899 96.83708954]
[43.29228973 90.59507751]
[32.56173325 80.11389923]
[26.00078392 66.62486267]
[24.38021469 51.71266556]
[27.89040947 37.12916183]
[36.11899185 24.58761406]
[48.09927750 15.56138992]
[62.42383575 11.11087990]
[77.40982819 11.75892639]
[91.29672241 17.42939758]
[102.45309448 27.45613289]
[109.56830597 40.66119766]
[111.80646515 55.49327850]
[108.90407562 70.21138000]
[118.56488800 58.73667908]
[128.22569275 47.26198196]
[137.88650513 35.78728104]
[147.54731750 24.31258011]
[157.20812988 12.83788013]
[146.26582336 2.57265759]
[135.89027405 -8.26511478]
[126.11144257 -19.64418793]
[116.95748901 -31.53175163]
[108.45481873 -43.89353561]
[100.62794495 -56.69388962]
[93.49943542 -69.89591217]
[87.08984375 -83.46154022]
[81.41765594 -97.35165405]
[76.49922180 -111.52620697]
[72.34871674 -125.94433594]
[68.97811890 -140.56446838]
[66.39713287 -155.34443665]
[64.61321259 -170.24163818]
[63.63150024 -185.21311951]
[63.45482254 -200.21571350]
[64.08368683 -215.20616150]
[65.51628876 -230.14125061]
[67.74848938 -244.97790527]
[70.77384949 -259.67333984]
[74.58365631 -274.18521118]
[79.16692352 -288.47167969]
[84.51042938 -302.49151611]
[90.59877777 -316.20431519]
[97.41439819 -329.57055664]
[104.93766022 -342.55169678]
[113.14685059 -355.11029053]
[122.01831818 -367.21011353]
[131.52647400 -378.81634521]
[141.64390564 -389.89544678]
[152.34143066 -400.41549683]
[163.58822632 -410.34619141]
[175.35186768 -419.65887451]
[187.59840393 -428.32669067]
[200.29255676 -436.32467651]
[213.39772034 -443.62973022]
[226.87608337 -450.22082520]
[240.68882751 -456.07894897]
[254.79608154 -461.18719482]
[269.15719604 -465.53082275]
[283.73077393 -469.09735107]
[298.47476196 -471.87649536]
[313.34667969 -473.86019897]
[328.30364990 -475.04275513]
[343.30252075 -475.42080688]
[358.30004883 -474.99319458]
[373.25302124 -473.76116943]
[388.11831665 -471.72830200]
[402.85302734 -468.90045166]
[417.41473389 -465.28576660]
[431.76141357 -460.89468384]
[445.85171509 -455.73983765]
[459.64501953 -449.83609009]
[473.10153198 -443.20046997]
[486.18246460 -435.85214233]
[498.85009766 -427.81222534]
[511.06793213 -419.10397339]
[522.80072021 -409.75244141]
[534.01458740 -399.78463745]
[544.67730713 -389.22927856]
[554.75805664 -378.11676025]
[564.22778320 -366.47918701]
[573.05920410 -354.35009766]
[581.22686768 -341.76443481]
[588.70715332 -328.75851440]
[595.47857666 -315.36981201]
[601.52154541 -301.63696289]
[606.81866455 -287.59951782]
[611.35467529 -273.29800415]
[615.11645508 -258.77362061]
[618.09326172 -244.06823730]
[620.27636719 -229.22428894]
[621.65960693 -214.28454590]
[622.23889160 -199.29209900]
[622.01263428 -184.29017639]
[620.98144531 -169.32202148]
[619.14831543 -154.43080139]
[616.51843262 -139.65943909]
[613.09954834 -125.05052948]
[608.90142822 -110.64620209]
[603.93615723 -96.48798370]
[598.21807861 -82.61669922]
[591.76367188 -69.07233429]
[584.59155273 -55.89394760]
[576.72241211 -43.11953735]
[568.17889404 -30.78593063]
[558.98571777 -18.92869186]
[549.16931152 -7.58200741]
[538.75799561 3.22140646]
[527.78179932 13.45040035]
[516.27239990 23.07548141]
[504.26290894 32.06889725]
[491.78802490 40.40472031]
[478.88366699 48.05891418]
[465.58706665 55.00941086]
[451.93655396 61.23616791]
[437.97146606 66.72122955]
[423.73211670 71.44879150]
[409.25952148 75.40521240]
[394.59542847 78.57908630]
[379.78213501 80.96126556]
[364.86230469 82.54487610]
[349.87896729 83.32536316]
[334.87536621 83.30046844]
[319.89471436 82.47026062]
[304.98022461 80.83713531]
[290.17489624 78.40580750]
[275.52142334 75.18328094]
[261.06204224 71.17885590]
[246.83847046 66.40406799]
[232.89167786 60.87268448]
[219.26190186 54.60065842]
[205.98843384 47.60607147]
[193.10955811 39.90909195]
[180.66239929 31.53191566]
[168.68283081 22.49869156]
[159.02201843 33.97339249]
[149.36120605 45.44808960]
[139.70039368 56.92279053]
[130.03959656 68.39749146]
[120.37877655 79.87219238]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[94.60021210 127.69697571]
[95.38201141 143.49885559]
[82.78630829 151.44854736]
[76.10611725 164.87892151]
[69.42591858 178.30929565]
[62.74572754 191.73966980]
[56.06553268 205.17005920]
[68.57015228 213.49096680]
[79.93325806 223.31355286]
[89.97562408 234.48289490]
[98.53887177 246.82283020]
[105.48794556 260.13873291]
[110.71324921 274.22061157]
[114.13237762 288.84637451]
[115.69139099 303.78533936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[46 196]
[47 195]
[49 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
