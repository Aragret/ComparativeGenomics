%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[71.93441772 786.29718018]
[56.93434906 786.69744873]
[41.94021988 786.11578369]
[27.01623535 784.55468750]
[12.22630692 782.02087402]
[-2.36623478 778.52514648]
[-16.69890213 774.08251953]
[-30.71031761 768.71197510]
[-44.34048462 762.43658447]
[-57.53103638 755.28314209]
[-70.22548676 747.28234863]
[-82.36947632 738.46838379]
[-93.91099548 728.87902832]
[-104.80063629 718.55535889]
[-114.99175262 707.54156494]
[-124.44071198 695.88482666]
[-133.10705566 683.63507080]
[-140.95365906 670.84472656]
[-147.94694519 657.56860352]
[-154.05694580 643.86346436]
[-159.25749207 629.78808594]
[-163.52633667 615.40270996]
[-166.84518433 600.76892090]
[-169.19982910 585.94940186]
[-170.58018494 571.00762939]
[-170.98034668 556.00756836]
[-170.39859009 541.01342773]
[-168.83741760 526.08947754]
[-166.30351257 511.29953003]
[-162.80772400 496.70703125]
[-158.36500549 482.37438965]
[-152.99441528 468.36300659]
[-146.71891785 454.73287964]
[-139.56539917 441.54235840]
[-131.56449890 428.84796143]
[-122.75047302 416.70401001]
[-113.16106415 405.16256714]
[-102.83733368 394.27297974]
[-91.82349396 384.08190918]
[-80.16670990 374.63302612]
[-67.91689301 365.96676636]
[-55.12649536 358.12023926]
[-41.85029984 351.12701416]
[-28.14514732 345.01712036]
[-14.06973171 339.81665039]
[0.31567645 335.54788208]
[14.94947529 332.22912598]
[29.76899910 329.87457275]
[44.71078873 328.49429321]
[59.71086502 328.09420776]
[74.70498657 328.67605591]
[76.26551056 313.75744629]
[77.82603455 298.83886719]
[79.38655853 283.92025757]
[80.94707489 269.00164795]
[82.50759888 254.08303833]
[74.50851440 238.46313477]
[85.44831085 223.65089417]
[78.87733459 210.28408813]
[87.81497192 197.22923279]
[89.15320587 182.28904724]
[90.49143982 167.34886169]
[91.38425446 152.37545776]
[91.83086395 137.38209534]
[92.16584015 122.38584137]
[92.38916779 107.38750458]
[91.94255829 92.39415741]
[83.20027924 79.20767975]
[89.96954346 65.94018555]
[88.85388947 50.98173141]
[80.11161041 37.79525757]
[86.88087463 24.52776337]
[85.76522064 9.56931019]
[84.64957428 -5.38914347]
[75.90729523 -18.57561874]
[82.67655182 -31.84311295]
[81.56090546 -46.80156708]
[66.17846680 -50.48956299]
[52.70516205 -58.74039841]
[42.45361328 -70.73616028]
[36.41821289 -85.29478455]
[35.17866516 -100.98653412]
[38.84433746 -116.27440643]
[47.04471588 -129.66467285]
[58.96683502 -139.85282898]
[73.43582916 -145.85070801]
[72.09759521 -160.79089355]
[70.75936127 -175.73107910]
[69.42112732 -190.67126465]
[58.48133087 -205.48350525]
[66.48041534 -221.10340881]
[64.91989136 -236.02201843]
[63.35937119 -250.94061279]
[48.59932327 -254.31991577]
[35.73758698 -262.31082153]
[26.16931152 -274.04653931]
[20.93239212 -288.25405884]
[20.59488678 -303.39224243]
[25.19340706 -317.81903076]
[34.22914124 -329.96951294]
[46.72195816 -338.52569580]
[61.31673431 -342.55944824]
[76.43032837 -341.63327026]
[90.42334747 -335.84756470]
[101.77791595 -325.82995605]
[109.26238251 -312.66708374]
[112.06489563 -297.78674316]
[109.88144684 -282.80303955]
[102.94888306 -269.34127808]
[92.01920319 -258.86175537]
[78.27797699 -252.50114441]
[79.83850098 -237.58253479]
[81.39901733 -222.66394043]
[90.59542084 -214.80563354]
[92.01760864 -202.38946533]
[84.36131287 -192.00949097]
[85.69954681 -177.06930542]
[87.03778076 -162.12911987]
[88.37601471 -147.18893433]
[102.34587097 -144.35537720]
[114.96478271 -137.69181824]
[125.20535278 -127.73063660]
[132.23097229 -115.27310181]
[135.46415710 -101.32492065]
[134.63400269 -87.01506042]
[129.79887390 -73.50434875]
[121.34235382 -61.89132690]
[109.94289398 -53.12291718]
[96.51935577 -47.91721344]
[97.63500977 -32.95876312]
[106.29748535 -20.84221458]
[99.60802460 -6.50479221]
[100.72367859 8.45366096]
[101.83932495 23.41211510]
[110.50180817 35.52865982]
[103.81234741 49.86608505]
[104.92799377 64.82453918]
[113.59047699 76.94108582]
[106.90101624 91.27850342]
[117.48451996 80.64886475]
[132.48355103 80.47834778]
[143.30598450 90.86463928]
[143.75222778 105.85799408]
[133.56666565 116.86954498]
[118.58403778 117.59137726]
[107.38750458 107.61083221]
[107.16417694 122.60916901]
[110.16547394 131.23645020]
[106.82421112 137.82870483]
[106.37760925 152.82205200]
[108.57057190 156.56970215]
[109.37590790 160.43182373]
[108.92803955 163.95812988]
[107.49378967 166.78823853]
[105.43162537 168.68708801]
[104.09339142 183.62727356]
[102.75515747 198.56745911]
[109.23041534 213.00289917]
[100.38849640 224.98912048]
[108.04479218 235.36909485]
[106.62260437 247.78526306]
[97.42620850 255.64355469]
[95.86568451 270.56216431]
[94.30516052 285.48077393]
[92.74463654 300.39938354]
[91.18411255 315.31799316]
[89.62358856 330.23657227]
[104.41355133 332.77023315]
[119.00613403 336.26577759]
[133.33885193 340.70822144]
[147.35032654 346.07858276]
[160.98057556 352.35382080]
[174.17120361 359.50711060]
[186.86575317 367.50778198]
[199.00984192 376.32159424]
[210.55148315 385.91079712]
[221.44123840 396.23434448]
[231.63249207 407.24798584]
[241.08158875 418.90463257]
[249.74807739 431.15429688]
[257.59481812 443.94454956]
[264.58825684 457.22061157]
[270.69842529 470.92565918]
[275.89913940 485.00097656]
[280.16815186 499.38632202]
[283.48718262 514.02008057]
[285.84201050 528.83953857]
[287.22253418 543.78131104]
[287.62286377 558.78137207]
[287.04129028 573.77551270]
[285.48028564 588.69946289]
[282.94656372 603.48944092]
[279.45092773 618.08197021]
[275.00839233 632.41467285]
[269.63796997 646.42614746]
[263.36264038 660.05633545]
[256.20928955 673.24694824]
[248.20852661 685.94140625]
[239.39463806 698.08544922]
[229.80537415 709.62707520]
[219.48176575 720.51672363]
[208.46804810 730.70794678]
[196.81137085 740.15698242]
[184.56166077 748.82336426]
[171.77136230 756.67004395]
[158.49523926 763.66339111]
[144.79016113 769.77349854]
[130.71479797 774.97412109]
[116.32944489 779.24304199]
[101.69568634 782.56201172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[58 159]
[60 157]
[61 156]
[62 155]
[63 150]
[64 149]
[65 147]
[66 146]
[67 139]
[69 137]
[70 136]
[72 134]
[73 133]
[74 132]
[76 130]
[77 129]
[86 119]
[87 118]
[88 117]
[89 116]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
