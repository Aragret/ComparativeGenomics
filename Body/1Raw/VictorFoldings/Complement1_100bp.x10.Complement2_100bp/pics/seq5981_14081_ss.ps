%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[178.18807983 244.32159424]
[169.04928589 232.42695618]
[159.91047668 220.53231812]
[150.77168274 208.63769531]
[141.63287354 196.74305725]
[138.20314026 195.92497253]
[134.99926758 193.40499878]
[132.81680298 189.30741882]
[132.36576843 184.10707092]
[123.76721191 171.81623840]
[115.16864777 159.52539062]
[117.13910675 174.39540100]
[114.69824219 189.19548035]
[108.05719757 202.64526367]
[97.79049683 213.58120728]
[84.78631592 221.05723572]
[70.16963196 224.42662048]
[55.20495605 223.39787292]
[41.18686676 218.05996704]
[29.32807159 208.87471008]
[20.65447807 196.63670349]
[15.91643715 182.40466309]
[15.52383709 167.40980530]
[19.51064110 152.94932556]
[27.53195190 140.27421570]
[38.89384460 130.48098755]
[52.61340332 124.41684723]
[67.50374603 122.60641479]
[82.27671051 125.20631409]
[95.65428925 131.99162292]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[72.94287872 70.26515961]
[69.21567535 58.33655167]
[74.44241333 47.42748260]
[69.82840729 33.15475082]
[65.21439362 18.88201523]
[60.60038376 4.60928249]
[54.98298645 -2.59367752]
[56.02564240 -9.91041565]
[51.62464523 -24.25026321]
[47.22364807 -38.59011078]
[42.82264709 -52.92995834]
[28.22528267 -49.45539856]
[13.43529034 -46.92324066]
[-1.48654902 -45.34388351]
[-16.47891998 -44.72381973]
[-31.48021507 -45.06560135]
[-46.42879105 -46.36782074]
[-61.26321793 -48.62512207]
[-75.92253876 -51.82823563]
[-90.34651947 -55.96400070]
[-104.47588348 -61.01541519]
[-118.25256348 -66.96172333]
[-131.61996460 -73.77849579]
[-144.52313232 -81.43772125]
[-156.90907288 -89.90792084]
[-168.72686768 -99.15428162]
[-179.92797852 -109.13882446]
[-190.46633911 -119.82051086]
[-200.29869080 -131.15544128]
[-209.38458252 -143.09706116]
[-217.68672180 -155.59626770]
[-225.17095947 -168.60171509]
[-231.80656433 -182.05996704]
[-237.56625366 -195.91571045]
[-242.42636108 -210.11201477]
[-246.36692810 -224.59054565]
[-249.37174988 -239.29179382]
[-251.42848206 -254.15534973]
[-252.52867126 -269.12014771]
[-252.66780090 -284.12469482]
[-251.84529114 -299.10733032]
[-250.06452942 -314.00646973]
[-247.33283997 -328.76092529]
[-243.66143799 -343.31002808]
[-239.06539917 -357.59399414]
[-233.56364441 -371.55416870]
[-227.17874146 -385.13314819]
[-219.93695068 -398.27514648]
[-211.86802673 -410.92614746]
[-203.00512695 -423.03421021]
[-193.38465881 -434.54949951]
[-183.04617310 -445.42477417]
[-172.03215027 -455.61529541]
[-160.38784790 -465.07922363]
[-148.16110229 -473.77764893]
[-135.40217590 -481.67480469]
[-122.16347504 -488.73828125]
[-108.49942780 -494.93905640]
[-94.46616364 -500.25158691]
[-80.12135315 -504.65411377]
[-65.52394867 -508.12850952]
[-50.73393250 -510.66052246]
[-35.81207657 -512.23968506]
[-20.81969643 -512.85961914]
[-5.81840611 -512.51763916]
[9.13015461 -511.21527100]
[23.96455765 -508.95779419]
[38.62384415 -505.75451660]
[53.04777527 -501.61859131]
[67.17708588 -496.56701660]
[80.95370483 -490.62057495]
[94.32102203 -483.80364990]
[107.22411346 -476.14428711]
[119.60995483 -467.67395020]
[131.42765808 -458.42745972]
[142.62864685 -448.44277954]
[153.16690063 -437.76098633]
[162.99911499 -426.42593384]
[172.08488464 -414.48422241]
[180.38687134 -401.98492432]
[187.87097168 -388.97937012]
[194.50642395 -375.52105713]
[200.26596069 -361.66525269]
[205.12591553 -347.46890259]
[209.06631470 -332.99032593]
[212.07096863 -318.28903198]
[214.12753296 -303.42547607]
[215.22756958 -288.46066284]
[215.36653137 -273.45611572]
[214.54385376 -258.47348022]
[212.76292419 -243.57435608]
[210.03106689 -228.81994629]
[206.35951233 -214.27088928]
[201.76332092 -199.98695374]
[196.26139832 -186.02684021]
[189.87634277 -172.44793701]
[182.63441467 -159.30601501]
[174.56535339 -146.65509033]
[165.70231628 -134.54714966]
[156.08172607 -123.03194427]
[145.74311829 -112.15679932]
[134.72897339 -101.96638489]
[123.08456421 -92.50260162]
[110.85772705 -83.80431366]
[98.09870911 -75.90728760]
[84.85993958 -68.84395599]
[71.19581604 -62.64335251]
[57.16249466 -57.33095551]
[61.56349182 -42.99110794]
[65.96449280 -28.65126038]
[70.36548615 -14.31141376]
[74.87311554 -0.00472697]
[79.48712921 14.26800632]
[84.10113525 28.54073906]
[88.71514893 42.81347275]
[102.35396576 53.85654831]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[127.45948792 150.92683411]
[136.05804443 163.21766663]
[144.65661621 175.50849915]
[153.52751160 187.60426331]
[162.66630554 199.49888611]
[171.80511475 211.39352417]
[180.94390869 223.28816223]
[190.08271790 235.18278503]
[203.10832214 227.69831848]
[217.01530457 222.01684570]
[231.55548096 218.23973083]
[246.46937561 216.43440247]
[261.49081421 216.63307190]
[276.35174561 218.83221436]
[290.78695679 222.99253845]
[304.53881836 229.03984070]
[317.36190796 236.86619568]
[329.02740479 246.33190918]
[339.32711792 257.26806641]
[348.07720947 269.47949219]
[355.12155151 282.74826050]
[360.33444214 296.83761597]
[363.62283325 311.49606323]
[364.92800903 326.46200562]
[364.22674561 341.46838379]
[361.53149414 356.24740601]
[356.89038086 370.53527832]
[350.38623047 384.07705688]
[342.13513184 396.63104248]
[332.28433228 407.97323608]
[321.00958252 417.90115356]
[308.51214600 426.23767090]
[295.01504517 432.83401489]
[280.75915527 437.57244873]
[265.99887085 440.36843872]
[250.99761963 441.17202759]
[236.02310181 439.96893311]
[221.34257507 436.78057861]
[207.21801758 431.66390991]
[193.90150452 424.71020508]
[181.63069153 416.04357910]
[170.62454224 405.81869507]
[161.07949829 394.21804810]
[153.16589355 381.44860840]
[147.02494812 367.73831177]
[142.76626587 353.33181763]
[140.46585083 338.48623657]
[140.16473389 323.46649170]
[141.86831665 308.54061890]
[145.54617310 293.97500610]
[151.13269043 280.02960205]
[158.52815247 266.95327759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[9 161]
[10 160]
[11 159]
[31 158]
[32 157]
[33 156]
[35 154]
[36 153]
[39 151]
[40 150]
[41 149]
[42 148]
[44 147]
[45 146]
[46 145]
[47 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
