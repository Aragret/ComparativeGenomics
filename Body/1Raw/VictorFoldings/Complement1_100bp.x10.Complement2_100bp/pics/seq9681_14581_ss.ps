%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[139.13865662 659.70635986]
[128.52723694 649.09381104]
[118.77013397 637.69085693]
[109.92601013 625.56610107]
[102.04807281 612.79241943]
[95.18368530 599.44671631]
[89.37414551 585.60919189]
[84.65438843 571.36303711]
[81.05278778 556.79400635]
[78.59102631 541.98968506]
[77.28388977 527.03912354]
[77.13925171 512.03216553]
[78.15797424 497.05920410]
[80.33393097 482.21017456]
[83.65404510 467.57443237]
[88.09834290 453.23995972]
[93.64009094 439.29302979]
[100.24596405 425.81744385]
[107.87623596 412.89431763]
[116.48500824 400.60134888]
[126.02051544 389.01245117]
[136.42539978 378.19735718]
[147.63710022 368.22106934]
[159.58816528 359.14361572]
[172.20674133 351.01956177]
[185.41693115 343.89782715]
[179.34309387 330.18255615]
[173.26925659 316.46728516]
[167.19541931 302.75201416]
[161.12159729 289.03674316]
[148.89343262 280.53256226]
[150.38003540 264.78134155]
[144.30619812 251.06608582]
[138.23237610 237.35081482]
[132.15853882 223.63555908]
[124.40239716 236.47463989]
[109.54905701 238.56704712]
[98.54783630 228.37033081]
[99.50843048 213.40112305]
[111.72272491 204.69416809]
[126.18554688 208.66683960]
[121.14862823 194.53781128]
[116.11171722 180.40878296]
[113.63974762 179.08683777]
[111.54248047 176.70606995]
[110.22582245 173.40428162]
[110.03835297 169.46354675]
[111.22295380 165.28613281]
[107.03594208 150.88235474]
[102.84893036 136.47857666]
[98.66191864 122.07479095]
[94.47490692 107.67101288]
[90.56925201 104.16960907]
[88.90338135 98.72918701]
[90.38453674 92.77577972]
[86.62823486 78.25371552]
[82.87193298 63.73165894]
[79.11563110 49.20959854]
[75.35932922 34.68753815]
[71.60303497 20.16547966]
[67.46208191 34.58257294]
[58.17941284 46.36526871]
[45.13203812 53.76567841]
[30.25546646 55.68599319]
[15.75654602 51.84134293]
[3.78610730 42.80206299]
[-3.88010740 29.90907478]
[-6.10486078 15.07497692]
[-2.55812335 0.50031888]
[6.23396730 -11.65283489]
[18.96715546 -19.58163643]
[33.75255203 -22.10989380]
[48.39682770 -18.86255836]
[60.72759247 -10.32135010]
[68.91493225 2.24492073]
[68.24514771 -12.74011803]
[67.57536316 -27.72515678]
[66.90557861 -42.71019745]
[66.23579407 -57.69523621]
[65.56600952 -72.68027496]
[54.67070770 -62.37044907]
[39.67325211 -62.64658737]
[29.16485977 -73.35049438]
[29.16521835 -88.35049438]
[39.67412186 -99.05390930]
[54.67159653 -99.32932281]
[65.56600952 -89.01984406]
[66.23579407 -104.00488281]
[66.90557861 -118.98992157]
[67.57536316 -133.97496033]
[60.46199036 -148.10685730]
[68.75988007 -160.47595215]
[69.42966461 -175.46098328]
[70.09944916 -190.44602966]
[62.98607254 -204.57792664]
[71.28395844 -216.94700623]
[71.95374298 -231.93205261]
[57.71740341 -237.01318359]
[45.61223221 -246.06614685]
[36.71461105 -258.28594971]
[31.81571579 -272.58602905]
[31.35115051 -287.69482422]
[35.36222458 -302.26889038]
[43.49227524 -315.01226807]
[55.01838303 -324.79183960]
[68.91565704 -330.73803711]
[83.94835663 -332.32211304]
[98.77979279 -329.40319824]
[112.09115601 -322.24084473]
[122.69880676 -311.47195435]
[129.65953064 -298.05407715]
[132.35438538 -283.18029785]
[130.54373169 -268.17321777]
[124.38857269 -254.36720276]
[114.43624115 -242.98992920]
[101.57167053 -235.05303955]
[86.93878174 -231.26226807]
[86.26899719 -216.27722168]
[93.43028259 -203.21716309]
[85.08448792 -189.77624512]
[84.41470337 -174.79119873]
[83.74491882 -159.80616760]
[90.90619659 -146.74609375]
[82.56040192 -133.30517578]
[81.89061737 -118.32013702]
[81.22083282 -103.33509827]
[80.55104828 -88.35005951]
[80.55104828 -73.35005951]
[81.22083282 -58.36502075]
[81.89061737 -43.37998199]
[82.56040192 -28.39494133]
[83.23018646 -13.40990353]
[83.89997101 1.57513559]
[86.12509155 16.40917969]
[89.88139343 30.93123817]
[93.63769531 45.45329666]
[97.39398956 59.97535706]
[101.15029144 74.49741364]
[104.90659332 89.01947784]
[108.87869263 103.48400116]
[113.06570435 117.88777924]
[117.25271606 132.29156494]
[121.43972015 146.69534302]
[125.62673187 161.09912109]
[130.24073792 175.37185669]
[135.27766418 189.50088501]
[140.31457520 203.62991333]
[145.87380981 217.56172180]
[151.94763184 231.27699280]
[158.02146912 244.99224854]
[164.09530640 258.70751953]
[176.75790405 268.19271851]
[174.83685303 282.96292114]
[180.91069031 296.67819214]
[186.98452759 310.39346313]
[193.05836487 324.10870361]
[199.13218689 337.82397461]
[213.28396606 332.82843018]
[227.78031921 328.94458008]
[242.53404236 326.19577026]
[257.45642090 324.59851074]
[272.45767212 324.16244507]
[287.44763184 324.89019775]
[302.33612061 326.77737427]
[317.03356934 329.81262207]
[331.45166016 333.97769165]
[345.50360107 339.24752808]
[359.10488892 345.59045410]
[372.17376709 352.96829224]
[384.63162231 361.33670044]
[396.40353394 370.64535522]
[407.41867065 380.83822632]
[417.61080933 391.85406494]
[426.91867065 403.62658691]
[435.28622437 416.08499146]
[442.66317749 429.15438843]
[449.00518799 442.75613403]
[454.27407837 456.80841064]
[458.43817139 471.22677612]
[461.47241211 485.92443848]
[463.35858154 500.81304932]
[464.08532715 515.80303955]
[463.64825439 530.80432129]
[462.04998779 545.72656250]
[459.30017090 560.48010254]
[455.41534424 574.97619629]
[450.41882324 589.12762451]
[444.34072876 602.84930420]
[437.21755981 616.05871582]
[429.09216309 628.67645264]
[420.01342773 640.62652588]
[410.03594971 651.83715820]
[399.21972656 662.24090576]
[387.62982178 671.77514648]
[375.33590698 680.38262939]
[362.41198730 688.01153564]
[348.93569946 694.61596680]
[334.98815918 700.15618896]
[320.65322876 704.59893799]
[306.01712036 707.91748047]
[291.16787720 710.09185791]
[276.19476318 711.10900879]
[261.18786621 710.96276855]
[246.23744202 709.65405273]
[231.43338013 707.19067383]
[216.86473083 703.58752441]
[202.61911011 698.86621094]
[188.78218079 693.05523682]
[175.43719482 686.18939209]
[162.66436768 678.31011963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[32 151]
[33 150]
[34 149]
[35 148]
[41 147]
[42 146]
[43 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[75 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[87 127]
[88 126]
[89 125]
[90 124]
[92 122]
[93 121]
[94 120]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
