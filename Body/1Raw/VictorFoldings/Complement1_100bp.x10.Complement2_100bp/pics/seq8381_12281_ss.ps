%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[130.46061707 273.04013062]
[129.18878174 258.08798218]
[128.96305847 243.08351135]
[129.78454590 228.09985352]
[131.64924622 213.21000671]
[134.54806519 198.48651123]
[138.46688843 184.00108337]
[143.38662720 169.82431030]
[149.28330994 156.02525330]
[156.12820435 142.67114258]
[143.28926086 134.91474915]
[130.45031738 127.15836334]
[117.61138153 119.40196991]
[104.77244568 111.64558411]
[91.76348877 104.17784119]
[78.59101868 97.00247192]
[65.41854095 89.82711029]
[52.24606323 82.65174103]
[44.28612518 95.37092590]
[35.57274628 107.58628845]
[26.13771439 119.25326538]
[16.01545906 130.32928467]
[5.24291801 140.77392578]
[-6.14060307 150.54907227]
[-18.09356689 159.61906433]
[-30.57235718 167.95080566]
[-43.53143692 175.51390076]
[-56.92352676 182.28073120]
[-70.69975281 188.22663879]
[-84.80985260 193.32989502]
[-99.20233917 197.57189941]
[-113.82469177 200.93714905]
[-128.62355042 203.41339111]
[-143.54493713 204.99157715]
[-158.53437805 205.66595459]
[-173.53718567 205.43406677]
[-188.49862671 204.29673767]
[-203.36408997 202.25813293]
[-218.07936096 199.32569885]
[-232.59071350 195.51011658]
[-246.84521484 190.82533264]
[-260.79086304 185.28842163]
[-274.37673950 178.91958618]
[-287.55328369 171.74208069]
[-300.27243042 163.78208923]
[-312.48776245 155.06864929]
[-324.15469360 145.63356018]
[-335.23065186 135.51126099]
[-345.67526245 124.73866272]
[-355.45034790 113.35510254]
[-364.52029419 101.40209198]
[-372.85195923 88.92326355]
[-380.41500854 75.96414948]
[-387.18179321 62.57202911]
[-393.12762451 48.79577255]
[-398.23080444 34.68564987]
[-402.47274780 20.29314613]
[-405.83792114 5.67077827]
[-408.31411743 -9.12809753]
[-409.89221191 -24.04948044]
[-410.56652832 -39.03892517]
[-410.33456421 -54.04173660]
[-409.19717407 -69.00317383]
[-407.15850830 -83.86862946]
[-404.22598267 -98.58388519]
[-400.41033936 -113.09522247]
[-395.72549438 -127.34970093]
[-390.18850708 -141.29531860]
[-383.81961060 -154.88116455]
[-376.64205933 -168.05767822]
[-368.68200684 -180.77679443]
[-359.96850586 -192.99208069]
[-350.53335571 -204.65896606]
[-340.41101074 -215.73487854]
[-329.63836670 -226.17942810]
[-318.25476074 -235.95446777]
[-306.30169678 -245.02435303]
[-293.82284546 -253.35598755]
[-280.86367798 -260.91894531]
[-267.47152710 -267.68566895]
[-253.69525146 -273.63143921]
[-239.58511353 -278.73455811]
[-225.19258118 -282.97644043]
[-210.57020569 -286.34155273]
[-195.77131653 -288.81765747]
[-180.84992981 -290.39572144]
[-165.86047363 -291.06994629]
[-150.85766602 -290.83792114]
[-135.89624023 -289.70043945]
[-121.03078461 -287.66171265]
[-106.31555176 -284.72912598]
[-91.80422211 -280.91342163]
[-77.54976654 -276.22848511]
[-63.60418320 -270.69146729]
[-50.01836014 -264.32250977]
[-36.84187317 -257.14486694]
[-24.12280273 -249.18475342]
[-11.90756035 -240.47120667]
[-0.24071522 -231.03601074]
[10.83515930 -220.91360474]
[21.27964973 -210.14091492]
[31.05464172 -198.75726318]
[40.12447357 -186.80416870]
[48.45604324 -174.32527161]
[56.01895142 -161.36607361]
[62.78560257 -147.97389221]
[68.73130798 -134.19758606]
[73.83437347 -120.08741760]
[78.07617188 -105.69487000]
[81.44122314 -91.07247162]
[83.91725922 -76.27357483]
[85.49524689 -61.35217667]
[86.16941071 -46.36272430]
[85.93730927 -31.35991669]
[84.79977417 -16.39849281]
[82.76096344 -1.53304982]
[79.82832336 13.18217182]
[76.01254272 27.69347763]
[71.32755280 41.94791412]
[65.79045105 55.89347458]
[59.42142868 69.47926331]
[72.59390259 76.65463257]
[85.76638031 83.83000183]
[98.93885803 91.00536346]
[102.75518036 90.45036316]
[106.79761505 91.58023834]
[110.30818176 94.45824432]
[112.52883148 98.80664062]
[125.36777496 106.56303406]
[138.20671082 114.31942749]
[151.04565430 122.07581329]
[163.88459778 129.83221436]
[172.52105713 117.56044769]
[181.99253845 105.92102814]
[192.25285339 94.97066498]
[203.25204468 84.76270294]
[214.93652344 75.34687805]
[227.24935913 66.76905823]
[240.13055420 59.07103729]
[253.51734924 52.29031754]
[267.34454346 46.45994186]
[281.54476929 41.60830307]
[296.04885864 37.75904846]
[310.78610229 34.93092728]
[325.68472290 33.13772202]
[340.67214966 32.38816071]
[355.67535400 32.68590164]
[370.62124634 34.02949142]
[385.43698120 36.41238785]
[400.05041504 39.82297516]
[414.39035034 44.24464417]
[428.38690186 49.65584946]
[441.97189331 56.03022766]
[455.07916260 63.33671951]
[467.64477539 71.53973389]
[479.60760498 80.59931183]
[490.90930176 90.47129822]
[501.49484253 101.10761261]
[511.31262207 112.45642853]
[520.31488037 124.46246338]
[528.45764160 137.06721497]
[535.70135498 150.20927429]
[542.01062012 163.82461548]
[547.35479736 177.84690857]
[551.70776367 192.20782471]
[555.04840088 206.83741760]
[557.36035156 221.66441345]
[558.63244629 236.61654663]
[558.85833740 251.62100220]
[558.03710938 266.60467529]
[556.17260742 281.49453735]
[553.27398682 296.21810913]
[549.35534668 310.70358276]
[544.43585205 324.88043213]
[538.53936768 338.67956543]
[531.69464111 352.03375244]
[523.93505859 364.87796021]
[515.29840088 377.14959717]
[505.82678223 388.78887939]
[495.56631470 399.73910522]
[484.56698608 409.94689941]
[472.88235474 419.36257935]
[460.56942749 427.94021606]
[447.68811035 435.63806152]
[434.30120850 442.41857910]
[420.47390747 448.24874878]
[406.27362061 453.10018921]
[391.76950073 456.94924927]
[377.03222656 459.77716064]
[362.13357544 461.57012939]
[347.14611816 462.31948853]
[332.14294434 462.02154541]
[317.19705200 460.67773438]
[302.38134766 458.29461670]
[287.76794434 454.88381958]
[273.42810059 450.46194458]
[259.43161011 445.05053711]
[245.84671021 438.67596436]
[232.73956299 431.36929321]
[220.17404175 423.16607666]
[208.21136475 414.10635376]
[196.90980530 404.23419189]
[186.32441711 393.59771729]
[176.50679016 382.24877930]
[167.50474548 370.24261475]
[159.36213684 357.63775635]
[152.11863708 344.49557495]
[145.80953979 330.88015747]
[140.46557617 316.85778809]
[136.11277771 302.49679565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 132]
[11 131]
[12 130]
[13 129]
[14 128]
[15 124]
[16 123]
[17 122]
[18 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
