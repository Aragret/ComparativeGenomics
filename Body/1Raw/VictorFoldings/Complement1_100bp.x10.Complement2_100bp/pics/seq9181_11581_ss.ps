%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[302.32437134 84.43036652]
[302.92172241 99.41501617]
[302.41076660 114.40285492]
[300.79434204 129.31202698]
[298.08123779 144.06111145]
[294.28631592 158.56954956]
[289.43026733 172.75810242]
[283.53961182 186.54928589]
[276.64651489 199.86775208]
[268.78866577 212.64079285]
[260.00894165 224.79862976]
[250.35533142 236.27485657]
[239.88052368 247.00680542]
[228.64173889 256.93585205]
[216.70036316 266.00778198]
[204.12161255 274.17306519]
[190.97419739 281.38705444]
[177.32991028 287.61035156]
[163.26327515 292.80902100]
[148.85112000 296.95465088]
[134.17214966 300.02456665]
[119.30655670 302.00201416]
[104.33551025 302.87622070]
[89.34078979 302.64239502]
[74.40428925 301.30181885]
[59.60757446 298.86178589]
[45.03147125 295.33566284]
[30.75558853 290.74267578]
[16.85788918 285.10794067]
[3.41428232 278.46221924]
[-9.50181007 270.84179688]
[-21.81984520 262.28829956]
[-33.47254562 252.84843445]
[-44.39627075 242.57377625]
[-54.53135300 231.52043152]
[-63.82244873 219.74876404]
[-72.21880341 207.32308960]
[-79.67456818 194.31124878]
[-86.14901733 180.78431702]
[-91.60678864 166.81617737]
[-96.01807404 152.48310852]
[-99.35878754 137.86338806]
[-101.61067200 123.03688049]
[-102.76144409 108.08455658]
[-102.80480194 93.08807373]
[-101.74051666 78.12934113]
[-99.57440186 63.29006195]
[-96.31829071 48.65127563]
[-91.98995972 34.29293442]
[-86.61305237 20.29346466]
[-80.21693420 6.72931910]
[-72.83653259 -6.32541609]
[-64.51216888 -18.79944229]
[-55.28930664 -30.62462997]
[-45.21830750 -41.73639679]
[-34.35417938 -52.07405090]
[-22.75626183 -61.58113098]
[-10.48789501 -70.20571899]
[2.38391566 -77.90071106]
[15.78886795 -84.62406921]
[29.65374947 -90.33908844]
[43.90283585 -95.01454163]
[58.45830536 -98.62490082]
[73.24066162 -101.15044403]
[88.16915894 -102.57737732]
[103.16227722 -102.89791107]
[118.13813019 -102.11029053]
[133.01490784 -100.21882629]
[147.71138000 -97.23383331]
[162.14726257 -93.17163086]
[176.24372864 -88.05439758]
[189.92378235 -81.91007996]
[203.11270142 -74.77223206]
[215.73844910 -66.67985535]
[227.73208618 -57.67712784]
[239.02809143 -47.81322861]
[249.56478882 -37.14203262]
[259.28460693 -25.72181320]
[268.13449097 -13.61495209]
[276.06607056 -0.88756806]
[283.03604126 12.39082623]
[296.79614258 6.41926336]
[310.55624390 0.44770026]
[324.31634521 -5.52386236]
[338.07644653 -11.49542522]
[351.83657837 -17.46698761]
[346.60446167 -31.52872467]
[342.12820435 -45.84899521]
[338.42041016 -60.38720703]
[335.49166870 -75.10214996]
[333.35021973 -89.95211029]
[332.00213623 -104.89500427]
[331.45129395 -119.88845825]
[331.69918823 -134.88998413]
[332.74514771 -149.85705566]
[334.58624268 -164.74723816]
[337.21716309 -179.51834106]
[340.63055420 -194.12846375]
[344.81668091 -208.53623962]
[349.76367188 -222.70077515]
[355.45751953 -236.58195496]
[361.88211060 -250.14042664]
[369.01919556 -263.33773804]
[376.84854126 -276.13650513]
[385.34799194 -288.50042725]
[394.49340820 -300.39447021]
[404.25891113 -311.78491211]
[414.61679077 -322.63949585]
[425.53771973 -332.92739868]
[436.99069214 -342.61947632]
[448.94326782 -351.68826294]
[461.36157227 -360.10806274]
[474.21038818 -367.85501099]
[487.45330811 -374.90713501]
[501.05276489 -381.24441528]
[514.97027588 -386.84893799]
[529.16632080 -391.70480347]
[543.60070801 -395.79824829]
[558.23248291 -399.11764526]
[573.02014160 -401.65359497]
[587.92187500 -403.39892578]
[602.89538574 -404.34869385]
[617.89819336 -404.50015259]
[632.88775635 -403.85293579]
[647.82171631 -402.40887451]
[662.65759277 -400.17202759]
[677.35339355 -397.14874268]
[691.86749268 -393.34759521]
[706.15869141 -388.77938843]
[720.18652344 -383.45703125]
[733.91119385 -377.39559937]
[747.29376221 -370.61233521]
[760.29638672 -363.12640381]
[772.88220215 -354.95907593]
[785.01544189 -346.13348389]
[796.66180420 -336.67462158]
[807.78820801 -326.60934448]
[818.36315918 -315.96612549]
[828.35662842 -304.77517700]
[837.74035645 -293.06823730]
[846.48773193 -280.87844849]
[854.57391357 -268.24038696]
[861.97601318 -255.18986511]
[868.67309570 -241.76388550]
[874.64605713 -228.00051880]
[879.87805176 -213.93873596]
[884.35424805 -199.61843872]
[888.06195068 -185.08021545]
[890.99060059 -170.36524963]
[893.13195801 -155.51527405]
[894.47991943 -140.57237244]
[895.03070068 -125.57891083]
[894.78271484 -110.57739258]
[893.73663330 -95.61032867]
[891.89544678 -80.72015381]
[889.26440430 -65.94907379]
[885.85095215 -51.33895874]
[881.66473389 -36.93122101]
[876.71765137 -22.76670647]
[871.02368164 -8.88556194]
[864.59906006 4.67286348]
[857.46185303 17.87013817]
[849.63244629 30.66884995]
[841.13293457 43.03272247]
[831.98742676 54.92670822]
[822.22186279 66.31709290]
[811.86389160 77.17158508]
[800.94293213 87.45941925]
[789.48986816 97.15143585]
[777.53723145 106.22016144]
[765.11889648 114.63987732]
[752.27001953 122.38673401]
[739.02703857 129.43876648]
[725.42755127 135.77598572]
[711.51000977 141.38041687]
[697.31396484 146.23619080]
[682.87951660 150.32952881]
[668.24774170 153.64883423]
[653.46002197 156.18469238]
[638.55828857 157.92993164]
[623.58483887 158.87959290]
[608.58203125 159.03097534]
[593.59240723 158.38366699]
[578.65850830 156.93949890]
[563.82263184 154.70254517]
[549.12683105 151.67918396]
[534.61279297 147.87794495]
[520.32159424 143.30963135]
[506.29379272 137.98718262]
[492.56918335 131.92568970]
[479.18661499 125.14232635]
[466.18402100 117.65632629]
[453.59829712 109.48891449]
[441.46508789 100.66323090]
[429.81881714 91.20429993]
[418.69247437 81.13893890]
[408.11758423 70.49567413]
[398.12414551 59.30466843]
[388.74050903 47.59765625]
[379.99322510 35.40781403]
[371.90710449 22.76969910]
[364.50506592 9.71913528]
[357.80813599 -3.70688510]
[344.04803467 2.26467776]
[330.28793335 8.23624039]
[316.52783203 14.20780373]
[302.76770020 20.17936707]
[289.00759888 26.15092850]
[293.94540405 40.31124878]
[297.82391357 54.79756546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 208]
[82 207]
[83 206]
[84 205]
[85 204]
[86 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
