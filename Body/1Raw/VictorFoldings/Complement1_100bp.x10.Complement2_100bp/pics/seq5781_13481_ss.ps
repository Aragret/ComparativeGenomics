%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[155.39912415 489.76608276]
[152.83781433 474.97271729]
[151.81115723 459.99438477]
[152.33004761 444.98989868]
[154.38899231 430.11828613]
[157.96615601 415.53720093]
[163.02362061 401.40121460]
[169.50778198 387.86019897]
[177.34989929 375.05764771]
[186.46684265 363.12930298]
[196.76196289 352.20159912]
[208.12612915 342.39041138]
[220.43887329 333.79968262]
[213.16564941 320.68099976]
[205.89242554 307.56228638]
[198.61918640 294.44360352]
[191.34596252 281.32492065]
[184.07273865 268.20620728]
[168.56445312 259.99279785]
[169.03746033 241.58471680]
[161.56971741 228.57575989]
[154.10198975 215.56681824]
[146.63424683 202.55786133]
[142.33999634 200.46775818]
[139.31315613 195.65785217]
[139.14443970 189.04853821]
[132.06733704 175.82299805]
[124.99022675 162.59747314]
[117.91312408 149.37194824]
[103.28296661 152.41842651]
[88.38702393 151.22116089]
[74.43125153 145.87710571]
[62.54550171 136.81887817]
[53.69202042 124.77983856]
[48.58758545 110.73464966]
[47.64543915 95.82040405]
[50.94185638 81.24452972]
[58.20996857 68.18707275]
[68.86135101 57.70515823]
[61.78424454 44.47962952]
[54.70713806 31.25410271]
[47.63003540 18.02857399]
[40.55292892 4.80304670]
[33.47582245 -8.42248058]
[30.09609222 6.19180727]
[18.84773445 16.11523628]
[3.92610860 17.64661217]
[-9.10338593 10.21477032]
[-15.38107014 -3.40839648]
[-12.56552410 -18.14178467]
[-1.70687652 -28.49020195]
[13.14486599 -30.59394836]
[26.45119286 -23.66754532]
[20.99583626 -37.64034271]
[15.54047871 -51.61314011]
[7.21878099 -39.13318253]
[-7.71317959 -37.70610046]
[-18.24811745 -48.38388443]
[-16.62006760 -63.29527283]
[-4.02916908 -71.44814301]
[10.24183559 -66.83363342]
[5.84083748 -81.17348480]
[1.43983948 -95.51332855]
[-2.96115851 -109.85317993]
[-7.36215687 -124.19302368]
[-18.80790520 -135.11572266]
[-15.14530563 -149.55299377]
[-19.54630280 -163.89283752]
[-34.30429840 -161.12126160]
[-49.27981567 -160.01951599]
[-64.28453064 -160.60145569]
[-79.12973022 -162.85977173]
[-93.62873077 -166.76605225]
[-107.59918976 -172.27116394]
[-120.86540985 -179.30589294]
[-133.26055908 -187.78175354]
[-144.62875366 -197.59216309]
[-154.82702637 -208.61373901]
[-163.72712708 -220.70788574]
[-171.21711731 -233.72248840]
[-177.20281982 -247.49389648]
[-181.60893250 -261.84890747]
[-184.38006592 -276.60696411]
[-185.48136902 -291.58251953]
[-184.89897156 -306.58721924]
[-182.64021301 -321.43234253]
[-178.73350525 -335.93124390]
[-173.22798157 -349.90151978]
[-166.19285583 -363.16754150]
[-157.71661377 -375.56243896]
[-147.90586853 -386.93032837]
[-136.88398743 -397.12829590]
[-124.78957367 -406.02801514]
[-111.77474213 -413.51763916]
[-98.00316620 -419.50289917]
[-83.64802551 -423.90859985]
[-68.88986969 -426.67929077]
[-53.91428375 -427.78015137]
[-38.90960693 -427.19729614]
[-24.06453896 -424.93811035]
[-9.56577110 -421.03094482]
[4.40435791 -415.52499390]
[17.67015839 -408.48950195]
[30.06480217 -400.01287842]
[41.43241119 -390.20178223]
[51.63002396 -379.17959595]
[60.52939606 -367.08493042]
[68.01861572 -354.06988525]
[74.00348663 -340.29812622]
[78.40874481 -325.94284058]
[81.17899323 -311.18460083]
[82.27939606 -296.20898438]
[81.69610596 -281.20431519]
[79.43646240 -266.35931396]
[75.52889252 -251.86067200]
[70.02252197 -237.89071655]
[62.98660278 -224.62512207]
[54.50962830 -212.23072815]
[44.69819641 -200.86341858]
[33.67570114 -190.66613770]
[21.58076096 -181.76712036]
[8.56548119 -174.27828979]
[-5.20645618 -168.29383850]
[-0.80545825 -153.95399475]
[10.32550240 -144.05697632]
[6.97769070 -128.59402466]
[11.37868881 -114.25417328]
[15.77968693 -99.91432953]
[20.18068504 -85.57447815]
[24.58168221 -71.23463440]
[29.51327705 -57.06849670]
[34.96863174 -43.09569931]
[40.42399216 -29.12290192]
[46.70135117 -15.49958611]
[53.77845764 -2.27405858]
[60.85556030 10.95146847]
[67.93267059 24.17699623]
[75.00977325 37.40252304]
[82.08687592 50.62805176]
[96.71703339 47.58157349]
[111.61297607 48.77883148]
[125.56874847 54.12289810]
[137.45449829 63.18112183]
[146.30798340 75.22016144]
[151.41241455 89.26535034]
[152.35456848 104.17959595]
[149.05813599 118.75547028]
[141.79003906 131.81292725]
[131.13865662 142.29484558]
[138.21575928 155.52037048]
[145.29286194 168.74589539]
[152.36996460 181.97142029]
[159.64318848 195.09011841]
[167.11093140 208.09907532]
[174.57867432 221.10801697]
[182.04641724 234.11697388]
[194.27009583 238.23333740]
[200.22218323 249.22225952]
[197.19142151 260.93298340]
[204.46466064 274.05169678]
[211.73788452 287.17037964]
[219.01110840 300.28906250]
[226.28434753 313.40777588]
[233.55757141 326.52645874]
[247.36669922 320.63476562]
[261.70843506 316.19418335]
[276.43072510 313.25177002]
[291.37756348 311.83874512]
[306.39044189 311.97009277]
[321.31024170 313.64440918]
[335.97882080 316.84393311]
[350.24066162 321.53475952]
[363.94461060 327.66714478]
[376.94534302 335.17611694]
[389.10510254 343.98205566]
[400.29492188 353.99163818]
[410.39627075 365.09872437]
[419.30200195 377.18554688]
[426.91772461 390.12405396]
[433.16271973 403.77703857]
[437.97079468 417.99978638]
[441.29095459 432.64154053]
[443.08801270 447.54705811]
[443.34292603 462.55834961]
[442.05297852 477.51629639]
[439.23187256 492.26232910]
[434.90948486 506.64013672]
[429.13162231 520.49725342]
[421.95959473 533.68688965]
[413.46939087 546.06915283]
[403.75100708 557.51275635]
[392.90744019 567.89648438]
[381.05371094 577.11022949]
[368.31539917 585.05627441]
[354.82757568 591.65045166]
[340.73324585 596.82281494]
[326.18176270 600.51849365]
[311.32739258 602.69842529]
[296.32760620 603.33941650]
[281.34143066 602.43469238]
[266.52770996 599.99383545]
[252.04348755 596.04278564]
[238.04228210 590.62335205]
[224.67253113 583.79296875]
[212.07595825 575.62408447]
[200.38610840 566.20330811]
[189.72686768 555.63049316]
[180.21125793 544.01770020]
[171.94013977 531.48803711]
[165.00119019 518.17431641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[20 156]
[21 155]
[22 154]
[23 153]
[26 152]
[27 151]
[28 150]
[29 149]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 134]
[53 133]
[54 132]
[55 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[67 124]
[68 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
