%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[136.14483643 703.17095947]
[122.54534149 696.81500244]
[109.61161041 689.19506836]
[97.46076965 680.38018799]
[86.20287323 670.45025635]
[75.93986511 659.49505615]
[66.76469421 647.61395264]
[58.76045990 634.91448975]
[51.99964523 621.51159668]
[46.54348373 607.52679443]
[42.44138336 593.08666992]
[39.73049545 578.32196045]
[38.43537140 563.36645508]
[38.56773758 548.35559082]
[40.12640381 533.42523193]
[43.09724426 518.71063232]
[47.45335770 504.34509277]
[53.15529633 490.45867920]
[60.15142059 477.17715454]
[68.37836456 464.62078857]
[77.76162720 452.90332031]
[88.21623230 442.13085938]
[99.64749908 432.40093994]
[111.95189667 423.80172729]
[125.01799774 416.41107178]
[138.72746277 410.29589844]
[152.95614624 405.51162720]
[167.57516479 402.10153198]
[165.57115173 387.23599243]
[163.56713867 372.37048340]
[161.56312561 357.50494385]
[159.55911255 342.63940430]
[156.89332581 327.87820435]
[153.57106018 313.25073242]
[150.24880981 298.62326050]
[146.92654419 283.99581909]
[143.60427856 269.36834717]
[140.28202820 254.74089050]
[136.95976257 240.11343384]
[133.52870178 225.51110840]
[129.98902893 210.93473816]
[125.80201721 196.53096008]
[120.97602081 182.32850647]
[116.04442596 168.16236877]
[111.00751495 154.03334045]
[105.97059631 139.90431213]
[100.93367767 125.77527618]
[95.89676666 111.64624786]
[93.85920715 126.50721741]
[87.58631897 140.13258362]
[77.62076569 151.34364319]
[64.82466125 159.17050171]
[50.30500031 162.93606567]
[35.31788254 162.31457520]
[21.15983772 157.35980225]
[9.05568123 148.50038147]
[0.05254396 136.50273132]
[-5.07071352 122.40478516]
[-5.87087870 107.42614746]
[-2.27872801 92.86260986]
[5.39498091 79.97408295]
[16.48639488 69.87554169]
[30.03599739 63.44061661]
[44.87161255 61.22598648]
[59.70980835 63.42324829]
[73.26692963 69.84230804]
[84.37016296 79.92785645]
[92.05761719 92.80413818]
[91.16479492 77.83073425]
[82.05342865 68.70134735]
[81.61805725 56.21158218]
[89.54699707 47.07602310]
[88.87721252 32.09098434]
[88.20742798 17.10594368]
[87.53764343 2.12090516]
[84.02816772 -6.31244421]
[86.97112274 -13.09188366]
[86.52451324 -28.08523369]
[86.07791138 -43.07858276]
[84.40637207 -57.98515701]
[81.52109528 -72.70504761]
[78.63582611 -87.42494202]
[75.75054932 -102.14482880]
[65.50325012 -114.19902039]
[70.64795685 -128.17691040]
[67.76268768 -142.89678955]
[52.70421219 -143.47912598]
[38.18609619 -147.51905823]
[24.99128723 -154.79873657]
[13.83135700 -164.92556763]
[5.30815172 -177.35342407]
[-0.11868516 -191.41209412]
[-2.15649056 -206.34341431]
[-0.69536823 -221.34213257]
[4.18588543 -235.59941101]
[12.22403049 -248.34637451]
[22.98557854 -258.89556885]
[35.89017487 -266.67813110]
[50.24189377 -271.27432251]
[65.26675415 -272.43627930]
[80.15449524 -270.10137939]
[94.10224152 -264.39547729]
[106.35779572 -255.62631226]
[116.26023865 -244.26681519]
[123.27555084 -230.92956543]
[127.02539062 -216.33383179]
[127.30754852 -201.26675415]
[124.10679626 -186.54086304]
[117.59575653 -172.95030212]
[108.12555695 -161.22802734]
[96.20690918 -152.00616455]
[82.48257446 -145.78207397]
[85.36785126 -131.06217957]
[95.40877533 -120.06085205]
[90.47044373 -105.03010559]
[93.35571289 -90.31021118]
[96.24098969 -75.59032440]
[99.12625885 -60.87042999]
[105.04337311 -74.65403748]
[116.62988281 -84.18046570]
[131.29731750 -87.32149506]
[145.76896667 -83.37539673]
[156.81179810 -73.22375488]
[161.95883179 -59.13446808]
[160.06019592 -44.25511169]
[151.54005432 -31.90978050]
[138.30183411 -24.85644722]
[123.30297852 -24.67084694]
[109.89427948 -31.39444542]
[101.07125854 -43.52518845]
[101.51786804 -28.53183937]
[101.96446991 -13.53848934]
[102.52268219 1.45112002]
[103.19246674 16.43615913]
[103.86225128 31.42119789]
[104.53203583 46.40623474]
[114.75969696 60.66673660]
[106.13820648 76.93791962]
[107.03102112 91.91132355]
[110.02579498 106.60932922]
[115.06270599 120.73835754]
[120.09962463 134.86738586]
[125.13654327 148.99641418]
[130.17346191 163.12544250]
[136.00282288 170.15795898]
[135.17848206 177.50250244]
[140.00447083 191.70495605]
[147.58888245 178.76367188]
[162.06730652 174.84254456]
[175.14584351 182.18774414]
[179.33250427 196.59162903]
[172.22898865 209.80299377]
[157.90452576 214.25376892]
[144.56539917 207.39506531]
[148.10507202 221.97143555]
[153.17118835 229.57225037]
[151.58721924 236.79116821]
[154.90948486 251.41864014]
[158.23175049 266.04608154]
[161.55400085 280.67355347]
[164.87626648 295.30102539]
[168.19851685 309.92846680]
[171.52078247 324.55593872]
[180.41038513 312.47393799]
[195.21817017 310.08032227]
[207.46157837 318.74627686]
[210.12701416 333.50756836]
[201.68760681 345.90823364]
[186.97782898 348.84460449]
[174.42465210 340.63540649]
[176.42866516 355.50091553]
[178.43267822 370.36645508]
[180.43669128 385.23199463]
[182.44070435 400.09750366]
[197.44087219 399.51464844]
[212.42851257 400.36032104]
[227.26791382 402.62683105]
[241.82466125 406.29367065]
[255.96694946 411.32760620]
[269.56668091 417.68310547]
[282.50067139 425.30255127]
[294.65182495 434.11697388]
[305.91009521 444.04653931]
[316.17349243 455.00134277]
[325.34912109 466.88211060]
[333.35382080 479.58132935]
[340.11511230 492.98391724]
[345.57177734 506.96853638]
[349.67440796 521.40850830]
[352.38583374 536.17309570]
[353.68151855 551.12854004]
[353.54968262 566.13946533]
[351.99157715 581.06988525]
[349.02127075 595.78454590]
[344.66567993 610.15026855]
[338.96423340 624.03692627]
[331.96859741 637.31866455]
[323.74209595 649.87536621]
[314.35928345 661.59313965]
[303.90505981 672.36602783]
[292.47415161 682.09631348]
[280.17007446 690.69598389]
[267.10424805 698.08709717]
[253.39498901 704.20275879]
[239.16648865 708.98760986]
[224.54757690 712.39819336]
[209.67066956 714.40374756]
[194.67048645 714.98608398]
[179.68286133 714.13989258]
[164.84355164 711.87280273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 155]
[41 154]
[42 147]
[43 146]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[68 139]
[69 138]
[72 136]
[73 135]
[74 134]
[75 133]
[77 132]
[78 131]
[79 130]
[80 118]
[81 117]
[82 116]
[83 115]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
