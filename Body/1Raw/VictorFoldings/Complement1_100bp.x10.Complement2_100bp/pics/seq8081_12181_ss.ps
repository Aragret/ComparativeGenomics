%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[265.29812622 528.39123535]
[275.63305664 517.47839355]
[287.51281738 508.27120972]
[280.23956299 495.15252686]
[272.96633911 482.03384399]
[265.69311523 468.91513062]
[250.18482971 460.70172119]
[250.65785217 442.29364014]
[243.19010925 429.28469849]
[235.72236633 416.27572632]
[228.25462341 403.26678467]
[220.30793762 390.54473877]
[211.89332581 378.12725830]
[203.47869873 365.70974731]
[202.36117554 380.66806030]
[193.41921997 392.71139526]
[179.42361450 398.10797119]
[164.71104431 395.18560791]
[153.84036255 384.84982300]
[150.17994690 370.30328369]
[154.86405945 356.05340576]
[166.44123840 346.51565552]
[181.32418823 344.64538574]
[194.90144348 351.02233887]
[188.22125244 337.59194946]
[181.54106140 324.16159058]
[174.86085510 310.73120117]
[168.18066406 297.30081177]
[161.50047302 283.87045288]
[154.82028198 270.44006348]
[148.14009094 257.00970459]
[141.45988464 243.57931519]
[134.77969360 230.14894104]
[127.99970245 216.76867676]
[121.12029266 203.43923950]
[120.50202942 218.42649841]
[114.57839203 232.20729065]
[104.12872314 242.96855164]
[90.52786255 249.29440308]
[75.56523132 250.35261536]
[61.20943069 246.00393677]
[49.34920883 236.82052612]
[41.54497910 224.01060486]
[38.82352448 209.25955200]
[41.54290009 194.50811768]
[49.34532166 181.69709778]
[61.20425034 172.51200867]
[75.55944061 168.16131592]
[90.52221680 169.21740723]
[104.12397003 175.54135132]
[114.57647705 186.30311584]
[110.82017517 171.78105164]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[78.73635864 78.64060211]
[83.03996277 64.38127899]
[79.28366852 49.85922241]
[67.15952301 49.32766342]
[55.59842682 45.68495941]
[45.38376236 39.18574142]
[37.20564651 30.27793121]
[31.61431885 19.57187462]
[28.98312950 7.79852438]
[29.48361206 -4.24046087]
[33.07431793 -15.72730732]
[39.50414276 -25.88367081]
[48.32987213 -34.02337646]
[58.94672775 -39.59878159]
[56.06145477 -54.31867599]
[53.17618179 -69.03856659]
[50.29090881 -83.75846100]
[47.40563583 -98.47834778]
[38.16025162 -86.66636658]
[23.28775787 -84.71471405]
[11.30779839 -93.74137115]
[9.08303642 -108.57546997]
[17.88791656 -120.71936035]
[32.67860413 -123.21646881]
[44.98180389 -114.63713837]
[43.42128372 -129.55574036]
[39.85329437 -135.12181091]
[39.66077805 -140.80158997]
[42.04320145 -144.94081116]
[40.92755127 -159.89926147]
[39.81190109 -174.85771179]
[28.11948204 -185.14970398]
[27.20114326 -200.33558655]
[37.08503723 -211.41909790]
[35.96939087 -226.37756348]
[34.85374069 -241.33601379]
[33.73809433 -256.29446411]
[19.20815086 -260.68139648]
[7.24653625 -270.02401733]
[-0.52904123 -283.05874634]
[-3.06699872 -298.02282715]
[-0.02409825 -312.89242554]
[8.18813324 -325.65658569]
[20.45905876 -334.58905029]
[35.12913513 -338.48178101]
[50.21435547 -336.80828857]
[63.67457199 -329.79495239]
[73.68939209 -318.39022827]
[78.90440369 -304.13650513]
[78.61431122 -288.96151733]
[72.85835266 -274.91754150]
[62.41496658 -263.90390015]
[48.69654465 -257.41012573]
[49.81219482 -242.45166016]
[50.92784500 -227.49320984]
[52.04349136 -212.53475952]
[63.46217346 -203.04005432]
[64.80668640 -187.88595581]
[54.77035522 -175.97335815]
[55.88600540 -161.01490784]
[57.00165176 -146.05645752]
[58.33988571 -131.11627197]
[59.90040970 -116.19766235]
[62.12552643 -101.36362457]
[65.01080322 -86.64373016]
[67.89607239 -71.92383575]
[70.78134918 -57.20394897]
[73.66661835 -42.48405457]
[91.43408203 -39.57174683]
[106.75308228 -30.04719543]
[117.26485443 -15.34625053]
[121.33911133 2.29587507]
[118.32676697 20.18445015]
[108.66323853 35.57682037]
[93.80572510 46.10292053]
[97.56202698 60.62498093]
[108.23995972 71.00914764]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[125.34223175 168.02474976]
[129.09854126 182.54681396]
[134.44972229 196.55982971]
[141.32913208 209.88926697]
[148.04579163 216.07992554]
[148.21006775 223.46875000]
[154.89025879 236.89912415]
[161.57046509 250.32949829]
[168.25065613 263.75988770]
[174.93084717 277.19024658]
[181.61103821 290.62063599]
[188.29124451 304.05099487]
[194.97143555 317.48138428]
[201.65162659 330.91177368]
[208.33181763 344.34213257]
[215.89619446 357.29513550]
[224.31082153 369.71261597]
[232.72543335 382.13012695]
[238.07635498 368.11700439]
[252.32138062 363.41818237]
[264.95962524 371.49743652]
[266.67465210 386.39907837]
[256.20217896 397.13815308]
[241.26358032 395.79904175]
[248.73132324 408.80798340]
[256.19906616 421.81695557]
[263.66680908 434.82589722]
[275.89047241 438.94226074]
[281.84255981 449.93118286]
[278.81179810 461.64190674]
[286.08505249 474.76058960]
[293.35827637 487.87930298]
[300.63150024 500.99798584]
[314.73406982 495.80014038]
[329.46484375 492.81607056]
[344.47851562 492.11572266]
[359.42312622 493.71551514]
[373.94833374 497.57794189]
[387.71368408 503.61248779]
[400.39648438 511.67767334]
[411.69940186 521.58441162]
[421.35754395 533.10052490]
[429.14447021 545.95605469]
[434.87762451 559.84960938]
[438.42263794 574.45556641]
[439.69644165 589.43145752]
[438.66909790 604.42633057]
[435.36477661 619.08856201]
[429.86087036 633.07452393]
[422.28640747 646.05639648]
[412.81896973 657.72979736]
[401.68048096 667.82110596]
[389.13204956 676.09375000]
[375.46780396 682.35382080]
[361.00805664 686.45465088]
[346.09179688 688.29998779]
[331.06866455 687.84661865]
[316.29080200 685.10522461]
[302.10464478 680.14001465]
[288.84274292 673.06738281]
[276.81594849 664.05310059]
[266.30621338 653.30853271]
[257.55990601 641.08551025]
[250.78201294 627.67053223]
[246.13145447 613.37817383]
[243.71723938 598.54333496]
[243.59594727 583.51385498]
[245.77043152 568.64196777]
[250.18971252 554.27636719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[4 173]
[5 172]
[6 171]
[8 168]
[9 167]
[10 166]
[11 165]
[12 159]
[13 158]
[14 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[31 149]
[32 148]
[33 147]
[34 145]
[35 144]
[51 143]
[52 142]
[53 141]
[54 140]
[55 139]
[56 138]
[58 136]
[60 134]
[61 133]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[83 121]
[84 120]
[87 119]
[88 118]
[89 117]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
