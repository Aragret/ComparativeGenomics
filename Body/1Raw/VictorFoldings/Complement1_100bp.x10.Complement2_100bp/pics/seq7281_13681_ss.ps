%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[67.38224030 523.82263184]
[62.74373627 509.53976440]
[59.79477310 494.81497192]
[58.57523727 479.84735107]
[59.10161591 464.83938599]
[61.36679077 449.99398804]
[65.34013367 435.51196289]
[70.96790314 421.58914185]
[78.17398834 408.41384888]
[86.86094666 396.16421509]
[96.91127777 385.00592041]
[108.18908691 375.08990479]
[120.54183197 366.55023193]
[133.80247498 359.50238037]
[128.34710693 345.52957153]
[122.89175415 331.55679321]
[117.43640137 317.58398438]
[111.98104095 303.61117554]
[110.47403717 318.53530884]
[104.87687683 332.45190430]
[95.63097382 344.26345825]
[83.46550751 353.03851318]
[69.33988190 358.08499146]
[54.36811829 359.00488281]
[39.73094559 355.72570801]
[26.58271027 348.50601196]
[15.96033955 337.91519165]
[8.70155811 324.78851318]
[5.37882376 310.16113281]
[6.25418043 295.18670654]
[11.25859451 281.04614258]
[19.99739647 268.85461426]
[31.78140831 259.57360840]
[45.68129349 253.93505859]
[60.60084915 252.38365173]
[75.36345673 255.04173279]
[88.80487823 261.69967651]
[99.86505890 271.83242798]
[107.67312622 284.64401245]
[106.55747986 269.68557739]
[105.44183350 254.72711182]
[104.32617950 239.76866150]
[103.21053314 224.81021118]
[102.09488678 209.85176086]
[91.44717407 195.90208435]
[99.58039093 179.38142395]
[98.24215698 164.44123840]
[96.90392303 149.50105286]
[88.06200409 137.51483154]
[94.53726196 123.07939148]
[93.19902802 108.13921356]
[91.19500732 93.27368164]
[88.52921295 78.51246643]
[85.86341858 63.75124741]
[83.19762421 48.99002838]
[80.42201233 34.24906540]
[77.53674316 19.52917671]
[73.99707031 4.95280075]
[69.81005859 -9.45098114]
[65.62304688 -23.85476303]
[61.43603516 -38.25854492]
[45.86105728 -37.57227325]
[30.58147621 -40.62401581]
[16.48085403 -47.23304367]
[4.37356520 -57.01305771]
[-5.04223776 -69.39474487]
[-11.22488785 -83.65892029]
[-13.82035637 -98.97833252]
[-12.68253040 -114.46557617]
[-7.88142347 -129.22457886]
[0.30111000 -142.40234375]
[11.38792324 -153.23837280]
[24.73439789 -161.10845947]
[20.33339882 -175.44830322]
[15.93240166 -189.78814697]
[11.53140354 -204.12799072]
[7.13040495 -218.46783447]
[2.72940707 -232.80769348]
[-12.19510555 -230.95564270]
[-27.21447372 -231.72355652]
[-41.87228012 -235.08805847]
[-55.72308350 -240.94692993]
[-68.34597778 -249.12211609]
[-79.35736847 -259.36517334]
[-88.42263031 -271.36483765]
[-95.26628113 -284.75646973]
[-99.68035126 -299.13308716]
[-101.53069305 -314.05780029]
[-100.76108551 -329.07708740]
[-97.39492035 -343.73452759]
[-91.53448486 -357.58465576]
[-83.35786438 -370.20663452]
[-73.11354828 -381.21685791]
[-61.11285019 -390.28076172]
[-47.72045135 -397.12289429]
[-33.34333420 -401.53530884]
[-18.41840172 -403.38397217]
[-3.39920664 -402.61267090]
[11.25783348 -399.24484253]
[25.10730934 -393.38281250]
[37.72835159 -385.20477295]
[48.73741531 -374.95922852]
[57.79995728 -362.95748901]
[64.64057159 -349.56430054]
[69.05137634 -335.18670654]
[70.89833832 -320.26156616]
[70.12532806 -305.24243164]
[66.75582886 -290.58578491]
[60.89225388 -276.73696899]
[52.71277237 -264.11685181]
[42.46596146 -253.10896301]
[30.46320534 -244.04777527]
[17.06925392 -237.20869446]
[21.47025299 -222.86883545]
[25.87125015 -208.52899170]
[30.27224922 -194.18914795]
[34.67324829 -179.84930420]
[39.07424545 -165.50944519]
[53.49159622 -166.53303528]
[67.78155518 -164.31442261]
[81.22381592 -158.96202087]
[93.14005280 -150.74232483]
[102.92815399 -140.06660461]
[110.09261322 -127.47032928]
[114.26964569 -113.58631897]
[115.24564362 -99.11293030]
[112.96810150 -84.77897644]
[107.54843140 -71.30696869]
[99.25650787 -59.37674713]
[88.50724030 -49.59115219]
[75.83981323 -42.44555664]
[80.02682495 -28.04177475]
[84.21383667 -13.63799286]
[88.40084839 0.76578933]
[96.55555725 -11.82391930]
[111.19462585 -15.09465504]
[123.93212891 -7.17279053]
[127.47145081 7.40366983]
[119.78511047 20.28466797]
[105.27618408 24.09138298]
[92.25662994 16.64390373]
[95.14190674 31.36379433]
[99.51330566 37.32304382]
[97.95883942 46.32423401]
[100.62463379 61.08545303]
[103.29043579 75.84667206]
[105.95623016 90.60788727]
[115.37644958 78.93486786]
[130.27635193 77.20485687]
[142.12059021 86.40887451]
[144.12425232 101.27445221]
[135.13954163 113.28590393]
[120.31331635 115.56253052]
[108.13920593 106.80097961]
[109.47744751 121.74115753]
[118.41508484 134.79602051]
[111.84410858 148.16282654]
[113.18234253 163.10301208]
[114.52057648 178.04319763]
[123.89971924 186.89726257]
[124.70676422 199.36851501]
[117.05333710 208.73609924]
[118.16898346 223.69456482]
[119.28463745 238.65301514]
[120.40028381 253.61146545]
[121.51593018 268.56991577]
[122.63158417 283.52838135]
[125.95384216 298.15582275]
[131.40919495 312.12863159]
[136.86454773 326.10144043]
[142.31991577 340.07421875]
[147.77526855 354.04702759]
[162.30331421 350.24542236]
[177.17448425 348.15612793]
[192.18763733 347.80746460]
[207.13975525 349.20410156]
[221.82862854 352.32717896]
[236.05560303 357.13446045]
[249.62826538 363.56091309]
[262.36306763 371.51962280]
[274.08779907 380.90295410]
[284.64389038 391.58404541]
[293.88858032 403.41842651]
[301.69683838 416.24603271]
[307.96304321 429.89343262]
[312.60250854 444.17599487]
[315.55245972 458.90060425]
[316.77297974 473.86813354]
[316.24761963 488.87615967]
[313.98342896 503.72167969]
[310.01104736 518.20397949]
[304.38421631 532.12719727]
[297.17898560 545.30297852]
[288.49285889 557.55316162]
[278.44326782 568.71209717]
[267.16613770 578.62890625]
[254.81394958 587.16943359]
[241.55378723 594.21813965]
[227.56495667 599.67974854]
[213.03665161 603.48040771]
[198.16534424 605.56866455]
[183.15216064 605.91632080]
[168.20013428 604.51867676]
[153.51147461 601.39465332]
[139.28482056 596.58642578]
[125.71258545 590.15905762]
[112.97830963 582.19952393]
[101.25420380 572.81536865]
[90.69883728 562.13360596]
[81.45494843 550.29858398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[39 167]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[46 159]
[47 158]
[48 157]
[50 155]
[51 154]
[52 147]
[53 146]
[54 145]
[55 144]
[56 142]
[57 141]
[58 134]
[59 133]
[60 132]
[61 131]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
