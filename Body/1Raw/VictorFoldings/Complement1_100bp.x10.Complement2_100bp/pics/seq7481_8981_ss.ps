%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[78.28888702 363.81262207]
[74.28773499 349.34518433]
[71.61877441 334.57388306]
[70.30411530 319.62106323]
[70.35464478 304.61062622]
[71.76995087 289.66699219]
[74.53829956 274.91400146]
[78.63676453 260.47384644]
[84.03136444 246.46621704]
[90.67741394 233.00720215]
[98.51982880 220.20829773]
[107.49363708 208.17558289]
[117.52445984 197.00877380]
[128.52919006 186.80038452]
[140.41662598 177.63502502]
[132.37545776 164.97248840]
[124.33428955 152.30996704]
[116.29311371 139.64744568]
[108.25193787 126.98491669]
[100.21076965 114.32239532]
[87.90818024 107.67875671]
[87.12670898 93.71878052]
[79.08553314 81.05625153]
[66.04109955 88.46797943]
[52.64869690 95.23072052]
[38.94059753 101.32818604]
[24.94981956 106.74567413]
[10.71006966 111.47013855]
[-3.74434566 115.49020386]
[-18.37860680 118.79618073]
[-33.15745544 121.38010406]
[-48.04528809 123.23574829]
[-63.00624466 124.35864258]
[-78.00427246 124.74609375]
[-93.00325012 124.39714813]
[-107.96704102 123.31266022]
[-122.85958862 121.49524689]
[-137.64501953 118.94927216]
[-152.28771973 115.68087006]
[-166.75241089 111.69792938]
[-181.00424194 107.01003265]
[-195.00888062 101.62847900]
[-208.73258972 95.56623077]
[-222.14230347 88.83789825]
[-235.20573425 81.45967865]
[-247.89137268 73.44935608]
[-260.16870117 64.82622528]
[-272.00811768 55.61106110]
[-283.38110352 45.82606506]
[-294.26028442 35.49480820]
[-304.61938477 24.64217949]
[-314.43353271 13.29432297]
[-323.67901611 1.47857893]
[-332.33361816 -10.77658844]
[-340.37646484 -23.44165421]
[-347.78814697 -36.48611069]
[-354.55084229 -49.87852859]
[-360.64828491 -63.58664322]
[-366.06573486 -77.57743073]
[-370.79016113 -91.81719208]
[-374.81018066 -106.27162170]
[-378.11611938 -120.90589142]
[-380.70001221 -135.68473816]
[-382.55563354 -150.57258606]
[-383.67849731 -165.53353882]
[-384.06588745 -180.53157043]
[-383.71691895 -195.53054810]
[-382.63238525 -210.49433899]
[-380.81494141 -225.38687134]
[-378.26892090 -240.17230225]
[-375.00048828 -254.81500244]
[-371.01751709 -269.27966309]
[-366.32958984 -283.53149414]
[-360.94799805 -297.53613281]
[-354.88571167 -311.25982666]
[-348.15734863 -324.66952515]
[-340.77908325 -337.73291016]
[-332.76873779 -350.41854858]
[-324.14556885 -362.69586182]
[-314.93038940 -374.53524780]
[-305.14535522 -385.90820312]
[-294.81408691 -396.78735352]
[-283.96142578 -407.14645386]
[-272.61355591 -416.96054077]
[-260.79776001 -426.20602417]
[-248.54258728 -434.86059570]
[-235.87750244 -442.90338135]
[-222.83302307 -450.31503296]
[-209.44059753 -457.07772827]
[-195.73246765 -463.17510986]
[-181.74165344 -468.59252930]
[-167.50187683 -473.31692505]
[-153.04745483 -477.33691406]
[-138.41317749 -480.64282227]
[-123.63430786 -483.22668457]
[-108.74646759 -485.08224487]
[-93.78550720 -486.20507812]
[-78.78747559 -486.59243774]
[-63.78849792 -486.24340820]
[-48.82471848 -485.15887451]
[-33.93217468 -483.34136963]
[-19.14675522 -480.79531860]
[-4.50407171 -477.52685547]
[9.96059704 -473.54382324]
[24.21240425 -468.85586548]
[38.21701813 -463.47424316]
[51.94069672 -457.41192627]
[65.35037994 -450.68353271]
[78.41376495 -443.30523682]
[91.09938049 -435.29486084]
[103.37665558 -426.67166138]
[115.21602631 -417.45645142]
[126.58896637 -407.67138672]
[137.46807861 -397.34008789]
[147.82714844 -386.48739624]
[157.64123535 -375.13949585]
[166.88667297 -363.32369995]
[175.54119873 -351.06848145]
[183.58396912 -338.40338135]
[190.99560547 -325.35888672]
[197.75823975 -311.96646118]
[203.85559082 -298.25830078]
[209.27297974 -284.26748657]
[213.99734497 -270.02770996]
[218.01730347 -255.57325745]
[221.32316589 -240.93896484]
[223.90698242 -226.16009521]
[225.76251221 -211.27224731]
[226.88529968 -196.31129456]
[227.27262878 -181.31324768]
[226.92358398 -166.31428528]
[225.83898926 -151.35049438]
[224.02145386 -136.45796204]
[221.47537231 -121.67254639]
[218.20686340 -107.02987671]
[214.22381592 -92.56521606]
[209.53581238 -78.31342316]
[204.15414429 -64.30882263]
[198.09179688 -50.58515549]
[191.36335754 -37.17548752]
[183.98504639 -24.11212349]
[175.97463989 -11.42653084]
[167.35140991 0.85072899]
[158.13615417 12.69007778]
[148.35107422 24.06299400]
[138.01974487 34.94207764]
[127.16703033 45.30112457]
[115.81910706 55.11517334]
[104.00328827 64.36058044]
[91.74806213 73.01508331]
[99.78923035 85.67760468]
[112.09181976 92.32124329]
[112.87329102 106.28121948]
[120.91446686 118.94374847]
[128.95564270 131.60627747]
[136.99681091 144.26879883]
[145.03797913 156.93132019]
[153.07916260 169.59384155]
[166.42956543 162.73223877]
[180.34863281 157.11309814]
[194.72102356 152.78297424]
[209.42761230 149.77774048]
[224.34655762 148.12232971]
[239.35421753 147.83044434]
[254.32624817 148.90449524]
[269.13858032 151.33560181]
[283.66845703 155.10359192]
[297.79550171 160.17726135]
[311.40261841 166.51455688]
[324.37707520 174.06298828]
[336.61135864 182.75996399]
[348.00408936 192.53346252]
[358.46084595 203.30245972]
[367.89498901 214.97773743]
[376.22836304 227.46253967]
[383.39187622 240.65341187]
[389.32620239 254.44105530]
[393.98214722 268.71121216]
[397.32110596 283.34564209]
[399.31546021 298.22305298]
[399.94866943 313.22021484]
[399.21548462 328.21279907]
[397.12194824 343.07659912]
[393.68545532 357.68841553]
[388.93444824 371.92721558]
[382.90829468 385.67498779]
[375.65698242 398.81777954]
[367.24053955 411.24673462]
[357.72872925 422.85885620]
[347.20037842 433.55786133]
[335.74273682 443.25515747]
[323.45074463 451.87036133]
[310.42620850 459.33209229]
[296.77713013 465.57849121]
[282.61657715 470.55786133]
[268.06188965 474.22885132]
[253.23368835 476.56112671]
[238.25482178 477.53530884]
[223.24943542 477.14334106]
[208.34187317 475.38845825]
[193.65563965 472.28524780]
[179.31245422 467.85937500]
[165.43116760 462.14752197]
[152.12681580 455.19702148]
[139.50962830 447.06549072]
[127.68416595 437.82031250]
[116.74841309 427.53805542]
[106.79299927 416.30395508]
[97.90041351 404.21112061]
[90.14434052 391.35971069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[22 151]
[23 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
