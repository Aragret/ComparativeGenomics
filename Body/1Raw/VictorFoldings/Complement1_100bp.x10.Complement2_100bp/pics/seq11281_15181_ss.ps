%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[151.34721375 483.01873779]
[155.64605713 468.59289551]
[162.76112366 455.32788086]
[172.40101624 443.76684570]
[184.17102051 434.38327026]
[197.58915710 427.56134033]
[193.61706543 413.09680176]
[189.64497375 398.63229370]
[185.67286682 384.16775513]
[181.70077515 369.70324707]
[177.72868347 355.23870850]
[173.75659180 340.77420044]
[169.14257812 326.50146484]
[163.89585876 312.44897461]
[158.64913940 298.39651489]
[153.36459351 293.22976685]
[153.43061829 284.09558105]
[148.39370728 269.96655273]
[143.35679626 255.83750916]
[137.90142822 241.86471558]
[132.03247070 228.06054688]
[126.16351318 214.25636292]
[120.29454803 200.45219421]
[114.42559052 186.64801025]
[108.55662537 172.84384155]
[106.60014343 187.71569824]
[99.16802979 200.74502563]
[87.36279297 209.99902344]
[72.93567657 214.10490417]
[58.02684784 212.45358276]
[44.84794998 205.29000854]
[35.35399246 193.67687988]
[30.95334435 179.33692932]
[32.29882050 164.39739990]
[39.19082642 151.07447815]
[50.60697174 141.34454346]
[64.85373688 136.65097046]
[79.81771088 137.69003296]
[93.27906036 144.30757141]
[103.23991394 155.52029419]
[100.35464478 140.80041504]
[97.46936798 126.08051300]
[94.58409882 111.36062622]
[91.37082672 96.70883942]
[87.83115387 82.13246155]
[84.29148102 67.55608368]
[80.75180817 52.97970963]
[67.53775787 44.73188019]
[64.15567017 29.89893913]
[72.10015106 17.35219383]
[68.56047821 2.77581835]
[65.02080536 -11.80055714]
[61.48113632 -26.37693214]
[57.94146347 -40.95330811]
[49.23273087 -28.74028206]
[34.46221924 -26.12647820]
[22.09114647 -34.60919952]
[19.20622635 -49.32916260]
[27.46007156 -61.85409927]
[42.12450409 -65.00915527]
[54.79852295 -56.98775482]
[52.57340622 -71.82180023]
[50.34828949 -86.65584564]
[48.12316895 -101.48988342]
[45.89805222 -116.32392883]
[43.67293549 -131.15797424]
[37.14625549 -117.65232849]
[25.14592743 -108.65276337]
[10.35285854 -106.16980743]
[-3.92814517 -110.75815582]
[-14.50666904 -121.39276123]
[-19.01944351 -135.69783020]
[-16.45830536 -150.47755432]
[-7.39541674 -162.43013000]
[6.14454842 -168.88531494]
[21.13672829 -168.40100098]
[34.23183060 -161.08537292]
[42.50438309 -148.57276917]
[42.72771072 -163.57110596]
[42.95103836 -178.56944275]
[43.17436600 -193.56777954]
[43.39769363 -208.56611633]
[43.62102127 -223.56445312]
[33.83859634 -230.32025146]
[28.58576202 -240.85156250]
[29.06393814 -252.49052429]
[35.03875732 -262.35040283]
[44.92693710 -268.04162598]
[45.59672165 -283.02667236]
[46.26650620 -298.01171875]
[46.93629456 -312.99673462]
[47.60607910 -327.98178101]
[48.27586365 -342.96682739]
[48.94564819 -357.95187378]
[34.44986725 -362.07122803]
[21.29510689 -369.42300415]
[10.19078255 -379.61077881]
[1.73573923 -392.08511353]
[-3.61405396 -406.17327881]
[-5.57008934 -421.11553955]
[-4.02688026 -436.10601807]
[0.93235004 -450.33636475]
[9.04015636 -463.03915405]
[19.85929489 -473.52926636]
[32.80630112 -481.24105835]
[47.18296432 -485.75863647]
[62.21396637 -486.83831787]
[77.08869934 -484.42193604]
[91.00499725 -478.63977051]
[103.21236420 -469.80364990]
[113.05247498 -458.39010620]
[119.99466705 -445.01464844]
[123.66455078 -430.39862061]
[123.86421967 -415.33020020]
[120.58290100 -400.62207031]
[113.99755859 -387.06735229]
[104.46332550 -375.39709473]
[92.49437714 -366.24063110]
[78.73617554 -360.09176636]
[63.93068695 -357.28207397]
[63.26090240 -342.29702759]
[62.59111786 -327.31201172]
[61.92133331 -312.32696533]
[61.25154495 -297.34191895]
[60.58176041 -282.35687256]
[59.91197586 -267.37185669]
[73.05624390 -254.63041687]
[72.70701599 -236.00808716]
[58.61935806 -223.34112549]
[58.39603043 -208.34278870]
[58.17270279 -193.34445190]
[57.94937515 -178.34611511]
[57.72604752 -163.34777832]
[57.50271988 -148.34944153]
[58.50698090 -133.38308716]
[60.73209763 -118.54904938]
[62.95721436 -103.71500397]
[65.18233490 -88.88095856]
[67.40744781 -74.04691315]
[69.63256836 -59.21287155]
[72.51783752 -44.49298096]
[76.05751038 -29.91660500]
[79.59718323 -15.34022999]
[83.13685608 -0.76385421]
[86.67652893 13.81252098]
[99.49050140 21.31836128]
[103.28787994 36.05045700]
[95.32817841 49.44004059]
[98.86785126 64.01641083]
[102.40752411 78.59278870]
[105.94719696 93.16916656]
[108.92302704 95.62208557]
[110.80319977 99.37479401]
[111.03145599 103.90854645]
[109.30398560 108.47534943]
[112.18926239 123.19524384]
[115.07453156 137.91513062]
[117.95980835 152.63502502]
[122.36080170 166.97486877]
[128.22976685 180.77905273]
[134.09872437 194.58322144]
[139.96768188 208.38740540]
[145.83665466 222.19157410]
[151.70561218 235.99575806]
[155.26565552 238.48171997]
[157.61334229 241.65234375]
[158.68231201 245.04243469]
[158.56407166 248.21302795]
[157.48582458 250.80059814]
[162.52273560 264.92962646]
[167.55964661 279.05865479]
[172.70161438 293.14981079]
[177.94833374 307.20227051]
[183.19505310 321.25473022]
[190.39079285 308.09338379]
[204.74604797 303.74291992]
[218.03747559 310.69546509]
[222.65113831 324.96829224]
[215.94412231 338.38531494]
[201.75851440 343.26058960]
[188.22111511 336.80209351]
[192.19320679 351.26663208]
[196.16529846 365.73114014]
[200.13739014 380.19567871]
[204.10949707 394.66018677]
[208.08158875 409.12472534]
[212.05368042 423.58923340]
[227.07398987 422.60168457]
[241.98558044 424.65826416]
[256.17782593 429.67474365]
[269.06954956 437.44570923]
[280.13287354 447.65295410]
[288.91476440 459.87847900]
[295.05557251 473.62167358]
[298.30386353 488.31976318]
[298.52661133 503.37084961]
[295.71469116 518.15863037]
[289.98327637 532.07751465]
[281.56701660 544.55755615]
[270.81060791 555.08770752]
[258.15444946 563.23675537]
[244.11688232 568.67102051]
[229.27268982 571.16796875]
[214.22973633 570.62536621]
[199.60401917 567.06536865]
[185.99447632 560.63385010]
[173.95837402 551.59405518]
[163.98860168 540.31628418]
[156.49342346 527.26226807]
[151.77975464 512.96661377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[13 174]
[14 173]
[15 172]
[17 171]
[18 170]
[19 169]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[40 158]
[41 157]
[42 156]
[43 155]
[44 151]
[45 150]
[46 149]
[47 148]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
