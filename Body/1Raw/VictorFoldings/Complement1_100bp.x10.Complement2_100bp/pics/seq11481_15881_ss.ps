%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[99.84828186 742.91436768]
[84.89605713 744.57141113]
[69.89397430 743.45251465]
[55.35297775 739.59576416]
[41.76834488 733.13262939]
[29.60276031 724.28314209]
[19.27057457 713.34875488]
[11.12370300 700.70190430]
[5.43962240 686.77331543]
[2.41193080 672.03735352]
[2.14375067 656.99603271]
[4.64421606 642.16149902]
[9.82816219 628.03912354]
[17.51902580 615.10992432]
[27.45485687 603.81414795]
[39.29724884 594.53662109]
[52.64284897 587.59332275]
[67.03711700 583.22070312]
[81.98978424 581.56774902]
[83.10543823 566.60925293]
[84.22108459 551.65081787]
[74.33718872 540.56732178]
[75.25552368 525.38140869]
[86.94794464 515.08941650]
[88.06359863 500.13098145]
[89.17924500 485.17251587]
[90.29489136 470.21408081]
[91.41054535 455.25561523]
[75.66802216 443.64581299]
[70.09342194 424.74594116]
[77.11756134 406.18115234]
[94.05130005 395.55151367]
[94.27462769 380.55316162]
[94.49795532 365.55484009]
[94.72128296 350.55648804]
[94.94461060 335.55816650]
[95.16793823 320.55981445]
[95.39126587 305.56146240]
[87.84431458 292.72042847]
[95.78622437 279.03698730]
[96.00955200 264.03863525]
[96.23287964 249.04029846]
[96.45620728 234.04196167]
[88.90925598 221.20089722]
[96.85115814 207.51745605]
[96.62783051 192.51911926]
[95.95804596 177.53408813]
[95.28826141 162.54904175]
[84.15733337 152.71858215]
[83.26461029 137.53115845]
[93.65117645 125.92266846]
[92.98139191 110.93762970]
[91.86574554 95.97917938]
[90.30522156 81.06057739]
[88.74469757 66.14196777]
[73.97129822 62.94757462]
[60.92624283 55.35355759]
[50.88074493 44.11450195]
[44.80920792 30.33947182]
[43.29471970 15.38257027]
[46.47308350 0.70984173]
[54.02072525 -12.24443150]
[65.18761444 -22.21793175]
[78.87176514 -28.24330711]
[77.31124115 -43.16191101]
[75.75071716 -58.08051682]
[74.19019318 -72.99912262]
[72.07556915 -87.84931946]
[69.40977478 -102.61053467]
[66.74398041 -117.37174988]
[64.07818604 -132.13296509]
[53.94651794 -140.11495972]
[52.03005981 -152.46449280]
[58.81723022 -162.47752380]
[56.37150574 -177.27679443]
[53.92577744 -192.07606506]
[41.36177444 -201.28387451]
[39.09228134 -216.32727051]
[47.94794083 -228.24838257]
[45.50221252 -243.04765320]
[43.05648422 -257.84692383]
[36.30031967 -244.45460510]
[23.80758286 -236.15209961]
[8.84384918 -235.10968018]
[-4.67939901 -241.59980774]
[-13.22721672 -253.92597961]
[-14.56522465 -268.86618042]
[-8.34367180 -282.51507568]
[3.81114435 -291.30487061]
[18.72198296 -292.93792725]
[32.49118805 -286.98739624]
[41.51918411 -275.00952148]
[41.29585648 -290.00784302]
[41.07252884 -305.00619507]
[40.84920120 -320.00451660]
[40.62587357 -335.00286865]
[40.40254593 -350.00119019]
[37.14571762 -358.53530884]
[40.28921509 -365.22412109]
[40.28921509 -380.22412109]
[26.94808769 -387.83395386]
[19.21311951 -401.10293579]
[19.16497612 -416.46176147]
[26.81661034 -429.77896118]
[40.10977173 -437.47232056]
[55.46866226 -437.47232056]
[68.76182556 -429.77896118]
[76.41345978 -416.46176147]
[76.36531067 -401.10293579]
[68.63034821 -387.83395386]
[55.28921509 -380.22412109]
[55.28921509 -365.22412109]
[55.40088272 -350.22451782]
[55.62421036 -335.22619629]
[55.84753799 -320.22784424]
[56.07086563 -305.22952271]
[56.29419327 -290.23117065]
[56.51752090 -275.23284912]
[57.85575485 -260.29266357]
[60.30148315 -245.49339294]
[62.74721146 -230.69410706]
[74.96743774 -222.25599670]
[77.65856934 -207.28227234]
[68.72504425 -194.52178955]
[71.17077637 -179.72251892]
[73.61650085 -164.92324829]
[85.46628571 -151.97915649]
[78.83940125 -134.79876709]
[81.50519562 -120.03755188]
[84.17098999 -105.27632904]
[86.83678436 -90.51511383]
[97.40362549 -101.16133118]
[112.33124542 -99.68958282]
[120.61557007 -87.18477631]
[116.14969635 -72.86500549]
[102.22570038 -67.28626251]
[89.10879517 -74.55964661]
[90.66931915 -59.64104080]
[92.22984314 -44.72243500]
[93.79036713 -29.80382919]
[108.42519379 -26.74068832]
[121.41428375 -19.29396439]
[131.47930908 -8.18202019]
[137.62525940 5.51536274]
[139.23873901 20.46190834]
[136.14924622 35.19520569]
[128.64701843 48.26979828]
[117.45585632 58.39897919]
[103.66329956 64.58144379]
[105.22382355 79.50005341]
[106.78434753 94.41865540]
[108.98084259 96.53169250]
[110.45703888 99.49063873]
[110.89813995 103.03025055]
[110.09175110 106.77271271]
[107.96643066 110.26784515]
[108.63621521 125.25288391]
[120.01702118 135.88844299]
[120.48281097 151.09494019]
[110.27330017 161.87925720]
[110.94308472 176.86428833]
[111.61286926 191.84933472]
[114.07849884 195.42350769]
[115.16886139 199.21502686]
[114.98449707 202.76486206]
[113.76471710 205.69381714]
[111.84949493 207.74078369]
[119.38047791 221.65461731]
[111.45454407 234.26528931]
[111.23121643 249.26362610]
[111.00788879 264.26196289]
[110.78456116 279.26031494]
[118.31553650 293.17413330]
[110.38960266 305.78479004]
[110.16627502 320.78314209]
[109.94294739 335.78149414]
[109.71961975 350.77981567]
[109.49629211 365.77816772]
[109.27296448 380.77648926]
[109.04963684 395.77484131]
[118.66905975 400.25006104]
[126.22434235 407.64389038]
[130.87252808 417.09579468]
[132.10687256 427.51776123]
[129.81202698 437.71939087]
[124.27421570 446.54403687]
[116.14592743 452.99987793]
[106.36899567 456.37127686]
[105.25334930 471.32971191]
[104.13769531 486.28817749]
[103.02204895 501.24664307]
[101.90640259 516.20507812]
[111.94273376 528.11767578]
[110.59822083 543.27178955]
[99.17953491 552.76647949]
[98.06388855 567.72491455]
[96.94824219 582.68341064]
[111.49027252 586.53619385]
[125.07664490 592.99566650]
[137.24461365 601.84185791]
[147.57974243 612.77343750]
[155.73002625 625.41809082]
[161.41786194 639.34515381]
[164.44952393 654.08032227]
[164.72175598 669.12158203]
[162.22529602 683.95678711]
[157.04515076 698.08050537]
[149.35777283 711.01184082]
[139.42498779 722.31024170]
[127.58509827 731.59100342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 197]
[20 196]
[21 195]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[40 172]
[41 171]
[42 170]
[43 169]
[45 167]
[46 162]
[47 161]
[48 160]
[51 157]
[52 156]
[53 151]
[54 150]
[55 149]
[64 140]
[65 139]
[66 138]
[67 137]
[68 131]
[69 130]
[70 129]
[71 128]
[74 126]
[75 125]
[76 124]
[79 121]
[80 120]
[81 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
