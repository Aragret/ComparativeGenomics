%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[96.09609985 533.91912842]
[102.82274628 520.11157227]
[115.56092834 511.53051758]
[114.44528198 496.57208252]
[113.32962799 481.61361694]
[112.21398163 466.65518188]
[111.09833527 451.69671631]
[100.51482391 462.32635498]
[85.51579285 462.49688721]
[74.69336700 452.11059570]
[74.24712372 437.11721802]
[84.43268585 426.10568237]
[99.41530609 425.38385010]
[110.61184692 435.36437988]
[110.83517456 420.36605835]
[111.05850220 405.36770630]
[103.51154327 392.52667236]
[111.45345306 378.84320068]
[103.90650177 366.00216675]
[111.84840393 352.31869507]
[109.99498749 350.21563721]
[108.86294556 347.25164795]
[108.78436279 343.69790649]
[109.98712921 339.94052124]
[112.55807495 336.44134521]
[113.67372894 321.48287964]
[114.78937531 306.52444458]
[115.90502167 291.56597900]
[109.13576508 278.29849243]
[117.87804413 265.11203003]
[117.20825958 250.12698364]
[114.76252747 235.32771301]
[112.31680298 220.52844238]
[109.87107849 205.72917175]
[107.42534637 190.92990112]
[104.97962189 176.13063049]
[102.53388977 161.33135986]
[100.08816528 146.53208923]
[97.64244080 131.73281860]
[95.19670868 116.93354034]
[82.67859650 103.12815094]
[89.57709503 85.81622314]
[86.69181824 71.09633636]
[83.80654907 56.37644196]
[69.37032318 51.32247925]
[59.46746063 39.79727936]
[56.68155670 24.96133995]
[61.66238403 10.81753063]
[72.97781372 1.13111353]
[70.09253693 -13.58877754]
[67.20726776 -28.30867004]
[64.32199097 -43.02856064]
[61.43672180 -57.74845123]
[58.22344589 -72.40023804]
[54.68377304 -86.97661591]
[51.14410019 -101.55299377]
[47.60442734 -116.12936401]
[44.06475830 -130.70573425]
[40.52508545 -145.28211975]
[36.98541260 -159.85848999]
[33.44573975 -174.43486023]
[22.67041397 -186.01947021]
[27.18584251 -200.21313477]
[23.64616966 -214.78950500]
[20.10649681 -229.36589050]
[16.56682396 -243.94226074]
[13.02715206 -258.51864624]
[9.48747921 -273.09500122]
[5.20784760 -278.13449097]
[4.25823259 -283.73764038]
[6.06629324 -288.15802002]
[2.96218300 -302.83334351]
[-0.14192711 -317.50863647]
[-3.24603724 -332.18392944]
[-7.63039303 -317.83898926]
[-16.60123444 -305.81716919]
[-29.10467339 -297.53079224]
[-43.67182159 -293.95333862]
[-58.59134293 -295.50509644]
[-72.11051178 -302.00372314]
[-82.64109802 -312.68579102]
[-88.94599152 -326.29638672]
[-90.28449249 -341.23654175]
[-86.49935913 -355.75109863]
[-78.03526306 -368.13494873]
[-65.88655853 -376.93316650]
[-51.48045731 -381.11221313]
[-36.50938416 -380.18112183]
[-22.73212051 -374.24923706]
[-11.76720619 -364.01348877]
[-4.90231895 -350.67483521]
[-4.45571327 -365.66818237]
[-4.00910711 -380.66152954]
[-3.56250119 -395.65487671]
[-3.22752500 -410.65115356]
[-3.00419736 -425.64947510]
[-2.78086972 -440.64782715]
[-2.55754185 -455.64614868]
[-2.33421421 -470.64450073]
[-2.11088657 -485.64282227]
[-15.58620071 -492.90054321]
[-24.13555336 -505.59570312]
[-25.79436302 -520.81109619]
[-20.18145180 -535.05023193]
[-8.58662128 -545.04113770]
[6.32571983 -548.48797607]
[21.12882423 -544.59869385]
[32.42104721 -534.26696777]
[37.60751724 -519.86700439]
[35.49642563 -504.70779419]
[26.57288170 -492.27279663]
[12.88745117 -485.41949463]
[12.66412354 -470.42117310]
[12.44079590 -455.42282104]
[12.21746731 -440.42449951]
[11.99413967 -425.42614746]
[11.77081203 -410.42782593]
[14.81437778 -403.69296265]
[11.43084908 -395.20828247]
[10.98424244 -380.21493530]
[10.53763676 -365.22158813]
[10.09103107 -350.22824097]
[11.42926502 -335.28805542]
[14.53337574 -320.61273193]
[17.63748550 -305.93743896]
[20.74159622 -291.26214600]
[24.06385422 -276.63467407]
[27.60352707 -262.05831909]
[31.14319992 -247.48193359]
[34.68287277 -232.90556335]
[38.22254562 -218.32917786]
[41.76221848 -203.75280762]
[52.28436279 -193.21080017]
[48.02211380 -177.97453308]
[51.56178665 -163.39816284]
[55.10145950 -148.82179260]
[58.64113235 -134.24540710]
[62.18080521 -119.66903687]
[65.72047424 -105.09265900]
[69.26014709 -90.51628876]
[72.79981995 -75.93991089]
[75.60453796 -73.80310822]
[77.51361847 -70.20166016]
[77.84994507 -65.57130432]
[76.15660858 -60.63372421]
[79.04188538 -45.91383362]
[81.92715454 -31.19394112]
[84.81243134 -16.47405052]
[87.69770050 -1.75415909]
[101.83261871 2.94368982]
[111.78442383 14.16052628]
[114.80552673 28.95036507]
[109.98644257 43.36124039]
[98.52643585 53.49116898]
[101.41171265 68.21105957]
[104.29698181 82.93095398]
[112.86180115 87.98373413]
[117.32140350 96.87184906]
[116.25239563 106.75839996]
[109.99597931 114.48781586]
[112.44171143 129.28707886]
[114.88743591 144.08634949]
[117.33316803 158.88562012]
[119.77889252 173.68489075]
[122.22461700 188.48416138]
[124.67034912 203.28344727]
[127.11607361 218.08271790]
[129.56179810 232.88198853]
[132.00752258 247.68125916]
[137.02804565 233.54638672]
[146.52674866 221.93713379]
[159.38771057 214.21733093]
[174.10008240 211.29389954]
[188.93542480 213.51028442]
[202.15092468 220.60609436]
[212.19403076 231.74772644]
[217.88490295 245.62626648]
[218.55494690 260.61129761]
[214.12548828 274.94238281]
[205.11686707 286.93591309]
[192.58741760 295.18289185]
[178.00907898 298.71450806]
[163.09451294 297.11584473]
[149.59585571 290.57470703]
[139.09893799 279.85955811]
[132.83650208 266.22766113]
[139.52595520 280.56509399]
[130.86347961 292.68164062]
[129.74783325 307.64007568]
[128.63217163 322.59854126]
[127.51653290 337.55700684]
[126.84674835 352.54202271]
[134.37771606 366.45587158]
[126.45178986 379.06652832]
[133.98277283 392.98037720]
[126.05683899 405.59103394]
[125.83351135 420.58938599]
[125.61018372 435.58770752]
[126.05678558 450.58105469]
[127.17243195 465.53952026]
[128.28808594 480.49798584]
[129.40373230 495.45642090]
[130.51937866 510.41488647]
[144.38955688 517.01141357]
[153.08999634 529.66833496]
[154.28034973 544.98101807]
[147.64039612 558.83044434]
[134.95625305 567.49114990]
[119.63990784 568.63348389]
[105.81135559 561.95019531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[14 198]
[15 197]
[16 196]
[18 194]
[20 192]
[25 191]
[26 190]
[27 189]
[28 188]
[30 186]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[42 156]
[43 155]
[44 154]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[71 126]
[72 125]
[73 124]
[74 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
