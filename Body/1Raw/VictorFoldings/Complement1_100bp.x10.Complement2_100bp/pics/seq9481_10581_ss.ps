%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[40.16456985 437.50024414]
[25.95725632 430.04827881]
[23.06693840 414.26773071]
[33.71081924 402.26409912]
[34.15742493 387.27075195]
[34.60403061 372.27737427]
[35.05063629 357.28402710]
[35.49724197 342.29067993]
[35.94384766 327.29733276]
[36.39045334 312.30398560]
[36.83705902 297.31063843]
[37.28366470 282.31729126]
[29.88723373 295.36691284]
[18.86277962 305.53851318]
[5.26108885 311.86260986]
[-9.62141514 313.73638916]
[-24.36622429 310.98129272]
[-37.56796265 303.85989380]
[-47.96831512 293.05099487]
[-54.57599640 279.58477783]
[-56.76119995 264.74481201]
[-54.31564331 249.94551086]
[-47.47242737 236.59745789]
[-36.88380051 225.97291565]
[-23.55900192 219.08453369]
[-8.76806927 216.58888245]
[6.07922125 218.72381592]
[19.56772041 225.28585815]
[30.41179085 235.64955139]
[37.57784653 248.82708740]
[40.38289642 263.56362915]
[36.72029495 249.12635803]
[48.16604614 238.20365906]
[52.56704330 223.86381531]
[44.99670792 213.43695068]
[44.81136703 200.35842896]
[52.30271149 189.39985657]
[64.92082214 184.68838501]
[69.53482819 170.41564941]
[66.08758545 155.92546082]
[77.69468689 145.17437744]
[82.30869293 130.90164185]
[86.92270660 116.62890625]
[91.53671265 102.35617828]
[90.38395691 99.53471375]
[90.23234558 96.23144531]
[91.26229095 92.81638336]
[93.51501465 89.72098541]
[96.87356567 87.38579559]
[102.32892609 73.41300201]
[91.10845947 83.36795807]
[77.56251526 89.81057739]
[62.75936890 92.23275757]
[47.86647034 90.44347382]
[34.05832672 84.58384705]
[22.42391205 75.11598969]
[13.88076210 62.78657150]
[9.10262585 48.56793976]
[8.46632576 33.58144379]
[12.02204514 19.00897408]
[19.48936272 5.99977922]
[30.27937698 -4.42018223]
[43.54114151 -11.42914772]
[58.22877884 -14.47436142]
[73.18395996 -13.31566620]
[87.22725677 -8.04443932]
[99.25115204 0.92360604]
[108.30740356 12.88121414]
[113.68178558 26.88535690]
[114.95045471 41.83160782]
[112.01221466 56.54452133]
[121.32709503 44.78726959]
[130.64198303 33.03001785]
[139.95686340 21.27276802]
[140.43696594 16.95727730]
[142.09826660 13.37892437]
[144.56398010 10.81852531]
[147.40484619 9.40568638]
[150.19294739 9.11477852]
[160.19111633 -2.06719565]
[170.18928528 -13.24917030]
[180.18746948 -24.43114471]
[190.18563843 -35.61312103]
[200.18380737 -46.79509354]
[210.18197632 -57.97706985]
[220.18014526 -69.15904236]
[223.56733704 -77.64225006]
[230.41139221 -80.43164825]
[240.57493591 -91.46353149]
[239.07781982 -110.34931183]
[251.64497375 -124.09630585]
[269.95013428 -124.28842163]
[273.15032959 -139.78259277]
[287.33547974 -144.32476807]
[297.16604614 -155.65435791]
[306.99664307 -166.98394775]
[316.82720947 -178.31353760]
[326.65780640 -189.64314270]
[316.33749390 -200.54534912]
[307.13552856 -212.40664673]
[299.14047241 -225.11279297]
[292.42935181 -238.54139709]
[287.06680298 -252.56317139]
[283.10449219 -267.04302979]
[280.58053589 -281.84158325]
[279.51925659 -296.81622314]
[279.93087769 -311.82281494]
[281.81143188 -326.71676636]
[285.14285278 -341.35470581]
[289.89297485 -355.59558105]
[296.01611328 -369.30230713]
[303.45327759 -382.34283447]
[312.13281250 -394.59158325]
[321.97119141 -405.93060303]
[332.87359619 -416.25070190]
[344.73507690 -425.45242310]
[357.44137573 -433.44723511]
[370.87014771 -440.15808105]
[384.89199829 -445.52032471]
[399.37194824 -449.48239136]
[414.17053223 -452.00604248]
[429.14523315 -453.06701660]
[444.15179443 -452.65509033]
[459.04571533 -450.77423096]
[473.68356323 -447.44253540]
[487.92437744 -442.69210815]
[501.63095093 -436.56869507]
[514.67132568 -429.13128662]
[526.91992188 -420.45147705]
[538.25872803 -410.61288452]
[548.57861328 -399.71026611]
[557.78015137 -387.84860229]
[565.77465820 -375.14215088]
[572.48522949 -361.71325684]
[577.84722900 -347.69128418]
[581.80895996 -333.21124268]
[584.33233643 -318.41262817]
[585.39300537 -303.43792725]
[584.98077393 -288.43136597]
[583.09960938 -273.53747559]
[579.76763916 -258.89968872]
[575.01690674 -244.65898132]
[568.89324951 -230.95251465]
[561.45556641 -217.91227722]
[552.77551270 -205.66386414]
[542.93670654 -194.32524109]
[532.03387451 -184.00558472]
[520.17205811 -174.80432129]
[507.46542358 -166.81004333]
[494.03640747 -160.09973145]
[480.01431274 -154.73802185]
[465.53417969 -150.77656555]
[450.73550415 -148.25349426]
[435.76080322 -147.19311523]
[420.75424194 -147.60565186]
[405.86038208 -149.48710632]
[391.22265625 -152.81938171]
[376.98205566 -157.57037354]
[363.27569580 -163.69432068]
[350.23562622 -171.13226318]
[337.98739624 -179.81256104]
[328.15679932 -168.48295593]
[318.32623291 -157.15336609]
[308.49563599 -145.82377625]
[298.66506958 -134.49418640]
[296.16799927 -119.81038666]
[281.27972412 -114.45783997]
[284.53341675 -103.52259064]
[282.07888794 -92.25799561]
[274.41293335 -83.48719025]
[263.35287476 -79.46523285]
[251.60681152 -81.29998016]
[241.44326782 -70.26810455]
[231.36212158 -59.16086960]
[221.36395264 -47.97889709]
[211.36578369 -36.79692078]
[201.36761475 -25.61494827]
[191.36943054 -14.43297291]
[181.37126160 -3.25099826]
[171.37309265 7.93097639]
[161.37492371 19.11295128]
[151.71411133 30.58765030]
[142.39923096 42.34490204]
[133.08435059 54.10215378]
[123.76946259 65.85940552]
[116.30171967 78.86835480]
[110.84636688 92.84115601]
[105.80944824 106.97018433]
[101.19544220 121.24291992]
[96.58142853 135.51565552]
[91.96742249 149.78839111]
[95.08464050 165.29946899]
[83.80756378 175.02966309]
[79.19355011 189.30239868]
[87.44245911 204.72882080]
[82.08773041 221.02734375]
[66.90689087 228.26481628]
[62.50589371 242.60466003]
[65.85370636 258.06759644]
[54.72274399 267.96463013]
[52.27701569 282.76388550]
[51.83041000 297.75723267]
[51.38380432 312.75057983]
[50.93719864 327.74395752]
[50.49059296 342.73730469]
[50.04398727 357.73065186]
[49.59738159 372.72399902]
[49.15077591 387.71734619]
[48.70417023 402.71069336]
[58.61470795 415.32659912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[31 200]
[33 198]
[34 197]
[38 194]
[39 193]
[41 191]
[42 190]
[43 189]
[44 188]
[49 187]
[50 186]
[71 185]
[72 184]
[73 183]
[74 182]
[79 181]
[80 180]
[81 179]
[82 178]
[83 177]
[84 176]
[85 175]
[86 174]
[88 173]
[89 172]
[92 167]
[94 165]
[95 164]
[96 163]
[97 162]
[98 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
