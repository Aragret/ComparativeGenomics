%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[297.87341309 89.57392883]
[298.09521484 104.56865692]
[297.18237305 119.53722382]
[295.14007568 134.39389038]
[291.98004150 149.05354309]
[287.72039795 163.43222046]
[282.38549805 177.44757080]
[276.00588989 191.01931763]
[268.61816406 204.06970215]
[260.26461792 216.52400208]
[250.99310303 228.31086731]
[240.85670471 239.36277771]
[229.91349792 249.61642456]
[218.22616577 259.01309204]
[205.86163330 267.49896240]
[192.89076233 275.02542114]
[179.38781738 281.54934692]
[165.43014526 287.03338623]
[151.09768677 291.44613647]
[136.47256470 294.76226807]
[121.63852692 296.96286011]
[106.68054199 298.03524780]
[91.68429565 297.97332764]
[76.73567963 296.77743530]
[61.92031860 294.45443726]
[47.32307434 291.01763916]
[33.02755737 286.48669434]
[19.11564827 280.88757324]
[5.66703558 274.25234985]
[-7.24124956 266.61904907]
[-19.53527069 258.03137207]
[-31.14460754 248.53849792]
[-42.00276566 238.19480896]
[-52.04754639 227.05957031]
[-61.22142029 215.19654846]
[-69.47183990 202.67369080]
[-76.75154114 189.56274414]
[-83.01883698 175.93878174]
[-88.23781586 161.87985229]
[-92.37860107 147.46647644]
[-95.41745758 132.78123474]
[-97.33699036 117.90821075]
[-98.12619781 102.93261719]
[-97.78057098 87.94023132]
[-96.30207825 73.01691437]
[-93.69918823 58.24815369]
[-89.98681641 43.71854401]
[-85.18621826 29.51130867]
[-79.32490540 15.70782375]
[-72.43643188 2.38715315]
[-64.56027222 -10.37440300]
[-55.74152756 -22.50374794]
[-46.03071594 -33.93140793]
[-35.48345947 -44.59192276]
[-24.16016769 -54.42423630]
[-12.12570381 -63.37202454]
[0.55100292 -71.38404083]
[13.79734135 -78.41439056]
[27.53743744 -84.42279816]
[41.69258881 -89.37486267]
[56.18172073 -93.24220276]
[70.92183685 -96.00268555]
[85.82850647 -97.64048004]
[100.81635284 -98.14622498]
[115.79952240 -97.51700592]
[130.69219971 -95.75643158]
[145.40905762 -92.87459564]
[159.86582947 -88.88799286]
[173.97970581 -83.81946564]
[187.66983032 -77.69804382]
[200.85778809 -70.55878448]
[213.46804810 -62.44258881]
[225.42837524 -53.39594269]
[236.67025757 -43.47066498]
[247.12931824 -32.72360229]
[256.74563599 -21.21631622]
[265.46414185 -9.01471806]
[273.23489380 3.81130290]
[286.61517334 -2.96868849]
[299.99542236 -9.74868011]
[313.37570190 -16.52867126]
[326.75598145 -23.30866241]
[340.13626099 -30.08865356]
[353.51654053 -36.86864471]
[366.89678955 -43.64863586]
[380.27706909 -50.42862701]
[393.65734863 -57.20862198]
[387.63656616 -70.95159149]
[382.39584351 -85.01052856]
[377.95162964 -99.34120178]
[374.31796265 -113.89852142]
[371.50625610 -128.63667297]
[369.52532959 -143.50930786]
[368.38143921 -158.46960449]
[368.07818604 -173.47050476]
[368.61651611 -188.46481323]
[369.99475098 -203.40534973]
[372.20852661 -218.24510193]
[375.25091553 -232.93737793]
[379.11230469 -247.43594360]
[383.78054810 -261.69522095]
[389.24099731 -275.67028809]
[395.47644043 -289.31719971]
[402.46725464 -302.59301758]
[410.19146729 -315.45596313]
[418.62475586 -327.86560059]
[427.74057007 -339.78283691]
[437.51028442 -351.17019653]
[447.90310669 -361.99185181]
[458.88635254 -372.21374512]
[470.42547607 -381.80371094]
[482.48416138 -390.73159790]
[495.02447510 -398.96932983]
[508.00695801 -406.49090576]
[521.39074707 -413.27276611]
[535.13372803 -419.29348755]
[549.19268799 -424.53414917]
[563.52337646 -428.97830200]
[578.08068848 -432.61190796]
[592.81884766 -435.42358398]
[607.69152832 -437.40444946]
[622.65179443 -438.54827881]
[637.65270996 -438.85147095]
[652.64703369 -438.31307983]
[667.58752441 -436.93481445]
[682.42730713 -434.72097778]
[697.11956787 -431.67855835]
[711.61810303 -427.81710815]
[725.87738037 -423.14880371]
[739.85241699 -417.68829346]
[753.49932861 -411.45281982]
[766.77508545 -404.46194458]
[779.63806152 -396.73767090]
[792.04760742 -388.30435181]
[803.96484375 -379.18847656]
[815.35217285 -369.41873169]
[826.17376709 -359.02584839]
[836.39562988 -348.04257202]
[845.98553467 -336.50341797]
[854.91339111 -324.44470215]
[863.15106201 -311.90435791]
[870.67260742 -298.92184448]
[877.45440674 -285.53805542]
[883.47509766 -271.79501343]
[888.71569824 -257.73605347]
[893.15979004 -243.40534973]
[896.79333496 -228.84800720]
[899.60498047 -214.10981750]
[901.58575439 -199.23718262]
[902.72955322 -184.27687073]
[903.03271484 -169.27597046]
[902.49426270 -154.28166199]
[901.11590576 -139.34114075]
[898.90203857 -124.50140381]
[895.85955811 -109.80915070]
[891.99804688 -95.31060791]
[887.32965088 -81.05138397]
[881.86914062 -67.07635498]
[875.63360596 -53.42948151]
[868.64270020 -40.15370941]
[860.91839600 -27.29080963]
[852.48498535 -14.88125134]
[843.36907959 -2.96408010]
[833.59930420 8.42320824]
[823.20635986 19.24478531]
[812.22302246 29.46660042]
[800.68383789 39.05649185]
[788.62512207 47.98429108]
[776.08471680 56.22190094]
[763.10217285 63.74340820]
[749.71838379 70.52513885]
[735.97534180 76.54576874]
[721.91632080 81.78634644]
[707.58563232 86.23037720]
[693.02825928 89.86389160]
[678.29003906 92.67544556]
[663.41741943 94.65619659]
[648.45709229 95.79991913]
[633.45617676 96.10300446]
[618.46191406 95.56450653]
[603.52136230 94.18611145]
[588.68164062 91.97216797]
[573.98937988 88.92963409]
[559.49084473 85.06807709]
[545.23168945 80.39965820]
[531.25665283 74.93906403]
[517.60980225 68.70347595]
[504.33407593 61.71250534]
[491.47119141 53.98815536]
[479.06167603 45.55472946]
[467.14453125 36.43876266]
[455.75726318 26.66893387]
[444.93572998 16.27598572]
[434.71395874 5.29261923]
[425.12411499 -6.24661016]
[416.19635010 -18.30539513]
[407.95880127 -30.84579277]
[400.43734741 -43.82834625]
[387.05706787 -37.04835510]
[373.67678833 -30.26836395]
[360.29650879 -23.48837280]
[346.91625977 -16.70838165]
[333.53598022 -9.92838955]
[320.15570068 -3.14839816]
[306.77542114 3.63159323]
[293.39514160 10.41158485]
[280.01489258 17.19157600]
[285.76199341 31.04299355]
[290.44509888 45.28939056]
[294.03738403 59.84915924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 207]
[79 206]
[80 205]
[81 204]
[82 203]
[83 202]
[84 201]
[85 200]
[86 199]
[87 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
