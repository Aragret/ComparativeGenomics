%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[28.86053848 680.51336670]
[29.47331238 695.64294434]
[25.13793564 710.15100098]
[16.32468224 722.46380615]
[3.98954487 731.24572754]
[-10.52945232 735.54431152]
[-25.65739632 734.89312744]
[-39.75332260 729.36291504]
[-51.28820801 719.55346680]
[-59.01083755 706.52886963]
[-62.08351517 691.70196533]
[-60.17294312 676.68103027]
[-53.48636246 663.09539795]
[-42.74908447 652.41882324]
[-29.12581062 645.80938721]
[-14.09428883 643.98394775]
[-10.99017906 629.30865479]
[-7.88606882 614.63336182]
[-4.78195906 599.95806885]
[-1.67784870 585.28271484]
[1.42626143 570.60742188]
[4.53037167 555.93212891]
[7.63448191 541.25683594]
[10.73859215 526.58154297]
[-2.61925769 519.83489990]
[-13.78408337 509.85272217]
[-21.99081421 497.31103516]
[-26.67499924 483.06143188]
[-27.51162720 468.07342529]
[-24.43766975 453.36831665]
[-17.65679359 439.94979858]
[-7.62586308 428.73519897]
[4.97582102 420.49301147]
[19.29253387 415.79013062]
[34.35022736 414.95281982]
[37.45433426 400.27749634]
[40.55844498 385.60220337]
[43.66255569 370.92691040]
[45.88767242 356.09286499]
[47.22590637 341.15267944]
[48.56414032 326.21249390]
[49.90237427 311.27230835]
[39.57433701 322.15032959]
[25.03041649 325.82107544]
[10.77720451 321.14709473]
[1.23121548 309.57672119]
[-0.64962292 294.69509888]
[5.71748781 281.11349487]
[18.35962868 273.04031372]
[33.35949707 272.97711182]
[46.06921768 280.94348145]
[52.55058670 294.47119141]
[47.82433701 280.34634399]
[58.42599106 268.60260010]
[61.74824905 253.97514343]
[65.07051086 239.34767151]
[68.39276886 224.72021484]
[71.71502686 210.09275818]
[75.03729248 195.46530151]
[78.03206635 180.76728821]
[80.69786072 166.00607300]
[83.36365509 151.24485779]
[86.02944946 136.48364258]
[88.69524384 121.72241974]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[100.26191711 47.62257004]
[101.15473175 32.64916229]
[91.11597443 17.21203804]
[100.03058624 2.09593534]
[99.36080170 -12.88910294]
[98.69101715 -27.87414169]
[90.34522247 -41.31505966]
[97.50650787 -54.37512589]
[96.83672333 -69.36016846]
[85.58833313 -74.81374359]
[77.77133942 -84.47620392]
[74.82148743 -96.47528076]
[77.23897552 -108.51923370]
[84.50487518 -118.33451080]
[95.19097900 -124.09493256]
[94.96765137 -139.09327698]
[94.74432373 -154.09161377]
[94.52099609 -169.08995056]
[94.29766846 -184.08828735]
[86.35575867 -197.77172852]
[93.90271759 -210.61279297]
[81.12920380 -222.56504822]
[80.95545197 -239.71978760]
[93.00059509 -251.45661926]
[84.85584259 -265.02029419]
[92.21077728 -277.97229004]
[91.76416779 -292.96563721]
[77.23870850 -297.19247437]
[64.73147583 -305.70272827]
[55.46781158 -317.66265869]
[50.35526657 -331.90051270]
[49.89471817 -347.02148438]
[54.13128662 -361.54409790]
[62.64991760 -374.04562378]
[74.61604309 -383.30126953]
[88.85733795 -388.40426636]
[103.97859192 -388.85470581]
[118.49837494 -384.60839844]
[130.99418640 -376.08139038]
[140.24182129 -364.10906982]
[145.33528137 -349.86434937]
[145.77555847 -334.74279785]
[141.51953125 -320.22586060]
[132.98416138 -307.73577881]
[121.00564575 -298.49615479]
[106.75752258 -293.41226196]
[107.20412445 -278.41891479]
[115.31693268 -265.92764282]
[107.99394989 -251.90321350]
[118.51644135 -244.46636963]
[122.89971924 -232.14286804]
[119.33242035 -219.35675049]
[108.90105438 -210.83612061]
[116.82698059 -198.22544861]
[109.29600525 -184.31161499]
[109.51933289 -169.31327820]
[109.74266052 -154.31494141]
[109.96598816 -139.31660461]
[110.18931580 -124.31826019]
[125.08647919 -114.83426666]
[131.36364746 -98.15950012]
[126.33076477 -80.90407562]
[111.82176208 -70.02995300]
[112.49154663 -55.04491425]
[120.78942871 -42.67582321]
[113.67605591 -28.54392815]
[114.34584045 -13.55888844]
[115.01562500 1.42615032]
[123.72798920 9.81789589]
[124.40863037 22.29669762]
[116.14807892 32.20255661]
[123.89820862 19.35983658]
[136.40550232 11.07927895]
[151.25500488 8.95973396]
[165.57949829 13.41045094]
[176.61314392 23.57206535]
[182.22554016 37.48253250]
[181.33300781 52.45595551]
[174.10787964 65.60120392]
[161.94520569 74.38012695]
[147.19343567 77.09766388]
[132.70088196 73.22910309]
[121.26582336 63.52138519]
[115.09596252 49.84768677]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[107.73865509 118.36454773]
[103.45645905 124.38822174]
[100.79066467 139.14942932]
[98.12487030 153.91065979]
[95.45907593 168.67187500]
[92.79328156 183.43309021]
[94.55993652 188.34490967]
[94.29258728 192.97975159]
[92.43733978 196.60923767]
[89.66474915 198.78755188]
[86.34249115 213.41500854]
[83.02023315 228.04248047]
[79.69796753 242.66993713]
[76.37570953 257.29739380]
[73.05345154 271.92486572]
[77.54206848 287.09597778]
[67.17804718 297.79345703]
[64.84255981 312.61053467]
[63.50432587 327.55072021]
[62.16609192 342.49090576]
[60.82785797 357.43109131]
[71.67083740 347.06625366]
[86.51938629 344.94006348]
[99.83535004 351.84548950]
[106.65220642 365.20700073]
[104.42744446 380.04110718]
[93.99083710 390.81503296]
[79.23498535 393.51034546]
[65.66345215 387.12179565]
[58.33786011 374.03100586]
[55.23374939 388.70629883]
[52.12963867 403.38162231]
[49.02552795 418.05691528]
[62.45449829 424.91970825]
[73.64069366 435.01696777]
[81.82561493 447.65591431]
[86.45636749 461.97174072]
[87.22300720 476.98672485]
[84.07926178 491.67706299]
[77.24530792 505.04260254]
[67.19234467 516.17498779]
[54.61009979 524.31939697]
[40.35952759 528.92572021]
[25.41389465 529.68566895]
[22.30978394 544.36096191]
[19.20567322 559.03625488]
[16.10156441 573.71154785]
[12.99745369 588.38684082]
[9.89334393 603.06213379]
[6.78923321 617.73748779]
[3.68512321 632.41278076]
[0.58101320 647.08807373]
[13.58595276 654.84375000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[35 190]
[36 189]
[37 188]
[38 187]
[39 178]
[40 177]
[41 176]
[42 175]
[52 174]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[65 157]
[66 155]
[67 154]
[68 153]
[69 152]
[70 139]
[72 136]
[73 135]
[74 134]
[76 132]
[77 131]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[89 121]
[92 117]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
