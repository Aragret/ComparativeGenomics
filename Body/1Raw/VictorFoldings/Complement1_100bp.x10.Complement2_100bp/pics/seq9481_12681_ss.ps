%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[26.47720146 289.18518066]
[30.91201782 303.53482056]
[33.54977417 318.32067871]
[34.35047913 333.31863403]
[33.30199432 348.30130005]
[30.42021942 363.04156494]
[25.74883842 377.31591797]
[19.35866737 390.90802002]
[11.34657955 403.61181641]
[1.83403802 415.23468018]
[-9.03475094 425.60046387]
[-21.09501839 434.55197144]
[-34.16393280 441.95352173]
[-48.04337692 447.69293213]
[-62.52293777 451.68313599]
[-77.38311005 453.86370850]
[-92.39862061 454.20156860]
[-107.34182739 452.69158936]
[-121.98620605 449.35665894]
[-136.10975647 444.24734497]
[-149.49835205 437.44110107]
[-161.94903564 429.04110718]
[-173.27305603 419.17468262]
[-183.29875183 407.99142456]
[-191.87411499 395.66085815]
[-198.86917114 382.36993408]
[-204.17785645 368.32012939]
[-207.71971130 353.72439575]
[-209.44102478 338.80404663]
[-209.31570435 323.78527832]
[-207.34567261 308.89572144]
[-203.56076050 294.36114502]
[-198.01835632 280.40185547]
[-190.80250549 267.22952271]
[-182.02256775 255.04376221]
[-171.81166077 244.02935791]
[-160.32458496 234.35327148]
[-147.73547363 226.16220093]
[-134.23515320 219.58030701]
[-120.02832794 214.70738220]
[-105.33033752 211.61727905]
[-90.36400604 210.35685730]
[-75.35623169 210.94522095]
[-60.53451157 213.37345886]
[-46.12355042 217.60475159]
[-32.34181213 223.57495117]
[-19.39822197 231.19354248]
[-10.25941849 219.29891968]
[-1.12061632 207.40428162]
[8.01818562 195.50964355]
[17.15698814 183.61502075]
[18.77563286 168.80862427]
[33.31892776 162.57940674]
[42.45772934 150.68476868]
[51.59653091 138.79013062]
[60.73533249 126.89550781]
[46.72206879 132.24604797]
[31.73985863 131.51568604]
[18.31347466 124.82746887]
[8.70549583 113.30849457]
[4.53503513 98.89990997]
[6.50488901 84.02981567]
[14.28310204 71.20408630]
[26.55890846 62.58407593]
[41.26362228 59.62241364]
[55.91923523 62.81818771]
[68.05602264 71.63285065]
[75.62872314 84.58098602]
[77.36120605 99.48060608]
[72.96070862 113.82230377]
[84.21680450 103.90765381]
[89.16215515 87.87893677]
[105.64212799 84.75055695]
[116.74936676 74.66941833]
[127.85659790 64.58827972]
[133.06884766 46.92719650]
[150.35168457 43.88237000]
[155.14645386 28.80521202]
[169.72715759 25.76343155]
[180.68307495 15.51803970]
[191.63897705 5.27264786]
[202.59489441 -4.97274351]
[213.55079651 -15.21813488]
[204.00312805 -26.79347610]
[195.19357300 -38.94000244]
[187.15618896 -51.61072159]
[179.92210388 -64.75661469]
[173.51928711 -78.32681274]
[167.97250366 -92.26882935]
[163.30323792 -106.52871704]
[159.52952576 -121.05130768]
[156.66598511 -135.78042603]
[154.72369385 -150.65905762]
[153.71015930 -165.62966919]
[153.62930298 -180.63433838]
[154.48144531 -195.61500549]
[156.26329041 -210.51371765]
[158.96792603 -225.27282715]
[162.58491516 -239.83525085]
[167.10023499 -254.14462280]
[172.49644470 -268.14559937]
[178.75265503 -281.78402710]
[185.84465027 -295.00711060]
[193.74501038 -307.76370239]
[202.42317200 -320.00445557]
[211.84553528 -331.68203735]
[221.97567749 -342.75122070]
[232.77438354 -353.16918945]
[244.19989014 -362.89566040]
[256.20800781 -371.89300537]
[268.75222778 -380.12640381]
[281.78405762 -387.56399536]
[295.25308228 -394.17700195]
[309.10717773 -399.93988037]
[323.29275513 -404.83029175]
[337.75491333 -408.82931519]
[352.43771362 -411.92147827]
[367.28436279 -414.09487915]
[382.23742676 -415.34103394]
[397.23901367 -415.65515137]
[412.23110962 -415.03601074]
[427.15573120 -413.48599243]
[441.95510864 -411.01113892]
[456.57199097 -407.62100220]
[470.94985962 -403.32867432]
[485.03302002 -398.15078735]
[498.76705933 -392.10739136]
[512.09881592 -385.22180176]
[524.97668457 -377.52072144]
[537.35089111 -369.03393555]
[549.17352295 -359.79425049]
[560.39886475 -349.83743286]
[570.98345947 -339.20199585]
[580.88641357 -327.92907715]
[590.06933594 -316.06231689]
[598.49676514 -303.64758301]
[606.13604736 -290.73297119]
[612.95770264 -277.36837769]
[618.93524170 -263.60556030]
[624.04559326 -249.49772644]
[628.26898193 -235.09948730]
[631.58905029 -220.46652222]
[633.99298096 -205.65545654]
[635.47143555 -190.72358704]
[636.01873779 -175.72869873]
[635.63275146 -160.72877502]
[634.31500244 -145.78187561]
[632.07049561 -130.94580078]
[628.90802002 -116.27797699]
[624.83978271 -101.83512878]
[619.88146973 -87.67314911]
[614.05230713 -73.84682465]
[607.37481689 -60.40964127]
[599.87487793 -47.41358566]
[591.58148193 -34.90894318]
[582.52673340 -22.94408798]
[572.74560547 -11.56531048]
[562.27600098 -0.81663388]
[551.15844727 9.26035690]
[539.43585205 18.62667656]
[527.15368652 27.24608612]
[514.35937500 35.08524323]
[501.10244751 42.11381149]
[487.43423462 48.30460739]
[473.40756226 53.63367462]
[459.07669067 58.08039856]
[444.49713135 61.62757492]
[429.72521973 64.26147461]
[414.81814575 65.97191620]
[399.83358765 66.75228119]
[384.82946777 66.59954834]
[369.86389160 65.51430511]
[354.99472046 63.50075150]
[340.27947998 60.56668091]
[325.77514648 56.72344208]
[311.53778076 51.98590469]
[297.62249756 46.37239838]
[284.08312988 39.90464020]
[270.97204590 32.60765457]
[258.33999634 24.50966835]
[246.23580933 15.64201450]
[234.70634460 6.03899860]
[223.79618835 -4.26222610]
[212.84028625 5.98316574]
[201.88436890 16.22855759]
[190.92846680 26.47394943]
[179.97254944 36.71934128]
[175.96141052 51.06367874]
[160.59706116 54.83827591]
[159.87864685 66.91347504]
[150.83496094 75.53874207]
[137.93772888 75.69551849]
[126.83050537 85.77665710]
[115.72326660 95.85779572]
[114.45998383 107.43559265]
[105.77791595 115.19850922]
[94.13145447 115.16374969]
[82.87535858 125.07839966]
[72.62996674 136.03430176]
[63.49116516 147.92893982]
[54.35235977 159.82357788]
[45.21355820 171.71820068]
[42.94124603 187.37538147]
[29.05162048 192.75381470]
[19.91281891 204.64845276]
[10.77401638 216.54309082]
[1.63521421 228.43771362]
[-7.50358820 240.33235168]
[3.19239020 250.87634277]
[12.51152897 262.65484619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[53 202]
[54 201]
[55 200]
[56 199]
[70 198]
[71 197]
[73 194]
[74 193]
[75 192]
[77 189]
[79 187]
[80 186]
[81 185]
[82 184]
[83 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
