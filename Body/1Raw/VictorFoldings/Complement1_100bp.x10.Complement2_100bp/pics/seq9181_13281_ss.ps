%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[96.47806549 636.39721680]
[85.56246948 646.72918701]
[73.19755554 655.27374268]
[59.67319107 661.83056641]
[45.30639648 666.24597168]
[30.43395424 668.41638184]
[15.40449333 668.29101562]
[0.57032543 665.87280273]
[-13.72081375 661.21838379]
[-27.13392067 654.43682861]
[-39.35457230 645.68719482]
[-50.09629822 635.17456055]
[-59.10729599 623.14532471]
[-66.17633820 609.88153076]
[-71.13771057 595.69396973]
[-73.87512207 580.91540527]
[-74.32439423 565.89215088]
[-72.47499847 550.97637939]
[-68.37028503 536.51776123]
[-62.10648346 522.85516357]
[-53.83041382 510.30899048]
[-43.73608780 499.17324829]
[-32.06012344 489.70898438]
[-19.07622910 482.13806152]
[-5.08876276 476.63793945]
[9.57438946 473.33758545]
[24.56950188 472.31433105]
[39.54506683 473.59216309]
[43.08473969 459.01577759]
[46.62441254 444.43942261]
[50.16408539 429.86303711]
[53.70375443 415.28665161]
[57.24342728 400.71029663]
[55.56778336 396.23800659]
[56.68380356 390.66561890]
[61.11157990 385.75579834]
[65.08367920 371.29129028]
[60.99285126 356.96945190]
[72.10831451 345.71081543]
[76.08041382 331.24630737]
[80.05250549 316.78176880]
[84.02460480 302.31726074]
[87.99669647 287.85272217]
[89.55722046 272.93411255]
[88.66440582 257.96072388]
[80.18328094 245.71653748]
[87.08546448 231.48030090]
[86.19264984 216.50689697]
[75.45205688 226.97779846]
[60.45214844 226.92497253]
[49.78555679 216.37870789]
[49.56258774 201.38035583]
[59.91096878 190.52168274]
[74.90267944 190.02299500]
[85.94937897 200.16914368]
[86.39598083 185.17578125]
[86.84259033 170.18243408]
[87.28919220 155.18908691]
[74.74795532 163.41813660]
[60.44802856 158.88911438]
[54.93078613 144.94064331]
[62.26333618 131.85501099]
[77.04039001 129.27845764]
[88.36820221 139.10882568]
[89.92872620 124.19022369]
[91.48924255 109.27161407]
[92.71622467 94.32188416]
[85.81404114 80.08564758]
[94.29516602 67.84146881]
[95.18798065 52.86806488]
[88.28579712 38.63182831]
[96.76692200 26.38765335]
[97.65973663 11.41424656]
[90.75755310 -2.82199097]
[99.23867798 -15.06616592]
[92.33649445 -29.30240250]
[100.81761932 -41.54657745]
[101.71043396 -56.51998520]
[99.37261963 -61.18706894]
[99.08731079 -65.82084656]
[100.49811554 -69.64506531]
[102.99221039 -72.13742828]
[104.55273438 -87.05603027]
[106.11325836 -101.97463226]
[107.34023285 -116.92436981]
[108.23304749 -131.89776611]
[109.12586212 -146.87118530]
[94.47207642 -153.12467957]
[82.86506653 -163.99954224]
[75.69564819 -178.16752625]
[73.81424713 -193.90733337]
[77.43008423 -209.31370544]
[86.08809662 -222.52812195]
[98.72609711 -231.96295166]
[113.80506897 -236.49217224]
[114.47485352 -251.47720337]
[115.14463806 -266.46224976]
[100.90829468 -271.54339600]
[88.80312347 -280.59634399]
[79.90550232 -292.81616211]
[75.00660706 -307.11624146]
[74.54204559 -322.22503662]
[78.55311584 -336.79907227]
[86.68316650 -349.54244995]
[98.20927429 -359.32205200]
[112.10655212 -365.26821899]
[127.13925171 -366.85229492]
[141.97068787 -363.93338013]
[155.28204346 -356.77105713]
[165.88970947 -346.00216675]
[172.85043335 -332.58428955]
[175.54527283 -317.71051025]
[173.73461914 -302.70339966]
[167.57946777 -288.89739990]
[157.62713623 -277.52014160]
[144.76257324 -269.58325195]
[130.12968445 -265.79244995]
[129.45989990 -250.80741882]
[128.79010010 -235.82238770]
[142.02229309 -230.79022217]
[153.07023621 -221.90403748]
[160.84545898 -210.02229309]
[164.57673645 -196.29942322]
[163.88644409 -182.07360840]
[158.82885742 -168.73635864]
[149.88606262 -157.59631348]
[137.92205811 -149.75094604]
[124.09927368 -145.97836304]
[123.20645142 -131.00495911]
[122.31363678 -116.03155518]
[124.36798096 -113.16588593]
[125.13637543 -109.16281128]
[124.09935760 -104.63756561]
[121.03186035 -100.41410828]
[119.47133636 -85.49550629]
[117.91082001 -70.57690430]
[116.68383789 -55.62716675]
[115.79102325 -40.65376282]
[122.75706482 -27.48852348]
[114.21208191 -14.17335033]
[121.17812347 -1.00811052]
[112.63314056 12.30706215]
[111.74032593 27.28046799]
[118.70636749 40.44570923]
[110.16138458 53.76087952]
[109.26856995 68.73428345]
[116.23461151 81.89952850]
[107.68962860 95.21469879]
[109.81480408 98.43276978]
[110.51118469 102.57196808]
[109.39919281 106.97315979]
[106.40785217 110.83213806]
[104.84732819 125.75074768]
[103.28680420 140.66934204]
[102.28254700 155.63569641]
[101.83593750 170.62904358]
[101.38933563 185.62239075]
[100.94272614 200.61573792]
[101.16605377 215.61407471]
[102.05886841 230.58749390]
[110.60385132 243.90266418]
[103.63780975 257.06790161]
[104.53062439 272.04129028]
[110.44026947 258.25448608]
[119.67501068 246.43418884]
[131.62234497 237.36439514]
[145.48983765 231.64666748]
[160.35772705 229.66024780]
[175.23988342 231.53689575]
[189.14920044 237.15213013]
[201.16313171 246.13351440]
[210.48484802 257.88534546]
[216.49606323 271.62817383]
[218.79809570 286.45046997]
[217.23822021 301.36914062]
[211.91993713 315.39468384]
[203.19596863 327.59683228]
[191.64494324 337.16625977]
[178.03300476 343.46826172]
[163.26298523 346.08483887]
[148.31451416 344.84246826]
[134.17909241 339.82351685]
[121.79425812 331.36090088]
[111.98145294 320.01589966]
[105.39153290 306.54101562]
[102.46121979 291.82482910]
[98.48912811 306.28933716]
[94.51702881 320.75387573]
[90.54493713 335.21838379]
[86.57283783 349.68292236]
[90.37955475 365.03933716]
[79.54820251 375.26336670]
[75.57610321 389.72790527]
[71.81980133 404.24996948]
[68.28012848 418.82632446]
[64.74045563 433.40270996]
[61.20078659 447.97909546]
[57.66111374 462.55545044]
[54.12144089 477.13183594]
[68.01521301 482.86450195]
[80.87100220 490.65097046]
[92.38745880 500.30868530]
[102.29462433 511.61129761]
[110.36025238 524.29382324]
[116.39527130 538.05895996]
[120.25821686 552.58404541]
[121.85853577 567.52856445]
[121.15871429 582.54223633]
[118.17515564 597.27313232]
[112.97779846 611.37591553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[33 194]
[36 193]
[37 192]
[39 190]
[40 189]
[41 188]
[42 187]
[43 186]
[44 163]
[45 162]
[47 160]
[48 159]
[55 158]
[56 157]
[57 156]
[58 155]
[64 154]
[65 153]
[66 152]
[67 148]
[69 146]
[70 145]
[72 143]
[73 142]
[75 140]
[77 138]
[78 137]
[82 136]
[83 135]
[84 134]
[85 130]
[86 129]
[87 128]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
