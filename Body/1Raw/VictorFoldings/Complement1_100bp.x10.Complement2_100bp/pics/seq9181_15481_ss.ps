%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[126.82830811 951.02386475]
[111.91159058 949.42535400]
[97.07307434 947.21582031]
[82.33778381 944.39892578]
[67.73056030 940.97949219]
[53.27604294 936.96319580]
[38.99860382 932.35687256]
[24.92230988 927.16827393]
[11.07090569 921.40612793]
[-2.53225517 915.08013916]
[-15.86423492 908.20104980]
[-28.90255356 900.78039551]
[-41.62522507 892.83074951]
[-54.01079178 884.36541748]
[-66.03837585 875.39880371]
[-77.68769073 865.94592285]
[-88.93909454 856.02270508]
[-99.77362061 845.64599609]
[-110.17298889 834.83319092]
[-120.11966705 823.60253906]
[-129.59689331 811.97302246]
[-138.58866882 799.96417236]
[-147.07984924 787.59637451]
[-155.05610657 774.89031982]
[-162.50398254 761.86755371]
[-169.41093445 748.54998779]
[-175.76530457 734.96008301]
[-181.55639648 721.12072754]
[-186.77441406 707.05535889]
[-191.41058350 692.78753662]
[-195.45709229 678.34149170]
[-198.90708923 663.74145508]
[-201.75477600 649.01208496]
[-203.99534607 634.17822266]
[-205.62501526 619.26483154]
[-206.64105225 604.29718018]
[-207.04171753 589.30041504]
[-206.82637024 574.29980469]
[-205.99534607 559.32073975]
[-204.55006409 544.38842773]
[-202.49293518 529.52801514]
[-199.82745361 514.76458740]
[-196.55812073 500.12301636]
[-192.69041443 485.62802124]
[-188.23088074 471.30404663]
[-183.18704224 457.17523193]
[-177.56739807 443.26541138]
[-171.38140869 429.59802246]
[-164.63952637 416.19613647]
[-157.35311890 403.08233643]
[-149.53446960 390.27874756]
[-141.19674683 377.80691528]
[-132.35403442 365.68792725]
[-123.02121735 353.94219971]
[-113.21405792 342.58950806]
[-102.94908142 331.64904785]
[-92.24359131 321.13922119]
[-81.11565399 311.07778931]
[-69.58402252 301.48168945]
[-57.66814041 292.36712646]
[-45.38811111 283.74945068]
[-32.76463318 275.64318848]
[-19.81899643 268.06201172]
[-6.57302761 261.01870728]
[6.95093536 254.52517700]
[20.73008919 248.59233093]
[34.74119949 243.23019409]
[48.96063614 238.44781494]
[63.36442947 234.25323486]
[77.92828369 230.65354919]
[92.62764740 227.65481567]
[107.43772888 225.26210022]
[98.24285889 213.54443359]
[104.28544617 198.92262268]
[95.09056854 187.20495605]
[101.13316345 172.58312988]
[99.35069275 157.68942261]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[76.35627747 68.98516083]
[61.54272079 66.62751007]
[54.01738739 53.65178680]
[59.32767105 39.62321472]
[73.55902863 34.88313293]
[86.21975708 42.92435455]
[85.54997253 27.93931389]
[84.88018799 12.95427513]
[76.53439331 -0.48664409]
[83.69567871 -13.54671001]
[69.06278229 -17.33748436]
[56.19821930 -25.27437973]
[46.24588394 -36.65165710]
[40.09073257 -50.45765305]
[38.28007889 -65.46475220]
[40.97492599 -80.33852386]
[47.93564987 -93.75641632]
[58.54330444 -104.52530670]
[71.85466766 -111.68764496]
[86.68609619 -114.60654449]
[101.71880341 -113.02247620]
[115.61607361 -107.07628632]
[127.14218140 -97.29669952]
[135.27223206 -84.55332184]
[139.28330994 -69.97928619]
[138.81874084 -54.87049103]
[133.91984558 -40.57041168]
[125.02223206 -28.35060120]
[112.91705322 -19.29763412]
[98.68071747 -14.21649551]
[106.97859955 -1.84740639]
[99.86522675 12.28448963]
[100.53501129 27.26952934]
[101.20479584 42.25456619]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[114.24440765 155.90695190]
[116.02687836 170.80067444]
[125.34924316 183.58363342]
[119.17916107 197.14015198]
[128.50152588 209.92311096]
[122.33144379 223.47962952]
[137.28790283 222.30992126]
[152.27975464 221.75523376]
[167.28175354 221.81651306]
[182.26858521 222.49365234]
[197.21498108 223.78549194]
[212.09574890 225.68988037]
[226.88577271 228.20358276]
[241.56013489 231.32237244]
[256.09408569 235.04098511]
[270.46310425 239.35316467]
[284.64297485 244.25163269]
[298.60977173 249.72811890]
[312.33996582 255.77339172]
[325.81039429 262.37725830]
[338.99835205 269.52862549]
[351.88159180 277.21536255]
[364.43838501 285.42453003]
[376.64755249 294.14230347]
[388.48852539 303.35400391]
[399.94131470 313.04403687]
[410.98663330 323.19610596]
[421.60586548 333.79309082]
[431.78106689 344.81710815]
[441.49508667 356.24957275]
[450.73156738 368.07119751]
[459.47494507 380.26205444]
[467.71041870 392.80160522]
[475.42416382 405.66870117]
[482.60311890 418.84164429]
[489.23522949 432.29818726]
[495.30926514 446.01568604]
[500.81503296 459.97097778]
[505.74319458 474.14056396]
[510.08547974 488.50048828]
[513.83459473 503.02661133]
[516.98413086 517.69439697]
[519.52880859 532.47912598]
[521.46441650 547.35583496]
[522.78759766 562.29949951]
[523.49609375 577.28491211]
[523.58886719 592.28674316]
[523.06561279 607.27972412]
[521.92724609 622.23858643]
[520.17572021 637.13812256]
[517.81396484 651.95318604]
[514.84594727 666.65875244]
[511.27673340 681.23010254]
[507.11227417 695.64263916]
[502.35961914 709.87207031]
[497.02679443 723.89434814]
[491.12277222 737.68585205]
[484.65753174 751.22338867]
[477.64193726 764.48406982]
[470.08786011 777.44549561]
[462.00799561 790.08587646]
[453.41601562 802.38391113]
[444.32635498 814.31884766]
[434.75439453 825.87048340]
[424.71624756 837.01947021]
[414.22882080 847.74688721]
[403.30984497 858.03472900]
[391.97769165 867.86560059]
[380.25149536 877.22290039]
[368.15100098 886.09094238]
[355.69665527 894.45471191]
[342.90942383 902.30010986]
[329.81088257 909.61395264]
[316.42312622 916.38385010]
[302.76870728 922.59838867]
[288.87066650 928.24707031]
[274.75241089 933.32043457]
[260.43780518 937.80993652]
[245.95092773 941.70794678]
[231.31625366 945.00787354]
[216.55842590 947.70422363]
[201.70234680 949.79235840]
[186.77305603 951.26885986]
[171.79574585 952.13122559]
[156.79565430 952.37792969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 131]
[74 129]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[82 121]
[83 120]
[84 119]
[90 118]
[91 117]
[92 116]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
