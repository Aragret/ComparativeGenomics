%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[138.00643921 814.71960449]
[123.21492767 812.21356201]
[108.54401398 809.07775879]
[94.02049255 805.31793213]
[79.67089081 800.94091797]
[65.52143097 795.95477295]
[51.59793854 790.36859131]
[37.92586517 784.19256592]
[24.53018188 777.43798828]
[11.43535233 770.11718750]
[-1.33469915 762.24346924]
[-13.75664711 753.83135986]
[-25.80780029 744.89611816]
[-37.46614456 735.45404053]
[-48.71038818 725.52252197]
[-59.51998520 715.11956787]
[-69.87519073 704.26416016]
[-79.75709534 692.97625732]
[-89.14764404 681.27642822]
[-98.02968597 669.18597412]
[-106.38699341 656.72711182]
[-114.20429993 643.92248535]
[-121.46732330 630.79547119]
[-128.16281128 617.37017822]
[-134.27851868 603.67095947]
[-139.80326843 589.72302246]
[-144.72698975 575.55169678]
[-149.04066467 561.18292236]
[-152.73643494 546.64300537]
[-155.80754089 531.95837402]
[-158.24836731 517.15600586]
[-160.05445862 502.26281738]
[-161.22253418 487.30606079]
[-161.75042725 472.31304932]
[-161.63719177 457.31115723]
[-160.88304138 442.32785034]
[-159.48933411 427.39041138]
[-157.45863342 412.52618408]
[-154.79464722 397.76229858]
[-151.50222778 383.12576294]
[-147.58740234 368.64324951]
[-143.05731201 354.34124756]
[-137.92025757 340.24588013]
[-132.18557739 326.38287354]
[-125.86378479 312.77758789]
[-118.96641541 299.45486450]
[-111.50606537 286.43899536]
[-103.49636841 273.75384521]
[-94.95194244 261.42248535]
[-85.88841248 249.46752930]
[-76.32232666 237.91075134]
[-66.27116394 226.77330017]
[-55.75327301 216.07548523]
[-44.78787613 205.83688354]
[-33.39500046 196.07618713]
[-21.59545517 186.81120300]
[-9.41079998 178.05888367]
[3.13671303 169.83520508]
[16.02416229 162.15519714]
[29.22800446 155.03286743]
[42.72412491 148.48124695]
[56.48786545 142.51229858]
[70.49408722 137.13691711]
[84.71720886 132.36494446]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.75270844 60.75823212]
[79.21303558 46.18185806]
[66.98030090 40.54494476]
[60.32476425 29.05954933]
[61.48233032 16.03103638]
[69.80721283 6.19610643]
[66.48495483 -8.43135357]
[63.16269302 -23.05881310]
[59.84043121 -37.68627548]
[56.51817322 -52.31373596]
[53.19591522 -66.94119263]
[38.18071365 -66.13383484]
[23.24507141 -67.87583923]
[8.81871319 -72.11708832]
[-4.68328762 -78.73554230]
[-16.87244987 -87.54078674]
[-27.39806747 -98.27947235]
[-35.95729828 -110.64263153]
[-42.30387115 -124.27454376]
[-46.25519180 -138.78298950]
[-47.69756317 -153.75053406]
[-46.58949280 -168.74655151]
[-42.96286011 -183.33953857]
[-36.92200470 -197.10966492]
[-28.64074326 -209.66070557]
[-18.35733795 -220.63156128]
[-6.36766434 -229.70655823]
[6.98330975 -236.62461853]
[21.31145096 -241.18667603]
[36.20450974 -243.26147461]
[51.23398209 -242.78932190]
[65.96744537 -239.78381348]
[79.98097992 -234.33139038]
[92.87139893 -226.58895874]
[104.26780701 -216.77928162]
[113.84231567 -205.18460083]
[121.31944275 -192.13850403]
[126.48406219 -178.01635742]
[129.18757629 -163.22450256]
[129.35218811 -148.18852234]
[126.97316742 -133.34101868]
[122.11898041 -119.10919189]
[114.92926788 -105.90252686]
[105.61090088 -94.10099792]
[94.43199158 -84.04415894]
[81.71417999 -76.02136993]
[67.82337189 -70.26345062]
[71.14562988 -55.63599396]
[74.46789551 -41.00853348]
[77.79015350 -26.38107300]
[81.11241150 -11.75361347]
[84.43466949 2.87384701]
[99.03516388 11.22036362]
[103.16284180 27.87200546]
[93.78941345 42.64218521]
[97.32908630 57.21855927]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[128.42417908 121.75130463]
[143.25181580 119.46871185]
[158.16343689 117.82178497]
[173.13182068 116.81353760]
[188.12960815 116.44580078]
[203.12940979 116.71925354]
[218.10383606 117.63339996]
[233.02552795 119.18656158]
[247.86720276 121.37590027]
[262.60180664 124.19743347]
[277.20236206 127.64598846]
[291.64224243 131.71527100]
[305.89501953 136.39785767]
[319.93472290 141.68518066]
[333.73568726 147.56758118]
[347.27267456 154.03433228]
[360.52096558 161.07359314]
[373.45639038 168.67254639]
[386.05529785 176.81727600]
[398.29467773 185.49290466]
[410.15216064 194.68360901]
[421.60610962 204.37257385]
[432.63558960 214.54212952]
[443.22042847 225.17367554]
[453.34133911 236.24780273]
[462.97979736 247.74427795]
[472.11822510 259.64208984]
[480.73989868 271.91955566]
[488.82910156 284.55416870]
[496.37103271 297.52291870]
[503.35192871 310.80206299]
[509.75903320 324.36740112]
[515.58062744 338.19412231]
[520.80609131 352.25695801]
[525.42590332 366.53021240]
[529.43157959 380.98785400]
[532.81585693 395.60345459]
[535.57250977 410.35034180]
[537.69647217 425.20150757]
[539.18395996 440.12988281]
[540.03216553 455.10818481]
[540.23962402 470.10903931]
[539.80584717 485.10507202]
[538.73175049 500.06887817]
[537.01922607 514.97308350]
[534.67138672 529.79052734]
[531.69250488 544.49414062]
[528.08813477 559.05700684]
[523.86474609 573.45257568]
[519.03015137 587.65454102]
[513.59307861 601.63690186]
[507.56350708 615.37420654]
[500.95245361 628.84130859]
[493.77200317 642.01361084]
[486.03524780 654.86712646]
[477.75631714 667.37823486]
[468.95037842 679.52416992]
[459.63348389 691.28277588]
[449.82266235 702.63250732]
[439.53582764 713.55267334]
[428.79174805 724.02331543]
[417.61010742 734.02526855]
[406.01126099 743.54034424]
[394.01644897 752.55108643]
[381.64758301 761.04107666]
[368.92721558 768.99475098]
[355.87863159 776.39764404]
[342.52560425 783.23626709]
[328.89257812 789.49798584]
[315.00445557 795.17150879]
[300.88656616 800.24639893]
[286.56472778 804.71337891]
[272.06512451 808.56433105]
[257.41418457 811.79223633]
[242.63870239 814.39111328]
[227.76567078 816.35626221]
[212.82225037 817.68408203]
[197.83573914 818.37219238]
[182.83351135 818.41931152]
[167.84297180 817.82531738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 130]
[66 129]
[68 127]
[69 126]
[70 125]
[71 124]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
