%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[12.07250404 591.19372559]
[1.05317640 601.38037109]
[-10.66478539 610.75494385]
[-23.02166748 619.26971436]
[-35.95450211 626.88122559]
[-49.39738846 633.55072021]
[-63.28182220 639.24420166]
[-77.53704834 643.93267822]
[-92.09043121 647.59222412]
[-106.86779785 650.20422363]
[-121.79385376 651.75537109]
[-136.79254150 652.23773193]
[-151.78742981 651.64886475]
[-166.70208740 649.99182129]
[-181.46054077 647.27496338]
[-195.98757935 643.51214600]
[-210.20915222 638.72259521]
[-224.05281067 632.93066406]
[-237.44799805 626.16589355]
[-250.32647705 618.46270752]
[-262.62258911 609.86047363]
[-274.27368164 600.40295410]
[-285.22042847 590.13830566]
[-295.40698242 579.11889648]
[-304.78146362 567.40087891]
[-313.29608154 555.04394531]
[-320.90750122 542.11102295]
[-327.57690430 528.66809082]
[-333.27026367 514.78363037]
[-337.95864868 500.52835083]
[-341.61807251 485.97494507]
[-344.22998047 471.19757080]
[-345.78100586 456.27148438]
[-346.26327515 441.27279663]
[-345.67431641 426.27792358]
[-344.01712036 411.36328125]
[-341.30014038 396.60482788]
[-337.53720093 382.07785034]
[-332.74752808 367.85629272]
[-326.95550537 354.01269531]
[-320.19064331 340.61755371]
[-312.48739624 327.73913574]
[-303.88504028 315.44308472]
[-294.42742920 303.79205322]
[-284.16271973 292.84539795]
[-273.14321899 282.65893555]
[-261.42510986 273.28454590]
[-249.06809998 264.76998901]
[-236.13514709 257.15869141]
[-222.69216919 250.48941040]
[-208.80764771 244.79612732]
[-194.55235291 240.10787964]
[-179.99891663 236.44853210]
[-165.22149658 233.83674622]
[-150.29542542 232.28582764]
[-135.29672241 231.80369568]
[-120.30184937 232.39277649]
[-105.38720703 234.05007935]
[-90.62879944 236.76718140]
[-76.10182953 240.53021240]
[-61.88032150 245.31999207]
[-48.03675461 251.11213684]
[-34.64166641 257.87710571]
[-21.76331520 265.58044434]
[-13.16475201 253.28959656]
[-4.56618786 240.99876404]
[4.03237629 228.70793152]
[12.63094044 216.41708374]
[8.99874783 199.99618530]
[18.55488396 185.74855042]
[35.79159164 182.76272583]
[44.20621109 170.34523010]
[52.62083054 157.92773438]
[61.03544998 145.51023865]
[69.35739136 133.03044128]
[77.58620453 120.48904419]
[85.81501007 107.94764709]
[84.13873291 96.42240143]
[90.60017395 86.73265839]
[101.88425446 83.84980774]
[110.29887390 71.43231201]
[118.71348572 59.01482010]
[127.12810516 46.59732437]
[128.46446228 30.83265495]
[142.00932312 24.63702774]
[139.23585510 9.30909252]
[147.94636536 -3.16414404]
[162.57630920 -5.71376371]
[170.99092102 -18.13125992]
[179.40554810 -30.54875565]
[187.82015991 -42.96625137]
[176.19876099 -52.46620560]
[165.47570801 -62.96965790]
[155.73736572 -74.39204407]
[147.06213379 -86.64138794]
[139.51985168 -99.61907196]
[133.17126465 -113.22060394]
[128.06747437 -127.33646393]
[124.24957275 -141.85301208]
[121.74831390 -156.65333557]
[120.58382416 -171.61830139]
[120.76548767 -186.62741089]
[122.29183960 -201.55981445]
[125.15058899 -216.29527283]
[129.31872559 -230.71514893]
[134.76268005 -244.70335388]
[141.43861389 -258.14724731]
[149.29278564 -270.93856812]
[158.26196289 -282.97436523]
[168.27391052 -294.15768433]
[179.24804688 -304.39852905]
[191.09597778 -313.61441040]
[203.72233582 -321.73117065]
[217.02545166 -328.68338013]
[230.89819336 -334.41513062]
[245.22889709 -338.88024902]
[259.90216064 -342.04278564]
[274.79983521 -343.87728882]
[289.80200195 -344.36895752]
[304.78781128 -343.51388550]
[319.63665771 -341.31887817]
[334.22897339 -337.80166626]
[348.44726562 -332.99057007]
[362.17703247 -326.92431641]
[375.30773926 -319.65173340]
[387.73370361 -311.23138428]
[399.35479736 -301.73107910]
[410.07754517 -291.22729492]
[419.81552124 -279.80462646]
[428.49038696 -267.55499268]
[436.03228760 -254.57708740]
[442.38046265 -240.97537231]
[447.48382568 -226.85934448]
[451.30126953 -212.34269714]
[453.80206299 -197.54228210]
[454.96609497 -182.57728577]
[454.78396606 -167.56817627]
[453.25717163 -152.63583374]
[450.39797974 -137.90045166]
[446.22940063 -123.48070526]
[440.78503418 -109.49267578]
[434.10867310 -96.04898834]
[426.25411987 -83.25789642]
[417.28457642 -71.22238159]
[407.27227783 -60.03935623]
[396.29782104 -49.79885101]
[384.44961548 -40.58332443]
[371.82299805 -32.46697235]
[358.51968384 -25.51514435]
[344.64675903 -19.78381729]
[330.31591797 -15.31913376]
[315.64257812 -12.15704250]
[300.74484253 -10.32300472]
[285.74267578 -9.83178520]
[270.75686646 -10.68734074]
[255.90808105 -12.88278198]
[241.31587219 -16.40043068]
[227.09774780 -21.21196747]
[213.36814880 -27.27865028]
[200.23765564 -34.55163193]
[191.82304382 -22.13413620]
[183.40841675 -9.71664047]
[174.99380493 2.70085478]
[178.04782104 17.23386955]
[169.69110107 29.94684601]
[154.42681885 33.05164719]
[153.69233704 47.92813110]
[139.54560852 55.01194000]
[131.13098145 67.42943573]
[122.71636963 79.84693146]
[114.30175018 92.26442719]
[113.52787781 109.02084351]
[98.35640717 116.17645264]
[90.12760162 128.71784973]
[81.89879608 141.25926208]
[79.80748749 150.15106201]
[73.45294189 153.92486572]
[65.03832245 166.34236145]
[56.62370682 178.75985718]
[48.20908737 191.17735291]
[52.25637817 204.02389526]
[48.22467422 216.67126465]
[37.79932022 224.57026672]
[24.92177773 225.01565552]
[16.32321358 237.30648804]
[7.72464991 249.59732056]
[-0.87391382 261.88815308]
[-9.47247791 274.17901611]
[2.17877221 283.63635254]
[13.12565231 293.90081787]
[23.31237984 304.92007446]
[32.68704224 316.63796997]
[41.20187378 328.99478149]
[48.81347656 341.92755127]
[55.48307037 355.37039185]
[61.17666626 369.25479126]
[65.86524963 383.50997925]
[69.52492523 398.06332397]
[72.13704681 412.84066772]
[73.68830109 427.76672363]
[74.17079163 442.76541138]
[73.58205414 457.76028442]
[71.92508698 472.67495728]
[69.20833588 487.43344116]
[65.44564056 501.96051025]
[60.65618134 516.18212891]
[54.86436081 530.02581787]
[48.09969330 543.42108154]
[40.39665604 556.29956055]
[31.79449272 568.59576416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 188]
[65 187]
[66 186]
[67 185]
[68 184]
[71 180]
[72 179]
[73 178]
[74 177]
[75 175]
[76 174]
[77 173]
[80 171]
[81 170]
[82 169]
[83 168]
[85 166]
[88 163]
[89 162]
[90 161]
[91 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
