%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[53.25275040 624.61004639]
[39.25448227 630.01202393]
[24.96078300 634.57525635]
[10.42185688 638.28369141]
[-4.31122684 641.12432861]
[-19.18671608 643.08721924]
[-34.15235901 644.16534424]
[-49.15559387 644.35504150]
[-64.14371490 643.65563965]
[-79.06407166 642.06951904]
[-93.86426544 639.60229492]
[-108.49230957 636.26257324]
[-122.89681244 632.06219482]
[-137.02719116 627.01586914]
[-150.83378601 621.14129639]
[-164.26814270 614.45916748]
[-177.28303528 606.99285889]
[-189.83274841 598.76867676]
[-201.87322998 589.81542969]
[-213.36216736 580.16467285]
[-224.25920105 569.85021973]
[-234.52607727 558.90838623]
[-244.12669373 547.37750244]
[-253.02737427 535.29815674]
[-261.19680786 522.71270752]
[-268.60635376 509.66543579]
[-275.22991943 496.20208740]
[-281.04431152 482.37002563]
[-286.02902222 468.21780396]
[-290.16662598 453.79513550]
[-293.44253540 439.15270996]
[-295.84527588 424.34188843]
[-297.36639404 409.41476440]
[-298.00054932 394.42373657]
[-297.74548340 379.42147827]
[-296.60214233 364.46066284]
[-294.57449341 349.59387207]
[-291.66970825 334.87332153]
[-287.89797974 320.35067749]
[-283.27252197 306.07699585]
[-277.80960083 292.10238647]
[-271.52841187 278.47595215]
[-264.45101929 265.24554443]
[-256.60226440 252.45767212]
[-248.00973511 240.15719604]
[-238.70361328 228.38735962]
[-228.71658325 217.18949890]
[-218.08370972 206.60295105]
[-206.84236145 196.66488647]
[-195.03202820 187.41023254]
[-182.69416809 178.87147522]
[-169.87214661 171.07861328]
[-156.61097717 164.05903625]
[-142.95726013 157.83738708]
[-128.95895386 152.43551636]
[-114.66520691 147.87242126]
[-100.12625122 144.16409302]
[-85.39314270 141.32359314]
[-70.51763153 139.36087036]
[-55.55197906 138.28283691]
[-40.54874420 138.09326172]
[-25.56063080 138.79284668]
[-10.64028358 140.37908936]
[4.15988827 142.84645081]
[18.78789902 146.18624878]
[33.19236755 150.38676453]
[47.32269669 155.43322754]
[61.12924957 161.30790710]
[67.80944824 147.87753296]
[74.48963928 134.44715881]
[81.16983032 121.01678467]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[105.39978790 72.30302429]
[112.07998657 58.87264633]
[118.76017761 45.44226837]
[125.44037628 32.01189423]
[112.52124023 24.37685394]
[100.18672180 15.82949638]
[88.50111389 6.41438532]
[77.52534485 -3.81939459]
[67.31663513 -14.81848812]
[57.92821503 -26.52554893]
[49.40902710 -38.87954330]
[41.80348969 -51.81606293]
[35.15124893 -65.26766205]
[29.48699379 -79.16420746]
[24.84025383 -93.43325043]
[21.23525238 -108.00039673]
[18.69078636 -122.78969574]
[17.22012329 -137.72404480]
[16.83092690 -152.72558594]
[17.52522850 -167.71611023]
[19.29940796 -182.61746216]
[22.14421654 -197.35192871]
[26.04482079 -211.84272766]
[30.98088455 -226.01428223]
[36.92667389 -239.79272461]
[43.85118866 -253.10620117]
[51.71833038 -265.88531494]
[60.48708344 -278.06344604]
[70.11172485 -289.57708740]
[80.54208374 -300.36621094]
[91.72377014 -310.37460327]
[103.59850311 -319.55001831]
[116.10435486 -327.84469604]
[129.17613220 -335.21533203]
[142.74569702 -341.62350464]
[156.74227905 -347.03585815]
[171.09292603 -351.42410278]
[185.72280884 -354.76541138]
[200.55564880 -357.04232788]
[215.51412964 -358.24301147]
[230.52026367 -358.36117554]
[245.49578857 -357.39620972]
[260.36267090 -355.35317993]
[275.04336548 -352.24270630]
[289.46133423 -348.08099365]
[303.54141235 -342.88977051]
[317.21020508 -336.69607544]
[330.39645386 -329.53222656]
[343.03137207 -321.43554688]
[355.04913330 -312.44827271]
[366.38705444 -302.61721802]
[376.98605347 -291.99371338]
[386.79083252 -280.63305664]
[395.75027466 -268.59454346]
[403.81768799 -255.94090271]
[410.95101929 -242.73812866]
[417.11306763 -229.05503845]
[422.27172852 -214.96298218]
[426.40005493 -200.53541565]
[429.47656250 -185.84756470]
[431.48519897 -170.97601318]
[432.41549683 -155.99829102]
[432.26260376 -140.99247742]
[431.02731323 -126.03681183]
[428.71609497 -111.20926666]
[425.34094238 -96.58715820]
[420.91949463 -82.24670410]
[415.47479248 -68.26268005]
[409.03524780 -54.70798111]
[401.63436890 -41.65328979]
[393.31079102 -29.16665840]
[384.10791016 -17.31319237]
[374.07369995 -6.15468693]
[363.26046753 4.25067949]
[351.72457886 13.84865761]
[339.52621460 22.58920860]
[326.72891235 30.42676353]
[313.39944458 37.32045746]
[299.60729980 43.23435211]
[285.42434692 48.13761520]
[270.92456055 52.00468445]
[256.18356323 54.81539154]
[241.27815247 56.55509186]
[226.28605652 57.21471024]
[211.28546143 56.79080582]
[196.35455322 55.28559113]
[181.57116699 52.70691681]
[167.01240540 49.06822205]
[152.75415039 44.38848114]
[138.87074280 38.69208908]
[132.19055176 52.12246323]
[125.51036072 65.55284119]
[118.83016968 78.98321533]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[94.60021210 127.69697571]
[87.92001343 141.12734985]
[81.23982239 154.55772400]
[74.55962372 167.98811340]
[87.57458496 175.45428467]
[100.12438202 183.67837524]
[112.16493988 192.63146973]
[123.65395355 202.28213501]
[134.55108643 212.59648132]
[144.81803894 223.53825378]
[154.41877747 235.06903076]
[163.31954956 247.14831543]
[171.48910522 259.73367310]
[178.89875793 272.78091431]
[185.52244568 286.24417114]
[191.33694458 300.07620239]
[196.32180786 314.22836304]
[200.45953369 328.65100098]
[203.73556519 343.29342651]
[206.13844299 358.10418701]
[207.65968323 373.03131104]
[208.29394531 388.02233887]
[208.03903198 403.02459717]
[206.89581299 417.98541260]
[204.86831665 432.85223389]
[201.96365356 447.57281494]
[198.19203186 462.09548950]
[193.56671143 476.36923218]
[188.10391235 490.34387207]
[181.82284546 503.97036743]
[174.74555969 517.20080566]
[166.89692688 529.98876953]
[158.30450439 542.28930664]
[148.99848938 554.05920410]
[139.01155090 565.25720215]
[128.37878418 575.84381104]
[117.13751984 585.78198242]
[105.32725525 595.03674316]
[92.98947906 603.57562256]
[80.16751862 611.36859131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 174]
[69 173]
[70 172]
[71 171]
[72 170]
[74 168]
[75 167]
[76 166]
[77 165]
[78 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
