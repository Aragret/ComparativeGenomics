%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[195.46662903 259.52636719]
[196.44847107 244.55194092]
[198.50828552 229.68737793]
[201.63533020 215.01020813]
[205.81329346 200.59693909]
[211.02040100 186.52272034]
[217.22950745 172.86091614]
[204.05702209 165.68554688]
[190.88455200 158.51017761]
[177.71206665 151.33482361]
[164.53959656 144.15945435]
[151.36712646 136.98408508]
[138.19464111 129.80871582]
[126.46627808 135.14489746]
[113.61405945 132.71536255]
[104.37178040 123.18694305]
[102.27439117 109.88222504]
[94.26460266 108.97901154]
[89.07175446 102.30329895]
[73.25298309 102.02539825]
[66.16442108 88.92572021]
[53.21142197 81.36134338]
[40.25842285 73.79695892]
[27.30542564 66.23258209]
[18.88976288 78.65618134]
[9.66308498 90.48993683]
[-0.33339891 101.68098450]
[-11.05504227 112.17935181]
[-22.45395851 121.93814087]
[-34.47923660 130.91377258]
[-47.07717133 139.06614685]
[-60.19149017 146.35887146]
[-73.76362610 152.75936890]
[-87.73296356 158.23905945]
[-102.03710938 162.77345276]
[-116.61217499 166.34230042]
[-131.39306641 168.92967224]
[-146.31376648 170.52400208]
[-161.30764771 171.11817932]
[-176.30772400 170.70953369]
[-191.24700928 169.29991150]
[-206.05877686 166.89559937]
[-220.67687988 163.50733948]
[-235.03602600 159.15025330]
[-249.07208252 153.84381104]
[-262.72235107 147.61170959]
[-275.92590332 140.48178101]
[-288.62371826 132.48587036]
[-300.75912476 123.65969849]
[-312.27789307 114.04267883]
[-323.12860107 103.67775726]
[-333.26275635 92.61123657]
[-342.63513184 80.89253235]
[-351.20385742 68.57399750]
[-358.93063354 55.71063614]
[-365.78100586 42.35990906]
[-371.72430420 28.58143997]
[-376.73406982 14.43676853]
[-380.78784180 -0.01093100]
[-383.86758423 -14.69713116]
[-385.95950317 -29.55624008]
[-387.05429077 -44.52189255]
[-387.14700317 -59.52724838]
[-386.23727417 -74.50528717]
[-384.32916260 -89.38911438]
[-381.43115234 -104.11225128]
[-377.55621338 -118.60894775]
[-372.72167969 -132.81445312]
[-366.94909668 -146.66532898]
[-360.26425171 -160.09970093]
[-352.69705200 -173.05755615]
[-344.28121948 -185.48106384]
[-335.05438232 -197.31469727]
[-325.05776978 -208.50561523]
[-314.33599854 -219.00384521]
[-302.93695068 -228.76249695]
[-290.91156006 -237.73797607]
[-278.31353760 -245.89019775]
[-265.19912720 -253.18275452]
[-251.62689209 -259.58309937]
[-237.65748596 -265.06259155]
[-223.35328674 -269.59680176]
[-208.77818298 -273.16546631]
[-193.99725342 -275.75265503]
[-179.07652283 -277.34680176]
[-164.08264160 -277.94079590]
[-149.08258057 -277.53195190]
[-134.14331055 -276.12216187]
[-119.33156586 -273.71765137]
[-104.71350861 -270.32919312]
[-90.35441589 -265.97192383]
[-76.31842804 -260.66531372]
[-62.66822433 -254.43304443]
[-49.46477509 -247.30294800]
[-36.76705170 -239.30688477]
[-24.63176346 -230.48056030]
[-13.11311150 -220.86338806]
[-2.26254106 -210.49833679]
[7.87148666 -199.43168640]
[17.24370956 -187.71286011]
[25.81226921 -175.39422607]
[33.53889465 -162.53076172]
[40.38908005 -149.17994690]
[46.33222961 -135.40139771]
[51.34179306 -121.25666809]
[55.39540863 -106.80892181]
[58.47496033 -92.12268066]
[60.56669998 -77.26354980]
[61.66128159 -62.29788208]
[61.75381851 -47.29252625]
[60.84389877 -32.31449509]
[58.93558502 -17.43069267]
[56.03740311 -2.70758915]
[52.16229248 11.78905773]
[47.32756042 25.99450302]
[41.55480576 39.84529877]
[34.86980438 53.27958298]
[47.82280350 60.84396362]
[60.77580261 68.40834045]
[73.72879791 75.97271729]
[88.62107849 75.70956421]
[96.63613129 89.35029602]
[109.64508057 96.81803894]
[126.40784454 91.81511688]
[141.30914307 100.31607056]
[145.37001038 116.63623810]
[158.54249573 123.81160736]
[171.71496582 130.98696899]
[184.88743591 138.16233826]
[198.05992126 145.33770752]
[211.23239136 152.51307678]
[224.40486145 159.68844604]
[232.51539612 147.06239319]
[241.51583862 135.05448914]
[251.35929871 123.72735596]
[261.99444580 113.14002991]
[273.36584473 103.34770966]
[285.41415405 94.40145874]
[298.07662964 86.34791565]
[311.28723145 79.22906494]
[324.97705078 73.08202362]
[339.07476807 67.93884277]
[353.50686646 63.82632828]
[368.19805908 60.76592636]
[383.07180786 58.77359390]
[398.05053711 57.85971451]
[413.05618286 58.02905655]
[428.01049805 59.28073502]
[442.83547974 61.60822678]
[457.45388794 64.99938965]
[471.78948975 69.43655396]
[485.76754761 74.89658356]
[499.31515503 81.35100555]
[512.36175537 88.76617432]
[524.83923340 97.10343170]
[536.68261719 106.31930542]
[547.83007812 116.36575317]
[558.22357178 127.19039154]
[567.80889893 138.73678589]
[576.53607178 150.94474792]
[584.35961914 163.75061035]
[591.23870850 177.08763123]
[597.13745117 190.88626099]
[602.02514648 205.07456970]
[605.87634277 219.57858276]
[608.67089844 234.32267761]
[610.39422607 249.22998047]
[611.03741455 264.22277832]
[610.59710693 279.22290039]
[609.07550049 294.15216064]
[606.48059082 308.93270874]
[602.82598877 323.48745728]
[598.13061523 337.74057007]
[592.41900635 351.61773682]
[585.72088623 365.04656982]
[578.07128906 377.95706177]
[569.51000977 390.28195190]
[560.08172607 401.95693970]
[549.83557129 412.92114258]
[538.82501221 423.11743164]
[527.10736084 432.49264526]
[514.74377441 440.99789429]
[501.79864502 448.58883667]
[488.33956909 455.22589111]
[474.43664551 460.87448120]
[460.16235352 465.50509644]
[445.59115601 469.09365845]
[430.79898071 471.62145996]
[415.86300659 473.07525635]
[400.86102295 473.44754028]
[385.87130737 472.73632812]
[370.97195435 470.94534302]
[356.24069214 468.08392334]
[341.75433350 464.16696167]
[327.58834839 459.21490479]
[313.81661987 453.25360107]
[300.51095581 446.31405640]
[287.74072266 438.43249512]
[275.57247925 429.65002441]
[264.06970215 420.01239014]
[253.29235840 409.56988525]
[243.29660034 398.37689209]
[234.13456726 386.49182129]
[225.85401917 373.97662354]
[218.49813843 360.89654541]
[212.10525513 347.31976318]
[206.70872498 333.31707764]
[202.33665466 318.96148682]
[199.01187134 304.32785034]
[196.75167847 289.49243164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 132]
[8 131]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[17 123]
[19 122]
[21 120]
[22 119]
[23 118]
[24 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
