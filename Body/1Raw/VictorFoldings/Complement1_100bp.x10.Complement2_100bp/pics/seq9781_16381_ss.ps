%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[154.34017944 724.13427734]
[144.85290527 712.49829102]
[136.61235046 699.94848633]
[129.70588684 686.61791992]
[124.20670319 672.64782715]
[120.17311096 658.18634033]
[117.64785767 643.38677979]
[116.65772247 628.40600586]
[117.21318817 613.40283203]
[119.30838013 598.53631592]
[122.92108154 583.96398926]
[128.01300049 569.84039307]
[134.53015137 556.31518555]
[142.40345764 543.53179932]
[151.54945374 531.62567139]
[161.87117004 520.72314453]
[173.25923157 510.93966675]
[185.59288025 502.37899780]
[198.74139404 495.13186646]
[212.56536865 489.27511597]
[208.16438293 474.93527222]
[203.76338196 460.59542847]
[199.36238098 446.25558472]
[194.96138000 431.91574097]
[189.99372864 426.44360352]
[190.60331726 417.32952881]
[186.41632080 402.92575073]
[177.05487061 398.82983398]
[171.37399292 390.07336426]
[171.45198059 379.41625977]
[177.50451660 370.37881470]
[173.74821472 355.85675049]
[169.99191284 341.33468628]
[159.31398010 330.95050049]
[163.34890747 315.65246582]
[159.59260559 301.13043213]
[155.83630371 286.60836792]
[152.08000183 272.08630371]
[148.32369995 257.56423950]
[144.56739807 243.04217529]
[140.05978394 228.73548889]
[134.81306458 214.68302917]
[129.56634521 200.63055420]
[124.31962585 186.57807922]
[119.07290649 172.52560425]
[113.82618713 158.47314453]
[108.57946777 144.42066956]
[92.86323547 144.67515564]
[78.00846863 139.53701782]
[65.80824280 129.62644958]
[57.73522186 116.13974762]
[54.76388550 100.70485687]
[57.25289154 85.18488312]
[64.90180206 71.45320892]
[76.78733063 61.16735077]
[71.33197021 47.19454956]
[65.87661743 33.22175217]
[59.84044647 26.36591721]
[60.44575500 19.00009155]
[55.19903564 4.94762039]
[49.95231628 -9.10485077]
[44.70560074 -23.15732193]
[29.63851547 -25.78984833]
[17.98900986 -35.54617310]
[12.82141018 -49.72933960]
[15.42945385 -64.49599457]
[25.01410484 -75.89775085]
[19.76738548 -89.95022583]
[13.83395958 -96.89517212]
[14.54886818 -104.25116730]
[8.71949959 -111.28368378]
[9.54384804 -118.62821960]
[4.71785069 -132.83067322]
[-0.10814685 -147.03312683]
[-4.93414450 -161.23558044]
[-9.76014233 -175.43804932]
[-14.58613968 -189.64050293]
[-19.41213799 -203.84295654]
[-34.30231476 -201.69882202]
[-49.33292770 -202.32749939]
[-63.99204636 -205.70756531]
[-77.78038788 -211.72390747]
[-90.22831726 -220.17161560]
[-100.91187286 -230.76293945]
[-109.46716309 -243.13717651]
[-115.60281372 -256.87283325]
[-119.10984039 -271.50210571]
[-119.86878967 -286.52670288]
[-117.85382080 -301.43490601]
[-113.13356018 -315.71893311]
[-105.86877441 -328.89230347]
[-96.30690002 -340.50631714]
[-84.77361298 -350.16540527]
[-71.66173553 -357.54058838]
[-57.41785049 -362.38067627]
[-42.52709579 -364.52078247]
[-27.49665070 -363.88806152]
[-12.83844280 -360.50402832]
[0.94827312 -354.48397827]
[13.39392662 -346.03292847]
[24.07462311 -335.43872070]
[32.62658310 -323.06216431]
[38.75852966 -309.32485962]
[42.26161194 -294.69464111]
[43.01651382 -279.66983032]
[40.99752426 -264.76217651]
[36.27341080 -250.47941589]
[29.00507545 -237.30801392]
[19.44007301 -225.69657898]
[7.90418482 -216.04060364]
[-5.20968199 -208.66894531]
[-0.38368416 -194.46649170]
[4.44231367 -180.26403809]
[9.26831150 -166.06158447]
[14.09430885 -151.85913086]
[18.92030716 -137.65667725]
[23.74630356 -123.45421600]
[28.67789841 -109.28808594]
[33.81985855 -95.19694519]
[39.06657410 -81.14447021]
[53.77831268 -78.81416321]
[65.42584229 -69.37005615]
[70.81797028 -55.27072144]
[68.41304779 -40.26694870]
[58.75807190 -28.40403938]
[64.00479126 -14.35156918]
[69.25151062 -0.29909757]
[74.49822235 13.75337410]
[79.84941101 27.76639748]
[85.30477142 41.73919296]
[90.76012421 55.71199036]
[104.87789917 55.02212906]
[118.51954651 58.72253418]
[130.35351562 66.45201111]
[139.22468567 77.45610046]
[144.26715088 90.66068268]
[144.98870850 104.77687073]
[141.31895447 118.42679596]
[133.61607361 130.27809143]
[122.63193512 139.17395020]
[127.87865448 153.22642517]
[133.12538147 167.27888489]
[138.37210083 181.33135986]
[143.61880493 195.38383484]
[148.86552429 209.43630981]
[154.11224365 223.48876953]
[160.25889587 209.80598450]
[173.70739746 203.16235352]
[188.30928040 206.59527588]
[197.38876343 218.53524780]
[196.79483032 233.52348328]
[186.79901123 244.70756531]
[171.97126770 246.97427368]
[159.08946228 239.28587341]
[162.84576416 253.80793762]
[166.60206604 268.32998657]
[170.35836792 282.85205078]
[174.11466980 297.37411499]
[177.87097168 311.89617920]
[188.81758118 323.31906128]
[184.51397705 337.57839966]
[188.27027893 352.10043335]
[192.02656555 366.62249756]
[206.79090881 380.34753418]
[200.82009888 398.73873901]
[205.00711060 413.14251709]
[209.30122375 427.51473999]
[213.70222473 441.85458374]
[218.10322571 456.19442749]
[222.50422668 470.53427124]
[226.90522766 484.87414551]
[241.63465881 481.96762085]
[256.58486938 480.59106445]
[271.59741211 480.75900269]
[286.51309204 482.46966553]
[301.17382812 485.70495605]
[315.42419434 490.43054199]
[329.11312866 496.59631348]
[342.09552002 504.13696289]
[354.23376465 512.97253418]
[365.39916992 523.00933838]
[375.47338867 534.14099121]
[384.34963989 546.24951172]
[391.93380737 559.20654297]
[398.14550781 572.87469482]
[402.91888428 587.10913086]
[406.20333862 601.75891113]
[407.96405029 616.66882324]
[408.18237305 631.68066406]
[406.85595703 646.63543701]
[403.99890137 661.37451172]
[399.64147949 675.74176025]
[393.82989502 689.58477783]
[386.62570190 702.75683594]
[378.10534668 715.11840820]
[368.35906982 726.53833008]
[357.49026489 736.89556885]
[345.61407471 746.08038330]
[332.85644531 753.99536133]
[319.35260010 760.55657959]
[305.24566650 765.69458008]
[290.68524170 769.35479736]
[275.82559204 771.49847412]
[260.82431030 772.10290527]
[245.84037781 771.16168213]
[231.03265381 768.68475342]
[216.55809021 764.69836426]
[202.57014465 759.24481201]
[189.21708679 752.38183594]
[176.64047241 744.18231201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[26 166]
[27 165]
[31 163]
[32 162]
[33 161]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 146]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[55 131]
[56 130]
[57 129]
[59 128]
[60 127]
[61 126]
[62 125]
[67 120]
[68 119]
[70 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
