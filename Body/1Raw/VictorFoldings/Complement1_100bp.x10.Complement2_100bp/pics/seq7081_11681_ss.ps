%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[126.17717743 383.54193115]
[123.10803223 368.85089111]
[121.23097992 353.96054077]
[120.55820465 338.96740723]
[121.09406281 323.96878052]
[122.83508301 309.06188965]
[125.76997375 294.34344482]
[129.87968445 279.90887451]
[135.13758850 265.85183716]
[141.50958252 252.26344299]
[148.95431519 239.23185730]
[157.42352295 226.84159851]
[166.86228943 215.17300415]
[177.20938110 204.30174255]
[167.21119690 193.11976624]
[157.21302795 181.93780518]
[142.96185303 177.60731506]
[139.53129578 162.16252136]
[129.53312683 150.98054504]
[127.61681366 165.85763550]
[115.82683563 175.13105774]
[100.91703033 173.48858643]
[91.42841339 161.87109375]
[92.79649353 146.93360901]
[104.23756409 137.23300171]
[119.19682312 138.32580566]
[110.23612976 126.29642487]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[72.93297577 97.91051483]
[59.02629089 95.64595032]
[47.06943130 88.27444458]
[38.85031509 76.93704224]
[35.58312225 63.36483765]
[37.72902679 49.61467361]
[44.93142319 37.75745392]
[36.15082169 25.59599686]
[27.37021828 13.43454075]
[14.70541096 15.96084785]
[2.07173085 13.51846981]
[-8.66070843 6.50493097]
[-15.91685581 -4.00827789]
[-18.64783859 -16.43927193]
[-16.48245811 -28.93375015]
[-9.77721786 -39.64159393]
[-18.19183731 -52.05908966]
[-26.60645485 -64.47658539]
[-35.02107239 -76.89408112]
[-43.43569183 -89.31157684]
[-51.85031128 -101.72907257]
[-60.26493073 -114.14656830]
[-68.67955017 -126.56406403]
[-81.85050201 -119.36193085]
[-95.64643097 -113.44439697]
[-109.94239044 -108.86506653]
[-124.60890961 -105.66540527]
[-139.51316833 -103.87438965]
[-154.52018738 -103.50823975]
[-169.49406433 -104.57026672]
[-184.29917908 -107.05086517]
[-198.80145264 -110.92755890]
[-212.86955261 -116.16524506]
[-226.37606812 -122.71649170]
[-239.19868469 -130.52195740]
[-251.22126770 -139.51097107]
[-262.33493042 -149.60209656]
[-272.43905640 -160.70396423]
[-281.44210815 -172.71603394]
[-289.26257324 -185.52952576]
[-295.82958984 -199.02836609]
[-301.08370972 -213.09033203]
[-304.97735596 -227.58807373]
[-307.47525024 -242.39027405]
[-308.55477905 -257.36288452]
[-308.20617676 -272.37033081]
[-306.43258667 -287.27667236]
[-303.25006104 -301.94692993]
[-298.68743896 -316.24822998]
[-292.78604126 -330.05105591]
[-285.59930420 -343.23043823]
[-277.19232178 -355.66696167]
[-267.64123535 -367.24804688]
[-257.03250122 -377.86877441]
[-245.46226501 -387.43298340]
[-233.03526306 -395.85403442]
[-219.86404419 -403.05569458]
[-206.06790161 -408.97271729]
[-191.77177429 -413.55154419]
[-177.10513306 -416.75067139]
[-162.20080566 -418.54113770]
[-147.19377136 -418.90673828]
[-132.21994019 -417.84414673]
[-117.41491699 -415.36303711]
[-102.91278076 -411.48580933]
[-88.84487152 -406.24758911]
[-75.33860016 -399.69586182]
[-62.51626968 -391.88992310]
[-50.49401093 -382.90048218]
[-39.38070297 -372.80895996]
[-29.27699089 -361.70669556]
[-20.27437782 -349.69430542]
[-12.45439529 -336.88055420]
[-5.88786268 -323.38143921]
[-0.63424921 -309.31930542]
[3.25886631 -294.82141113]
[5.75622654 -280.01913452]
[6.83521461 -265.04647827]
[6.48605824 -250.03903198]
[4.71191978 -235.13275146]
[1.52886677 -220.46261597]
[-3.03427434 -206.16148376]
[-8.93617725 -192.35887146]
[-16.12339401 -179.17976379]
[-24.53083229 -166.74354553]
[-34.08235168 -155.16281128]
[-44.69145203 -144.54246521]
[-56.26205444 -134.97868347]
[-47.84743500 -122.56118774]
[-39.43281555 -110.14369202]
[-31.01819611 -97.72619629]
[-22.60357857 -85.30870056]
[-14.18896008 -72.89120483]
[-5.77434111 -60.47370911]
[2.64027739 -48.05621338]
[19.75683403 -49.91682053]
[35.53924179 -42.81549454]
[45.60259247 -28.62631035]
[47.10095978 -11.20604610]
[39.53167343 4.65393782]
[48.31227493 16.81539345]
[57.09288025 28.97684860]
[72.76756287 25.86963463]
[88.28455353 29.92388153]
[100.52445984 40.37702179]
[107.00388336 55.17490768]
[106.37912750 71.37532043]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[122.26551056 117.33573151]
[131.22621155 129.36511230]
[140.71510315 140.98237610]
[150.71327209 152.16435242]
[165.67959595 157.29463196]
[168.39500427 171.93962097]
[178.39317322 183.12159729]
[188.39134216 194.30357361]
[200.34793091 185.23237610]
[212.99566650 177.15270996]
[226.25253296 170.11697388]
[240.03257751 164.17079163]
[254.24638367 159.35273743]
[268.80181885 155.69404602]
[283.60443115 153.21844482]
[298.55825806 151.94200134]
[313.56631470 151.87300110]
[328.53125000 153.01185608]
[343.35601807 155.35122681]
[357.94445801 158.87590027]
[372.20199585 163.56304932]
[386.03613281 169.38224792]
[399.35714722 176.29577637]
[412.07864380 184.25878906]
[424.11813354 193.21965027]
[435.39755249 203.12022400]
[445.84368896 213.89631653]
[455.38885498 225.47804260]
[463.97109985 237.79028320]
[471.53479004 250.75318909]
[478.03088379 264.28268433]
[483.41720581 278.29101562]
[487.65887451 292.68737793]
[490.72833252 307.37835693]
[492.60571289 322.26867676]
[493.27883911 337.26177979]
[492.74328613 352.26043701]
[491.00259399 367.16735840]
[488.06805420 381.88586426]
[483.95864868 396.32052612]
[478.70104980 410.37768555]
[472.32937622 423.96621704]
[464.88491821 436.99795532]
[456.41598511 449.38839722]
[446.97747803 461.05722046]
[436.63061523 471.92868042]
[425.44253540 481.93234253]
[413.48574829 491.00326538]
[400.83782959 499.08264160]
[387.58081055 506.11810303]
[373.80065918 512.06396484]
[359.58673096 516.88171387]
[345.03121948 520.54010010]
[330.22854614 523.01538086]
[315.27468872 524.29150391]
[300.26663208 524.36016846]
[285.30172729 523.22094727]
[270.47698975 520.88128662]
[255.88862610 517.35626221]
[241.63121033 512.66882324]
[227.79721069 506.84930420]
[214.47633362 499.93548584]
[201.75500488 491.97219849]
[189.71571350 483.01107788]
[178.43653870 473.11022949]
[167.99061584 462.33392334]
[158.44572449 450.75198364]
[149.86373901 438.43954468]
[142.30032349 425.47647095]
[135.80455017 411.94683838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 148]
[15 147]
[16 146]
[18 144]
[19 143]
[26 142]
[27 141]
[28 140]
[30 138]
[37 132]
[38 131]
[39 130]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
