%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[96.42052460 232.84072876]
[109.19235992 224.48350525]
[107.18834686 209.61798096]
[105.18433380 194.75245667]
[103.18032074 179.88693237]
[101.17630005 165.02139282]
[91.80799103 153.44194031]
[97.63220978 138.73176575]
[95.62819672 123.86624146]
[93.62418365 109.00070953]
[82.59250641 119.16447449]
[67.74549103 117.02764130]
[60.02780151 104.16539764]
[65.12863159 90.05931854]
[79.28784180 85.10787201]
[92.06688690 92.95970154]
[83.52190399 79.64453125]
[90.48794556 66.47929382]
[89.59513092 51.50588608]
[88.70231628 36.53248215]
[87.80950165 21.55907440]
[86.91668701 6.58566904]
[86.02386475 -8.38773632]
[85.13105011 -23.36114311]
[84.23823547 -38.33454895]
[83.34542084 -53.30795288]
[82.34116364 -68.27429962]
[81.22550964 -83.23274994]
[80.10986328 -98.19120789]
[78.99421692 -113.14965820]
[77.87856293 -128.10810852]
[62.88346481 -127.64136505]
[47.88222122 -127.82463074]
[32.90299988 -128.65756226]
[17.97391891 -130.13858032]
[3.12300849 -132.26493835]
[-11.62185001 -135.03260803]
[-26.23297501 -138.43641663]
[-40.68293762 -142.46997070]
[-54.94460678 -147.12568665]
[-68.99120331 -152.39482117]
[-82.79637146 -158.26750183]
[-96.33417511 -164.73269653]
[-109.57920837 -171.77825928]
[-122.50660706 -179.39097595]
[-135.09208679 -187.55653381]
[-147.31204224 -196.25961304]
[-159.14350891 -205.48388672]
[-170.56430054 -215.21202087]
[-181.55294800 -225.42576599]
[-192.08883667 -236.10592651]
[-202.15217590 -247.23246765]
[-211.72409058 -258.78448486]
[-220.78660583 -270.74032593]
[-229.32269287 -283.07751465]
[-237.31632996 -295.77288818]
[-244.75251770 -308.80261230]
[-251.61729431 -322.14224243]
[-257.89776611 -335.76672363]
[-263.58215332 -349.65048218]
[-268.65979004 -363.76745605]
[-273.12109375 -378.09112549]
[-276.95776367 -392.59460449]
[-280.16253662 -407.25067139]
[-282.72943115 -422.03179932]
[-284.65359497 -436.91024780]
[-285.93145752 -451.85809326]
[-286.56057739 -466.84725952]
[-286.53982544 -481.84960938]
[-285.86917114 -496.83697510]
[-284.54992676 -511.78121948]
[-282.58456421 -526.65429688]
[-279.97674561 -541.42828369]
[-276.73141479 -556.07537842]
[-272.85461426 -570.56817627]
[-268.35363770 -584.87945557]
[-263.23693848 -598.98229980]
[-257.51412964 -612.85028076]
[-251.19593811 -626.45733643]
[-244.29425049 -639.77789307]
[-236.82200623 -652.78698730]
[-228.79324341 -665.46014404]
[-220.22302246 -677.77368164]
[-211.12744141 -689.70434570]
[-201.52357483 -701.22985840]
[-191.42945862 -712.32849121]
[-180.86402893 -722.97943115]
[-169.84713745 -733.16265869]
[-158.39945984 -742.85913086]
[-146.54249573 -752.05059814]
[-134.29849243 -760.71984863]
[-121.69043732 -768.85052490]
[-108.74201202 -776.42736816]
[-95.47751617 -783.43627930]
[-81.92185974 -789.86395264]
[-68.10048676 -795.69836426]
[-54.03934860 -800.92858887]
[-39.76484299 -805.54479980]
[-25.30376816 -809.53833008]
[-10.68327332 -812.90167236]
[4.06919384 -815.62847900]
[18.92593575 -817.71368408]
[33.85905838 -819.15338135]
[48.84053040 -819.94482422]
[63.84222412 -820.08654785]
[78.83597565 -819.57824707]
[93.79363251 -818.42095947]
[108.68711853 -816.61682129]
[123.48847198 -814.16918945]
[138.16989136 -811.08264160]
[152.70384216 -807.36303711]
[167.06300354 -803.01733398]
[181.22044373 -798.05371094]
[195.14958191 -792.48144531]
[208.82424927 -786.31103516]
[222.21879578 -779.55401611]
[235.30805969 -772.22308350]
[248.06745911 -764.33209229]
[260.47305298 -755.89575195]
[272.50155640 -746.92993164]
[284.13040161 -737.45141602]
[295.33770752 -727.47814941]
[306.10247803 -717.02868652]
[316.40447998 -706.12274170]
[326.22436523 -694.78076172]
[335.54373169 -683.02404785]
[344.34503174 -670.87463379]
[352.61178589 -658.35540771]
[360.32849121 -645.48980713]
[367.48059082 -632.30200195]
[374.05471802 -618.81677246]
[380.03851318 -605.05938721]
[385.42074585 -591.05572510]
[390.19128418 -576.83203125]
[394.34118652 -562.41510010]
[397.86267090 -547.83184814]
[400.74914551 -533.10980225]
[402.99514771 -518.27648926]
[404.59649658 -503.35986328]
[405.55014038 -488.38784790]
[405.85433960 -473.38854980]
[405.50851440 -458.39016724]
[404.51330566 -443.42086792]
[402.87054443 -428.50872803]
[400.58337402 -413.68173218]
[397.65606689 -398.96771240]
[394.09408569 -384.39434814]
[389.90417480 -369.98895264]
[385.09417725 -355.77856445]
[379.67309570 -341.78991699]
[373.65112305 -328.04919434]
[367.03961182 -314.58227539]
[359.85089111 -301.41436768]
[352.09854126 -288.57025146]
[343.79705811 -276.07397461]
[334.96203613 -263.94906616]
[325.61007690 -252.21827698]
[315.75872803 -240.90359497]
[305.42651367 -230.02629089]
[294.63278198 -219.60676575]
[283.39782715 -209.66459656]
[271.74273682 -200.21846008]
[259.68939209 -191.28605652]
[247.26040649 -182.88418579]
[234.47914124 -175.02861023]
[221.36958313 -167.73406982]
[207.95632935 -161.01426697]
[194.26458740 -154.88182068]
[180.32003784 -149.34823608]
[166.14886475 -144.42391968]
[151.77769470 -140.11810303]
[137.23347473 -136.43885803]
[122.54354095 -133.39311218]
[107.73545837 -130.98657227]
[92.83702087 -129.22375488]
[93.95266724 -114.26530457]
[95.06831360 -99.30685425]
[96.18396759 -84.34840393]
[97.29961395 -69.38994598]
[100.93190002 -62.95346451]
[98.31882477 -54.20077133]
[99.21163940 -39.22736359]
[100.10446167 -24.25395775]
[100.99727631 -9.28055286]
[101.89009094 5.69285345]
[102.78290558 20.66625977]
[103.67572021 35.63966370]
[104.56853485 50.61307144]
[105.46135712 65.58647919]
[113.94247437 77.83065033]
[107.04029846 92.06688690]
[108.48971558 106.99669647]
[110.49372864 121.86222839]
[112.49774170 136.72775269]
[122.00939178 149.37049866]
[116.04183197 163.01737976]
[118.04584503 177.88291931]
[120.04985809 192.74844360]
[122.05387115 207.61396790]
[124.05788422 222.47949219]
[138.58682251 227.15631104]
[149.64184570 237.68006897]
[155.02795410 251.96125793]
[153.67573547 267.16436768]
[145.85366821 280.27078247]
[133.11485291 288.67822266]
[117.98856354 290.71737671]
[103.47814941 285.98339844]
[92.46466064 275.41619873]
[87.13483429 261.11389160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[8 194]
[9 193]
[10 192]
[16 191]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
