%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[96.01280975 718.13226318]
[81.42098999 714.62841797]
[67.12004089 710.08087158]
[53.18451309 704.51318359]
[39.68706894 697.95446777]
[26.69807053 690.43890381]
[14.28524303 682.00567627]
[2.51329899 672.69873047]
[-8.55638695 662.56658936]
[-18.86610222 651.66217041]
[-28.36209488 640.04217529]
[-36.99485779 627.76727295]
[-44.71938705 614.90142822]
[-51.49540329 601.51177979]
[-57.28757858 587.66802979]
[-62.06572342 573.44250488]
[-65.80492401 558.90917969]
[-68.48567963 544.14398193]
[-70.09401703 529.22381592]
[-70.62155151 514.22650146]
[-70.06552887 499.23022461]
[-68.42885590 484.31317139]
[-65.72006226 469.55307007]
[-61.95326996 455.02691650]
[-57.14811707 440.81045532]
[-51.32965469 426.97775269]
[-44.52822113 413.60098267]
[-36.77927017 400.74984741]
[-28.12320900 388.49136353]
[-18.60516357 376.88943481]
[-8.27475643 366.00457764]
[2.81415367 355.89349365]
[14.60375309 346.60894775]
[27.03257561 338.19931030]
[40.03582382 330.70840454]
[53.54570389 324.17535400]
[67.49177551 318.63415527]
[81.80133820 314.11373901]
[96.39978790 310.63766479]
[111.21100616 308.22402954]
[109.87276459 293.28384399]
[108.53453064 278.34365845]
[107.19629669 263.40347290]
[105.74687958 248.47366333]
[96.72748566 236.62040710]
[102.98709869 222.09017944]
[101.42658234 207.17156982]
[89.40077209 203.29881287]
[79.69718170 195.13540649]
[73.78009796 183.86705017]
[72.55982971 171.15130615]
[76.25283051 158.87382507]
[84.34432220 148.86866760]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[88.26617432 43.51276398]
[87.15052032 28.55431175]
[84.21013641 24.24140167]
[83.30831146 19.68728065]
[84.19554901 15.70885849]
[86.33430481 12.90563202]
[85.88770294 -2.08771777]
[85.44109344 -17.08106804]
[75.40233612 -32.51819229]
[84.31694794 -47.63429642]
[83.64716339 -62.61933517]
[80.83649445 -67.01788330]
[80.07065582 -71.59683228]
[81.07595825 -75.54707336]
[83.29722595 -78.28537750]
[83.29722595 -93.28537750]
[83.29722595 -108.28537750]
[83.29722595 -123.28537750]
[83.29722595 -138.28538513]
[83.29722595 -153.28538513]
[83.29722595 -168.28538513]
[69.08880615 -173.51472473]
[57.54846191 -183.27139282]
[50.05658340 -196.36306763]
[47.50063705 -211.20008850]
[50.17008972 -225.98844910]
[57.72376251 -238.94670105]
[69.23329926 -248.52061462]
[83.29722595 -253.56948853]
[83.29722595 -268.56948853]
[83.29722595 -283.56948853]
[83.29722595 -298.56948853]
[68.60864258 -301.91510010]
[55.03302765 -308.44583130]
[43.25132751 -317.83407593]
[33.85451126 -329.60894775]
[27.31391907 -343.17984009]
[23.95762253 -357.86596680]
[23.95397186 -372.93075562]
[27.30315208 -387.61853027]
[33.83716583 -401.19256592]
[43.22827530 -412.97198486]
[55.00542450 -422.36596680]
[68.57787323 -428.90325928]
[83.26483917 -432.25601196]
[98.32962036 -432.25601196]
[113.01658630 -428.90325928]
[126.58903503 -422.36596680]
[138.36618042 -412.97198486]
[147.75729370 -401.19256592]
[154.29130554 -387.61853027]
[157.64048767 -372.93075562]
[157.63684082 -357.86596680]
[154.28053284 -343.17984009]
[147.73994446 -329.60894775]
[138.34312439 -317.83407593]
[126.56143188 -308.44583130]
[112.98581696 -301.91510010]
[98.29722595 -298.56948853]
[98.29722595 -283.56948853]
[98.29722595 -268.56948853]
[98.29722595 -253.56948853]
[112.36116028 -248.52061462]
[123.87069702 -238.94670105]
[131.42436218 -225.98844910]
[134.09382629 -211.20008850]
[131.53787231 -196.36306763]
[124.04599762 -183.27139282]
[112.50565338 -173.51472473]
[98.29722595 -168.28538513]
[98.29722595 -153.28538513]
[98.29722595 -138.28538513]
[98.29722595 -123.28537750]
[98.29722595 -108.28537750]
[98.29722595 -93.28537750]
[98.29722595 -78.28537750]
[98.63220215 -63.28911972]
[99.30198669 -48.30408096]
[108.01435089 -39.91233826]
[108.69499207 -27.43353462]
[100.43444061 -17.52767372]
[100.88105011 -2.53432369]
[101.32765198 12.45902634]
[102.10897827 27.43866348]
[103.22462463 42.39711761]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[126.62321472 148.78631592]
[136.69659424 163.07749939]
[138.13693237 180.41328430]
[130.63734436 196.01039124]
[116.34518433 205.61103821]
[117.90570831 220.52964783]
[127.03672028 233.44998169]
[120.66548920 246.91314697]
[124.67070007 255.12265015]
[122.13648224 262.06524658]
[123.47471619 277.00543213]
[124.81295013 291.94561768]
[126.15118408 306.88580322]
[141.15557861 306.62875366]
[156.13940430 307.45507812]
[171.02453613 309.36044312]
[185.73338318 312.33493042]
[200.18925476 316.36303711]
[214.31678772 321.42373657]
[228.04231262 327.49066162]
[241.29428101 334.53216553]
[254.00361633 342.51156616]
[266.10403442 351.38723755]
[277.53244019 361.11294556]
[288.22927856 371.63790894]
[298.13879395 382.90734863]
[307.20925903 394.86242676]
[315.39343262 407.44085693]
[322.64865112 420.57705688]
[328.93707275 434.20254517]
[334.22589111 448.24624634]
[338.48757935 462.63497925]
[341.69985962 477.29373169]
[343.84606934 492.14605713]
[344.91491699 507.11453247]
[344.90090942 522.12115479]
[343.80407715 537.08758545]
[341.63018799 551.93585205]
[338.39050293 566.58862305]
[334.10195923 580.96936035]
[328.78689575 595.00317383]
[322.47305298 608.61688232]
[315.19332886 621.73950195]
[306.98568726 634.30261230]
[297.89288330 646.24078369]
[287.96237183 657.49163818]
[277.24588013 667.99664307]
[265.79931641 677.70098877]
[253.68234253 686.55401611]
[240.95814514 694.50970459]
[227.69303894 701.52642822]
[213.95620728 707.56774902]
[199.81925964 712.60205078]
[185.35588074 716.60308838]
[170.64151001 719.55010986]
[155.75283813 721.42767334]
[140.76750183 722.22601318]
[125.76361847 721.94097900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 165]
[41 164]
[42 163]
[43 162]
[44 160]
[46 158]
[47 157]
[54 152]
[55 151]
[56 150]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[66 143]
[67 142]
[68 141]
[70 138]
[71 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
