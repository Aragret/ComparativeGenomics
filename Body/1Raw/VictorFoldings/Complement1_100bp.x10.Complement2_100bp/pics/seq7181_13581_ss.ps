%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[73.96070099 601.16784668]
[60.74412155 594.04467773]
[48.34453583 585.57897949]
[36.89780045 575.86352539]
[26.52932739 565.00476074]
[17.35272217 553.12164307]
[9.46852779 540.34448242]
[2.96312952 526.81311035]
[-2.09219742 512.67584229]
[-5.64206362 498.08764648]
[-7.64757538 483.20828247]
[-8.08675861 468.20077515]
[-6.95480156 453.22961426]
[-4.26410675 438.45877075]
[-0.04415472 424.05007935]
[5.65881824 410.16146851]
[12.78232765 396.94506836]
[21.24832344 384.54568481]
[30.96405029 373.09918213]
[41.82305527 362.73098755]
[53.70635986 353.55465698]
[66.48376465 345.67077637]
[80.01527405 339.16571045]
[94.15263367 334.11071777]
[108.74093628 330.56121826]
[106.73692322 315.69567871]
[104.73291016 300.83016968]
[102.72889709 285.96463013]
[98.71994781 279.75576782]
[100.80741119 270.86303711]
[99.02494812 255.96932983]
[96.49402618 253.51437378]
[95.02643585 249.71159363]
[95.24272156 245.07408142]
[97.51079559 240.37269592]
[96.39514160 225.41424561]
[87.73266602 213.29769897]
[94.42212677 198.96028137]
[93.30647278 184.00183105]
[92.19082642 169.04336548]
[91.07518005 154.08491516]
[82.06726837 166.07897949]
[67.76409912 170.59776306]
[53.50040817 165.95588684]
[44.59619141 153.88464355]
[44.37250900 138.88630676]
[52.91278458 126.55489349]
[67.03170776 121.48971558]
[81.46326447 125.57995605]
[90.82526398 137.30114746]
[91.49504852 122.31610870]
[92.16483307 107.33106995]
[90.49329376 92.42449188]
[86.52120209 77.95996857]
[82.54910278 63.49544525]
[78.57700348 49.03092194]
[74.49733734 34.59637070]
[70.31032562 20.19258881]
[66.12331390 5.78880596]
[60.72286606 -1.57821155]
[61.98291016 -8.86066246]
[58.01081085 -23.32518578]
[55.18144989 -8.59444618]
[49.18714905 5.15576792]
[40.32039261 17.25455284]
[29.01379967 27.11157990]
[15.81905174 34.24590683]
[1.37994611 38.30942917]
[-13.59900093 39.10388565]
[-28.38693237 36.59050369]
[-42.26231384 30.89192390]
[-54.54813004 22.28619194]
[-64.64493561 11.19319630]
[-72.06008148 -1.84580696]
[-76.43177032 -16.19461823]
[-77.54668427 -31.15312576]
[-75.35044098 -45.99147034]
[-69.95019531 -59.98566055]
[-61.60942841 -72.45288086]
[-50.73511505 -82.78483582]
[-37.85783386 -90.47740173]
[-23.60589218 -95.15525055]
[-8.67467880 -96.59012604]
[6.20728064 -94.71202087]
[20.31386375 -89.61257935]
[32.95677567 -81.54060364]
[43.51914597 -70.88995361]
[51.48561096 -58.18029404]
[56.46596909 -44.03820038]
[58.24843597 -58.93191910]
[60.03090286 -73.82563782]
[61.81336594 -88.71935272]
[63.59583282 -103.61306763]
[57.55324554 -118.23489380]
[66.74811554 -129.95256042]
[55.68595123 -143.50422668]
[57.80564499 -160.52838135]
[71.31085968 -170.55075073]
[72.87138367 -185.46934509]
[74.43190765 -200.38795471]
[60.69067764 -206.74856567]
[49.76099777 -217.22810364]
[42.82843781 -230.68984985]
[40.64498901 -245.67353821]
[43.44749832 -260.55389404]
[50.93196487 -273.71676636]
[62.28653717 -283.73437500]
[76.27954865 -289.52008057]
[91.39315033 -290.44625854]
[105.98792267 -286.41250610]
[118.48074341 -277.85632324]
[127.51647186 -265.70584106]
[132.11499023 -251.27905273]
[131.77749634 -236.14085388]
[126.54056549 -221.93334961]
[116.97229767 -210.19763184]
[104.11055756 -202.20674133]
[89.35050964 -198.82743835]
[87.78998566 -183.90882874]
[86.22946167 -168.99021912]
[95.66405487 -160.21423340]
[98.36161041 -147.41558838]
[93.11805725 -135.22068787]
[81.64183807 -128.17008972]
[87.81192017 -114.61356354]
[78.48954773 -101.83060455]
[76.70708466 -86.93688965]
[74.92462158 -72.04316711]
[73.14215088 -57.14945221]
[71.35968781 -42.25573730]
[72.47533417 -27.29728127]
[76.44743347 -12.83275795]
[80.52709961 1.60179472]
[84.71411133 16.00557709]
[88.90112305 30.40935898]
[93.78675079 35.95484543]
[93.04152679 45.05882645]
[97.01362610 59.52334976]
[100.98572540 73.98787689]
[104.95781708 88.45240021]
[107.94052124 73.75193787]
[114.72953033 60.37623978]
[124.83473969 49.29090118]
[137.52664185 41.29618073]
[151.88900757 36.96923065]
[166.88499451 36.62241364]
[181.43203735 40.28076553]
[194.47998047 47.68018723]
[205.08685303 58.28651047]
[212.48695374 71.33405304]
[216.14607239 85.88090515]
[215.80004883 100.87691498]
[211.47384644 115.23950958]
[203.47979736 127.93183136]
[192.39498901 138.03762817]
[179.01963806 144.82733154]
[164.31933594 147.81080627]
[149.35530090 146.77265930]
[135.20780945 141.78785706]
[122.89817047 133.21621704]
[113.31503296 121.67657471]
[107.14987183 108.00085449]
[106.48008728 122.98589325]
[105.81030273 137.97093201]
[106.03363037 152.96926880]
[107.14928436 167.92771912]
[108.26493073 182.88616943]
[109.38057709 197.84463501]
[118.12285614 211.03109741]
[111.35359955 224.29859924]
[112.46924591 239.25704956]
[113.91866302 254.18685913]
[115.70113373 269.08056641]
[117.59442139 283.96060181]
[119.59843445 298.82614136]
[121.60245514 313.69168091]
[123.60646820 328.55718994]
[138.61392212 328.11691284]
[153.58518982 329.24777222]
[168.35623169 331.93740845]
[182.76521301 336.15631104]
[196.65425110 341.85827637]
[209.87117004 348.98080444]
[222.27116394 357.44589233]
[233.71836853 367.16079712]
[244.08737183 378.01904297]
[253.26455688 389.90167236]
[261.14938354 402.67852783]
[267.65542603 416.20956421]
[272.71145630 430.34652710]
[276.26202393 444.93460083]
[278.26824951 459.81384277]
[278.70816040 474.82131958]
[277.57693481 489.79257202]
[274.88696289 504.56353760]
[270.66769409 518.97241211]
[264.96539307 532.86132812]
[257.84252930 546.07806396]
[249.37715149 558.47784424]
[239.66197205 569.92480469]
[228.80348206 580.29357910]
[216.92060852 589.47045898]
[204.14360046 597.35498047]
[190.61239624 603.86071777]
[176.47528076 608.91638184]
[161.88716125 612.46655273]
[147.00782776 614.47247314]
[132.00035095 614.91198730]
[117.02913666 613.78039551]
[102.25823212 611.09008789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 177]
[26 176]
[27 175]
[28 174]
[30 173]
[31 172]
[35 171]
[36 170]
[38 168]
[39 167]
[40 166]
[41 165]
[50 164]
[51 163]
[52 162]
[53 140]
[54 139]
[55 138]
[56 137]
[57 135]
[58 134]
[59 133]
[61 132]
[62 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[95 124]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
