%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[158.06288147 456.26098633]
[160.70246887 441.46981812]
[165.37498474 427.18997192]
[171.98944092 413.69943237]
[180.41712952 401.26077271]
[190.49398804 390.11611938]
[202.02384949 380.48242188]
[214.78230286 372.54718018]
[208.70846558 358.83190918]
[202.63464355 345.11663818]
[196.56080627 331.40136719]
[190.48696899 317.68609619]
[182.73083496 330.52520752]
[167.87748718 332.61761475]
[156.87626648 322.42089844]
[157.83686829 307.45166016]
[170.05116272 298.74472046]
[184.51397705 302.71740723]
[179.47706604 288.58837891]
[174.44015503 274.45932007]
[168.57118225 260.65515137]
[161.89099121 247.22477722]
[155.21080017 233.79440308]
[148.53060913 220.36402893]
[141.75061035 206.98374939]
[134.87120056 193.65432739]
[122.15853882 185.89305115]
[122.70498657 170.08128357]
[115.82556915 156.75184631]
[110.24479675 170.67503357]
[96.50823212 176.70053101]
[82.48480225 171.37667847]
[76.20776367 157.75321960]
[81.27289581 143.63427734]
[94.77865601 137.10783386]
[108.98761749 141.91191101]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.25339508 49.94670105]
[65.17956543 36.23143387]
[59.00379562 22.56176376]
[52.72643661 8.93844700]
[46.44907379 -4.68486881]
[42.90756607 9.89106083]
[32.12163162 20.31524467]
[17.43341064 23.35763741]
[3.39420772 18.07551956]
[-5.64577770 6.10561323]
[-6.88540745 -8.84307671]
[0.05943153 -22.13853455]
[13.03680515 -29.66102028]
[28.02553368 -29.07960701]
[40.38135910 -20.57425499]
[35.98035812 -34.91410065]
[31.57936096 -49.25394821]
[27.17836380 -63.59379578]
[22.77736473 -77.93363953]
[18.37636757 -92.27349091]
[13.97536945 -106.61333466]
[9.57437134 -120.95318604]
[5.17337322 -135.29302979]
[-5.83501244 -142.01451111]
[-9.20539856 -154.04879761]
[-3.65617681 -164.79742432]
[-7.84318781 -179.20120239]
[-19.12504578 -190.29310608]
[-15.24790192 -204.67424011]
[-30.73045731 -212.81732178]
[-35.44068909 -229.31364441]
[-26.93352127 -243.82112122]
[-31.33452034 -258.16094971]
[-35.73551941 -272.50079346]
[-50.61816025 -270.39047241]
[-65.64769745 -270.63442993]
[-80.45401001 -273.22662354]
[-94.67248535 -278.10324097]
[-107.95298004 -285.14419556]
[-119.96845245 -294.17608643]
[-130.42300415 -304.97650146]
[-139.05917358 -317.27947998]
[-145.66430664 -330.78201294]
[-150.07574463 -345.15161133]
[-152.18482971 -360.03445435]
[-151.93965149 -375.06396484]
[-149.34622192 -389.87005615]
[-144.46842957 -404.08813477]
[-137.42639160 -417.36804199]
[-128.39350891 -429.38275146]
[-117.59223175 -439.83642578]
[-105.28855896 -448.47158813]
[-91.78546906 -455.07559204]
[-77.41548920 -459.48583984]
[-62.53250122 -461.59371948]
[-47.50300217 -461.34729004]
[-32.69711685 -458.75265503]
[-18.47944450 -453.87368774]
[-5.20011234 -446.83053589]
[6.81386423 -437.79666138]
[17.26663017 -426.99453735]
[25.90077782 -414.69015503]
[32.50368118 -401.18649292]
[36.91274261 -386.81616211]
[39.01937866 -371.93301392]
[38.77171707 -356.90353394]
[36.17584991 -342.09783936]
[31.29571152 -327.88058472]
[24.25147438 -314.60183716]
[15.21660995 -302.58859253]
[4.41361046 -292.13671875]
[-7.89149141 -283.50360107]
[-21.39566994 -276.90179443]
[-16.99467278 -262.56195068]
[-12.59367466 -248.22210693]
[-0.47749448 -243.83717346]
[7.01265717 -233.11431885]
[6.95854950 -219.83999634]
[-0.84411979 -208.86125183]
[10.13825512 -198.79960632]
[6.56059408 -183.38821411]
[10.74760532 -168.98443604]
[24.05158615 -157.54017639]
[19.51321983 -139.69403076]
[23.91421890 -125.35417938]
[28.31521606 -111.01433563]
[32.71621323 -96.67449188]
[37.11721420 -82.33464050]
[41.51821136 -67.99479675]
[45.91920853 -53.65494537]
[50.32020569 -39.31509781]
[54.72120667 -24.97525215]
[60.07239151 -10.96222973]
[66.34975433 2.66108656]
[72.62711334 16.28440285]
[78.28131104 21.04379654]
[78.89482880 30.15760040]
[84.96866608 43.87286758]
[89.02216339 46.39837646]
[91.53218079 51.49708557]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[122.87763977 136.24913025]
[129.15499878 149.87243652]
[136.03440857 163.20187378]
[149.23913574 171.91656494]
[148.20062256 186.77491760]
[155.08004761 200.10433960]
[161.79670715 206.29499817]
[161.96098328 213.68383789]
[168.64117432 227.11421204]
[175.32136536 240.54458618]
[182.00157166 253.97496033]
[185.81492615 239.46778870]
[197.35374451 229.88365173]
[212.31434631 228.79722595]
[225.11679077 236.61372375]
[230.98608398 250.41775513]
[227.73312378 265.06079102]
[216.57118225 275.08129883]
[201.66337585 276.74194336]
[188.56918335 269.42242432]
[193.60609436 283.55145264]
[198.64300537 297.68048096]
[204.20223999 311.61227417]
[210.27607727 325.32754517]
[216.34989929 339.04281616]
[222.42373657 352.75808716]
[228.49757385 366.47332764]
[242.94812012 362.35900879]
[257.83065796 360.29592896]
[272.85546875 360.32424927]
[287.73013306 362.44342041]
[302.16506958 366.61221313]
[315.87930298 372.74942017]
[328.60592651 380.73565674]
[340.09713745 390.41540527]
[350.12933350 401.60031128]
[358.50717163 414.07257080]
[365.06759644 427.58947754]
[369.68295288 441.88790894]
[372.26330566 456.68951416]
[372.75851440 471.70620728]
[371.15890503 486.64566040]
[367.49563599 501.21710205]
[361.83996582 515.13684082]
[354.30203247 528.13397217]
[345.02853394 539.95550537]
[334.19998169 550.37133789]
[322.02719116 559.17864990]
[308.74707031 566.20605469]
[294.61816406 571.31677246]
[279.91543579 574.41131592]
[264.92510986 575.42944336]
[249.93899536 574.35137939]
[235.24877930 571.19799805]
[221.14041138 566.03082275]
[207.88851929 558.95031738]
[195.75106812 550.09429932]
[184.96429443 539.63525391]
[175.73817444 527.77673340]
[168.25228882 514.74957275]
[162.65237427 500.80728149]
[159.04742432 486.22131348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[18 170]
[19 169]
[20 168]
[21 159]
[22 158]
[23 157]
[24 156]
[25 154]
[26 153]
[28 151]
[29 150]
[36 149]
[37 148]
[38 147]
[40 145]
[41 144]
[42 143]
[43 140]
[44 139]
[45 137]
[46 136]
[47 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[68 124]
[69 123]
[71 121]
[74 117]
[75 116]
[76 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
