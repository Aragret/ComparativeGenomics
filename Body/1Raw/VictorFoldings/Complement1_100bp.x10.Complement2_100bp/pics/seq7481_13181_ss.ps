%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[93.55474091 521.83532715]
[79.22729492 526.59204102]
[64.14772797 527.30578613]
[49.43505859 523.92352295]
[36.18105698 516.69616699]
[25.36925888 506.16018677]
[17.80197144 493.09729004]
[14.04073715 478.47689819]
[14.36466599 463.38394165]
[18.74971962 448.93838501]
[26.87049675 436.21221924]
[38.12438583 426.14978027]
[51.67626953 419.49780273]
[66.52050781 416.74984741]
[67.85874176 401.80966187]
[69.19697571 386.86947632]
[70.42395020 371.91973877]
[71.42820740 356.95339966]
[72.32102966 341.98001099]
[73.21384430 327.00659180]
[61.60826111 317.70883179]
[57.65622330 303.18832397]
[63.07554626 288.95861816]
[75.98381805 280.55133057]
[76.87664032 265.57791138]
[77.76945496 250.60450745]
[78.66226959 235.63110352]
[79.55508423 220.65769958]
[80.44789886 205.68429565]
[78.69023132 203.50054932]
[77.69167328 200.48898315]
[77.77185059 196.93525696]
[79.14118958 193.23533630]
[81.86582184 189.85446167]
[83.64829254 174.96073914]
[85.43075562 160.06701660]
[87.21321869 145.17330933]
[81.04313660 131.61677551]
[90.36550903 118.83381653]
[92.14797211 103.94010162]
[90.47402954 101.39305878]
[89.68985748 98.18064880]
[90.04367828 94.63124084]
[91.65893555 91.16033173]
[94.50558472 88.22273254]
[97.17138672 73.46150970]
[99.83718109 58.70029449]
[102.50297546 43.93907547]
[105.16876984 29.17786026]
[107.83456421 14.41664219]
[110.28029633 -0.38262826]
[112.50540924 -15.21667194]
[106.90084839 -30.01192284]
[116.44052124 -41.45062256]
[118.66564178 -56.28466797]
[120.89075470 -71.11871338]
[122.11772919 -86.06844330]
[122.34105682 -101.06678009]
[122.56438446 -116.06511688]
[122.78771210 -131.06346130]
[120.24382782 -135.62149048]
[119.75189972 -140.23791504]
[120.99053955 -144.12132263]
[123.37085724 -146.72254944]
[124.26367188 -161.69595337]
[125.15648651 -176.66937256]
[126.04930878 -191.64277649]
[126.94212341 -206.61618042]
[116.72953796 -218.37802124]
[117.84828186 -233.55046082]
[129.12434387 -243.21411133]
[130.01715088 -258.18753052]
[130.90997314 -273.16091919]
[121.35541534 -261.59759521]
[107.33407593 -256.26824951]
[92.51110077 -258.56591797]
[80.76117706 -267.89004517]
[75.15570068 -281.80331421]
[77.15994263 -296.66879272]
[86.24998474 -308.60073853]
[100.04972839 -314.48013306]
[114.95193481 -312.77011108]
[127.06121826 -303.91769409]
[133.21208191 -290.23776245]
[136.31619263 -304.91305542]
[139.42030334 -319.58834839]
[125.18798065 -324.37976074]
[111.60815430 -330.79104614]
[98.86447906 -338.73556519]
[87.12929535 -348.10583496]
[76.56130219 -358.77514648]
[67.30342865 -370.59918213]
[59.48088074 -383.41809082]
[53.19943619 -397.05847168]
[48.54405594 -411.33587646]
[45.57769394 -426.05718994]
[44.34046555 -441.02334595]
[44.84910202 -456.03192139]
[47.09672928 -470.87997437]
[51.05295181 -485.36669922]
[56.66425705 -499.29614258]
[63.85477066 -512.47998047]
[72.52723694 -524.73986816]
[82.56437683 -535.91003418]
[93.83045197 -545.83935547]
[106.17310333 -554.39361572]
[119.42539978 -561.45715332]
[133.40812683 -566.93438721]
[147.93218994 -570.75122070]
[162.80114746 -572.85607910]
[177.81393433 -573.22045898]
[192.76750183 -571.83953857]
[207.45964050 -568.73181152]
[221.69165039 -563.93951416]
[235.27104187 -557.52728271]
[248.01419067 -549.58190918]
[259.74874878 -540.21087646]
[270.31604004 -529.54083252]
[279.57312012 -517.71618652]
[287.39480591 -504.89675903]
[293.67535400 -491.25595093]
[298.32977295 -476.97827148]
[301.29516602 -462.25674438]
[302.53137207 -447.29049683]
[302.02172852 -432.28195190]
[299.77313232 -417.43405151]
[295.81594849 -402.94760132]
[290.20370483 -389.01852417]
[283.01229858 -375.83517456]
[274.33901978 -363.57586670]
[264.30114746 -352.40640259]
[253.03439331 -342.47778320]
[240.69117737 -333.92434692]
[227.43841553 -326.86172485]
[213.45532227 -321.38543701]
[198.93099976 -317.56954956]
[184.06190491 -315.46569824]
[169.04908752 -315.10226440]
[154.09561157 -316.48425293]
[150.99150085 -301.80892944]
[147.88739014 -287.13363647]
[145.88337708 -272.26809692]
[144.99055481 -257.29470825]
[144.09774780 -242.32130432]
[154.14555359 -231.38616943]
[153.45341492 -216.18829346]
[141.91552734 -205.72335815]
[141.02270508 -190.74995422]
[140.12989807 -175.77655029]
[139.23707581 -160.80314636]
[138.34426880 -145.82974243]
[137.78605652 -130.84013367]
[137.56272888 -115.84178925]
[137.33940125 -100.84345245]
[137.11607361 -85.84511566]
[146.60643005 -97.46118164]
[160.83705139 -102.20349121]
[175.39842224 -98.60256958]
[185.77853394 -87.77422333]
[188.76100159 -73.07371521]
[183.42167664 -59.05616760]
[171.41500854 -50.06506729]
[156.46139526 -48.88640594]
[143.19436646 -55.88540268]
[135.72479248 -68.89359283]
[133.49967957 -54.05955124]
[131.27456665 -39.22550583]
[137.03828430 -25.49128532]
[127.33945465 -12.99155521]
[125.11433411 1.84248888]
[127.18229675 6.14743710]
[126.56787109 11.79717159]
[122.59577942 17.08243752]
[119.92998505 31.84365463]
[117.26419067 46.60487366]
[114.59839630 61.36608887]
[111.93260193 76.12730408]
[109.26680756 90.88852692]
[107.04168701 105.72256470]
[105.25922394 120.61628723]
[111.30181122 135.23811340]
[102.10694122 146.95576477]
[100.32447052 161.84948730]
[98.54200745 176.74320984]
[96.75953674 191.63691711]
[95.42130280 206.57710266]
[94.52848816 221.55050659]
[93.63567352 236.52391052]
[92.74285889 251.49732971]
[91.85004425 266.47073364]
[90.95722961 281.44412231]
[102.77499390 291.32577515]
[106.46498871 306.09863281]
[100.81546021 320.04663086]
[88.18724823 327.89941406]
[87.29443359 342.87283325]
[86.40161896 357.84622192]
[89.01468658 366.59890747]
[85.38240814 373.03540039]
[87.86487579 381.82601929]
[84.13716125 388.20773315]
[82.79892731 403.14791870]
[81.46069336 418.08810425]
[95.58026886 423.43038940]
[107.73423004 432.38494873]
[117.02067566 444.28723145]
[122.75048828 458.25402832]
[124.49847412 473.24893188]
[122.13493347 488.15921021]
[115.83524323 501.87841797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[17 199]
[18 197]
[19 196]
[20 195]
[24 191]
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[34 185]
[35 184]
[36 183]
[37 182]
[39 180]
[40 179]
[45 178]
[46 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 170]
[52 169]
[54 167]
[55 166]
[56 165]
[57 155]
[58 154]
[59 153]
[60 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[71 144]
[72 143]
[73 142]
[84 141]
[85 140]
[86 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
