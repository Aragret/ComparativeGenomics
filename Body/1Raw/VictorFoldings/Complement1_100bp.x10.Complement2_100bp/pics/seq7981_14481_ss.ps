%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[99.06246185 227.53811646]
[103.52938843 241.88748169]
[105.80766296 256.74234009]
[105.84638214 271.77084351]
[103.64468384 286.63726807]
[99.25175476 301.00946045]
[92.76573944 314.56634521]
[84.33153534 327.00506592]
[74.13755798 338.04772949]
[62.41155624 347.44766235]
[49.41548538 354.99484253]
[35.43968582 360.52066040]
[20.79637909 363.90167236]
[5.81270456 365.06234741]
[-9.17659664 363.97674561]
[-23.83665848 360.66915894]
[-37.83996964 355.21343994]
[-50.87369537 347.73147583]
[-62.64664841 338.39041138]
[-72.89582062 327.39895630]
[-81.39225006 315.00265503]
[-87.94611359 301.47842407]
[-92.41099548 287.12844849]
[-94.68714905 272.27325439]
[-94.72373199 257.24472046]
[-92.51991272 242.37863159]
[-88.12494659 228.00706482]
[-81.63699341 214.45109558]
[-73.20101929 202.01358032]
[-63.00547028 190.97236633]
[-51.27812576 181.57411194]
[-38.28098297 174.02879333]
[-24.30439377 168.50495911]
[-9.66060734 165.12603760]
[5.32323170 163.96749878]
[20.31237793 165.05522156]
[34.97196960 168.36489868]
[48.97450256 173.82261658]
[56.44224548 160.81367493]
[63.90998840 147.80471802]
[71.37773132 134.79576111]
[78.84546661 121.78681183]
[86.31320953 108.77786255]
[85.83865356 92.01029968]
[100.43589020 83.74610901]
[107.70912170 70.62741089]
[114.98234558 57.50871658]
[104.89372253 44.98961258]
[100.39250946 29.59449768]
[102.13957214 13.68904400]
[109.83798218 -0.29445776]
[122.28301239 -10.22904968]
[137.55056763 -14.61661339]
[153.29463196 -12.81373215]
[160.37173462 -26.03925896]
[167.44885254 -39.26478577]
[154.56983948 -46.95994949]
[142.06860352 -55.25473022]
[129.97303772 -64.13062286]
[118.31011200 -73.56781769]
[107.10587311 -83.54525757]
[96.38532257 -94.04068756]
[86.17236328 -105.03067780]
[76.48979950 -116.49069977]
[67.35923004 -128.39520264]
[58.80103302 -140.71760559]
[50.83430481 -153.43040466]
[43.47681808 -166.50526428]
[36.74499512 -179.91297913]
[30.65385437 -193.62364197]
[25.21698952 -207.60665894]
[20.44653130 -221.83082581]
[16.35312462 -236.26441956]
[12.94590282 -250.87519836]
[10.23247051 -265.63058472]
[8.21888161 -280.49765015]
[6.90962839 -295.44323730]
[6.30763340 -310.43395996]
[6.41423941 -325.43640137]
[7.22920847 -340.41705322]
[8.75072289 -355.34249878]
[10.97538567 -370.17947388]
[13.89823532 -384.89480591]
[17.51274681 -399.45568848]
[21.81085777 -413.82965088]
[26.78297615 -427.98458862]
[32.41800690 -441.88894653]
[38.70337677 -455.51165771]
[45.62505722 -468.82235718]
[53.16760635 -481.79132080]
[61.31419754 -494.38961792]
[70.04664612 -506.58917236]
[79.34546661 -518.36273193]
[89.18991089 -529.68395996]
[99.55801392 -540.52770996]
[110.42664337 -550.86975098]
[121.77153778 -560.68695068]
[133.56739807 -569.95745850]
[145.78788757 -578.66052246]
[158.40573120 -586.77685547]
[171.39279175 -594.28820801]
[184.72009277 -601.17785645]
[198.35786438 -607.43048096]
[212.27571106 -613.03210449]
[226.44256592 -617.97015381]
[240.82681274 -622.23370361]
[255.39634705 -625.81323242]
[270.11865234 -628.70068359]
[284.96093750 -630.88970947]
[299.88998413 -632.37536621]
[314.87255859 -633.15429688]
[329.87521362 -633.22485352]
[344.86444092 -632.58685303]
[359.80682373 -631.24163818]
[374.66903687 -629.19232178]
[389.41784668 -626.44348145]
[404.02041626 -623.00115967]
[418.44412231 -618.87304688]
[432.65676880 -614.06842041]
[446.62667847 -608.59796143]
[460.32266235 -602.47387695]
[473.71417236 -595.70989990]
[486.77130127 -588.32098389]
[499.46493530 -580.32373047]
[511.76672363 -571.73596191]
[523.64923096 -562.57678223]
[535.08599854 -552.86669922]
[546.05139160 -542.62738037]
[556.52099609 -531.88159180]
[566.47149658 -520.65344238]
[575.88061523 -508.96786499]
[584.72741699 -496.85101318]
[592.99212646 -484.32986450]
[600.65631104 -471.43240356]
[607.70288086 -458.18740845]
[614.11608887 -444.62438965]
[619.88165283 -430.77368164]
[624.98669434 -416.66610718]
[629.41979980 -402.33322144]
[633.17108154 -387.80697632]
[636.23217773 -373.11975098]
[638.59631348 -358.30438232]
[640.25811768 -343.39389038]
[641.21392822 -328.42156982]
[641.46166992 -313.42080688]
[641.00067139 -298.42507935]
[639.83203125 -283.46786499]
[637.95837402 -268.58248901]
[635.38378906 -253.80224609]
[632.11413574 -239.16004944]
[628.15667725 -224.68861389]
[623.52020264 -210.42021179]
[618.21508789 -196.38667297]
[612.25317383 -182.61932373]
[605.64776611 -169.14889526]
[598.41357422 -156.00541687]
[590.56671143 -143.21824646]
[582.12481689 -130.81590271]
[573.10662842 -118.82606506]
[563.53222656 -107.27548218]
[553.42309570 -96.18992615]
[542.80169678 -85.59413910]
[531.69183350 -75.51176453]
[520.11816406 -65.96529388]
[508.10659790 -56.97603989]
[495.68392944 -48.56405258]
[482.87786865 -40.74810410]
[469.71701050 -33.54563904]
[456.23065186 -26.97272110]
[442.44897461 -21.04402351]
[428.40267944 -15.77277470]
[414.12313843 -11.17073441]
[399.64218140 -7.24817371]
[384.99215698 -4.01384449]
[370.20574951 -1.47496390]
[355.31591797 0.36280251]
[340.35592651 1.49535406]
[325.35913086 1.92016351]
[310.35897827 1.63628316]
[295.38900757 0.64434618]
[280.48257446 -1.05343378]
[265.67294312 -3.45326853]
[250.99316406 -6.54980278]
[236.47601318 -10.33612728]
[222.15385437 -14.80379295]
[208.05865479 -19.94283104]
[194.22186279 -25.74177361]
[180.67437744 -32.18768311]
[173.59727478 -18.96215439]
[166.52015686 -5.73662663]
[175.82460022 4.76893425]
[180.99520874 17.84728622]
[181.39193726 31.93494415]
[176.94673157 45.34025955]
[168.17422485 56.44655609]
[156.11216736 63.90710068]
[142.19873047 66.80838776]
[128.10104370 64.78194427]
[120.82781219 77.90064240]
[113.55458069 91.01933289]
[116.08342743 102.38798523]
[110.36057281 112.53146362]
[99.32216644 116.24560547]
[91.85442352 129.25456238]
[84.38668060 142.26350403]
[76.91893768 155.27246094]
[69.45119476 168.28141785]
[61.98345566 181.29035950]
[73.75774384 190.62973022]
[84.00848389 201.61973572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 208]
[39 207]
[40 206]
[41 205]
[42 204]
[43 203]
[45 200]
[46 199]
[47 198]
[54 190]
[55 189]
[56 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
