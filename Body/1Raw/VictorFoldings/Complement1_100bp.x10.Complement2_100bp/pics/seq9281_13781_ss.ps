%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[146.61303711 228.38441467]
[151.24218750 214.10644531]
[157.09812927 200.28627014]
[164.13630676 187.02906799]
[172.30316162 174.43574524]
[160.47688293 165.20864868]
[148.65061951 155.98155212]
[136.82435608 146.75445557]
[140.36218262 161.33126831]
[135.55831909 175.54122925]
[123.90126801 184.98120117]
[109.00310516 186.72612000]
[95.48018646 180.23530579]
[87.52273560 167.52000427]
[87.59645081 152.52018738]
[95.67849731 139.88371277]
[109.26456451 133.52612305]
[124.14509583 135.41751099]
[113.65759277 124.69313049]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.30337524 86.11138153]
[64.19613647 76.03024292]
[53.08890533 65.94910431]
[41.98167038 55.86796188]
[30.87443733 45.78682327]
[20.12532043 56.25583267]
[8.75210571 66.04325104]
[-3.20206165 75.11196899]
[-15.69183540 83.42756653]
[-28.66983795 90.95851135]
[-42.08683777 97.67623138]
[-55.89194107 103.55523682]
[-70.03277588 108.57324219]
[-84.45571136 112.71120453]
[-99.10601807 115.95343018]
[-113.92813873 118.28761292]
[-128.86584473 119.70490265]
[-143.86245728 120.19992065]
[-158.86111450 119.77079773]
[-173.80490112 118.41915131]
[-188.63713074 116.15010834]
[-203.30154419 112.97229004]
[-217.74250793 108.89773560]
[-231.90525818 103.94190979]
[-245.73606873 98.12360382]
[-259.18243408 91.46489716]
[-272.19342041 83.99105072]
[-284.71960449 75.73040009]
[-296.71350098 66.71430206]
[-308.12960815 56.97694016]
[-318.92462158 46.55526352]
[-329.05758667 35.48880005]
[-338.49005127 23.81952667]
[-347.18627930 11.59171391]
[-355.11325073 -1.14825511]
[-362.24090576 -14.35205364]
[-368.54217529 -27.96959496]
[-373.99322510 -41.94922256]
[-378.57330322 -56.23790359]
[-382.26507568 -70.78144073]
[-385.05453491 -85.52466583]
[-386.93106079 -100.41164398]
[-387.88760376 -115.38591003]
[-387.92050171 -130.39065552]
[-387.02960205 -145.36897278]
[-385.21835327 -160.26403809]
[-382.49353027 -175.01934814]
[-378.86557007 -189.57893372]
[-374.34817505 -203.88755798]
[-368.95846558 -217.89094543]
[-362.71694946 -231.53598022]
[-355.64724731 -244.77088928]
[-347.77621460 -257.54550171]
[-339.13366699 -269.81130981]
[-329.75244141 -281.52182007]
[-319.66806030 -292.63259888]
[-308.91885376 -303.10150146]
[-297.54553223 -312.88882446]
[-285.59127808 -321.95739746]
[-273.10144043 -330.27288818]
[-260.12335205 -337.80371094]
[-246.70628357 -344.52127075]
[-232.90112305 -350.40014648]
[-218.76023865 -355.41802979]
[-204.33726501 -359.55584717]
[-189.68692017 -362.79791260]
[-174.86477661 -365.13195801]
[-159.92706299 -366.54910278]
[-144.93045044 -367.04397583]
[-129.93179321 -366.61471558]
[-114.98802948 -365.26290894]
[-100.15581512 -362.99371338]
[-85.49143219 -359.81576538]
[-71.05049896 -355.74105835]
[-56.88780212 -350.78509521]
[-43.05706024 -344.96664429]
[-29.61074066 -338.30783081]
[-16.59984970 -330.83383179]
[-4.07374144 -322.57308960]
[7.92006588 -313.55685425]
[19.33607674 -303.81939697]
[30.13098526 -293.39761353]
[40.26384354 -282.33102417]
[49.69621277 -270.66168213]
[58.39231110 -258.43377686]
[66.31915283 -245.69372559]
[73.44667053 -232.48985291]
[79.74782562 -218.87225342]
[85.19871521 -204.89257812]
[89.77865601 -190.60385132]
[93.47028351 -176.06027222]
[96.25959778 -161.31701660]
[98.13600159 -146.43002319]
[99.09239197 -131.45574951]
[99.12512970 -116.45099640]
[98.23410034 -101.47268677]
[96.42267609 -86.57763672]
[93.69773865 -71.82235718]
[90.06961823 -57.26281357]
[85.55207062 -42.95423126]
[80.16224670 -28.95089722]
[73.92057800 -15.30592537]
[66.85075378 -2.07107759]
[58.97958374 10.70344162]
[50.33692932 22.96917343]
[40.95557785 34.67959213]
[52.06280899 44.76073074]
[63.17004395 54.84186935]
[74.27727509 64.92300415]
[85.38451385 75.00414276]
[88.18775177 75.00341797]
[91.16017914 76.11303711]
[93.87889099 78.40302277]
[95.90345001 81.78912354]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[124.38197327 114.20562744]
[134.86947632 124.93000793]
[146.05145264 134.92817688]
[157.87771606 144.15527344]
[169.70397949 153.38237000]
[181.53025818 162.60946655]
[191.75924683 151.62506104]
[202.90666199 141.57397461]
[214.88768005 132.53271484]
[227.61111450 124.57007599]
[240.98013306 117.74666595]
[254.89297485 112.11442566]
[269.24377441 107.71620941]
[283.92327881 104.58549500]
[298.81979370 102.74610901]
[313.81991577 102.21205139]
[328.80950928 102.98738098]
[343.67449951 105.06620789]
[358.30175781 108.43270111]
[372.57992554 113.06124115]
[386.40032959 118.91660309]
[399.65783691 125.95423126]
[412.25149536 134.12054443]
[424.08551025 143.35340881]
[435.06976318 153.58255005]
[445.12069702 164.73011780]
[454.16180420 176.71125793]
[462.12426758 189.43481445]
[468.94747925 202.80390930]
[474.57952881 216.71684265]
[478.97753906 231.06768799]
[482.10806274 245.74723816]
[483.94723511 260.64376831]
[484.48107910 275.64392090]
[483.70553589 290.63351440]
[481.62649536 305.49847412]
[478.25979614 320.12567139]
[473.63104248 334.40374756]
[467.77551270 348.22409058]
[460.73770142 361.48150635]
[452.57119751 374.07507324]
[443.33816528 385.90893555]
[433.10888672 396.89303589]
[421.96118164 406.94381714]
[409.97988892 415.98474121]
[397.25622559 423.94702148]
[383.88702393 430.77008057]
[369.97402954 436.40191650]
[355.62310791 440.79974365]
[340.94351196 443.93002319]
[326.04696655 445.76901245]
[311.04681396 446.30264282]
[296.05722046 445.52688599]
[281.19229126 443.44766235]
[266.56515503 440.08074951]
[252.28712463 435.45181274]
[238.46685791 429.59603882]
[225.20956421 422.55804443]
[212.61611938 414.39138794]
[200.78237915 405.15820312]
[189.79840088 394.92874146]
[179.74778748 383.78088379]
[170.70701599 371.79949951]
[162.74491882 359.07571411]
[155.92207336 345.70642090]
[150.29042053 331.79333496]
[145.89280701 317.44238281]
[142.76271057 302.76272583]
[140.92395020 287.86614990]
[140.39051819 272.86599731]
[141.16648865 257.87640381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 145]
[6 144]
[7 143]
[8 142]
[18 141]
[19 140]
[20 139]
[22 137]
[23 132]
[24 131]
[25 130]
[26 129]
[27 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
