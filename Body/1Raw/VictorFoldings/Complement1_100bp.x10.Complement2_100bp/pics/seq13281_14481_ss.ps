%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[102.90396881 318.90856934]
[98.57614136 333.27996826]
[93.06092072 347.23876953]
[86.39698792 360.68713379]
[78.63108063 373.53073120]
[69.81768799 385.67941284]
[60.01861954 397.04800415]
[49.30260849 407.55673218]
[37.74482727 417.13192749]
[25.42634392 425.70639038]
[12.43356609 433.22000122]
[-1.14237201 439.62002563]
[-15.20624161 444.86160278]
[-29.65939331 448.90795898]
[-44.40044785 451.73068237]
[-59.32600403 453.31002808]
[-74.33137512 453.63485718]
[-89.31129456 452.70294189]
[-104.16069794 450.52078247]
[-118.77542114 447.10372925]
[-133.05294800 442.47567749]
[-146.89314270 436.66915894]
[-160.19891357 429.72488403]
[-172.87692261 421.69155884]
[-184.83825684 412.62551880]
[-195.99900818 402.59036255]
[-206.28089905 391.65649414]
[-215.61178589 379.90060425]
[-223.92623901 367.40515137]
[-231.16593933 354.25778198]
[-237.28007507 340.55072021]
[-242.22579956 326.38009644]
[-245.96838379 311.84533691]
[-248.48161316 297.04837036]
[-249.74783325 282.09298706]
[-249.75816345 267.08410645]
[-248.51254272 252.12699890]
[-246.01969910 237.32658386]
[-242.29711914 222.78668213]
[-237.37092590 208.60926819]
[-231.27566528 194.89378357]
[-224.05407715 181.73645020]
[-215.75685120 169.22955322]
[-206.44215393 157.46083069]
[-196.17533875 146.51281738]
[-185.02841187 136.46231079]
[-173.07957458 127.37981415]
[-160.41262817 119.32902527]
[-147.11643982 112.36643219]
[-133.28425598 106.54085541]
[-119.01311493 101.89317322]
[-104.40310669 98.45597076]
[-89.55672455 96.25337219]
[-74.57810211 95.30082703]
[-59.57229996 95.60500336]
[-44.64458084 97.16378021]
[-29.89965439 99.96621704]
[-15.44094372 103.99265289]
[-1.36986911 109.21485901]
[12.21486950 115.59619141]
[25.21798325 123.09189606]
[37.54826355 131.64939880]
[49.11921692 141.20866394]
[59.60671997 130.48428345]
[70.09422302 119.75990295]
[73.46085358 105.25076294]
[88.64132690 100.79387665]
[73.76105499 102.68529510]
[60.17493057 96.32784271]
[52.09276199 83.69144440]
[52.01889801 68.69161987]
[59.97622681 55.97624207]
[73.49908447 49.48529816]
[88.39726257 51.23007965]
[100.05439758 60.66994476]
[104.85840607 74.87985229]
[101.32057953 89.45693207]
[113.14685059 80.22983551]
[124.97312164 71.00273895]
[136.79939270 61.77563858]
[139.15141296 49.09373093]
[149.19149780 41.65192795]
[161.21252441 43.00149536]
[173.17486572 33.95149612]
[185.13720703 24.90149498]
[197.09954834 15.85149574]
[209.06187439 6.80149603]
[221.02421570 -2.24850392]
[212.75624084 -14.77033806]
[205.30754089 -27.79617691]
[198.70870972 -41.27249527]
[192.98687744 -55.14391327]
[188.16554260 -69.35343170]
[184.26452637 -83.84265900]
[181.29985046 -98.55205536]
[179.28372192 -113.42118073]
[178.22439575 -128.38893127]
[178.12623596 -143.39379883]
[178.98963928 -158.37413025]
[180.81106567 -173.26835632]
[183.58303833 -188.01527405]
[187.29415894 -202.55430603]
[191.92916870 -216.82568359]
[197.46903992 -230.77078247]
[203.89099121 -244.33227539]
[211.16864014 -257.45446777]
[219.27207947 -270.08337402]
[228.16799927 -282.16717529]
[237.81987000 -293.65618896]
[248.18800354 -304.50317383]
[259.22982788 -314.66360474]
[270.89993286 -324.09570312]
[283.15036011 -332.76068115]
[295.93081665 -340.62298584]
[309.18875122 -347.65029907]
[322.86968994 -353.81372070]
[336.91738892 -359.08795166]
[351.27416992 -363.45126343]
[365.88101196 -366.88580322]
[380.67788696 -369.37741089]
[395.60400391 -370.91583252]
[410.59802246 -371.49481201]
[425.59829712 -371.11190796]
[440.54327393 -369.76870728]
[455.37142944 -367.47073364]
[470.02194214 -364.22744751]
[484.43450928 -360.05215454]
[498.54998779 -354.96203613]
[512.31030273 -348.97796631]
[525.65893555 -342.12457275]
[538.54107666 -334.42999268]
[550.90374756 -325.92587280]
[562.69616699 -316.64715576]
[573.86987305 -306.63195801]
[584.37890625 -295.92141724]
[594.18011475 -284.55957031]
[603.23327637 -272.59307861]
[611.50109863 -260.07116699]
[618.94964600 -247.04524231]
[625.54833984 -233.56884766]
[631.27001953 -219.69737244]
[636.09118652 -205.48779297]
[639.99206543 -190.99851990]
[642.95654297 -176.28909302]
[644.97253418 -161.41993713]
[646.03167725 -146.45217896]
[646.12969971 -131.44731140]
[645.26611328 -116.46699524]
[643.44451904 -101.57279205]
[640.67236328 -86.82588959]
[636.96112061 -72.28691101]
[632.32592773 -58.01557922]
[626.78588867 -44.07054901]
[620.36383057 -30.50912285]
[613.08599854 -17.38702583]
[604.98242188 -4.75818205]
[596.08636475 7.32551479]
[586.43438721 18.81440926]
[576.06610107 29.66129112]
[565.02416992 39.82158661]
[553.35400391 49.25354767]
[541.10345459 57.91841125]
[528.32287598 65.78057861]
[515.06488037 72.80773163]
[501.38391113 78.97100067]
[487.33612061 84.24506378]
[472.97930908 88.60823822]
[458.37243652 92.04260254]
[443.57553101 94.53404236]
[428.64938354 96.07231903]
[413.65536499 96.65111542]
[398.65505981 96.26804352]
[383.71014404 94.92468262]
[368.88198853 92.62655640]
[354.23153687 89.38310242]
[339.81900024 85.20764923]
[325.70358276 80.11736298]
[311.94332886 74.13314819]
[298.59472656 67.27960968]
[285.71270752 59.58489990]
[273.35012817 51.08063889]
[261.55783081 41.80177689]
[250.38424683 31.78644371]
[239.87532043 21.07579041]
[230.07421875 9.71383286]
[218.11187744 18.76383209]
[206.14953613 27.81383324]
[194.18721008 36.86383438]
[182.22486877 45.91383362]
[170.26252747 54.96383286]
[164.31742859 71.47512054]
[146.02648926 73.60190582]
[134.20022583 82.82901001]
[122.37395477 92.05610657]
[110.54768372 101.28320312]
[99.36570740 111.28137207]
[95.24893188 126.55759430]
[80.81860352 130.24740601]
[70.33110046 140.97178650]
[59.84359741 151.69616699]
[69.65887451 163.05075073]
[78.48959351 175.18685913]
[86.27381134 188.01933289]
[92.95692444 201.45817566]
[98.49205780 215.40911865]
[102.84038544 229.77430725]
[105.97140503 244.45297241]
[107.86315155 259.34216309]
[108.50236511 274.33743286]
[107.88454437 289.33358765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 200]
[64 199]
[65 198]
[67 196]
[77 195]
[78 194]
[79 193]
[80 192]
[83 190]
[84 189]
[85 188]
[86 187]
[87 186]
[88 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
