%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[122.81957245 259.00204468]
[121.15047455 273.92010498]
[118.09173584 288.61630249]
[113.67025757 302.96151733]
[107.92488098 316.82965088]
[100.90609741 330.09884644]
[92.67560577 342.65246582]
[83.30571747 354.38018799]
[72.87879181 365.17898560]
[61.48646164 374.95391846]
[49.22883987 383.61907959]
[36.21364975 391.09832764]
[22.55527115 397.32595825]
[8.37374115 402.24719238]
[-6.20631123 405.81881714]
[-21.05675316 408.00946045]
[-36.04707718 408.79980469]
[-51.04554367 408.18298340]
[-65.92034149 406.16433716]
[-80.54074860 402.76168823]
[-94.77828217 398.00485229]
[-108.50780487 391.93572998]
[-121.60867310 384.60757446]
[-133.96575928 376.08483887]
[-145.47044373 366.44238281]
[-156.02163696 355.76498413]
[-165.52659607 344.14648438]
[-173.90182495 331.68893433]
[-181.07368469 318.50186157]
[-186.97915649 304.70114136]
[-191.56634521 290.40808105]
[-194.79493713 275.74822998]
[-196.63656616 260.85049438]
[-197.07502747 245.84574890]
[-196.10649109 230.86587524]
[-193.73945618 216.04254150]
[-189.99472046 201.50598145]
[-184.90521240 187.38395691]
[-178.51564026 173.80059814]
[-170.88215637 160.87525940]
[-162.07186890 148.72152710]
[-152.16217041 137.44621277]
[-141.24018860 127.14842224]
[-129.40187073 117.91864777]
[-116.75128174 109.83798981]
[-103.39958191 102.97747803]
[-89.46411896 97.39739227]
[-75.06735229 93.14678192]
[-60.33581543 90.26300049]
[-45.39896011 88.77139282]
[-30.38806343 88.68505859]
[-15.43504238 90.00476074]
[-0.67130685 92.71890259]
[13.77339649 96.80363464]
[27.77212334 102.22305298]
[41.20185089 108.92954254]
[53.94455338 116.86414337]
[65.88824463 125.95714569]
[76.05178833 114.92527008]
[86.21533966 103.89339447]
[89.46533203 90.29452515]
[102.75278473 85.94306183]
[112.91632843 74.91117859]
[123.07987976 63.87930679]
[133.24342346 52.84742737]
[142.81854248 41.30112457]
[151.77923584 29.27174759]
[160.73992920 17.24237061]
[169.70063782 5.21299314]
[178.66133118 -6.81638479]
[187.62202454 -18.84576225]
[176.10617065 -28.46355629]
[165.14260864 -38.70647812]
[154.76525879 -49.54286957]
[145.00616455 -60.93923187]
[135.89550781 -72.86034393]
[127.46144867 -85.26935577]
[119.73004913 -98.12790680]
[112.72521973 -111.39626312]
[106.46859741 -125.03340149]
[100.97952271 -138.99717712]
[96.27497101 -153.24443054]
[92.36948395 -167.73110962]
[89.27512360 -182.41246033]
[87.00145721 -197.24308777]
[85.55551910 -212.17713928]
[84.94177246 -227.16848755]
[85.16211700 -242.17076111]
[86.21587372 -257.13760376]
[88.09977722 -272.02276611]
[90.80801392 -286.78021240]
[94.33220673 -301.36434937]
[98.66146851 -315.73010254]
[103.78240967 -329.83303833]
[109.67920685 -343.62957764]
[116.33363342 -357.07708740]
[123.72512054 -370.13400269]
[131.83082581 -382.75994873]
[140.62567139 -394.91592407]
[150.08250427 -406.56430054]
[160.17208862 -417.66915894]
[170.86322021 -428.19610596]
[182.12286377 -438.11260986]
[193.91621399 -447.38806152]
[206.20681763 -455.99374390]
[218.95668030 -463.90310669]
[232.12641907 -471.09164429]
[245.67529297 -477.53717041]
[259.56143188 -483.21975708]
[273.74194336 -488.12185669]
[288.17294312 -492.22830200]
[302.80987549 -495.52636719]
[317.60745239 -498.00592041]
[332.51998901 -499.65924072]
[347.50134277 -500.48126221]
[362.50524902 -500.46942139]
[377.48529053 -499.62377930]
[392.39520264 -497.94689941]
[407.18884277 -495.44400024]
[421.82055664 -492.12283325]
[436.24505615 -487.99362183]
[450.41781616 -483.06915283]
[464.29498291 -477.36465454]
[477.83364868 -470.89776611]
[490.99203491 -463.68844604]
[503.72940063 -455.75897217]
[516.00640869 -447.13391113]
[527.78509521 -437.83984375]
[539.02911377 -427.90557861]
[549.70361328 -417.36178589]
[559.77563477 -406.24102783]
[569.21405029 -394.57769775]
[577.98974609 -382.40789795]
[586.07550049 -369.76916504]
[593.44635010 -356.70059204]
[600.07952881 -343.24261475]
[605.95458984 -329.43676758]
[611.05322266 -315.32577515]
[615.35980225 -300.95321655]
[618.86102295 -286.36352539]
[621.54595947 -271.60183716]
[623.40637207 -256.71371460]
[624.43646240 -241.74522400]
[624.63317871 -226.74261475]
[623.99572754 -211.75225830]
[622.52624512 -196.82049561]
[620.22918701 -181.99348450]
[617.11163330 -167.31704712]
[613.18328857 -152.83653259]
[608.45629883 -138.59672546]
[602.94519043 -124.64163208]
[596.66705322 -111.01438141]
[589.64129639 -97.75710297]
[581.88958740 -84.91076660]
[573.43597412 -72.51508331]
[564.30651855 -60.60836411]
[554.52941895 -49.22741699]
[544.13500977 -38.40741730]
[533.15527344 -28.18180847]
[521.62426758 -18.58220100]
[509.57757568 -9.63826466]
[497.05242920 -1.37764513]
[484.08755493 6.17412472]
[470.72305298 12.99370289]
[457.00018311 19.06000900]
[442.96139526 24.35429573]
[428.65008545 28.86019325]
[414.11047363 32.56377792]
[399.38751221 35.45360184]
[384.52667236 37.52073288]
[369.57394409 38.75878143]
[354.57553101 39.16391754]
[339.57775879 38.73489380]
[324.62701416 37.47303391]
[309.76950073 35.38224030]
[295.05117798 32.46897125]
[280.51745605 28.74223328]
[266.21334839 24.21354675]
[252.18301392 18.89690971]
[238.46983337 12.80875397]
[225.11619568 5.96789980]
[212.16337585 -1.60450900]
[199.65139771 -9.88506603]
[190.69070435 2.14431143]
[181.73001099 14.17368889]
[172.76931763 26.20306587]
[163.80862427 38.23244476]
[154.84791565 50.26182175]
[169.67720032 48.00512314]
[182.55262756 55.70078278]
[187.58775330 69.83045197]
[182.48057556 83.93423462]
[169.56602478 91.56407166]
[154.74845886 89.23170471]
[144.80227661 78.00346375]
[144.27529907 63.01097488]
[134.11175537 74.04285431]
[123.94821167 85.07472992]
[113.78466034 96.10660553]
[110.53466797 109.70547485]
[97.24721527 114.05693817]
[87.08367157 125.08882141]
[76.92012024 136.12069702]
[86.95962524 147.28057861]
[95.90997314 159.33152771]
[103.69251251 172.16767883]
[110.23884583 185.67619324]
[115.49144745 199.73837280]
[119.40414429 214.23062134]
[121.94255829 229.02557373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 203]
[59 202]
[60 201]
[62 199]
[63 198]
[64 197]
[65 196]
[66 188]
[67 187]
[68 186]
[69 185]
[70 184]
[71 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
