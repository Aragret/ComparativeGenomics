%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[79.47168732 472.76873779]
[69.52803040 461.51611328]
[60.93191910 449.20333862]
[53.79542160 435.99090576]
[48.21157455 422.05108643]
[44.25318146 407.56561279]
[41.97183990 392.72332764]
[41.39729691 377.71774292]
[42.53704071 362.74447632]
[45.37621307 347.99874878]
[49.87779999 333.67276001]
[55.98311615 319.95333862]
[63.61256027 307.01928711]
[72.66667175 295.03927612]
[83.02741241 284.16946411]
[94.55970001 274.55157471]
[107.11319733 266.31097412]
[120.52424622 259.55511475]
[134.61799622 254.37205505]
[131.07832336 239.79568481]
[126.44518280 234.03756714]
[127.59617615 224.97595215]
[124.27391815 210.34848022]
[120.95166016 195.72102356]
[117.62939453 181.09356689]
[113.65730286 166.62904358]
[109.04328918 152.35630798]
[104.42928314 138.08357239]
[99.81527710 123.81084442]
[95.20126343 109.53810883]
[89.12743378 95.82284546]
[81.65969086 82.81388855]
[74.19194794 69.80493927]
[66.72420502 56.79598618]
[59.25646591 43.78703308]
[51.78872299 30.77807999]
[46.83521652 44.93656921]
[33.38140488 51.56943130]
[19.13423920 46.87706757]
[12.25514507 33.54747391]
[16.68478012 19.21644783]
[29.88564873 12.09345055]
[44.29494858 16.25827026]
[32.48725510 11.06778145]
[27.53929138 -0.40834245]
[31.60274124 -11.80197811]
[25.52890587 -25.51724434]
[19.45507240 -39.23251343]
[13.38123894 -52.94777679]
[7.30740452 -66.66304779]
[6.27363777 -51.69871140]
[0.72458643 -37.76285553]
[-8.81084919 -26.18375969]
[-21.42381096 -18.06506729]
[-35.91211319 -14.18059921]
[-50.89482498 -14.90060043]
[-64.94388580 -20.15644264]
[-76.72023010 -29.44717598]
[-85.10140991 -41.88726425]
[-89.28858948 -56.29099655]
[-88.88267517 -71.28549957]
[-83.92234802 -85.44160461]
[-74.88039398 -97.41002655]
[-62.61864471 -106.05001831]
[-48.30580521 -110.53807068]
[-33.30608749 -110.44641113]
[-19.04916382 -105.78377533]
[-6.89391708 -96.99458313]
[2.00161624 -84.91554260]
[-0.22350089 -99.74958801]
[-2.44861817 -114.58363342]
[-4.67373514 -129.41767883]
[-6.89885235 -144.25172424]
[-9.12397003 -159.08576965]
[-11.34908676 -173.91979980]
[-26.36171150 -173.49736023]
[-41.31579208 -174.88760376]
[-55.99325943 -178.07028198]
[-70.18006897 -182.99894714]
[-83.66932678 -189.60176086]
[-96.26433563 -197.78242493]
[-107.78141785 -207.42161560]
[-118.05261230 -218.37879944]
[-126.92814636 -230.49418640]
[-134.27857971 -243.59106445]
[-139.99671936 -257.47848511]
[-143.99919128 -271.95388794]
[-146.22763062 -286.80621338]
[-146.64950562 -301.81884766]
[-145.25869751 -316.77288818]
[-142.07548523 -331.45022583]
[-137.14627075 -345.63684082]
[-130.54296875 -359.12588501]
[-122.36183167 -371.72058105]
[-112.72219849 -383.23730469]
[-101.76463318 -393.50808716]
[-89.64892578 -402.38314819]
[-76.55176544 -409.73309326]
[-62.66413879 -415.45071411]
[-48.18857574 -419.45266724]
[-33.33617401 -421.68054199]
[-18.32351685 -422.10186768]
[-3.36953783 -420.71047974]
[11.30768871 -417.52673340]
[25.49412727 -412.59698486]
[38.98289871 -405.99316406]
[51.57729340 -397.81155396]
[63.09365082 -388.17150879]
[73.36402893 -377.21356201]
[82.23865509 -365.09750366]
[89.58811188 -352.00006104]
[95.30522156 -338.11224365]
[99.30660248 -323.63653564]
[101.53392029 -308.78402710]
[101.95468903 -293.77136230]
[100.56275940 -278.81744385]
[97.37844849 -264.14031982]
[92.44817352 -249.95407104]
[85.84385681 -236.46554565]
[77.66178131 -223.87145996]
[68.02128601 -212.35546875]
[57.06295395 -202.08549500]
[44.94658279 -193.21131897]
[31.84887123 -185.86236572]
[17.96081924 -180.14576721]
[3.48495698 -176.14492798]
[5.71007395 -161.31088257]
[7.93519115 -146.47683716]
[10.16030884 -131.64279175]
[12.38542557 -116.80874634]
[14.61054325 -101.97470856]
[16.83566093 -87.14066315]
[21.02267075 -72.73687744]
[27.09650612 -59.02161407]
[33.17033768 -45.30634689]
[39.24417496 -31.59107971]
[45.31800842 -17.87581253]
[60.03168488 -8.31157398]
[57.91826248 9.98091030]
[64.79767609 23.31033897]
[72.26541901 36.31929016]
[79.73316193 49.32824326]
[87.20089722 62.33719635]
[94.66864014 75.34614563]
[102.13638306 88.35510254]
[102.31176758 73.35612488]
[108.14292908 59.53594208]
[118.76485443 48.94468689]
[132.60185242 43.15351486]
[147.60127258 43.02150726]
[161.53804016 48.56825256]
[172.34472656 58.97091675]
[178.41822815 72.68633270]
[178.85755920 87.67990112]
[173.59756470 101.72740936]
[163.41853333 112.74499512]
[149.83044434 119.09826660]
[134.84904480 119.84474945]
[120.69669342 114.87371063]
[109.47399902 104.92410278]
[114.08800507 119.19683075]
[118.70201874 133.46957397]
[123.31602478 147.74229431]
[127.93003845 162.01502991]
[135.70628357 149.18811035]
[150.24148560 145.48297119]
[163.20919800 153.02207947]
[167.18095398 167.48669434]
[159.88153076 180.59083557]
[145.49237061 184.82785034]
[132.25685120 177.77130127]
[135.57911682 192.39877319]
[138.90138245 207.02622986]
[142.22363281 221.65368652]
[145.65469360 236.25601196]
[149.19436646 250.83238220]
[164.09556580 248.97441101]
[179.11143494 248.82719421]
[194.04618835 250.39263916]
[208.70515442 253.65036011]
[222.89720154 258.55786133]
[236.43730164 265.05117798]
[249.14895630 273.04565430]
[260.86642456 282.43707275]
[271.43695068 293.10299683]
[280.72271729 304.90435791]
[288.60269165 317.68731689]
[294.97409058 331.28521729]
[299.75390625 345.52078247]
[302.87979126 360.20840454]
[304.31103516 375.15664673]
[304.02890015 390.17056274]
[302.03713989 405.05447388]
[298.36169434 419.61431885]
[293.05044556 433.66024780]
[286.17269897 447.00918579]
[277.81808472 459.48709106]
[268.09552002 470.93130493]
[257.13177490 481.19256592]
[245.06976318 490.13717651]
[232.06675720 497.64846802]
[218.29228210 503.62854004]
[203.92588806 507.99945068]
[189.15489197 510.70416260]
[174.17185974 511.70745850]
[159.17213440 510.99624634]
[144.35125732 508.57977295]
[129.90245056 504.48959351]
[116.01407623 498.77899170]
[102.86721039 491.52239990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 176]
[20 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 145]
[32 144]
[33 143]
[34 142]
[35 141]
[36 140]
[43 139]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
