%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[107.05777740 445.69042969]
[92.00927734 446.68710327]
[77.18583679 443.90927124]
[63.51927567 437.53149414]
[51.86868286 427.95474243]
[42.96642303 415.78097534]
[37.37210083 401.77545166]
[35.43738174 386.81860352]
[37.28388596 371.85058594]
[42.79553223 357.81231689]
[51.62586212 345.58627319]
[63.21979141 335.94100952]
[76.84851074 329.48275757]
[91.65531921 326.61755371]
[92.54813385 311.64416504]
[93.44094849 296.67074585]
[90.70114899 289.80670166]
[94.46015930 281.48156738]
[95.57581329 266.52313232]
[88.80654907 253.25563049]
[97.54882812 240.06915283]
[98.66448212 225.11070251]
[91.89521790 211.84320068]
[100.63749695 198.65673828]
[101.75315094 183.69827271]
[102.86879730 168.73982239]
[102.08747101 153.76019287]
[99.42167664 138.99897766]
[96.75588226 124.23775482]
[94.09008789 109.47653961]
[91.31447601 94.73557281]
[88.42920685 80.01568604]
[78.18190765 67.96149445]
[83.32661438 53.98360825]
[70.49402618 45.15396881]
[67.77764130 30.18480301]
[76.27443695 18.00531006]
[73.38916779 3.28541875]
[70.50389099 -11.43447304]
[67.61862183 -26.15436363]
[63.97053528 -40.70398331]
[59.56953430 -55.04383087]
[55.16853714 -69.38368225]
[50.76753998 -83.72352600]
[46.36654282 -98.06336975]
[41.96554184 -112.40322113]
[37.56454468 -126.74306488]
[35.14011002 -111.94029236]
[29.91222954 -97.88080597]
[22.07634735 -85.09022522]
[11.92541790 -74.04673767]
[-0.16106160 -65.16320801]
[-13.73122883 -58.77176666]
[-28.27775192 -55.11134720]
[-43.25680161 -54.31880951]
[-58.10837173 -56.42377472]
[-72.27722168 -61.34754944]
[-85.23365021 -68.90605164]
[-96.49326324 -78.81671143]
[-105.63511658 -90.70899963]
[-112.31742859 -104.13832092]
[-116.29038239 -118.60261536]
[-117.40544128 -133.56111145]
[-115.62091827 -148.45457458]
[-111.00354004 -162.72622681]
[-103.72591400 -175.84248352]
[-94.06013489 -187.31298828]
[-82.36755371 -196.70892334]
[-69.08530426 -203.67900085]
[-54.70996857 -207.96264648]
[-39.77896500 -209.39971924]
[-24.85050583 -207.93646240]
[-10.48269939 -203.62762451]
[2.78730035 -196.63426208]
[14.46338654 -187.21783447]
[24.10903931 -175.73039246]
[31.36364937 -162.60139465]
[35.95470047 -148.32763672]
[30.35013580 -163.12287903]
[39.88981247 -174.56158447]
[42.11492920 -189.39562988]
[44.34004593 -204.22967529]
[46.56516266 -219.06372070]
[48.79027939 -233.89776611]
[51.01539612 -248.73181152]
[53.24051285 -263.56585693]
[38.78265381 -267.63690186]
[24.94905090 -273.48794556]
[11.95788860 -281.02670288]
[0.01405368 -290.13427734]
[-10.69408321 -300.66705322]
[-19.99763680 -312.45886230]
[-27.74987984 -325.32379150]
[-33.82854843 -339.05889893]
[-38.13776779 -353.44757080]
[-40.60958099 -368.26287842]
[-41.20500565 -383.27114868]
[-39.91464233 -398.23571777]
[-36.75885010 -412.92056274]
[-31.78739548 -427.09405518]
[-25.07868958 -440.53265381]
[-16.73853493 -453.02447510]
[-6.89846849 -464.37243652]
[4.28631639 -474.39758301]
[16.63942146 -482.94183350]
[29.96601677 -489.87039185]
[44.05592728 -495.07400513]
[58.68693161 -498.47061157]
[73.62828064 -500.00665283]
[88.64432526 -499.65786743]
[103.49823761 -497.42974854]
[117.95575714 -493.35748291]
[131.78886414 -487.50527954]
[144.77938843 -479.96542358]
[156.72245789 -470.85684204]
[167.42971802 -460.32318115]
[176.73226929 -448.53057861]
[184.48344421 -435.66500854]
[190.56094360 -421.92938232]
[194.86895752 -407.54034424]
[197.33952332 -392.72485352]
[197.93368530 -377.71649170]
[196.64205933 -362.75204468]
[193.48503113 -348.06747437]
[188.51239014 -333.89440918]
[181.80255127 -320.45635986]
[173.46133423 -307.96527100]
[163.62031555 -296.61810303]
[152.43469238 -286.59390259]
[140.08087158 -278.05068970]
[126.75368500 -271.12326050]
[112.66333771 -265.92080688]
[98.03205109 -262.52545166]
[83.09057617 -260.99069214]
[68.07455444 -261.34072876]
[65.84944153 -246.50668335]
[63.62432480 -231.67263794]
[61.39920807 -216.83860779]
[59.17409134 -202.00456238]
[56.94897079 -187.17051697]
[54.72385406 -172.33647156]
[60.48757553 -158.60224915]
[50.78874207 -146.10252380]
[51.90439224 -131.14405823]
[56.30538940 -116.80421448]
[60.70639038 -102.46437073]
[65.10738373 -88.12452698]
[69.50838470 -73.78467560]
[73.90938568 -59.44482803]
[78.31037903 -45.10498428]
[85.26054382 -58.39765930]
[99.08063507 -64.22903442]
[113.45230865 -59.93308640]
[121.80501556 -47.47386169]
[120.32001495 -32.54755020]
[109.67623138 -21.97826195]
[94.73985291 -20.59813118]
[82.33851624 -29.03963661]
[85.22378540 -14.31974506]
[88.10905457 0.40014616]
[90.99433136 15.12003708]
[103.46037292 23.19056511]
[106.59613800 38.07752609]
[98.04650116 51.09833527]
[108.08742523 62.09965897]
[103.14909363 77.13040924]
[106.03437042 91.85030365]
[110.55198669 98.52590179]
[108.85130310 106.81073761]
[111.51709747 121.57196045]
[114.18289948 136.33317566]
[116.84869385 151.09439087]
[121.50879669 136.83663940]
[130.49324036 124.82498932]
[142.85386658 116.32704926]
[157.28622437 112.23962402]
[172.26724243 112.99407959]
[186.21592712 118.51079559]
[197.66024780 128.20756531]
[205.39245605 141.06109619]
[208.59655762 155.71488953]
[206.93441772 170.62251282]
[200.58143616 184.21072388]
[190.20805359 195.04553223]
[176.90901184 201.98352051]
[162.08779907 204.29249573]
[147.30850220 201.72877502]
[134.13084412 194.56294250]
[123.94548035 183.55120850]
[117.82724762 169.85546875]
[116.71160126 184.81393433]
[115.59595490 199.77238464]
[122.28541565 214.10980225]
[113.62293243 226.22634888]
[112.50728607 241.18479919]
[119.19674683 255.52223206]
[110.53426361 267.63876343]
[109.41861725 282.59722900]
[108.41435242 297.56356812]
[107.52153778 312.53698730]
[106.62872314 327.51037598]
[120.99013519 332.11477661]
[133.75485229 340.14675903]
[144.12046814 351.10144043]
[151.43540955 364.29016113]
[155.23982239 378.88391113]
[155.29457092 393.96530151]
[151.59622192 408.58627319]
[144.37724304 421.82775879]
[134.09144592 432.85742188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 201]
[15 200]
[16 199]
[18 198]
[19 197]
[21 195]
[22 194]
[24 192]
[25 191]
[26 190]
[27 172]
[28 171]
[29 170]
[30 169]
[31 167]
[32 166]
[34 164]
[37 161]
[38 160]
[39 159]
[40 158]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 145]
[47 144]
[78 143]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
