%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[96.33547974 658.42364502]
[84.49558258 649.14294434]
[74.56279755 637.84454346]
[66.87541962 624.91320801]
[61.69528198 610.78942871]
[59.19881439 595.95428467]
[59.47105026 580.91296387]
[62.50271225 566.17785645]
[68.19055176 552.25079346]
[76.34082794 539.60614014]
[86.67596436 528.67456055]
[98.84393311 519.82836914]
[112.43030548 513.36883545]
[126.97233582 509.51605225]
[125.85668945 494.55761719]
[124.74104309 479.59915161]
[123.62538910 464.64071655]
[122.28715515 449.70053101]
[120.72663116 434.78192139]
[119.16611481 419.86331177]
[117.60559082 404.94470215]
[115.93404388 390.03811646]
[114.15158081 375.14440918]
[111.01746368 371.54074097]
[110.11386871 365.92999268]
[112.54459381 359.78158569]
[111.20635986 344.84140015]
[109.86812592 329.90121460]
[108.52988434 314.96102905]
[95.17538452 304.73867798]
[93.30939484 287.68487549]
[104.57209778 274.29940796]
[103.01157379 259.38079834]
[101.45104980 244.46218872]
[98.95696259 241.96983337]
[97.54615021 238.14559937]
[97.83145905 233.51182556]
[100.16927338 228.84474182]
[99.27645874 213.87133789]
[98.38364410 198.89793396]
[97.49082947 183.92453003]
[96.59801483 168.95112610]
[95.70519257 153.97772217]
[84.49911499 151.88218689]
[73.98014069 147.48690796]
[64.61453247 140.98667908]
[56.81744766 132.66964722]
[50.93449783 122.90448761]
[47.22645950 112.12404633]
[45.85769653 100.80619049]
[46.88887787 89.45259094]
[50.27429962 78.56652832]
[55.86389542 68.63053894]
[63.40989304 60.08505249]
[72.57781219 53.30886078]
[82.96125793 48.60232925]
[94.09998322 46.17408752]
[94.54658508 31.18073845]
[94.99319458 16.18738747]
[95.43979645 1.19403780]
[95.88640594 -13.79931259]
[96.33301544 -28.79266167]
[96.66799164 -43.78892136]
[96.89131927 -58.78725815]
[97.11464691 -73.78559875]
[97.33797455 -88.78393555]
[94.79409027 -93.34197235]
[94.30215454 -97.95838928]
[95.54080200 -101.84179688]
[97.92111206 -104.44303131]
[91.01893616 -118.67926788]
[99.50005341 -130.92344666]
[100.39286804 -145.89685059]
[101.28569031 -160.87025452]
[102.17850494 -175.84365845]
[95.27632141 -190.07989502]
[103.75744629 -202.32406616]
[89.10365295 -208.57757568]
[77.49665070 -219.45243835]
[70.32722473 -233.62042236]
[68.44582367 -249.36022949]
[72.06166840 -264.76660156]
[80.71968079 -277.98101807]
[93.35767365 -287.41583252]
[108.43664551 -291.94506836]
[109.10643005 -306.93011475]
[109.77621460 -321.91513062]
[110.44600677 -336.90017700]
[98.39031219 -342.30960083]
[88.91333008 -351.47177124]
[83.12796783 -363.28054810]
[81.70334625 -376.32086182]
[84.78746033 -389.03817749]
[91.99211121 -399.92395020]
[102.44168091 -407.69448853]
[114.87944031 -411.44226074]
[115.99508667 -426.40072632]
[117.11074066 -441.35919189]
[118.22638702 -456.31762695]
[104.30187225 -462.26629639]
[93.06501770 -472.41577148]
[85.73472595 -485.66513062]
[83.10612488 -500.57717896]
[85.46434784 -515.53436279]
[92.55358887 -528.91424561]
[103.60486603 -539.26550293]
[117.41941833 -545.46527100]
[132.49873352 -546.84100342]
[147.20713806 -543.24359131]
[159.94917297 -535.06317139]
[169.34266663 -523.18707275]
[174.36868286 -508.90359497]
[174.48205566 -493.76208496]
[169.67045593 -479.40493774]
[160.45584106 -467.38955688]
[147.83772278 -459.01925659]
[133.18484497 -455.20199585]
[132.06919861 -440.24353027]
[130.95353699 -425.28506470]
[129.83789062 -410.32662964]
[144.71119690 -402.31134033]
[154.61706543 -388.55606079]
[157.52330017 -371.79995728]
[152.79751587 -355.40585327]
[141.34397888 -342.68548584]
[125.43104553 -336.23040771]
[124.76125336 -321.24536133]
[124.09146881 -306.26031494]
[123.42168427 -291.27526855]
[136.65386963 -286.24310303]
[147.70181274 -277.35693359]
[155.47705078 -265.47518921]
[159.20831299 -251.75231934]
[158.51802063 -237.52650452]
[153.46043396 -224.18925476]
[144.51763916 -213.04920959]
[132.55363464 -205.20384216]
[118.73085022 -201.43125916]
[125.69689178 -188.26602173]
[117.15190887 -174.95085144]
[116.25909424 -159.97743225]
[115.36627960 -145.00402832]
[114.47346497 -130.03062439]
[121.43950653 -116.86538696]
[112.89451599 -103.55021667]
[112.33631134 -88.56060791]
[112.11298370 -73.56227112]
[111.88965607 -58.56393051]
[111.66632843 -43.56559372]
[114.70989227 -36.83072281]
[111.32636261 -28.34605598]
[110.87975311 -13.35270596]
[110.43315125 1.64064372]
[109.98654175 16.63399315]
[109.53993988 31.62734413]
[109.09333038 46.62069321]
[126.69474792 52.88917923]
[141.11775208 64.76692963]
[150.64506531 80.83970642]
[154.14230347 99.19380951]
[151.19308472 117.64390564]
[142.14854431 133.99322510]
[128.08558655 146.29513550]
[110.67860413 153.08489990]
[111.57141876 168.05830383]
[112.46423340 183.03170776]
[113.35704803 198.00511169]
[114.24986267 212.97851562]
[115.14268494 227.95193481]
[116.36965942 242.90165710]
[117.93018341 257.82025146]
[119.49069977 272.73886108]
[130.86067200 279.95956421]
[135.92208862 292.23117065]
[133.03428650 304.98822021]
[123.47006989 313.62277222]
[124.80830383 328.56295776]
[126.14653778 343.50314331]
[127.48477936 358.44332886]
[129.04530334 373.36193848]
[130.82775879 388.25567627]
[134.95477295 396.40463257]
[132.52418518 403.38418579]
[134.08471680 418.30279541]
[135.64523315 433.22137451]
[137.20576477 448.13998413]
[140.77374268 453.70605469]
[140.96626282 459.38583374]
[138.58384705 463.52505493]
[139.69949341 478.48352051]
[140.81513977 493.44195557]
[141.93078613 508.40042114]
[156.88345337 510.05340576]
[171.27772522 514.42602539]
[184.62332153 521.36932373]
[196.46571350 530.64685059]
[206.40155029 541.94256592]
[214.09242249 554.87182617]
[219.27636719 568.99420166]
[221.77682495 583.82867432]
[221.50865173 598.87005615]
[218.48095703 613.60601807]
[212.79687500 627.53460693]
[204.65000916 640.18145752]
[194.31781006 651.11584473]
[182.15223694 659.96533203]
[168.56759644 666.42846680]
[154.02661133 670.28515625]
[139.02452087 671.40405273]
[124.07229614 669.74707031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 192]
[15 191]
[16 190]
[17 189]
[18 186]
[19 185]
[20 184]
[21 183]
[22 181]
[23 180]
[26 179]
[27 178]
[28 177]
[29 176]
[32 172]
[33 171]
[34 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 149]
[64 148]
[65 147]
[66 146]
[70 145]
[72 143]
[73 142]
[74 141]
[75 140]
[77 138]
[85 129]
[86 128]
[87 127]
[88 126]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
