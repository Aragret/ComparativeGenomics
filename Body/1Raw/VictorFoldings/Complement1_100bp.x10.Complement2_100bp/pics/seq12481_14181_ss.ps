%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[139.36386108 525.91882324]
[132.88305664 512.37976074]
[127.64196777 498.31433105]
[123.68281555 483.83566284]
[121.03747559 469.06039429]
[119.72724152 454.10748291]
[119.76266479 439.09732056]
[121.14345551 424.15078735]
[123.85849762 409.38815308]
[127.88594055 394.92834473]
[133.19334412 380.88778687]
[139.73797607 367.37948608]
[147.46714783 354.51223755]
[156.31863403 342.38964844]
[166.22116089 331.10928345]
[177.09498596 320.76199341]
[188.85256958 311.43112183]
[201.39924622 303.19174194]
[194.32214355 289.96621704]
[187.24502563 276.74069214]
[174.41822815 269.16955566]
[174.72920227 253.35139465]
[167.65208435 240.12586975]
[154.82528687 232.55471802]
[155.13626099 216.73657227]
[142.30944824 209.16542053]
[142.62042236 193.34727478]
[135.54331970 180.12174988]
[128.46621704 166.89622498]
[121.38910675 153.67070007]
[114.31199646 140.44515991]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[79.95227814 80.14126587]
[72.48453522 67.13231659]
[65.01679230 54.12336349]
[57.54905319 41.11441040]
[53.71881866 39.06911087]
[51.01099396 36.19992447]
[49.54676437 32.96087646]
[49.28740311 29.79870415]
[50.05052567 27.10133743]
[43.37033081 13.67096138]
[30.29681778 4.76063967]
[31.55643082 -10.08060837]
[26.26692581 -14.04705143]
[24.09988785 -19.30071449]
[24.88399506 -24.01178741]
[18.60663414 -37.63510513]
[12.32927418 -51.25841904]
[6.05191278 -64.88173676]
[-0.32669201 -78.45794678]
[-6.80618763 -91.98628998]
[-13.28568363 -105.51463318]
[-19.76517868 -119.04297638]
[-26.24467468 -132.57131958]
[-40.33827972 -127.40266418]
[-54.85938644 -123.59711456]
[-69.67648315 -121.18912506]
[-84.65538025 -120.20050812]
[-99.66043091 -120.64022064]
[-114.55573273 -122.50428009]
[-129.20639038 -125.77580261]
[-143.47973633 -130.42517090]
[-157.24647522 -136.41024780]
[-170.38197327 -143.67686462]
[-182.76724243 -152.15921021]
[-194.29011536 -161.78044128]
[-204.84623718 -172.45343018]
[-214.34002686 -184.08152771]
[-222.68548584 -196.55943298]
[-229.80705261 -209.77412415]
[-235.64021301 -223.60594177]
[-240.13214111 -237.92959595]
[-243.24217224 -252.61540222]
[-244.94212341 -267.53030396]
[-245.21661377 -282.53930664]
[-244.06315613 -297.50640869]
[-241.49217224 -312.29608154]
[-237.52697754 -326.77441406]
[-232.20347595 -340.81027222]
[-225.56985474 -354.27651978]
[-217.68621826 -367.05120850]
[-208.62396240 -379.01867676]
[-198.46513367 -390.07052612]
[-187.30175781 -400.10662842]
[-175.23492432 -409.03616333]
[-162.37391663 -416.77819824]
[-148.83520508 -423.26266479]
[-134.74142456 -428.43081665]
[-120.22017670 -432.23583984]
[-105.40299225 -434.64328003]
[-90.42405701 -435.63134766]
[-75.41902161 -435.19110107]
[-60.52379227 -433.32647705]
[-45.87324905 -430.05441284]
[-31.60007858 -425.40454102]
[-17.83354568 -419.41894531]
[-4.69832182 -412.15185547]
[7.68663359 -403.66906738]
[19.20915794 -394.04742432]
[29.76490021 -383.37405396]
[39.25826263 -371.74560547]
[47.60327148 -359.26739502]
[54.72434616 -346.05242920]
[60.55700302 -332.22039795]
[65.04841614 -317.89657593]
[68.15790558 -303.21069336]
[69.85732269 -288.29568481]
[70.13125610 -273.28671265]
[68.97724915 -258.31964111]
[66.40573883 -243.53004456]
[62.44001007 -229.05186462]
[57.11598969 -215.01622009]
[50.48188782 -201.55020142]
[42.59778595 -188.77578735]
[33.53508377 -176.80865479]
[23.37586021 -165.75718689]
[12.21211624 -155.72148132]
[0.14495851 -146.79240417]
[-12.71632957 -139.05082703]
[-6.23683405 -125.52247620]
[0.24266185 -111.99413300]
[6.72215748 -98.46578217]
[13.20165348 -84.93743896]
[18.92608643 -80.26275635]
[19.67523003 -71.15909576]
[25.95258904 -57.53578186]
[32.22994995 -43.91246414]
[38.50731277 -30.28914833]
[44.98680878 -16.76080322]
[57.58250809 -8.81111145]
[56.80070496 6.99076700]
[63.48089981 20.42114258]
[70.55800629 33.64667130]
[78.02574921 46.65562439]
[85.49349213 59.66457367]
[92.96122742 72.67353058]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[125.56393433 123.50330353]
[128.03984070 128.61866760]
[127.53752899 133.36805725]
[134.61463928 146.59358215]
[141.69174194 159.81912231]
[148.76884460 173.04464722]
[155.84594727 186.27017212]
[169.17895508 194.78729248]
[168.36178589 209.65946960]
[181.69479370 218.17658997]
[180.87762451 233.04876709]
[187.95472717 246.27429199]
[201.28773499 254.79141235]
[200.47055054 269.66357422]
[207.54766846 282.88912964]
[214.62477112 296.11465454]
[228.44065857 290.24716187]
[242.72689819 285.64175415]
[257.36843872 282.33551025]
[272.24743652 280.35504150]
[287.24401855 279.71630859]
[302.23751831 280.42443848]
[317.10717773 282.47372437]
[331.73327637 285.84771729]
[345.99804688 290.51919556]
[359.78662109 296.45053101]
[372.98800659 303.59405518]
[385.49591064 311.89215088]
[397.20962524 321.27807617]
[408.03482056 331.67620850]
[417.88433838 343.00286865]
[426.67886353 355.16683960]
[434.34762573 368.07019043]
[440.82885742 381.60903931]
[446.07037354 395.67434692]
[450.02993774 410.15286255]
[452.67575073 424.92803955]
[453.98645020 439.88092041]
[453.95147705 454.89108276]
[452.57113647 469.83767700]
[449.85653687 484.60037231]
[445.82955933 499.06030273]
[440.52258301 513.10107422]
[433.97833252 526.60955811]
[426.24957275 539.47705078]
[417.39843750 551.59991455]
[407.49627686 562.88055420]
[396.62277222 573.22814941]
[384.86547852 582.55938721]
[372.31903076 590.79919434]
[359.08450317 597.88110352]
[345.26846313 603.74816895]
[330.98208618 608.35314941]
[316.34042358 611.65893555]
[301.46139526 613.63891602]
[286.46475220 614.27722168]
[271.47128296 613.56860352]
[256.60168457 611.51885986]
[241.97570801 608.14447021]
[227.71107483 603.47253418]
[213.92266846 597.54077148]
[200.72149658 590.39685059]
[188.21385193 582.09832764]
[176.50044250 572.71209717]
[165.67556763 562.31359863]
[155.82640076 550.98663330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 160]
[19 159]
[20 158]
[22 156]
[23 155]
[25 153]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[32 144]
[33 143]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[44 136]
[45 135]
[47 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
