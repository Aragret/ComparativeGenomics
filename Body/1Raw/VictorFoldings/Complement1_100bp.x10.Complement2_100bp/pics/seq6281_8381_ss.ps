%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[196.89665222 655.16558838]
[184.08171082 647.36358643]
[171.67160034 638.93249512]
[159.69715881 629.89331055]
[148.18817139 620.26849365]
[137.17326355 610.08197021]
[126.67979431 599.35900879]
[116.73386383 588.12640381]
[107.36020660 576.41192627]
[98.58211517 564.24481201]
[90.42141724 551.65521240]
[82.89840698 538.67456055]
[76.03177643 525.33502197]
[69.83860779 511.66976929]
[64.33429718 497.71282959]
[59.53252411 483.49884033]
[55.44523239 469.06320190]
[52.08257675 454.44177246]
[49.45291901 439.67086792]
[47.56280518 424.78729248]
[46.41692352 409.82797241]
[46.01812744 394.83013916]
[46.36741257 379.83108521]
[47.46390152 364.86807251]
[49.30487442 349.97830200]
[51.88575363 335.19882202]
[55.20012283 320.56637573]
[59.23974228 306.11730957]
[63.99456787 291.88757324]
[69.45277405 277.91250610]
[75.60079956 264.22689819]
[82.42335510 250.86477661]
[89.90347290 237.85932922]
[98.02256775 225.24288940]
[106.76044464 213.04684448]
[116.09538269 201.30151367]
[126.00417328 190.03608704]
[136.46218872 179.27857971]
[147.44342041 169.05574036]
[137.78260803 157.58103943]
[128.12179565 146.10633850]
[121.40911865 143.01411438]
[118.40411377 134.38812256]
[108.91521454 122.77085876]
[99.42631531 111.15359497]
[89.85119629 99.60729218]
[80.10522461 88.20483398]
[65.21694946 82.85228729]
[62.71988297 68.16848755]
[52.88930130 56.83889389]
[43.05871964 45.50930023]
[33.22813797 34.17970657]
[20.92203140 42.78071976]
[7.78427601 50.04825592]
[-6.04118347 55.90269089]
[-20.40286827 60.27987289]
[-35.14342117 63.13184738]
[-50.10134125 64.42736816]
[-65.11273956 64.15224457]
[-80.01313782 62.30947876]
[-94.63928223 58.91926956]
[-108.83092499 54.01876068]
[-122.43257141 47.66164398]
[-135.29519653 39.91757584]
[-147.27786255 30.87139702]
[-158.24929810 20.62222672]
[-168.08927917 9.28236103]
[-176.68998718 -3.02395511]
[-183.95719910 -16.16188812]
[-189.81129456 -29.98748970]
[-194.18814087 -44.34928131]
[-197.03974915 -59.08990479]
[-198.33491516 -74.04785156]
[-198.05941772 -89.05924225]
[-196.21629333 -103.95960236]
[-192.82572937 -118.58566284]
[-187.92488098 -132.77719116]
[-181.56742859 -146.37867737]
[-173.82304382 -159.24111938]
[-164.77658081 -171.22357178]
[-154.52714539 -182.19474792]
[-143.18704224 -192.03445435]
[-130.88050842 -200.63485718]
[-117.74240112 -207.90176392]
[-103.91665649 -213.75552368]
[-89.55476379 -218.13200378]
[-74.81407166 -220.98326111]
[-59.85608673 -222.27806091]
[-44.84470367 -222.00219727]
[-29.94439316 -220.15872192]
[-15.31840992 -216.76779175]
[-1.12700534 -211.86659241]
[12.47433281 -205.50881958]
[25.33658028 -197.76412964]
[37.31880951 -188.71736145]
[48.28974152 -178.46766663]
[58.12916565 -167.12731934]
[66.72928619 -154.82058716]
[73.99586487 -141.68229675]
[79.84928894 -127.85641479]
[84.22542572 -113.49440765]
[87.07632446 -98.75364685]
[88.37075806 -83.79563904]
[88.09453583 -68.78425598]
[86.25068665 -53.88399506]
[82.85941315 -39.25809479]
[77.95787048 -25.06680679]
[71.59976196 -11.46562386]
[63.85475159 1.39643526]
[54.80770111 13.37844658]
[44.55773163 24.34912682]
[54.38831329 35.67872238]
[64.21889496 47.00831223]
[74.04947662 58.33790588]
[88.23460388 62.88008499]
[91.43482208 78.37425232]
[98.19278717 81.36618805]
[101.32589722 89.94647980]
[108.51379395 93.59431458]
[111.04357910 101.66469574]
[120.53247833 113.28195953]
[130.02137756 124.89922333]
[139.59649658 136.44552612]
[149.25730896 147.92022705]
[158.91812134 159.39492798]
[170.86254883 150.31613159]
[183.24467468 141.84400940]
[196.03370667 133.99961853]
[209.19786072 126.80245972]
[222.70440674 120.27042389]
[236.51974487 114.41976166]
[250.60954285 109.26499939]
[264.93878174 104.81897736]
[279.47180176 101.09272766]
[294.17251587 98.09552765]
[309.00433350 95.83482361]
[323.93041992 94.31623840]
[338.91363525 93.54354095]
[353.91674805 93.51866150]
[368.90246582 94.24165344]
[383.83349609 95.71072388]
[398.67272949 97.92222595]
[413.38330078 100.87065125]
[427.92861938 104.54867554]
[442.27252197 108.94715118]
[456.37933350 114.05514526]
[470.21398926 119.85995483]
[483.74212646 126.34715271]
[496.93008423 133.50061035]
[509.74505615 141.30255127]
[522.15521240 149.73355103]
[534.12969971 158.77267456]
[545.63873291 168.39744568]
[556.65368652 178.58392334]
[567.14721680 189.30679321]
[577.09320068 200.53939819]
[586.46691895 212.25379944]
[595.24511719 224.42089844]
[603.40588379 237.01040649]
[610.92895508 249.99105835]
[617.79565430 263.33056641]
[623.98889160 276.99575806]
[629.49328613 290.95269775]
[634.29510498 305.16662598]
[638.38244629 319.60226440]
[641.74517822 334.22369385]
[644.37493896 348.99456787]
[646.26513672 363.87814331]
[647.41107178 378.83743286]
[647.80993652 393.83526611]
[647.46075439 408.83435059]
[646.36431885 423.79736328]
[644.52343750 438.68710327]
[641.94262695 453.46661377]
[638.62835693 468.09909058]
[634.58880615 482.54818726]
[629.83404541 496.77795410]
[624.37591553 510.75302124]
[618.22796631 524.43865967]
[611.40551758 537.80084229]
[603.92541504 550.80633545]
[595.80639648 563.42279053]
[587.06860352 575.61889648]
[577.73370361 587.36425781]
[567.82501221 598.62976074]
[557.36700439 609.38732910]
[546.38586426 619.61022949]
[534.90875244 629.27301025]
[522.96429443 638.35174561]
[510.58209229 646.82385254]
[497.79302979 654.66815186]
[484.62884521 661.86523438]
[471.12225342 668.39721680]
[457.30688477 674.24780273]
[443.21707153 679.40246582]
[428.88781738 683.84844971]
[414.35476685 687.57458496]
[399.65405273 690.57171631]
[384.82220459 692.83233643]
[369.89611816 694.35089111]
[354.91287231 695.12347412]
[339.90975952 695.14825439]
[324.92407227 694.42523193]
[309.99304199 692.95605469]
[295.15380859 690.74450684]
[280.44326782 687.79595947]
[265.89797974 684.11785889]
[251.55409241 679.71936035]
[237.44729614 674.61126709]
[223.61265564 668.80639648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 125]
[40 124]
[41 123]
[43 122]
[44 121]
[45 120]
[46 118]
[47 116]
[49 114]
[50 113]
[51 112]
[52 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
