%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[104.75099945 637.72906494]
[91.22087860 631.24102783]
[78.13910675 623.89080811]
[65.56055450 615.70916748]
[53.53797531 606.73046875]
[42.12179947 596.99243164]
[31.35991287 586.53582764]
[21.29745293 575.40454102]
[11.97662449 563.64520264]
[3.43652439 551.30725098]
[-4.28702831 538.44232178]
[-11.16163731 525.10449219]
[-17.15846825 511.34960938]
[-22.25236893 497.23538208]
[-26.42197227 482.82104492]
[-29.64978981 468.16702271]
[-31.92228317 453.33480835]
[-33.22991943 438.38659668]
[-33.56721497 423.38510132]
[-32.93275833 408.39321899]
[-31.32920265 393.47384644]
[-28.76328087 378.68957520]
[-25.24575233 364.10238647]
[-20.79137230 349.77346802]
[-15.41882324 335.76296997]
[-9.15063953 322.12960815]
[-2.01311231 308.93054199]
[5.96382046 296.22122192]
[14.74670029 284.05487061]
[24.29868889 272.48254395]
[34.57972336 261.55282593]
[45.54667664 251.31147766]
[57.15355301 241.80152893]
[69.35166931 233.06282043]
[82.08985901 225.13203430]
[95.31469727 218.04241943]
[108.97070312 211.82371521]
[123.00061798 206.50201416]
[111.86965179 196.60499573]
[115.21746826 181.14204407]
[110.81646729 166.80220032]
[107.09180450 163.81289673]
[105.20545197 158.45205688]
[106.50478363 151.96951294]
[102.53268433 137.50498962]
[98.56058502 123.04046631]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[83.15405273 64.82233429]
[79.39775085 50.30027390]
[74.21903229 42.77573395]
[75.69534302 35.53402710]
[72.15567017 20.95765114]
[68.61599731 6.38127565]
[65.07632446 -8.19509983]
[61.53665543 -22.77147484]
[57.99698257 -37.34785080]
[54.45730972 -51.92422485]
[50.91763687 -66.50060272]
[47.37796402 -81.07697296]
[43.83829498 -95.65335083]
[40.29862213 -110.22972870]
[35.23250961 -117.83053589]
[36.81647491 -125.04946136]
[33.49421692 -139.67692566]
[30.17195511 -154.30438232]
[26.84969711 -168.93183899]
[23.52743721 -183.55931091]
[18.57505417 -191.23469543]
[20.26632118 -198.42924500]
[17.16221046 -213.10453796]
[14.05810070 -227.77984619]
[-0.91045600 -226.53663635]
[-15.91679287 -227.17935181]
[-30.72423935 -229.69784546]
[-45.09926224 -234.05238342]
[-58.81513977 -240.17428589]
[-71.65556335 -247.96704102]
[-83.41801453 -257.30770874]
[-93.91697693 -268.04898071]
[-102.98687744 -280.02145386]
[-110.48466492 -293.03628540]
[-116.29209137 -306.88827515]
[-120.31756592 -321.35888672]
[-122.49759674 -336.21994019]
[-122.79780579 -351.23703003]
[-121.21345520 -366.17333984]
[-117.76953125 -380.79327393]
[-112.52035522 -394.86627197]
[-105.54871368 -408.17037964]
[-96.96454620 -420.49578857]
[-86.90325928 -431.64807129]
[-75.52351379 -441.45138550]
[-63.00479889 -449.75106812]
[-49.54454803 -456.41625977]
[-35.35504532 -461.34182739]
[-20.66008377 -464.45010376]
[-5.69142246 -465.69204712]
[9.31486130 -465.04806519]
[24.12209511 -462.52835083]
[38.49674988 -458.17260742]
[52.21211624 -452.04953003]
[65.05187988 -444.25570679]
[76.81354523 -434.91406250]
[87.31160736 -424.17190552]
[96.38050079 -412.19866943]
[103.87718964 -399.18316650]
[109.68345642 -385.33071899]
[113.70771027 -370.85974121]
[115.88648987 -355.99853516]
[116.18543243 -340.98141479]
[114.59982300 -326.04522705]
[111.15467072 -311.42559814]
[105.90431213 -297.35302734]
[98.93154144 -284.04949951]
[90.34634399 -271.72482300]
[80.28411102 -260.57339478]
[68.90354919 -250.77104187]
[56.38413239 -242.47239685]
[42.92332077 -235.80833435]
[28.73340225 -230.88395691]
[31.83751297 -216.20864868]
[34.94162369 -201.53335571]
[38.15489578 -186.88156128]
[41.47715759 -172.25410461]
[44.79941559 -157.62664795]
[48.12167740 -142.99917603]
[51.44393539 -128.37171936]
[54.87499619 -113.76940155]
[58.41466904 -99.19302368]
[61.95434189 -84.61664581]
[65.49401093 -70.04027557]
[69.03368378 -55.46389771]
[72.57335663 -40.88752365]
[76.11302948 -26.31114769]
[79.65270233 -11.73477173]
[83.19237518 2.84160328]
[86.73204803 17.41797829]
[90.27172089 31.99435425]
[93.91980743 46.54397583]
[97.67610931 61.06603241]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.02510834 119.06836700]
[116.99720764 133.53289795]
[120.96930695 147.99742126]
[125.15631866 162.40119934]
[129.55731201 176.74104309]
[141.00306702 187.66374207]
[137.34046936 202.10101318]
[151.94023132 198.63607788]
[166.73365784 196.12344360]
[181.65870667 194.57366943]
[196.65277100 193.99324036]
[211.65296936 194.38458252]
[226.59635925 195.74607849]
[241.42030334 198.07200623]
[256.06259155 201.35261536]
[270.46182251 205.57414246]
[284.55758667 210.71885681]
[298.29077148 216.76522827]
[311.60375977 223.68785095]
[324.44076538 231.45771790]
[336.74786377 240.04222107]
[348.47351074 249.40536499]
[359.56848145 259.50787354]
[369.98623657 270.30737305]
[379.68310547 281.75857544]
[388.61837769 293.81341553]
[396.75460815 306.42138672]
[404.05767822 319.52954102]
[410.49691772 333.08294678]
[416.04537964 347.02474976]
[420.67971802 361.29647827]
[424.38052368 375.83822632]
[427.13229370 390.58905029]
[428.92346191 405.48706055]
[429.74655151 420.46975708]
[429.59805298 435.47433472]
[428.47863770 450.43780518]
[426.39297485 465.29745483]
[423.34982300 479.99093628]
[419.36193848 494.45660400]
[414.44604492 508.63378906]
[408.62280273 522.46307373]
[401.91656494 535.88635254]
[394.35552979 548.84747314]
[385.97137451 561.29193115]
[376.79925537 573.16760254]
[366.87765503 584.42462158]
[356.24822998 595.01586914]
[344.95550537 604.89678955]
[333.04684448 614.02606201]
[320.57226562 622.36529541]
[307.58401489 629.87957764]
[294.13662720 636.53741455]
[280.28646851 642.31079102]
[266.09164429 647.17553711]
[251.61169434 651.11126709]
[236.90734863 654.10144043]
[222.04028320 656.13354492]
[207.07286072 657.19903564]
[192.06787109 657.29345703]
[177.08822632 656.41644287]
[162.19676208 654.57159424]
[147.45596313 651.76666260]
[132.92762756 648.01348877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 153]
[40 151]
[41 150]
[44 149]
[45 148]
[46 147]
[47 146]
[49 145]
[50 144]
[51 143]
[52 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[72 125]
[73 124]
[74 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
