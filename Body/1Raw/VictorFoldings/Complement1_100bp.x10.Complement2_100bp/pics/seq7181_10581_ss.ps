%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[264.52267456 510.29910278]
[276.33239746 500.99713135]
[269.05917358 487.87844849]
[261.78594971 474.75973511]
[254.51272583 461.64105225]
[247.23948669 448.52236938]
[239.96626282 435.40365601]
[232.69303894 422.28497314]
[225.41979980 409.16625977]
[218.84004211 422.64614868]
[204.23260498 426.05535889]
[192.36553955 416.88076782]
[191.98683167 401.88555908]
[203.37562561 392.12362671]
[218.13519287 394.79013062]
[211.85783386 381.16680908]
[205.58047485 367.54348755]
[199.30310059 353.92019653]
[184.38711548 354.58526611]
[170.31474304 349.47512817]
[159.24102783 339.33914185]
[152.87446594 325.69897461]
[152.21342468 310.61996460]
[157.38975525 296.39855957]
[167.64393616 285.21252441]
[161.36657715 271.58920288]
[155.08921814 257.96588135]
[148.81185913 244.34255981]
[146.23181152 243.24642944]
[143.93051147 241.06225586]
[142.32452393 237.89109802]
[141.78622437 233.98280334]
[142.59341431 229.71638489]
[130.75717163 220.67465210]
[132.94563293 205.00553894]
[127.49028015 191.03274536]
[122.03491974 177.05993652]
[116.57956696 163.08714294]
[111.12420654 149.11434937]
[105.66885376 135.14155579]
[100.21349335 121.16875458]
[88.08219910 117.49650574]
[80.22311401 107.55224609]
[79.45349121 94.90071106]
[86.04923248 84.07713318]
[80.80251312 70.02466583]
[65.83057404 71.73539734]
[50.89332962 69.81417084]
[36.85850906 64.37698364]
[24.54037094 55.74392700]
[14.65245247 44.42039108]
[7.76625586 31.06744957]
[4.27820683 16.46327782]
[4.38683701 1.45780671]
[8.08148956 -13.07675171]
[15.14319324 -26.29659271]
[25.15762901 -37.43531418]
[37.53944778 -45.84833908]
[32.29272842 -59.90081024]
[26.94154167 -73.91383362]
[21.48618507 -87.88662720]
[16.03082848 -101.85942841]
[9.03183937 -88.59239960]
[-5.25705147 -84.02867126]
[-18.65051842 -90.78256226]
[-23.47617531 -104.98513031]
[-16.96966743 -118.50050354]
[-2.85821724 -123.58646393]
[10.77384663 -117.33023071]
[6.58683538 -131.73400879]
[2.39982414 -146.13778687]
[-1.78718710 -160.54158020]
[-5.97419834 -174.94535828]
[-11.37464905 -182.31237793]
[-10.11460686 -189.59483337]
[-14.08670330 -204.05935669]
[-25.20216751 -215.31799316]
[-21.11134148 -229.63980103]
[-36.06686020 -228.09635925]
[-51.07244492 -229.03570557]
[-65.71871948 -232.43223572]
[-79.60614014 -238.19326782]
[-92.35582733 -246.16165161]
[-103.61997986 -256.12002563]
[-113.09128571 -267.79666138]
[-120.51137543 -280.87304688]
[-125.67781830 -294.99246216]
[-128.44966125 -309.76971436]
[-128.75129700 -324.80163574]
[-126.57450104 -339.67816162]
[-121.97864532 -353.99346924]
[-115.08911896 -367.35702515]
[-106.09386444 -379.40423584]
[-95.23828125 -389.80645752]
[-82.81851959 -398.27990723]
[-69.17339325 -404.59341431]
[-54.67516327 -408.57476807]
[-39.71934509 -410.11535645]
[-24.71394539 -409.17309570]
[-10.06832218 -405.77374268]
[3.81798291 -400.01004028]
[16.56613922 -392.03918457]
[27.82836914 -382.07867432]
[37.29742813 -370.40020752]
[44.71499634 -357.32238770]
[49.87871933 -343.20196533]
[52.64772034 -328.42419434]
[52.94646072 -313.39221191]
[50.76679611 -298.51608276]
[46.16818237 -284.20166016]
[39.27607727 -270.83944702]
[30.27850151 -258.79397583]
[19.42091370 -248.39385986]
[6.99952030 -239.92279053]
[-6.64681673 -233.61190796]
[4.18453741 -223.38786316]
[0.37782076 -208.03144836]
[4.34991693 -193.56692505]
[8.42958355 -179.13237000]
[12.61659527 -164.72859192]
[16.80360603 -150.32479858]
[20.99061775 -135.92102051]
[25.17762947 -121.51724243]
[30.00362587 -107.31478882]
[35.45898438 -93.34198761]
[40.91434097 -79.36918640]
[46.27523041 -74.28169250]
[46.34519958 -65.14752960]
[51.59191895 -51.09505844]
[66.45764160 -52.85534286]
[81.32161713 -51.00538254]
[95.31927490 -45.64839554]
[107.63541412 -37.09172440]
[117.55162811 -25.82919312]
[124.48825073 -12.51260185]
[128.03820801 2.08597875]
[127.99093628 17.11898232]
[124.34482574 31.71254539]
[117.30762482 45.01731873]
[107.28454590 56.25788116]
[94.85498047 64.77794647]
[100.10169983 78.83041382]
[115.26882172 85.33628082]
[121.15640259 100.75393677]
[114.18629456 115.71339417]
[119.64164734 129.68618774]
[125.09700775 143.65899658]
[130.55236816 157.63179016]
[136.00772095 171.60458374]
[141.46307373 185.57737732]
[146.91842651 199.55018616]
[159.14486694 209.59133911]
[156.56620789 224.26101685]
[162.43518066 238.06520081]
[168.71253967 251.68852234]
[174.98989868 265.31182861]
[181.26725769 278.93515015]
[196.43293762 278.40820312]
[210.60678101 283.71343994]
[221.63980103 294.01324463]
[227.87202454 307.71530151]
[228.38208008 322.71881104]
[223.12338257 336.73635864]
[212.92642212 347.64282227]
[219.20378113 361.26614380]
[225.48114014 374.88946533]
[231.75849915 388.51275635]
[238.53849792 401.89303589]
[245.81172180 415.01174927]
[253.08496094 428.13043213]
[260.35818481 441.24911499]
[267.63140869 454.36782837]
[274.90463257 467.48651123]
[282.17788696 480.60519409]
[289.45111084 493.72390747]
[303.59698486 488.63562012]
[318.37591553 485.88253784]
[333.40509033 485.53594971]
[348.29519653 487.60485840]
[362.66058350 492.03561401]
[376.12915039 498.71350098]
[388.35198975 507.46551514]
[399.01254272 518.06500244]
[407.83465576 530.23736572]
[414.58984375 543.66735840]
[419.10305786 558.00701904]
[421.25747681 572.88500977]
[420.99725342 587.91595459]
[418.32913208 602.71044922]
[413.32220459 616.88531494]
[406.10620117 630.07342529]
[396.86804199 641.93310547]
[385.84695435 652.15716553]
[373.32849121 660.48089600]
[359.63684082 666.68853760]
[345.12667847 670.61938477]
[330.17385864 672.17156982]
[315.16571045 671.30499268]
[300.49093628 668.04193115]
[286.52966309 662.46710205]
[273.64355469 654.72473145]
[262.16635132 645.01544189]
[252.39535522 633.59075928]
[244.58366394 620.74652100]
[238.93360901 606.81549072]
[235.59155273 592.15856934]
[234.64405823 577.15527344]
[236.11566162 562.19427490]
[239.96824646 547.66314697]
[246.10203552 533.93829346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[15 167]
[16 166]
[17 165]
[18 164]
[25 157]
[26 156]
[27 155]
[28 154]
[33 153]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[45 142]
[46 141]
[58 129]
[59 128]
[60 126]
[61 125]
[62 124]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[75 118]
[76 117]
[78 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
