%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[164.86422729 812.57226562]
[150.47015381 808.34155273]
[136.29730225 803.42034912]
[122.37875366 797.82012939]
[108.74702454 791.55401611]
[95.43395996 784.63659668]
[82.47063446 777.08410645]
[69.88734436 768.91412354]
[57.71346283 760.14569092]
[45.97743225 750.79937744]
[34.70666122 740.89691162]
[23.92747307 730.46154785]
[13.66504002 719.51757812]
[3.94333339 708.09057617]
[-5.21494198 696.20721436]
[-13.78839684 683.89526367]
[-21.75700569 671.18347168]
[-29.10215950 658.10150146]
[-35.80670166 644.67999268]
[-41.85497665 630.95019531]
[-47.23285294 616.94427490]
[-51.92777634 602.69482422]
[-55.92877579 588.23522949]
[-59.22650909 573.59924316]
[-61.81327438 558.82098389]
[-63.68303299 543.93499756]
[-64.83141327 528.97607422]
[-65.25573730 513.97912598]
[-64.95500946 498.97918701]
[-63.92993546 484.01132202]
[-62.18290710 469.11044312]
[-59.71800613 454.31137085]
[-56.54099274 439.64865112]
[-52.65927887 425.15658569]
[-48.08193970 410.86895752]
[-42.81966019 396.81915283]
[-36.88473129 383.04000854]
[-30.29101372 369.56369019]
[-23.05390930 356.42166138]
[-15.19032001 343.64465332]
[-6.71861219 331.26248169]
[2.34142828 319.30404663]
[11.96864223 307.79730225]
[22.14054298 296.76913452]
[32.83337402 286.24526978]
[44.02216339 276.25030518]
[55.68077850 266.80758667]
[67.78199005 257.93917847]
[80.29753113 249.66575623]
[93.19817352 242.00666809]
[106.45379639 234.97979736]
[120.03342438 228.60156250]
[133.90534973 222.88684082]
[128.86843872 208.75781250]
[118.07736969 203.29159546]
[113.76539612 191.56169128]
[118.75602722 179.66815186]
[113.93002319 165.46568298]
[109.10402679 151.26322937]
[104.27803040 137.06077576]
[92.85733032 127.49955750]
[95.74327087 111.94378662]
[93.69543457 126.80334473]
[87.92044830 140.64709473]
[78.80136108 152.55685425]
[66.94299316 161.74266052]
[53.13188171 167.59527588]
[38.28405762 169.72651672]
[23.38433075 167.99501038]
[9.42094135 162.51562500]
[-2.67996573 153.65176392]
[-12.11578274 141.99133301]
[-18.26066399 128.30775452]
[-20.70704460 113.50859833]
[-19.29266167 98.57542419]
[-14.11132717 84.49871826]
[-5.50670147 72.21212006]
[5.95050240 62.53056717]
[19.50036812 56.09619904]
[34.24418640 53.33578110]
[49.20404434 54.43240356]
[63.38771439 59.31333542]
[75.85444641 67.65483856]
[85.77735901 78.90364838]
[92.50000000 92.31851959]
[92.50000000 77.31851959]
[92.50000000 62.31851959]
[92.50000000 47.31851959]
[92.50000000 32.31851959]
[84.76270294 18.51834869]
[92.50000000 5.79107618]
[92.50000000 -9.20892334]
[92.50000000 -24.20892334]
[92.50000000 -39.20892334]
[84.76270294 -53.00909424]
[92.50000000 -65.73636627]
[92.50000000 -80.73636627]
[78.24732971 -85.89749146]
[66.62139893 -95.62444305]
[59.02610016 -108.74264526]
[56.37859344 -123.66800690]
[58.99858856 -138.59822083]
[66.56970215 -151.73040771]
[78.17768860 -161.47875977]
[92.42082214 -166.66613770]
[107.57917786 -166.66613770]
[121.82231140 -161.47875977]
[133.43029785 -151.73040771]
[141.00140381 -138.59822083]
[143.62139893 -123.66800690]
[140.97390747 -108.74264526]
[133.37860107 -95.62444305]
[121.75267029 -85.89749146]
[107.50000000 -80.73636627]
[107.50000000 -65.73636627]
[115.23729706 -53.00909424]
[107.50000000 -39.20892334]
[107.50000000 -24.20892334]
[107.50000000 -9.20892334]
[107.50000000 5.79107618]
[115.23729706 18.51834869]
[107.50000000 32.31851959]
[107.50000000 47.31851959]
[107.50000000 62.31851959]
[107.50000000 77.31851959]
[107.50000000 92.31851959]
[109.94572449 107.11779022]
[121.71160889 117.69487000]
[118.48048401 132.23478699]
[123.30648041 146.43724060]
[128.13247681 160.63969421]
[132.95848083 174.84214783]
[147.08468628 186.65451050]
[142.99746704 203.72090149]
[148.03437805 217.84992981]
[162.39305115 213.50059509]
[176.94509888 209.85006714]
[191.65650940 206.90684509]
[206.49293518 204.67782593]
[221.41973877 203.16821289]
[236.40203857 202.38153076]
[251.40486145 202.31959534]
[266.39312744 202.98258972]
[281.33187866 204.36894226]
[296.18621826 206.47541809]
[310.92141724 209.29708862]
[325.50311279 212.82737732]
[339.89718628 217.05804443]
[354.07006836 221.97918701]
[367.98864746 227.57933044]
[381.62039185 233.84538269]
[394.93350220 240.76272583]
[407.89685059 248.31518555]
[420.48019409 256.48510742]
[432.65411377 265.25347900]
[444.39019775 274.59973145]
[455.66101074 284.50210571]
[466.44024658 294.93743896]
[476.70272827 305.88137817]
[486.42449951 317.30834961]
[495.58282471 329.19168091]
[504.15634155 341.50357056]
[512.12500000 354.21533203]
[519.47021484 367.29721069]
[526.17480469 380.71871948]
[532.22314453 394.44845581]
[537.60113525 408.45437622]
[542.29608154 422.70379639]
[546.29718018 437.16339111]
[549.59497070 451.79937744]
[552.18182373 466.57763672]
[554.05163574 481.46359253]
[555.20007324 496.42251587]
[555.62451172 511.41946411]
[555.32385254 526.41937256]
[554.29882812 541.38726807]
[552.55187988 556.28814697]
[550.08703613 571.08721924]
[546.91009521 585.74993896]
[543.02844238 600.24206543]
[538.45117188 614.52972412]
[533.18896484 628.57952881]
[527.25408936 642.35870361]
[520.66046143 655.83502197]
[513.42340088 668.97711182]
[505.55987549 681.75415039]
[497.08822632 694.13635254]
[488.02822876 706.09484863]
[478.40109253 717.60162354]
[468.22924805 728.62988281]
[457.53643799 739.15374756]
[446.34771729 749.14880371]
[434.68914795 758.59155273]
[422.58798218 767.46002197]
[410.07247925 775.73352051]
[397.17187500 783.39263916]
[383.91629028 790.41961670]
[370.33666992 796.79791260]
[356.46478271 802.51269531]
[342.33297729 807.55059814]
[327.97427368 811.89984131]
[313.42224121 815.55029297]
[298.71078491 818.49346924]
[283.87435913 820.72241211]
[268.94754028 822.23193359]
[253.96524048 823.01855469]
[238.96243286 823.08044434]
[223.97415161 822.41735840]
[209.03540039 821.03094482]
[194.18109131 818.92437744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 135]
[54 134]
[57 132]
[58 131]
[59 130]
[60 129]
[62 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[91 120]
[92 119]
[93 118]
[94 117]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
