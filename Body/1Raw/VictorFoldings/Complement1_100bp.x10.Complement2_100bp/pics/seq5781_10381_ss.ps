%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[160.74555969 631.33959961]
[146.74118042 636.91998291]
[131.80818176 638.98608398]
[116.81472015 637.41772461]
[102.63251495 632.30615234]
[90.08610535 623.94842529]
[79.90490723 612.83056641]
[72.68084717 599.59893799]
[68.83393097 585.02276611]
[68.58780670 569.94952393]
[71.95677948 555.25555420]
[78.74498749 541.79510498]
[88.55777740 530.35076904]
[100.82463837 521.58789062]
[114.83238983 516.01599121]
[129.76664734 513.95898438]
[131.32717896 499.04034424]
[132.88769531 484.12173462]
[126.51646423 470.65859985]
[135.64747620 457.73825073]
[137.20799255 442.81964111]
[130.83676147 429.35647583]
[139.96777344 416.43615723]
[141.19474792 401.48641968]
[142.08757019 386.51300049]
[142.98037720 371.53961182]
[143.87319946 356.56619263]
[144.76602173 341.59280396]
[145.65882874 326.61938477]
[144.20941162 311.68957520]
[140.45310974 297.16751099]
[136.69680786 282.64544678]
[132.94050598 268.12341309]
[129.18420410 253.60134888]
[125.42790985 239.07928467]
[115.16754913 232.67213440]
[111.91926575 220.60430908]
[117.95108032 209.20343018]
[114.41140747 194.62704468]
[110.87173462 180.05067444]
[98.10617065 176.14138794]
[88.86512756 166.35633850]
[85.64014435 153.17797852]
[89.37747955 140.02310181]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[78.68841553 44.02146530]
[70.95938110 56.87689209]
[56.81669617 61.87534332]
[42.72620773 56.73159409]
[35.12989807 43.79729843]
[37.50069427 28.98583794]
[48.75470352 19.06881714]
[63.74674225 18.58016205]
[75.62364960 27.74484253]
[73.61963654 12.87931442]
[71.61562347 -1.98621356]
[69.28013611 -16.80328178]
[66.61434174 -31.56449890]
[63.94854355 -46.32571411]
[60.95376968 -61.02371979]
[57.63151169 -75.65118408]
[47.02985764 -87.39492035]
[51.75610733 -101.51979065]
[48.43384933 -116.14724731]
[45.11158752 -130.77470398]
[39.16452408 -117.00399780]
[27.18811226 -107.97263336]
[12.31295490 -106.04139709]
[-1.57261634 -111.71509552]
[-10.83894634 -123.51065063]
[-13.06383991 -138.34472656]
[-7.66571331 -152.33973694]
[3.94437504 -161.83741760]
[18.73157501 -164.35508728]
[32.83055115 -159.23464966]
[42.55547714 -147.81536865]
[41.43983078 -162.77381897]
[40.32418060 -177.73226929]
[39.20853043 -192.69071960]
[38.09288406 -207.64918518]
[36.97723389 -222.60763550]
[35.86158752 -237.56608582]
[34.74593735 -252.52453613]
[33.63028717 -267.48300171]
[24.88801003 -280.66946411]
[31.65726852 -293.93695068]
[30.54161835 -308.89541626]
[29.42597008 -323.85388184]
[14.68670273 -327.20727539]
[1.59152842 -334.75762939]
[-8.69513988 -345.83355713]
[-15.25861740 -359.45016479]
[-17.51528358 -374.39669800]
[-15.26448059 -389.34411621]
[-8.70634460 -402.96328735]
[1.57597804 -414.04324341]
[14.66819000 -421.59872437]
[29.40614128 -424.95794678]
[44.47934341 -423.82214355]
[58.54749298 -418.29235840]
[70.35966492 -408.86029053]
[78.86553192 -396.36462402]
[83.30875397 -381.91647339]
[83.29423523 -366.80053711]
[78.82328033 -352.36096191]
[70.29343414 -339.88165283]
[58.46316910 -330.47225952]
[44.38442230 -324.96951294]
[45.50007248 -310.01107788]
[46.61572266 -295.05261230]
[55.27820206 -282.93606567]
[48.58874130 -268.59863281]
[49.70439148 -253.64018250]
[50.82003784 -238.68173218]
[51.93568802 -223.72328186]
[53.05133820 -208.76483154]
[54.16698456 -193.80636597]
[55.28263474 -178.84791565]
[56.39828110 -163.88946533]
[57.51393127 -148.93101501]
[59.73904800 -134.09696960]
[63.06130981 -119.46950531]
[66.38356781 -104.84204865]
[76.74758911 -94.14456177]
[72.25897217 -78.97344208]
[75.58123016 -64.34597778]
[78.35382080 -62.16765976]
[80.20906830 -58.53818130]
[80.47642517 -53.90333557]
[78.70976257 -48.99151230]
[81.37555695 -34.23029327]
[84.04135132 -19.46907616]
[86.71391296 -17.16912651]
[88.40524292 -13.46042824]
[88.46537018 -8.81826496]
[86.48114777 -3.99022722]
[88.48516083 10.87530136]
[90.48918152 25.74082947]
[93.26478577 40.48179245]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[129.46665955 133.48689270]
[138.08973694 147.84460449]
[136.47198486 164.34747314]
[125.44811249 176.51100159]
[128.98777771 191.08738708]
[132.52745056 205.66375732]
[145.54347229 218.68930054]
[139.94996643 235.32298279]
[143.70626831 249.84504700]
[147.46257019 264.36709595]
[151.21887207 278.88916016]
[154.97517395 293.41122437]
[158.73147583 307.93328857]
[161.93270874 293.27886963]
[168.92010498 280.00570679]
[179.18923950 269.07205200]
[191.99877930 261.26718140]
[206.42396545 257.15454102]
[221.42346191 257.03103638]
[235.91442871 260.90557861]
[248.85073853 268.49844360]
[259.29852295 279.26150513]
[266.50357056 292.41778564]
[269.94567871 307.01748657]
[269.37643433 322.00668335]
[264.83688354 336.30328369]
[256.65472412 348.87518311]
[245.42070007 358.81481934]
[231.94573975 365.40463257]
[217.20265198 368.16891479]
[202.25573730 366.90808105]
[188.18402100 361.71319580]
[176.00337219 352.95925903]
[166.59309387 341.27819824]
[160.63223267 327.51220703]
[159.73942566 342.48559570]
[158.84660339 357.45901489]
[157.95379639 372.43243408]
[157.06097412 387.40582275]
[156.16815186 402.37924194]
[158.50598145 407.04632568]
[158.79129028 411.68008423]
[157.38047791 415.50430298]
[154.88638306 417.99667358]
[161.14599609 432.52691650]
[152.12660217 444.38015747]
[150.56608582 459.29876709]
[156.82569885 473.82901001]
[147.80630493 485.68228149]
[146.24577332 500.60089111]
[144.68525696 515.51947021]
[158.87055969 520.62249756]
[171.42202759 528.97259521]
[181.60997009 540.08422852]
[188.84204102 553.31152344]
[192.69779968 567.88531494]
[192.95306396 582.95843506]
[189.59300232 597.65447998]
[182.81295776 611.11901855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 202]
[17 201]
[18 200]
[20 198]
[21 197]
[23 195]
[24 191]
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 159]
[38 157]
[39 156]
[40 155]
[45 151]
[46 150]
[48 147]
[49 146]
[50 145]
[51 144]
[59 143]
[60 142]
[61 141]
[62 137]
[63 136]
[64 135]
[65 131]
[66 130]
[68 128]
[69 127]
[70 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
