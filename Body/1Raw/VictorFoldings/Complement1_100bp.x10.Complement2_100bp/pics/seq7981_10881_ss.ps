%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[107.65715790 273.36248779]
[105.57071686 258.50234985]
[104.50322723 243.53446960]
[104.45967865 228.52864075]
[105.44027710 213.55482483]
[107.44043732 198.68283081]
[110.45083618 183.98200989]
[114.45744324 169.52090454]
[119.44158173 155.36691284]
[125.37999725 141.58605957]
[132.24502563 128.24259949]
[119.40607452 120.48620605]
[106.56713867 112.72981262]
[92.59319305 112.26028442]
[85.67646790 100.10913086]
[72.83753204 92.35273743]
[59.99858856 84.59634399]
[47.15964890 76.83995819]
[34.32070923 69.08356476]
[21.48176765 61.32717133]
[12.95453930 73.67331696]
[3.69049835 85.47663879]
[-6.27589035 96.69322968]
[-16.90755081 107.28136444]
[-28.16493416 117.20166016]
[-40.00615692 126.41719818]
[-52.38717651 134.89370728]
[-65.26193237 142.59965515]
[-78.58251953 149.50637817]
[-92.29939270 155.58816528]
[-106.36152649 160.82240295]
[-120.71660614 165.18962097]
[-135.31123352 168.67356873]
[-150.09109497 171.26129150]
[-165.00123596 172.94314575]
[-179.98617554 173.71290588]
[-194.99015808 173.56768799]
[-209.95739746 172.50802612]
[-224.83218384 170.53787231]
[-239.55920410 167.66455078]
[-254.08364868 163.89875793]
[-268.35150146 159.25450134]
[-282.30969238 153.74905396]
[-295.90628052 147.40289307]
[-309.09066772 140.23963928]
[-321.81387329 132.28591919]
[-334.02847290 123.57135010]
[-345.68911743 114.12833405]
[-356.75238037 103.99199677]
[-367.17709351 93.20005798]
[-376.92449951 81.79265594]
[-385.95834351 69.81222534]
[-394.24499512 57.30334091]
[-401.75363159 44.31253433]
[-408.45635986 30.88813400]
[-414.32818604 17.08007812]
[-419.34732056 2.93973517]
[-423.49502563 -11.48029327]
[-426.75595093 -26.12636185]
[-429.11788940 -40.94398880]
[-430.57211304 -55.87804794]
[-431.11318970 -70.87297821]
[-430.73910522 -85.87300873]
[-429.45123291 -100.82233429]
[-427.25442505 -115.66534424]
[-424.15676880 -130.34680176]
[-420.16986084 -144.81211853]
[-415.30847168 -159.00747681]
[-409.59075928 -172.88005066]
[-403.03790283 -186.37823486]
[-395.67437744 -199.45184326]
[-387.52749634 -212.05221558]
[-378.62759399 -224.13247681]
[-369.00781250 -235.64770508]
[-358.70388794 -246.55503845]
[-347.75418091 -256.81393433]
[-336.19940186 -266.38616943]
[-324.08255005 -275.23620605]
[-311.44873047 -283.33108521]
[-298.34487915 -290.64068604]
[-284.81979370 -297.13784790]
[-270.92376709 -302.79833984]
[-256.70852661 -307.60116577]
[-242.22689819 -311.52844238]
[-227.53277588 -314.56555176]
[-212.68084717 -316.70120239]
[-197.72634888 -317.92742920]
[-182.72489929 -318.23968506]
[-167.73231506 -317.63684082]
[-152.80438232 -316.12109375]
[-137.99661255 -313.69808960]
[-123.36411285 -310.37683105]
[-108.96130371 -306.16970825]
[-94.84175873 -301.09237671]
[-81.05802155 -295.16366577]
[-67.66136169 -288.40570068]
[-54.70161057 -280.84356689]
[-42.22698212 -272.50543213]
[-30.28388786 -263.42230225]
[-18.91675377 -253.62796021]
[-8.16786575 -243.15884399]
[1.92278814 -232.05390930]
[11.31766987 -220.35446167]
[19.98183060 -208.10403442]
[27.88303566 -195.34817505]
[34.99189758 -182.13435364]
[41.28196335 -168.51173401]
[46.72984314 -154.53097534]
[51.31526184 -140.24411011]
[55.02116394 -125.70425415]
[57.83376312 -110.96553040]
[59.74259567 -96.08274841]
[60.74056244 -81.11127472]
[60.82394791 -66.10681152]
[59.99244690 -51.12517548]
[58.24914932 -36.22209549]
[55.60054016 -21.45301628]
[52.05647278 -6.87287712]
[47.63013077 7.46408081]
[42.33798218 21.50452232]
[36.19971466 35.19621658]
[29.23815918 48.48823166]
[42.07709885 56.24462128]
[54.91604233 64.00101471]
[67.75498199 71.75740814]
[80.59392548 79.51379395]
[93.43286133 87.27018738]
[107.40680695 87.73971558]
[114.32353210 99.89086914]
[127.16246796 107.64726257]
[140.00140381 115.40365601]
[148.61909485 103.11902618]
[158.05503845 91.45112610]
[168.26522827 80.45436096]
[179.20205688 70.18000793]
[190.81454468 60.67596436]
[203.04855347 51.98654556]
[215.84701538 44.15226364]
[229.15028381 37.20964813]
[242.89631653 31.19106674]
[257.02102661 26.12458420]
[271.45855713 22.03382111]
[286.14160156 18.93785095]
[301.00167847 16.85110855]
[315.96954346 15.78332424]
[330.97537231 15.73947525]
[345.94921875 16.71976662]
[360.82122803 18.71962738]
[375.52212524 21.72973442]
[389.98330688 25.73605156]
[404.13739014 30.71990013]
[417.91836548 36.65804291]
[431.26199341 43.52279282]
[444.10601807 51.28214645]
[456.39059448 59.89991760]
[468.05841064 69.33593750]
[479.05511475 79.54619598]
[489.32940674 90.48310089]
[498.83337402 102.09565735]
[507.52270508 114.32971191]
[515.35687256 127.12823486]
[522.29943848 140.43154907]
[528.31793213 154.17761230]
[533.38427734 168.30236816]
[537.47497559 182.73992920]
[540.57086182 197.42298889]
[542.65747070 212.28309631]
[543.72515869 227.25094604]
[543.76892090 242.25677490]
[542.78851318 257.23059082]
[540.78857422 272.10263062]
[537.77838135 286.80349731]
[533.77191162 301.26464844]
[528.78802490 315.41870117]
[522.84973145 329.19964600]
[515.98492432 342.54321289]
[508.22549438 355.38717651]
[499.60763550 367.67169189]
[490.17153931 379.33947754]
[479.96121216 390.33609009]
[469.02423096 400.61029053]
[457.41162109 410.11419678]
[445.17749023 418.80343628]
[432.37890625 426.63754272]
[419.07556152 433.57998657]
[405.32943726 439.59838867]
[391.20468140 444.66467285]
[376.76708984 448.75524902]
[362.08398438 451.85101318]
[347.22387695 453.93756104]
[332.25601196 455.00515747]
[317.25018311 455.04879761]
[302.27636719 454.06829834]
[287.40435791 452.06823730]
[272.70352173 449.05795288]
[258.24237061 445.05142212]
[244.08836365 440.06738281]
[230.30746460 434.12905884]
[216.96394348 427.26412964]
[204.12002563 419.50460815]
[191.83555603 410.88665771]
[180.16786194 401.45050049]
[169.17129517 391.24008179]
[158.89715576 380.30303955]
[149.39335632 368.69036865]
[140.70417786 356.45620728]
[132.87014771 343.65756226]
[125.92780304 330.35415649]
[119.90950012 316.60800171]
[114.84330750 302.48318481]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 131]
[12 130]
[13 129]
[15 127]
[16 126]
[17 125]
[18 124]
[19 123]
[20 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
