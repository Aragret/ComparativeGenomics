%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[-1.45245659 368.99206543]
[-1.27979314 384.02600098]
[-3.58414435 398.88333130]
[-8.30264568 413.15869141]
[-15.30657291 426.46261597]
[-24.40485382 438.43222046]
[-35.34928131 448.74090576]
[-47.84128189 457.10751343]
[-61.54006577 463.30371094]
[-76.07192230 467.16055298]
[-91.04040527 468.57275391]
[-106.03717041 467.50180054]
[-120.65309143 463.97692871]
[-134.48944092 458.09429932]
[-147.16874695 450.01437378]
[-158.34509277 439.95761108]
[-167.71362305 428.19830322]
[-175.01872253 415.05734253]
[-180.06109619 400.89315796]
[-182.70321655 386.09216309]
[-182.87298584 371.05816650]
[-180.56576538 356.20129395]
[-175.84451294 341.92684937]
[-168.83802795 328.62426758]
[-159.73744202 316.65643311]
[-148.79103088 306.34982300]
[-136.29742432 297.98565674]
[-122.59744263 291.79205322]
[-108.06484222 287.93804932]
[-93.09608459 286.52871704]
[-78.09952545 287.60256958]
[-63.48428345 291.13024902]
[-57.61532593 277.32608032]
[-51.74636459 263.52188110]
[-45.87740326 249.71771240]
[-40.00844193 235.91352844]
[-34.13948059 222.10935974]
[-45.60624313 231.77958679]
[-59.23378754 238.04776001]
[-74.03833008 240.46138000]
[-88.95111847 238.84620667]
[-102.89557648 233.31883240]
[-114.86505890 224.27827454]
[-123.99546814 212.37719727]
[-129.62767029 198.47474670]
[-131.35507202 183.57453918]
[-129.05297852 168.75224304]
[-122.88757324 155.07789612]
[-113.30394745 143.53865051]
[-100.99394226 134.96755981]
[-86.84623718 129.98333740]
[-71.88216400 128.94583130]
[-57.18198395 131.92993164]
[-43.80692673 138.72019958]
[-32.72254562 148.82646179]
[-24.72903252 161.51913452]
[-20.40344429 175.88189697]
[-20.05804825 190.87792969]
[-23.71821404 205.42570496]
[-13.88763237 194.09611511]
[-4.05705166 182.76651001]
[-3.94017982 179.24250793]
[-2.11061215 175.60000610]
[1.46874356 172.64340210]
[6.47434616 171.16319275]
[16.80101395 160.28385925]
[27.12768364 149.40452576]
[37.45435333 138.52519226]
[22.87970543 142.07197571]
[8.19170189 139.02851868]
[-3.77363348 129.98249817]
[-10.70598221 116.68051910]
[-11.26681709 101.69100189]
[-5.34784985 87.90819550]
[5.90806103 77.99333191]
[20.32757378 73.86082458]
[35.12650681 76.30858612]
[47.44742203 84.86400604]
[54.91133499 97.87515259]
[56.07709122 112.82978058]
[50.71888733 126.84145355]
[62.81464005 117.97055817]
[74.91039276 109.09966278]
[87.00614166 100.22876740]
[98.83241272 91.00167084]
[104.82807922 73.59094238]
[122.22962189 71.32086945]
[127.69285583 56.47285080]
[142.39483643 54.08516312]
[153.79730225 44.33919907]
[165.19975281 34.59323502]
[166.98315430 21.81895065]
[176.68093872 13.93625641]
[188.75024414 14.74771214]
[200.29653931 5.17259264]
[211.84283447 -4.40252686]
[217.52653503 -19.16756058]
[232.26243591 -21.33609009]
[243.80873108 -30.91121101]
[235.25596619 -43.24537659]
[227.79518127 -56.26912689]
[221.48159790 -69.88603210]
[216.36198425 -83.99528503]
[212.47421265 -98.49240875]
[209.84710693 -113.27008820]
[208.50009155 -128.21890259]
[208.44313049 -143.22816467]
[209.67668152 -158.18676758]
[212.19157410 -172.98396301]
[215.96920776 -187.51017761]
[220.98161316 -201.65786743]
[227.19168091 -215.32229614]
[234.55343628 -228.40228271]
[243.01235962 -240.80099487]
[252.50582886 -252.42663574]
[262.96356201 -263.19311523]
[274.30810547 -273.02075195]
[286.45553589 -281.83676147]
[299.31582642 -289.57586670]
[312.79382324 -296.18078613]
[326.78973389 -301.60263062]
[341.19992065 -305.80120850]
[355.91769409 -308.74548340]
[370.83407593 -310.41363525]
[385.83865356 -310.79330444]
[400.82031250 -309.88171387]
[415.66815186 -307.68557739]
[430.27224731 -304.22116089]
[444.52444458 -299.51412964]
[458.31924438 -293.59933472]
[471.55450439 -286.52053833]
[484.13226318 -278.33016968]
[495.95935059 -269.08889771]
[506.94821167 -258.86508179]
[517.01751709 -247.73446655]
[526.09265137 -235.77943420]
[534.10650635 -223.08851624]
[540.99975586 -209.75566101]
[546.72125244 -195.87957764]
[551.22875977 -181.56300354]
[554.48883057 -166.91195679]
[556.47729492 -152.03488159]
[557.17956543 -137.04193115]
[556.59033203 -122.04412842]
[554.71392822 -107.15249634]
[551.56439209 -92.47729492]
[547.16491699 -78.12717438]
[541.54809570 -64.20837402]
[534.75549316 -50.82395935]
[526.83752441 -38.07301331]
[517.85266113 -26.04994774]
[507.86752319 -14.84377575]
[496.95599365 -4.53746653]
[485.19888306 4.79267502]
[472.68319702 13.07756996]
[459.50164795 20.25587845]
[445.75183105 26.27445602]
[431.53549194 31.08873940]
[416.95791626 34.66308594]
[402.12704468 36.97103500]
[387.15267944 37.99549484]
[372.14566040 37.72888184]
[357.21713257 36.17316818]
[342.47756958 33.33987808]
[328.03619385 29.24998093]
[313.99981689 23.93376160]
[300.47244263 17.43058014]
[287.55419922 9.78858471]
[275.34069824 1.06435430]
[263.92242432 -8.67751884]
[253.38385010 -19.36490822]
[241.83755493 -9.78978920]
[236.97973633 4.29036808]
[221.41796875 7.14377451]
[209.87165833 16.71889496]
[198.32536316 26.29401398]
[193.12344360 43.05429840]
[174.94572449 45.99569702]
[163.54325867 55.74166107]
[152.14080811 65.48762512]
[147.49314880 79.63854980]
[131.97558594 82.72332764]
[130.71870422 94.75440979]
[121.29888916 102.96725464]
[108.40753174 102.54797363]
[107.86812592 105.54772949]
[106.22530365 108.41751862]
[103.52511597 110.74827576]
[99.96406555 112.15367126]
[95.87703705 112.32452393]
[83.78128815 121.19541931]
[71.68553162 130.06631470]
[59.58978271 138.93721008]
[48.33368683 148.85186768]
[38.00701904 159.73120117]
[27.68034935 170.61053467]
[17.35367966 181.48986816]
[7.27254152 192.59709167]
[-2.55803919 203.92669678]
[-12.38862038 215.25628662]
[-20.33530426 227.97831726]
[-26.20426559 241.78250122]
[-32.07322693 255.58666992]
[-37.94218826 269.39083862]
[-43.81114578 283.19503784]
[-49.68010712 296.99920654]
[-36.99924850 305.07669067]
[-25.82095146 315.13131714]
[-16.45016670 326.88879395]
[-9.14253902 340.02835083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[59 200]
[60 199]
[61 198]
[65 197]
[66 196]
[67 195]
[68 194]
[81 193]
[82 192]
[83 191]
[84 190]
[85 185]
[87 182]
[89 180]
[90 179]
[91 178]
[94 176]
[95 175]
[96 174]
[98 172]
[99 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
