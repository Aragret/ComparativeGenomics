%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[26.88088226 267.45687866]
[32.63502121 281.33020020]
[36.64062881 295.80551147]
[38.83698273 310.66336060]
[39.19078827 325.67849731]
[37.69668198 340.62332153]
[34.37731171 355.27124023]
[29.28299904 369.40020752]
[22.49097443 382.79602051]
[14.10419941 395.25561523]
[4.24981880 406.59011841]
[-6.92277861 416.62768555]
[-19.24421883 425.21612549]
[-32.52771378 432.22531128]
[-46.57188416 437.54891968]
[-61.16382980 441.10626221]
[-76.08233643 442.84344482]
[-91.10124969 442.73406982]
[-105.99288177 440.77984619]
[-120.53147125 437.01037598]
[-134.49662781 431.48281860]
[-147.67665100 424.28094482]
[-159.87171936 415.51397705]
[-170.89695740 405.31475830]
[-180.58523560 393.83798218]
[-188.78967285 381.25756836]
[-195.38591003 367.76425171]
[-200.27392578 353.56259155]
[-203.37963867 338.86788940]
[-204.65596008 323.90292358]
[-204.08352661 308.89453125]
[-201.67103577 294.07022095]
[-197.45506287 279.65478516]
[-191.49951172 265.86672974]
[-183.89465332 252.91503906]
[-174.75579834 240.99610901]
[-164.22148132 230.29060364]
[-152.45140076 220.96083069]
[-139.62397766 213.14820862]
[-125.93369293 206.97119141]
[-111.58807373 202.52340698]
[-96.80459595 199.87228394]
[-81.80737305 199.05802917]
[-66.82376862 200.09297180]
[-52.08091736 202.96142578]
[-37.80232620 207.61991882]
[-24.20445251 213.99780273]
[-11.49343586 221.99839783]
[-2.00453758 210.38113403]
[7.48436069 198.76387024]
[16.97325897 187.14660645]
[18.76996422 179.97767639]
[26.69094276 175.42839050]
[36.35175323 163.95370483]
[46.01256180 152.47900391]
[55.67337418 141.00430298]
[65.33418274 129.52960205]
[74.99499512 118.05490112]
[69.66277313 105.55718231]
[70.21875000 91.98085785]
[76.55500793 79.96099091]
[87.44174194 71.83051300]
[100.76593018 69.16750336]
[113.94145203 72.48880768]
[123.77203369 61.15921783]
[133.60261536 49.82962418]
[118.74421692 51.88585663]
[105.46092987 44.91776657]
[98.70709229 31.52427292]
[101.00171661 16.70082092]
[111.48896027 5.97619200]
[126.25734711 3.35040665]
[139.79862976 9.80281830]
[147.06225586 22.92683601]
[145.33856201 37.82859039]
[156.44580078 27.74745178]
[167.55303955 17.66631317]
[178.66026306 7.58517504]
[182.91162109 -0.49961311]
[190.00872803 -2.56185913]
[201.26483154 -12.47651005]
[212.52091980 -22.39116096]
[203.29429626 -34.22352600]
[194.79180908 -46.58650970]
[187.04389954 -59.43584442]
[180.07830811 -72.72554016]
[173.91996765 -86.40802002]
[168.59092712 -100.43431091]
[164.11024475 -114.75419617]
[160.49397278 -129.31640625]
[157.75506592 -144.06883240]
[155.90330505 -158.95864868]
[154.94535828 -173.93254089]
[154.88461304 -188.93693542]
[155.72129822 -203.91810608]
[157.45243835 -218.82243347]
[160.07182312 -233.59654236]
[163.57006836 -248.18756104]
[167.93466187 -262.54324341]
[173.14996338 -276.61221313]
[179.19732666 -290.34411621]
[186.05509949 -303.68978882]
[193.69871521 -316.60140991]
[202.10083008 -329.03283691]
[211.23135376 -340.93951416]
[221.05760193 -352.27883911]
[231.54440308 -363.01022339]
[242.65422058 -373.09524536]
[254.34727478 -382.49777222]
[266.58172607 -391.18420410]
[279.31375122 -399.12341309]
[292.49780273 -406.28695679]
[306.08663940 -412.64923096]
[320.03167725 -418.18743896]
[334.28295898 -422.88177490]
[348.78945923 -426.71542358]
[363.49926758 -429.67465210]
[378.35971069 -431.74887085]
[393.31762695 -432.93066406]
[408.31942749 -433.21578979]
[423.31143188 -432.60324097]
[438.23999023 -431.09518433]
[453.05160522 -428.69705200]
[467.69329834 -425.41738892]
[482.11267090 -421.26797485]
[496.25805664 -416.26364136]
[510.07885742 -410.42233276]
[523.52557373 -403.76489258]
[536.55010986 -396.31524658]
[549.10577393 -388.09997559]
[561.14764404 -379.14852905]
[572.63269043 -369.49295044]
[583.51965332 -359.16781616]
[593.76971436 -348.21005249]
[603.34606934 -336.65893555]
[612.21447754 -324.55575562]
[620.34320068 -311.94387817]
[627.70312500 -298.86843872]
[634.26794434 -285.37625122]
[640.01409912 -271.51562500]
[644.92102051 -257.33615112]
[648.97113037 -242.88859558]
[652.15002441 -228.22468567]
[654.44628906 -213.39691162]
[655.85162354 -198.45834351]
[656.36108398 -183.46247864]
[655.97277832 -168.46299744]
[654.68817139 -153.51356506]
[652.51177979 -138.66772461]
[649.45147705 -123.97861481]
[645.51818848 -109.49881744]
[640.72595215 -95.28016663]
[635.09197998 -81.37355804]
[628.63635254 -67.82878113]
[621.38232422 -54.69431305]
[613.35577393 -42.01718140]
[604.58538818 -29.84276199]
[595.10266113 -18.21463966]
[584.94146729 -7.17443895]
[574.13824463 3.23831892]
[562.73162842 12.98635864]
[550.76245117 22.03478432]
[538.27349854 30.35120583]
[525.30963135 37.90584946]
[511.91711426 44.67167664]
[498.14395142 50.62446213]
[484.03945923 55.74290085]
[469.65408325 60.00866699]
[455.03933716 63.40648651]
[440.24758911 65.92420197]
[425.33169556 67.55280304]
[410.34512329 68.28645325]
[395.34152222 68.12252808]
[380.37454224 67.06161499]
[365.49783325 65.10751343]
[350.76458740 62.26721573]
[336.22760010 58.55088806]
[321.93884277 53.97183990]
[307.94955444 48.54645920]
[294.30975342 42.29416656]
[281.06826782 35.23734665]
[268.27252197 27.40125847]
[255.96829224 18.81395531]
[244.19966125 9.50617790]
[233.00872803 -0.48875612]
[222.43557739 -11.13506603]
[211.17947388 -1.22041452]
[199.92338562 8.69423676]
[188.74140930 18.69240952]
[177.63417053 28.77354813]
[166.52694702 38.85468674]
[155.41970825 48.93582535]
[144.93220520 59.66020584]
[135.10162354 70.98979950]
[125.27104187 82.31938934]
[130.73481750 97.43081665]
[127.85572815 113.23964691]
[117.41529083 125.45461273]
[102.24753571 130.76000977]
[86.46969604 127.71570587]
[76.80888367 139.19041443]
[67.14807129 150.66511536]
[57.48726273 162.13980103]
[47.82645416 173.61450195]
[38.16564178 185.08920288]
[28.59052277 196.63551331]
[19.10162354 208.25277710]
[9.61272526 219.87004089]
[0.12382732 231.48730469]
[10.50113010 242.34507751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 209]
[49 208]
[50 207]
[51 206]
[53 205]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[64 195]
[65 194]
[66 193]
[75 192]
[76 191]
[77 190]
[78 189]
[80 188]
[81 187]
[82 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
