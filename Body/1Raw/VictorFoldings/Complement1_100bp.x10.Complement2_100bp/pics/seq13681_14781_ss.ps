%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[95.40303040 458.83029175]
[80.54396820 461.11160278]
[65.51137543 460.97967529]
[50.69464111 458.43789673]
[36.47755051 453.55215454]
[23.22835922 446.44897461]
[11.29025459 437.31237793]
[0.97246182 426.37896729]
[-7.45776272 413.93197632]
[-13.78205585 400.29382324]
[-17.83660507 385.81774902]
[-19.51638412 370.87872314]
[-18.77788734 355.86367798]
[-15.64023972 341.16159058]
[-10.18471622 327.15325928]
[-2.55262661 314.20153809]
[7.05833864 302.64187622]
[18.39923286 292.77374268]
[31.17630005 284.85272217]
[45.05858231 279.08395386]
[59.68649673 275.61694336]
[74.68114471 274.54141235]
[76.01937866 259.60122681]
[68.50627136 250.12074280]
[69.49890137 237.66287231]
[79.00883484 228.94943237]
[80.56935883 214.03083801]
[82.12987518 199.11222839]
[79.69930267 192.13267517]
[83.82630920 183.98370361]
[85.60877228 169.08999634]
[87.39123535 154.19627380]
[88.95175934 139.27766418]
[90.28999329 124.33748627]
[91.62822723 109.39730072]
[92.63249207 94.43095398]
[93.30227661 79.44591522]
[93.97206116 64.46087646]
[94.64184570 49.47584152]
[87.52847290 35.34394455]
[95.82635498 22.97485542]
[96.16133118 7.97859573]
[96.16133118 -7.02140427]
[96.16133118 -22.02140427]
[95.60312653 -37.01101303]
[94.48747253 -51.96946716]
[90.72846222 -60.29458618]
[93.46826172 -67.15864563]
[92.57544708 -82.13204956]
[91.68263245 -97.10545349]
[76.67837524 -97.08464813]
[61.69829941 -97.93630219]
[46.79308319 -99.65752411]
[32.01316452 -102.24250031]
[17.40855789 -105.68248749]
[3.02867508 -109.96582794]
[-11.07782364 -115.07804871]
[-24.86320496 -121.00183868]
[-38.28082657 -127.71715546]
[-51.28528595 -135.20127869]
[-63.83257675 -143.42889404]
[-75.88024902 -152.37214661]
[-87.38752747 -162.00077820]
[-98.31548309 -172.28219604]
[-108.62714386 -183.18164062]
[-118.28759766 -194.66221619]
[-127.26418304 -206.68507385]
[-135.52650452 -219.20953369]
[-143.04661560 -232.19322205]
[-149.79907227 -245.59219360]
[-155.76101685 -259.36111450]
[-160.91227722 -273.45339966]
[-165.23542786 -287.82135010]
[-168.71583557 -302.41638184]
[-171.34173584 -317.18908691]
[-173.10423279 -332.08947754]
[-173.99736023 -347.06713867]
[-174.01811218 -362.07141113]
[-173.16639709 -377.05148315]
[-171.44511414 -391.95669556]
[-168.86007690 -406.73660278]
[-165.42002869 -421.34118652]
[-161.13662720 -435.72103882]
[-156.02435303 -449.82751465]
[-150.10050964 -463.61288452]
[-143.38513184 -477.03048706]
[-135.90095520 -490.03491211]
[-127.67328644 -502.58215332]
[-118.72998810 -514.62982178]
[-109.10131073 -526.13702393]
[-98.81983185 -537.06494141]
[-87.92034912 -547.37658691]
[-76.43973541 -557.03698730]
[-64.41684723 -566.01348877]
[-51.89234924 -574.27575684]
[-38.90863800 -581.79583740]
[-25.50963593 -588.54821777]
[-11.74068737 -594.51013184]
[2.35162044 -599.66131592]
[16.71960258 -603.98443604]
[31.31464386 -607.46478271]
[46.08735657 -610.09057617]
[60.98775482 -611.85302734]
[75.96542358 -612.74609375]
[90.96967316 -612.76678467]
[105.94974518 -611.91503906]
[120.85494995 -610.19366455]
[135.63484192 -607.60858154]
[150.23942566 -604.16845703]
[164.61927795 -599.88500977]
[178.72572327 -594.77264404]
[192.51106262 -588.84875488]
[205.92861938 -582.13330078]
[218.93301392 -574.64910889]
[231.48023987 -566.42138672]
[243.52784729 -557.47802734]
[255.03504944 -547.84930420]
[265.96292114 -537.56781006]
[276.27447510 -526.66827393]
[285.93484497 -515.18762207]
[294.91131592 -503.16467285]
[303.17355347 -490.64013672]
[310.69354248 -477.65640259]
[317.44589233 -464.25738525]
[323.40771484 -450.48840332]
[328.55886841 -436.39608765]
[332.88189697 -422.02807617]
[336.36218262 -407.43301392]
[338.98797607 -392.66030884]
[340.75033569 -377.75988770]
[341.64334106 -362.78222656]
[341.66397095 -347.77795410]
[340.81213379 -332.79791260]
[339.09072876 -317.89270020]
[336.50555420 -303.11282349]
[333.06539917 -288.50823975]
[328.78186035 -274.12841797]
[323.66949463 -260.02200317]
[317.74551392 -246.23667908]
[311.03002930 -232.81913757]
[303.54574585 -219.81477356]
[295.31799316 -207.26759338]
[286.37457275 -195.22003174]
[276.74581909 -183.71286011]
[266.46423340 -172.78503418]
[255.56468201 -162.47352600]
[244.08398438 -152.81320190]
[232.06101990 -143.83677673]
[219.53645325 -135.57460022]
[206.55267334 -128.05465698]
[193.15362549 -121.30236816]
[179.38462830 -115.34059143]
[165.29226685 -110.18950653]
[150.92425537 -105.86653137]
[136.32917786 -102.38629913]
[121.55644989 -99.76058197]
[106.65603638 -97.99826813]
[107.54885101 -83.02486420]
[108.44166565 -68.05146027]
[109.44593048 -53.08511734]
[110.56157684 -38.12666321]
[122.17864990 -47.61579132]
[136.87216187 -44.59902954]
[143.81059265 -31.30022812]
[137.87919617 -17.52276421]
[123.45037079 -13.42287159]
[111.16133118 -22.02140427]
[111.16133118 -7.02140427]
[111.16133118 7.97859573]
[113.38259888 10.71690083]
[114.38790131 14.66714287]
[113.62207031 19.24609566]
[110.81139374 23.64463997]
[117.97267914 36.70470810]
[109.62688446 50.14562607]
[108.95709991 65.13066101]
[108.28731537 80.11569977]
[107.61753082 95.10073853]
[109.79038239 98.28681946]
[110.54830933 102.41518402]
[109.50196838 106.83244324]
[106.56841278 110.73553467]
[105.23017883 125.67572021]
[103.89194489 140.61590576]
[106.32266998 146.76432800]
[105.41907501 152.37507629]
[102.28495789 155.97874451]
[100.50248718 170.87245178]
[98.72002411 185.76617432]
[97.04848480 200.67274475]
[95.48796082 215.59135437]
[93.92743683 230.50996399]
[101.81378937 247.14988708]
[90.95956421 260.93948364]
[89.62133026 275.87966919]
[104.18614197 279.60290527]
[117.96503448 285.61441040]
[130.60110474 293.75848389]
[141.76705933 303.82415771]
[151.17364502 315.55068970]
[158.57723999 328.63439941]
[163.78605652 342.73632812]
[166.66517639 357.49121094]
[167.14002991 372.51687622]
[165.19830322 387.42413330]
[160.89030457 401.82681274]
[154.32762146 415.35186768]
[145.68023682 427.64898682]
[135.17213440 438.39959717]
[123.07550812 447.32528687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 195]
[23 194]
[26 192]
[27 191]
[28 190]
[30 189]
[31 188]
[32 187]
[33 184]
[34 183]
[35 182]
[36 178]
[37 177]
[38 176]
[39 175]
[41 173]
[42 169]
[43 168]
[44 167]
[45 161]
[46 160]
[48 159]
[49 158]
[50 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
