%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[84.19587708 846.02191162]
[69.23661804 844.87347412]
[54.35550690 842.96264648]
[39.59137726 840.29443359]
[24.98274612 836.87591553]
[10.56772614 832.71588135]
[-3.61607695 827.82525635]
[-17.53165817 822.21673584]
[-31.14271545 815.90502930]
[-44.41373444 808.90655518]
[-57.31009674 801.23956299]
[-69.79815674 792.92407227]
[-81.84532928 783.98181152]
[-93.42019653 774.43609619]
[-104.49254608 764.31176758]
[-115.03350067 753.63531494]
[-125.01555634 742.43457031]
[-134.41267395 730.73870850]
[-143.20033264 718.57830811]
[-151.35560608 705.98504639]
[-158.85722351 692.99176025]
[-165.68562317 679.63244629]
[-171.82296753 665.94189453]
[-177.25325012 651.95581055]
[-181.96232605 637.71069336]
[-185.93788147 623.24371338]
[-189.16955566 608.59259033]
[-191.64892578 593.79559326]
[-193.36952209 578.89129639]
[-194.32684326 563.91857910]
[-194.51840210 548.91650391]
[-193.94369507 533.92425537]
[-192.60421753 518.98089600]
[-190.50346375 504.12536621]
[-187.64692688 489.39654541]
[-184.04205322 474.83276367]
[-179.69824219 460.47204590]
[-174.62683105 446.35186768]
[-168.84104919 432.50906372]
[-162.35598755 418.97973633]
[-155.18856812 405.79919434]
[-147.35749817 393.00183105]
[-138.88319397 380.62100220]
[-129.78776550 368.68902588]
[-120.09495544 357.23703003]
[-109.83004761 346.29492188]
[-99.01980591 335.89117432]
[-87.69245148 326.05300903]
[-75.87752533 316.80606079]
[-63.60585785 308.17443848]
[-50.90946198 300.18069458]
[-37.82146072 292.84564209]
[-24.37599945 286.18844604]
[-10.60815716 280.22647095]
[3.44614887 274.97528076]
[17.75025177 270.44854736]
[32.26683426 266.65811157]
[46.95802307 263.61383057]
[61.78548813 261.32366943]
[76.71054840 259.79357910]
[91.69427490 259.02758789]
[91.69427490 244.02760315]
[91.69427490 229.02760315]
[91.69427490 214.02760315]
[91.69427490 199.02760315]
[91.69427490 184.02760315]
[79.44244385 177.99354553]
[70.94490814 167.21762085]
[67.90474701 153.76747131]
[70.97086334 140.25535583]
[79.60050201 129.33081055]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[84.75199127 64.36303711]
[92.48928833 51.63576508]
[92.48928833 36.63576508]
[92.48928833 21.63576317]
[92.48928833 6.63576365]
[84.03137970 19.02380943]
[70.82881165 26.14366150]
[55.83108521 26.40472794]
[42.38872147 19.74868202]
[33.50478745 7.66250515]
[31.16396904 -7.15372133]
[35.88921738 -21.39001465]
[46.62489319 -31.86595154]
[60.97262573 -36.24117661]
[75.72708893 -33.53826141]
[87.59210205 -24.36103439]
[93.91699219 -10.75969696]
[96.36272430 -25.55896759]
[98.80844879 -40.35823822]
[101.25417328 -55.15750885]
[103.69990540 -69.95677948]
[106.14562988 -84.75605011]
[108.59136200 -99.55532074]
[94.68779755 -105.36803436]
[82.49986267 -114.23094177]
[72.68484497 -125.66606903]
[65.77204895 -139.05673218]
[62.13427353 -153.68080139]
[61.96770096 -168.74960327]
[65.28131104 -183.45051575]
[71.89640808 -196.99072266]
[81.45625305 -208.64001465]
[93.44528198 -217.77017212]
[107.21695709 -223.88882446]
[122.02857971 -226.66596985]
[137.08137512 -225.95187378]
[151.56358337 -221.78501892]
[164.69416809 -214.39013672]
[175.76502991 -204.16601562]
[184.17913818 -191.66403198]
[189.48272705 -177.55841064]
[191.38977051 -162.60983276]
[189.79742432 -147.62446594]
[184.79156494 -133.41044617]
[176.64216614 -120.73433685]
[165.78869629 -110.27972412]
[152.81648254 -102.61041260]
[138.42509460 -98.14001465]
[123.39063263 -97.10959625]
[120.94490051 -82.31032562]
[118.49917603 -67.51105499]
[116.05345154 -52.71178436]
[113.60771942 -37.91250992]
[111.16199493 -23.11324120]
[108.71626282 -8.31396961]
[107.48928833 6.63576365]
[107.48928833 21.63576317]
[107.48928833 36.63576508]
[107.48928833 51.63576508]
[115.22659302 64.36303711]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[121.43395996 131.71725464]
[129.51799011 146.03312683]
[129.28074646 162.37817383]
[120.88167572 176.29261780]
[106.69427490 184.02760315]
[106.69427490 199.02760315]
[106.69427490 214.02760315]
[106.69427490 229.02760315]
[106.69427490 244.02760315]
[106.69427490 259.02758789]
[121.67799377 259.79357910]
[136.60305786 261.32366943]
[151.43052673 263.61383057]
[166.12170410 266.65811157]
[180.63829041 270.44854736]
[194.94239807 274.97528076]
[208.99670410 280.22647095]
[222.76454163 286.18844604]
[236.21000671 292.84564209]
[249.29800415 300.18069458]
[261.99441528 308.17443848]
[274.26608276 316.80606079]
[286.08099365 326.05300903]
[297.40835571 335.89117432]
[308.21859741 346.29492188]
[318.48348999 357.23703003]
[328.17630005 368.68902588]
[337.27172852 380.62100220]
[345.74603271 393.00183105]
[353.57711792 405.79919434]
[360.74453735 418.97973633]
[367.22958374 432.50906372]
[373.01538086 446.35186768]
[378.08679199 460.47204590]
[382.43060303 474.83276367]
[386.03546143 489.39654541]
[388.89199829 504.12536621]
[390.99276733 518.98089600]
[392.33224487 533.92425537]
[392.90695190 548.91650391]
[392.71539307 563.91857910]
[391.75805664 578.89129639]
[390.03747559 593.79559326]
[387.55810547 608.59259033]
[384.32641602 623.24371338]
[380.35086060 637.71069336]
[375.64178467 651.95581055]
[370.21151733 665.94189453]
[364.07415771 679.63244629]
[357.24575806 692.99176025]
[349.74414062 705.98504639]
[341.58886719 718.57830811]
[332.80120850 730.73870850]
[323.40411377 742.43457031]
[313.42205811 753.63531494]
[302.88110352 764.31176758]
[291.80874634 774.43609619]
[280.23388672 783.98181152]
[268.18670654 792.92407227]
[255.69863892 801.23956299]
[242.80227661 808.90655518]
[229.53126526 815.90502930]
[215.92019653 822.21673584]
[202.00462341 827.82525635]
[187.82081604 832.71588135]
[173.40579224 836.87591553]
[158.79716492 840.29443359]
[144.03303528 842.96264648]
[129.15193176 844.87347412]
[114.19266510 846.02191162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[72 140]
[73 139]
[74 137]
[75 136]
[77 134]
[78 133]
[79 132]
[80 131]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
