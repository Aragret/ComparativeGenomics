%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[73.98558807 973.34991455]
[59.00127411 972.62780762]
[44.05360413 971.35583496]
[29.16274834 969.53552246]
[14.34881496 967.16949463]
[-0.36820093 964.26080322]
[-14.96843147 960.81347656]
[-29.43216705 956.83209229]
[-43.73988342 952.32208252]
[-57.87226486 947.28948975]
[-71.81023407 941.74121094]
[-85.53497314 935.68457031]
[-99.02795410 929.12786865]
[-112.27096558 922.07995605]
[-125.24612427 914.55023193]
[-137.93592834 906.54901123]
[-150.32322693 898.08697510]
[-162.39131165 889.17565918]
[-174.12388611 879.82696533]
[-185.50511169 870.05358887]
[-196.51963806 859.86877441]
[-207.15257263 849.28613281]
[-217.38957214 838.32006836]
[-227.21681213 826.98535156]
[-236.62103271 815.29724121]
[-245.58955383 803.27154541]
[-254.11022949 790.92456055]
[-262.17160034 778.27288818]
[-269.76275635 765.33355713]
[-276.87344360 752.12414551]
[-283.49407959 738.66241455]
[-289.61575317 724.96655273]
[-295.23013306 711.05505371]
[-300.32971191 696.94671631]
[-304.90753174 682.66058350]
[-308.95748901 668.21588135]
[-312.47406006 653.63220215]
[-315.45251465 638.92913818]
[-317.88882446 624.12658691]
[-319.77972412 609.24456787]
[-321.12265015 594.30310059]
[-321.91580200 579.32238770]
[-322.15808105 564.32263184]
[-321.84915161 549.32409668]
[-320.98947144 534.34704590]
[-319.58020020 519.41168213]
[-317.62319946 504.53820801]
[-315.12112427 489.74661255]
[-312.07739258 475.05694580]
[-308.49606323 460.48901367]
[-304.38198853 446.06246948]
[-299.74072266 431.79678345]
[-294.57852173 417.71124268]
[-288.90237427 403.82482910]
[-282.71994019 390.15631104]
[-276.03955078 376.72412109]
[-268.87023926 363.54641724]
[-261.22167969 350.64099121]
[-253.10420227 338.02523804]
[-244.52874756 325.71618652]
[-235.50689697 313.73046875]
[-226.05084229 302.08428955]
[-216.17333984 290.79333496]
[-205.88771057 279.87283325]
[-195.20787048 269.33758545]
[-184.14820862 259.20175171]
[-172.72367859 249.47904968]
[-160.94969177 240.18258667]
[-148.84213257 231.32493591]
[-136.41735840 222.91804504]
[-123.69213867 214.97325134]
[-110.68365479 207.50128174]
[-97.40946198 200.51223755]
[-83.88748169 194.01554871]
[-70.13597107 188.01997375]
[-56.17349243 182.53361511]
[-42.01889420 177.56388855]
[-27.69128418 173.11749268]
[-13.21000290 169.20042419]
[1.40539920 165.81797791]
[16.13519287 162.97471619]
[30.95949173 160.67448425]
[45.85828400 158.92037964]
[60.81145859 157.71478271]
[75.79882812 157.05929565]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.20164490 72.58235168]
[93.42497253 57.58401108]
[93.64830017 42.58567429]
[93.87162781 27.58733559]
[94.09495544 12.58899879]
[79.71363831 7.93398142]
[67.34429169 -0.75455576]
[58.08679199 -12.70403385]
[52.76430130 -26.85191345]
[51.85009766 -41.94017410]
[55.42546844 -56.62718201]
[63.17249680 -69.60697174]
[74.40232086 -79.72539520]
[88.11639404 -86.08272552]
[103.09526825 -88.11367035]
[118.00703430 -85.63764954]
[131.52574158 -78.87481689]
[142.44932556 -68.42652893]
[149.80645752 -55.22183228]
[152.94296265 -40.43488693]
[151.57992554 -25.38053322]
[145.83856201 -11.39739609]
[136.22938538 0.27115458]
[123.60682678 8.58755875]
[109.09329224 12.81232643]
[108.86996460 27.81066513]
[108.64663696 42.80900192]
[108.42330933 57.80733871]
[108.19998169 72.80567932]
[111.24354553 79.54055023]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[120.76203156 158.39862061]
[135.68382263 159.94499207]
[150.53872681 162.03848267]
[165.30668640 164.67626953]
[179.96780396 167.85478210]
[194.50224304 171.56973267]
[208.89041138 175.81611633]
[223.11286926 180.58818054]
[237.15042114 185.87948608]
[250.98411560 191.68290710]
[264.59527588 197.99060059]
[277.96554565 204.79403687]
[291.07687378 212.08406067]
[303.91152954 219.85079956]
[316.45220947 228.08380127]
[328.68197632 236.77192688]
[340.58435059 245.90345764]
[352.14321899 255.46604919]
[363.34301758 265.44683838]
[374.16857910 275.83230591]
[384.60531616 286.60842896]
[394.63916016 297.76068115]
[404.25656128 309.27401733]
[413.44448853 321.13287354]
[422.19058228 333.32125854]
[430.48303223 345.82272339]
[438.31063843 358.62036133]
[445.66284180 371.69689941]
[452.52969360 385.03472900]
[458.90194702 398.61578369]
[464.77099609 412.42175293]
[470.12890625 426.43405151]
[474.96844482 440.63366699]
[479.28311157 455.00152588]
[483.06701660 469.51815796]
[486.31512451 484.16400146]
[489.02301025 498.91928101]
[491.18701172 513.76409912]
[492.80422974 528.67834473]
[493.87246704 543.64196777]
[494.39028931 558.63470459]
[494.35699463 573.63635254]
[493.77264404 588.62670898]
[492.63800049 603.58538818]
[490.95458984 618.49237061]
[488.72470093 633.32739258]
[485.95138550 648.07055664]
[482.63830566 662.70178223]
[478.78997803 677.20153809]
[474.41162109 691.55004883]
[469.50909424 705.72808838]
[464.08901978 719.71643066]
[458.15878296 733.49621582]
[451.72631836 747.04888916]
[444.80032349 760.35607910]
[437.39016724 773.39984131]
[429.50582886 786.16265869]
[421.15795898 798.62713623]
[412.35784912 810.77661133]
[403.11737061 822.59454346]
[393.44897461 834.06512451]
[383.36575317 845.17272949]
[372.88125610 855.90240479]
[362.00970459 866.23974609]
[350.76571655 876.17071533]
[339.16452026 885.68188477]
[327.22174072 894.76049805]
[314.95352173 903.39428711]
[302.37643433 911.57153320]
[289.50741577 919.28125000]
[276.36389160 926.51300049]
[262.96356201 933.25701904]
[249.32452393 939.50421143]
[235.46519470 945.24621582]
[221.40429688 950.47515869]
[207.16079712 955.18402100]
[192.75392151 959.36651611]
[178.20314026 963.01690674]
[163.52807617 966.13031006]
[148.74853516 968.70251465]
[133.88449097 970.73004150]
[118.95598602 972.21020508]
[103.98318481 973.14093018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[86 127]
[87 126]
[88 125]
[89 124]
[91 122]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
