%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[262.69921875 259.01290894]
[248.11851501 255.97111511]
[243.32373047 240.89396667]
[232.36782837 230.64857483]
[221.41192627 220.40318298]
[210.38003540 210.23962402]
[199.27281189 200.15849304]
[188.16557312 190.07734680]
[177.05833435 179.99621582]
[165.95111084 169.91506958]
[154.84387207 159.83393860]
[143.73663330 149.75279236]
[132.62940979 139.67166138]
[121.52217102 129.59051514]
[110.41493988 119.50938416]
[99.30770111 109.42824554]
[94.14705658 108.48927307]
[89.87985229 104.72572327]
[88.02555847 98.87777710]
[77.22340393 88.47039795]
[66.42124939 78.06302643]
[55.61909103 67.65565491]
[44.14439011 57.99484253]
[32.04864120 49.12394714]
[16.34462357 47.20185471]
[10.65734768 33.43580246]
[-1.43840432 24.56490707]
[-13.53415585 15.69401264]
[-25.62990761 6.82311726]
[-37.72565842 -2.04777837]
[-47.43158722 9.39704227]
[-57.92064667 20.12870407]
[-69.14057922 30.09374237]
[-81.03549194 39.24251175]
[-93.54611969 47.52943420]
[-106.61013794 54.91322327]
[-120.16246796 61.35709000]
[-134.13557434 66.82893372]
[-148.45985413 71.30149841]
[-163.06394958 74.75249481]
[-177.87510681 77.16472626]
[-192.81950378 78.52619171]
[-207.82272339 78.83008575]
[-222.81001282 78.07491302]
[-237.70669556 76.26443481]
[-252.43855286 73.40765381]
[-266.93218994 69.51882172]
[-281.11541748 64.61730194]
[-294.91757202 58.72751999]
[-308.26989746 51.87881470]
[-321.10583496 44.10530472]
[-333.36148071 35.44572067]
[-344.97573853 25.94320488]
[-355.89077759 15.64509678]
[-366.05218506 4.60270309]
[-375.40936279 -7.12896299]
[-383.91571045 -19.49145508]
[-391.52880859 -32.42318344]
[-398.21075439 -45.85972214]
[-403.92825317 -59.73412704]
[-408.65280151 -73.97727966]
[-412.36090088 -88.51822662]
[-415.03405762 -103.28450775]
[-416.65893555 -118.20257568]
[-417.22744751 -133.19808960]
[-416.73678589 -148.19636536]
[-415.18939209 -163.12266541]
[-412.59295654 -177.90263367]
[-408.96038818 -192.46263123]
[-404.30984497 -206.73013306]
[-398.66445923 -220.63403320]
[-392.05236816 -234.10508728]
[-384.50653076 -247.07615662]
[-376.06448364 -259.48266602]
[-366.76834106 -271.26275635]
[-356.66439819 -282.35775757]
[-345.80297852 -292.71240234]
[-334.23822021 -302.27508545]
[-322.02770996 -310.99816895]
[-309.23229980 -318.83822632]
[-295.91571045 -325.75616455]
[-282.14434814 -331.71752930]
[-267.98675537 -336.69262695]
[-253.51347351 -340.65664673]
[-238.79664612 -343.58987427]
[-223.90957642 -345.47769165]
[-208.92640686 -346.31066895]
[-193.92181396 -346.08465576]
[-178.97053528 -344.80081177]
[-164.14706421 -342.46551514]
[-149.52525330 -339.09039307]
[-135.17794800 -334.69226074]
[-121.17660522 -329.29302979]
[-107.59101105 -322.91961670]
[-94.48883057 -315.60375977]
[-81.93534088 -307.38189697]
[-69.99308777 -298.29501343]
[-58.72156906 -288.38836670]
[-48.17693329 -277.71130371]
[-38.41171265 -266.31704712]
[-29.47456551 -254.26231384]
[-21.41001129 -241.60720825]
[-14.25822735 -228.41474915]
[-8.05484486 -214.75067139]
[-2.83077049 -200.68305969]
[1.38797140 -186.28196716]
[4.58036232 -171.61917114]
[6.73049736 -156.76771545]
[7.82766533 -141.80158997]
[7.86639977 -126.79533386]
[6.84650803 -111.82373810]
[4.77307081 -96.96138000]
[1.65641797 -82.28229523]
[-2.48792315 -67.85962677]
[-7.63930559 -53.76522827]
[-13.77206516 -40.06930923]
[-20.85564804 -26.84010696]
[-28.85476494 -14.14352989]
[-16.75901222 -5.27263498]
[-4.66326094 3.59826064]
[7.43249083 12.46915627]
[19.52824211 21.34005165]
[34.36708832 22.62763977]
[40.91953659 37.02819824]
[53.01528549 45.89909363]
[49.04501343 31.43406868]
[53.42367172 17.08738518]
[64.79448700 7.30451632]
[79.63409424 5.11679220]
[93.34426880 11.20210266]
[101.67678070 23.67484665]
[102.04969025 38.67021179]
[94.34745789 51.54171753]
[80.95671082 58.30099106]
[66.02646637 56.85349655]
[76.82862091 67.26087189]
[87.63077545 77.66824341]
[98.43293762 88.07561493]
[109.38884735 98.32100677]
[120.49607849 108.40214539]
[131.60331726 118.48328400]
[142.71054077 128.56442261]
[153.81777954 138.64556885]
[164.92501831 148.72669983]
[176.03224182 158.80784607]
[187.13948059 168.88897705]
[198.24671936 178.97012329]
[209.35394287 189.05125427]
[220.46118164 199.13240051]
[228.91893005 202.58264160]
[231.65731812 209.44726562]
[242.61322021 219.69265747]
[253.56912231 229.93804932]
[268.93347168 233.71264648]
[272.94461060 248.05699158]
[284.32528687 238.26271057]
[296.69818115 229.75634766]
[309.91827393 222.63760376]
[323.83056641 216.98997498]
[338.27191162 212.87965393]
[353.07299805 210.35484314]
[368.06033325 209.44512939]
[383.05813599 210.16120911]
[397.89059448 212.49465942]
[412.38385010 216.41812134]
[426.36788940 221.88562012]
[439.67880249 228.83302307]
[452.16055298 237.17889404]
[463.66674805 246.82536316]
[474.06253052 257.65936279]
[483.22595215 269.55383301]
[491.04965210 282.36932373]
[497.44183350 295.95562744]
[502.32760620 310.15338135]
[505.64965820 324.79617310]
[507.36901855 339.71231079]
[507.46557617 354.72689819]
[505.93817139 369.66390991]
[502.80474854 384.34820557]
[498.10195923 398.60763550]
[491.88504028 412.27499390]
[484.22683716 425.19006348]
[475.21710205 437.20141602]
[464.96154785 448.16821289]
[453.58035278 457.96188354]
[441.20700073 466.46759033]
[427.98651123 473.58560181]
[414.07394409 479.23248291]
[399.63235474 483.34204102]
[384.83114624 485.86605835]
[369.84378052 486.77493286]
[354.84597778 486.05807495]
[340.01364136 483.72381592]
[325.52062988 479.79956055]
[311.53686523 474.33132935]
[298.22631836 467.38320923]
[285.74502563 459.03668213]
[274.23934937 449.38958740]
[263.84414673 438.55502319]
[254.68135071 426.66006470]
[246.85836792 413.84411621]
[240.46690369 400.25750732]
[235.58189392 386.05947876]
[232.26063538 371.41650391]
[230.54206848 356.50027466]
[230.44631958 341.48568726]
[231.97451782 326.54876709]
[235.10876465 311.86462402]
[239.81228638 297.60543823]
[246.02995300 283.93841553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[3 153]
[4 152]
[5 151]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[11 144]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[19 138]
[20 137]
[21 136]
[22 135]
[23 125]
[24 124]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
