%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[107.46683502 618.08380127]
[103.56533813 632.71447754]
[95.12258911 645.28424072]
[83.05438995 654.42962646]
[68.66981506 659.15850830]
[53.52919006 658.95806885]
[39.27485657 653.84997559]
[27.45302200 644.38830566]
[19.34602737 631.59942627]
[15.83325768 616.87054443]
[17.29575539 601.79937744]
[23.57487679 588.02075195]
[33.98951340 577.02923584]
[47.40995789 570.01702881]
[62.38046646 567.74493408]
[65.04626465 552.98370361]
[67.71205902 538.22247314]
[62.35981369 524.32275391]
[72.42650604 512.11730957]
[75.09230042 497.35610962]
[77.75809479 482.59487915]
[80.42388916 467.83364868]
[81.98441315 452.91506958]
[74.62948608 439.96307373]
[82.77423859 426.39938354]
[83.22084045 411.40603638]
[83.66744995 396.41268921]
[84.11405182 381.41931152]
[76.75912476 368.46731567]
[84.90387726 354.90365601]
[85.35047913 339.91027832]
[85.79708862 324.91693115]
[71.45286560 320.65164185]
[58.69174576 312.81259155]
[48.38674927 301.92904663]
[41.24470139 288.73876953]
[37.75772476 274.13803101]
[38.16936111 259.12072754]
[42.45755768 244.71069336]
[50.33575058 231.89192200]
[61.27203369 221.54138184]
[74.52504730 214.36900330]
[89.19422913 210.86895752]
[89.64083099 195.87561035]
[90.08744049 180.88226318]
[90.53404236 165.88891602]
[76.98204803 162.45899963]
[64.44522858 156.27442932]
[53.47649765 147.60795593]
[44.55962372 136.84179688]
[38.08786392 124.45077515]
[34.34665298 110.98139954]
[33.50099182 97.02770233]
[35.58816910 83.20508575]
[40.51613998 70.12319183]
[48.06756210 58.35897446]
[57.90939331 48.43127441]
[69.60756683 40.77793503]
[82.64615631 35.73650360]
[96.45011139 33.52931976]
[97.34292603 18.55591583]
[88.72143555 2.28473330]
[98.94908905 -11.97576809]
[99.61888123 -26.96080780]
[100.28866577 -41.94584656]
[100.95845032 -56.93088531]
[86.82235718 -62.28144073]
[75.04814148 -71.72655487]
[66.78099823 -84.33142853]
[62.82003403 -98.85471344]
[63.54102707 -113.87079620]
[68.86079407 -127.90970612]
[78.24658203 -139.60102844]
[90.76940918 -147.80767822]
[105.19596863 -151.73646545]
[105.86575317 -166.72151184]
[106.53553772 -181.70654297]
[107.20532227 -196.69158936]
[106.98199463 -211.68992615]
[105.86634827 -226.64837646]
[97.12406921 -239.83485413]
[103.89332581 -253.10234070]
[102.77767944 -268.06079102]
[93.53139496 -277.05352783]
[92.91011810 -289.53543091]
[100.70216370 -298.78802490]
[99.80934906 -313.76141357]
[98.91653442 -328.73483276]
[90.37155151 -342.04998779]
[97.33759308 -355.21524048]
[96.44477844 -370.18865967]
[95.55195618 -385.16204834]
[94.65914154 -400.13546753]
[93.76632690 -415.10885620]
[79.12145996 -418.90133667]
[66.36638641 -427.03543091]
[56.75074005 -438.71423340]
[51.21654510 -452.79357910]
[50.30599213 -467.89413452]
[54.10829163 -482.53643799]
[62.25093079 -495.28607178]
[73.93617249 -504.89389038]
[88.01921844 -510.41864014]
[103.12036133 -511.31906128]
[117.76013184 -507.50695801]
[130.50428772 -499.35577393]
[140.10427856 -487.66412354]
[145.61959839 -473.57736206]
[146.50991821 -458.47561646]
[142.68800354 -443.83840942]
[134.52827454 -431.09970093]
[122.83016968 -421.50756836]
[108.73973083 -416.00167847]
[109.63255310 -401.02825928]
[110.52536774 -386.05487061]
[111.41818237 -371.08145142]
[112.31099701 -356.10806274]
[120.79212189 -343.86389160]
[113.88993835 -329.62765503]
[114.78275299 -314.65423584]
[115.67556763 -299.68084717]
[126.11441040 -285.57418823]
[117.73612976 -269.17645264]
[118.85177612 -254.21798706]
[127.51425934 -242.10144043]
[120.82479858 -227.76402283]
[121.94044495 -212.80557251]
[130.94836426 -224.79963684]
[145.25152588 -229.31842041]
[159.51521301 -224.67654419]
[168.41943359 -212.60528564]
[168.64311218 -197.60696411]
[160.10284424 -185.27554321]
[145.98391724 -180.21037292]
[131.55235291 -184.30061340]
[122.19036102 -196.02180481]
[121.52057648 -181.03675842]
[120.85079193 -166.05172729]
[120.18100739 -151.06668091]
[134.19952393 -145.86648560]
[145.94024658 -136.57533264]
[154.24555969 -124.09326935]
[158.29162598 -109.63573456]
[157.67007446 -94.61520386]
[152.42921448 -80.50321198]
[143.07048035 -68.68616486]
[130.50056458 -60.32915878]
[115.94348907 -56.26110077]
[115.27370453 -41.27606201]
[114.60391998 -26.29102135]
[113.93412781 -11.30598354]
[121.86307526 -2.17042351]
[121.42770386 10.31934071]
[112.31632996 19.44873047]
[111.42351532 34.42213821]
[126.71457672 39.03046417]
[140.46789551 47.14830399]
[151.89183044 58.30837631]
[160.32876587 71.86828613]
[165.29307556 87.04750824]
[166.49900818 102.97229767]
[163.87715149 118.72599792]
[157.57839966 133.40179443]
[147.96534729 146.15493774]
[135.59133911 156.25131226]
[121.16861725 163.10977173]
[105.52739716 166.33551025]
[105.08078766 181.32887268]
[104.63418579 196.32221985]
[104.18757629 211.31556702]
[118.62242889 215.68252563]
[131.42503357 223.63102722]
[141.72584534 234.61415100]
[148.82708740 247.87910461]
[152.24998474 262.51882935]
[151.76704407 277.53402710]
[147.41720581 291.90133667]
[139.50271606 304.64312744]
[128.56819153 314.89401245]
[115.36310577 321.95959473]
[100.79043579 325.36355591]
[100.34383392 340.35690308]
[99.89722443 355.35025024]
[107.22021484 369.37466431]
[99.10740662 381.86593628]
[98.66079712 396.85928345]
[98.21419525 411.85263062]
[97.76758575 426.84597778]
[105.09057617 440.87039185]
[96.97776794 453.36166382]
[106.18379974 441.51898193]
[120.04024506 435.77453613]
[134.92506409 437.62985229]
[146.94738770 446.60000610]
[152.96463013 460.34020996]
[151.40388489 475.25878906]
[142.67312622 487.45605469]
[129.05455017 493.74371338]
[114.10803986 492.47817993]
[101.74055481 483.99020386]
[95.18511200 470.49945068]
[92.51931763 485.26068115]
[89.85351562 500.02188110]
[87.18772125 514.78308105]
[92.34928894 529.73864746]
[82.47327423 540.88824463]
[79.80747986 555.64947510]
[77.14168549 570.41070557]
[90.37177277 577.77569580]
[100.49174500 589.03912354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[19 204]
[20 203]
[21 202]
[22 201]
[23 190]
[25 188]
[26 187]
[27 186]
[28 185]
[30 183]
[31 182]
[32 181]
[43 170]
[44 169]
[45 168]
[46 167]
[60 155]
[61 154]
[63 151]
[64 150]
[65 149]
[66 148]
[75 139]
[76 138]
[77 137]
[78 136]
[79 127]
[80 126]
[82 124]
[83 123]
[86 121]
[87 120]
[88 119]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
