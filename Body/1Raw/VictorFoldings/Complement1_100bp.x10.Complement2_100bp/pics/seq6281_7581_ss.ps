%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[111.21382904 559.35968018]
[102.50270081 547.13800049]
[94.81674194 534.24694824]
[88.20711517 520.77233887]
[82.71778870 506.80380249]
[78.38529968 492.43432617]
[75.23848724 477.75949097]
[73.29828644 462.87701416]
[72.57761383 447.88589478]
[73.08126068 432.88592529]
[74.80587769 417.97692871]
[77.73998260 403.25808716]
[81.86405945 388.82739258]
[87.15065765 374.78088379]
[93.56459045 361.21200562]
[101.06318665 348.21109009]
[109.59652710 335.86465454]
[119.10783386 324.25482178]
[129.53379822 313.45889282]
[140.80505371 303.54873657]
[152.84658813 294.59024048]
[165.57824707 286.64306641]
[158.69883728 273.31365967]
[151.81942749 259.98422241]
[144.94001770 246.65478516]
[138.06060791 233.32536316]
[125.34793854 225.56408691]
[125.89438629 209.75231934]
[124.77805328 224.71070862]
[117.74597168 237.96023560]
[105.98316193 247.26809692]
[91.47186279 251.06576538]
[76.65748596 248.71325684]
[64.03651428 240.60700989]
[55.73580551 228.11308289]
[53.15417099 213.33691406]
[56.72666550 198.76855469]
[65.85125732 186.86300659]
[78.99028778 179.62658691]
[93.92961121 178.27876282]
[108.15167999 183.04664612]
[119.26080322 193.12811279]
[115.07379150 178.72433472]
[110.88678741 164.32055664]
[99.90441132 154.25891113]
[103.48207092 138.84751892]
[99.29505920 124.44373322]
[95.10804749 110.03994751]
[90.81392670 95.66773987]
[86.41292572 81.32788849]
[82.01192474 66.98804474]
[77.61093140 52.64819717]
[73.20993042 38.30834961]
[68.80893707 23.96850204]
[64.40793610 9.62865448]
[60.00693893 -4.71119261]
[55.60593796 -19.05103874]
[51.15491104 -4.72664261]
[40.62235641 5.95349407]
[26.36127853 10.60340118]
[11.55763626 8.18427753]
[-0.48139864 -0.76343930]
[-7.06627512 -14.24080563]
[-6.72591448 -29.23694420]
[0.46364540 -42.40167618]
[12.89623928 -50.79397202]
[27.79439354 -52.53896713]
[41.82982254 -47.24682999]
[51.86698532 -36.09981155]
[49.86297226 -50.96533966]
[47.85895920 -65.83086395]
[45.85494232 -80.69639587]
[43.85092926 -95.56192780]
[41.84691620 -110.42745209]
[39.84290314 -125.29298401]
[37.83889008 -140.15850830]
[34.10676193 -145.61585999]
[33.74522018 -151.28739929]
[36.00334549 -155.49571228]
[34.44282532 -170.41432190]
[32.88230133 -185.33293152]
[29.31431198 -190.89898682]
[29.12179565 -196.57876587]
[31.50421715 -200.71798706]
[30.38856888 -215.67643738]
[29.27292061 -230.63488770]
[20.02663803 -239.62760925]
[19.40536308 -252.10951233]
[27.19740868 -261.36212158]
[26.30459404 -276.33551025]
[11.44291496 -278.80093384]
[-2.49734807 -284.51202393]
[-14.81695747 -293.18240356]
[-24.89796638 -304.37707520]
[-32.23471451 -317.53457642]
[-36.45919800 -331.99493408]
[-37.35951233 -347.03277588]
[-34.89050293 -361.89385986]
[-29.17601204 -375.83273315]
[-20.50267601 -388.15023804]
[-9.30554771 -398.22854614]
[3.85373092 -405.56210327]
[18.31509590 -409.78308105]
[33.35317230 -410.67974854]
[48.21365356 -408.20715332]
[62.15114594 -402.48925781]
[74.46655273 -393.81295776]
[84.54213715 -382.61337280]
[91.87250519 -369.45233154]
[96.08998108 -354.98992920]
[96.98300934 -339.95166016]
[94.50679779 -325.09176636]
[88.78555298 -311.15567017]
[80.10625458 -298.84234619]
[68.90424347 -288.76947021]
[55.74140930 -281.44229126]
[41.27799988 -277.22833252]
[42.17081451 -262.25491333]
[52.60965729 -248.14828491]
[44.23137283 -231.75053406]
[45.34702301 -216.79208374]
[46.46266937 -201.83363342]
[47.80090714 -186.89344788]
[49.36142731 -171.97483826]
[50.92195129 -157.05624390]
[52.70441818 -142.16252136]
[54.70843124 -127.29699707]
[56.71244431 -112.43146515]
[58.71645737 -97.56594086]
[60.72047043 -82.70040894]
[62.72448730 -67.83488464]
[64.72850037 -52.96935272]
[66.73251343 -38.10382462]
[69.94578552 -23.45203781]
[74.34678650 -9.11219025]
[78.74777985 5.22765684]
[83.14878082 19.56750298]
[87.54978180 33.90735245]
[91.95077515 48.24720001]
[96.35177612 62.58704376]
[100.75276947 76.92689514]
[105.15377045 91.26673889]
[110.34136963 97.43612671]
[109.51183319 105.85293579]
[113.69883728 120.25672150]
[117.88584900 134.66050720]
[129.16770935 145.75241089]
[125.29056549 160.13354492]
[129.47756958 174.53732300]
[133.66458130 188.94110107]
[139.22381592 202.87289429]
[152.42854309 211.58758545]
[151.39002991 226.44595337]
[158.26943970 239.77537537]
[165.14884949 253.10481262]
[172.02827454 266.43423462]
[178.90768433 279.76367188]
[192.76113892 273.99005127]
[207.03910828 269.36486816]
[221.64656067 265.91885376]
[236.48629761 263.67495728]
[251.45956421 262.64813232]
[266.46667480 262.84518433]
[281.40783691 264.26480103]
[296.18353271 266.89755249]
[310.69546509 270.72589111]
[324.84707642 275.72436523]
[338.54415894 281.85971069]
[351.69558716 289.09109497]
[364.21383667 297.37039185]
[376.01556396 306.64248657]
[387.02227783 316.84567261]
[397.16067505 327.91207886]
[406.36334229 339.76806641]
[414.56900024 352.33468628]
[421.72305298 365.52832031]
[427.77789307 379.26119995]
[432.69320679 393.44189453]
[436.43630981 407.97607422]
[438.98226929 422.76696777]
[440.31414795 437.71618652]
[440.42309570 452.72421265]
[439.30838013 467.69119263]
[436.97741699 482.51748657]
[433.44573975 497.10446167]
[428.73678589 511.35504150]
[422.88198853 525.17437744]
[415.92022705 538.47045898]
[407.89785767 551.15490723]
[398.86831665 563.14324951]
[388.89163208 574.35565186]
[378.03421021 584.71759033]
[366.36831665 594.16003418]
[353.97161865 602.62017822]
[340.92654419 610.04174805]
[327.31997681 616.37530518]
[313.24243164 621.57867432]
[298.78759766 625.61730957]
[284.05166626 628.46429443]
[269.13272095 630.10070801]
[254.13003540 630.51556396]
[239.14344788 629.70623779]
[224.27268982 627.67803955]
[209.61674500 624.44445801]
[195.27313232 620.02703857]
[181.33731079 614.45513916]
[167.90202332 607.76593018]
[155.05668640 600.00384521]
[142.88677979 591.22058105]
[131.47328186 581.47454834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[28 151]
[42 150]
[43 149]
[44 148]
[46 146]
[47 145]
[48 144]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[79 125]
[80 124]
[81 123]
[84 122]
[85 121]
[86 120]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
