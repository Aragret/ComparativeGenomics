%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[32.87467194 246.22259521]
[38.69892120 260.06750488]
[42.74197006 274.53320312]
[44.94004822 289.39160156]
[45.25849915 304.40832520]
[43.69229126 319.34652710]
[40.26613235 333.97064209]
[35.03404999 348.05001831]
[28.07857132 361.36257935]
[19.50938797 373.69839478]
[9.46165085 384.86291504]
[-1.90617430 394.68002319]
[-14.41479969 402.99490356]
[-27.86694717 409.67645264]
[-42.05045319 414.61926270]
[-56.74163055 417.74539185]
[-71.70877075 419.00549316]
[-86.71582794 418.37976074]
[-101.52610779 415.87802124]
[-115.90604401 411.53973389]
[-129.62882996 405.43331909]
[-142.47805786 397.65509033]
[-154.25106812 388.32772827]
[-164.76216125 377.59835815]
[-173.84559631 365.63613892]
[-181.35809326 352.62976074]
[-187.18118286 338.78436279]
[-191.22300720 324.31832886]
[-193.41983032 309.45974731]
[-193.73701477 294.44299316]
[-192.16955566 279.50491333]
[-188.74217224 264.88110352]
[-183.50889587 250.80216980]
[-176.55230713 237.49017334]
[-167.98207092 225.15509033]
[-157.93339539 213.99142456]
[-146.56474304 204.17526245]
[-134.05541992 195.86141968]
[-120.60271454 189.18101501]
[-106.41879272 184.23939514]
[-91.72735596 181.11451721]
[-76.76010895 179.85565186]
[-61.75310516 180.48266602]
[-46.94303131 182.98565674]
[-32.56346130 187.32514954]
[-18.84118271 193.43270874]
[-5.99261427 201.21200562]
[3.32226872 189.45475769]
[12.63715172 177.69750977]
[21.95203400 165.94026184]
[31.26691628 154.18301392]
[16.94458199 158.64067078]
[2.17481875 156.02264404]
[-9.74277115 146.91378784]
[-16.14576721 133.34907532]
[-15.60372353 118.35887146]
[-8.23773384 105.29203033]
[4.30662012 97.06772614]
[19.22689819 95.52328491]
[33.18987274 101.00373840]
[43.07617950 112.28473663]
[46.67718887 126.84608459]
[43.18842316 141.43475342]
[54.29565430 131.35360718]
[65.40288544 121.27246857]
[76.51012421 111.19132996]
[74.04360962 98.18730164]
[78.29367828 85.65232849]
[88.16056061 76.83002472]
[101.09106445 74.00327301]
[113.73924255 77.90354156]
[124.99533844 67.98889160]
[127.46521759 61.85609055]
[131.98327637 58.40874863]
[136.73733521 57.95272064]
[148.28363037 48.37760162]
[159.82994080 38.80248260]
[171.37623596 29.22736168]
[177.05993652 14.46232891]
[191.79583740 12.29379845]
[203.34213257 2.71867895]
[214.88842773 -6.85644102]
[206.00476074 -18.94821167]
[197.84605408 -31.54050636]
[190.44041443 -44.58991241]
[183.81338501 -58.05144501]
[177.98779297 -71.87870026]
[172.98373413 -86.02401733]
[168.81846619 -100.43862915]
[165.50634766 -115.07284546]
[163.05877686 -129.87622070]
[161.48419189 -144.79771423]
[160.78804016 -159.78590393]
[160.97271729 -174.78912354]
[162.03756714 -189.75563049]
[163.97894287 -204.63386536]
[166.79014587 -219.37249756]
[170.46147156 -233.92076111]
[174.98028564 -248.22848511]
[180.33099365 -262.24633789]
[186.49514771 -275.92602539]
[193.45152283 -289.22036743]
[201.17611694 -302.08352661]
[209.64230347 -314.47119141]
[218.82090759 -326.34063721]
[228.68028259 -337.65093994]
[239.18643188 -348.36315918]
[250.30314636 -358.44030762]
[261.99212646 -367.84765625]
[274.21304321 -376.55282593]
[286.92376709 -384.52575684]
[300.08050537 -391.73898315]
[313.63790894 -398.16763306]
[327.54922485 -403.78952026]
[341.76647949 -408.58532715]
[356.24072266 -412.53848267]
[370.92199707 -415.63537598]
[385.75970459 -417.86529541]
[400.70272827 -419.22061157]
[415.69952393 -419.69659424]
[430.69839478 -419.29162598]
[445.64767456 -418.00711060]
[460.49578857 -415.84747314]
[475.19155884 -412.82015991]
[489.68432617 -408.93560791]
[503.92416382 -404.20718384]
[517.86193848 -398.65121460]
[531.44964600 -392.28683472]
[544.64038086 -385.13601685]
[557.38873291 -377.22335815]
[569.65075684 -368.57617188]
[581.38409424 -359.22427368]
[592.54846191 -349.19989014]
[603.10522461 -338.53756714]
[613.01806641 -327.27407837]
[622.25274658 -315.44821167]
[630.77752686 -303.10079956]
[638.56292725 -290.27435303]
[645.58215332 -277.01312256]
[651.81103516 -263.36279297]
[657.22808838 -249.37042236]
[661.81463623 -235.08425903]
[665.55480957 -220.55354309]
[668.43579102 -205.82838440]
[670.44757080 -190.95951843]
[671.58331299 -175.99821472]
[671.83905029 -160.99604797]
[671.21386719 -146.00473022]
[669.70996094 -131.07594299]
[667.33251953 -116.26113892]
[664.08972168 -101.61140442]
[659.99279785 -87.17722321]
[655.05578613 -73.00836945]
[649.29577637 -59.15367889]
[642.73254395 -45.66091156]
[635.38879395 -32.57658005]
[627.28979492 -19.94579124]
[618.46350098 -7.81208372]
[608.94030762 3.78271437]
[598.75305176 14.79863262]
[587.93688965 25.19769669]
[576.52905273 34.94405746]
[564.56884766 44.00411987]
[552.09759521 52.34665298]
[539.15820312 59.94289017]
[525.79528809 66.76665497]
[512.05499268 72.79441833]
[497.98458862 78.00540161]
[483.63262939 82.38164520]
[469.04855347 85.90805817]
[454.28268433 88.57248688]
[439.38586426 90.36575317]
[424.40951538 91.28166199]
[409.40518188 91.31706238]
[394.42468262 90.47183228]
[379.51956177 88.74888611]
[364.74127197 86.15416718]
[350.14074707 82.69660950]
[335.76828003 78.38813782]
[321.67346191 73.24360657]
[307.90484619 67.28075409]
[294.50988770 60.52012253]
[281.53482056 52.98502731]
[269.02432251 44.70143890]
[257.02151489 35.69791412]
[245.56781006 26.00549316]
[234.70266724 15.65758419]
[224.46356201 4.68986082]
[212.91725159 14.26498032]
[201.37095642 23.84009933]
[196.51312256 37.92025757]
[180.95135498 40.77366257]
[169.40505981 50.34878540]
[157.85874939 59.92390442]
[146.31245422 69.49902344]
[134.90998840 79.24498749]
[123.65389252 89.15963745]
[125.47079468 105.31591034]
[117.34323883 119.39671326]
[102.44443512 125.90453339]
[86.59126282 122.29856110]
[75.48402405 132.37969971]
[64.37679291 142.46084595]
[53.26956177 152.54197693]
[43.02416992 163.49789429]
[33.70928574 175.25514221]
[24.39440346 187.01239014]
[15.07952023 198.76963806]
[5.76463699 210.52690125]
[16.27664375 221.25540161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 209]
[48 208]
[49 207]
[50 206]
[51 205]
[63 204]
[64 203]
[65 202]
[66 201]
[71 197]
[72 196]
[75 195]
[76 194]
[77 193]
[78 192]
[80 190]
[81 189]
[82 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
