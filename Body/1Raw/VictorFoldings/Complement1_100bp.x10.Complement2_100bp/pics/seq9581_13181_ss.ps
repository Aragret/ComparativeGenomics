%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[194.94628906 400.69561768]
[190.53799438 386.35198975]
[187.10807800 371.74346924]
[184.67222595 356.93673706]
[183.24153137 341.99932861]
[182.82252502 326.99942017]
[183.41711426 312.00543213]
[185.02258301 297.08581543]
[187.63163757 282.30859375]
[191.23233032 267.74124146]
[195.80825806 253.45021057]
[201.33853149 239.50068665]
[207.79792786 225.95634460]
[215.15695190 212.87898254]
[223.38204956 200.32824707]
[211.41970825 191.27825928]
[199.45738220 182.22825623]
[184.63934326 180.71987915]
[178.30203247 166.22335815]
[166.33969116 157.17335510]
[154.37734985 148.12336731]
[142.28160095 139.25247192]
[130.05511475 130.56263733]
[117.82863617 121.87281799]
[105.60214996 113.18299103]
[91.70182800 111.67543030]
[85.70803070 99.04349518]
[69.97713470 97.35542297]
[64.08553314 83.67556763]
[48.35464096 81.98749542]
[42.46303940 68.30764771]
[30.23655319 59.61782455]
[20.65302277 71.16633606]
[10.23326397 81.96637726]
[-0.96445054 91.95754242]
[-12.87749863 101.08396149]
[-25.43925667 109.29458618]
[-38.57947540 116.54351044]
[-52.22466660 122.79019165]
[-66.29851532 127.99969482]
[-80.72232819 132.14288330]
[-95.41542053 135.19657898]
[-110.29563904 137.14372253]
[-125.27975464 137.97341919]
[-140.28398132 137.68101501]
[-155.22439575 136.26815796]
[-170.01745605 133.74275208]
[-184.58041382 130.11891174]
[-198.83184814 125.41690063]
[-212.69204712 119.66302490]
[-226.08351135 112.88945770]
[-238.93132019 105.13407898]
[-251.16365051 96.44026947]
[-262.71206665 86.85663605]
[-273.51202393 76.43678284]
[-283.50308228 65.23898315]
[-292.62939453 53.32585144]
[-300.83993530 40.76401901]
[-308.08874512 27.62373924]
[-314.33529663 13.97849369]
[-319.54467773 -0.09540442]
[-323.68771362 -14.51924801]
[-326.74130249 -29.21237183]
[-328.68832397 -44.09260559]
[-329.51785278 -59.07673264]
[-329.22534180 -74.08095551]
[-327.81234741 -89.02135468]
[-325.28680420 -103.81439209]
[-321.66284180 -118.37732697]
[-316.96069336 -132.62872314]
[-311.20669556 -146.48886108]
[-304.43301392 -159.88026428]
[-296.67752075 -172.72801208]
[-287.98361206 -184.96025085]
[-278.39987183 -196.50860596]
[-267.97991943 -207.30845642]
[-256.78204346 -217.29942322]
[-244.86883545 -226.42562866]
[-232.30693054 -234.63604736]
[-219.16658020 -241.88473511]
[-205.52128601 -248.13117981]
[-191.44734192 -253.34042358]
[-177.02345276 -257.48336792]
[-162.33030701 -260.53680420]
[-147.45005798 -262.48367310]
[-132.46592712 -263.31311035]
[-117.46170044 -263.02044678]
[-102.52130890 -261.60733032]
[-87.72830200 -259.08163452]
[-73.16539764 -255.45755005]
[-58.91404724 -250.75529480]
[-45.05394745 -245.00117493]
[-31.66261482 -238.22737122]
[-18.81493568 -230.47177124]
[-6.58276224 -221.77774048]
[4.96549749 -212.19390869]
[15.76526165 -201.77386475]
[25.75613022 -190.57588196]
[34.88223267 -178.66259766]
[43.09252930 -166.10061646]
[50.34110641 -152.96020508]
[56.58742523 -139.31484985]
[61.79655457 -125.24085999]
[65.93936157 -110.81694794]
[68.99267578 -96.12376404]
[70.93942261 -81.24349976]
[71.76871490 -66.25936127]
[71.47591400 -51.25514221]
[70.06266785 -36.31476212]
[67.53686523 -21.52177429]
[63.91263580 -6.95890331]
[59.21025467 7.29240561]
[53.45601273 21.15245247]
[46.68209076 34.54372787]
[38.92637634 47.39133835]
[51.15286255 56.08116150]
[66.00923157 57.14767838]
[72.77536011 71.44908142]
[87.63172913 72.51560211]
[94.39785004 86.81700897]
[108.29817200 88.32456970]
[114.29196930 100.95650482]
[126.51845551 109.64633179]
[138.74494934 118.33615875]
[150.97143555 127.02597809]
[157.50659180 128.02757263]
[161.89598083 131.63731384]
[163.42735291 136.16102600]
[175.38969421 145.21102905]
[187.35203552 154.26103210]
[203.02569580 156.41671753]
[208.50738525 170.26591492]
[220.46971130 179.31591797]
[232.43205261 188.36592102]
[242.27261353 177.03735352]
[252.85551453 166.39898682]
[264.13247681 156.49932861]
[276.05203247 147.38356018]
[288.55981445 139.09329224]
[301.59872437 131.66632080]
[315.10928345 125.13656616]
[329.02981567 119.53379822]
[343.29687500 114.88359070]
[357.84530640 111.20716095]
[372.60873413 108.52128601]
[387.51980591 106.83821869]
[402.51049805 106.16563416]
[417.51239014 106.50660706]
[432.45703125 107.85958099]
[447.27624512 110.21837616]
[461.90240479 113.57224274]
[476.26876831 117.90586853]
[490.30981445 123.19947815]
[503.96142578 129.42892456]
[517.16137695 136.56578064]
[529.84936523 144.57748413]
[541.96759033 153.42747498]
[553.46063232 163.07537842]
[564.27618408 173.47715759]
[574.36480713 184.58537292]
[583.68054199 196.34933472]
[592.18078613 208.71534729]
[599.82684326 221.62701416]
[606.58374023 235.02540588]
[612.42071533 248.84938049]
[617.31115723 263.03588867]
[621.23266602 277.52017212]
[624.16741943 292.23614502]
[626.10198975 307.11669922]
[627.02758789 322.09387207]
[626.93994141 337.09939575]
[625.83947754 352.06475830]
[623.73120117 366.92166138]
[620.62475586 381.60235596]
[616.53430176 396.03985596]
[611.47851562 410.16827393]
[605.48040771 423.92312622]
[598.56744385 437.24166870]
[590.77105713 450.06314087]
[582.12695312 462.32901001]
[572.67443848 473.98333740]
[562.45672607 484.97293091]
[551.52044678 495.24768066]
[539.91546631 504.76065063]
[527.69470215 513.46850586]
[514.91394043 521.33142090]
[501.63156128 528.31359863]
[487.90808105 534.38317871]
[473.80618286 539.51239014]
[459.39016724 543.67791748]
[444.72583008 546.86065674]
[429.88006592 549.04620361]
[414.92065430 550.22448730]
[399.91580200 550.39019775]
[384.93399048 549.54254150]
[370.04357910 547.68542480]
[355.31253052 544.82727051]
[340.80804443 540.98114014]
[326.59631348 536.16461182]
[312.74212646 530.39959717]
[299.30877686 523.71246338]
[286.35751343 516.13366699]
[273.94744873 507.69784546]
[262.13519287 498.44348145]
[250.97463989 488.41278076]
[240.51673889 477.65148926]
[230.80917358 466.20874023]
[221.89627075 454.13674927]
[213.81867981 441.49060059]
[206.61325073 428.32797241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 134]
[16 133]
[17 132]
[19 130]
[20 129]
[21 128]
[22 125]
[23 124]
[24 123]
[25 122]
[27 120]
[29 118]
[31 116]
[32 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
