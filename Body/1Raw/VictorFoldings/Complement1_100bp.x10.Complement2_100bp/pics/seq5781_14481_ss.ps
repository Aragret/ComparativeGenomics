%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[144.70391846 382.38351440]
[153.72047424 370.35226440]
[164.59445190 359.96926880]
[177.02920532 351.51779175]
[170.75183105 337.89450073]
[158.39840698 329.57330322]
[159.65034485 313.80169678]
[153.37298584 300.17837524]
[147.09562683 286.55508423]
[140.71702576 272.97888184]
[134.23753357 259.45053101]
[127.75803375 245.92218018]
[121.27853394 232.39382935]
[114.79904175 218.86547852]
[108.31954193 205.33714294]
[108.05199432 220.33474731]
[103.96299744 234.76666260]
[96.32376862 247.67565918]
[85.64098358 258.20553589]
[72.62319946 265.65786743]
[58.13384247 269.53839111]
[43.13393021 269.58969116]
[28.61835670 265.80841064]
[15.54988766 258.44531250]
[4.79530907 247.98880005]
[-2.93206811 235.13237000]
[-7.11971378 220.72877502]
[-7.48987722 205.73333740]
[-4.01800585 191.14067078]
[3.06562257 177.91862488]
[13.29117680 166.94419861]
[25.98043251 158.94528198]
[40.29175568 154.45239258]
[55.27593231 153.76356506]
[69.93910980 156.92443848]
[83.30873871 163.72540283]
[94.49805450 173.71536255]
[102.76715851 186.23632812]
[93.57228851 174.51866150]
[99.61487579 159.89685059]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[74.15210724 52.94363022]
[62.48303986 44.82981110]
[54.30162430 33.24457932]
[50.57396698 19.59132576]
[51.72816849 5.51545811]
[57.60525894 -7.29388571]
[67.48075104 -17.30653763]
[80.15386963 -23.33408737]
[78.81563568 -38.27427292]
[77.47740173 -53.21445847]
[76.13916779 -68.15464020]
[74.80093384 -83.09482574]
[73.46269989 -98.03501129]
[72.12446594 -112.97519684]
[58.19548798 -116.33455658]
[46.00319290 -123.82023621]
[36.73268127 -134.68907166]
[31.28023529 -147.86982727]
[30.16670036 -162.06878662]
[33.48773575 -175.89666748]
[40.90575790 -188.00463867]
[51.68422318 -197.21582031]
[64.76071930 -202.63972473]
[63.64506531 -217.59817505]
[62.52941895 -232.55664062]
[61.41376877 -247.51509094]
[57.65475464 -255.84020996]
[60.39455795 -262.70425415]
[59.50173950 -277.67767334]
[58.60892487 -292.65106201]
[57.71611023 -307.62448120]
[56.82329178 -322.59790039]
[55.70764542 -337.55633545]
[54.36941147 -352.49652100]
[53.03117752 -367.43670654]
[38.39797592 -375.91995239]
[31.77039719 -391.30099487]
[35.57844162 -407.43978882]
[48.12855530 -418.02148438]
[46.56803131 -432.94009399]
[45.00751114 -447.85870361]
[43.44698715 -462.77728271]
[28.52701187 -464.97848511]
[14.62350845 -470.82171631]
[2.61045957 -479.93969727]
[-6.75698376 -491.75924683]
[-12.88997555 -505.53738403]
[-15.40299225 -520.40802002]
[-14.13806152 -535.43634033]
[-9.17469978 -549.67767334]
[-0.82490695 -562.23681641]
[10.38644123 -572.32427979]
[23.75459099 -579.30590820]
[38.43920898 -582.74285889]
[53.51720428 -582.41912842]
[68.04077148 -578.35504150]
[81.09693146 -570.80603027]
[91.86497498 -560.24670410]
[99.66801453 -547.34075928]
[104.01553345 -532.89947510]
[104.63425446 -517.83068848]
[101.48527527 -503.08166504]
[94.76655579 -489.57943726]
[84.90042114 -478.17285156]
[72.50708771 -469.57891846]
[58.36558914 -464.33782959]
[59.92611313 -449.41921997]
[61.48663712 -434.50061035]
[63.04716110 -419.58200073]
[75.17599487 -414.00225830]
[83.02690125 -403.07031250]
[84.46233368 -389.57925415]
[79.00100708 -377.04162598]
[67.97135925 -368.77493286]
[69.30959320 -353.83474731]
[70.64782715 -338.89456177]
[73.67326355 -335.19918823]
[74.40940094 -329.56402588]
[71.79669952 -323.49069214]
[72.68951416 -308.51730347]
[73.58232880 -293.54388428]
[74.47514343 -278.57049561]
[75.36796570 -263.59707642]
[76.37222290 -248.63073730]
[77.48786926 -233.67228699]
[78.60352325 -218.71382141]
[79.71916962 -203.75537109]
[94.92630768 -199.67712402]
[107.83961487 -190.62275696]
[116.88722992 -177.67198181]
[120.96017456 -162.38008118]
[119.54823303 -146.59124756]
[112.80382538 -132.21609497]
[101.52574921 -121.00045776]
[87.06465149 -114.31343079]
[88.40288544 -99.37324524]
[89.74111938 -84.43305969]
[91.07935333 -69.49287415]
[92.41758728 -54.55269241]
[93.75582123 -39.61250687]
[95.09405518 -24.67232132]
[110.28838348 -20.17138672]
[122.62209320 -10.15996075]
[130.18794250 3.85192370]
[131.80137634 19.73274994]
[127.18592072 35.05375671]
[117.01999664 47.46038818]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.50859070 158.11437988]
[123.83096313 170.89733887]
[117.66088104 184.45385742]
[121.84789276 198.85763550]
[128.32739258 212.38598633]
[134.80688477 225.91433716]
[141.28637695 239.44267273]
[147.76586914 252.97102356]
[154.24536133 266.49935913]
[160.77473450 272.88726807]
[160.71894836 280.27770996]
[166.99630737 293.90103149]
[173.27366638 307.52435303]
[186.07609558 316.81997681]
[184.37515259 331.61712646]
[190.65251160 345.24044800]
[205.15625000 341.27917480]
[220.11418152 339.75930786]
[235.11827087 340.72232056]
[249.75917053 344.14196777]
[263.63748169 349.92489624]
[276.37457275 357.91339111]
[287.62301636 367.88949585]
[297.07589722 379.58105469]
[304.47534180 392.66915894]
[309.61950684 406.79669189]
[312.36804199 421.57827759]
[312.64596558 436.61068726]
[310.44570923 451.48376465]
[305.82727051 465.79180908]
[298.91665649 479.14447021]
[289.90243530 491.17745972]
[279.03045654 501.56253052]
[266.59732056 510.01638794]
[252.94226074 516.30841064]
[238.43777466 520.26684570]
[223.47953796 521.78381348]
[208.47564697 520.81793213]
[193.83540344 517.39550781]
[179.95820618 511.60986328]
[167.22264099 503.61892700]
[155.97613525 493.64065552]
[146.52551270 481.94726562]
[139.12858582 468.85775757]
[133.98713684 454.72921753]
[131.24145508 439.94708252]
[130.96643066 424.91464233]
[133.16955566 410.04199219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[7 175]
[8 174]
[9 173]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[15 166]
[38 165]
[40 163]
[41 162]
[42 161]
[43 160]
[46 158]
[47 157]
[48 156]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[71 135]
[72 134]
[73 133]
[74 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 124]
[82 123]
[83 122]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
