%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[129.92491150 304.96603394]
[125.38831329 319.27560425]
[119.51203156 333.08917236]
[112.34928131 346.28158569]
[103.96493530 358.73336792]
[94.43492126 370.33181763]
[83.84554291 380.97183228]
[72.29270935 390.55706787]
[59.88104630 399.00070190]
[46.72295380 406.22631836]
[32.93759537 412.16842651]
[18.64982224 416.77325439]
[3.98902583 419.99905396]
[-10.91201878 421.81661987]
[-25.91836357 422.20953369]
[-40.89410400 421.17419434]
[-55.70361710 418.72000122]
[-70.21278381 414.86914062]
[-84.29019165 409.65655518]
[-97.80836487 403.12939453]
[-110.64487457 395.34680176]
[-122.68346405 386.37924194]
[-133.81510925 376.30792236]
[-143.93899536 365.22409058]
[-152.96345520 353.22808838]
[-160.80673218 340.42855835]
[-167.39781189 326.94143677]
[-172.67700195 312.88888550]
[-176.59648132 298.39810181]
[-179.12075806 283.60037231]
[-180.22698975 268.62969971]
[-179.90512085 253.62165833]
[-178.15811157 238.71218872]
[-175.00173950 224.03628540]
[-170.46463013 209.72686768]
[-164.58784485 195.91352844]
[-157.42460632 182.72137451]
[-149.03981018 170.26988220]
[-139.50936890 158.67179871]
[-128.91960144 148.03216553]
[-117.36642456 138.44735718]
[-104.95445251 130.00415039]
[-91.79609680 122.77902985]
[-78.01052094 116.83741760]
[-63.72257996 112.23313141]
[-49.06166840 109.00785828]
[-34.16055679 107.19081879]
[-19.15419579 106.79846954]
[-4.17849255 107.83435059]
[10.63092995 110.28909302]
[25.13995171 114.14045715]
[39.21717453 119.35356903]
[52.73511124 125.88121796]
[65.57133484 133.66429138]
[74.53202820 121.63490295]
[83.49272919 109.60552979]
[81.50059509 95.25360870]
[90.15634155 83.63361359]
[104.47789764 81.43377686]
[113.43859100 69.40439606]
[122.39928436 57.37501907]
[131.35998535 45.34564209]
[140.32067871 33.31626511]
[128.73948669 23.77866936]
[117.63639832 13.68852520]
[107.03774261 3.06976271]
[96.96865845 -8.05243015]
[87.45303345 -19.65167236]
[78.51342773 -31.70045280]
[70.17105103 -44.17019272]
[62.44569397 -57.03131485]
[55.35567474 -70.25331879]
[48.91781235 -83.80483246]
[43.14737701 -97.65371704]
[38.05805588 -111.76713562]
[33.66192245 -126.11159515]
[29.96939850 -140.65309143]
[26.98924446 -155.35711670]
[24.72853088 -170.18879700]
[23.19261932 -185.11296082]
[22.38515091 -200.09419250]
[22.30804253 -215.09698486]
[22.96147537 -230.08573914]
[24.34390259 -245.02490234]
[26.45204353 -259.87902832]
[29.28089523 -274.61291504]
[32.82375336 -289.19158936]
[37.07221222 -303.58047485]
[42.01618958 -317.74545288]
[47.64397049 -331.65292358]
[53.94219589 -345.26989746]
[60.89593124 -358.56408691]
[68.48867798 -371.50393677]
[76.70243835 -384.05877686]
[85.51772308 -396.19882202]
[94.91362000 -407.89526367]
[104.86785126 -419.12036133]
[115.35679626 -429.84750366]
[126.35558319 -440.05123901]
[137.83811951 -449.70736694]
[149.77717590 -458.79299927]
[162.14443970 -467.28656006]
[174.91055298 -475.16790771]
[188.04525757 -482.41836548]
[201.51739502 -489.02072144]
[215.29501343 -494.95935059]
[229.34542847 -500.22009277]
[243.63529968 -504.79052734]
[258.13076782 -508.65982056]
[272.79742432 -511.81875610]
[287.60046387 -514.25988770]
[302.50482178 -515.97735596]
[317.47512817 -516.96716309]
[332.47589111 -517.22686768]
[347.47146606 -516.75598145]
[362.42636108 -515.55554199]
[377.30505371 -513.62835693]
[392.07229614 -510.97909546]
[406.69302368 -507.61398315]
[421.13256836 -503.54101562]
[435.35668945 -498.76983643]
[449.33163452 -493.31179810]
[463.02426147 -487.17980957]
[476.40213013 -480.38842773]
[489.43344116 -472.95376587]
[502.08734131 -464.89346313]
[514.33380127 -456.22662354]
[526.14373779 -446.97381592]
[537.48919678 -437.15698242]
[548.34326172 -426.79940796]
[558.68011475 -415.92565918]
[568.47534180 -404.56152344]
[577.70562744 -392.73394775]
[586.34912109 -380.47100830]
[594.38531494 -367.80178833]
[601.79516602 -354.75631714]
[608.56103516 -341.36557007]
[614.66693115 -327.66125488]
[620.09832764 -313.67593384]
[624.84240723 -299.44274902]
[628.88787842 -284.99548340]
[632.22509766 -270.36837769]
[634.84625244 -255.59611511]
[636.74505615 -240.71377563]
[637.91705322 -225.75663757]
[638.35937500 -210.76016235]
[638.07104492 -195.75994873]
[637.05273438 -180.79156494]
[635.30688477 -165.89050293]
[632.83758545 -151.09211731]
[629.65069580 -136.43150330]
[625.75384521 -121.94344330]
[621.15618896 -107.66229248]
[615.86865234 -93.62193298]
[609.90380859 -79.85565948]
[603.27581787 -66.39611816]
[596.00036621 -53.27524948]
[588.09466553 -40.52416611]
[579.57757568 -28.17311096]
[570.46923828 -16.25138092]
[560.79125977 -4.78725624]
[550.56658936 6.19207430]
[539.81945801 16.66056824]
[528.57543945 26.59339714]
[516.86108398 35.96699905]
[504.70428467 44.75914001]
[492.13381958 52.94896698]
[479.17953491 60.51705551]
[465.87213135 67.44545746]
[452.24319458 73.71772766]
[438.32504272 79.31900787]
[424.15066528 84.23599243]
[409.75369263 88.45703888]
[395.16830444 91.97211456]
[380.42904663 94.77289581]
[365.57092285 96.85273743]
[350.62915039 98.20671082]
[335.63919067 98.83158875]
[320.63656616 98.72589874]
[305.65689087 97.88990021]
[290.73568726 96.32556152]
[275.90835571 94.03659821]
[261.21002197 91.02844238]
[246.67559814 87.30822754]
[232.33952332 82.88477325]
[218.23583984 77.76857758]
[204.39796448 71.97177124]
[190.85873413 65.50811005]
[177.65026855 58.39291763]
[164.80387878 50.64307404]
[152.35005188 42.27695847]
[143.38935852 54.30633926]
[134.42866516 66.33571625]
[125.46797180 78.36509705]
[116.50727081 90.39447021]
[118.49940491 104.74639130]
[109.84365845 116.36638641]
[95.52210236 118.56622314]
[86.56140900 130.59559631]
[77.60071564 142.62498474]
[88.73272705 152.69587708]
[98.85701752 163.77935791]
[107.88190460 175.77502441]
[115.72565460 188.57426453]
[122.31722260 202.06114197]
[127.59692383 216.11352539]
[131.51693726 230.60415649]
[134.04174805 245.40179443]
[135.14852905 260.37243652]
[134.82720947 275.38046265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 200]
[55 199]
[56 198]
[59 195]
[60 194]
[61 193]
[62 192]
[63 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
