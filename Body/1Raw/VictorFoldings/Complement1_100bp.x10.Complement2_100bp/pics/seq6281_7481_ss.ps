%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[113.87519836 569.97082520]
[101.29846954 561.78912354]
[89.19154358 552.92700195]
[77.59120178 543.41137695]
[66.53266907 533.27117920]
[56.04953003 522.53717041]
[46.17362595 511.24197388]
[36.93494415 499.41989136]
[28.36154556 487.10681152]
[20.47946548 474.34014893]
[13.31264400 461.15866089]
[6.88284445 447.60238647]
[1.20959568 433.71249390]
[-3.68987370 419.53115845]
[-7.80068398 405.10147095]
[-11.11035061 390.46722412]
[-13.60882187 375.67288208]
[-15.28851032 360.76336670]
[-16.14431572 345.78396606]
[-16.17363739 330.78018188]
[-15.37638664 315.79754639]
[-13.75498486 300.88159180]
[-11.31435680 286.07757568]
[-8.06191349 271.43051147]
[-4.00753403 256.98486328]
[0.83646953 242.78450012]
[6.45538616 228.87254333]
[12.83215046 215.29124451]
[19.94739723 202.08184814]
[27.77951813 189.28446960]
[36.30472565 176.93797302]
[45.49712753 165.07987976]
[55.32881165 153.74617004]
[65.76991272 142.97128296]
[76.78872681 132.78793335]
[88.35179138 123.22705078]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.57700348 68.82833862]
[62.34819412 56.28693771]
[54.11938477 43.74553680]
[45.79743958 31.26574516]
[37.38282394 18.84824944]
[24.35132217 26.29154968]
[10.78827572 32.71545410]
[-3.22672153 38.08226013]
[-17.61142349 42.36047363]
[-32.28141022 45.52499008]
[-47.15060043 47.55723953]
[-62.13172531 48.44529343]
[-77.13687134 48.18393707]
[-92.07798004 46.77471161]
[-106.86737823 44.22588348]
[-121.41826630 40.55240631]
[-135.64524841 35.77584457]
[-149.46485901 29.92422867]
[-162.79595947 23.03189278]
[-175.56034851 15.13928986]
[-187.68310547 6.29273462]
[-199.09309387 -3.45585585]
[-209.72334290 -14.04927254]
[-219.51147461 -25.42534828]
[-228.40005493 -37.51732254]
[-236.33692932 -50.25423813]
[-243.27549744 -63.56134033]
[-249.17504883 -77.36054230]
[-254.00096130 -91.57086945]
[-257.72491455 -106.10891724]
[-260.32507324 -120.88937378]
[-261.78616333 -135.82550049]
[-262.09957886 -150.82965088]
[-261.26354980 -165.81376648]
[-259.28292847 -180.68992615]
[-256.16934204 -195.37080383]
[-251.94108582 -209.77027893]
[-246.62297058 -223.80381775]
[-240.24618530 -237.38908386]
[-232.84815979 -250.44633484]
[-224.47232056 -262.89895630]
[-215.16780090 -274.67388916]
[-204.98922729 -285.70199585]
[-193.99632263 -295.91857910]
[-182.25358582 -305.26370239]
[-169.82994080 -313.68249512]
[-156.79830933 -321.12554932]
[-143.23513794 -327.54919434]
[-129.22003174 -332.91571045]
[-114.83525085 -337.19366455]
[-100.16520691 -340.35791016]
[-85.29598236 -342.38986206]
[-70.31483459 -343.27764893]
[-55.30969620 -343.01599121]
[-40.36861038 -341.60650635]
[-25.57926178 -339.05737305]
[-11.02844429 -335.38363647]
[3.19845366 -330.60681152]
[17.01794243 -324.75491333]
[30.34892082 -317.86233521]
[43.11315536 -309.96948242]
[55.23574448 -301.12271118]
[66.64554596 -291.37390137]
[77.27559662 -280.78027344]
[87.06351471 -269.40402222]
[95.95187378 -257.31185913]
[103.88848877 -244.57481384]
[110.82680511 -231.26757812]
[116.72609711 -217.46826172]
[121.55175018 -203.25784302]
[125.27543640 -188.71972656]
[127.87530518 -173.93920898]
[129.33610535 -159.00305176]
[129.64926147 -143.99890137]
[128.81292725 -129.01480103]
[126.83202362 -114.13868713]
[123.71816254 -99.45785522]
[119.48963165 -85.05847168]
[114.17124176 -71.02503204]
[107.79420471 -57.43989182]
[100.39593506 -44.38277054]
[92.01985168 -31.93030167]
[82.71511841 -20.15555382]
[72.53633118 -9.12763309]
[61.54322815 1.08874667]
[49.80031967 10.43362999]
[58.21493530 22.85112572]
[64.56948090 26.62492180]
[66.66078186 35.51673126]
[74.88959503 48.05813217]
[83.11840057 60.59952927]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[125.94430542 98.56141663]
[139.31819153 91.76038361]
[153.04643250 85.70641327]
[167.08731079 80.41790009]
[181.39820862 75.91089630]
[195.93565369 72.19909668]
[210.65550232 69.29376984]
[225.51304626 67.20373535]
[240.46318054 65.93534851]
[255.46046448 65.49246216]
[270.45938110 65.87641144]
[285.41436768 67.08604431]
[300.27999878 69.11766815]
[315.01116943 71.96513367]
[329.56307983 75.61978149]
[343.89157104 80.07051086]
[357.95315552 85.30381012]
[371.70504761 91.30377960]
[385.10556030 98.05220795]
[398.11398315 105.52859497]
[410.69076538 113.71022797]
[422.79776001 122.57227325]
[434.39816284 132.08779907]
[445.45675659 142.22793579]
[455.93997192 152.96185303]
[465.81594849 164.25697327]
[475.05471802 176.07899475]
[483.62820435 188.39201355]
[491.51037598 201.15861511]
[498.67730713 214.34005737]
[505.10717773 227.89628601]
[510.78054810 241.78613281]
[515.68011475 255.96742249]
[519.79101562 270.39709473]
[523.10076904 285.03131104]
[525.59936523 299.82562256]
[527.27917480 314.73513794]
[528.13507080 329.71453857]
[528.16448975 344.71832275]
[527.36737061 359.70095825]
[525.74603271 374.61694336]
[523.30554199 389.42095947]
[520.05316162 404.06805420]
[515.99890137 418.51373291]
[511.15499878 432.71414185]
[505.53619385 446.62612915]
[499.15951538 460.20748901]
[492.04437256 473.41693115]
[484.21234131 486.21435547]
[475.68722534 498.56088257]
[466.49490356 510.41906738]
[456.66329956 521.75286865]
[446.22225952 532.52783203]
[435.20352173 542.71124268]
[423.64053345 552.27221680]
[411.56838989 561.18164062]
[399.02380371 569.41259766]
[386.04483032 576.93994141]
[372.67089844 583.74084473]
[358.94259644 589.79473877]
[344.90167236 595.08312988]
[330.59075928 599.59002686]
[316.05328369 603.30175781]
[301.33340454 606.20697021]
[286.47586060 608.29687500]
[271.52572632 609.56518555]
[256.52844238 610.00793457]
[241.52951050 609.62390137]
[226.57453918 608.41418457]
[211.70890808 606.38244629]
[196.97776794 603.53485107]
[182.42587280 599.88012695]
[168.09741211 595.42932129]
[154.03588867 590.19592285]
[140.28401184 584.19580078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 135]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 127]
[45 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
