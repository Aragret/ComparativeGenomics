%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[205.69552612 526.74768066]
[207.65565491 511.73315430]
[214.38700867 498.16967773]
[225.15945435 487.52859497]
[238.80445862 480.96408081]
[237.02200317 466.07037354]
[235.23953247 451.17666626]
[233.45706177 436.28292847]
[231.67460632 421.38922119]
[229.89213562 406.49551392]
[228.10966492 391.60177612]
[226.32720947 376.70806885]
[224.54473877 361.81436157]
[220.14373779 347.47451782]
[213.26432800 334.14508057]
[206.38491821 320.81564331]
[199.50550842 307.48620605]
[192.62608337 294.15679932]
[185.74667358 280.82736206]
[178.76821899 267.54949951]
[171.69111633 254.32398987]
[164.61401367 241.09846497]
[150.64918518 243.95669556]
[136.42906189 242.76168823]
[123.10742950 237.60139465]
[111.76771545 228.88586426]
[103.33486176 217.31468201]
[98.49990082 203.82081604]
[97.66332245 189.49539185]
[100.90191650 175.49945068]
[107.96182251 162.96986389]
[118.27841187 152.92703247]
[111.39899445 139.59759521]
[104.51958466 126.26816559]
[97.64017487 112.93873596]
[97.92044830 127.93611908]
[94.90138245 142.62915039]
[88.73028564 156.30093384]
[79.70826721 168.28439331]
[68.27552032 177.99481201]
[54.98987579 184.95840454]
[40.49957657 188.83541870]
[25.51163101 189.43667603]
[10.75733662 186.73281860]
[-3.04341388 180.85581970]
[-15.21724987 172.09237671]
[-25.17018509 160.87011719]
[-32.41659164 147.73658752]
[-36.60289764 133.33261108]
[-37.52485275 118.36096954]
[-35.13746643 103.55216980]
[-29.55722809 89.62877655]
[-21.05640602 77.27013397]
[-10.04977608 67.07925415]
[2.92562342 59.55336380]
[17.23669434 55.05967331]
[32.18516922 53.81744003]
[47.04167557 55.88727188]
[61.08133316 61.16817856]
[73.61911774 69.40249634]
[84.04328156 80.18845367]
[91.84240723 92.99377441]
[90.50417328 78.05359650]
[89.16593933 63.11340714]
[87.49440002 48.20683289]
[85.37977600 33.35663605]
[83.15465546 18.52259254]
[80.92953491 3.68854880]
[78.70442200 -11.14549446]
[76.47930145 -25.97953796]
[74.25418854 -40.81358337]
[72.02906799 -55.64762497]
[69.80395508 -70.48166656]
[67.57883453 -85.31571198]
[53.32300186 -95.45427704]
[50.85892105 -112.43200684]
[61.22803497 -125.67285919]
[58.78230667 -140.47213745]
[56.33657837 -155.27140808]
[41.31171799 -155.00415039]
[26.40807152 -156.92747498]
[11.94331074 -161.00036621]
[-1.77424741 -167.13604736]
[-14.45221138 -175.20370483]
[-25.82035065 -185.03138733]
[-35.63635254 -196.40960693]
[-43.69098663 -209.09584045]
[-49.81256866 -222.81970215]
[-53.87062073 -237.28863525]
[-55.77863693 -252.19424438]
[-55.49595642 -267.21881104]
[-53.02859879 -282.04211426]
[-48.42915726 -296.34817505]
[-41.79567337 -309.83203125]
[-33.26953506 -322.20629883]
[-23.03247643 -333.20724487]
[-11.30270672 -342.60034180]
[1.66975749 -350.18539429]
[15.60840607 -355.80072021]
[30.21613503 -359.32666016]
[45.18158340 -360.68798828]
[60.18575668 -359.85574341]
[74.90884399 -356.84765625]
[89.03701782 -351.72784424]
[102.26914215 -344.60543823]
[114.32316589 -335.63223267]
[124.94215393 -324.99951172]
[133.89978027 -312.93389893]
[141.00509644 -299.69259644]
[146.10664368 -285.55780029]
[149.09570312 -270.83084106]
[149.90855408 -255.82560730]
[148.52787781 -240.86193848]
[144.98309326 -226.25877380]
[139.34974670 -212.32739258]
[131.74794006 -199.36473083]
[122.33969879 -187.64710999]
[111.32554626 -177.42428589]
[98.94025421 -168.91413879]
[85.44783020 -162.29808044]
[71.13584900 -157.71713257]
[73.58157349 -142.91786194]
[76.02730560 -128.11859131]
[87.44903564 -122.15422821]
[93.43945312 -110.52680206]
[91.61237335 -97.37871552]
[82.41287994 -87.54083252]
[84.63799286 -72.70678711]
[86.86311340 -57.87274170]
[89.08823395 -43.03870010]
[91.31334686 -28.20465660]
[93.53846741 -13.37061214]
[95.76358032 1.46343172]
[97.98870087 16.29747581]
[100.21381378 31.13151932]
[104.31476593 37.28001785]
[102.35992432 46.20281982]
[104.92711639 48.61981201]
[106.45116425 52.40033340]
[106.30394745 57.04055023]
[104.10612488 61.77517319]
[105.44435883 76.71536255]
[106.78259277 91.65554047]
[110.96960449 106.05932617]
[117.84901428 119.38875580]
[124.72842407 132.71818542]
[131.60783386 146.04760742]
[147.20693970 143.42300415]
[162.83439636 145.74444580]
[176.96218872 152.77282715]
[188.21270752 163.80938721]
[195.49304199 177.76516724]
[198.10119629 193.26850891]
[195.79370117 208.79978943]
[188.80828857 222.84043884]
[177.83953857 234.02134705]
[184.91664124 247.24688721]
[191.99374390 260.47241211]
[198.80183411 266.56237793]
[199.07611084 273.94793701]
[205.95552063 287.27737427]
[212.83493042 300.60681152]
[219.71434021 313.93624878]
[226.59375000 327.26565552]
[233.47317505 340.59509277]
[233.22242737 325.59719849]
[236.52017212 310.96417236]
[243.17988586 297.52365112]
[252.82493591 286.03567505]
[264.90985107 277.15002441]
[278.75115967 271.36917114]
[293.56607056 269.02008057]
[308.51675415 270.23562622]
[322.75762939 274.94699097]
[335.48333740 282.88778687]
[345.97418213 293.60888672]
[353.63684082 306.50399780]
[358.03796387 320.84381104]
[358.92864990 335.81732178]
[356.25848389 350.57775879]
[350.17855835 364.29031372]
[341.03262329 376.17947388]
[329.33801270 385.57287598]
[315.75607300 391.93923950]
[301.05490112 394.91854858]
[286.06597900 394.34228516]
[271.63696289 390.24304199]
[258.58392334 382.85269165]
[247.64501953 372.58914185]
[239.43846130 360.03189087]
[241.22091675 374.92559814]
[243.00338745 389.81933594]
[244.78585815 404.71304321]
[246.56831360 419.60675049]
[248.35078430 434.50048828]
[250.13325500 449.39419556]
[251.91571045 464.28790283]
[253.69818115 479.18161011]
[268.50689697 482.34078979]
[281.48617554 490.13931274]
[291.22811890 501.73126221]
[296.67599487 515.85925293]
[297.23886108 530.99072266]
[292.85562134 545.48437500]
[284.00180054 557.76806641]
[271.63775635 566.50927734]
[257.10467529 570.75988770]
[241.97894287 570.05883789]
[227.90135193 564.48211670]
[216.39888000 554.63464355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 160]
[20 158]
[21 157]
[22 156]
[32 147]
[33 146]
[34 145]
[35 144]
[62 143]
[63 142]
[64 141]
[65 137]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[77 123]
[78 122]
[79 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
