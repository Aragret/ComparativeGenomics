%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[24.29840660 629.60980225]
[11.25633907 637.02960205]
[-2.22588944 643.61590576]
[-16.09506989 649.34259033]
[-30.29646873 654.18719482]
[-44.77403641 658.13043213]
[-59.47063828 661.15692139]
[-74.32826996 663.25457764]
[-89.28829956 664.41516113]
[-104.29168701 664.63415527]
[-119.27921295 663.91058350]
[-134.19172668 662.24737549]
[-148.97039795 659.65112305]
[-163.55686951 656.13201904]
[-177.89360046 651.70391846]
[-191.92398071 646.38439941]
[-205.59266663 640.19433594]
[-218.84571838 633.15826416]
[-231.63079834 625.30389404]
[-243.89747620 616.66229248]
[-255.59733582 607.26745605]
[-266.68420410 597.15649414]
[-277.11431885 586.36938477]
[-286.84649658 574.94860840]
[-295.84237671 562.93927002]
[-304.06643677 550.38879395]
[-311.48620605 537.34667969]
[-318.07238770 523.86444092]
[-323.79904175 509.99523926]
[-328.64352417 495.79379272]
[-332.58673096 481.31622314]
[-335.61309814 466.61959839]
[-337.71069336 451.76196289]
[-338.87121582 436.80191040]
[-339.09011841 421.79852295]
[-338.36648560 406.81100464]
[-336.70321655 391.89849854]
[-334.10684204 377.11984253]
[-330.58767700 362.53338623]
[-326.15951538 348.19668579]
[-320.83990479 334.16632080]
[-314.64981079 320.49768066]
[-307.61364746 307.24465942]
[-299.75921631 294.45962524]
[-291.11752319 282.19299316]
[-281.72262573 270.49319458]
[-271.61163330 259.40637207]
[-260.82443237 248.97631836]
[-249.40362549 239.24418640]
[-237.39425659 230.24836731]
[-224.84373474 222.02438354]
[-211.80158997 214.60469055]
[-198.31929016 208.01855469]
[-184.45005798 202.29197693]
[-170.24861145 197.44757080]
[-155.77099609 193.50444031]
[-141.07437134 190.47813416]
[-126.21670532 188.38063049]
[-111.25666809 187.22018433]
[-96.25328064 187.00137329]
[-81.26576233 187.72508240]
[-66.35325623 189.38842773]
[-51.57462692 191.98486328]
[-36.98818588 195.50413513]
[-22.65150833 199.93234253]
[-8.62117100 205.25204468]
[5.04745293 211.44221497]
[18.30041885 218.47842407]
[26.15217400 205.69758606]
[34.00392914 192.91674805]
[41.85568619 180.13589478]
[49.70743942 167.35505676]
[57.55919647 154.57421875]
[65.41094971 141.79338074]
[73.26271057 129.01252747]
[81.11446381 116.23168945]
[88.96621704 103.45084381]
[75.27507019 109.57885742]
[60.29885864 108.73448944]
[47.38329697 101.10636139]
[39.41375732 88.39862823]
[38.17066193 73.45022583]
[43.93171310 59.60066986]
[55.40988159 49.94397736]
[70.04090881 46.63748932]
[84.55619812 50.41987228]
[95.71298981 60.44614029]
[101.01882172 74.47639465]
[99.28836060 89.37626648]
[109.11894226 78.04667664]
[118.94952393 66.71707916]
[128.78010559 55.38748932]
[138.61068726 44.05789566]
[148.44126892 32.72830200]
[158.27185059 21.39871025]
[147.86167908 10.58508492]
[138.46273804 -1.11817789]
[130.15072632 -13.61684704]
[122.99256897 -26.81028938]
[117.04588318 -40.59227753]
[112.35855865 -54.85184479]
[108.96833801 -69.47417450]
[106.90250397 -84.34154510]
[106.17771149 -99.33423615]
[106.79977417 -114.33155060]
[108.76370239 -129.21272278]
[112.05367279 -143.85794067]
[116.64319611 -158.14927673]
[122.49532318 -171.97167969]
[129.56292725 -185.21385193]
[137.78912354 -197.76918030]
[147.10765076 -209.53656006]
[157.44349670 -220.42124939]
[168.71343994 -230.33560181]
[180.82673645 -239.19981384]
[193.68586731 -246.94250488]
[207.18727112 -253.50132751]
[221.22225952 -258.82348633]
[235.67784119 -262.86611938]
[250.43759155 -265.59664917]
[265.38269043 -266.99313354]
[280.39279175 -267.04434204]
[295.34707642 -265.74981689]
[310.12512207 -263.11999512]
[324.60791016 -259.17605591]
[338.67889404 -253.94973755]
[352.22470093 -247.48315430]
[365.13635254 -239.82835388]
[377.30981445 -231.04696655]
[388.64712524 -221.20970154]
[399.05697632 -210.39575195]
[408.45553589 -198.69219971]
[416.76718140 -186.19328308]
[423.92492676 -172.99961853]
[429.87118530 -159.21745300]
[434.55807495 -144.95774841]
[437.94784546 -130.33531189]
[440.01324463 -115.46787262]
[440.73757935 -100.47515869]
[440.11505127 -85.47786713]
[438.15066528 -70.59675598]
[434.86026001 -55.95164108]
[430.27029419 -41.66043854]
[424.41775513 -27.83821106]
[417.34973145 -14.59625530]
[409.12316895 -2.04118586]
[399.80426025 9.72590828]
[389.46807861 20.61028290]
[378.19784546 30.52430344]
[366.08425903 39.38814545]
[353.22491455 47.13043976]
[339.72329712 53.68885040]
[325.68814087 59.01057053]
[311.23245239 63.05275726]
[296.47262573 65.78285217]
[281.52746582 67.17889404]
[266.51736450 67.22962189]
[251.56311035 65.93463898]
[236.78515625 63.30436325]
[222.30247498 59.35998154]
[208.23167419 54.13325119]
[194.68605042 47.66624832]
[181.77464294 40.01105118]
[169.60144043 31.22929192]
[159.77085876 42.55888367]
[149.94027710 53.88847733]
[140.10969543 65.21807098]
[130.27911377 76.54766083]
[120.44853973 87.87725830]
[110.61795807 99.20684814]
[101.74706268 111.30260468]
[93.89530945 124.08344269]
[86.04354858 136.86428833]
[78.19179535 149.64512634]
[70.34004211 162.42596436]
[62.48828506 175.20681763]
[54.63652802 187.98765564]
[46.78477097 200.76849365]
[38.93301773 213.54934692]
[31.08126259 226.33018494]
[43.34803009 234.97171021]
[55.04798508 244.36640930]
[66.13494873 254.47723389]
[76.56517029 265.26425171]
[86.29749298 276.68490601]
[95.29348755 288.69415283]
[103.51766968 301.24453735]
[110.93757629 314.28656006]
[117.52391815 327.76876831]
[123.25070953 341.63790894]
[128.09533691 355.83929443]
[132.03869629 370.31683350]
[135.06523132 385.01342773]
[137.16296387 399.87103271]
[138.32365417 414.83105469]
[138.54269409 429.83444214]
[137.81922913 444.82196045]
[136.15611267 459.73449707]
[133.55990601 474.51318359]
[130.04086304 489.09967041]
[125.61286926 503.43643188]
[120.29339600 517.46685791]
[114.10343933 531.13555908]
[107.06742859 544.38861084]
[99.21313477 557.17376709]
[90.57154846 569.44049072]
[81.17678070 581.14038086]
[71.06590271 592.22729492]
[60.27882385 602.65747070]
[48.85811234 612.38970947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 180]
[69 179]
[70 178]
[71 177]
[72 176]
[73 175]
[74 174]
[75 173]
[76 172]
[77 171]
[89 170]
[90 169]
[91 168]
[92 167]
[93 166]
[94 165]
[95 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
