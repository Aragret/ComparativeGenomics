%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[215.26028442 540.32287598]
[222.33171082 527.04473877]
[231.72277832 515.29217529]
[243.11363220 505.46548462]
[256.11630249 497.89941406]
[251.07937622 483.77038574]
[246.04246521 469.64135742]
[241.00553894 455.51232910]
[235.34275818 441.62231445]
[222.98933411 433.30111694]
[224.24127197 417.52951050]
[217.96391296 403.90621948]
[211.68653870 390.28289795]
[205.40917969 376.65957642]
[201.31854248 374.19470215]
[198.73287964 369.13391113]
[199.15449524 362.53591919]
[193.28552246 348.73171997]
[187.41656494 334.92755127]
[181.90658569 330.00192261]
[181.56468201 320.87390137]
[175.90190125 306.98385620]
[170.23910522 293.09384155]
[164.57632446 279.20382690]
[150.15393066 269.20574951]
[152.81105042 250.98428345]
[146.94209290 237.18011475]
[135.84480286 232.36587524]
[130.84230042 220.91342163]
[135.11616516 208.74391174]
[129.45338440 194.85388184]
[123.79058838 180.96386719]
[112.76621246 175.98493958]
[107.93477631 164.45927429]
[112.38934326 152.35475159]
[106.93399048 138.38194275]
[101.47863007 124.40914917]
[96.02327728 110.43635559]
[90.46405029 96.50455475]
[84.80126190 82.61452484]
[79.13847351 68.72450256]
[67.57432556 63.01194763]
[63.14373398 51.32633209]
[67.71188354 40.12550354]
[62.25652695 26.15270424]
[50.03008652 16.11155319]
[52.60874939 1.44186330]
[47.15339279 -12.53093433]
[41.69803238 -26.50373268]
[29.47159386 -36.54488373]
[32.05025482 -51.21457291]
[26.59489822 -65.18737030]
[21.13954163 -79.16017151]
[6.94203711 -85.56864929]
[1.60857725 -99.81676483]
[7.80557966 -113.31242371]
[-4.42086029 -123.35357666]
[-1.84219921 -138.02326965]
[-7.29755640 -151.99606323]
[-12.75291348 -165.96885681]
[-18.41569901 -179.85888672]
[-24.28466034 -193.66307068]
[-30.15362167 -207.46723938]
[-44.53563690 -213.45016479]
[-50.29095078 -227.53317261]
[-44.49851227 -241.20735168]
[-50.36747360 -255.01153564]
[-56.23643494 -268.81570435]
[-70.69758606 -264.75326538]
[-85.55951691 -262.57348633]
[-100.57817078 -262.31216431]
[-115.50693512 -263.97357178]
[-130.10066223 -267.53045654]
[-144.11972046 -272.92437744]
[-157.33389282 -280.06680298]
[-169.52618408 -288.84039307]
[-180.49639893 -299.10113525]
[-190.06440735 -310.68051147]
[-198.07305908 -323.38836670]
[-204.39086914 -337.01605225]
[-208.91410828 -351.33975220]
[-211.56846619 -366.12429810]
[-212.31036377 -381.12689209]
[-211.12763977 -396.10119629]
[-208.03970337 -410.80130005]
[-203.09725952 -424.98580933]
[-196.38145447 -438.42181396]
[-188.00259399 -450.88870239]
[-178.09825134 -462.18170166]
[-166.83106995 -472.11544800]
[-154.38606262 -480.52673340]
[-140.96759033 -487.27752686]
[-126.79598999 -492.25689697]
[-112.10398102 -495.38311768]
[-97.13282013 -496.60482788]
[-82.12834167 -495.90200806]
[-67.33693695 -493.28616333]
[-53.00148773 -488.80026245]
[-39.35740280 -482.51797485]
[-26.62872505 -474.54244995]
[-15.02447605 -465.00463867]
[-4.73520327 -454.06118774]
[4.07013178 -441.89178467]
[11.24693871 -428.69625854]
[16.67736626 -414.69131470]
[20.27224350 -400.10687256]
[21.97253799 -385.18249512]
[21.75032997 -370.16320801]
[19.60927010 -355.29565430]
[15.58451271 -340.82397461]
[9.74215126 -326.98580933]
[2.17812085 -314.00836182]
[-6.98336983 -302.10476685]
[-17.59188080 -291.47048950]
[-29.47320938 -282.28015137]
[-42.43225479 -274.68466187]
[-36.56329727 -260.88049316]
[-30.69433403 -247.07630920]
[-16.82802010 -241.76022339]
[-10.67941380 -227.84442139]
[-16.34944534 -213.33619690]
[-10.48048401 -199.53202820]
[-4.61152315 -185.72784424]
[-0.59607667 -183.14227295]
[1.83775353 -178.00675964]
[1.21988451 -171.42422485]
[6.67524147 -157.45141602]
[12.13059902 -143.47862244]
[23.96683502 -134.43690491]
[21.77837753 -118.76778412]
[35.48026276 -113.04119110]
[41.21181870 -98.94850159]
[35.11233902 -84.61552429]
[40.56769562 -70.64273071]
[46.02305222 -56.66992950]
[57.85929108 -47.62820816]
[55.67083359 -31.95908928]
[61.12619019 -17.98629189]
[66.58154297 -4.01349354]
[78.41778564 5.02823019]
[76.22932434 20.69734764]
[81.68468475 34.67014694]
[95.95661926 44.88184357]
[93.02850342 63.06171417]
[98.69129181 76.95174408]
[104.35408020 90.84176636]
[110.07139587 96.52373505]
[109.99607086 104.98099518]
[115.45143127 118.95379639]
[120.90678406 132.92658997]
[126.36214447 146.89938354]
[141.00170898 158.06919861]
[137.68061829 175.30107117]
[143.34339905 189.19110107]
[149.00619507 203.08113098]
[163.81042480 214.03173828]
[160.74626160 231.31114197]
[166.61523438 245.11532593]
[178.26315308 250.65507507]
[182.86723328 262.27343750]
[178.46635437 273.54101562]
[184.12913513 287.43106079]
[189.79193115 301.32107544]
[195.45471191 315.21112061]
[201.22074890 329.05859375]
[207.08970642 342.86276245]
[212.95866394 356.66696167]
[219.03250122 370.38220215]
[225.30986023 384.00552368]
[231.58721924 397.62884521]
[237.86457825 411.25216675]
[250.66700745 420.54779053]
[248.96606445 435.34494019]
[255.16297913 421.68484497]
[269.15490723 416.27871704]
[282.92663574 422.22344971]
[288.58908081 436.11361694]
[282.89855957 449.99230957]
[269.11483765 455.90917969]
[255.13456726 450.47543335]
[260.17147827 464.60446167]
[265.20840454 478.73348999]
[270.24533081 492.86251831]
[285.10192871 490.49691772]
[300.14022827 490.90173340]
[314.84805298 494.06317139]
[328.72442627 499.87356567]
[341.29675293 508.13500977]
[352.13681030 518.56610107]
[360.87539673 530.81158447]
[367.21487427 544.45434570]
[370.93930054 559.02978516]
[371.92187500 574.04144287]
[370.12908936 588.97796631]
[365.62200928 603.33074951]
[358.55416870 616.61077881]
[349.16625977 628.36590576]
[337.77807617 638.19561768]
[324.77746582 645.76519775]
[310.60720825 650.81677246]
[295.74996948 653.17840576]
[280.71176147 652.76953125]
[266.00479126 649.60412598]
[252.12998962 643.78997803]
[239.55989075 635.52514648]
[228.72264099 625.09112549]
[219.98736572 612.84326172]
[213.65156555 599.19879150]
[209.93104553 584.62237549]
[208.95252991 569.61047363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 173]
[11 171]
[12 170]
[13 169]
[14 168]
[17 167]
[18 166]
[19 165]
[21 164]
[22 163]
[23 162]
[24 161]
[26 158]
[27 157]
[30 155]
[31 154]
[32 153]
[35 151]
[36 150]
[37 149]
[38 148]
[39 146]
[40 145]
[41 144]
[44 142]
[45 141]
[47 139]
[48 138]
[49 137]
[51 135]
[52 134]
[53 133]
[56 130]
[58 128]
[59 127]
[60 126]
[61 123]
[62 122]
[63 121]
[66 118]
[67 117]
[68 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
