%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[188.44726562 301.16918945]
[198.69799805 290.17919922]
[210.47229004 280.83984375]
[197.42575073 273.65393066]
[197.26560974 257.83355713]
[189.79788208 244.82460022]
[182.33013916 231.81564331]
[174.10131836 219.27424622]
[165.14062500 207.24487305]
[156.17993164 195.21548462]
[147.21923828 183.18611145]
[138.25854492 171.15673828]
[135.50750732 170.61824036]
[132.80403137 168.95759583]
[130.57656860 166.18742371]
[129.24113464 162.47512817]
[129.14794922 158.13400269]
[120.91914368 145.59260559]
[107.46802521 139.19599915]
[106.36653137 123.41318512]
[98.13772583 110.87178802]
[92.57877350 124.80369568]
[78.26535797 129.28991699]
[65.74879456 121.02337646]
[64.25582886 106.09785461]
[74.88702393 95.51589966]
[89.80403900 97.07727051]
[82.53080750 83.95857239]
[75.25757599 70.83988190]
[67.98435211 57.72118378]
[60.71112061 44.60248947]
[53.43788910 31.48379707]
[53.45529556 46.48378754]
[48.40646362 60.60856247]
[38.88452148 72.19876099]
[26.00810242 79.89276886]
[11.28991413 82.78671265]
[-3.54096699 80.54061127]
[-16.74222183 73.41833496]
[-26.76298332 62.25659561]
[-32.42601776 48.36667252]
[-33.06604004 33.38033295]
[-28.60786247 19.05815887]
[-19.57522583 7.08270693]
[-7.02927399 -1.13916051]
[7.55610561 -4.64154625]
[22.46743774 -3.01299310]
[35.95295334 3.55517745]
[46.42927551 14.29263687]
[42.45717621 -0.17188688]
[38.48508072 -14.63641071]
[34.51298523 -29.10093498]
[30.54088974 -43.56546021]
[26.56879234 -58.02998352]
[22.59669685 -72.49450684]
[18.62460136 -86.95903015]
[13.58768463 -101.08805847]
[7.51385069 -114.80332947]
[1.44001663 -128.51860046]
[-4.63381720 -142.23385620]
[-10.70765114 -155.94912720]
[-16.78148460 -169.66439819]
[-22.85531998 -183.37965393]
[-28.92915344 -197.09492493]
[-29.69817352 -182.11465454]
[-34.42790222 -167.87985229]
[-42.77689743 -155.41813660]
[-54.14243698 -145.62913513]
[-67.70403290 -139.21952820]
[-82.48266602 -136.65202332]
[-97.41144562 -138.11198425]
[-111.41265869 -143.49398804]
[-123.47554016 -152.40953064]
[-132.72926331 -164.21498108]
[-138.50579834 -178.05809021]
[-140.38812256 -192.93951416]
[-138.24034119 -207.78495789]
[-132.21752930 -221.52270508]
[-122.75446320 -233.16102600]
[-110.53429413 -241.85972595]
[-96.43920898 -246.99084473]
[-81.48673248 -248.18397522]
[-66.75630951 -245.35296631]
[-53.31133270 -238.70220947]
[-42.12241745 -228.71180725]
[-33.99679565 -216.10192871]
[-35.55731964 -231.02053833]
[-37.11784363 -245.93914795]
[-46.24885559 -258.85946655]
[-39.87762070 -272.32263184]
[-54.79759598 -274.52383423]
[-68.70110321 -280.36706543]
[-80.71414948 -289.48501587]
[-90.08158875 -301.30459595]
[-96.21458435 -315.08273315]
[-98.72760010 -329.95333862]
[-97.46266937 -344.98168945]
[-92.49930573 -359.22302246]
[-84.14951324 -371.78216553]
[-72.93816376 -381.86959839]
[-59.57001877 -388.85125732]
[-44.88539886 -392.28823853]
[-29.80740356 -391.96447754]
[-15.28384018 -387.90039062]
[-2.22767639 -380.35137939]
[8.54036713 -369.79202271]
[16.34340286 -356.88607788]
[20.69092560 -342.44482422]
[21.30964470 -327.37603760]
[18.16066933 -312.62698364]
[11.44194412 -299.12478638]
[1.57581580 -287.71820068]
[-10.81752300 -279.12423706]
[-24.95901680 -273.88314819]
[-15.93962193 -262.02990723]
[-22.19923782 -247.49966431]
[-20.63871574 -232.58105469]
[-19.07819176 -217.66246033]
[-15.21388626 -203.16876221]
[-9.14005280 -189.45349121]
[-3.06621861 -175.73822021]
[3.00761533 -162.02296448]
[9.08144951 -148.30769348]
[15.15528297 -134.59242249]
[21.22911644 -120.87715912]
[27.30295181 -107.16189575]
[30.49014282 -121.81937408]
[40.50571060 -132.98576355]
[54.73161697 -137.74220276]
[69.44923401 -134.84536743]
[80.81141663 -125.05247498]
[85.84812164 -110.92336273]
[83.24275970 -96.15135956]
[73.67636871 -84.59782410]
[59.64958191 -79.28282928]
[44.82896423 -81.59568787]
[33.08912277 -90.93112946]
[37.06122208 -76.46660614]
[41.03331757 -62.00207901]
[45.00541306 -47.53755569]
[48.97750854 -33.07303238]
[52.94960403 -18.60850716]
[56.92170334 -4.14398289]
[60.89379883 10.32054043]
[66.55658722 24.21056747]
[73.82981110 37.32926178]
[81.10304260 50.44795609]
[88.37627411 63.56665039]
[95.64950562 76.68534088]
[102.92272949 89.80403900]
[110.67912292 102.64297485]
[118.90792847 115.18437958]
[132.94763184 122.47802734]
[133.46054077 137.36380005]
[141.68936157 149.90519714]
[150.28791809 162.19602966]
[159.24861145 174.22541809]
[168.20930481 186.25479126]
[177.17001343 198.28416443]
[186.13070679 210.31355286]
[187.30514526 195.35958862]
[196.95700073 183.87736511]
[211.48637390 180.14944458]
[225.47415161 185.56623840]
[233.70326233 198.10745239]
[233.10443115 213.09548950]
[223.90101624 224.94020081]
[209.52566528 229.22380066]
[195.33908081 224.34790039]
[202.80682373 237.35685730]
[210.27456665 250.36581421]
[223.85525513 258.48217773]
[223.48124695 273.37210083]
[237.48377991 267.91436768]
[252.14337158 264.60467529]
[267.13250732 263.51696777]
[282.11636353 264.67550659]
[296.76013184 268.05444336]
[310.73672485 273.57824707]
[323.73388672 281.12359619]
[335.46121216 290.52182007]
[345.65676880 301.56304932]
[354.09274292 314.00057983]
[360.58068848 327.55654907]
[364.97564697 341.92810059]
[367.17947388 356.79418945]
[367.14288330 371.82272339]
[364.86672974 386.67791748]
[360.40185547 401.02789307]
[353.84799194 414.55212402]
[345.35156250 426.94842529]
[335.10238647 437.93988037]
[323.32943726 447.28094482]
[310.29571533 454.76290894]
[296.29238892 460.21862793]
[281.63235474 463.52621460]
[266.64303589 464.61181641]
[251.65936279 463.45114136]
[237.01606750 460.07012939]
[223.04025269 454.54431152]
[210.04418945 446.99713135]
[198.31819153 437.59719849]
[188.12420654 426.55453491]
[179.69000244 414.11581421]
[173.20399475 400.55892944]
[168.81106567 386.18673706]
[166.60935974 371.32031250]
[166.64808655 356.29180908]
[168.92636108 341.43695068]
[173.39328003 327.08758545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[5 171]
[6 170]
[7 169]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[17 155]
[18 154]
[20 152]
[21 151]
[27 150]
[28 149]
[29 148]
[30 147]
[31 146]
[32 145]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[86 118]
[87 117]
[88 116]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
