%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[64.61473083 717.39849854]
[63.97702026 702.05285645]
[71.11178589 688.45172119]
[84.09980774 680.25378418]
[83.43002319 665.26873779]
[82.76023865 650.28369141]
[82.09045410 635.29864502]
[81.42066956 620.31359863]
[80.75087738 605.32855225]
[80.08109283 590.34350586]
[65.85250854 578.82556152]
[64.53894043 560.24633789]
[77.44033051 546.37304688]
[76.32468414 531.41461182]
[75.20903015 516.45617676]
[74.09338379 501.49771118]
[72.97773743 486.53924561]
[69.34545135 480.10275269]
[71.95852661 471.35006714]
[71.06570435 456.37667847]
[70.17288971 441.40325928]
[69.28007507 426.42984009]
[58.00402069 416.76620483]
[56.88527679 401.59375000]
[67.09786224 389.83190918]
[66.20503998 374.85852051]
[65.31222534 359.88510132]
[64.41941071 344.91171265]
[63.52659607 329.93829346]
[56.68982697 343.28964233]
[45.31407928 353.06677246]
[31.08687019 357.81930542]
[16.11872673 356.84222412]
[2.63008261 350.28048706]
[-7.37810230 339.10748291]
[-12.42117310 324.98065186]
[-11.75102043 309.99560547]
[-5.46705675 296.37533569]
[5.49852848 286.14031982]
[19.51905632 280.80880737]
[34.51466370 281.17175293]
[48.26084518 287.17532349]
[58.71842957 297.92886353]
[64.33573914 311.83532715]
[66.56085968 297.00128174]
[68.78598022 282.16723633]
[61.49233627 266.20571899]
[73.08261871 251.89674377]
[75.08663177 237.03121948]
[77.09064484 222.16569519]
[71.12308502 208.51879883]
[80.63473511 195.87605286]
[82.63875580 181.01052856]
[84.53204346 166.13049316]
[86.31451416 151.23677063]
[88.09697723 136.34306335]
[89.87944031 121.44934082]
[91.66191101 106.55562592]
[92.88888550 91.60589600]
[93.55867004 76.62085724]
[94.22845459 61.63581467]
[94.89823914 46.65077591]
[95.56802368 31.66573715]
[84.85102844 25.23037529]
[77.92725372 14.90904903]
[76.05966949 2.69464564]
[79.54203033 -9.08559990]
[87.65463257 -18.21350288]
[98.81204224 -22.99759102]
[92.12258148 -37.33501434]
[100.78505707 -49.45156097]
[101.90071106 -64.41001129]
[95.21125031 -78.74743652]
[103.87373352 -90.86398315]
[104.98937988 -105.82243347]
[98.29991913 -120.15985870]
[106.96240234 -132.27641296]
[107.40900421 -147.26976013]
[107.18567657 -162.26809692]
[106.96234894 -177.26643372]
[106.73902130 -192.26477051]
[96.93121338 -207.84963989]
[106.06989288 -222.83134460]
[105.62329102 -237.82469177]
[97.47853851 -251.38838196]
[104.83347321 -264.34039307]
[104.38686371 -279.33374023]
[95.55135345 -288.73034668]
[95.48803711 -301.22753906]
[103.68546295 -310.12298584]
[103.46213531 -325.12130737]
[88.70610046 -328.13351440]
[74.94276428 -334.24780273]
[62.81586838 -343.17825317]
[52.89261627 -354.50711060]
[45.63712692 -367.70452881]
[41.38875961 -382.15325928]
[40.34621429 -397.17745972]
[42.55825424 -412.07446289]
[47.92141724 -426.14752197]
[56.18486023 -438.73837280]
[66.96208954 -449.25814819]
[79.74902344 -457.21478271]
[93.94760895 -462.23617554]
[108.89373779 -464.08743286]
[123.88836670 -462.68200684]
[138.23016357 -458.08557129]
[151.24832153 -450.51318359]
[162.33398438 -440.31893921]
[170.96864319 -427.97970581]
[176.74844360 -414.07260132]
[179.40303040 -399.24804688]
[178.80827332 -384.19943237]
[174.99198914 -369.63064575]
[168.13265991 -356.22305298]
[158.55110168 -344.60375977]
[146.69548035 -335.31622314]
[133.12028503 -328.79486084]
[118.46047211 -325.34463501]
[118.68379974 -310.34631348]
[128.48234558 -295.78759766]
[119.38021088 -279.78033447]
[119.82682037 -264.78698730]
[127.93962860 -252.29573059]
[120.61663818 -238.27130127]
[121.06324768 -223.27795410]
[129.64970398 -214.75743103]
[130.14448547 -202.26986694]
[121.73735809 -192.48809814]
[121.96068573 -177.48976135]
[122.18401337 -162.49142456]
[122.40734100 -147.49308777]
[133.60476685 -157.47393799]
[148.58735657 -156.75140381]
[158.77239990 -145.73936462]
[158.32543945 -130.74601746]
[147.50250244 -120.36024475]
[132.50347900 -120.53147888]
[121.92085266 -131.16075134]
[128.69010925 -117.89326477]
[119.94783020 -104.70678711]
[118.83218384 -89.74833679]
[125.60144043 -76.48084259]
[116.85916138 -63.29436493]
[115.74351501 -48.33591080]
[122.51277161 -35.06841660]
[113.77049255 -21.88194275]
[127.76213837 -11.10671139]
[132.52662659 6.06158781]
[125.97434998 22.79918861]
[110.55306244 32.33552170]
[109.88327789 47.32056046]
[109.21349335 62.30559921]
[108.54370880 77.29064178]
[107.87392426 92.27568054]
[120.53628540 84.23425293]
[134.76719666 88.97568512]
[140.07615662 103.00476074]
[132.54959106 115.97976685]
[117.73581696 118.33602142]
[106.55562592 108.33808899]
[104.77316284 123.23181152]
[102.99069214 138.12553406]
[101.20822906 153.01924133]
[99.42575836 167.91296387]
[101.51322937 176.80566406]
[97.50428009 183.01454163]
[95.50026703 197.88006592]
[101.32448578 212.59024048]
[91.95617676 224.16970825]
[89.95216370 239.03523254]
[87.94815063 253.90075684]
[95.13332367 264.61224365]
[93.15813446 276.95254517]
[83.62001801 284.39236450]
[81.39490509 299.22637939]
[79.16978455 314.06042480]
[78.50000000 329.04547119]
[79.39281464 344.01889038]
[80.28563690 358.99227905]
[81.17845154 373.96569824]
[82.07126617 388.93908691]
[93.60916138 399.40402222]
[94.30130005 414.60189819]
[84.25347900 425.53704834]
[85.14630127 440.51043701]
[86.03911591 455.48385620]
[86.93193054 470.45724487]
[87.93618774 485.42358398]
[89.05184174 500.38204956]
[90.16748810 515.34051514]
[91.28313446 530.29895020]
[92.39878082 545.25738525]
[102.74491882 551.11352539]
[108.91636658 561.13421631]
[109.47847748 572.76940918]
[104.40714264 583.12304688]
[95.06613159 589.67376709]
[95.73591614 604.65875244]
[96.40570831 619.64379883]
[97.07549286 634.62884521]
[97.74527740 649.61389160]
[98.41506195 664.59893799]
[99.08484650 679.58398438]
[112.75246429 686.59051514]
[121.07221222 699.50085449]
[121.80611420 714.84222412]
[114.75675201 728.48779297]
[101.82038116 736.76702881]
[86.47680664 737.45288086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[19 188]
[20 187]
[21 186]
[22 185]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[44 177]
[45 176]
[46 175]
[48 172]
[49 171]
[50 170]
[52 168]
[53 167]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[69 147]
[71 145]
[72 144]
[74 142]
[75 141]
[77 139]
[78 132]
[79 131]
[80 130]
[81 129]
[83 126]
[84 125]
[86 123]
[87 122]
[90 120]
[91 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
