%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[60.99340439 377.12374878]
[53.75290680 390.26699829]
[45.65070724 402.89724731]
[36.72298813 414.95816040]
[27.00962448 426.39578247]
[16.55399704 437.15911865]
[5.40280628 447.20004272]
[-6.39414549 456.47372437]
[-18.78417015 464.93875122]
[-31.71192741 472.55731201]
[-45.11968231 479.29534912]
[-58.94754791 485.12283325]
[-73.13376617 490.01367188]
[-87.61498260 493.94607544]
[-102.32651520 496.90243530]
[-117.20265961 498.86956787]
[-132.17697144 499.83868408]
[-147.18257141 499.80548096]
[-162.15245056 498.77005005]
[-177.01974487 496.73706055]
[-191.71803284 493.71560669]
[-206.18170166 489.71914673]
[-220.34613037 484.76553345]
[-234.14805603 478.87689209]
[-247.52584839 472.07952881]
[-260.41973877 464.40380859]
[-272.77218628 455.88403320]
[-284.52795410 446.55819702]
[-295.63458252 436.46801758]
[-306.04244995 425.65850830]
[-315.70507812 414.17794800]
[-324.57931519 402.07763672]
[-332.62551880 389.41162109]
[-339.80773926 376.23648071]
[-346.09393311 362.61102295]
[-351.45599365 348.59609985]
[-355.86996460 334.25436401]
[-359.31619263 319.64981079]
[-361.77923584 304.84768677]
[-363.24807739 289.91412354]
[-363.71618652 274.91577148]
[-363.18148804 259.91964722]
[-361.64633179 244.99275208]
[-359.11761475 230.20172119]
[-355.60659790 215.61260986]
[-351.12896729 201.29058838]
[-345.70471191 187.29963684]
[-339.35809326 173.70222473]
[-332.11743164 160.55908203]
[-324.01507568 147.92892456]
[-315.08721924 135.86814880]
[-305.37368774 124.43061829]
[-294.91793823 113.66741943]
[-283.76663208 103.62664032]
[-271.96954346 94.35310364]
[-259.57940674 85.88823700]
[-246.65156555 78.26985168]
[-233.24372864 71.53195953]
[-219.41578674 65.70466614]
[-205.22950745 60.81399918]
[-190.74824524 56.88179016]
[-176.03666687 53.92561340]
[-161.16050720 51.95866394]
[-146.18617249 50.98972702]
[-131.18057251 51.02313614]
[-116.21070862 52.05873489]
[-101.34345245 54.09190369]
[-86.64518738 57.11355972]
[-72.18157959 61.11021042]
[-58.01721191 66.06399536]
[-44.21535492 71.95280457]
[-30.83765030 78.75032806]
[-17.94384766 86.42620087]
[-5.59153080 94.94615173]
[6.16412830 104.27212524]
[17.27062798 114.36246490]
[27.67835999 125.17210388]
[37.34084320 136.65277100]
[49.43659592 127.78187561]
[61.53234863 118.91098022]
[73.62809753 110.04008484]
[85.72385406 101.16918945]
[91.52891541 88.44940948]
[105.40525055 86.73506165]
[117.50100708 77.86416626]
[129.59675598 68.99327087]
[141.69250488 60.12237167]
[153.78825378 51.25147629]
[145.69950867 38.61325455]
[138.42861938 25.48745537]
[132.00485229 11.92693329]
[126.45408630 -2.01370978]
[121.79866791 -16.27833748]
[118.05734253 -30.80951309]
[115.24518585 -45.54872131]
[113.37350464 -60.43661118]
[112.44984436 -75.41323853]
[112.47792053 -90.41829681]
[113.45762634 -105.39136505]
[115.38501740 -120.27214813]
[118.25232697 -135.00073242]
[122.04800415 -149.51779175]
[126.75678253 -163.76490784]
[132.35968018 -177.68467712]
[138.83415222 -191.22105408]
[146.15412903 -204.31954956]
[154.29011536 -216.92741394]
[163.20936584 -228.99386597]
[172.87597656 -240.47033691]
[183.25100708 -251.31060791]
[194.29267883 -261.47100830]
[205.95652771 -270.91067505]
[218.19560242 -279.59155273]
[230.96061707 -287.47869873]
[244.20016479 -294.54034424]
[257.86093140 -300.74807739]
[271.88790894 -306.07687378]
[286.22463989 -310.50531006]
[300.81335449 -314.01553345]
[315.59533691 -316.59341431]
[330.51107788 -318.22857666]
[345.50045776 -318.91439819]
[360.50317383 -318.64816284]
[375.45883179 -317.43093872]
[390.30712891 -315.26763916]
[404.98834229 -312.16693115]
[419.44335938 -308.14129639]
[433.61392212 -303.20700073]
[447.44302368 -297.38388062]
[460.87493896 -290.69537354]
[473.85562134 -283.16845703]
[486.33276367 -274.83337402]
[498.25613403 -265.72372437]
[509.57772827 -255.87620544]
[520.25195312 -245.33042908]
[530.23583984 -234.12889099]
[539.48919678 -222.31668091]
[547.97473145 -209.94137573]
[555.65826416 -197.05279541]
[562.50891113 -183.70283508]
[568.49902344 -169.94525146]
[573.60455322 -155.83546448]
[577.80487061 -141.43026733]
[581.08312988 -126.78766632]
[583.42602539 -111.96662903]
[584.82427979 -97.02683258]
[585.27209473 -82.02843475]
[584.76782227 -67.03182983]
[583.31335449 -52.09740067]
[580.91467285 -37.28528976]
[577.58129883 -22.65513229]
[573.32678223 -8.26584721]
[568.16821289 5.82462883]
[562.12634277 19.55955696]
[555.22552490 32.88363266]
[547.49346924 45.74319839]
[538.96142578 58.08648300]
[529.66369629 69.86377716]
[519.63769531 81.02765656]
[508.92385864 91.53316498]
[497.56527710 101.33801270]
[485.60769653 110.40270996]
[473.09927368 118.69075775]
[460.09036255 126.16878510]
[446.63336182 132.80667114]
[432.78244019 138.57769775]
[418.59338379 143.45861816]
[404.12335205 147.42979431]
[389.43057251 150.47521973]
[374.57418823 152.58264160]
[359.61410522 153.74356079]
[344.61047363 153.95330811]
[329.62377930 153.21104431]
[314.71429443 151.51976013]
[299.94213867 148.88626099]
[285.36672974 145.32115173]
[271.04678345 140.83877563]
[257.03994751 135.45721436]
[243.40263367 129.19810486]
[230.18977356 122.08666229]
[217.45454407 114.15151978]
[205.24822998 105.42463684]
[193.61997986 95.94115448]
[182.61663818 85.73925018]
[172.28248596 74.86000061]
[162.65914917 63.34722900]
[150.56340027 72.21812439]
[138.46765137 81.08901978]
[126.37190247 89.95991516]
[114.27614594 98.83081055]
[108.47108459 111.55059052]
[94.59474945 113.26493835]
[82.49899292 122.13583374]
[70.40324402 131.00672913]
[58.30749130 139.87762451]
[46.21173859 148.74851990]
[54.25809860 161.41442871]
[61.44049835 174.58950806]
[67.72685242 188.21488953]
[73.08909607 202.22972107]
[77.50326538 216.57142639]
[80.94966125 231.17593384]
[83.41287994 245.97801208]
[84.88191986 260.91156006]
[85.35022736 275.90991211]
[84.81571198 290.90603638]
[83.28074646 305.83294678]
[80.75220490 320.62402344]
[77.24136353 335.21316528]
[72.76391602 349.53524780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 196]
[79 195]
[80 194]
[81 193]
[82 192]
[84 190]
[85 189]
[86 188]
[87 187]
[88 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
