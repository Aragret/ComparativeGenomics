%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[113.13712311 551.66070557]
[100.97600555 542.87298584]
[89.32205963 533.42297363]
[78.21131134 523.33990479]
[67.67809296 512.65496826]
[57.75497055 501.40112305]
[48.47261429 489.61322021]
[39.85971451 477.32766724]
[31.94289780 464.58242798]
[24.74662971 451.41690063]
[18.29315376 437.87182617]
[12.60241985 423.98901367]
[7.69201565 409.81140137]
[3.57712078 395.38278198]
[0.27045321 380.74780273]
[-2.21776605 365.95166016]
[-3.87984633 351.04010010]
[-4.71064949 336.05923462]
[-4.70760870 321.05532837]
[-3.87073207 306.07479858]
[-2.20260715 291.16390991]
[0.29161006 276.36877441]
[3.60421014 261.73513794]
[7.72495413 247.30821228]
[12.64110470 233.13258362]
[18.33746719 219.25207520]
[24.79643250 205.70959473]
[31.99803734 192.54701233]
[39.92002106 179.80497742]
[48.53789902 167.52291870]
[57.82503510 155.73876953]
[67.75271606 144.48896790]
[78.29026031 133.80828857]
[89.40510559 123.72972870]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[77.99506378 82.33469391]
[69.21446228 70.17323303]
[60.43385696 58.01177979]
[51.65325165 45.85032272]
[42.87265015 33.68886948]
[34.09204865 21.52741241]
[25.31144333 9.36595631]
[8.34119320 2.21808147]
[7.24125719 -15.29640007]
[-1.71943879 -27.32577705]
[-10.68013477 -39.35515594]
[-19.64083099 -51.38453293]
[-28.60152626 -63.41390991]
[-41.40462112 -55.57835007]
[-54.86720276 -48.93951416]
[-68.87771606 -43.55241394]
[-83.32005310 -39.46169281]
[-98.07455444 -36.70124435]
[-113.01894379 -35.29394531]
[-128.02938843 -35.25145721]
[-142.98150635 -36.57413101]
[-157.75138855 -39.25100708]
[-172.21665955 -43.25990295]
[-186.25744629 -48.56760025]
[-199.75738525 -55.13011551]
[-212.60464478 -62.89307022]
[-224.69273376 -71.79213715]
[-235.92149353 -81.75357056]
[-246.19787598 -92.69482422]
[-255.43673706 -104.52523804]
[-263.56149292 -117.14678192]
[-270.50485229 -130.45486450]
[-276.20925903 -144.33920288]
[-280.62747192 -158.68475342]
[-283.72280884 -173.37265015]
[-285.46969604 -188.28115845]
[-285.85363770 -203.28674316]
[-284.87142944 -218.26507568]
[-282.53121948 -233.09204102]
[-278.85241699 -247.64476013]
[-273.86547852 -261.80264282]
[-267.61175537 -275.44839478]
[-260.14303589 -288.46890259]
[-251.52125549 -300.75628662]
[-241.81782532 -312.20874023]
[-231.11315918 -322.73135376]
[-219.49597168 -332.23693848]
[-207.06251526 -340.64669800]
[-193.91581726 -347.89099121]
[-180.16482544 -353.90975952]
[-165.92349243 -358.65313721]
[-151.30981445 -362.08181763]
[-136.44490051 -364.16735840]
[-121.45192719 -364.89254761]
[-106.45513153 -364.25131226]
[-91.57877350 -362.24899292]
[-76.94613647 -358.90216064]
[-62.67847443 -354.23858643]
[-48.89401245 -348.29687500]
[-35.70697403 -341.12628174]
[-23.22663689 -332.78622437]
[-11.55641842 -323.34582520]
[-0.79302305 -312.88330078]
[8.97435856 -301.48535156]
[17.66478920 -289.24639893]
[25.20625687 -276.26788330]
[31.53626633 -262.65737915]
[36.60236740 -248.52763367]
[40.36257553 -233.99572754]
[42.78573990 -219.18209839]
[43.85177231 -204.20950317]
[43.55184174 -189.20199585]
[41.88843536 -174.28393555]
[38.87533569 -159.57896423]
[34.53751373 -145.20890808]
[28.91090965 -131.29284668]
[22.04215050 -117.94611359]
[13.98815536 -105.27928925]
[4.81566191 -93.39734650]
[-5.39932203 -82.39873505]
[-16.57214928 -72.37460327]
[-7.61145306 -60.34523010]
[1.34924281 -48.31585312]
[10.30993843 -36.28647232]
[19.27063560 -24.25709534]
[31.19056702 -22.19754410]
[38.75432205 -12.24900532]
[37.47290039 0.58535331]
[46.25350189 12.74680901]
[55.03410721 24.90826416]
[63.81470871 37.06972122]
[72.59531403 49.23117828]
[81.37591553 61.39263153]
[90.15651703 73.55408478]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[125.85820007 97.41049957]
[138.92233276 90.03177643]
[152.37632751 83.39049530]
[166.17863464 77.50718689]
[180.28657532 72.40003204]
[194.65653992 68.08480835]
[209.24411011 64.57487488]
[224.00419617 61.88106155]
[238.89118958 60.01170349]
[253.85905457 58.97257614]
[268.86154175 58.76689529]
[283.85229492 59.39529037]
[298.78491211 60.85582733]
[313.61331177 63.14398193]
[328.29162598 66.25268555]
[342.77450562 70.17234039]
[357.01715088 74.89080811]
[370.97555542 80.39352417]
[384.60656738 86.66347504]
[397.86807251 93.68127441]
[410.71905518 101.42523193]
[423.11981201 109.87142181]
[435.03201294 118.99372101]
[446.41882324 128.76394653]
[457.24508667 139.15188599]
[467.47729492 150.12544250]
[477.08383179 161.65069580]
[486.03500366 173.69201660]
[494.30313110 186.21218872]
[501.86270142 199.17251587]
[508.69030762 212.53292847]
[514.76483154 226.25215149]
[520.06756592 240.28775024]
[524.58209229 254.59635925]
[528.29437256 269.13372803]
[531.19305420 283.85498047]
[533.26910400 298.71453857]
[534.51617432 313.66653442]
[534.93029785 328.66470337]
[534.51031494 343.66271973]
[533.25738525 358.61422729]
[531.17553711 373.47299194]
[528.27111816 388.19308472]
[524.55310059 402.72900391]
[520.03302002 417.03585815]
[514.72479248 431.06939697]
[508.64489746 444.78622437]
[501.81207275 458.14398193]
[494.24743652 471.10134888]
[485.97439575 483.61828613]
[477.01852417 495.65609741]
[467.40750122 507.17758179]
[457.17098999 518.14715576]
[446.34069824 528.53088379]
[434.95004272 538.29663086]
[423.03430176 547.41430664]
[410.63021851 555.85559082]
[397.77621460 563.59454346]
[384.51196289 570.60717773]
[370.87850952 576.87176514]
[356.91793823 582.36901855]
[342.67346191 587.08197021]
[328.18905640 590.99591064]
[313.50952148 594.09887695]
[298.68023682 596.38128662]
[283.74703979 597.83593750]
[268.75604248 598.45849609]
[253.75364685 598.24694824]
[238.78617859 597.20196533]
[223.89993286 595.32678223]
[209.14088440 592.62719727]
[194.55468750 589.11157227]
[180.18641663 584.79071045]
[166.08047485 579.67803955]
[152.28047180 573.78936768]
[138.82907104 567.14282227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 134]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[44 125]
[46 122]
[47 121]
[48 120]
[49 119]
[50 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
