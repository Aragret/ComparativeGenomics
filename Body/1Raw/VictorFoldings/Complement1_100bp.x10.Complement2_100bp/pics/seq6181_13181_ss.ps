%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[130.67149353 903.55102539]
[115.87112427 901.09497070]
[101.20214844 897.94787598]
[86.69680023 894.11669922]
[72.38697815 889.60980225]
[58.30412674 884.43713379]
[44.47921371 878.61004639]
[30.94262123 872.14141846]
[17.72410965 865.04534912]
[4.85273409 857.33752441]
[-7.64320946 849.03485107]
[-19.73625183 840.15557861]
[-31.39981270 830.71923828]
[-42.60824966 820.74658203]
[-53.33692551 810.25952148]
[-63.56225586 799.28106689]
[-73.26176453 787.83544922]
[-82.41413116 775.94775391]
[-90.99922943 763.64410400]
[-98.99819183 750.95159912]
[-106.39344025 737.89813232]
[-113.16870880 724.51239014]
[-119.30911255 710.82373047]
[-124.80114746 696.86236572]
[-129.63273621 682.65887451]
[-133.79327393 668.24456787]
[-137.27360535 653.65106201]
[-140.06607056 638.91046143]
[-142.16455078 624.05517578]
[-143.56442261 609.11785889]
[-144.26260376 594.13134766]
[-144.25756836 579.12854004]
[-143.54931641 564.14251709]
[-142.13941956 549.20611572]
[-140.03097534 534.35229492]
[-137.22860718 519.61358643]
[-133.73847961 505.02239990]
[-129.56826782 490.61087036]
[-124.72713470 476.41064453]
[-119.22572327 462.45291138]
[-113.07613373 448.76843262]
[-106.29187775 435.38720703]
[-98.88787079 422.33868408]
[-90.88038635 409.65158081]
[-82.28702545 397.35369873]
[-73.12667847 385.47216797]
[-63.41949081 374.03305054]
[-53.18679047 363.06149292]
[-42.45107269 352.58163452]
[-31.23594284 342.61648560]
[-19.56604958 333.18798828]
[-7.46704769 324.31686401]
[5.03446770 316.02258301]
[17.91101456 308.32336426]
[31.13428879 301.23620605]
[44.67522049 294.77661133]
[58.50404739 288.95883179]
[72.59036255 283.79562378]
[86.90321350 279.29837036]
[101.41112518 275.47689819]
[116.08221436 272.33966064]
[113.63648987 257.54040527]
[111.19075775 242.74113464]
[108.74503326 227.94186401]
[96.89524841 214.99777222]
[103.52213287 197.81736755]
[100.85633850 183.05615234]
[98.19054413 168.29493713]
[95.52474976 153.53372192]
[92.85895538 138.77250671]
[87.87064362 152.91876221]
[78.16442108 164.35507202]
[65.01729584 171.57678223]
[50.15900040 173.63375854]
[35.54440308 170.25537109]
[23.09630585 161.88607788]
[14.45246506 149.62704468]
[10.75013065 135.09114075]
[12.47640610 120.19080353]
[19.40417099 106.88643646]
[30.62195969 96.92846680]
[44.65387726 91.62702179]
[59.65378571 91.67961121]
[73.64818573 97.07930756]
[84.79587555 107.11569214]
[91.63087463 120.47058105]
[92.30065918 105.48554230]
[89.72917938 100.91372681]
[89.90224457 95.22660828]
[93.22005463 90.06626892]
[94.33570862 75.10781860]
[95.45135498 60.14936447]
[96.56700134 45.19091034]
[97.68265533 30.23245811]
[98.79830170 15.27400398]
[99.80255890 0.30766010]
[100.69537354 -14.66574574]
[93.79319763 -28.90198326]
[102.27432251 -41.14615631]
[88.35411072 -47.14646530]
[77.32775116 -57.54815674]
[70.52672577 -71.09518433]
[68.77229309 -86.15166473]
[72.27630615 -100.89946747]
[80.61563110 -113.55772400]
[92.78327179 -122.59787750]
[107.30991364 -126.92829895]
[122.44139099 -126.02605438]
[136.35052490 -120.00010681]
[147.35769653 -109.57810974]
[154.13374329 -96.01857758]
[155.86042786 -80.95888519]
[152.32923889 -66.21755981]
[143.96659851 -53.57469940]
[131.78231812 -44.55698013]
[117.24772644 -40.25334167]
[124.21376801 -27.08810234]
[115.66878510 -13.77293015]
[114.77597046 1.20047593]
[117.51576996 8.06453323]
[113.75675201 16.38965225]
[112.64110565 31.34810638]
[111.52545929 46.30656052]
[110.40980530 61.26501465]
[109.29415894 76.22346497]
[108.17851257 91.18192291]
[107.28569794 106.15532684]
[106.61591339 121.14036560]
[107.62017059 136.10670471]
[110.28596497 150.86791992]
[112.95175934 165.62915039]
[115.61755371 180.39036560]
[118.28335571 195.15158081]
[128.41502380 203.13356018]
[130.33148193 215.48309326]
[123.54430389 225.49613953]
[125.99002838 240.29541016]
[128.43576050 255.09468079]
[130.88148499 269.89395142]
[145.78187561 268.14419556]
[160.74789429 267.09478760]
[175.74664307 266.74801636]
[190.74517822 267.10467529]
[205.71051025 268.16394043]
[220.60972595 269.92349243]
[235.41011047 272.37948608]
[250.07910156 275.52648926]
[264.58447266 279.35763550]
[278.89431763 283.86444092]
[292.97717285 289.03704834]
[306.80212402 294.86404419]
[320.33874512 301.33267212]
[333.55728149 308.42868042]
[346.42868042 316.13644409]
[358.92468262 324.43905640]
[371.01776123 333.31829834]
[382.68136597 342.75457764]
[393.88983154 352.72717285]
[404.61856079 363.21420288]
[414.84393311 374.19256592]
[424.54348755 385.63818359]
[433.69589233 397.52581787]
[442.28106689 409.82940674]
[450.28009033 422.52188110]
[457.67538452 435.57531738]
[464.45071411 448.96105957]
[470.59115601 462.64965820]
[476.08325195 476.61102295]
[480.91491699 490.81448364]
[485.07553101 505.22882080]
[488.55590820 519.82232666]
[491.34844971 534.56286621]
[493.44699097 549.41815186]
[494.84692383 564.35546875]
[495.54516602 579.34197998]
[495.54019165 594.34472656]
[494.83200073 609.33081055]
[493.42218018 624.26715088]
[491.31378174 639.12103271]
[488.51150513 653.85980225]
[485.02142334 668.45092773]
[480.85128784 682.86248779]
[476.01019287 697.06274414]
[470.50885010 711.02050781]
[464.35931396 724.70501709]
[457.57513428 738.08624268]
[450.17117310 751.13482666]
[442.16375732 763.82196045]
[433.57043457 776.11987305]
[424.41015625 788.00146484]
[414.70300293 799.44061279]
[404.47033691 810.41223145]
[393.73468018 820.89208984]
[382.51959229 830.85729980]
[370.84973145 840.28582764]
[358.75076294 849.15704346]
[346.24929810 857.45135498]
[333.37277222 865.15063477]
[320.14953613 872.23785400]
[306.60864258 878.69750977]
[292.77984619 884.51531982]
[278.69354248 889.67858887]
[264.38070679 894.17596436]
[249.87281799 897.99743652]
[235.20173645 901.13476562]
[220.39973450 903.58093262]
[205.49934387 905.33062744]
[190.53332520 906.37994385]
[175.53456116 906.72668457]
[160.53604126 906.36993408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 139]
[62 138]
[63 137]
[64 136]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[86 128]
[87 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 119]
[97 118]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
