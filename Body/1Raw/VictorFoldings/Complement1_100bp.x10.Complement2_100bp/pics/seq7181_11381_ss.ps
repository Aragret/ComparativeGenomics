%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[55.96117401 412.42083740]
[59.60989761 427.01541138]
[60.51451492 442.03195190]
[58.64420700 456.95898438]
[54.06268311 471.28814697]
[46.92598724 484.53134155]
[37.47718811 496.23751831]
[26.03811455 506.00799561]
[12.99837208 513.51000977]
[-1.19790900 518.48797607]
[-16.06720924 520.77239990]
[-31.10308266 520.28546143]
[-45.79341888 517.04370117]
[-59.63786316 511.15765381]
[-72.16488647 502.82766724]
[-82.94781494 492.33752441]
[-91.61939240 480.04452515]
[-97.88426971 466.36730957]
[-101.52906036 451.77175903]
[-102.42962646 436.75497437]
[-100.55529785 421.82843018]
[-95.96990967 407.50051880]
[-88.82964325 394.25924683]
[-79.37769318 382.55560303]
[-67.93598175 372.78823853]
[-54.89422226 365.28976440]
[-40.69659805 360.31561279]
[-25.82668304 358.03518677]
[-10.79094124 358.52618408]
[3.89851904 361.77185059]
[9.76747990 347.96768188]
[15.63644028 334.16351318]
[13.49569416 319.42355347]
[26.01567650 309.75088501]
[18.20610809 297.09588623]
[19.35944939 282.09143066]
[29.24235725 270.50775146]
[44.22423935 266.92315674]
[50.09320068 253.11897278]
[55.96216202 239.31478882]
[60.99907684 225.18576050]
[65.18608856 210.78198242]
[69.37310028 196.37820435]
[73.45276642 181.94364929]
[77.42486572 167.47912598]
[81.39695740 153.01460266]
[84.82801819 138.41227722]
[87.71329498 123.69239044]
[90.59856415 108.97249603]
[93.04429626 94.17322540]
[95.04830933 79.30770111]
[97.05232239 64.44216919]
[99.05633545 49.57664108]
[100.83879852 34.68292236]
[102.39932251 19.76431847]
[103.95984650 4.84571457]
[105.52037048 -10.07289028]
[107.08089447 -24.99149513]
[100.82127380 -39.52173233]
[109.84066772 -51.37499237]
[96.35971069 -60.94868469]
[89.58512115 -75.92868805]
[91.27964783 -92.18739319]
[100.88660431 -105.29701233]
[115.70751953 -111.73541260]
[109.23226166 -126.17084503]
[118.07418060 -138.15707397]
[119.41241455 -153.09725952]
[120.75064850 -168.03744507]
[122.08888245 -182.97763062]
[123.42711639 -197.91781616]
[115.35739136 -185.27346802]
[103.95812988 -175.52375793]
[90.21547699 -169.51214600]
[75.31832123 -167.75866699]
[60.55540466 -170.41505432]
[47.20387268 -177.25146484]
[36.41876221 -187.67649841]
[29.13310051 -200.78829956]
[25.97716522 -215.45254517]
[27.22397614 -230.40063477]
[32.76567078 -244.33941650]
[42.12284088 -256.06304932]
[54.48599625 -264.55731201]
[68.78559875 -269.08734131]
[83.78459167 -269.26129150]
[98.18540955 -265.06411743]
[110.74223328 -256.85885620]
[120.36878967 -245.35540771]
[126.23226166 -231.54890442]
[127.82556152 -216.63726807]
[133.28092957 -230.61006165]
[138.73628235 -244.58285522]
[144.19163513 -258.55566406]
[131.01219177 -265.76193237]
[118.86249542 -274.59445190]
[107.94207001 -284.90814209]
[98.43022156 -296.53369141]
[90.48316193 -309.28015137]
[84.23137665 -322.93826294]
[79.77752686 -337.28369141]
[77.19474792 -352.08090210]
[76.52545929 -367.08691406]
[77.78064728 -382.05532837]
[80.93969727 -396.74029541]
[85.95073700 -410.90072632]
[92.73148346 -424.30407715]
[101.17058563 -436.73025513]
[111.12947083 -447.97521973]
[122.44460297 -457.85427856]
[134.93017578 -466.20526123]
[148.38116455 -472.89102173]
[162.57669067 -477.80175781]
[177.28366089 -480.85681152]
[192.26055908 -482.00607300]
[207.26145935 -481.23065186]
[222.04002380 -478.54324341]
[236.35359192 -473.98800659]
[249.96711731 -467.63977051]
[262.65704346 -459.60272217]
[274.21499634 -450.00885010]
[284.45117188 -439.01574707]
[293.19750977 -426.80386353]
[300.31036377 -413.57376099]
[305.67297363 -399.54269409]
[309.19720459 -384.94104004]
[310.82525635 -370.00860596]
[310.53036499 -354.99057007]
[308.31735229 -340.13354492]
[304.22262573 -325.68151855]
[298.31335449 -311.87176514]
[290.68658447 -298.93109131]
[281.46759033 -287.07199097]
[270.80773926 -276.48916626]
[258.88208008 -267.35644531]
[245.88642883 -259.82376099]
[232.03417969 -254.01483154]
[217.55282593 -250.02502441]
[202.68014526 -247.91986084]
[187.66036987 -247.73390198]
[172.74012756 -249.47023010]
[158.16442871 -253.10029602]
[152.70907593 -239.12750244]
[147.25372314 -225.15470886]
[141.79837036 -211.18190002]
[138.36729431 -196.57957458]
[137.02906799 -181.63938904]
[135.69082642 -166.69921875]
[134.35260010 -151.75903320]
[133.01435852 -136.81884766]
[139.58534241 -123.45203400]
[130.64770508 -110.39717865]
[142.31234741 -103.29413605]
[149.81462097 -91.80307007]
[151.64268494 -78.13532257]
[147.38330078 -64.95063782]
[137.81344604 -54.83956146]
[124.75927734 -49.81446838]
[131.13050842 -36.35131073]
[121.99949646 -23.43097115]
[120.43897247 -8.51236725]
[118.87844849 6.40623760]
[117.31792450 21.32484245]
[115.75740051 36.24344635]
[118.01552582 40.45176315]
[117.65399170 46.12329865]
[113.92185974 51.58065414]
[111.91784668 66.44618225]
[109.91383362 81.31171417]
[107.90982056 96.17723846]
[109.54565430 98.74892426]
[110.28191376 101.97265625]
[109.87528229 105.51639557]
[108.20853424 108.96287537]
[105.31845856 111.85777283]
[102.43318176 126.57765961]
[99.54791260 141.29754639]
[113.26306152 135.22344971]
[126.63317108 142.02345276]
[129.80230713 156.68484497]
[120.43428802 168.39981079]
[105.43487549 168.53248596]
[95.86148071 156.98669434]
[91.88938904 171.45121765]
[87.91728973 185.91574097]
[88.66250610 195.01972961]
[83.77687836 200.56521606]
[79.58987427 214.96899414]
[75.40286255 229.37277222]
[88.03704834 221.28715515]
[103.01729584 222.05679321]
[114.75632477 231.39463806]
[118.87577820 245.81788635]
[113.83920288 259.94702148]
[101.52510834 268.51226807]
[86.52635193 268.31893921]
[74.43710327 259.43917847]
[69.76633453 245.18376160]
[63.89737701 258.98794556]
[58.02841568 272.79211426]
[65.84178925 286.06829834]
[64.35688782 301.22247314]
[54.35173416 312.46350098]
[39.81985474 315.61984253]
[41.54081345 331.34716797]
[29.44061661 340.03247070]
[23.57165718 353.83663940]
[17.70269585 367.64083862]
[30.23196220 375.96740723]
[41.01771927 386.45465088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 208]
[31 207]
[32 206]
[34 204]
[38 200]
[39 199]
[40 198]
[41 189]
[42 188]
[43 187]
[44 185]
[45 184]
[46 183]
[47 177]
[48 176]
[49 175]
[50 170]
[51 169]
[52 168]
[53 167]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[60 158]
[65 152]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[91 145]
[92 144]
[93 143]
[94 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
