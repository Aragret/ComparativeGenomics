%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[116.16000366 757.82733154]
[101.82649994 753.39044189]
[87.78399658 748.10424805]
[74.08276367 741.98773193]
[60.77185059 735.06280518]
[47.89890289 727.35418701]
[35.51000595 718.88952637]
[23.64950752 709.69909668]
[12.35986423 699.81579590]
[1.68149269 689.27502441]
[-8.34738255 678.11450195]
[-17.69085884 666.37414551]
[-26.31549072 654.09606934]
[-34.19040298 641.32421875]
[-41.28740692 628.10418701]
[-47.58109283 614.48345947]
[-53.04893494 600.51068115]
[-57.67136002 586.23590088]
[-61.43181610 571.71026611]
[-64.31684875 556.98571777]
[-66.31612396 542.11499023]
[-67.42248535 527.15136719]
[-67.63198090 512.14831543]
[-66.94384766 497.15954590]
[-65.36055756 482.23880005]
[-62.88777161 467.43945312]
[-59.53435135 452.81448364]
[-55.31229401 438.41622925]
[-50.23671722 424.29623413]
[-44.32578659 410.50506592]
[-37.60066605 397.09207153]
[-30.08542824 384.10528564]
[-21.80697441 371.59118652]
[-12.79494095 359.59457397]
[-3.08158898 348.15838623]
[7.29831076 337.32357788]
[18.30760002 327.12890625]
[29.90686989 317.61090088]
[42.05459595 308.80361938]
[54.70729446 300.73858643]
[67.81966400 293.44467163]
[81.34477997 286.94799805]
[95.23421478 281.27178955]
[109.43824768 276.43640137]
[123.90602875 272.45913696]
[120.80192566 257.78384399]
[110.59832001 246.93322754]
[115.31231689 231.83061218]
[112.20820618 217.15531921]
[109.10409546 202.48001099]
[105.99998474 187.80471802]
[102.89587402 173.12940979]
[92.65069580 184.08552551]
[77.68587494 183.05886841]
[69.03291321 170.80627441]
[73.07044983 156.35987854]
[86.82217407 150.36903381]
[100.14981842 157.24865723]
[98.14580536 142.38313293]
[96.14179230 127.51760101]
[80.44622803 119.74219513]
[72.52066040 104.12191772]
[75.51443481 86.86373901]
[88.23793030 74.82544708]
[85.79219818 60.02618027]
[83.34647369 45.22690964]
[80.90074921 30.42763710]
[78.45501709 15.62836647]
[76.00929260 0.82909590]
[71.60585022 15.16819382]
[63.81840134 27.98831749]
[53.12313843 38.50551224]
[40.17408752 46.07664871]
[25.76308823 50.23874664]
[10.77137470 50.73728943]
[-3.88430071 47.54179764]
[-17.30773926 40.84767532]
[-28.67809105 31.06426620]
[-37.30005646 18.78983116]
[-42.64640045 4.77496052]
[-44.39018631 -10.12333488]
[-42.42478561 -24.99401855]
[-36.87038422 -38.92773819]
[-28.06662941 -51.07244873]
[-16.55188179 -60.68548965]
[-3.03026915 -67.17902374]
[11.67135715 -70.15596771]
[26.65398598 -69.43428040]
[41.00142288 -65.05809021]
[53.83631897 -57.29500961]
[64.37381744 -46.61975098]
[71.96953583 -33.68510818]
[76.15901184 -19.28201103]
[78.82480621 -34.04322815]
[81.49060059 -48.80444717]
[84.04643250 -63.58509827]
[86.49216461 -78.38436890]
[88.93788910 -93.18363953]
[91.38361359 -107.98291016]
[93.82934570 -122.78218079]
[80.14621735 -129.15985107]
[68.69193268 -138.99356079]
[60.31645966 -151.55357361]
[55.64131927 -165.90786743]
[55.01343918 -180.99125671]
[58.47941589 -195.68443298]
[65.78204346 -208.89707947]
[76.37942505 -219.64874268]
[89.48515320 -227.14155579]
[104.12671661 -230.81951904]
[119.21759033 -230.40969849]
[133.63795471 -225.94248962]
[146.31770325 -217.74942017]
[156.31591797 -206.43843079]
[162.89067078 -192.84890747]
[165.55407715 -177.98927307]
[164.10847473 -162.96220398]
[158.66116333 -148.88281250]
[149.61634827 -136.79588318]
[137.64521790 -127.59834290]
[123.63612366 -121.97271729]
[108.62861633 -120.33645630]
[106.18288422 -105.53718567]
[103.73715973 -90.73791504]
[101.29143524 -75.93864441]
[98.84570312 -61.13937378]
[100.85653687 -54.02752686]
[96.25182343 -46.13864899]
[93.58602142 -31.37743378]
[90.92022705 -16.61621666]
[90.80856323 -1.61663151]
[93.25428772 13.18263912]
[95.70001984 27.98191071]
[98.14574432 42.78118134]
[100.59146881 57.58045197]
[103.03720093 72.37972260]
[114.45227051 76.26740265]
[123.14540100 84.62487030]
[127.47933960 95.87808228]
[126.63783264 107.90761566]
[120.77935791 118.44783020]
[111.00731659 125.51358795]
[113.01132965 140.37911987]
[115.01534271 155.24464417]
[117.57117462 170.02529907]
[120.67528534 184.70060730]
[123.77939606 199.37590027]
[126.88350677 214.05120850]
[129.98760986 228.72651672]
[140.41325378 240.62680054]
[135.47721863 254.67973328]
[138.58132935 269.35504150]
[153.42045593 267.13333130]
[168.36589050 265.80303955]
[183.36412048 265.36892700]
[198.36146545 265.83255005]
[213.30426025 267.19226074]
[228.13897705 269.44317627]
[242.81253052 272.57723999]
[257.27236938 276.58325195]
[271.46679688 281.44683838]
[285.34490967 287.15060425]
[298.85708618 293.67413330]
[311.95495605 300.99407959]
[324.59161377 309.08422852]
[336.72180176 317.91561890]
[348.30215454 327.45666504]
[359.29116821 337.67315674]
[369.64953613 348.52856445]
[379.34014893 359.98403931]
[388.32833862 371.99853516]
[396.58190918 384.52905273]
[404.07131958 397.53073120]
[410.76980591 410.95706177]
[416.65332031 424.75994873]
[421.70083618 438.88998413]
[425.89428711 453.29660034]
[429.21865845 467.92822266]
[431.66201782 482.73245239]
[433.21566772 497.65631104]
[433.87402344 512.64636230]
[433.63473511 527.64898682]
[432.49865723 542.61041260]
[430.46984863 557.47717285]
[427.55557251 572.19592285]
[423.76626587 586.71411133]
[419.11550903 600.97961426]
[413.61990356 614.94152832]
[407.29919434 628.54974365]
[400.17593384 641.75561523]
[392.27566528 654.51184082]
[383.62664795 666.77276611]
[374.25988770 678.49450684]
[364.20886230 689.63507080]
[353.50958252 700.15460205]
[342.20031738 710.01544189]
[330.32159424 719.18231201]
[317.91589355 727.62237549]
[305.02764893 735.30535889]
[291.70303345 742.20391846]
[277.98965454 748.29315186]
[263.93667603 753.55145264]
[249.59439087 757.95989990]
[235.01412964 761.50268555]
[220.24809265 764.16717529]
[205.34913635 765.94384766]
[190.37059021 766.82629395]
[175.36608887 766.81140137]
[160.38932800 765.89916992]
[145.49392700 764.09295654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 152]
[46 151]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[58 144]
[59 143]
[60 142]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 131]
[93 130]
[94 129]
[95 128]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
