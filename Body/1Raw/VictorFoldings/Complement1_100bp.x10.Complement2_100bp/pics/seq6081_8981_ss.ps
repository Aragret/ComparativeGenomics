%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[48.87720108 699.33898926]
[36.75401688 708.18920898]
[23.89608765 715.93328857]
[10.40404320 722.51068115]
[-3.61652231 727.86993408]
[-18.05587578 731.96905518]
[-32.80100632 734.77593994]
[-47.73651505 736.26867676]
[-62.74550247 736.43554688]
[-77.71051025 735.27526855]
[-92.51440430 732.79693604]
[-107.04132843 729.01989746]
[-121.17758942 723.97369385]
[-134.81254578 717.69787598]
[-147.83947754 710.24157715]
[-160.15644836 701.66314697]
[-171.66703796 692.02966309]
[-182.28115845 681.41656494]
[-191.91577148 669.90692139]
[-200.49542236 657.59075928]
[-207.95300293 644.56457520]
[-214.23013306 630.93023682]
[-219.27767944 616.79443359]
[-223.05613708 602.26788330]
[-225.53594971 587.46423340]
[-226.69769287 572.49932861]
[-226.53227234 557.49035645]
[-225.04100037 542.55468750]
[-222.23553467 527.80926514]
[-218.13783264 513.36950684]
[-212.77995300 499.34844971]
[-206.20385742 485.85574341]
[-198.46099854 472.99707031]
[-189.61198425 460.87301636]
[-179.72605896 449.57852173]
[-168.88059998 439.20193481]
[-157.16047668 429.82446289]
[-144.65744019 421.51956177]
[-131.46934509 414.35217285]
[-117.69937897 408.37838745]
[-103.45534515 403.64501953]
[-88.84870148 400.18905640]
[-73.99378204 398.03756714]
[-59.00683975 397.20736694]
[-44.00517273 397.70498657]
[-29.10619354 399.52655029]
[-14.42650604 402.65774536]
[-0.08100209 407.07409668]
[5.58178473 393.18405151]
[3.22181892 378.47760010]
[15.59640121 368.61959839]
[21.25918770 354.72958374]
[26.92197418 340.83953857]
[31.74797249 326.63708496]
[35.72006989 312.17257690]
[30.37483025 295.45745850]
[43.58334351 282.62713623]
[47.23143005 268.07751465]
[50.77110291 253.50114441]
[54.31077576 238.92477417]
[52.63512802 234.45249939]
[53.75114822 228.88011169]
[58.17892838 223.97029114]
[62.15102386 209.50576782]
[66.12311554 195.04124451]
[62.03229141 180.71942139]
[73.14775848 169.46078491]
[77.11985016 154.99626160]
[81.09194946 140.53173828]
[77.00112152 126.20992279]
[88.11658478 114.95127869]
[81.04122162 102.30670166]
[84.87813568 88.33442688]
[97.41889191 81.07662201]
[101.39098358 66.61209869]
[105.36308289 52.14757538]
[109.33517456 37.68305206]
[113.09147644 23.16099358]
[116.63114929 8.58461857]
[120.17082214 -5.99175692]
[123.71049500 -20.56813240]
[127.25016785 -35.14450836]
[130.24494934 -49.84251022]
[132.69067383 -64.64178467]
[135.13639832 -79.44105530]
[137.58212280 -94.24032593]
[139.69674683 -109.09052277]
[141.47921753 -123.98423767]
[135.43663025 -138.60606384]
[144.63150024 -150.32373047]
[138.58891296 -164.94554138]
[147.78378296 -176.66320801]
[149.56625366 -191.55693054]
[151.34870911 -206.45063782]
[143.71098328 -223.20613098]
[154.76931763 -236.83259583]
[148.50968933 -251.36282349]
[157.52908325 -263.21609497]
[159.08961487 -278.13470459]
[160.65013123 -293.05331421]
[146.90890503 -299.41390991]
[135.97923279 -309.89346313]
[129.04666138 -323.35519409]
[126.86322021 -338.33889771]
[129.66572571 -353.21923828]
[137.15019226 -366.38211060]
[148.50476074 -376.39971924]
[162.49778748 -382.18542480]
[177.61137390 -383.11160278]
[192.20614624 -379.07785034]
[204.69897461 -370.52166748]
[213.73471069 -358.37118530]
[218.33322144 -343.94439697]
[217.99572754 -328.80621338]
[212.75880432 -314.59869385]
[203.19052124 -302.86297607]
[190.32879639 -294.87207031]
[175.56874084 -291.49276733]
[174.00822449 -276.57415771]
[172.44769287 -261.65557861]
[178.81892395 -248.19241333]
[169.68791199 -235.27206421]
[177.05903625 -225.68077087]
[175.88104248 -213.23905945]
[166.24243164 -204.66818237]
[164.45996094 -189.77445984]
[162.67750549 -174.88073730]
[168.84757996 -161.32421875]
[159.52522278 -148.54125977]
[165.69529724 -134.98472595]
[156.37294006 -122.20177460]
[154.59046936 -107.30805969]
[156.47059631 -104.32519531]
[156.99935913 -100.28348541]
[155.69483948 -95.82798004]
[152.38139343 -91.79459381]
[149.93566895 -76.99532318]
[147.48994446 -62.19605637]
[145.04421997 -47.39678574]
[158.57243347 -53.87654877]
[172.13908386 -47.47763824]
[175.74333191 -32.91709900]
[166.72827148 -20.92841148]
[151.73945618 -20.34919548]
[141.82653809 -31.60483551]
[138.28686523 -17.02845955]
[134.74719238 -2.45208454]
[131.20751953 12.12429047]
[127.66785431 26.70066643]
[129.34350586 31.17294121]
[128.22747803 36.74533081]
[123.79970551 41.65514755]
[119.82760620 56.11967468]
[115.85550690 70.58419800]
[111.88341522 85.04872131]
[118.95877838 97.69329834]
[115.12186432 111.66557312]
[102.58110809 118.92337799]
[106.38782501 134.27978516]
[95.55647278 144.50382996]
[91.58437347 158.96835327]
[87.61228180 173.43287659]
[91.41899872 188.78929138]
[80.58764648 199.01333618]
[76.61554718 213.47785950]
[72.64344788 227.94238281]
[68.88715363 242.46444702]
[65.34748077 257.04083252]
[61.80780411 271.61718750]
[62.82375336 280.69494629]
[58.10540009 286.38345337]
[63.96680450 297.87286377]
[60.53920746 309.89099121]
[50.18459320 316.14465332]
[46.21249771 330.60919189]
[58.72490692 322.33636475]
[73.71494293 322.88287354]
[85.59170532 332.04492188]
[89.92543793 346.40521240]
[85.09977722 360.60778809]
[72.91457367 369.35540771]
[57.91460419 369.38543701]
[45.69448853 360.68664551]
[40.81200027 346.50234985]
[35.14921570 360.39236450]
[29.48642921 374.28237915]
[31.44135284 389.98236084]
[19.47181129 398.84686279]
[13.80902481 412.73687744]
[27.15323257 419.60928345]
[39.83783340 427.63415527]
[51.76354980 436.74868774]
[62.83704376 446.88156128]
[72.97165680 457.95349121]
[82.08805847 469.87777710]
[90.11490631 482.56112671]
[96.98937988 495.90426636]
[102.65766907 509.80276489]
[107.07541656 524.14782715]
[110.20804596 538.82720947]
[112.03104401 553.72601318]
[112.53012848 568.72760010]
[111.70140839 583.71466064]
[109.55136871 598.56976318]
[106.09682465 613.17675781]
[101.36483002 627.42126465]
[95.39240265 641.19177246]
[88.22629547 654.38061523]
[79.92259216 666.88446045]
[70.54628754 678.60546875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 189]
[49 188]
[51 186]
[52 185]
[53 184]
[54 175]
[55 174]
[57 171]
[58 169]
[59 168]
[60 167]
[63 166]
[64 165]
[65 164]
[67 162]
[68 161]
[69 160]
[71 158]
[74 155]
[75 154]
[76 153]
[77 152]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 139]
[84 138]
[85 137]
[86 136]
[87 132]
[88 131]
[90 129]
[92 127]
[93 126]
[94 125]
[96 122]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
