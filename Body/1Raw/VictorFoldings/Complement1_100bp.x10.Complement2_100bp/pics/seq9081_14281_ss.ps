%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[101.70292664 404.91467285]
[93.62900543 417.56716919]
[84.51115417 429.48934937]
[74.41507721 440.59536743]
[63.41350555 450.80511475]
[51.58571243 460.04510498]
[39.01691818 468.24871826]
[25.79768562 475.35684204]
[12.02325630 481.31829834]
[-2.20711923 486.09011841]
[-16.79091072 489.63790894]
[-31.62304115 491.93612671]
[-46.59663773 492.96820068]
[-61.60382080 492.72668457]
[-76.53646088 491.21334839]
[-91.28695679 488.43905640]
[-105.74903870 484.42385864]
[-119.81850433 479.19659424]
[-133.39396667 472.79501343]
[-146.37763977 465.26519775]
[-158.67596436 456.66140747]
[-170.20030212 447.04562378]
[-180.86766052 436.48715210]
[-190.60115051 425.06204224]
[-199.33065796 412.85263062]
[-206.99327087 399.94689941]
[-213.53379822 386.43780518]
[-218.90509033 372.42269897]
[-223.06846619 358.00256348]
[-225.99391174 343.28131104]
[-227.66035461 328.36499023]
[-228.05580139 313.36108398]
[-227.17739868 298.37768555]
[-225.03146362 283.52273560]
[-221.63345337 268.90332031]
[-217.00787354 254.62475586]
[-211.18803406 240.78988647]
[-204.21586609 227.49842834]
[-196.14161682 214.84614563]
[-187.02346802 202.92419434]
[-176.92709351 191.81846619]
[-165.92526245 181.60897827]
[-154.09722900 172.36930847]
[-141.52822876 164.16601562]
[-128.30880737 157.05821228]
[-114.53422546 151.09712219]
[-100.30372620 146.32566833]
[-85.71984863 142.77824402]
[-70.88765717 140.48042297]
[-55.91403198 139.44873047]
[-40.90685654 139.69062805]
[-25.97425842 141.20436096]
[-11.22383022 143.97901917]
[3.23814750 147.99461365]
[17.30747604 153.22222900]
[30.88278198 159.62416077]
[43.86625671 167.15432739]
[52.46482086 154.86347961]
[61.06338501 142.57264709]
[69.66194916 130.28181458]
[78.26051331 117.99097443]
[86.85907745 105.70013428]
[88.26311493 91.78897858]
[100.85008240 85.70130157]
[89.00424194 76.49416351]
[77.63596344 66.70346832]
[66.77397156 56.35394287]
[56.44570541 45.47173691]
[46.67725372 34.08433533]
[37.49329376 22.22051048]
[28.91702652 9.91022587]
[20.97011185 -2.81541920]
[13.67262840 -15.92427921]
[7.04300833 -29.38323975]
[1.09799910 -43.15830231]
[-4.14738131 -57.21466827]
[-8.67988300 -71.51683807]
[-12.48805618 -86.02867126]
[-15.56228065 -100.71350861]
[-17.89479256 -115.53427124]
[-19.47969627 -130.45350647]
[-20.31299019 -145.43353271]
[-20.39257050 -160.43649292]
[-19.71823502 -175.42451477]
[-18.29168510 -190.35972595]
[-16.11652946 -205.20439148]
[-13.19825745 -219.92102051]
[-9.54424381 -234.47244263]
[-5.16371775 -248.82188416]
[-0.06774540 -262.93310547]
[5.73080015 -276.77044678]
[12.21727180 -290.29898071]
[19.37528229 -303.48452759]
[27.18675232 -316.29376221]
[35.63195038 -328.69433594]
[44.68953705 -340.65490723]
[54.33663940 -352.14529419]
[64.54888153 -363.13644409]
[75.30046844 -373.60061646]
[86.56424713 -383.51135254]
[98.31175232 -392.84365845]
[110.51332092 -401.57391357]
[123.13812256 -409.68005371]
[136.15426636 -417.14166260]
[149.52886963 -423.93984985]
[163.22816467 -430.05746460]
[177.21751404 -435.47900391]
[191.46160889 -440.19085693]
[205.92445374 -444.18103027]
[220.56951904 -447.43951416]
[235.35980225 -449.95803833]
[250.25794983 -451.73025513]
[265.22631836 -452.75167847]
[280.22711182 -453.01974487]
[295.22241211 -452.53375244]
[310.17437744 -451.29495239]
[325.04519653 -449.30648804]
[339.79733276 -446.57333374]
[354.39349365 -443.10241699]
[368.79684448 -438.90249634]
[382.97097778 -433.98422241]
[396.88006592 -428.35998535]
[410.48904419 -422.04397583]
[423.76345825 -415.05218506]
[436.66983032 -407.40228271]
[449.17550659 -399.11352539]
[461.24893188 -390.20693970]
[472.85961914 -380.70495605]
[483.97821045 -370.63159180]
[494.57662964 -360.01232910]
[504.62811279 -348.87393188]
[514.10723877 -337.24459839]
[522.99011230 -325.15368652]
[531.25421143 -312.63171387]
[538.87878418 -299.71035767]
[545.84448242 -286.42221069]
[552.13366699 -272.80087280]
[557.73059082 -258.88070679]
[562.62097168 -244.69694519]
[566.79254150 -230.28536987]
[570.23474121 -215.68240356]
[572.93890381 -200.92492676]
[574.89813232 -186.05021667]
[576.10754395 -171.09587097]
[576.56408691 -156.09962463]
[576.26647949 -141.09939575]
[575.21563721 -126.13306427]
[573.41412354 -111.23842621]
[570.86657715 -96.45312500]
[567.57928467 -81.81449890]
[563.56066895 -67.35952759]
[558.82086182 -53.12472534]
[553.37182617 -39.14604950]
[547.22729492 -25.45881844]
[540.40283203 -12.09760189]
[532.91564941 0.90384847]
[524.78466797 13.51268864]
[516.03045654 25.69706726]
[506.67507935 37.42620468]
[496.74221802 48.67047501]
[486.25692749 59.40147018]
[475.24572754 69.59208679]
[463.73638916 79.21658325]
[451.75802612 88.25064087]
[439.34088135 96.67144012]
[426.51629639 104.45771027]
[413.31674194 111.58978271]
[399.77548218 118.04965210]
[385.92675781 123.82097626]
[371.80554199 128.88920593]
[357.44750977 133.24150085]
[342.88894653 136.86691284]
[328.16659546 139.75624084]
[313.31768799 141.90220642]
[298.37969971 143.29939270]
[283.39038086 143.94425964]
[268.38760376 143.83518982]
[253.40924072 142.97244263]
[238.49314880 141.35821533]
[223.67700195 138.99656677]
[208.99822998 135.89347839]
[194.49391174 132.05677795]
[180.20068359 127.49617767]
[166.15466309 122.22316742]
[152.39131165 116.25109100]
[138.94540405 109.59502411]
[125.85092163 102.27178192]
[113.14092255 94.29986572]
[111.73688507 108.21102142]
[99.14991760 114.29869843]
[90.55135345 126.58953857]
[81.95278931 138.88037109]
[73.35422516 151.17121887]
[64.75566101 163.46205139]
[56.15709305 175.75288391]
[67.68169403 185.36836243]
[78.34931946 195.92657471]
[88.08310699 207.35142517]
[96.81292725 219.56060791]
[104.47587585 232.46614075]
[111.01673889 245.97506714]
[116.38839722 259.99002075]
[120.55214691 274.41003418]
[123.47797394 289.13122559]
[125.14481354 304.04751587]
[125.54064178 319.05142212]
[124.66262054 334.03485107]
[122.51706696 348.88983154]
[119.11943817 363.50933838]
[114.49422455 377.78802490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 195]
[58 194]
[59 193]
[60 192]
[61 191]
[62 190]
[64 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
