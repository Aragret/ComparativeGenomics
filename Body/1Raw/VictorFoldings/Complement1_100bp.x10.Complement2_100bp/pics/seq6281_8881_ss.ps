%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[-31.38583565 858.54272461]
[-46.17445755 861.06903076]
[-61.06653595 862.88879395]
[-76.02833557 863.99792480]
[-91.02596283 864.39392090]
[-106.02544403 864.07580566]
[-120.99279785 863.04431152]
[-135.89411926 861.30187988]
[-150.69564819 858.85235596]
[-165.36387634 855.70129395]
[-179.86553955 851.85589600]
[-194.16780090 847.32482910]
[-208.23828125 842.11834717]
[-222.04508972 836.24822998]
[-235.55694580 829.72784424]
[-248.74324036 822.57196045]
[-261.57409668 814.79669189]
[-274.02047729 806.41973877]
[-286.05416870 797.46008301]
[-297.64788818 787.93792725]
[-308.77542114 777.87493896]
[-319.41152954 767.29388428]
[-329.53210449 756.21868896]
[-339.11422729 744.67449951]
[-348.13623047 732.68750000]
[-356.57763672 720.28472900]
[-364.41934204 707.49438477]
[-371.64355469 694.34539795]
[-378.23394775 680.86755371]
[-384.17556763 667.09136963]
[-389.45495605 653.04809570]
[-394.06018066 638.76953125]
[-397.98077393 624.28796387]
[-401.20785522 609.63629150]
[-403.73413086 594.84765625]
[-405.55386353 579.95562744]
[-406.66296387 564.99377441]
[-407.05886841 549.99615479]
[-406.74072266 534.99670410]
[-405.70922852 520.02935791]
[-403.96673584 505.12802124]
[-401.51718140 490.32647705]
[-398.36611938 475.65829468]
[-394.52066040 461.15661621]
[-389.98956299 446.85437012]
[-384.78305054 432.78390503]
[-378.91293335 418.97711182]
[-372.39251709 405.46527100]
[-365.23657227 392.27899170]
[-357.46130371 379.44815063]
[-349.08432007 367.00180054]
[-340.12460327 354.96810913]
[-330.60244751 343.37442017]
[-320.53942871 332.24691772]
[-309.95834351 321.61083984]
[-298.88314819 311.49026489]
[-287.33895874 301.90817261]
[-275.35186768 292.88619995]
[-262.94909668 284.44482422]
[-250.15873718 276.60314941]
[-237.00971985 269.37893677]
[-223.53186035 262.78860474]
[-209.75567627 256.84701538]
[-195.71238708 251.56764221]
[-181.43380737 246.96246338]
[-166.95227051 243.04191589]
[-152.30058289 239.81484985]
[-137.51196289 237.28862000]
[-122.61986542 235.46890259]
[-107.65806580 234.35984802]
[-92.66043854 233.96397400]
[-77.66095734 234.28215027]
[-62.69360733 235.31367493]
[-47.79229355 237.05621338]
[-32.99077225 239.50579834]
[-18.32256889 242.65690613]
[-3.82091761 246.50238037]
[10.48133278 251.03352356]
[24.55178261 256.24005127]
[30.42074394 242.43588257]
[36.28970337 228.63169861]
[42.15866470 214.82752991]
[48.02762604 201.02334595]
[53.89658737 187.21917725]
[59.76554871 173.41499329]
[65.63450623 159.61082458]
[61.40187454 148.27894592]
[66.17842865 136.73042297]
[77.90753174 131.36471558]
[83.98136902 117.64944458]
[90.05519867 103.93418121]
[94.45619965 89.59432983]
[97.12199402 74.83311462]
[99.78778839 60.07189941]
[101.12602234 45.13171387]
[101.12602234 30.13171387]
[101.12602234 15.13171387]
[101.12602234 0.13171360]
[101.12602234 -14.86828613]
[101.12602234 -29.86828613]
[87.78489685 -37.47814178]
[80.04992676 -50.74711990]
[80.00178528 -66.10593414]
[87.65341949 -79.42314911]
[100.94657898 -87.11648560]
[116.30547333 -87.11648560]
[129.59863281 -79.42314911]
[137.25025940 -66.10593414]
[137.20211792 -50.74711990]
[129.46714783 -37.47814178]
[116.12602234 -29.86828613]
[116.12602234 -14.86828613]
[116.12602234 0.13171360]
[116.12602234 15.13171387]
[116.12602234 30.13171387]
[116.12602234 45.13171387]
[124.25509644 32.52543640]
[137.00338745 24.62093735]
[151.90940857 22.94445801]
[166.09503174 27.81969452]
[176.82124329 38.30531693]
[182.01698303 52.37672043]
[180.67903137 67.31692505]
[173.06571960 80.24122620]
[160.64706421 88.65413666]
[145.82092285 90.93125153]
[131.44996643 86.63290405]
[120.30902100 76.58903503]
[114.54901123 62.73769379]
[111.88320923 77.49890900]
[109.21741486 92.26013184]
[118.69283295 80.63186646]
[131.53831482 72.88630676]
[146.24478149 69.93339539]
[161.08454895 72.12004089]
[174.31423950 79.18935394]
[184.37965393 90.31083679]
[190.09831238 104.17795563]
[190.79838562 119.16160583]
[186.39765930 133.50154114]
[177.41308594 145.51309204]
[164.90017700 153.78517151]
[150.32896423 157.34599304]
[135.41122437 155.77720642]
[121.89949036 149.26313782]
[111.38111115 138.56904602]
[105.09176636 124.95125580]
[103.77046967 110.00801086]
[97.69663239 123.72328186]
[91.62280273 137.43855286]
[94.00833130 155.69754028]
[79.43868256 165.47978210]
[73.56972504 179.28396606]
[67.70076752 193.08813477]
[61.83180237 206.89231873]
[55.96284103 220.69648743]
[50.09387970 234.50067139]
[44.22492218 248.30484009]
[38.35596085 262.10900879]
[51.86784363 268.62933350]
[65.05416870 275.78518677]
[77.88507843 283.56039429]
[90.33148956 291.93728638]
[102.36521149 300.89691162]
[113.95899200 310.41900635]
[125.08655548 320.48193359]
[135.72270203 331.06295776]
[145.84333801 342.13809204]
[155.42553711 353.68222046]
[164.44758606 365.66921997]
[172.88903809 378.07192993]
[180.73080444 390.86227417]
[187.95509338 404.01123047]
[194.54553223 417.48904419]
[200.48721313 431.26519775]
[205.76667786 445.30844116]
[210.37194824 459.58700562]
[214.29260254 474.06851196]
[217.51976013 488.72015381]
[220.04609680 503.50875854]
[221.86590576 518.40081787]
[222.97506714 533.36267090]
[223.37104797 548.36029053]
[223.05296326 563.35974121]
[222.02154541 578.32708740]
[220.27911377 593.22845459]
[217.82962036 608.02996826]
[214.67861938 622.69818115]
[210.83323669 637.19989014]
[206.30220032 651.50213623]
[201.09574890 665.57263184]
[195.22570801 679.37945557]
[188.70535278 692.89129639]
[181.54946899 706.07763672]
[173.77424622 718.90850830]
[165.39732361 731.35491943]
[156.43766785 743.38861084]
[146.91555786 754.98236084]
[136.85258484 766.10992432]
[126.27154541 776.74603271]
[115.19639587 786.86663818]
[103.65223694 796.44879150]
[91.66521454 805.47082520]
[79.26248169 813.91229248]
[66.47213745 821.75402832]
[53.32315826 828.97827148]
[39.84532547 835.56866455]
[26.06917381 841.51031494]
[12.02590942 846.78973389]
[-2.25265360 851.39501953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[85 153]
[86 152]
[89 150]
[90 149]
[91 148]
[92 131]
[93 130]
[94 129]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
