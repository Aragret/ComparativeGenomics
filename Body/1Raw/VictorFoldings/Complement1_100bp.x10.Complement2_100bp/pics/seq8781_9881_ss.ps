%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[73.53003693 742.72955322]
[59.55403519 737.23852539]
[46.28073120 730.21716309]
[33.87704468 721.75378418]
[22.49896431 711.95483398]
[12.28958797 700.94354248]
[3.37730479 688.85839844]
[-4.12580299 675.85131836]
[-10.12537575 662.08599854]
[-14.54596233 647.73541260]
[-17.33196831 632.98016357]
[-18.44835854 618.00573730]
[-17.88109207 603.00042725]
[-15.63730431 588.15301514]
[-11.74521160 573.65020752]
[-6.25376177 559.67437744]
[0.76798493 546.40130615]
[9.23172188 533.99786377]
[19.03100967 522.62005615]
[30.04261017 512.41101074]
[42.12804031 503.49911499]
[55.13531876 495.99636841]
[68.90085602 489.99722290]
[83.25154114 485.57705688]
[98.00690460 482.79150391]
[89.34442139 470.67495728]
[96.03388214 456.33752441]
[94.91823578 441.37908936]
[93.80258942 426.42062378]
[92.68693542 411.46215820]
[91.57128906 396.50372314]
[90.45564270 381.54525757]
[79.87213135 392.17489624]
[64.87310028 392.34542847]
[54.05067444 381.95913696]
[53.60442734 366.96575928]
[63.78999329 355.95422363]
[78.77261353 355.23239136]
[89.96914673 365.21295166]
[90.19247437 350.21459961]
[90.41580200 335.21624756]
[90.63912964 320.21792603]
[90.86245728 305.21957397]
[81.50173187 290.37561035]
[91.07642365 274.64642334]
[91.07642365 259.64642334]
[91.07642365 244.64643860]
[91.07642365 229.64643860]
[88.85515594 226.90812683]
[87.84985352 222.95788574]
[88.61568451 218.37893677]
[91.42636108 213.98039246]
[92.09614563 198.99534607]
[92.76593018 184.01031494]
[93.43571472 169.02526855]
[93.77069092 154.02900696]
[93.54736328 139.03067017]
[93.10075378 124.03732300]
[92.65415192 109.04397583]
[84.90402222 121.88669586]
[72.39672852 130.16725159]
[57.54723358 132.28680420]
[43.22274017 127.83608246]
[32.18908310 117.67446899]
[26.57669067 103.76399994]
[27.46922684 88.79058075]
[34.69435883 75.64533234]
[46.85702133 66.86640930]
[61.60880280 64.14886475]
[76.10135651 68.01743317]
[87.53640747 77.72515106]
[93.70627594 91.39884949]
[95.93138885 76.56480408]
[98.15650940 61.73075867]
[100.38162231 46.89671707]
[102.60674286 32.06267166]
[104.05615997 17.13286400]
[104.72594452 2.14782524]
[105.28415680 -12.84178448]
[97.96116638 -26.86620712]
[106.07397461 -39.35746765]
[106.52058411 -54.35081863]
[106.96718597 -69.34416962]
[107.41379547 -84.33751678]
[107.86039734 -99.33087158]
[108.30700684 -114.32421875]
[95.76576996 -106.09516144]
[81.46584320 -110.62419128]
[75.94860077 -124.57266998]
[83.28115082 -137.65829468]
[98.05820465 -140.23484802]
[109.38600922 -130.40447998]
[107.16637421 -139.26512146]
[111.08244324 -145.53298950]
[112.86490631 -160.42671204]
[114.64736938 -175.32043457]
[108.60478210 -189.94226074]
[117.79965973 -201.65991211]
[103.78865814 -207.25939941]
[91.70490265 -216.29518127]
[82.37229156 -228.15118408]
[76.42712402 -242.01904297]
[74.27477264 -256.95321655]
[76.06196594 -271.93548584]
[81.66686249 -285.94433594]
[90.70730591 -298.02459717]
[102.56690979 -307.35263062]
[116.43706512 -313.29241943]
[131.37207031 -315.43902588]
[146.35365295 -313.64605713]
[160.36032104 -308.03573608]
[172.43708801 -298.99063110]
[181.76054382 -287.12741089]
[187.69500732 -273.25497437]
[189.83583069 -258.31915283]
[188.03706360 -243.33825684]
[182.42134094 -229.33375549]
[173.37158203 -217.26046753]
[161.50477600 -207.94160461]
[147.63003540 -202.01251221]
[132.69337463 -199.87744141]
[138.86344910 -186.32092285]
[129.54109192 -173.53796387]
[127.75862122 -158.64424133]
[125.97615814 -143.75053406]
[124.30461884 -128.84396362]
[123.30035400 -113.87760925]
[122.85375214 -98.88426208]
[122.40714264 -83.89091492]
[121.96054077 -68.89756012]
[121.51393127 -53.90421295]
[121.06732941 -38.91086197]
[128.42225647 -25.95886421]
[120.27750397 -12.39517879]
[123.22045898 -5.61573887]
[119.71098328 2.81761026]
[119.04119873 17.80264854]
[130.05140686 7.61563349]
[145.02719116 6.76356411]
[157.12181091 15.63599586]
[160.80578613 30.17657280]
[154.39483643 43.73753738]
[140.81997681 50.11899948]
[126.28743744 46.40344238]
[117.44078827 34.28778839]
[115.21566772 49.12183380]
[112.99054718 63.95587540]
[110.76543427 78.78992462]
[108.54031372 93.62396240]
[107.64749908 108.59737396]
[108.09410858 123.59072113]
[108.54071045 138.58407593]
[111.68482971 144.40008545]
[111.45437622 150.07846069]
[108.77069092 154.02900696]
[111.38215637 158.54867554]
[111.94276428 163.15725708]
[110.76207733 167.05867004]
[108.42075348 169.69505310]
[107.75096893 184.68009949]
[107.08118439 199.66513062]
[106.41139984 214.65017700]
[106.07642365 229.64643860]
[106.07642365 244.64643860]
[106.07642365 259.64642334]
[106.07642365 274.64642334]
[114.62824249 284.30194092]
[114.31944275 296.79550171]
[105.86080170 305.44290161]
[105.63747406 320.44125366]
[105.41414642 335.43957520]
[105.19081116 350.43792725]
[104.96748352 365.43627930]
[105.41409302 380.42962646]
[106.52973938 395.38806152]
[107.64539337 410.34652710]
[108.76103973 425.30496216]
[109.87668610 440.26342773]
[110.99234009 455.22189331]
[119.73461914 468.40835571]
[112.96535492 481.67584229]
[127.97068024 482.24176025]
[142.81828308 484.48422241]
[157.32145691 488.37503052]
[171.29777527 493.86520386]
[184.57150269 500.88577271]
[196.97569275 509.34838867]
[208.35435486 519.14666748]
[218.56439209 530.15734863]
[227.47740173 542.24200439]
[234.98129272 555.24859619]
[240.98168945 569.01361084]
[245.40313721 583.36389160]
[248.19001770 598.11895752]
[249.30731201 613.09332275]
[248.74093628 628.09863281]
[246.49803162 642.94616699]
[242.60681152 657.44921875]
[237.11619568 671.42541504]
[230.09524536 684.69891357]
[221.63224792 697.10284424]
[211.83364868 708.48126221]
[200.82264709 718.69091797]
[188.73774719 727.60357666]
[175.73092651 735.10705566]
[161.96574402 741.10705566]
[147.61532593 745.52807617]
[132.86012268 748.31451416]
[117.88572693 749.43139648]
[102.88043976 748.86456299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 181]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[45 166]
[46 165]
[47 164]
[48 163]
[52 162]
[53 161]
[54 160]
[55 159]
[56 155]
[57 152]
[58 151]
[59 150]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 137]
[78 136]
[79 134]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[92 126]
[94 125]
[95 124]
[96 123]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
