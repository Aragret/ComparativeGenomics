%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[78.36886597 913.60461426]
[63.38853073 912.77508545]
[48.47009277 911.18170166]
[33.65247345 908.82867432]
[18.97433281 905.72210693]
[4.47396135 901.87011719]
[-9.81080914 897.28271484]
[-23.84271240 891.97192383]
[-37.58513641 885.95159912]
[-51.00223541 879.23742676]
[-64.05900574 871.84692383]
[-76.72137451 863.79937744]
[-88.95631409 855.11578369]
[-100.73190308 845.81878662]
[-112.01742554 835.93267822]
[-122.78342438 825.48321533]
[-133.00183105 814.49761963]
[-142.64596558 803.00457764]
[-151.69068909 791.03417969]
[-160.11239624 778.61749268]
[-167.88911438 765.78698730]
[-175.00054932 752.57617188]
[-181.42814636 739.01947021]
[-187.15515137 725.15222168]
[-192.16662598 711.01068115]
[-196.44947815 696.63165283]
[-199.99253845 682.05273438]
[-202.78656006 667.31188965]
[-204.82426453 652.44763184]
[-206.10034180 637.49871826]
[-206.61145020 622.50415039]
[-206.35624695 607.50299072]
[-205.33541870 592.53448486]
[-203.55162048 577.63763428]
[-201.00949097 562.85125732]
[-197.71568298 548.21398926]
[-193.67878723 533.76403809]
[-188.90933228 519.53900146]
[-183.41975403 505.57608032]
[-177.22439575 491.91168213]
[-170.33938599 478.58145142]
[-162.78271484 465.62014771]
[-154.57408142 453.06158447]
[-145.73492432 440.93856812]
[-136.28826904 429.28268433]
[-126.25878906 418.12435913]
[-115.67263794 407.49273682]
[-104.55743408 397.41546631]
[-92.94218445 387.91891479]
[-80.85717773 379.02783203]
[-68.33395386 370.76541138]
[-55.40518570 363.15322876]
[-42.10459518 356.21112061]
[-28.46688461 349.95718384]
[-14.52763557 344.40777588]
[-0.32321221 339.57736206]
[14.10932636 335.47851562]
[28.73232841 332.12197876]
[43.50764465 329.51644897]
[58.39672470 327.66879272]
[73.36072540 326.58377075]
[88.36061096 326.26422119]
[88.80721283 311.27087402]
[89.25382233 296.27752686]
[89.70042419 281.28417969]
[90.14703369 266.29083252]
[90.59364319 251.29748535]
[91.04024506 236.30412292]
[83.68531036 223.35212708]
[91.83006287 209.78845215]
[92.27667236 194.79508972]
[92.50000000 179.79675293]
[92.50000000 164.79675293]
[92.50000000 149.79675293]
[92.50000000 134.79675293]
[92.50000000 119.79676056]
[80.56659698 108.39669037]
[80.44373322 91.89357758]
[92.20608521 80.31710052]
[91.98275757 65.31876373]
[91.75942993 50.32042313]
[91.53610229 35.32208633]
[79.37482452 44.10293198]
[64.88692474 40.21694565]
[58.75235367 26.52873993]
[65.49328613 13.12874508]
[80.14055634 9.89494038]
[91.89601135 19.20968437]
[92.78882599 4.23627853]
[93.68164062 -10.73712730]
[94.57446289 -25.71053314]
[95.46727753 -40.68393707]
[96.36009216 -55.65734482]
[97.25290680 -70.63075256]
[98.14572144 -85.60415649]
[98.59233093 -100.59750366]
[98.59233093 -115.59750366]
[90.85502625 -129.39767456]
[98.59233093 -142.12495422]
[84.81845856 -148.70091248]
[75.26853180 -160.60728455]
[71.83869171 -175.48004150]
[75.20993805 -190.36619568]
[84.71290588 -202.31007385]
[98.46076965 -208.94023132]
[113.72388458 -208.94023132]
[127.47175598 -202.31007385]
[136.97471619 -190.36619568]
[140.34596252 -175.48004150]
[136.91612244 -160.60728455]
[127.36619568 -148.70091248]
[113.59233093 -142.12495422]
[121.32962799 -129.39767456]
[113.59233093 -115.59750366]
[113.59233093 -100.59750366]
[115.47686005 -98.52224731]
[116.65290070 -95.57546234]
[116.78438568 -92.02326965]
[115.63769531 -88.24839783]
[113.11912537 -84.71134186]
[112.22631073 -69.73793793]
[111.33349609 -54.76453018]
[110.44068146 -39.79112244]
[109.54786682 -24.81771660]
[108.65505219 -9.84431076]
[107.76222992 5.12909460]
[106.86941528 20.10250092]
[106.53443909 35.09875870]
[106.75776672 50.09709549]
[106.98109436 65.09543610]
[107.20442200 80.09377289]
[117.28491974 87.77734375]
[121.16924286 99.84239960]
[117.46498108 111.96395111]
[107.50000000 119.79676056]
[107.50000000 134.79675293]
[107.50000000 149.79675293]
[107.50000000 164.79675293]
[107.50000000 179.79675293]
[110.46956635 185.70381165]
[110.07013702 191.37280273]
[107.27001953 195.24169922]
[106.82341766 210.23504639]
[114.14640045 224.25947571]
[106.03359222 236.75073242]
[105.58699036 251.74407959]
[105.14038086 266.73742676]
[104.69377899 281.73077393]
[104.24716949 296.72412109]
[103.80056763 311.71749878]
[103.35395813 326.71084595]
[118.30822754 327.92260742]
[133.18112183 329.89639282]
[147.93382263 332.62698364]
[162.52786255 336.10733032]
[176.92515564 340.32830811]
[191.08813477 345.27893066]
[204.97985840 350.94625854]
[218.56408691 357.31549072]
[231.80538940 364.37005615]
[244.66918945 372.09152222]
[257.12194824 380.45974731]
[269.13119507 389.45291138]
[280.66555786 399.04754639]
[291.69497681 409.21862793]
[302.19067383 419.93957520]
[312.12524414 431.18249512]
[321.47277832 442.91799927]
[330.20892334 455.11547852]
[338.31082153 467.74313354]
[345.75741577 480.76800537]
[352.52920532 494.15609741]
[358.60858154 507.87249756]
[363.97964478 521.88146973]
[368.62838745 536.14636230]
[372.54272461 550.63000488]
[375.71237183 565.29467773]
[378.12911987 580.10205078]
[379.78662109 595.01348877]
[380.68060303 609.99011230]
[380.80865479 624.99285889]
[380.17053223 639.98254395]
[378.76785278 654.92016602]
[376.60424805 669.76660156]
[373.68542480 684.48321533]
[370.01895142 699.03161621]
[365.61444092 713.37384033]
[360.48330688 727.47241211]
[354.63900757 741.29058838]
[348.09677124 754.79235840]
[340.87365723 767.94250488]
[332.98849487 780.70660400]
[324.46188354 793.05145264]
[315.31607056 804.94488525]
[305.57489014 816.35571289]
[295.26376343 827.25433350]
[284.40960693 837.61224365]
[273.04074097 847.40240479]
[261.18679810 856.59924316]
[248.87870789 865.17889404]
[236.14860535 873.11883545]
[223.02967834 880.39843750]
[209.55616760 886.99865723]
[195.76322937 892.90234375]
[181.68682861 898.09405518]
[167.36369324 902.56018066]
[152.83120728 906.28918457]
[138.12727356 909.27130127]
[123.29025269 911.49871826]
[108.35884857 912.96557617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[70 143]
[71 142]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[79 131]
[80 130]
[81 129]
[82 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 115]
[97 114]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
