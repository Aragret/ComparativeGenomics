%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[25.41419601 932.60406494]
[10.41307449 932.46362305]
[-4.57214928 931.75903320]
[-19.52026558 930.49127197]
[-34.41011429 928.66210938]
[-49.22062302 926.27416992]
[-63.93082809 923.33087158]
[-78.51990509 919.83624268]
[-92.96721649 915.79541016]
[-107.25229645 911.21392822]
[-121.35494232 906.09838867]
[-135.25518799 900.45599365]
[-148.93334961 894.29473877]
[-162.37008667 887.62329102]
[-175.54635620 880.45117188]
[-188.44352722 872.78851318]
[-201.04333496 864.64617920]
[-213.32795715 856.03564453]
[-225.27999878 846.96911621]
[-236.88255310 837.45941162]
[-248.11918640 827.52001953]
[-258.97399902 817.16497803]
[-269.43161011 806.40899658]
[-279.47723389 795.26721191]
[-289.09664917 783.75549316]
[-298.27624512 771.89007568]
[-307.00305176 759.68774414]
[-315.26467896 747.16577148]
[-323.04943848 734.34197998]
[-330.34631348 721.23437500]
[-337.14498901 707.86157227]
[-343.43585205 694.24255371]
[-349.20996094 680.39648438]
[-354.45916748 666.34301758]
[-359.17602539 652.10211182]
[-363.35391235 637.69378662]
[-366.98684692 623.13854980]
[-370.06970215 608.45697021]
[-372.59814453 593.66979980]
[-374.56857300 578.79797363]
[-375.97821045 563.86254883]
[-376.82507324 548.88470459]
[-377.10791016 533.88562012]
[-376.82635498 518.88647461]
[-375.98083496 503.90853882]
[-374.57250977 488.97299194]
[-372.60336304 474.10101318]
[-370.07620239 459.31362915]
[-366.99462891 444.63177490]
[-363.36294556 430.07620239]
[-359.18634033 415.66754150]
[-354.47070312 401.42620850]
[-349.22271729 387.37228394]
[-343.44982910 373.52575684]
[-337.16015625 359.90615845]
[-330.36264038 346.53277588]
[-323.06689453 333.42453003]
[-315.28326416 320.60003662]
[-307.02273560 308.07736206]
[-298.29699707 295.87429810]
[-289.11843872 284.00805664]
[-279.50003052 272.49548340]
[-269.45535278 261.35284424]
[-258.99868774 250.59593201]
[-248.14477539 240.23995972]
[-236.90901184 230.29959106]
[-225.30729675 220.78887939]
[-213.35604858 211.72129822]
[-201.07217407 203.10968018]
[-188.47306824 194.96621704]
[-175.57656860 187.30244446]
[-162.40092468 180.12918091]
[-148.96476746 173.45660400]
[-135.28713989 167.29414368]
[-121.38739014 161.65052795]
[-107.28519440 156.53375244]
[-93.00051117 151.95104980]
[-78.55355835 147.90892029]
[-63.96477890 144.41305542]
[-49.25482941 141.46842957]
[-34.44453049 139.07920837]
[-19.55484200 137.24876404]
[-4.60683680 135.97967529]
[10.37832546 135.27377319]
[25.37943649 135.13203430]
[40.37525940 135.55465698]
[55.34457779 136.54104614]
[70.26619720 138.08982849]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[91.51272583 21.92022133]
[79.06248474 13.45350838]
[68.64492798 2.58299041]
[60.71546173 -10.21612072]
[55.62073135 -24.38430405]
[53.58345032 -39.30218506]
[54.69268799 -54.31761932]
[58.89995193 -68.77420044]
[66.02131653 -82.03993988]
[75.74546051 -93.53491974]
[87.64729309 -102.75663757]
[101.20652008 -109.30194855]
[115.83038330 -112.88471985]
[130.87959290 -113.34834290]
[145.69625854 -110.67253113]
[159.63267517 -104.97426605]
[172.07958984 -96.50265503]
[182.49285889 -85.62804413]
[190.41729736 -72.82581329]
[195.50645447 -58.65562820]
[197.53785706 -43.73694611]
[196.42271423 -28.72194862]
[192.20976257 -14.26702690]
[185.08319092 -1.00408828]
[175.35452271 10.48706818]
[163.44905090 19.70409966]
[149.88725281 26.24407578]
[135.26197815 29.82109833]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[114.53245544 146.08406067]
[129.05322266 149.85243225]
[143.42198181 154.16433716]
[157.61836243 159.01365662]
[171.62229919 164.39355469]
[185.41395569 170.29640198]
[198.97381592 176.71383667]
[212.28268433 183.63679504]
[225.32173157 191.05546570]
[238.07250977 198.95935059]
[250.51693726 207.33724976]
[262.63745117 216.17733765]
[274.41683960 225.46707153]
[285.83847046 235.19331360]
[296.88616943 245.34228516]
[307.54428101 255.89965820]
[317.79772949 266.85043335]
[327.63204956 278.17916870]
[337.03323364 289.86981201]
[345.98803711 301.90579224]
[354.48376465 314.27008057]
[362.50842285 326.94519043]
[370.05059814 339.91317749]
[377.09967041 353.15570068]
[383.64559937 366.65399170]
[389.67919922 380.38897705]
[395.19186401 394.34115601]
[400.17581177 408.49084473]
[404.62399292 422.81799316]
[408.53012085 437.30230713]
[411.88867188 451.92330933]
[414.69485474 466.66030884]
[416.94470215 481.49240112]
[418.63507080 496.39865112]
[419.76354980 511.35794067]
[420.32852173 526.34906006]
[420.32922363 541.35083008]
[419.76562500 556.34204102]
[418.63851929 571.30139160]
[416.94952393 586.20782471]
[414.70101929 601.04010010]
[411.89617920 615.77734375]
[408.53897095 630.39868164]
[404.63418579 644.88336182]
[400.18731689 659.21093750]
[395.20465088 673.36102295]
[389.69326782 687.31378174]
[383.66094971 701.04925537]
[377.11621094 714.54815674]
[370.06838989 727.79132080]
[362.52737427 740.76000977]
[354.50390625 753.43585205]
[346.00930786 765.80096436]
[337.05560303 777.83776855]
[327.65545654 789.52923584]
[317.82220459 800.85888672]
[307.56976318 811.81060791]
[296.91259766 822.36895752]
[285.86584473 832.51892090]
[274.44509888 842.24621582]
[262.66656494 851.53704834]
[250.54685974 860.37823486]
[238.10319519 868.75726318]
[225.35314941 876.66229248]
[212.31478882 884.08215332]
[199.00654602 891.00634766]
[185.44726562 897.42504883]
[171.65615845 903.32916260]
[157.65270996 908.71032715]
[143.45677185 913.56097412]
[129.08842468 917.87414551]
[114.56799316 921.64385986]
[99.91604614 924.86468506]
[85.15332031 927.53216553]
[70.30069733 929.64239502]
[55.37921524 931.19244385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 134]
[90 133]
[91 132]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
