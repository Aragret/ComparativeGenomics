%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[18.19893646 972.02020264]
[3.19731092 972.14886475]
[-11.79668331 971.65344238]
[-26.75708961 970.53466797]
[-41.65800476 968.79455566]
[-56.47363663 966.43609619]
[-71.17833710 963.46331787]
[-85.74664307 959.88146973]
[-100.15334320 955.69671631]
[-114.37348938 950.91625977]
[-128.38247681 945.54840088]
[-142.15603638 939.60241699]
[-155.67031860 933.08862305]
[-168.90194702 926.01831055]
[-181.82801819 918.40374756]
[-194.42613220 910.25799561]
[-206.67449951 901.59527588]
[-218.55189514 892.43054199]
[-230.03778076 882.77960205]
[-241.11225891 872.65930176]
[-251.75616455 862.08703613]
[-261.95104980 851.08111572]
[-271.67929077 839.66070557]
[-280.92404175 827.84545898]
[-289.66931152 815.65588379]
[-297.89990234 803.11303711]
[-305.60162354 790.23870850]
[-312.76113892 777.05511475]
[-319.36602783 763.58514404]
[-325.40487671 749.85205078]
[-330.86721802 735.87963867]
[-335.74359131 721.69207764]
[-340.02554321 707.31396484]
[-343.70571899 692.77020264]
[-346.77767944 678.08587646]
[-349.23614502 663.28649902]
[-351.07687378 648.39770508]
[-352.29663086 633.44519043]
[-352.89334106 618.45489502]
[-352.86593628 603.45275879]
[-352.21450806 588.46472168]
[-350.94018555 573.51672363]
[-349.04510498 558.63476562]
[-346.53262329 543.84442139]
[-343.40707397 529.17144775]
[-339.67382812 514.64123535]
[-335.33938599 500.27883911]
[-330.41125488 486.10919189]
[-324.89794922 472.15682983]
[-318.80899048 458.44586182]
[-312.15496826 445.00009155]
[-304.94738770 431.84271240]
[-297.19869995 418.99658203]
[-288.92236328 406.48388672]
[-280.13265991 394.32632446]
[-270.84484863 382.54489136]
[-261.07495117 371.16006470]
[-250.83995056 360.19146729]
[-240.15753174 349.65814209]
[-229.04617310 339.57830811]
[-217.52513123 329.96939087]
[-205.61434937 320.84808350]
[-193.33444214 312.23010254]
[-180.70666504 304.13043213]
[-167.75288391 296.56307983]
[-154.49552917 289.54113770]
[-140.95753479 283.07675171]
[-127.16236877 277.18109131]
[-113.13388062 271.86444092]
[-98.89637756 267.13592529]
[-84.47449493 263.00378418]
[-69.89320374 259.47512817]
[-55.17775345 256.55609131]
[-40.35360718 254.25172424]
[-25.44643784 252.56602478]
[-10.48204708 251.50189209]
[4.51365614 251.06117249]
[19.51471329 251.24464417]
[34.49515152 252.05197144]
[49.42903900 253.48176575]
[64.29052734 255.53155518]
[66.95632172 240.77033997]
[69.62211609 226.00912476]
[72.28791046 211.24789429]
[74.95370483 196.48667908]
[77.61949921 181.72546387]
[80.28530121 166.96424866]
[82.95109558 152.20303345]
[85.61688995 137.44181824]
[88.28268433 122.68059540]
[90.94847870 107.91938019]
[93.39421082 93.12010956]
[87.78964233 78.32485962]
[97.32932281 66.88615417]
[99.55443573 52.05211258]
[101.77955627 37.21807098]
[104.00466919 22.38402557]
[89.97489166 16.89649963]
[77.51824188 8.42420387]
[67.25955963 -2.60789132]
[59.71340561 -15.64642239]
[55.25829315 -30.03738213]
[54.11769104 -45.05892563]
[56.34880829 -59.95757675]
[61.83973694 -73.98603058]
[70.31504822 -86.44062042]
[81.34963226 -96.69663239]
[94.38999176 -104.23962402]
[108.78202820 -108.69125366]
[123.80384827 -109.82821655]
[138.70196533 -107.59349060]
[152.72908020 -102.09915924]
[165.18161011 -93.62083435]
[175.43495178 -82.58376312]
[182.97479248 -69.54158020]
[187.42292786 -55.14846039]
[188.55624390 -40.12636948]
[186.31791687 -25.22879791]
[180.82019043 -11.20300865]
[172.33883667 1.24747288]
[161.29928589 11.49813557]
[148.25527954 19.03480911]
[133.86108398 23.47945976]
[118.83871460 24.60914421]
[116.61359406 39.44318771]
[114.38848114 54.27722931]
[112.16336060 69.11127472]
[117.92707825 82.84549713]
[108.22824860 95.34522247]
[110.31015015 100.15975189]
[109.54635620 105.79801178]
[105.70969391 110.58517456]
[103.04389954 125.34638977]
[100.37810516 140.10760498]
[97.71231079 154.86882019]
[95.04651642 169.63005066]
[92.38072205 184.39126587]
[89.71492767 199.15248108]
[87.04912567 213.91369629]
[84.38333130 228.67491150]
[81.71753693 243.43612671]
[79.05174255 258.19735718]
[93.69142151 261.47531128]
[108.18207550 265.35943604]
[122.49861145 269.84298706]
[136.61624146 274.91818237]
[150.51054382 280.57626343]
[164.15744019 286.80743408]
[177.53330994 293.60092163]
[190.61502075 300.94491577]
[203.37989807 308.82675171]
[215.80584717 317.23275757]
[227.87136841 326.14840698]
[239.55557251 335.55822754]
[250.83822632 345.44595337]
[261.69979858 355.79446411]
[272.12149048 366.58584595]
[282.08523560 377.80139160]
[291.57382202 389.42172241]
[300.57080078 401.42672729]
[309.06060791 413.79556274]
[317.02853394 426.50686646]
[324.46081543 439.53863525]
[331.34454346 452.86828613]
[337.66781616 466.47277832]
[343.41967773 480.32849121]
[348.59020996 494.41149902]
[353.17041016 508.69741821]
[357.15237427 523.16149902]
[360.52920532 537.77868652]
[363.29507446 552.52368164]
[365.44519043 567.37097168]
[366.97579956 582.29486084]
[367.88427734 597.26953125]
[368.16903687 612.26898193]
[367.82958984 627.26733398]
[366.86654663 642.23858643]
[365.28155518 657.15679932]
[363.07736206 671.99615479]
[360.25775146 686.73095703]
[356.82766724 701.33575439]
[352.79299927 715.78521729]
[348.16073608 730.05432129]
[342.93893433 744.11840820]
[337.13659668 757.95306396]
[330.76376343 771.53442383]
[323.83151245 784.83886719]
[316.35177612 797.84344482]
[308.33758545 810.52563477]
[299.80273438 822.86346436]
[290.76205444 834.83557129]
[281.23120117 846.42126465]
[271.22662354 857.60040283]
[260.76565552 868.35375977]
[249.86643982 878.66259766]
[238.54782104 888.50915527]
[226.82940674 897.87628174]
[214.73146057 906.74792480]
[202.27494812 915.10858154]
[189.48143005 922.94378662]
[176.37304688 930.24011230]
[162.97250366 936.98474121]
[149.30297852 943.16613770]
[135.38815308 948.77355957]
[121.25212097 953.79730225]
[106.91933441 958.22863770]
[92.41462708 962.05987549]
[77.76309204 965.28448486]
[62.99010468 967.89678955]
[48.12123489 969.89227295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[92 129]
[94 127]
[95 126]
[96 125]
[97 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
