%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[166.24971008 427.77484131]
[177.10984802 417.35641479]
[189.79402161 409.25714111]
[184.33865356 395.28433228]
[178.88330078 381.31152344]
[173.42794800 367.33874512]
[162.47891235 362.19622803]
[157.81961060 350.59991455]
[162.45391846 338.56304932]
[157.20719910 324.51058960]
[151.96047974 310.45809937]
[137.84216309 300.03503418]
[141.04061890 281.90078735]
[135.58526611 267.92797852]
[130.12991333 253.95520020]
[124.76902008 248.86769104]
[124.69905090 239.73353577]
[119.45233154 225.68106079]
[114.20561218 211.62858582]
[108.95889282 197.57611084]
[106.34029388 212.34577942]
[98.33380890 225.03025818]
[86.12713623 233.74789429]
[71.53106689 237.20547485]
[56.71084595 234.89007568]
[43.86495972 227.14518738]
[34.89902496 215.11972046]
[31.14308167 200.59756470]
[33.15430069 185.73301697]
[40.63433075 172.73112488]
[52.47355270 163.52064514]
[66.91568756 159.46791077]
[81.81833649 161.17411804]
[94.97077179 168.38613892]
[104.42102051 180.03245544]
[94.88134766 168.59375000]
[100.48590851 153.79850769]
[98.26078796 138.96446228]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[81.59120941 82.12536621]
[87.14981079 68.30685425]
[84.70407867 53.50757980]
[82.25835419 38.70830917]
[79.81262970 23.90903854]
[77.36689758 9.10976887]
[67.48303986 -3.24417567]
[73.04164124 -17.06268692]
[70.16876221 -20.31853485]
[68.63557434 -23.95362282]
[68.39679718 -27.50022507]
[69.25988770 -30.55336761]
[70.91828918 -32.81341934]
[61.78727722 -45.73375702]
[68.15851593 -59.19691849]
[66.59799194 -74.11552429]
[65.03746796 -89.03412628]
[63.47694397 -103.95272827]
[53.96701431 -112.66616821]
[52.97438049 -125.12403870]
[60.48748779 -134.60453796]
[59.14925385 -149.54472351]
[57.81101990 -164.48490906]
[56.47278595 -179.42507935]
[55.13455200 -194.36526489]
[53.79631805 -209.30545044]
[38.78670883 -209.27400208]
[23.83147621 -210.55087280]
[9.04443932 -213.12631226]
[-5.46186018 -216.98074341]
[-19.57701874 -222.08482361]
[-33.19361115 -228.39970398]
[-46.20800400 -235.87733459]
[-58.52114487 -244.46080017]
[-70.03932953 -254.08477783]
[-80.67488861 -264.67599487]
[-90.34687805 -276.15390015]
[-98.98169708 -288.43109131]
[-106.51361084 -301.41412354]
[-112.88531494 -315.00424194]
[-118.04830170 -329.09796143]
[-121.96327972 -343.58804321]
[-124.60045624 -358.36419678]
[-125.93975830 -373.31396484]
[-125.97100067 -388.32354736]
[-124.69393158 -403.27877808]
[-122.11827850 -418.06576538]
[-118.26364899 -432.57202148]
[-113.15937042 -446.68710327]
[-106.84429169 -460.30361938]
[-99.36647797 -473.31790161]
[-90.78283691 -485.63092041]
[-81.15870667 -497.14898682]
[-70.56732178 -507.78439331]
[-59.08929825 -517.45623779]
[-46.81198883 -526.09088135]
[-33.82883453 -533.62261963]
[-20.23864365 -539.99407959]
[-6.14485168 -545.15686035]
[8.34527874 -549.07165527]
[23.12146759 -551.70861816]
[38.07125473 -553.04772949]
[53.08086777 -553.07873535]
[68.03606415 -551.80145264]
[82.82302856 -549.22564697]
[97.32922363 -545.37078857]
[111.44423676 -540.26629639]
[125.06065369 -533.95104980]
[138.07482910 -526.47302246]
[150.38774109 -517.88922119]
[161.90565491 -508.26495361]
[172.54090881 -497.67340088]
[182.21258545 -486.19525146]
[190.84704590 -473.91781616]
[198.37860107 -460.93457031]
[204.74992371 -447.34426880]
[209.91250610 -433.25042725]
[213.82708740 -418.76022339]
[216.46385193 -403.98400879]
[217.80273438 -389.03417969]
[217.83355713 -374.02459717]
[216.55606079 -359.06939697]
[213.97999573 -344.28247070]
[210.12495422 -329.77633667]
[205.02027893 -315.66140747]
[198.70481873 -302.04507446]
[191.22663879 -289.03097534]
[182.64266968 -276.71820068]
[173.01820374 -265.20043945]
[162.42652893 -254.56532288]
[150.94822693 -244.89381409]
[138.67068481 -236.25950623]
[125.68730927 -228.72813416]
[112.09694672 -222.35700989]
[98.00300598 -217.19461060]
[83.51276398 -213.28024292]
[68.73650360 -210.64369202]
[70.07473755 -195.70350647]
[71.41297150 -180.76332092]
[72.75120544 -165.82313538]
[74.08943939 -150.88294983]
[75.42767334 -135.94276428]
[86.28189850 -122.15317535]
[78.39554596 -105.51325226]
[79.95606995 -90.59465027]
[81.51659393 -75.67604828]
[83.07711792 -60.75743866]
[92.09651184 -48.90417862]
[85.83689880 -34.37394333]
[87.84091187 -19.50841522]
[97.54983521 -8.21301365]
[92.16616821 6.66404104]
[94.61190033 21.46331215]
[97.05762482 36.26258087]
[99.50334930 51.06185532]
[101.94908142 65.86112213]
[111.65800476 77.15652466]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[113.09483337 136.73934937]
[115.31995392 151.57339478]
[125.01878357 164.07312012]
[119.25506592 177.80734253]
[123.01136017 192.32940674]
[128.25808716 206.38186646]
[133.50480652 220.43434143]
[138.75152588 234.48681641]
[144.10270691 248.49983215]
[149.55805969 262.47262573]
[155.01341248 276.44543457]
[166.49122620 282.32952881]
[170.74736023 294.07980347]
[166.01295471 305.21139526]
[171.25965881 319.26385498]
[176.50637817 333.31631470]
[190.97802734 344.70288086]
[187.40074158 361.88339233]
[192.85609436 375.85617065]
[198.31146240 389.82897949]
[203.76681519 403.80175781]
[218.58331299 401.16403198]
[233.62969971 401.46786499]
[248.32765198 404.70153809]
[262.11218262 410.74078369]
[274.45349121 419.35348511]
[284.87719727 430.20855713]
[292.98263550 442.88879395]
[298.45825195 456.90676880]
[301.09356689 471.72369385]
[300.78732300 486.77005005]
[297.55126953 501.46746826]
[291.50976562 515.25103760]
[282.89508057 527.59094238]
[272.03833008 538.01287842]
[259.35678101 546.11627197]
[245.33790588 551.58959961]
[230.52055359 554.22253418]
[215.47425842 553.91387939]
[200.77735901 550.67541504]
[186.99478149 544.63171387]
[174.65626526 536.01501465]
[164.23608398 525.15655518]
[156.13475037 512.47369385]
[150.66368103 498.45394897]
[148.03314209 483.63616943]
[148.34426880 468.58993530]
[151.58508301 453.89355469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[6 180]
[9 178]
[10 177]
[11 176]
[13 173]
[14 172]
[15 171]
[17 170]
[18 169]
[19 168]
[20 167]
[35 166]
[37 164]
[38 163]
[39 162]
[40 161]
[41 159]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[49 151]
[54 150]
[56 148]
[57 147]
[58 146]
[59 145]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
