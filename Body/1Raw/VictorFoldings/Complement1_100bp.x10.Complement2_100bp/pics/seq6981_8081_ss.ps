%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[101.28923798 567.66455078]
[88.51229095 575.57702637]
[74.69872284 581.49670410]
[60.15713120 585.29138184]
[45.21237183 586.87628174]
[30.19832420 586.21600342]
[15.45040512 583.32519531]
[1.29808819 578.26855469]
[-11.94245815 571.15905762]
[-23.97543526 562.15539551]
[-34.53202057 551.45886230]
[-43.37637711 539.30834961]
[-50.31092072 525.97534180]
[-55.18072891 511.75762939]
[-57.87700653 496.97293091]
[-58.33952332 481.95147705]
[-56.55794144 467.02890015]
[-52.57206345 452.53854370]
[-46.47093582 438.80413818]
[-38.39085770 426.13250732]
[-28.51234627 414.80676270]
[-17.05608749 405.07989502]
[-4.27801847 397.16921997]
[9.53639317 391.25149536]
[24.07852936 387.45886230]
[39.02351379 385.87609863]
[54.03746796 386.53857422]
[56.92274094 371.81866455]
[59.80801010 357.09878540]
[58.00981522 349.93020630]
[62.84737396 342.18194580]
[65.95148468 327.50665283]
[69.05559540 312.83132935]
[72.15970612 298.15603638]
[67.22367859 284.10308838]
[77.64931488 272.20281982]
[80.75342560 257.52752686]
[82.75743866 242.66198730]
[83.65025330 227.68858337]
[84.54306793 212.71517944]
[81.80326843 205.85112000]
[85.56227875 197.52600098]
[86.67793274 182.56753540]
[87.79357910 167.60908508]
[88.90922546 152.65063477]
[90.02487183 137.69218445]
[81.56427765 122.31735992]
[92.05820465 107.18596649]
[90.94255066 92.22751617]
[87.83844757 77.55221558]
[77.41281128 65.65193176]
[82.34883881 51.59899521]
[79.24472809 36.92369461]
[76.14061737 22.24839020]
[73.03650665 7.57308817]
[68.65215302 21.91803169]
[59.68130875 33.93984604]
[47.17787170 42.22621918]
[32.61072159 45.80367661]
[17.69120026 44.25194550]
[4.17203569 37.75331497]
[-6.35855436 27.07124329]
[-12.66344643 13.46064568]
[-14.00194836 -1.47951508]
[-10.21681404 -15.99408531]
[-1.75271690 -28.37790871]
[10.39598846 -37.17614365]
[24.80208588 -41.35518646]
[39.77315903 -40.42407990]
[53.55042267 -34.49221802]
[64.51533508 -24.25646591]
[71.38022614 -10.91781330]
[71.82682800 -25.91116333]
[72.27343750 -40.90451431]
[72.38510132 -55.90409851]
[72.16177368 -70.90243530]
[71.60356140 -85.89204407]
[70.71074677 -100.86544800]
[69.81793213 -115.83885956]
[61.27294922 -129.15402222]
[68.23899078 -142.31927490]
[67.34617615 -157.29267883]
[66.45336151 -172.26608276]
[65.33771515 -187.22453308]
[63.99947739 -202.16471863]
[62.66124344 -217.10490417]
[47.68562317 -218.53507996]
[33.22784805 -222.69290161]
[19.78034973 -229.43673706]
[7.80114269 -238.53691101]
[-2.30176544 -249.68348694]
[-10.18427372 -262.49679565]
[-15.57790565 -276.54040527]
[-18.29895782 -291.33602905]
[-18.25475121 -306.37973022]
[-15.44679165 -321.15911865]
[-9.97071648 -335.17077637]
[-2.01304030 -347.93753052]
[8.15520191 -359.02453613]
[20.18768501 -368.05416870]
[33.67458344 -374.71884155]
[48.15654373 -378.79162598]
[63.14031219 -380.13375854]
[78.11554718 -378.69955444]
[92.57219696 -374.53784180]
[106.01788330 -367.79037476]
[117.99463654 -358.68695068]
[128.09454346 -347.53768921]
[135.97358704 -334.72225952]
[141.36343384 -320.67718506]
[144.08050537 -305.88082886]
[144.03224182 -290.83712769]
[141.22029114 -276.05850220]
[135.74044800 -262.04830933]
[127.77932739 -249.28369141]
[117.60809326 -238.19944763]
[105.57318115 -229.17306519]
[92.08448792 -222.51200867]
[77.60142517 -218.44313049]
[78.93965912 -203.50294495]
[80.27789307 -188.56277466]
[83.30332947 -184.86738586]
[84.03946686 -179.23222351]
[81.42676544 -173.15888977]
[82.31958008 -158.18548584]
[83.21239471 -143.21208191]
[91.69351959 -130.96791077]
[84.79133606 -116.73167419]
[85.68415833 -101.75826263]
[86.57697296 -86.78485870]
[88.95728302 -84.18362427]
[90.19593048 -80.30021667]
[89.70399475 -75.68380737]
[87.16011047 -71.12576294]
[87.38343811 -56.12742615]
[89.64523315 -53.42249680]
[90.70923615 -49.48765945]
[90.01165771 -44.89781189]
[87.26678467 -40.45790863]
[86.82018280 -25.46455765]
[86.37357330 -10.47120667]
[87.71180725 4.46897793]
[90.81591797 19.14428139]
[93.92002869 33.81958389]
[97.02413940 48.49488449]
[107.22774506 59.34549332]
[102.51374817 74.44810486]
[105.61785889 89.12340546]
[109.72597504 74.69692230]
[118.03880310 62.21105576]
[129.76402283 52.85587692]
[143.78404236 47.52305984]
[158.76257324 46.72089767]
[173.27197266 50.52584457]
[185.92926025 58.57524109]
[195.52806091 70.10186768]
[201.15345764 84.00707245]
[202.26928711 98.96551514]
[198.76918030 113.55144501]
[190.98675537 126.37461853]
[179.66377258 136.21281433]
[165.87948608 142.12832642]
[150.94770813 143.55732727]
[136.29164124 140.36360168]
[123.30822754 132.85156250]
[113.23493958 121.73719788]
[107.03160858 108.07878113]
[114.99356079 118.22620392]
[113.94168091 130.67919922]
[104.98332977 138.80783081]
[103.86768341 153.76628113]
[102.75202942 168.72473145]
[101.63638306 183.68319702]
[100.52073669 198.64164734]
[99.51647186 213.60798645]
[98.62365723 228.58139038]
[97.73084259 243.55479431]
[107.28539276 231.99147034]
[121.30673218 226.66210938]
[136.12971497 228.95979309]
[147.87963867 238.28392029]
[153.48510742 252.19717407]
[151.48086548 267.06268311]
[142.39082336 278.99459839]
[128.59109497 284.87399292]
[113.68888092 283.16400146]
[101.57959747 274.31158447]
[95.42872620 260.63162231]
[92.32461548 275.30691528]
[97.03861237 290.40954590]
[86.83500671 301.26013184]
[83.73089600 315.93545532]
[80.62678528 330.61074829]
[77.52267456 345.28604126]
[74.52790070 359.98403931]
[71.64263153 374.70394897]
[68.75735474 389.42382812]
[82.91039276 394.47845459]
[96.15195465 401.58612061]
[108.18621063 410.58801270]
[118.74432373 421.28305054]
[127.59040833 433.43231201]
[134.52685547 446.76437378]
[139.39868164 460.98135376]
[142.09706116 475.76568604]
[142.56172180 490.78707886]
[140.78227234 505.70989990]
[136.79844666 520.20080566]
[130.69927979 533.93609619]
[122.62100983 546.60888672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 197]
[28 196]
[29 195]
[31 194]
[32 193]
[33 192]
[34 191]
[36 189]
[37 188]
[38 177]
[39 176]
[40 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[48 167]
[49 148]
[50 147]
[52 145]
[53 144]
[54 143]
[55 142]
[72 141]
[73 140]
[74 139]
[75 135]
[76 134]
[77 130]
[78 129]
[79 128]
[81 126]
[82 125]
[83 124]
[84 121]
[85 120]
[86 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
