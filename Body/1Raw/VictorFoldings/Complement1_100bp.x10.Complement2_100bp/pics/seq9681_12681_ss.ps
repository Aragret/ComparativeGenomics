%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[47.11764908 239.84497070]
[52.79628754 253.74858093]
[56.75758743 268.23532104]
[58.94377899 283.09390259]
[59.32297897 298.10769653]
[57.88965988 313.05770874]
[54.66472626 327.72595215]
[49.69520569 341.89849854]
[43.05356598 355.36868286]
[34.83666229 367.94006348]
[25.16432381 379.42935181]
[14.17759895 389.66894531]
[2.03670835 398.50952148]
[-11.08129883 405.82220459]
[-24.98512268 411.50033569]
[-39.47200394 415.46109009]
[-54.33068466 417.64672852]
[-69.34447479 418.02536011]
[-84.29444122 416.59149170]
[-98.96255493 413.36599731]
[-113.13491821 408.39593506]
[-126.60485840 401.75381470]
[-139.17594910 393.53643799]
[-150.66485596 383.86364746]
[-160.90403748 372.87655640]
[-169.74417114 360.73532104]
[-177.05636597 347.61706543]
[-182.73396301 333.71301270]
[-186.69416809 319.22598267]
[-188.87925720 304.36721802]
[-189.25732422 289.35342407]
[-187.82289124 274.40350342]
[-184.59686279 259.73550415]
[-179.62628174 245.56333923]
[-172.98364258 232.09364319]
[-164.76579285 219.52287292]
[-155.09259033 208.03431702]
[-144.10510254 197.79554749]
[-131.96354675 188.95587158]
[-118.84500122 181.64416504]
[-104.94075012 175.96708679]
[-90.45357513 172.00741577]
[-75.59472656 169.82289124]
[-60.58090591 169.44537354]
[-45.63105392 170.88037109]
[-30.96317863 174.10694885]
[-16.79118347 179.07806396]
[-3.32174087 185.72120667]
[9.24872780 193.93952942]
[18.90953827 182.46482849]
[28.57034874 170.99012756]
[38.23115921 159.51542664]
[47.89197159 148.04072571]
[57.55278015 136.56602478]
[58.04418564 131.81549072]
[61.52507019 127.32321930]
[67.67608643 124.89907074]
[77.67425537 113.71709442]
[87.67243195 102.53511810]
[97.41839600 91.13265991]
[106.90729523 79.51539612]
[116.39619446 67.89813232]
[125.88509369 56.28086853]
[112.23973846 62.51017761]
[97.58368683 65.70394897]
[82.58369446 65.71688843]
[67.92214966 62.54840088]
[54.26607132 56.34263992]
[42.23670959 47.38192368]
[32.38132477 36.07390213]
[25.14826584 22.93301773]
[20.86659241 8.55709076]
[19.73109055 -6.39986849]
[21.79341698 -21.25741959]
[26.95975304 -35.33964157]
[34.99506378 -48.00588608]
[45.53379440 -58.67992783]
[58.09650421 -66.87616730]
[72.11167145 -72.22172546]
[86.94170380 -74.47342682]
[101.91193390 -73.52881622]
[116.34130859 -69.43088531]
[129.57339478 -62.36605453]
[141.00622559 -52.65572357]
[150.11967468 -40.74164963]
[156.49913025 -27.16584778]
[159.85440063 -12.54592323]
[160.03282166 2.45301557]
[157.02627563 17.14861679]
[150.97154236 30.87232780]
[142.14115906 43.00302124]
[155.41900635 36.02457047]
[168.69685364 29.04611588]
[181.97470093 22.06766510]
[195.25254822 15.08921146]
[208.53039551 8.11075974]
[202.46174622 -5.61310291]
[197.33343506 -19.71535110]
[193.16886902 -34.13163757]
[189.98704529 -48.79618454]
[187.80249023 -63.64208221]
[186.62515259 -78.60158539]
[186.46043396 -93.60644531]
[187.30906677 -108.58819580]
[189.16717529 -123.47846985]
[192.02629089 -138.20933533]
[195.87336731 -152.71357727]
[200.69084167 -166.92501831]
[206.45674133 -180.77879333]
[213.14476013 -194.21171570]
[220.72436523 -207.16249084]
[229.16099548 -219.57200623]
[238.41615295 -231.38366699]
[248.44758606 -242.54354858]
[259.20956421 -253.00076294]
[270.65292358 -262.70758057]
[282.72549438 -271.61968994]
[295.37219238 -279.69647217]
[308.53527832 -286.90103149]
[322.15472412 -293.20053101]
[336.16839600 -298.56619263]
[350.51229858 -302.97354126]
[365.12103271 -306.40249634]
[379.92794800 -308.83740234]
[394.86544800 -310.26712036]
[409.86538696 -310.68515015]
[424.85931396 -310.08956909]
[439.77883911 -308.48312378]
[454.55587769 -305.87310791]
[469.12301636 -302.27145386]
[483.41375732 -297.69461060]
[497.36291504 -292.16342163]
[510.90682983 -285.70315552]
[523.98370361 -278.34326172]
[536.53387451 -270.11734009]
[548.50012207 -261.06292725]
[559.82781982 -251.22132874]
[570.46520996 -240.63746643]
[580.36383057 -229.35960388]
[589.47851562 -217.43920898]
[597.76763916 -204.93069458]
[605.19342041 -191.89109802]
[611.72192383 -178.37994385]
[617.32342529 -164.45887756]
[621.97235107 -150.19140625]
[625.64746094 -135.64263916]
[628.33197021 -120.87896729]
[630.01367188 -105.96773529]
[630.68487549 -90.97698975]
[630.34252930 -75.97513580]
[628.98822021 -61.03060913]
[626.62805176 -46.21161652]
[623.27288818 -31.58576202]
[618.93792725 -17.21978569]
[613.64306641 -3.17923474]
[607.41235352 10.47182560]
[600.27429199 23.67110825]
[592.26141357 36.35838699]
[583.41033936 48.47577286]
[573.76141357 59.96797562]
[563.35864258 70.78256226]
[552.24951172 80.87017822]
[540.48468018 90.18480682]
[528.11785889 98.68394470]
[515.20550537 106.32880402]
[501.80651855 113.08451080]
[487.98199463 118.92024231]
[473.79504395 123.80936432]
[459.31042480 127.72956848]
[444.59414673 130.66297913]
[429.71343994 132.59619141]
[414.73617554 133.52040100]
[399.73068237 133.43138123]
[384.76541138 132.32954407]
[369.90869141 130.21992493]
[355.22827148 127.11213684]
[340.79113770 123.02035522]
[326.66320801 117.96326447]
[312.90890503 111.96393585]
[299.59097290 105.04973602]
[286.77023315 97.25222015]
[274.50515747 88.60696411]
[262.85168457 79.15341949]
[251.86300659 68.93470764]
[241.58926392 57.99746704]
[232.07733154 46.39159775]
[223.37062073 34.17005539]
[215.50885010 21.38860512]
[202.23100281 28.36705780]
[188.95315552 35.34550858]
[175.67530823 42.32396317]
[162.39746094 49.30241394]
[149.11961365 56.28086853]
[137.50234985 65.76976776]
[128.01345825 77.38703156]
[118.52455902 89.00429535]
[109.03565979 100.62155914]
[108.87490082 104.47467804]
[107.01652527 108.23822784]
[103.53862000 111.15562439]
[98.85440826 112.53329468]
[88.85623169 123.71526337]
[78.85806274 134.89724731]
[69.02748108 146.22683716]
[59.36666870 157.70153809]
[49.70586014 169.17623901]
[40.04504776 180.65093994]
[30.38423920 192.12564087]
[20.72342873 203.60034180]
[30.96343040 214.58666992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 209]
[50 208]
[51 207]
[52 206]
[53 205]
[54 204]
[57 203]
[58 202]
[59 201]
[60 197]
[61 196]
[62 195]
[63 194]
[91 193]
[92 192]
[93 191]
[94 190]
[95 189]
[96 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
