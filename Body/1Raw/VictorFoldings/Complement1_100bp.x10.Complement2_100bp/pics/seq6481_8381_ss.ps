%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[39.80600357 246.44027710]
[35.94485474 260.93997192]
[31.18088150 275.16860962]
[25.53288269 289.07000732]
[19.02314758 302.58935547]
[11.67736721 315.67327881]
[3.52453399 328.27014160]
[-5.40317678 340.33023071]
[-15.07053185 351.80593872]
[-25.43937874 362.65194702]
[-36.46879578 372.82553101]
[-48.11525345 382.28646851]
[-60.33278656 390.99746704]
[-73.07318115 398.92410278]
[-86.28616333 406.03515625]
[-99.91957092 412.30249023]
[-113.91960907 417.70141602]
[-128.23101807 422.21060181]
[-142.79733276 425.81228638]
[-157.56105042 428.49224854]
[-172.46391296 430.23986816]
[-187.44709778 431.04827881]
[-202.45147705 430.91430664]
[-217.41784668 429.83843994]
[-232.28712463 427.82498169]
[-247.00062561 424.88180542]
[-261.50030518 421.02059937]
[-275.72891235 416.25653076]
[-289.63031006 410.60845947]
[-303.14962769 404.09866333]
[-316.23348999 396.75280762]
[-328.83032227 388.59991455]
[-340.89035034 379.67214966]
[-352.36599731 370.00473022]
[-363.21197510 359.63583374]
[-373.38549805 348.60635376]
[-382.84637451 336.95983887]
[-391.55731201 324.74224854]
[-399.48388672 312.00183105]
[-406.59484863 298.78881836]
[-412.86212158 285.15536499]
[-418.26095581 271.15530396]
[-422.77008057 256.84387207]
[-426.37170410 242.27754211]
[-429.05157471 227.51380920]
[-430.79910278 212.61093140]
[-431.60745239 197.62774658]
[-431.47338867 182.62335205]
[-430.39746094 167.65699768]
[-428.38391113 152.78773499]
[-425.44067383 138.07424927]
[-421.57937622 123.57459259]
[-416.81524658 109.34600830]
[-411.16711426 95.44464874]
[-404.65722656 81.92536163]
[-397.31130981 68.84152222]
[-389.15835571 56.24474716]
[-380.23049927 44.18476486]
[-370.56304932 32.70916367]
[-360.19406128 21.86323547]
[-349.16455078 11.68978405]
[-337.51800537 2.22895956]
[-325.30038452 -6.48190022]
[-312.55990601 -14.40841770]
[-299.34683228 -21.51931000]
[-285.71337891 -27.78651237]
[-271.71328735 -33.18529510]
[-257.40182495 -37.69434357]
[-242.83546448 -41.29587173]
[-228.07171631 -43.97565842]
[-213.16883850 -45.72313309]
[-198.18563843 -46.53139496]
[-183.18125916 -46.39725494]
[-168.21490479 -45.32124710]
[-153.34565735 -43.30761337]
[-138.63217163 -40.36429977]
[-124.13254547 -36.50292587]
[-109.90398407 -31.73872757]
[-96.00264740 -26.09051132]
[-82.48340607 -19.58056450]
[-69.39959717 -12.23458004]
[-56.80286789 -4.08154964]
[-44.74293137 4.84635019]
[-33.26737976 14.51388454]
[-22.42150688 24.88290024]
[-12.24811268 35.91247559]
[-2.78734875 47.55908203]
[5.92344713 59.77675247]
[13.84989834 72.51727295]
[20.96072197 85.73036194]
[27.22785378 99.36386871]
[32.62656021 113.36399078]
[46.93324661 108.85636139]
[61.23993301 104.34873199]
[75.54662323 99.84110260]
[89.85330963 95.33348083]
[104.12603760 90.71946716]
[118.36402893 85.99933624]
[132.60202026 81.27919769]
[128.80233765 66.76306915]
[125.94052887 52.03330994]
[124.02833557 37.15046310]
[123.07362366 22.17567635]
[123.08031464 7.17049026]
[124.04837799 -7.80343771]
[125.97383881 -22.68457603]
[128.84878540 -37.41177368]
[132.66140747 -51.92451096]
[137.39602661 -66.16315460]
[143.03320312 -80.06919861]
[149.54975891 -93.58549500]
[156.91891479 -106.65649414]
[165.11039734 -119.22850037]
[174.09054565 -131.24983215]
[183.82246399 -142.67111206]
[194.26614380 -153.44540405]
[205.37867737 -163.52841187]
[217.11441040 -172.87872314]
[229.42509460 -181.45791626]
[242.26017761 -189.23072815]
[255.56687927 -196.16522217]
[269.29055786 -202.23289490]
[283.37478638 -207.40882874]
[297.76168823 -211.67173767]
[312.39215088 -215.00410461]
[327.20608521 -217.39225769]
[342.14257812 -218.82637024]
[357.14028931 -219.30053711]
[372.13754272 -218.81282043]
[387.07275391 -217.36523438]
[401.88452148 -214.96371460]
[416.51196289 -211.61813354]
[430.89501953 -207.34223938]
[444.97457886 -202.15359497]
[458.69274902 -196.07353210]
[471.99319458 -189.12702942]
[484.82125854 -181.34263611]
[497.12420654 -172.75233459]
[508.85147095 -163.39143372]
[519.95489502 -153.29838562]
[530.38885498 -142.51467896]
[540.11047363 -131.08462524]
[549.07977295 -119.05518341]
[557.25988770 -106.47579193]
[564.61724854 -93.39813995]
[571.12158203 -79.87596893]
[576.74621582 -65.96484375]
[581.46795654 -51.72193146]
[585.26751709 -37.20575714]
[588.12915039 -22.47596931]
[590.04113770 -7.59310007]
[590.99572754 7.38169575]
[590.98883057 22.38688278]
[590.02062988 37.36079788]
[588.09497070 52.24191666]
[585.21990967 66.96907806]
[581.40710449 81.48178101]
[576.67230225 95.72037506]
[571.03503418 109.62635040]
[564.51831055 123.14257050]
[557.14898682 136.21348572]
[548.95739746 148.78540039]
[539.97711182 160.80664062]
[530.24505615 172.22781372]
[519.80126953 183.00198364]
[508.68859863 193.08486938]
[496.95275879 202.43505859]
[484.64196777 211.01411438]
[471.80682373 218.78677368]
[458.50003052 225.72111511]
[444.77630615 231.78865051]
[430.69201660 236.96441650]
[416.30505371 241.22717285]
[401.67453003 244.55938721]
[386.86059570 246.94737244]
[371.92407227 248.38130188]
[356.92636108 248.85531616]
[341.92910767 248.36743164]
[326.99392700 246.91967773]
[312.18218994 244.51799011]
[297.55477905 241.17225647]
[283.17175293 236.89619446]
[269.09228516 231.70739746]
[255.37416077 225.62718201]
[242.07379150 218.68052673]
[229.24581909 210.89599609]
[216.94297791 202.30555725]
[205.21580505 192.94453430]
[194.11248779 182.85136414]
[183.67864990 172.06753540]
[173.95718384 160.63737488]
[164.98802185 148.60783386]
[156.80802917 136.02835083]
[149.45082092 122.95061493]
[142.94660950 109.42837524]
[137.32215881 95.51718903]
[123.08416748 100.23731995]
[108.84617615 104.95745850]
[102.79417419 110.28153992]
[94.36093903 109.64016724]
[80.05425262 114.14778900]
[65.74756622 118.65541840]
[51.44087601 123.16304779]
[37.13418961 127.67067719]
[40.73594284 142.23696899]
[43.41596222 157.00067139]
[45.16366959 171.90351868]
[45.97216415 186.88670349]
[45.83826447 201.89109802]
[44.76248550 216.85746765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[92 204]
[93 203]
[94 202]
[95 201]
[96 200]
[97 198]
[98 197]
[99 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
