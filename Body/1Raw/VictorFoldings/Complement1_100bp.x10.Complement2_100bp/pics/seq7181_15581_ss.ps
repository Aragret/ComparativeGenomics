%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[101.67784119 406.93527222]
[97.05262756 392.65658569]
[93.65499878 378.03707886]
[91.50944519 363.18209839]
[90.63142395 348.19866943]
[91.02725220 333.19476318]
[92.69409180 318.27847290]
[95.61992645 303.55731201]
[99.78366852 289.13726807]
[105.15532684 275.12231445]
[111.69618988 261.61340332]
[119.35914612 248.70785522]
[128.08895874 236.49867249]
[137.82275391 225.07382202]
[148.49037170 214.51562500]
[160.01496887 204.90014648]
[151.41641235 192.60929871]
[142.81784058 180.31846619]
[130.96452332 177.90492249]
[123.70032501 167.73559570]
[125.36330414 154.94508362]
[121.98834229 153.92430115]
[118.94013977 151.21809387]
[117.00544739 146.99787903]
[116.86473846 141.77990723]
[109.01298523 128.99905396]
[101.16123199 116.21821594]
[90.01712799 112.83438110]
[83.99480438 102.86579132]
[86.18403625 91.42688751]
[78.52343750 78.53056335]
[70.86284637 65.63423157]
[63.10645294 52.79529190]
[55.25469589 40.01445007]
[46.29399872 27.98507309]
[36.29582977 16.80309868]
[26.29765701 5.62112427]
[16.29948425 -5.56085062]
[4.52739334 -3.90118384]
[-6.47155094 -8.08736706]
[-14.00607586 -16.97133255]
[-16.29260254 -28.27122116]
[-12.87646103 -39.15681839]
[-22.53727150 -50.63151932]
[-32.19808197 -62.10621643]
[-41.85889053 -73.58091736]
[-51.51970291 -85.05561829]
[-63.81119919 -76.44070435]
[-76.81599426 -68.94583893]
[-90.43229675 -62.62968063]
[-104.55354309 -57.54165649]
[-119.06921387 -53.72159195]
[-133.86570740 -51.19938660]
[-148.82720947 -49.99477768]
[-163.83662415 -50.11719513]
[-178.77648926 -51.56568146]
[-193.52987671 -54.32889557]
[-207.98130798 -58.38521576]
[-222.01768494 -63.70289230]
[-235.52915955 -70.24031067]
[-248.40997314 -77.94629669]
[-260.55929565 -86.76055145]
[-271.88211060 -96.61408234]
[-282.28970337 -107.42977142]
[-291.70071411 -119.12297058]
[-300.04141235 -131.60215759]
[-307.24655151 -144.76968384]
[-313.25973511 -158.52246094]
[-318.03390503 -172.75288391]
[-321.53170776 -187.34956360]
[-323.72573853 -202.19827271]
[-324.59887695 -217.18276978]
[-324.14422607 -232.18579102]
[-322.36535645 -247.08993530]
[-319.27624512 -261.77853394]
[-314.90100098 -276.13662720]
[-309.27389526 -290.05184937]
[-302.43899536 -303.41528320]
[-294.44973755 -316.12237549]
[-285.36871338 -328.07360840]
[-275.26693726 -339.17550659]
[-264.22351074 -349.34112549]
[-252.32484436 -358.49096680]
[-239.66406250 -366.55337524]
[-226.34027100 -373.46527100]
[-212.45774841 -379.17254639]
[-198.12512207 -383.63052368]
[-183.45458984 -386.80435181]
[-168.56095886 -388.66912842]
[-153.56080627 -389.21032715]
[-138.57151794 -388.42367554]
[-123.71041107 -386.31530762]
[-109.09379578 -382.90179443]
[-94.83606720 -378.20977783]
[-81.04882812 -372.27603149]
[-67.83996582 -365.14694214]
[-55.31286240 -356.87835693]
[-43.56557083 -347.53500366]
[-32.69002533 -337.18994141]
[-22.77134323 -325.92416382]
[-13.88715458 -313.82586670]
[-6.10698986 -300.98974609]
[0.50825787 -287.51620483]
[5.90681505 -273.51074219]
[10.04643059 -259.08294678]
[12.89470387 -244.34573364]
[14.42934513 -229.41447449]
[14.63834190 -214.40602112]
[13.52005959 -199.43782043]
[11.08324909 -184.62702942]
[7.34698391 -170.08955383]
[2.34050417 -155.93919373]
[-3.89700603 -142.28668213]
[-11.31672859 -129.23887634]
[-19.86059380 -116.89788055]
[-29.46173286 -105.36029816]
[-40.04500198 -94.71643066]
[-30.38419151 -83.24172974]
[-20.72338104 -71.76702881]
[-11.06257153 -60.29232788]
[-1.40176070 -48.81762695]
[16.89850616 -48.35299683]
[29.25959206 -34.42042542]
[27.48145866 -15.55902290]
[37.47962952 -4.37704802]
[47.47780228 6.80492640]
[57.47597504 17.98690033]
[55.13326263 3.17097425]
[59.36796570 -11.21885872]
[69.36242676 -22.40414619]
[83.18688202 -28.22518539]
[98.17203522 -27.55802155]
[111.42449951 -20.53147888]
[120.38542175 -8.50226784]
[123.32458496 6.20695639]
[119.67449951 20.75607491]
[110.13992310 32.33588028]
[96.56183624 38.71049118]
[81.56196594 38.64907455]
[68.03553772 32.16269684]
[75.88729095 44.94353867]
[82.06699371 48.99731445]
[83.75917053 57.97363663]
[91.41976929 70.86996460]
[99.08036804 83.76628876]
[113.91718292 91.59220886]
[113.94207001 108.36646271]
[121.79382324 121.14730835]
[129.64558411 133.92814636]
[137.78079224 146.53045654]
[154.53070068 154.18043518]
[155.10868835 171.71989441]
[163.70724487 184.01074219]
[172.30581665 196.30157471]
[185.28929138 188.77142334]
[198.86459351 182.36947632]
[212.93391418 177.14187622]
[227.39590454 173.12626648]
[242.14633179 170.35160828]
[257.07891846 168.83787537]
[272.08609009 168.59597778]
[287.05972290 169.62767029]
[301.89190674 171.92550659]
[316.47579956 175.47291565]
[330.70629883 180.24436951]
[344.48086548 186.20547485]
[357.70028687 193.31327820]
[370.26928711 201.51655579]
[382.09732056 210.75622559]
[393.09915161 220.96571350]
[403.19552612 232.07144165]
[412.31369019 243.99339294]
[420.38793945 256.64569092]
[427.36010742 269.93713379]
[433.17993164 283.77200317]
[437.80551147 298.05056763]
[441.20352173 312.66998291]
[443.34945679 327.52493286]
[444.22787476 342.50833130]
[443.83242798 357.51223755]
[442.16598511 372.42855835]
[439.24053955 387.14981079]
[435.07714844 401.56994629]
[429.70587158 415.58505249]
[423.16534424 429.09414673]
[415.50271606 441.99987793]
[406.77322388 454.20928955]
[397.03973389 465.63439941]
[386.37237549 476.19287109]
[374.84802246 485.80865479]
[362.54971313 494.41244507]
[349.56604004 501.94226074]
[335.99057007 508.34384155]
[321.92111206 513.57110596]
[307.45901489 517.58630371]
[292.70852661 520.36059570]
[277.77587891 521.87396240]
[262.76870728 522.11547852]
[247.79510498 521.08337402]
[232.96298218 518.78515625]
[218.37918091 515.23736572]
[204.14880371 510.46554565]
[190.37438965 504.50408936]
[177.15515137 497.39596558]
[164.58634949 489.19235229]
[152.75856018 479.95236206]
[141.75698853 469.74261475]
[131.66090393 458.63662720]
[122.54306030 446.71441650]
[114.46914673 434.06192017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 154]
[17 153]
[18 152]
[21 150]
[25 149]
[26 148]
[27 147]
[30 145]
[31 144]
[32 143]
[33 141]
[34 140]
[35 127]
[36 126]
[37 125]
[38 124]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
