%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[98.82202911 492.03543091]
[84.61911774 497.62469482]
[69.39827728 496.48947144]
[56.18161392 488.85516357]
[47.59331512 476.23757935]
[45.33858871 461.14190674]
[49.86511612 446.56546021]
[60.27414322 435.40234375]
[74.49896240 429.86904907]
[75.61460876 414.91058350]
[76.73025513 399.95214844]
[69.96099854 386.68466187]
[78.70327759 373.49816895]
[79.81892395 358.53973389]
[80.93457794 343.58126831]
[82.05022430 328.62280273]
[82.94303894 313.64941406]
[83.61282349 298.66436768]
[76.45154572 285.60430908]
[84.79734039 272.16339111]
[77.63605499 259.10333252]
[85.98184967 245.66239929]
[86.65163422 230.67736816]
[87.32141876 215.69232178]
[87.99120331 200.70729065]
[88.66098785 185.72224426]
[81.49971008 172.66218567]
[89.84550476 159.22125244]
[90.51528931 144.23622131]
[77.32734680 139.15039062]
[66.35246277 130.24311829]
[58.66190720 118.38382721]
[55.00634384 104.73009491]
[55.74258804 90.61466217]
[60.79878235 77.41532898]
[69.68138885 66.42047119]
[81.52337646 58.70330048]
[95.16886902 55.01708221]
[96.06168365 40.04367447]
[96.95449829 25.07026863]
[97.84731293 10.09686279]
[97.17752838 -4.88817549]
[94.95240784 -19.72221947]
[92.72729492 -34.55626297]
[83.02846527 -47.05599213]
[88.79218292 -60.79021454]
[86.56706238 -75.62425995]
[84.34194946 -90.45830536]
[82.11682892 -105.29234314]
[79.89171600 -120.12638855]
[77.66659546 -134.96043396]
[75.44148254 -149.79447937]
[73.10599518 -164.61154175]
[70.66026306 -179.41081238]
[68.21453857 -194.21008301]
[65.65870667 -208.99073792]
[62.99290848 -223.75195312]
[60.32711411 -238.51316833]
[57.66131973 -253.27439880]
[54.99552155 -268.03561401]
[52.32972717 -282.79681396]
[44.61849594 -269.93072510]
[30.86305618 -263.94842529]
[16.19384575 -267.08117676]
[6.08211756 -278.16058350]
[4.29929733 -293.05426025]
[11.51033211 -306.20724487]
[25.02568436 -312.71380615]
[39.80446243 -310.14712524]
[50.33507156 -299.46353149]
[49.44225693 -314.43692017]
[48.54944229 -329.41033936]
[33.54838943 -329.98934937]
[18.67633057 -332.03598022]
[4.07649231 -335.53045654]
[-10.11051846 -340.43917847]
[-23.74806786 -346.71487427]
[-36.70481491 -354.29702759]
[-48.85597992 -363.11270142]
[-60.08452988 -373.07696533]
[-70.28233337 -384.09384155]
[-79.35117340 -396.05725098]
[-87.20371246 -408.85195923]
[-93.76431274 -422.35473633]
[-98.96981049 -436.43554688]
[-102.77005768 -450.95880127]
[-105.12845612 -465.78463745]
[-106.02230072 -480.77020264]
[-105.44297791 -495.77124023]
[-103.39606476 -510.64328003]
[-99.90127563 -525.24304199]
[-94.99227142 -539.42993164]
[-88.71633148 -553.06738281]
[-81.13388824 -566.02398682]
[-72.31797791 -578.17498779]
[-62.35349655 -589.40332031]
[-51.33641434 -599.60089111]
[-39.37283325 -608.66949463]
[-26.57797241 -616.52178955]
[-13.07505512 -623.08209229]
[1.00587368 -628.28735352]
[15.52920341 -632.08728027]
[30.35506439 -634.44537354]
[45.34066772 -635.33892822]
[60.34169769 -634.75927734]
[75.21367645 -632.71209717]
[89.81337738 -629.21704102]
[104.00019073 -624.30773926]
[117.63748932 -618.03149414]
[130.59393311 -610.44879150]
[142.74473572 -601.63269043]
[153.97290039 -591.66796875]
[164.17025757 -580.65069580]
[173.23861694 -568.68688965]
[181.09063721 -555.89190674]
[187.65071106 -542.38885498]
[192.85563660 -528.30780029]
[196.65530396 -513.78442383]
[199.01312256 -498.95849609]
[199.90635681 -483.97286987]
[199.32643127 -468.97186279]
[197.27893066 -454.09991455]
[193.78355408 -439.50027466]
[188.87399292 -425.31356812]
[182.59750366 -411.67639160]
[175.01454163 -398.72009277]
[166.19813538 -386.56945801]
[156.23321533 -375.34152222]
[145.21571350 -365.14437866]
[133.25177002 -356.07626343]
[120.45660400 -348.22448730]
[106.95342255 -341.66467285]
[92.87228394 -336.46005249]
[78.34880066 -332.66067505]
[63.52284622 -330.30316162]
[64.41566467 -315.32974243]
[65.30847931 -300.35635376]
[67.09094238 -285.46261597]
[69.75673676 -270.70141602]
[72.42253876 -255.94018555]
[75.08833313 -241.17897034]
[77.75412750 -226.41775513]
[80.41992188 -211.65653992]
[84.70211792 -205.63285828]
[83.01380920 -196.65580750]
[85.45953369 -181.85653687]
[87.90526581 -167.05726624]
[92.09729767 -160.97052002]
[90.27552032 -152.01959229]
[92.50064087 -137.18554688]
[94.72575378 -122.35150909]
[96.95087433 -107.51746368]
[99.17599487 -92.68341827]
[101.40110779 -77.84937286]
[103.62622833 -63.01533127]
[113.16590118 -51.57662964]
[107.56134033 -36.78137970]
[109.78645325 -21.94733620]
[112.01157379 -7.11329269]
[117.62992859 -21.02135086]
[128.08804321 -31.77438927]
[141.83451843 -37.77725983]
[156.83013916 -38.13946915]
[170.85040283 -32.80728912]
[181.81549072 -22.57171822]
[188.09878540 -8.95113754]
[188.76820374 6.03391790]
[183.72444153 20.16050339]
[173.71571350 31.33302689]
[160.22674561 37.89410782]
[145.25854492 38.87044907]
[131.03157043 34.11722183]
[119.65630341 24.33952904]
[112.82071686 10.98967934]
[111.92790222 25.96308517]
[111.03508759 40.93648911]
[110.14227295 55.90989685]
[124.61547089 62.04105759]
[136.11740112 72.75415039]
[143.25968933 86.75602722]
[145.18019104 102.35655212]
[141.64710999 117.67262268]
[133.08689880 130.85546875]
[120.53284454 140.31382751]
[105.50032806 144.90600586]
[104.83054352 159.89103699]
[111.94391632 174.02293396]
[103.64602661 186.39202881]
[102.97624207 201.37707520]
[102.30645752 216.36210632]
[101.63667297 231.34715271]
[100.96688843 246.33218384]
[108.08026123 260.46408081]
[99.78237915 272.83316040]
[106.89575195 286.96505737]
[98.59786224 299.33416748]
[97.92807770 314.31918335]
[100.63091278 320.35293579]
[99.97875977 325.99844360]
[97.00867462 329.73846436]
[95.89302826 344.69692993]
[94.77738190 359.65536499]
[93.66173553 374.61383057]
[100.35118866 388.95123291]
[91.68871307 401.06777954]
[90.57305908 416.02624512]
[89.45741272 430.98471069]
[102.70403290 438.56689453]
[111.34195709 451.15057373]
[113.65611267 466.23724365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[13 203]
[14 202]
[15 201]
[16 200]
[17 197]
[18 196]
[20 194]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[28 186]
[29 185]
[38 177]
[39 176]
[40 175]
[41 174]
[42 159]
[43 158]
[44 157]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[51 150]
[52 149]
[53 147]
[54 146]
[55 145]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[70 137]
[71 136]
[72 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
