%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[114.79506683 934.40698242]
[99.88067627 932.78405762]
[85.05197144 930.50762939]
[70.33756256 927.58203125]
[55.76585770 924.01293945]
[41.36498642 919.80725098]
[27.16274834 914.97308350]
[13.18655300 909.51971436]
[-0.53661776 903.45776367]
[-13.98027706 896.79882812]
[-27.11847305 889.55584717]
[-39.92584610 881.74279785]
[-52.37767792 873.37469482]
[-64.44992828 864.46777344]
[-76.11929321 855.03918457]
[-87.36325836 845.10705566]
[-98.16010284 834.69073486]
[-108.48899841 823.81011963]
[-118.33000946 812.48638916]
[-127.66413116 800.74127197]
[-136.47334290 788.59753418]
[-144.74066162 776.07855225]
[-152.45010376 763.20855713]
[-159.58680725 750.01232910]
[-166.13697815 736.51538086]
[-172.08798218 722.74371338]
[-177.42834473 708.72393799]
[-182.14773560 694.48315430]
[-186.23706055 680.04882812]
[-189.68841553 665.44879150]
[-192.49514771 650.71124268]
[-194.65184021 635.86462402]
[-196.15431213 620.93762207]
[-196.99967957 605.95904541]
[-197.18630981 590.95776367]
[-196.71385193 575.96276855]
[-195.58319092 561.00305176]
[-193.79652405 546.10736084]
[-191.35731506 531.30456543]
[-188.27024841 516.62316895]
[-184.54129028 502.09155273]
[-180.17764282 487.73776245]
[-175.18772888 473.58950806]
[-169.58116150 459.67407227]
[-163.36880493 446.01831055]
[-156.56260681 432.64862061]
[-149.17573547 419.59078979]
[-141.22242737 406.87002563]
[-132.71804810 394.51089478]
[-123.67902374 382.53720093]
[-114.12277222 370.97213745]
[-104.06776428 359.83795166]
[-93.53340149 349.15621948]
[-82.54000854 338.94747925]
[-71.10881805 329.23144531]
[-59.26189804 320.02694702]
[-47.02210236 311.35165405]
[-34.41307068 303.22238159]
[-21.45913124 295.65478516]
[-8.18529510 288.66351318]
[5.38281775 282.26199341]
[19.21901703 276.46264648]
[33.29659271 271.27664185]
[47.58837509 266.71398926]
[62.06677628 262.78347778]
[76.70384979 259.49273682]
[91.47133636 256.84808350]
[106.34073639 254.85462952]
[105.00250244 239.91444397]
[103.66426849 224.97425842]
[102.32603455 210.03407288]
[100.98780060 195.09388733]
[99.64956665 180.15370178]
[98.31133270 165.21351624]
[96.97309875 150.27333069]
[88.13117981 138.28710938]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[88.69773865 64.14447021]
[87.13721466 49.22586823]
[78.00619507 36.30553055]
[84.37743378 22.84237099]
[82.81690979 7.92376614]
[71.48751068 17.75457001]
[56.71069717 15.17662907]
[49.37938690 2.09030533]
[54.89794922 -11.85765076]
[69.19830322 -16.38532448]
[81.73790741 -8.15649509]
[81.29129791 -23.14984512]
[80.84469604 -38.14319611]
[80.39808655 -53.13654327]
[79.95148468 -68.12989807]
[65.42601776 -72.35673523]
[52.91878891 -80.86698151]
[43.65512085 -92.82690430]
[38.54257584 -107.06477356]
[38.08202744 -122.18572235]
[42.31859589 -136.70834351]
[50.83722687 -149.20986938]
[62.80335236 -158.46553040]
[77.04464722 -163.56852722]
[92.16590118 -164.01895142]
[106.68568420 -159.77264404]
[119.18150330 -151.24563599]
[128.42913818 -139.27331543]
[133.52259827 -125.02861023]
[133.96287537 -109.90705109]
[129.70684814 -95.39012146]
[121.17147064 -82.90002441]
[109.19295502 -73.66041565]
[94.94483185 -68.57649994]
[95.39143372 -53.58315277]
[95.83804321 -38.58980179]
[96.28464508 -23.59645081]
[96.73125458 -8.60310078]
[97.73551178 6.36324310]
[99.29603577 21.28184891]
[108.31542969 33.13510895]
[102.05581665 47.66534424]
[103.61634064 62.58395004]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[118.48425293 135.56829834]
[111.91328430 148.93510437]
[113.25151825 163.87528992]
[114.58975220 178.81547546]
[115.92798615 193.75566101]
[117.26622009 208.69584656]
[118.60445404 223.63603210]
[119.94268799 238.57621765]
[121.28092194 253.51640320]
[136.26789856 252.83552551]
[151.27030945 252.81361389]
[166.25920105 253.45068359]
[181.20564270 254.74551392]
[196.08079529 256.69561768]
[210.85592651 259.29721069]
[225.50253296 262.54525757]
[239.99232483 266.43353271]
[254.29734802 270.95452881]
[268.38998413 276.09945679]
[282.24304199 281.85845947]
[295.82974243 288.22039795]
[309.12390137 295.17294312]
[322.09985352 302.70272827]
[334.73254395 310.79522705]
[346.99755859 319.43478394]
[358.87127686 328.60473633]
[370.33074951 338.28738403]
[381.35385132 348.46401978]
[391.91931152 359.11502075]
[402.00671387 370.21984863]
[411.59664917 381.75701904]
[420.67053223 393.70428467]
[429.21090698 406.03857422]
[437.20126343 418.73611450]
[444.62615967 431.77233887]
[451.47131348 445.12213135]
[457.72344971 458.75970459]
[463.37054443 472.65875244]
[468.40170288 486.79241943]
[472.80715942 501.13342285]
[476.57846069 515.65411377]
[479.70831299 530.32641602]
[482.19067383 545.12207031]
[484.02075195 560.01245117]
[485.19500732 574.96887207]
[485.71121216 589.96240234]
[485.56829834 604.96417236]
[484.76660156 619.94512939]
[483.30764771 634.87646484]
[481.19424438 649.72930908]
[478.43048096 664.47497559]
[475.02169800 679.08502197]
[470.97448730 693.53118896]
[466.29660034 707.78570557]
[460.99716187 721.82092285]
[455.08630371 735.60986328]
[448.57550049 749.12591553]
[441.47729492 762.34289551]
[433.80541992 775.23529053]
[425.57464600 787.77832031]
[416.80084229 799.94769287]
[407.50100708 811.71997070]
[397.69305420 823.07232666]
[387.39593506 833.98297119]
[376.62948608 844.43078613]
[365.41452026 854.39556885]
[353.77270508 863.85821533]
[341.72647095 872.80029297]
[329.29907227 881.20465088]
[316.51452637 889.05499268]
[303.39752197 896.33624268]
[289.97332764 903.03430176]
[276.26788330 909.13623047]
[262.30764771 914.63031006]
[248.11955261 919.50585938]
[233.73100281 923.75354004]
[219.16976929 927.36505127]
[204.46394348 930.33355713]
[189.64193726 932.65319824]
[174.73234558 934.31958008]
[159.76393127 935.32946777]
[144.76562500 935.68090820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[77 128]
[78 127]
[79 125]
[80 124]
[81 123]
[82 122]
[84 120]
[85 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
