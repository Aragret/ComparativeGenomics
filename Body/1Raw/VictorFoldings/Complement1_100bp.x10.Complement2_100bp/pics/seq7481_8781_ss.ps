%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[178.72319031 595.69885254]
[182.95175171 580.76904297]
[195.16902161 571.20257568]
[194.49923706 556.21752930]
[193.82945251 541.23248291]
[193.15966797 526.24743652]
[192.48988342 511.26239014]
[191.48562622 496.29605103]
[190.14739990 481.35586548]
[188.80915833 466.41567993]
[187.47093201 451.47549438]
[178.62901306 439.48925781]
[185.10426331 425.05383301]
[181.67320251 410.45150757]
[176.21784973 396.47869873]
[170.76248169 382.50592041]
[165.30712891 368.53311157]
[159.85177612 354.56030273]
[154.39642334 340.58752441]
[151.33135986 338.84457397]
[148.95823669 335.53048706]
[148.00631714 330.98657227]
[149.02479553 325.86703491]
[144.19880676 311.66455078]
[139.37280273 297.46209717]
[134.54679871 283.25964355]
[129.72080994 269.05718994]
[124.89481354 254.85473633]
[119.85611725 268.98312378]
[108.04422760 278.22863770]
[93.11919403 279.72644043]
[79.70570374 273.01242065]
[71.96006012 260.16699219]
[72.28234100 245.17045593]
[80.57268524 232.66964722]
[94.26223755 226.53808594]
[109.10914612 228.67568970]
[120.51306915 238.42031860]
[117.62779999 223.70042419]
[114.74252319 208.98054504]
[111.85725403 194.26065063]
[97.51173401 185.48312378]
[93.88167572 168.71595764]
[103.69071198 154.23141479]
[100.58660126 139.55610657]
[97.48249054 124.88081360]
[94.37837982 110.20550537]
[89.03402710 124.22113800]
[78.19745636 134.59266663]
[63.96103287 139.31752014]
[49.07358932 137.48339844]
[36.40965652 129.44444275]
[28.41444397 116.75285339]
[26.63169861 101.85916901]
[31.40564346 87.63912964]
[41.81450653 76.83840942]
[55.84849167 71.54244995]
[70.79786682 72.77381897]
[83.77613068 80.29476166]
[92.27787018 92.65428925]
[91.83126068 77.66093445]
[91.38465881 62.66758728]
[90.93804932 47.67423630]
[90.49143982 32.68088913]
[79.27024841 21.87706947]
[79.03090668 6.66531897]
[89.39984894 -3.96579790]
[88.95324707 -18.95914841]
[80.80849457 -32.52283478]
[88.16342163 -45.47483063]
[78.12466431 -60.91195679]
[87.03928375 -76.02806091]
[86.36949921 -91.01309967]
[85.69971466 -105.99813843]
[84.91838837 -120.97777557]
[84.02557373 -135.95118713]
[83.13275909 -150.92459106]
[82.23994446 -165.89799500]
[81.34712219 -180.87139893]
[65.78556824 -190.17707825]
[58.98482132 -206.81526184]
[63.49317169 -224.05259705]
[77.32283783 -235.03495789]
[75.98460388 -249.97514343]
[74.64636993 -264.91531372]
[73.30812836 -279.85549927]
[62.36833954 -294.66775513]
[70.36742401 -310.28765869]
[68.80690002 -325.20626831]
[67.24637604 -340.12487793]
[65.68585205 -355.04345703]
[64.12532806 -369.96206665]
[62.56480789 -384.88067627]
[47.80475998 -388.25997925]
[34.94302368 -396.25088501]
[25.37475014 -407.98660278]
[20.13782883 -422.19409180]
[19.80032349 -437.33230591]
[24.39884377 -451.75909424]
[33.43457794 -463.90957642]
[45.92739487 -472.46575928]
[60.52217102 -476.49951172]
[75.63576508 -475.57333374]
[89.62878418 -469.78762817]
[100.98335266 -459.77001953]
[108.46781921 -446.60714722]
[111.27033234 -431.72677612]
[109.08688354 -416.74310303]
[102.15431976 -403.28134155]
[91.22463989 -392.80181885]
[77.48341370 -386.44119263]
[79.04393768 -371.52258301]
[80.60445404 -356.60400391]
[82.16497803 -341.68539429]
[83.72550201 -326.76678467]
[85.28602600 -311.84817505]
[94.48242188 -303.98986816]
[95.90461731 -291.57373047]
[88.24831390 -281.19372559]
[89.58654785 -266.25357056]
[90.92478180 -251.31336975]
[92.26301575 -236.37318420]
[103.49041748 -231.75575256]
[111.73802185 -222.74963379]
[115.39538574 -211.02255249]
[113.70986176 -198.78169250]
[106.94052124 -188.35842896]
[96.32053375 -181.76422119]
[97.21334839 -166.79080200]
[98.10616302 -151.81739807]
[98.99897766 -136.84399414]
[99.89179230 -121.87059021]
[103.42784882 -115.38074493]
[100.68475342 -106.66792297]
[101.35453796 -91.68288422]
[102.02432251 -76.69784546]
[110.73667908 -68.30609894]
[111.41732788 -55.82729721]
[103.15677643 -45.92143631]
[111.26958466 -33.43017578]
[103.94659424 -19.40575409]
[104.39320374 -4.41240406]
[115.37653351 5.58269405]
[116.04304504 20.78172112]
[105.48479462 32.23428345]
[105.93139648 47.22763062]
[106.37800598 62.22098160]
[106.82460785 77.21433258]
[107.27121735 92.20767975]
[109.05368042 107.10140228]
[112.15779114 121.77670288]
[115.26190186 136.45201111]
[118.36601257 151.12730408]
[130.42549133 157.12593079]
[136.73611450 168.80439758]
[135.19116211 181.79266357]
[126.57714081 191.37538147]
[129.46241760 206.09526062]
[132.34768677 220.81515503]
[135.23295593 235.53504944]
[139.09725952 250.02874756]
[143.92326355 264.23120117]
[148.74926758 278.43365479]
[153.57525635 292.63610840]
[158.40126038 306.83856201]
[163.22724915 321.04101562]
[168.36921692 335.13217163]
[173.82456970 349.10494995]
[179.27992249 363.07775879]
[184.73529053 377.05056763]
[190.19064331 391.02334595]
[195.64599609 404.99615479]
[197.24018860 390.08111572]
[203.10461426 376.27499390]
[212.73196411 364.77221680]
[225.28935242 356.56784058]
[239.69046021 352.37164307]
[254.68943787 352.54663086]
[268.98873901 357.07766724]
[281.35128784 365.57278442]
[290.70767212 377.29702759]
[296.24838257 391.23620605]
[297.49417114 406.18438721]
[294.33721924 420.84841919]
[287.05065918 433.95968628]
[276.26483154 444.38400269]
[262.91284180 451.21948242]
[248.14973450 453.87484741]
[233.25268555 452.12036133]
[219.51045227 446.10778809]
[208.11186218 436.35729980]
[200.04444885 423.71560669]
[208.98208618 436.77044678]
[202.41111755 450.13726807]
[203.74934387 465.07745361]
[205.08758545 480.01763916]
[206.42581177 494.95782471]
[209.43008423 499.22647095]
[210.39961243 503.76666260]
[209.57170105 507.75784302]
[207.47492981 510.59262085]
[208.14471436 525.57763672]
[208.81449890 540.56268311]
[209.48428345 555.54772949]
[210.15406799 570.53277588]
[223.17610168 578.97113037]
[228.71977234 593.46417236]
[224.65342712 608.43896484]
[212.54064941 618.13739014]
[197.03904724 618.83026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 197]
[9 196]
[10 195]
[11 194]
[13 192]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[19 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[38 160]
[39 159]
[40 158]
[41 157]
[44 153]
[45 152]
[46 151]
[47 150]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[67 142]
[68 141]
[70 139]
[72 136]
[73 135]
[74 134]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[83 122]
[84 121]
[85 120]
[86 119]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
