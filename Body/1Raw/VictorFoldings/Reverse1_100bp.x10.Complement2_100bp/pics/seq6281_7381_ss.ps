%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[84.65689087 449.43643188]
[86.04109192 464.50091553]
[82.70037079 479.25540161]
[74.96203613 492.25439453]
[63.58420181 502.22433472]
[49.68154907 508.18853760]
[34.61612701 509.56262207]
[19.86388206 506.21203613]
[6.87009668 498.46499634]
[-3.09223342 487.08047485]
[-9.04710007 473.17382812]
[-10.41110706 458.10748291]
[-7.05062246 443.35748291]
[0.70512837 430.36889648]
[12.09631538 420.41418457]
[26.00694656 414.46865845]
[41.07419968 413.11474609]
[44.39645767 398.48727417]
[47.71871948 383.85983276]
[42.99246979 369.73495483]
[53.59412003 357.99121094]
[56.91638184 343.36373901]
[60.23863983 328.73629761]
[54.15236664 312.27651978]
[66.77479553 298.86920166]
[69.87890625 284.19390869]
[64.94288635 270.14099121]
[75.36851501 258.24069214]
[63.98174286 250.31544495]
[56.45188522 238.61189270]
[53.94355774 224.87916565]
[56.86795044 211.18469238]
[64.81582642 199.60295105]
[76.61445618 191.90121460]
[90.50052643 189.26994324]
[93.82278442 174.64248657]
[95.16101837 159.70230103]
[94.49123383 144.71725464]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[83.03582764 42.25263596]
[90.39075470 29.30063629]
[89.94415283 14.30728626]
[81.79940033 0.74360055]
[89.15432739 -12.20839691]
[88.70772552 -27.20174789]
[88.26111603 -42.19509888]
[87.81451416 -57.18844604]
[87.36790466 -72.18180084]
[86.92130280 -87.17514801]
[84.91728973 -102.04067230]
[81.37761688 -116.61705017]
[77.83794403 -131.19342041]
[74.23368835 -134.96919250]
[72.60138702 -139.31533813]
[72.82807922 -143.38517761]
[74.48114777 -146.49961853]
[71.59587860 -161.21949768]
[68.71060944 -175.93939209]
[65.82533264 -190.65928650]
[62.94005966 -205.37918091]
[60.05478668 -220.09907532]
[57.16951752 -234.81895447]
[54.28424454 -249.53884888]
[51.39897156 -264.25875854]
[48.51369858 -278.97863770]
[35.61495209 -283.83798218]
[26.87101555 -294.35281372]
[24.48357201 -307.70834351]
[28.97094536 -320.39721680]
[39.06019211 -329.14074707]
[36.39439392 -343.90194702]
[33.72859955 -358.66317749]
[18.71232605 -358.12252808]
[3.77196527 -359.72454834]
[-10.78831482 -363.43655396]
[-24.67208672 -369.18298340]
[-37.59669113 -376.84689331]
[-49.29900742 -386.27221680]
[-59.54078293 -397.26705933]
[-68.11351013 -409.60760498]
[-74.84266663 -423.04260254]
[-79.59124756 -437.29855347]
[-82.26258087 -452.08517456]
[-82.80227661 -467.10150146]
[-81.19935608 -482.04174805]
[-77.48644257 -496.60180664]
[-71.73913574 -510.48522949]
[-64.07444000 -523.40936279]
[-54.64839935 -535.11108398]
[-43.65291214 -545.35217285]
[-31.31183624 -553.92413330]
[-17.87641907 -560.65246582]
[-3.62018824 -565.40014648]
[11.16661739 -568.07055664]
[26.18295860 -568.60937500]
[41.12311935 -567.00549316]
[55.68294144 -563.29168701]
[69.56600189 -557.54351807]
[82.48966217 -549.87805176]
[94.19080353 -540.45129395]
[104.43122101 -529.45513916]
[113.00242615 -517.11352539]
[119.72991180 -503.67770386]
[124.47673035 -489.42117310]
[127.14623260 -474.63421631]
[127.68407440 -459.61782837]
[126.07929993 -444.67776489]
[122.36458588 -430.11819458]
[116.61556244 -416.23547363]
[108.94926453 -403.31228638]
[99.52177429 -391.61172485]
[88.52502441 -381.37200928]
[76.18288422 -372.80154419]
[62.74663544 -366.07489014]
[48.48981857 -361.32897949]
[51.15561295 -346.56774902]
[53.82140732 -331.80651855]
[68.82639313 -325.14862061]
[76.98796082 -310.71426392]
[74.91718292 -294.09460449]
[63.23358917 -281.86392212]
[66.11885834 -267.14401245]
[69.00413513 -252.42411804]
[71.88940430 -237.70423889]
[74.77468109 -222.98434448]
[77.65995026 -208.26445007]
[80.54522705 -193.54455566]
[83.43049622 -178.82466125]
[86.31577301 -164.10478210]
[89.20104218 -149.38488770]
[92.41431427 -134.73309326]
[95.95398712 -120.15672302]
[99.49365997 -105.58034515]
[103.84880066 -119.93418884]
[113.30587006 -131.57737732]
[126.46197510 -138.78271484]
[141.36549377 -140.48132324]
[155.80555725 -136.42123413]
[167.64009094 -127.20472717]
[175.11349487 -114.19902802]
[177.11715698 -99.33345032]
[173.35380554 -84.81321716]
[164.38175964 -72.79231262]
[151.53192139 -65.05397034]
[136.71052551 -62.74612045]
[122.11622620 -66.21112823]
[109.91399384 -74.93497467]
[101.91464996 -87.62174988]
[102.36125183 -72.62840271]
[102.80786133 -57.63505173]
[103.25447083 -42.64170456]
[103.70107269 -27.64835358]
[104.14768219 -12.65500355]
[112.26049042 -0.16374193]
[104.93750000 13.86068058]
[105.38410950 28.85403061]
[113.49691772 41.34529114]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[109.47627258 144.04747009]
[110.14605713 159.03251648]
[116.55142212 145.46890259]
[126.78881073 134.50552368]
[139.88246155 127.18730927]
[154.58438110 124.21179962]
[169.49327087 125.86260223]
[183.18809509 131.98236084]
[194.36357117 141.98779297]
[201.95452881 154.92524719]
[205.23742676 169.56158447]
[203.89936829 184.50178528]
[198.06788635 198.32183838]
[188.29879761 209.70449829]
[175.52323914 217.56484985]
[160.95889282 221.15370178]
[145.99394226 220.12896729]
[132.05473328 214.58833313]
[120.46988678 205.05989075]
[112.34358215 192.45182800]
[108.45024872 177.96473694]
[105.12799072 192.59220886]
[117.94067383 202.62062073]
[125.07182312 217.18051147]
[125.13935089 233.33462524]
[118.18048096 247.84867859]
[105.63416290 257.83886719]
[90.04381561 261.34481812]
[94.75782013 276.44741821]
[84.55421448 287.29803467]
[81.45010376 301.97332764]
[87.81868744 313.18954468]
[84.93114471 325.34875488]
[74.86610413 332.05856323]
[71.54383850 346.68600464]
[68.22158051 361.31347656]
[72.71020508 376.48458862]
[62.34617996 387.18206787]
[59.02391815 401.80953979]
[55.70166016 416.43701172]
[68.70581818 424.16662598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[21 205]
[22 204]
[23 203]
[25 200]
[26 199]
[28 197]
[35 191]
[36 190]
[37 171]
[38 170]
[39 169]
[40 168]
[43 166]
[44 165]
[45 164]
[47 162]
[48 161]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 139]
[57 138]
[58 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[76 123]
[77 122]
[78 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
