%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAA\
) } def
/len { sequence length } bind def

/coor [
[-5.43843365 521.45880127]
[-8.35766029 536.20257568]
[-13.49340534 550.32788086]
[-20.72527885 563.50360107]
[-29.88375664 575.42095947]
[-40.75415039 585.80047607]
[-53.08164215 594.39892578]
[-66.57725525 601.01477051]
[-80.92463684 605.49279785]
[-95.78746796 607.72814941]
[-110.81733704 607.66839600]
[-125.66191864 605.31494141]
[-139.97323608 600.72290039]
[-153.41581726 594.00000000]
[-165.67454529 585.30383301]
[-176.46206665 574.83813477]
[-185.52548218 562.84838867]
[-192.65235901 549.61553955]
[-197.67561340 535.44982910]
[-200.47750854 520.68334961]
[-200.99235535 505.66217041]
[-199.20809937 490.73846436]
[-195.16653442 476.26205444]
[-188.96243286 462.57229614]
[-180.74121094 449.99008179]
[-170.69558716 438.81036377]
[-159.06105042 429.29522705]
[-146.11032104 421.66769409]
[-132.14700317 416.10659790]
[-117.49839783 412.74224854]
[-102.50789642 411.65353394]
[-87.52689362 412.86599731]
[-72.90657043 416.35119629]
[-67.24378967 402.46118164]
[-61.58100128 388.57113647]
[-55.91821289 374.68112183]
[-70.12812042 379.48513794]
[-83.63356781 372.95803833]
[-88.69802094 358.83886719]
[-82.42033386 345.21569824]
[-68.39665222 339.89251709]
[-54.66036987 345.91867065]
[-49.08025360 359.84118652]
[-42.20084381 346.51174927]
[-45.57892609 334.89645386]
[-39.95666504 323.73516846]
[-27.86096191 319.25668335]
[-20.78385544 306.03115845]
[-13.70675087 292.80563354]
[-6.62964535 279.58010864]
[-15.50873852 267.59567261]
[-18.31545639 252.88403320]
[-14.44048786 238.35319519]
[-4.60065699 226.89901733]
[9.29298973 220.82830811]
[24.50617981 221.39422607]
[31.58328438 208.16870117]
[38.66038895 194.94316101]
[45.73749542 181.71763611]
[52.81460190 168.49211121]
[59.89170456 155.26658630]
[59.38939667 150.51719666]
[61.86529541 145.40182495]
[67.38150787 141.75724792]
[74.84925079 128.74830627]
[65.76845551 116.94775391]
[61.88949203 102.57182312]
[63.80181122 87.80506897]
[71.21482086 74.89146423]
[83.00202942 65.79336548]
[97.37225342 61.89330673]
[112.14179230 63.78395462]
[119.60953522 50.77500534]
[127.07727814 37.76605225]
[134.54501343 24.75709915]
[140.72079468 11.08742905]
[145.54678345 -3.11502695]
[150.37278748 -17.31748199]
[155.19877625 -31.51993752]
[157.86457825 -46.28115463]
[158.31118774 -61.27450562]
[158.75778198 -76.26785278]
[148.19953918 -87.72041321]
[148.86604309 -102.91944122]
[159.84938049 -112.91454315]
[149.29113770 -124.36710358]
[149.95764160 -139.56613159]
[160.94097900 -149.56123352]
[161.38757324 -164.55458069]
[161.83418274 -179.54792786]
[162.28079224 -194.54127502]
[162.72740173 -209.53462219]
[163.17399597 -224.52796936]
[163.62060547 -239.52133179]
[163.95558167 -254.51757812]
[164.17890930 -269.51593018]
[149.79759216 -274.17092896]
[137.42825317 -282.85946655]
[128.17074585 -294.80895996]
[122.84825897 -308.95684814]
[121.93405151 -324.04510498]
[125.50942230 -338.73211670]
[133.25645447 -351.71188354]
[144.48628235 -361.83032227]
[158.20034790 -368.18765259]
[173.17922974 -370.21859741]
[188.09098816 -367.74255371]
[201.60969543 -360.97973633]
[212.53327942 -350.53146362]
[219.89041138 -337.32675171]
[223.02691650 -322.53979492]
[221.66387939 -307.48544312]
[215.92251587 -293.50231934]
[206.31333923 -281.83377075]
[193.69078064 -273.51736450]
[179.17724609 -269.29260254]
[178.95391846 -254.29425049]
[181.99748230 -247.55938721]
[178.61395264 -239.07472229]
[178.16735840 -224.08137512]
[177.72074890 -209.08802795]
[177.27413940 -194.09466553]
[176.82752991 -179.10131836]
[176.38093567 -164.10797119]
[175.93432617 -149.11462402]
[186.30326843 -138.48350525]
[186.06393433 -123.27175140]
[174.84272766 -112.46793365]
[185.21166992 -101.83681488]
[184.97233582 -86.62506866]
[173.75114441 -75.82125092]
[173.30453491 -60.82789993]
[172.85792542 -45.83454895]
[180.08406067 -58.97924423]
[190.68006897 -69.59642792]
[203.81031799 -76.84877777]
[218.43930054 -80.16434479]
[233.41329956 -79.28165436]
[247.55142212 -74.27030945]
[259.73867798 -65.52553558]
[269.01388550 -53.73698044]
[274.64562988 -39.83433533]
[276.18972778 -24.91402245]
[273.52441406 -10.15271854]
[266.85989380 3.28543758]
[256.72174072 14.34065628]
[243.90950012 22.14107704]
[229.43359375 26.07152748]
[214.43566895 25.82203293]
[200.09851074 21.41227341]
[187.55282593 13.19001675]
[177.78799438 1.80370796]
[171.57411194 -11.84868240]
[169.40122986 -26.69394112]
[164.57524109 -12.49148464]
[159.74923706 1.71097064]
[154.92324829 15.91342640]
[166.46998596 6.33883190]
[180.89057922 2.21009827]
[195.75489807 4.22298908]
[208.55805969 12.03829670]
[217.14250183 24.33900452]
[220.06158447 39.05222702]
[216.82341003 53.69853210]
[207.97364807 65.80975342]
[195.00363159 73.34494019]
[180.09907532 75.03427887]
[165.77162170 70.59309387]
[154.43571472 60.76979446]
[148.00164795 47.21977997]
[147.55397034 32.22483826]
[140.08622742 45.23379135]
[132.61848450 58.24274445]
[125.15074921 71.25169373]
[134.23155212 83.05224609]
[138.11050415 97.42817688]
[136.19818115 112.19493103]
[128.78518677 125.10853577]
[116.99797058 134.20663452]
[102.62774658 138.10668945]
[87.85820770 136.21604919]
[80.39046478 149.22499084]
[73.11723328 162.34368896]
[66.04013062 175.56921387]
[58.96302414 188.79473877]
[51.88591766 202.02027893]
[44.80881119 215.24580383]
[37.73170471 228.47132874]
[46.64275742 240.81452942]
[49.30015182 255.74185181]
[45.22954559 270.28320312]
[35.28989410 281.56878662]
[21.49287224 287.39556885]
[6.59588242 286.65722656]
[-0.48122308 299.88275146]
[-7.55832863 313.10827637]
[-14.63543415 326.33380127]
[-13.61454964 344.71963501]
[-28.87141228 353.39114380]
[-35.75082397 366.72058105]
[-42.02818680 380.34390259]
[-47.69097137 394.23391724]
[-53.35375977 408.12396240]
[-59.01654434 422.01397705]
[-46.12688446 429.74426270]
[-34.56837845 439.35162354]
[-24.61197472 450.61083984]
[-16.49106216 463.25802612]
[-10.39601135 476.99670410]
[-6.46969652 491.50479126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 204]
[34 203]
[35 202]
[36 201]
[43 200]
[44 199]
[47 197]
[48 196]
[49 195]
[50 194]
[56 188]
[57 187]
[58 186]
[59 185]
[60 184]
[61 183]
[64 182]
[65 181]
[72 174]
[73 173]
[74 172]
[75 171]
[76 157]
[77 156]
[78 155]
[79 154]
[80 133]
[81 132]
[82 131]
[85 128]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
