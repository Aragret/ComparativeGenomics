%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[110.13000488 681.59570312]
[99.15588379 671.26782227]
[90.85984802 658.68713379]
[85.68930054 644.53222656]
[83.92307281 629.56634521]
[85.65642548 614.59661865]
[90.79587555 600.43041992]
[99.06425476 587.83154297]
[110.01567078 577.47961426]
[123.05951691 569.93273926]
[137.49235535 565.59802246]
[136.59954834 550.62463379]
[135.70672607 535.65124512]
[134.81390381 520.67779541]
[133.92109680 505.70440674]
[125.43997192 493.46023560]
[132.34214783 479.22399902]
[123.50582123 470.96289062]
[122.63945770 458.49560547]
[130.75161743 448.46786499]
[130.08181763 433.48281860]
[129.41203308 418.49777222]
[128.74224854 403.51275635]
[128.07246399 388.52770996]
[126.95681763 373.56924438]
[125.39630127 358.65063477]
[123.83577728 343.73205566]
[122.27525330 328.81344604]
[120.60371399 313.90686035]
[118.82124329 299.01315308]
[117.03878021 284.11941528]
[115.25631714 269.22570801]
[113.47384644 254.33198547]
[111.69138336 239.43827820]
[100.43140411 225.97796631]
[107.81882477 209.11061096]
[105.81481171 194.24508667]
[103.81079865 179.37956238]
[94.44248199 167.80009460]
[100.26670837 153.08993530]
[98.15208435 138.23973083]
[95.92696381 123.40568542]
[93.70184326 108.57164764]
[90.37958527 93.94418335]
[85.97859192 79.60433960]
[82.69647980 76.76149750]
[80.69139099 73.36383057]
[79.98091888 69.88092804]
[80.42837524 66.73984528]
[81.76996613 64.27848816]
[78.23029327 49.70211411]
[74.69062042 35.12573624]
[63.91529465 23.54113960]
[68.43072510 9.34747219]
[64.89105225 -5.22890329]
[61.35137558 -19.80527878]
[57.81170654 -34.38165283]
[50.87995148 -21.07936859]
[37.50497055 -14.28894234]
[22.67530060 -16.54303360]
[11.92204380 -27.00092316]
[9.25589657 -41.76207733]
[15.67126751 -55.32094955]
[28.77538109 -62.62041855]
[43.68072510 -60.93795776]
[54.82856750 -50.90007782]
[53.04610062 -65.79379272]
[51.26363373 -80.68751526]
[42.06174088 -68.84162140]
[27.42529488 -65.55917358]
[14.04588318 -72.34086609]
[8.04039192 -86.08619690]
[12.15445232 -100.51098633]
[24.50716972 -109.02040863]
[39.45104980 -107.72408295]
[50.15475464 -97.21299744]
[49.93142700 -112.21133423]
[49.70809937 -127.20967102]
[41.76619339 -140.89311218]
[49.31314468 -153.73417664]
[49.08981705 -168.73251343]
[38.70547104 -157.90821838]
[23.80695915 -156.16629028]
[11.20567989 -164.30310059]
[6.66277027 -178.59861755]
[12.25518703 -192.51713562]
[25.42615128 -199.69526672]
[40.15407562 -196.85128784]
[49.70618057 -185.28367615]
[51.04441452 -200.22386169]
[44.56916046 -214.65930176]
[53.41107941 -226.64552307]
[54.74931335 -241.58570862]
[52.39799881 -250.41232300]
[56.22031021 -256.73782349]
[57.78083420 -271.65640259]
[59.34135818 -286.57501221]
[45.19986343 -291.81610107]
[32.80652237 -300.41006470]
[22.94039536 -311.81665039]
[16.22167015 -325.31884766]
[13.07269478 -340.06790161]
[13.69141388 -355.13668823]
[18.03893661 -369.57794189]
[25.84197235 -382.48388672]
[36.61001587 -393.04324341]
[49.66617966 -400.59225464]
[64.18974304 -404.65634155]
[79.26773834 -404.98010254]
[93.95235443 -401.54312134]
[107.32050323 -394.56146240]
[118.53185272 -384.47402954]
[126.88164520 -371.91488647]
[131.84501648 -357.67355347]
[133.10993958 -342.64520264]
[130.59692383 -327.77459717]
[124.46392822 -313.99642944]
[115.09648895 -302.17687988]
[103.08344269 -293.05892944]
[89.17993164 -287.21566772]
[74.25996399 -285.01449585]
[72.69944000 -270.09588623]
[71.13891602 -255.17729187]
[69.68949890 -240.24748230]
[68.35126495 -225.30729675]
[74.92224121 -211.94049072]
[65.98460388 -198.88563538]
[64.64636993 -183.94544983]
[64.08815765 -168.95584106]
[64.31148529 -153.95750427]
[72.23741913 -141.34683228]
[64.70643616 -127.43299866]
[64.92976379 -112.43466187]
[65.15309143 -97.43632507]
[66.15735626 -82.46997833]
[67.93981934 -67.57626343]
[69.72228241 -52.68254471]
[72.38807678 -37.92132568]
[75.92774963 -23.34495163]
[79.46742249 -8.76857567]
[83.00709534 5.80779982]
[93.52924347 16.34979820]
[89.26699829 31.58606529]
[92.80667114 46.16244125]
[96.34633636 60.73881531]
[100.31843567 75.20333862]
[104.71943665 89.54319000]
[109.62580872 75.36829376]
[120.89732361 65.47118378]
[135.58764648 62.43892670]
[149.85675049 67.06415558]
[159.97471619 78.13784027]
[163.29676819 92.76535034]
[158.95448303 107.12309265]
[148.08296204 117.45797729]
[133.52397156 121.06850433]
[119.08320618 117.01087952]
[108.53588867 106.34652710]
[110.76100922 121.18057251]
[112.98612213 136.01461792]
[117.35391998 144.03709412]
[115.13223267 151.08592224]
[124.64388275 163.72866821]
[118.67632294 177.37554932]
[120.68033600 192.24107361]
[122.68434906 207.10659790]
[132.44949341 215.53303528]
[133.81260681 227.95582581]
[126.58509827 237.65580750]
[128.36756897 252.54953003]
[130.15002441 267.44323730]
[131.93249512 282.33697510]
[133.71496582 297.23068237]
[135.49742126 312.12438965]
[139.62443542 320.27337646]
[137.19386292 327.25289917]
[138.75437927 342.17150879]
[140.31489563 357.09011841]
[141.87542725 372.00872803]
[144.54942322 375.42980957]
[145.86352539 379.14968872]
[145.89077759 382.70422363]
[144.84748840 385.70059204]
[143.05751038 387.85791016]
[143.72729492 402.84295654]
[144.39707947 417.82800293]
[145.06686401 432.81304932]
[145.73664856 447.79806519]
[156.00413513 463.08401489]
[147.31555176 478.33117676]
[155.86053467 491.64636230]
[148.89450073 504.81158447]
[149.78732300 519.78497314]
[150.68013000 534.75842285]
[151.57295227 549.73181152]
[152.46575928 564.70520020]
[167.31144714 567.29412842]
[181.15966797 573.23748779]
[193.26361084 582.21478271]
[202.97055054 593.74176025]
[209.75697327 607.19696045]
[213.25689697 621.85461426]
[213.28160095 636.92431641]
[209.82974243 651.59338379]
[203.08746338 665.07067871]
[193.41836548 676.62945557]
[181.34390259 685.64636230]
[167.51524353 691.63507080]
[152.67813110 694.27264404]
[137.63272095 693.41687012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[17 190]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 179]
[26 178]
[27 177]
[28 176]
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[36 166]
[37 165]
[38 164]
[40 162]
[41 160]
[42 159]
[43 158]
[44 147]
[45 146]
[50 145]
[51 144]
[52 143]
[54 141]
[55 140]
[56 139]
[57 138]
[66 137]
[67 136]
[68 135]
[76 134]
[77 133]
[78 132]
[80 130]
[81 129]
[89 128]
[90 127]
[92 125]
[93 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
