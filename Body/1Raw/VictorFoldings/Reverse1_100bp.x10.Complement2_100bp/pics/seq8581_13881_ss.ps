%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[144.32182312 594.51257324]
[139.05451965 580.44720459]
[135.55566406 565.84112549]
[133.87828064 550.91577148]
[134.04782104 535.89739990]
[136.06169128 521.01373291]
[139.88937378 506.49035645]
[145.47285461 492.54745483]
[152.72746277 479.39639282]
[161.54322815 467.23654175]
[171.78651428 456.25225830]
[183.30204773 446.61004639]
[195.91522217 438.45605469]
[209.43484497 431.91394043]
[204.60885620 417.71148682]
[199.78285217 403.50903320]
[194.95686340 389.30657959]
[190.13085938 375.10412598]
[176.69834900 368.77142334]
[171.60177612 354.43685913]
[178.33517456 340.39053345]
[173.50918579 326.18807983]
[168.68318176 311.98562622]
[163.85717773 297.78317261]
[158.92558289 283.61703491]
[153.88867188 269.48800659]
[148.85176086 255.35897827]
[143.81483459 241.22994995]
[138.77792358 227.10092163]
[133.53120422 213.04844666]
[128.07585144 199.07565308]
[122.62049103 185.10285950]
[118.68380737 182.39886475]
[116.40396118 177.19316101]
[117.21754456 170.63194275]
[112.18062592 156.50291443]
[107.14370728 142.37388611]
[92.22966003 142.26345825]
[78.25164032 137.06193542]
[66.89344788 127.39588928]
[59.52331161 114.42970276]
[57.02904510 99.72529602]
[59.71110535 85.05397797]
[67.24641418 72.18307495]
[78.72725677 62.66303253]
[73.69034576 48.53400421]
[68.65342712 34.40497589]
[62.82405853 27.37245941]
[63.64840698 20.02791977]
[58.82241058 5.82546473]
[53.99641418 -8.37699127]
[49.06481934 -22.54312515]
[44.02790070 -36.67215729]
[38.99098587 -50.80118561]
[33.95407104 -64.93021393]
[28.91715431 -79.05924225]
[23.88023758 -93.18827057]
[21.92955399 -78.31565094]
[15.92052650 -64.57186890]
[6.32704973 -53.04081726]
[-6.09429359 -44.63187790]
[-20.36390495 -40.00822067]
[-35.35642242 -39.53448486]
[-49.88947296 -43.24802780]
[-62.81692123 -50.85599136]
[-73.11925507 -61.75837326]
[-79.98398590 -75.09536743]
[-82.86973572 -89.81516266]
[-81.54892731 -104.75689697]
[-76.12570953 -118.74220276]
[-67.02779388 -130.66813660]
[-54.97267914 -139.59417725]
[-40.91107559 -144.81637573]
[-25.95194244 -145.92288208]
[-11.27502155 -142.82643127]
[1.96220696 -135.77124023]
[12.71579838 -125.31369019]
[20.13895607 -112.27529907]
[19.46917152 -127.26033783]
[18.79938507 -142.24537659]
[18.12960052 -157.23040771]
[17.45981598 -172.21545410]
[9.11402225 -185.65637207]
[16.27530289 -198.71643066]
[15.60551739 -213.70147705]
[14.93573284 -228.68650818]
[14.26594734 -243.67155457]
[4.90492058 -231.95100403]
[-9.52644539 -227.86007690]
[-23.64560890 -232.92459106]
[-32.18647003 -245.25559998]
[-31.96349907 -260.25393677]
[-23.05985832 -272.32562256]
[-8.79638672 -276.96817017]
[5.50699472 -272.45007324]
[14.51586056 -260.45532227]
[15.63150883 -275.41378784]
[16.74715805 -290.37222290]
[2.66841173 -295.87500000]
[-9.16185379 -305.28436279]
[-17.69169807 -317.76367188]
[-22.16265488 -332.20324707]
[-22.17716980 -347.31918335]
[-17.73395157 -361.76733398]
[-9.22808647 -374.26300049]
[2.58408713 -383.69506836]
[16.65223885 -389.22485352]
[31.72544098 -390.36065674]
[46.46339035 -387.00146484]
[59.55560303 -379.44595337]
[69.83792877 -368.36602783]
[76.39606476 -354.74682617]
[78.64686584 -339.79940796]
[76.39019775 -324.85287476]
[69.82672119 -311.23626709]
[59.54005432 -300.16033936]
[46.44487762 -292.60998535]
[31.70561028 -289.25659180]
[30.58996201 -274.29812622]
[29.47431374 -259.33966064]
[29.25098610 -244.34133911]
[29.92077065 -229.35629272]
[30.59055710 -214.37126160]
[31.26034164 -199.38621521]
[39.55822754 -187.01713562]
[32.44485474 -172.88523865]
[33.11463928 -157.90019226]
[33.78442383 -142.91516113]
[34.45420837 -127.93012238]
[35.12399292 -112.94508362]
[38.00926590 -98.22518921]
[43.04618454 -84.09616089]
[48.08309937 -69.96713257]
[53.12001419 -55.83810043]
[58.15693283 -41.70907211]
[63.19384766 -27.58004189]
[68.40088654 -22.33518410]
[68.19886780 -13.20298862]
[73.02486420 0.99946707]
[77.85086060 15.20192242]
[82.78245544 29.36805725]
[87.81937408 43.49708557]
[92.85629272 57.62611771]
[107.77033997 57.73653412]
[121.74835968 62.93806076]
[133.10655212 72.60411072]
[140.47668457 85.57029724]
[142.97096252 100.27470398]
[140.28889465 114.94602203]
[132.75358582 127.81692505]
[121.27274323 137.33695984]
[126.30965424 151.46600342]
[131.34657288 165.59503174]
[136.59329224 179.64749146]
[142.04864502 193.62030029]
[147.50399780 207.59309387]
[152.41854858 212.01562500]
[154.10823059 217.44166565]
[152.90695190 222.06401062]
[157.94387817 236.19303894]
[162.98078918 250.32206726]
[168.01770020 264.45108032]
[173.05462646 278.58010864]
[178.88398743 285.61264038]
[178.05964661 292.95718384]
[182.88563538 307.15963745]
[187.71163940 321.36209106]
[192.53762817 335.56454468]
[206.43481445 342.60058594]
[211.12675476 357.07263184]
[204.33331299 370.27813721]
[209.15931702 384.48059082]
[213.98530579 398.68304443]
[218.81130981 412.88549805]
[223.63731384 427.08795166]
[238.34384155 424.03881836]
[253.31362915 422.82009888]
[268.31970215 423.45025635]
[283.13461304 425.91976929]
[297.53372192 430.19119263]
[311.29876709 436.19976807]
[324.22109985 443.85440063]
[336.10476685 453.03903198]
[346.76965332 463.61447144]
[356.05407715 475.42037964]
[363.81729126 488.27774048]
[369.94158936 501.99169922]
[374.33413696 516.35430908]
[376.92834473 531.14788818]
[377.68487549 546.14813232]
[376.59228516 561.12768555]
[373.66711426 575.85937500]
[368.95373535 590.11993408]
[362.52355957 603.69317627]
[354.47412109 616.37329102]
[344.92739868 627.96807861]
[334.02813721 638.30181885]
[321.94155884 647.21777344]
[308.85092163 654.58081055]
[294.95462036 660.27935791]
[280.46337891 664.22692871]
[265.59686279 666.36370850]
[250.58041382 666.65734863]
[235.64172363 665.10339355]
[221.00721741 661.72540283]
[206.89877319 656.57452393]
[193.53027344 649.72888184]
[181.10438538 641.29223633]
[169.80946350 631.39251709]
[159.81674194 620.17980957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[21 168]
[22 167]
[23 166]
[24 165]
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 156]
[31 155]
[32 154]
[35 153]
[36 152]
[37 151]
[45 143]
[46 142]
[47 141]
[49 140]
[50 139]
[51 138]
[52 136]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[84 124]
[85 123]
[86 122]
[87 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
