%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[66.58531189 638.03942871]
[57.16398239 626.24365234]
[51.27555847 612.34295654]
[49.35699463 597.36889648]
[51.55066299 582.43267822]
[57.69377899 568.64270020]
[67.33048248 557.02215576]
[79.74566650 548.43347168]
[94.01804352 543.51391602]
[93.12522888 528.54052734]
[92.23241425 513.56707764]
[91.33959198 498.59368896]
[90.44677734 483.62030029]
[78.06620026 479.68774414]
[67.73348236 471.76248169]
[60.69169617 460.77066040]
[57.79727173 448.00881958]
[59.41588593 434.99118042]
[65.37641907 423.26983643]
[74.98876190 414.24978638]
[87.12365723 409.02044678]
[86.67704773 394.02709961]
[78.56423950 381.53585815]
[85.88722992 367.51141357]
[85.44062042 352.51806641]
[73.41142273 361.47900391]
[58.86727524 357.80914307]
[52.52958679 344.21380615]
[59.07026291 330.71493530]
[73.66776276 327.26339722]
[85.56060028 336.40209961]
[86.23038483 321.41705322]
[86.90016937 306.43200684]
[87.56995392 291.44699097]
[88.23973846 276.46194458]
[81.07846069 263.40188599]
[89.42425537 249.96095276]
[90.09403992 234.97592163]
[90.76382446 219.99087524]
[80.55431366 209.20655823]
[81.02010345 194.00006104]
[92.40090942 183.36450195]
[93.07069397 168.37947083]
[93.29402161 153.38113403]
[93.07069397 138.38279724]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.84246063 78.39650726]
[91.39585114 63.40316010]
[90.83763885 48.41355133]
[90.16785431 33.42851257]
[75.35488892 30.71153069]
[61.52465057 24.76906967]
[49.36949158 15.90210915]
[39.49712753 4.55794954]
[32.40025711 -8.69235897]
[28.43197060 -23.18276405]
[27.78818703 -38.18568420]
[30.49798203 -52.94854355]
[36.42228699 -66.73153687]
[45.26103210 -78.84467316]
[56.56832886 -88.68235016]
[69.77497864 -95.75360870]
[84.21712494 -99.70663452]
[83.54734039 -114.69167328]
[82.87755585 -129.67671204]
[82.20777130 -144.66175842]
[73.23332977 -153.92578125]
[72.98396301 -166.42063904]
[81.04804230 -175.43714905]
[80.60143280 -190.43049622]
[80.15483093 -205.42384338]
[79.48504639 -220.40888977]
[78.59223175 -235.38229370]
[77.69940948 -250.35569763]
[68.58804321 -259.48507690]
[68.15267181 -271.97485352]
[76.08161163 -281.11041260]
[75.41182709 -296.09545898]
[74.40756989 -311.06179810]
[73.06933594 -326.00198364]
[71.73110199 -340.94216919]
[70.39286804 -355.88235474]
[69.05463409 -370.82254028]
[67.71640015 -385.76272583]
[52.74077606 -387.19290161]
[38.28300476 -391.35070801]
[24.83550453 -398.09454346]
[12.85629749 -407.19473267]
[2.75338960 -418.34130859]
[-5.12911844 -431.15460205]
[-10.52275085 -445.19821167]
[-13.24380207 -459.99383545]
[-13.19959545 -475.03753662]
[-10.39163589 -489.81692505]
[-4.91556168 -503.82861328]
[3.04211473 -516.59533691]
[13.21035767 -527.68237305]
[25.24283981 -536.71197510]
[38.72974014 -543.37664795]
[53.21170044 -547.44946289]
[68.19546509 -548.79156494]
[83.17070007 -547.35736084]
[97.62735748 -543.19567871]
[111.07303619 -536.44818115]
[123.04978943 -527.34478760]
[133.14968872 -516.19549561]
[141.02874756 -503.38006592]
[146.41859436 -489.33499146]
[149.13565063 -474.53863525]
[149.08738708 -459.49493408]
[146.27545166 -444.71633911]
[140.79559326 -430.70611572]
[132.83448792 -417.94149780]
[122.66325378 -406.85726929]
[110.62833405 -397.83087158]
[97.13964081 -391.16983032]
[82.65658569 -387.10095215]
[83.99481964 -372.16076660]
[85.33305359 -357.22058105]
[86.67128754 -342.28039551]
[88.00952148 -327.34020996]
[89.34775543 -312.40002441]
[91.80446625 -309.87081909]
[93.15818024 -306.02600098]
[92.80391693 -301.39700317]
[90.39686584 -296.76522827]
[91.06665039 -281.78018188]
[101.29431152 -267.51968384]
[92.67282104 -251.24850464]
[93.56563568 -236.27510071]
[94.45845032 -221.30169678]
[97.37251282 -217.51788330]
[97.94055176 -211.86329651]
[95.14817810 -205.87045288]
[95.59478760 -190.87710571]
[96.04138947 -175.88374329]
[106.05559540 -161.47254944]
[97.19281006 -145.33154297]
[97.86259460 -130.34649658]
[98.53237915 -115.36145782]
[99.20216370 -100.37641907]
[113.93938446 -97.72761536]
[127.72424316 -91.86280060]
[139.86412048 -83.07314301]
[149.74830627 -71.79685974]
[156.87864685 -58.59737015]
[160.89471436 -44.13513565]
[161.59197998 -29.13460732]
[158.93229675 -14.34795189]
[153.04585266 -0.51732951]
[144.22494507 11.66236210]
[132.90931702 21.57839394]
[119.66439056 28.73103333]
[105.15289307 32.75872803]
[105.82267761 47.74376678]
[109.26171875 54.28554153]
[106.38919830 62.95655441]
[106.83580780 77.94990540]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[108.06903076 138.15946960]
[108.29235840 153.15780640]
[110.65047455 156.80380249]
[111.62746429 160.62609863]
[111.33750153 164.16888428]
[110.03105164 167.06021118]
[108.05573273 169.04925537]
[107.38594818 184.03428650]
[117.77251434 195.64277649]
[116.87979126 210.83020020]
[105.74886322 220.66065979]
[105.07907867 235.64570618]
[104.40929413 250.63073730]
[111.52266693 264.76263428]
[103.22477722 277.13171387]
[102.55499268 292.11676025]
[101.88520813 307.10180664]
[101.21542358 322.08685303]
[100.54563904 337.07186890]
[100.43397522 352.07147217]
[100.88057709 367.06481934]
[109.02532959 380.62850952]
[101.67040253 393.58050537]
[102.11700439 408.57385254]
[117.93207550 415.26513672]
[129.19494629 428.15463257]
[133.67613220 444.61727905]
[130.52075195 461.32824707]
[120.41117096 474.93450928]
[105.42018127 482.72747803]
[106.31300354 497.70089722]
[107.20581818 512.67431641]
[108.09863281 527.64770508]
[108.99144745 542.62109375]
[123.74729156 545.80981445]
[137.09510803 552.86230469]
[148.04441833 563.25537109]
[155.78268433 576.21771240]
[159.73570251 590.78741455]
[159.61010742 605.88330078]
[155.41523743 620.38525391]
[147.46237183 633.21697998]
[136.34167480 643.42645264]
[122.87836456 650.25592041]
[108.07151031 653.19866943]
[93.01988220 652.03631592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[21 188]
[22 187]
[24 185]
[25 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[37 177]
[38 176]
[39 175]
[42 172]
[43 171]
[44 166]
[45 165]
[46 164]
[47 163]
[48 161]
[49 160]
[50 159]
[51 157]
[52 156]
[65 143]
[66 142]
[67 141]
[68 140]
[71 138]
[72 137]
[73 136]
[74 133]
[75 132]
[76 131]
[79 129]
[80 128]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
