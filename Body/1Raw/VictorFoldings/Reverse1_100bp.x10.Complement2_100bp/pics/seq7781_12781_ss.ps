%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[67.47653961 526.25421143]
[56.29492950 536.33172607]
[43.31343842 543.95178223]
[29.06365776 548.80242920]
[14.12910175 550.68493652]
[-0.87866694 549.52233887]
[-15.34508991 545.36206055]
[-28.67777634 538.37463379]
[-40.33076096 528.84613037]
[-49.82686234 517.16668701]
[-56.77721786 503.81463623]
[-60.89722061 489.33670044]
[-62.01815414 474.32577515]
[-60.09411621 459.39648438]
[-55.20389938 445.16024780]
[-47.54775238 432.19998169]
[-37.43918991 421.04644775]
[-25.29215050 412.15631104]
[-11.60404873 405.89364624]
[3.06459570 402.51495361]
[18.11311150 402.15850830]
[20.77890778 387.39727783]
[23.44470215 372.63607788]
[26.11049843 357.87484741]
[24.62478256 355.49771118]
[23.99116325 352.38882446]
[24.49306679 348.86981201]
[26.29237175 345.35882568]
[29.39945030 342.32568359]
[32.93912125 327.74929810]
[22.06750107 317.56729126]
[17.72319984 303.21517944]
[21.16878319 288.51843262]
[31.57639122 277.44689941]
[46.22389221 273.04260254]
[41.70846558 258.84893799]
[52.48379135 247.26432800]
[56.02346420 232.68795776]
[54.34781647 228.21568298]
[55.46383667 222.64329529]
[59.89161301 217.73347473]
[63.86371231 203.26895142]
[67.83580780 188.80442810]
[71.80790710 174.33990479]
[67.71707916 160.01809692]
[78.83254242 148.75944519]
[82.80463409 134.29492188]
[86.77673340 119.83039856]
[90.74883270 105.36587524]
[92.97394562 90.53182983]
[93.42055511 75.53848267]
[93.86715698 60.54513168]
[94.31376648 45.55178070]
[94.76036835 30.55843353]
[87.43738556 16.53400993]
[95.55019379 4.04274893]
[95.99679565 -10.95060062]
[80.46079254 -16.90670967]
[67.92215729 -27.80495453]
[59.88481522 -42.31487274]
[57.30480194 -58.67424774]
[60.47658157 -74.90309906]
[68.99954224 -89.04333496]
[81.82852936 -99.39501190]
[97.40195465 -104.72068024]
[97.40195465 -119.72068024]
[97.40195465 -134.72067261]
[97.40195465 -149.72067261]
[97.40195465 -164.72067261]
[82.77738953 -168.35491943]
[69.45571899 -175.37954712]
[58.20928955 -185.38238525]
[49.68894958 -197.77876282]
[44.38639832 -211.84561157]
[42.60580063 -226.76373291]
[44.44635010 -241.66543579]
[49.79674911 -255.68502808]
[58.34193420 -268.00912476]
[69.58161163 -277.92385864]
[82.85956573 -284.85607910]
[97.40195465 -288.40673828]
[97.40195465 -303.40673828]
[97.40195465 -318.40673828]
[97.40195465 -333.40673828]
[97.40195465 -348.40673828]
[94.43239594 -354.31381226]
[94.83181763 -359.98278809]
[97.63193512 -363.85168457]
[98.07854462 -378.84503174]
[87.52029419 -390.29760742]
[88.18679810 -405.49664307]
[99.17013550 -415.49172974]
[91.84714508 -429.51614380]
[99.95995331 -442.00741577]
[100.40656281 -457.00076294]
[100.85316467 -471.99411011]
[101.29977417 -486.98745728]
[101.74637604 -501.98080444]
[102.19298553 -516.97418213]
[88.31426239 -523.17492676]
[77.86856079 -534.21832275]
[72.44877625 -548.42022705]
[72.88137054 -563.61499023]
[79.10039520 -577.48553467]
[90.15748596 -587.91668701]
[104.36651611 -593.31781006]
[119.56071472 -592.86523438]
[133.42306519 -586.62792969]
[143.83967590 -575.55712891]
[149.22209167 -561.34100342]
[148.74951172 -546.14746094]
[142.49401855 -532.29327393]
[131.40953064 -521.89123535]
[117.18633270 -516.52758789]
[116.73973083 -501.53421021]
[116.29312134 -486.54086304]
[115.84651947 -471.54751587]
[115.39990997 -456.55416870]
[114.95330811 -441.56082153]
[122.30823517 -428.60882568]
[114.16348267 -415.04513550]
[124.53242493 -404.41400146]
[124.29309082 -389.20227051]
[113.07189178 -378.39843750]
[112.62528229 -363.40509033]
[112.40195465 -348.40673828]
[112.40195465 -333.40673828]
[112.40195465 -318.40673828]
[112.40195465 -303.40673828]
[112.40195465 -288.40673828]
[126.94435120 -284.85607910]
[140.22230530 -277.92385864]
[151.46199036 -268.00912476]
[160.00717163 -255.68502808]
[165.35755920 -241.66543579]
[167.19812012 -226.76373291]
[165.41752625 -211.84561157]
[160.11497498 -197.77876282]
[151.59463501 -185.38238525]
[140.34819031 -175.37954712]
[127.02652740 -168.35491943]
[112.40195465 -164.72067261]
[112.40195465 -149.72067261]
[112.40195465 -134.72067261]
[112.40195465 -119.72068024]
[112.40195465 -104.72068024]
[125.27818298 -100.77119446]
[136.53491211 -93.34591675]
[145.25563049 -83.03808594]
[150.72709656 -70.67606354]
[152.49771118 -57.25680923]
[150.41473389 -43.86547089]
[144.63743591 -31.58761978]
[135.62496948 -21.42127037]
[124.09987640 -14.19573498]
[110.99015045 -10.50399494]
[110.54354095 4.48935509]
[117.89847565 17.44135284]
[109.75372314 31.00503922]
[109.30711365 45.99839020]
[108.86051178 60.99173737]
[108.41390228 75.98509216]
[107.96730042 90.97843933]
[115.61292267 78.07323456]
[127.16729736 68.50785828]
[141.27302551 63.40604019]
[156.27297974 63.36714554]
[170.40496826 68.39573669]
[182.00878906 77.90106201]
[189.72125244 90.76644135]
[192.63627625 105.48046875]
[190.41142273 120.31455231]
[183.30807495 133.52600098]
[172.16070557 143.56274414]
[158.27890015 149.24566650]
[143.29348755 149.90716553]
[128.96495056 145.46951294]
[116.97657013 136.45404053]
[108.73673248 123.91988373]
[105.21335602 109.33797455]
[101.24125671 123.80249786]
[97.26915741 138.26701355]
[93.29706573 152.73153687]
[97.10378265 168.08795166]
[86.27243042 178.31199646]
[82.30033112 192.77651978]
[78.32823181 207.24104309]
[74.35614014 221.70556641]
[70.59983826 236.22763062]
[67.06016541 250.80400085]
[71.32241058 266.04028320]
[60.80026627 276.58227539]
[71.79651642 287.21380615]
[75.96731567 301.82550049]
[72.28882599 316.46569824]
[61.84608459 327.22695923]
[47.51549911 331.28897095]
[43.97582626 345.86535645]
[40.87171555 360.54064941]
[38.20592117 375.30187988]
[35.54012299 390.06307983]
[32.87432861 404.82431030]
[46.84757614 410.42190552]
[59.40781021 418.71801758]
[70.04069519 429.37289429]
[78.31082916 441.95025635]
[83.87953949 455.93505859]
[86.51880646 470.75460815]
[86.12054443 485.80206299]
[82.70106506 500.46127319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 202]
[22 201]
[23 200]
[24 199]
[29 198]
[30 197]
[35 192]
[37 190]
[38 189]
[41 188]
[42 187]
[43 186]
[44 185]
[46 183]
[47 182]
[48 181]
[49 180]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[56 157]
[57 156]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[88 125]
[89 124]
[92 121]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
