%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[91.88928223 584.09838867]
[98.61592865 570.29089355]
[111.35411072 561.70983887]
[110.23845673 546.75140381]
[109.12281036 531.79290771]
[94.25219727 529.99316406]
[80.01392365 525.32525635]
[66.95580292 517.96679688]
[55.58061981 508.19894409]
[46.32678604 496.39569092]
[39.55143738 483.00958252]
[35.51664352 468.55419922]
[34.37928391 453.58462524]
[36.18493652 438.67602539]
[40.86606598 424.40167236]
[48.24453354 411.31076050]
[58.03839493 399.90728760]
[69.87265015 390.63079834]
[83.29363251 383.83926392]
[97.78635406 379.79541016]
[96.67070770 364.83694458]
[95.55505371 349.87850952]
[94.43940735 334.92004395]
[92.02062988 332.35452271]
[90.72430420 328.48999023]
[91.14745331 323.86676025]
[93.62319183 319.27136230]
[93.17658234 304.27801514]
[92.72998047 289.28466797]
[89.92986298 285.41577148]
[89.53043365 279.74676514]
[92.50000000 273.83972168]
[92.50000000 258.83972168]
[92.50000000 243.83972168]
[92.50000000 228.83972168]
[92.50000000 213.83972168]
[92.50000000 198.83972168]
[84.76270294 186.11244202]
[92.50000000 172.31227112]
[92.50000000 157.31227112]
[92.50000000 142.31227112]
[78.48901367 137.20021057]
[67.06925964 127.60697174]
[59.61638260 114.68816376]
[57.02816391 100.00000000]
[59.61638260 85.31183624]
[67.06925964 72.39302826]
[78.48901367 62.79978561]
[92.50000000 57.68772507]
[92.50000000 42.68772507]
[92.50000000 27.68772507]
[84.76270294 13.88755322]
[92.50000000 1.16028130]
[92.50000000 -13.83971882]
[92.50000000 -28.83971786]
[84.76270294 -42.63989258]
[92.50000000 -55.36716461]
[92.50000000 -70.36716461]
[92.50000000 -85.36716461]
[92.50000000 -100.36716461]
[92.50000000 -115.36716461]
[92.50000000 -130.36715698]
[92.16502380 -145.36341858]
[91.49523926 -160.34846497]
[90.82545471 -175.33349609]
[90.15567017 -190.31854248]
[89.48588562 -205.30357361]
[88.81610107 -220.28862000]
[88.14631653 -235.27365112]
[87.47652435 -250.25869751]
[85.58323669 -265.13873291]
[82.47912598 -279.81402588]
[79.37501526 -294.48931885]
[76.27090454 -309.16464233]
[62.25829697 -315.56408691]
[54.78807831 -328.83245850]
[56.54240799 -343.77856445]
[66.64034271 -354.69503784]
[63.53623581 -369.37033081]
[60.43212509 -384.04565430]
[57.32801437 -398.72094727]
[54.22390366 -413.39624023]
[51.11979294 -428.07156372]
[36.07149124 -427.88494873]
[21.27598572 -430.63796997]
[7.30197620 -436.22485352]
[-5.31341314 -444.43084717]
[-16.08528137 -454.94052124]
[-24.59958458 -467.34991455]
[-30.52905655 -481.18200684]
[-33.64578629 -495.90521240]
[-33.82997131 -510.95355225]
[-31.07453346 -525.74859619]
[-25.48538589 -539.72167969]
[-17.27735901 -552.33575439]
[-6.76594925 -563.10595703]
[5.64481497 -571.61822510]
[19.47789574 -577.54547119]
[34.20158768 -580.65979004]
[49.24995041 -580.84155273]
[64.04456329 -578.08374023]
[78.01676178 -572.49230957]
[90.62949371 -564.28222656]
[101.39795685 -553.76910400]
[109.90824890 -541.35693359]
[115.83323669 -527.52288818]
[118.94520569 -512.79870605]
[119.12451935 -497.75033569]
[116.36428833 -482.95614624]
[110.77062225 -468.98486328]
[102.55850983 -456.37347412]
[92.04361725 -445.60668945]
[79.63009644 -437.09841919]
[65.79509735 -431.17565918]
[68.89920807 -416.50036621]
[72.00331879 -401.82507324]
[75.10742950 -387.14974976]
[78.21153259 -372.47445679]
[81.31564331 -357.79916382]
[94.96903229 -351.90652466]
[102.62512207 -338.95089722]
[101.16737366 -323.79409790]
[90.94620514 -312.26873779]
[94.05031586 -297.59344482]
[97.15442657 -282.91815186]
[100.25853729 -268.24282837]
[105.96977997 -282.11300659]
[117.41316223 -291.81088257]
[132.03222656 -295.16995239]
[146.56100464 -291.43975830]
[157.75375366 -281.45364380]
[163.10998535 -267.44256592]
[161.43309021 -252.53657532]
[153.09770203 -240.06576538]
[139.96595764 -232.81611633]
[124.97153473 -232.40722656]
[111.46421814 -238.93043518]
[102.46156311 -250.92848206]
[103.13135529 -235.94343567]
[103.80113983 -220.95840454]
[104.47092438 -205.97335815]
[105.14070892 -190.98832703]
[105.81049347 -176.00328064]
[106.48027802 -161.01824951]
[107.15006256 -146.03320312]
[109.49138641 -143.39682007]
[110.67207336 -139.49540710]
[110.11146545 -134.88682556]
[107.50000000 -130.36715698]
[107.50000000 -115.36716461]
[107.50000000 -100.36716461]
[107.50000000 -85.36716461]
[107.50000000 -70.36716461]
[107.50000000 -55.36716461]
[115.23729706 -42.63989258]
[107.50000000 -28.83971786]
[107.50000000 -13.83971882]
[107.50000000 1.16028130]
[115.23729706 13.88755322]
[107.50000000 27.68772507]
[107.50000000 42.68772507]
[107.50000000 57.68772507]
[121.51098633 62.79978561]
[132.93074036 72.39302826]
[140.38362122 85.31183624]
[142.97183228 100.00000000]
[140.38362122 114.68816376]
[132.93074036 127.60697174]
[121.51098633 137.20021057]
[107.50000000 142.31227112]
[107.50000000 157.31227112]
[107.50000000 172.31227112]
[115.23729706 186.11244202]
[107.50000000 198.83972168]
[107.50000000 213.83972168]
[107.50000000 228.83972168]
[107.50000000 243.83972168]
[107.50000000 258.83972168]
[107.50000000 273.83972168]
[107.72332764 288.83804321]
[108.16993713 303.83142090]
[108.61653900 318.82476807]
[109.39786530 333.80438232]
[110.51351166 348.76284790]
[111.62915802 363.72131348]
[112.74480438 378.67974854]
[127.67706299 380.52899170]
[141.95701599 385.25451660]
[155.03642273 392.67285156]
[166.41352844 402.49731445]
[175.65229797 414.34890747]
[182.39910889 427.77093506]
[186.39633179 442.24670410]
[187.49215698 457.21939087]
[185.64633179 472.11337280]
[180.93165588 486.35644531]
[173.53111267 499.40182495]
[163.73075867 510.74899292]
[151.90867615 519.96313477]
[138.52037048 526.69152832]
[124.08126068 530.67730713]
[125.19691467 545.63574219]
[126.31256104 560.59417725]
[140.18273926 567.19067383]
[148.88317871 579.84765625]
[150.07351685 595.16033936]
[143.43357849 609.00976562]
[130.74943542 617.67047119]
[115.43308258 618.81280518]
[101.60453796 612.12951660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[20 186]
[21 185]
[22 184]
[23 183]
[27 182]
[28 181]
[29 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[39 172]
[40 171]
[41 170]
[49 162]
[50 161]
[51 160]
[53 158]
[54 157]
[55 156]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 126]
[72 125]
[73 124]
[74 123]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
