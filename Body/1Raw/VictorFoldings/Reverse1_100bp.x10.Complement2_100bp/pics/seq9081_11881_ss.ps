%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[246.75222778 421.12976074]
[253.95629883 407.94702148]
[262.85324097 395.84213257]
[273.28427124 385.03115845]
[285.06323242 375.70700073]
[277.40261841 362.81069946]
[269.74203491 349.91436768]
[262.08142090 337.01803589]
[254.42083740 324.12170410]
[246.76023865 311.22537231]
[233.60815430 304.23452759]
[233.21249390 288.41827393]
[225.55189514 275.52194214]
[217.89129639 262.62561035]
[210.23069763 249.72929382]
[201.35980225 237.63354492]
[191.36163330 226.45156860]
[181.36346436 215.26959229]
[171.36529541 204.08761597]
[161.36712646 192.90563965]
[151.36894226 181.72366333]
[149.45263672 196.60075378]
[137.66265869 205.87419128]
[122.75285339 204.23170471]
[113.26423645 192.61422729]
[114.63230896 177.67674255]
[126.07338715 167.97613525]
[141.03265381 169.06892395]
[132.07194519 157.03955078]
[125.55523682 153.55326843]
[123.06897736 144.76370239]
[114.28837585 132.60224915]
[105.50777435 120.44079590]
[89.15930176 118.18353271]
[79.39920044 104.87532806]
[82.15912628 88.60417175]
[73.19843292 76.57479095]
[65.56227875 71.56211090]
[64.19545746 64.29895020]
[55.41485596 52.13748932]
[46.63425446 39.97603607]
[37.85364914 27.81457901]
[23.50227165 21.15511131]
[22.32518578 6.30708981]
[13.54458237 -5.85436583]
[-0.80679607 -12.51383400]
[-1.98388207 -27.36185455]
[-10.76448536 -39.52331161]
[-19.54508781 -51.68476868]
[-28.32569122 -63.84622192]
[-36.44552231 -62.27247238]
[-44.63640976 -63.14465332]
[-52.18072128 -66.36646271]
[-58.42330170 -71.63661194]
[-62.82837296 -78.47690582]
[-65.02548218 -86.27555847]
[-64.84060669 -94.34194946]
[-62.30976486 -101.96771240]
[-57.67411041 -108.48899841]
[-65.33470917 -121.38533020]
[-72.99530792 -134.28166199]
[-80.65590668 -147.17797852]
[-88.31649780 -160.07431030]
[-95.97709656 -172.97064209]
[-109.78251648 -167.04902649]
[-124.24276733 -162.98010254]
[-139.11041260 -160.83349609]
[-154.13107300 -160.64591980]
[-169.04768372 -162.42059326]
[-183.60502625 -166.12716675]
[-197.55401611 -171.70219421]
[-210.65594482 -179.05027771]
[-222.68663025 -188.04570007]
[-233.44021606 -198.53453064]
[-242.73269653 -210.33728027]
[-250.40504456 -223.25199890]
[-256.32598877 -237.05769348]
[-260.39422607 -251.51814270]
[-262.54013062 -266.38589478]
[-262.72698975 -281.40655518]
[-260.95159912 -296.32308960]
[-257.24435425 -310.88024902]
[-251.66865540 -324.82897949]
[-244.31994629 -337.93054199]
[-235.32394409 -349.96081543]
[-224.83460999 -360.71389771]
[-213.03141785 -370.00579834]
[-200.11633301 -377.67755127]
[-186.31034851 -383.59783936]
[-171.84971619 -387.66540527]
[-156.98185730 -389.81057739]
[-141.96119690 -389.99673462]
[-127.04474640 -388.22064209]
[-112.48774719 -384.51266479]
[-98.53929901 -378.93634033]
[-85.43806458 -371.58697510]
[-73.40823364 -362.59042358]
[-62.65564728 -352.10058594]
[-53.36429977 -340.29693604]
[-45.69317245 -327.38150024]
[-39.77353668 -313.57522583]
[-35.70667648 -299.11437988]
[-33.56218719 -284.24642944]
[-33.37676239 -269.22576904]
[-35.15357208 -254.30940247]
[-38.86221695 -239.75257874]
[-44.43923569 -225.80439758]
[-51.78919601 -212.70350647]
[-60.78633118 -200.67410278]
[-71.27669525 -189.92201233]
[-83.08077240 -180.63122559]
[-75.42017365 -167.73490906]
[-67.75957489 -154.83857727]
[-60.09897995 -141.94224548]
[-52.43838120 -129.04592896]
[-44.77778244 -116.14959717]
[-23.08666992 -112.90826416]
[-10.74129772 -94.44756317]
[-16.16423607 -72.62682343]
[-7.38363266 -60.46537018]
[1.39697051 -48.30391312]
[10.17757416 -36.14245987]
[23.90090370 -30.35285950]
[25.70603752 -14.63496876]
[34.48664093 -2.47351336]
[48.20997238 3.31608605]
[50.01510620 19.03397560]
[58.79570770 31.19543266]
[67.57630920 43.35688782]
[76.35691833 55.51834488]
[85.22781372 67.61409760]
[94.18850708 79.64347076]
[106.85916138 79.97218323]
[117.07099915 87.48030853]
[121.16335297 99.47640228]
[117.66922760 111.66019440]
[126.44982910 123.82164764]
[135.23043823 135.98310852]
[144.10133362 148.07885742]
[153.06202698 160.10823059]
[162.55091858 171.72549438]
[172.54908752 182.90747070]
[182.54727173 194.08944702]
[192.54544067 205.27142334]
[202.54360962 216.45339966]
[212.54177856 227.63537598]
[209.87666321 212.87402344]
[213.36674500 198.28570557]
[222.42387390 186.32876587]
[235.52180481 179.01818848]
[250.45326233 177.58592224]
[264.70205688 182.27333069]
[275.86700439 192.29051208]
[282.06665039 205.94937134]
[282.25619507 220.94818115]
[276.40371704 234.75935364]
[265.49548340 245.05548096]
[251.36967468 250.10147095]
[236.40678406 249.04699707]
[223.12702942 242.06869507]
[230.78762817 254.96502686]
[238.44822693 267.86135864]
[246.10882568 280.75769043]
[259.80883789 288.67095947]
[259.65655518 303.56478882]
[267.31716919 316.46112061]
[274.97775269 329.35742188]
[282.63836670 342.25375366]
[290.29895020 355.15008545]
[297.95953369 368.04641724]
[311.78222656 362.16284180]
[326.26580811 358.17419434]
[341.15182495 356.15167236]
[356.17456055 356.13134766]
[371.06597900 358.11364746]
[385.56027222 362.06314087]
[399.39883423 367.90933228]
[412.33462524 375.54794312]
[424.13687134 384.84262085]
[434.59487915 395.62747192]
[443.52206421 407.71008301]
[450.75906372 420.87475586]
[456.17675781 434.88662720]
[459.67843628 449.49557495]
[461.20166016 464.44091797]
[460.71917725 479.45593262]
[458.23962402 494.27264404]
[453.80728149 508.62667847]
[447.50122070 522.26177979]
[439.43395996 534.93475342]
[429.74954224 546.41931152]
[418.62069702 556.51049805]
[406.24612427 565.02832031]
[392.84658813 571.82067871]
[378.66128540 576.76641846]
[363.94332886 579.77722168]
[348.95538330 580.79943848]
[333.96490479 579.81469727]
[319.23947144 576.84069824]
[305.04183960 571.93041992]
[291.62536621 565.17156982]
[279.22952271 556.68475342]
[268.07553101 546.62133789]
[258.36239624 535.16107178]
[250.26350403 522.50836182]
[243.92337036 508.88900757]
[239.45515442 494.54611206]
[236.93858337 479.73562622]
[236.41857910 464.72186279]
[237.90441895 449.77276611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 170]
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[12 163]
[13 162]
[14 161]
[15 160]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[21 141]
[28 140]
[29 139]
[31 138]
[32 137]
[33 136]
[36 132]
[37 131]
[39 130]
[40 129]
[41 128]
[42 127]
[44 125]
[45 124]
[47 122]
[48 121]
[49 120]
[50 119]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
