%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[-11.32893181 503.64703369]
[-8.92635345 518.51452637]
[-9.77646351 533.55084229]
[-13.83950329 548.05273438]
[-20.92543602 561.34197998]
[-30.70283699 572.79699707]
[-42.71440506 581.88189697]
[-56.39833450 588.17193604]
[-71.11460114 591.37280273]
[-86.17489624 591.33483887]
[-100.87483215 588.05975342]
[-114.52686310 581.70080566]
[-126.49245453 572.55535889]
[-136.21194458 561.05126953]
[-143.23075867 547.72644043]
[-147.22059631 533.20422363]
[-147.99485779 518.16375732]
[-145.51731873 503.30862427]
[-139.90386963 489.33352661]
[-131.41703796 476.89215088]
[-120.45379639 466.56637573]
[-107.52690125 458.83920288]
[-93.24096680 454.07199097]
[-78.26417542 452.48776245]
[-63.29702377 454.16055298]
[-58.47102356 439.95809937]
[-53.64502716 425.75564575]
[-48.81903076 411.55319214]
[-43.99303055 397.35073853]
[-47.22415543 382.81082153]
[-35.45827103 372.23373413]
[-30.63227463 358.03128052]
[-25.80627823 343.82882690]
[-20.98027992 329.62637329]
[-24.21140480 315.08645630]
[-12.44552040 304.50939941]
[-7.61952305 290.30694580]
[-2.79352546 276.10449219]
[-15.39686203 284.23809814]
[-30.39625359 284.37313843]
[-43.14397812 276.46771240]
[-49.69001007 262.97143555]
[-48.00599670 248.06628418]
[-38.61374283 236.37074280]
[-24.42354012 231.50883484]
[-9.83238029 234.98706055]
[0.63850802 245.72766113]
[3.74458766 260.40280151]
[10.42478180 246.97242737]
[17.10497665 233.54203796]
[23.78517151 220.11166382]
[30.36520004 206.63192749]
[36.84469604 193.10359192]
[43.32419205 179.57524109]
[29.20591927 184.64224243]
[15.09064770 179.56689453]
[7.43168831 166.66958618]
[9.73061466 151.84680176]
[20.93638802 141.87532043]
[35.92588043 141.31394958]
[47.84609604 150.41935730]
[51.24705887 165.03050232]
[51.31653976 150.13606262]
[65.13285828 142.42764282]
[72.98461914 129.64678955]
[80.83637238 116.86595154]
[88.68812561 104.08510590]
[96.34872437 91.18878174]
[103.81646729 78.17983246]
[110.09382629 64.55651093]
[115.13074493 50.42748260]
[120.16765594 36.29845428]
[125.20457458 22.16942406]
[130.24148560 8.04039478]
[135.27841187 -6.08863497]
[139.25050354 -20.55315971]
[142.13577271 -35.27304840]
[130.97438049 -50.58113480]
[134.48643494 -68.87261963]
[149.98287964 -78.61815643]
[152.42861938 -93.41742706]
[154.87434387 -108.21669769]
[157.32006836 -123.01596832]
[159.43469238 -137.86616516]
[161.21716309 -152.75988770]
[162.99961853 -167.65359497]
[164.78208923 -182.54731750]
[165.89773560 -197.50576782]
[166.34434509 -212.49911499]
[166.79095459 -227.49247742]
[163.91844177 -236.16348267]
[167.35746765 -242.70526123]
[168.02725220 -257.69030762]
[168.69703674 -272.67532349]
[165.99420166 -278.70910645]
[166.64636230 -284.35458374]
[169.61643982 -288.09460449]
[170.73208618 -303.05307007]
[171.84774780 -318.01150513]
[172.96339417 -332.96997070]
[159.24496460 -339.46374512]
[148.80158997 -350.47738647]
[143.04562378 -364.52136230]
[142.75553894 -379.69635010]
[147.97055054 -393.95007324]
[157.98536682 -405.35479736]
[171.44558716 -412.36813354]
[186.53080750 -414.04162598]
[201.20088196 -410.14889526]
[213.47180176 -401.21643066]
[221.68403625 -388.45227051]
[224.72692871 -373.58267212]
[222.18898010 -358.61862183]
[214.41340637 -345.58386230]
[202.45178223 -336.24124146]
[187.92184448 -331.85430908]
[186.80619812 -316.89587402]
[185.69055176 -301.93740845]
[184.57489014 -286.97894287]
[183.68208313 -272.00555420]
[183.01229858 -257.02050781]
[182.34251404 -242.03547668]
[181.78430176 -227.04586792]
[181.33769226 -212.05252075]
[180.89108276 -197.05915833]
[192.52302551 -206.53007507]
[207.45840454 -205.13925171]
[217.14157104 -193.68339539]
[216.02555847 -178.72497559]
[204.74967957 -168.83282471]
[189.77326965 -169.67362976]
[179.67581177 -180.76484680]
[177.89334106 -165.87113953]
[176.11087036 -150.97741699]
[174.32841492 -136.08369446]
[176.20854187 -133.10084534]
[176.73730469 -129.05912781]
[175.43278503 -124.60362244]
[172.11933899 -120.57023621]
[169.67361450 -105.77096558]
[167.22789001 -90.97169495]
[164.78215027 -76.17242432]
[173.27854919 -68.55812836]
[177.08361816 -57.67524338]
[175.14286804 -46.18927765]
[167.82438660 -36.97295380]
[156.85566711 -32.38777924]
[153.97039795 -17.66788673]
[164.98416138 -27.85105133]
[179.59181213 -31.25937271]
[193.97492981 -27.00192261]
[204.37380981 -16.19158936]
[208.07020569 -1.65416718]
[204.09788513 12.81029701]
[193.49522400 23.42082596]
[179.03370667 27.40385246]
[164.49354553 23.71822548]
[153.67550659 13.32735634]
[149.40744019 -1.05171883]
[144.37051392 13.07731056]
[139.33360291 27.20634079]
[134.29669189 41.33536911]
[129.25976562 55.46439743]
[124.22285461 69.59342957]
[136.11302185 60.44882584]
[150.77537537 57.28410721]
[165.37884521 60.71032715]
[177.10371399 70.06594086]
[183.68609619 83.54452515]
[183.85504150 98.54357147]
[177.57794189 112.16700745]
[166.06678772 121.78434753]
[151.54420471 125.53865051]
[136.81428528 122.70500946]
[124.72114563 113.83055878]
[117.59977722 100.62881470]
[116.82541656 85.64756775]
[109.35767365 98.65652466]
[109.54601288 103.89851379]
[106.78394318 108.87287903]
[101.46897125 111.93686676]
[93.61721039 124.71770477]
[85.76545715 137.49855042]
[77.91370392 150.27938843]
[77.28261566 166.08801270]
[64.02790070 172.88226318]
[56.85253525 186.05473328]
[50.37303925 199.58308411]
[43.89354324 213.11143494]
[43.00894547 222.20292664]
[37.21554565 226.79187012]
[30.53535271 240.22224426]
[23.85515785 253.65261841]
[17.17496300 267.08297729]
[11.40892982 280.93048096]
[6.58293247 295.13293457]
[1.75693488 309.33538818]
[4.64287233 324.89114380]
[-6.77782393 334.45239258]
[-11.60382175 348.65484619]
[-16.42981911 362.85729980]
[-21.25581741 377.05975342]
[-18.36987877 392.61550903]
[-29.79057503 402.17672729]
[-34.61657333 416.37918091]
[-39.44256973 430.58163452]
[-44.26856995 444.78408813]
[-49.09456635 458.98657227]
[-36.20681000 466.77883911]
[-25.29578781 477.15979004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[31 202]
[32 201]
[33 200]
[34 199]
[36 197]
[37 196]
[38 195]
[48 194]
[49 193]
[50 192]
[51 191]
[52 189]
[53 188]
[54 187]
[62 186]
[64 184]
[65 183]
[66 182]
[67 181]
[68 178]
[69 177]
[70 164]
[71 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 148]
[77 147]
[80 142]
[81 141]
[82 140]
[83 139]
[84 135]
[85 134]
[86 133]
[87 132]
[88 125]
[89 124]
[90 123]
[92 122]
[93 121]
[94 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
