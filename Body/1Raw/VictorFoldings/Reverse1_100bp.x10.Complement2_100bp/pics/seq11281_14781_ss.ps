%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[103.05502319 704.92407227]
[88.05278778 704.25347900]
[73.22985077 701.84576416]
[58.78667450 697.73345947]
[44.91857529 691.97222900]
[31.81310844 684.63983154]
[19.64751434 675.83563232]
[8.58631325 665.67852783]
[-1.22090137 654.30596924]
[-9.64149857 641.87170410]
[-16.56160164 628.54400635]
[-21.88762093 614.50299072]
[-25.54752922 599.93859863]
[-27.49183083 585.04779053]
[-27.69423103 570.03192139]
[-26.15199280 555.09411621]
[-22.88597298 540.43640137]
[-17.94034195 526.25689697]
[-11.38198185 512.74749756]
[-3.29958725 500.09082031]
[6.19753551 488.45803833]
[16.98094940 478.00653076]
[28.90482140 468.87756348]
[41.80789566 461.19464111]
[55.51566696 455.06167603]
[69.84275818 450.56155396]
[84.59542084 447.75521851]
[99.57411957 446.68054199]
[100.24390411 431.69549561]
[100.91369629 416.71044922]
[92.98474884 407.57489014]
[93.42012024 395.08514404]
[102.53149414 385.95574951]
[103.42430878 370.98233032]
[104.31712341 356.00894165]
[97.35108185 342.84368896]
[105.89606476 329.52850342]
[93.38796234 321.44067383]
[86.56216431 308.08911133]
[87.34099579 293.01397705]
[95.61530304 280.26907349]
[109.24689484 273.33172607]
[110.13971710 258.35830688]
[111.03253174 243.38490295]
[111.92534637 228.41149902]
[111.14402008 213.43186951]
[108.69829559 198.63259888]
[106.25257111 183.83332825]
[103.80683899 169.03405762]
[101.36111450 154.23478699]
[98.91539001 139.43551636]
[89.20646667 128.14010620]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[80.30848694 73.57429504]
[70.01162720 84.48184967]
[56.35604858 90.68871307]
[41.36747742 91.27414703]
[27.26937866 86.15129852]
[16.15311813 76.08011627]
[9.66772938 62.55459595]
[8.77528095 47.58116913]
[13.60816193 33.38105392]
[23.44944382 22.06075478]
[36.83922958 15.29956913]
[51.79122543 14.10048103]
[66.08739471 18.64136505]
[77.60697937 28.24861145]
[84.64056396 41.49521255]
[85.31034851 26.51017189]
[85.98013306 11.52513313]
[86.64991760 -3.45990562]
[79.53654480 -17.59180260]
[87.83443451 -29.96089172]
[88.50421906 -44.94593048]
[88.61588287 -59.94551468]
[88.16928101 -74.93886566]
[87.72267151 -89.93221283]
[87.05288696 -104.91725159]
[86.16007233 -119.89065552]
[85.26725769 -134.86405945]
[84.37443542 -149.83746338]
[83.48162079 -164.81088257]
[79.84697723 -173.19104004]
[82.68866730 -180.01354980]
[82.01888275 -194.99858093]
[67.15289307 -197.36231995]
[53.06715012 -202.67048645]
[40.33845520 -210.70573425]
[29.48804092 -221.13902283]
[20.96022415 -233.54310608]
[15.10421562 -247.41004944]
[12.15981293 -262.17199707]
[12.24758911 -277.22448730]
[15.36394882 -291.95111084]
[21.38127899 -305.74880981]
[30.05317497 -318.05258179]
[41.02452469 -328.35861206]
[53.84606552 -336.24487305]
[67.99275208 -341.38842773]
[82.88529968 -343.57861328]
[97.91385651 -342.72579956]
[112.46302032 -338.86486816]
[125.93701172 -332.15396118]
[137.78407288 -322.86782837]
[147.51907349 -311.38677979]
[154.74337769 -298.18093872]
[159.16116333 -283.79107666]
[160.59150696 -268.80645752]
[158.97583008 -253.84066772]
[154.38032532 -239.50657654]
[146.99314880 -226.39114380]
[137.11682129 -215.03143311]
[125.15575409 -205.89263916]
[111.59974670 -199.34895325]
[97.00392151 -195.66836548]
[97.67370605 -180.68333435]
[98.45503235 -165.70368958]
[99.34784698 -150.73028564]
[100.24066162 -135.75688171]
[101.13347626 -120.78347778]
[102.02629089 -105.81006622]
[104.94036102 -102.02625275]
[105.50839233 -96.37166595]
[102.71601868 -90.37882233]
[103.16262817 -75.38546753]
[103.60923004 -60.39212036]
[115.63843536 -69.35305023]
[130.18258667 -65.68320465]
[136.52026367 -52.08784866]
[129.97959900 -38.58897781]
[115.38209534 -35.13745499]
[103.48925781 -44.27614594]
[102.81947327 -29.29110527]
[109.98075104 -16.23103905]
[101.63495636 -2.79012036]
[100.96517181 12.19491863]
[100.29538727 27.17995644]
[99.62560272 42.16499710]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[119.27325439 123.17127228]
[113.71466064 136.98979187]
[116.16038513 151.78906250]
[118.60610962 166.58833313]
[121.05184174 181.38760376]
[123.49756622 196.18687439]
[125.94329834 210.98614502]
[131.14166260 196.91571045]
[141.01708984 185.62518311]
[154.27027893 178.60000610]
[169.15754700 176.76448059]
[183.72023010 180.36009216]
[196.04234314 188.91378784]
[204.50270081 201.30015564]
[207.98820496 215.88957214]
[206.04028320 230.76255798]
[198.91519165 243.96231079]
[187.55039978 253.75215149]
[173.44110107 258.84408569]
[158.44363403 258.56817627]
[144.53117371 252.96073914]
[133.53414917 242.75949097]
[126.89875031 229.30432129]
[126.00593567 244.27772522]
[125.11312103 259.25112915]
[124.22030640 274.22454834]
[136.93093872 282.73257446]
[143.63212585 296.37045288]
[142.61404419 311.43130493]
[134.25003052 323.87716675]
[120.86946869 330.42132568]
[127.77165222 344.65756226]
[119.29052734 356.90173340]
[118.39771271 371.87515259]
[117.50489807 386.84857178]
[126.12638855 403.11975098]
[115.89873505 417.38024902]
[115.22895050 432.36526489]
[114.55915833 447.35031128]
[129.38226318 449.75704956]
[143.82571411 453.86837769]
[157.69419861 459.62872314]
[170.80015564 466.96020508]
[182.96633911 475.76364136]
[194.02821350 485.91998291]
[203.83618164 497.29190063]
[212.25761414 509.72555542]
[219.17860413 523.05285645]
[224.50556946 537.09350586]
[228.16644287 551.65765381]
[230.11174011 566.54833984]
[230.31513977 581.56414795]
[228.77389526 596.50207520]
[225.50886536 611.16003418]
[220.56417847 625.33984375]
[214.00671387 638.84967041]
[205.92517090 651.50689697]
[196.42881775 663.14031982]
[185.64610291 673.59252930]
[173.72283936 682.72229004]
[160.82028198 690.40606689]
[147.11291504 696.53997803]
[132.78611755 701.04101562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 186]
[29 185]
[30 184]
[33 182]
[34 181]
[35 180]
[37 178]
[42 173]
[43 172]
[44 171]
[45 170]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[51 149]
[53 147]
[55 145]
[56 144]
[57 143]
[72 142]
[73 141]
[74 140]
[75 139]
[77 137]
[78 136]
[79 130]
[80 129]
[81 128]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[88 120]
[89 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
