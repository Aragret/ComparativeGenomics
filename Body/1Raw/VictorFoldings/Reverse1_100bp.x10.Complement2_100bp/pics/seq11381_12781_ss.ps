%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[98.94152832 505.63452148]
[99.00566101 490.45690918]
[104.55188751 476.32876587]
[114.83013153 465.16088867]
[128.45034790 458.46356201]
[127.11212158 443.52337646]
[125.77388763 428.58319092]
[124.43564606 413.64300537]
[115.59373474 401.65676880]
[122.06898499 387.22134399]
[120.28652191 372.32760620]
[118.06140137 357.49359131]
[115.83628845 342.65954590]
[106.29661560 331.22082520]
[111.90117645 316.42556763]
[109.67605591 301.59155273]
[100.13794708 294.15173340]
[98.16275787 281.81143188]
[105.34793091 271.09994507]
[103.34391785 256.23443604]
[93.97560120 244.65495300]
[99.79982758 229.94479370]
[97.79581451 215.07925415]
[95.79180145 200.21372986]
[93.78778839 185.34820557]
[91.78377533 170.48268127]
[85.05673218 183.88964844]
[72.92374420 192.70954895]
[58.09534836 194.97198486]
[43.88424301 190.17152405]
[33.46522522 179.38059998]
[29.16593170 165.00993347]
[31.94683456 150.26995850]
[41.18667603 138.45364380]
[54.82124710 132.20077515]
[69.80455017 132.90824890]
[82.78928375 140.41802979]
[90.87462616 153.05241394]
[91.32123566 138.05906677]
[91.76783752 123.06571960]
[92.21444702 108.07237244]
[81.35712433 118.42218018]
[66.39569092 119.49712372]
[54.17031097 110.80574799]
[50.27025986 96.32163239]
[56.47859192 82.66671753]
[69.95693970 76.08385468]
[84.54319000 79.58263397]
[93.56924438 91.56523132]
[95.57325745 76.69969940]
[97.57727051 61.83417130]
[99.58128357 46.96864319]
[90.27179718 34.47980118]
[92.51591492 19.43259239]
[104.47948456 10.63438034]
[106.48349762 -4.23114824]
[108.48751068 -19.09667587]
[110.15905762 -34.00325012]
[111.49729156 -48.94343567]
[112.83552551 -63.88362122]
[114.17375946 -78.82380676]
[115.51199341 -93.76399231]
[116.85022736 -108.70417786]
[118.18846130 -123.64436340]
[118.85824585 -138.62939453]
[118.85824585 -153.62939453]
[118.85824585 -168.62939453]
[118.85824585 -183.62939453]
[110.30641937 -193.28492737]
[110.61522675 -205.77845764]
[119.07386780 -214.42588806]
[119.29719543 -229.42422485]
[106.87986755 -221.00935364]
[92.51409149 -225.32496643]
[86.78978729 -239.18975830]
[93.92669678 -252.38311768]
[108.66375732 -255.17938232]
[120.13667297 -245.51876831]
[121.47490692 -260.45895386]
[122.81314087 -275.39913940]
[124.15137482 -290.33932495]
[124.15137482 -305.33932495]
[122.81314087 -320.27951050]
[121.47490692 -335.21969604]
[110.53511047 -350.03192139]
[118.53419495 -365.65182495]
[116.97367096 -380.57043457]
[115.41314697 -395.48904419]
[100.44721222 -397.17276001]
[86.19327545 -402.03479004]
[73.31800079 -409.84768677]
[62.42360687 -420.24606323]
[54.01963806 -432.74356079]
[48.49915695 -446.75564575]
[46.12037659 -461.62692261]
[46.99454880 -476.66189575]
[51.08079147 -491.15728760]
[58.18798447 -504.43518066]
[67.98370361 -515.87445068]
[80.00979614 -524.94018555]
[93.70377350 -531.20831299]
[108.42514038 -534.38562012]
[123.48535919 -534.32354736]
[138.18003845 -531.02496338]
[151.82186890 -524.64416504]
[163.77281189 -515.47961426]
[173.47389221 -503.95989990]
[180.47135925 -490.62390137]
[184.43795776 -476.09530640]
[185.18814087 -461.05364990]
[182.68682861 -446.20245361]
[177.05102539 -432.23638916]
[168.54429626 -419.80859375]
[157.56454468 -409.50039673]
[144.62528992 -401.79391479]
[130.33175659 -397.04956055]
[131.89227295 -382.13095093]
[133.45280457 -367.21237183]
[142.64920044 -359.35406494]
[144.07138062 -346.93789673]
[136.41508484 -336.55792236]
[137.75332642 -321.61773682]
[139.09155273 -306.67755127]
[146.06353760 -319.95880127]
[158.05578613 -328.96911621]
[172.75279236 -331.96878052]
[187.31680298 -328.37854004]
[198.93572998 -318.89169312]
[205.36613464 -305.33993530]
[205.36640930 -290.33993530]
[198.93650818 -276.78796387]
[187.31794739 -267.30065918]
[172.75407410 -263.70989990]
[158.05694580 -266.70898438]
[146.06436157 -275.71887207]
[139.09155273 -289.00106812]
[137.75332642 -274.06091309]
[136.41508484 -259.12072754]
[135.07685852 -244.18052673]
[134.29553223 -229.20089722]
[134.07220459 -214.20256042]
[143.43293762 -199.35856628]
[133.85824585 -183.62939453]
[133.85824585 -168.62939453]
[133.85824585 -153.62939453]
[133.85824585 -138.62939453]
[145.20303345 -148.44244385]
[160.17320251 -147.49690247]
[170.19316101 -136.33444214]
[169.52301025 -121.34942627]
[158.54666138 -111.12593842]
[143.55184937 -111.52046967]
[133.12864685 -122.30612946]
[131.79040527 -107.36594391]
[130.45217896 -92.42575836]
[129.11393738 -77.48557281]
[127.77571106 -62.54538727]
[126.43746948 -47.60520172]
[125.09923553 -32.66501617]
[127.06735229 -29.73945999]
[127.71621704 -25.71528053]
[126.54492188 -21.22291183]
[123.35304260 -17.09266281]
[121.34902954 -2.22713470]
[119.34501648 12.63839340]
[128.55168152 24.29055405]
[126.73109436 39.39485931]
[114.44681549 48.97265625]
[112.44279480 63.83818436]
[110.43878174 78.70371246]
[108.43476868 93.56924438]
[107.20779419 108.51897430]
[106.76119232 123.51232910]
[106.31458282 138.50567627]
[105.86798096 153.49902344]
[106.64929962 168.47866821]
[108.65331268 183.34419250]
[110.65732574 198.20971680]
[112.66133881 213.07524109]
[114.66535187 227.94078064]
[124.17700958 240.58352661]
[118.20944214 254.23040771]
[120.21345520 269.09594727]
[131.80374146 283.40490723]
[124.51010132 299.36642456]
[126.73522186 314.20046997]
[136.43405151 326.70019531]
[130.67033386 340.43441772]
[132.89544678 355.26846313]
[135.12055969 370.10250854]
[137.94465637 373.40075684]
[139.42353821 377.05828857]
[139.60949707 380.60803223]
[138.70104980 383.64797974]
[137.00917053 385.88311768]
[145.94680786 398.93795776]
[139.37583923 412.30477905]
[140.71406555 427.24496460]
[142.05230713 442.18515015]
[143.39053345 457.12533569]
[157.98417664 461.29544067]
[170.08357239 470.45892334]
[178.05235291 483.37646484]
[180.81282043 498.30108643]
[177.99163818 513.21435547]
[169.97036743 526.09936523]
[157.83378601 535.21350098]
[143.22329712 539.32421875]
[128.11483765 537.87554932]
[114.55168915 531.06335449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 200]
[6 199]
[7 198]
[8 197]
[10 195]
[11 190]
[12 189]
[13 188]
[15 186]
[16 185]
[19 183]
[20 182]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[38 175]
[39 174]
[40 173]
[41 172]
[49 171]
[50 170]
[51 169]
[52 168]
[55 165]
[56 164]
[57 163]
[58 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 146]
[66 145]
[67 144]
[68 143]
[71 141]
[72 140]
[78 139]
[79 138]
[80 137]
[81 136]
[82 123]
[83 122]
[84 121]
[86 118]
[87 117]
[88 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
