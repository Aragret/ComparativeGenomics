%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[105.44516754 713.04595947]
[91.35286713 707.88885498]
[77.65944672 701.75054932]
[64.43312836 694.66156006]
[51.73981094 686.65728760]
[39.64273071 677.77752686]
[28.20215034 668.06665039]
[17.47507095 657.57287598]
[7.51493549 646.34857178]
[-1.62863672 634.44970703]
[-9.91009140 621.93542480]
[-17.28817177 608.86816406]
[-23.72611809 595.31304932]
[-29.19185829 581.33752441]
[-33.65816116 567.01129150]
[-37.10277557 552.40570068]
[-39.50854111 537.59350586]
[-40.86347198 522.64849854]
[-41.16082001 507.64517212]
[-40.39909744 492.65820312]
[-38.58210754 477.76232910]
[-35.71889496 463.03170776]
[-31.82373047 448.53976440]
[-26.91601562 434.35867310]
[-21.02020264 420.55911255]
[-14.16566181 407.20977783]
[-6.38654613 394.37722778]
[2.27839065 382.12539673]
[11.78598022 370.51528931]
[22.08885574 359.60473633]
[33.13568497 349.44815063]
[44.87144089 340.09609985]
[57.23764801 331.59515381]
[70.17269897 323.98770142]
[83.61215210 317.31164551]
[97.48905945 311.60018921]
[111.73427582 306.88186646]
[126.27683258 303.18011475]
[123.61103821 288.41891479]
[120.94524384 273.65768433]
[118.27944946 258.89648438]
[115.61365509 244.13525391]
[105.85825348 236.98271179]
[103.51653290 224.70672607]
[110.37959290 213.78604126]
[107.93386841 198.98677063]
[105.48814392 184.18750000]
[103.04241180 169.38822937]
[93.39458466 162.09124756]
[91.23589325 149.78175354]
[98.26078796 138.96446228]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[86.58361816 64.88076782]
[73.09819794 62.97359085]
[60.71107864 57.35259628]
[50.42117691 48.48146057]
[43.05534363 37.08552933]
[39.20194244 24.09252930]
[39.16385269 10.55702305]
[42.93469238 -2.42517042]
[50.20009613 -13.80569363]
[60.36388779 -22.66831017]
[72.59702301 -28.30266571]
[70.59300995 -43.16819382]
[68.58899689 -58.03372192]
[66.58498383 -72.89924622]
[64.58097076 -87.76477814]
[62.57695770 -102.63030243]
[60.57294464 -117.49583435]
[58.01711273 -132.27648926]
[54.91300201 -146.95179749]
[51.80889130 -161.62709045]
[48.70478058 -176.30239868]
[45.60066986 -190.97769165]
[42.49655914 -205.65299988]
[38.36886978 -210.81765747]
[37.58650208 -216.44659424]
[39.52537155 -220.81120300]
[36.85957718 -235.57241821]
[34.19378281 -250.33363342]
[19.15028381 -250.42205811]
[4.37922192 -253.27343750]
[-9.61630917 -258.79064941]
[-22.35962486 -266.78582764]
[-33.41669464 -276.98660278]
[-42.41091537 -289.04556274]
[-49.03594971 -302.55197144]
[-53.06615067 -317.04583740]
[-54.36425400 -332.03350830]
[-52.88604355 -347.00445557]
[-48.68186569 -361.44882202]
[-41.89491653 -374.87460327]
[-32.75635529 -386.82455444]
[-21.57743645 -396.89166260]
[-8.73891163 -404.73300171]
[5.32194376 -410.08157349]
[20.12622261 -412.75512695]
[35.16969681 -412.66265869]
[49.93999100 -409.80731201]
[63.93403244 -404.28631592]
[76.67519379 -396.28771973]
[87.72950745 -386.08395386]
[96.72048187 -374.02258301]
[103.34187317 -360.51437378]
[107.36817169 -346.01940918]
[108.66223145 -331.03140259]
[107.17998505 -316.06085205]
[102.97191620 -301.61764526]
[96.18135071 -288.19366455]
[87.03956604 -276.24618530]
[75.85793304 -266.18209839]
[63.01729584 -258.34420776]
[48.95499802 -252.99943542]
[51.62079620 -238.23822021]
[54.28659058 -223.47700500]
[57.17186356 -208.75711060]
[60.27597427 -194.08180237]
[63.38008499 -179.40650940]
[66.48419189 -164.73120117]
[69.58830261 -150.05589294]
[72.69241333 -135.38059998]
[82.93759155 -146.33671570]
[97.90241241 -145.31005859]
[106.55537415 -133.05746460]
[102.51783752 -118.61106873]
[88.76611328 -112.62022400]
[75.43846893 -119.49984741]
[77.44248199 -104.63432312]
[79.44650269 -89.76879120]
[81.45051575 -74.90326691]
[83.45452881 -60.03773499]
[85.45854187 -45.17220688]
[87.46255493 -30.30667877]
[103.60787964 -27.10938072]
[117.70484924 -18.56446838]
[128.04055786 -5.68966913]
[133.35209656 9.96994019]
[132.98083496 26.52734566]
[126.95408630 41.98098373]
[115.98387146 54.45669937]
[101.38288879 62.43503952]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[113.09483337 136.73934937]
[124.89687347 150.87417603]
[117.84168243 166.94250488]
[120.28741455 181.74177551]
[122.73313904 196.54104614]
[125.17886353 211.34031677]
[137.19004822 225.29786682]
[130.37487793 241.46945190]
[133.04066467 256.23068237]
[135.70646667 270.99188232]
[138.37225342 285.75311279]
[141.03805542 300.51431274]
[155.95677185 298.89550781]
[170.95252991 298.33309937]
[185.95060730 298.82986450]
[200.87626648 300.38336182]
[215.65518188 302.98580933]
[230.21369934 306.62429810]
[244.47929382 311.28063965]
[258.38088989 316.93170166]
[271.84924316 323.54925537]
[284.81726074 331.10040283]
[297.22030640 339.54748535]
[308.99661255 348.84844971]
[320.08749390 358.95690918]
[330.43771362 369.82254028]
[339.99569702 381.39120483]
[348.71383667 393.60525513]
[356.54867554 406.40386963]
[363.46118164 419.72323608]
[369.41693115 433.49707031]
[374.38626099 447.65667725]
[378.34439087 462.13156128]
[381.27163696 476.84957886]
[383.15338135 491.73742676]
[383.98025513 506.72091675]
[383.74813843 521.72540283]
[382.45819092 536.67614746]
[380.11685181 551.49871826]
[376.73577881 566.11914062]
[372.33181763 580.46466064]
[366.92687988 594.46380615]
[360.54794312 608.04675293]
[353.22674561 621.14599609]
[344.99978638 633.69610596]
[335.90802002 645.63464355]
[325.99679565 656.90216064]
[315.31542969 667.44244385]
[303.91720581 677.20300293]
[291.85882568 686.13525391]
[279.20043945 694.19464111]
[266.00506592 701.34106445]
[252.33847046 707.53887939]
[238.26872253 712.75726318]
[223.86592102 716.97009277]
[209.20182800 720.15655518]
[194.34948730 722.30059814]
[179.38291931 723.39166260]
[164.37664795 723.42431641]
[149.40547180 722.39831543]
[134.54396057 720.31884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[45 155]
[46 154]
[47 153]
[48 152]
[51 150]
[52 149]
[53 148]
[54 146]
[55 145]
[56 144]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[81 118]
[82 117]
[83 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
