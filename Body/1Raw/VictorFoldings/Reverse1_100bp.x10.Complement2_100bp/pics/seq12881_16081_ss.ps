%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[27.27912140 643.99053955]
[19.57251549 656.92504883]
[9.34478855 667.97436523]
[-2.95694613 676.65545654]
[-16.79491043 682.58880615]
[-31.56416702 685.51501465]
[-46.61907196 685.30615234]
[-61.30147934 681.97143555]
[-74.96955109 675.65655518]
[-87.02576447 666.63763428]
[-96.94308472 655.30883789]
[-104.28795624 642.16552734]
[-108.73931122 627.78228760]
[-110.10253906 612.78778076]
[-108.31805420 597.83752441]
[-103.46385956 583.58514404]
[-95.75216675 570.65362549]
[-85.52008820 559.60833740]
[-73.21494293 550.93212891]
[-59.37464523 545.00421143]
[-44.60423660 542.08386230]
[-29.54941940 542.29858398]
[-26.22715950 527.67114258]
[-22.90489960 513.04364014]
[-19.58263969 498.41619873]
[-16.26038170 483.78875732]
[-12.93812180 469.16128540]
[-14.52208519 461.94235229]
[-9.45597553 454.34155273]
[-13.97140312 440.14788818]
[-3.19607782 428.56329346]
[0.34359452 413.98690796]
[3.88326693 399.41052246]
[7.42293930 384.83416748]
[-5.15021610 379.20822144]
[-16.54587364 371.46374512]
[-26.41056252 361.83941650]
[-34.43802643 350.63217163]
[-40.37873077 338.18820190]
[-44.04761505 324.89208984]
[-45.32985306 311.15509033]
[-44.18446732 297.40228271]
[-40.64561462 284.05947876]
[-34.82157898 271.54000854]
[-26.89145470 260.23196411]
[-17.09964561 250.48609924]
[-5.74832869 242.60501099]
[6.81187439 236.83372498]
[20.19272041 233.35206604]
[33.98035049 232.26904297]
[47.74808502 233.61950684]
[51.93509674 219.21571350]
[56.12210846 204.81193542]
[60.30911636 190.40815735]
[58.94049454 187.15866089]
[59.07780075 183.08482361]
[61.09133530 178.90164185]
[65.01807404 175.46247864]
[69.84407043 161.26002502]
[74.67006683 147.05757141]
[73.40010071 142.45362854]
[75.00881195 137.00303650]
[79.85697174 132.50781250]
[85.10368347 118.45534515]
[90.35040283 104.40287781]
[95.07054138 90.16488647]
[99.25755310 75.76110840]
[103.44456482 61.35732269]
[92.89872742 48.13305283]
[92.31893921 31.39491844]
[101.73573303 17.74626350]
[117.27487183 12.45356750]
[121.24697113 -2.01095629]
[125.21906281 -16.47548103]
[117.66155243 -30.09611702]
[121.89587402 -44.70861816]
[134.92764282 -51.82961273]
[138.89974976 -66.29413605]
[142.87184143 -80.75865936]
[137.18214417 -92.33407593]
[140.78829956 -104.29983521]
[151.23486328 -110.39865875]
[155.42187500 -124.80243683]
[159.60888672 -139.20622253]
[163.79589844 -153.61000061]
[167.98291016 -168.01377869]
[164.40525818 -183.42517090]
[175.38763428 -193.48681641]
[174.18495178 -199.98797607]
[176.15090942 -205.32015991]
[179.91967773 -208.25366211]
[184.53369141 -222.52639771]
[189.14768982 -236.79913330]
[183.98054504 -248.61705017]
[188.11740112 -260.40985107]
[198.82588196 -266.03613281]
[203.65187073 -280.23858643]
[190.35025024 -287.23953247]
[178.30763245 -296.23519897]
[167.82061768 -307.00408936]
[159.14744568 -319.28100586]
[152.50167847 -332.76358032]
[148.04701233 -347.11984253]
[145.89311218 -361.99624634]
[146.09304810 -377.02642822]
[148.64187622 -391.84027100]
[153.47683716 -406.07296753]
[160.47886658 -419.37402344]
[169.47554016 -431.41589355]
[180.24528503 -441.90203857]
[192.52290344 -450.57418823]
[206.00605774 -457.21884155]
[220.36268616 -461.67233276]
[235.23925781 -463.82498169]
[250.26943970 -463.62380981]
[265.08306885 -461.07376099]
[279.31536865 -456.23764038]
[292.61584473 -449.23449707]
[304.65695190 -440.23684692]
[315.14221191 -429.46621704]
[323.81335449 -417.18789673]
[330.45687866 -403.70419312]
[334.90921021 -389.34719849]
[337.06063843 -374.47042847]
[336.85821533 -359.44027710]
[334.30694580 -344.62686157]
[329.46963501 -330.39495850]
[322.46542358 -317.09506226]
[313.46676636 -305.05468750]
[302.69528198 -294.57034302]
[290.41622925 -285.90020752]
[276.93197632 -279.25778198]
[262.57461548 -274.80667114]
[247.69767761 -272.65643311]
[232.66754150 -272.86010742]
[217.85433960 -275.41259766]
[213.02833557 -261.21014404]
[217.36920166 -244.20649719]
[203.42042542 -232.18511963]
[198.80641174 -217.91238403]
[194.19241333 -203.63964844]
[189.79141235 -189.29980469]
[193.66854858 -174.91867065]
[182.38670349 -163.82676697]
[178.19969177 -149.42298889]
[174.01268005 -135.01921082]
[169.82566833 -120.61542511]
[165.63865662 -106.21164703]
[170.73443604 -89.41879272]
[157.33636475 -76.78656006]
[153.36427307 -62.32204056]
[149.39216614 -47.85751343]
[156.95956421 -35.07979584]
[153.13734436 -20.35412598]
[139.68359375 -12.50338364]
[135.71148682 1.96113992]
[131.73939514 16.42566299]
[141.00834656 26.03444099]
[144.34577942 39.07306290]
[140.77633667 52.16232300]
[131.12918091 61.85514832]
[117.84834290 65.54433441]
[113.66133118 79.94812012]
[109.47431946 94.35189819]
[123.67668152 89.52561951]
[136.38681030 97.49132538]
[138.23529053 112.37699890]
[127.85946655 123.20946503]
[112.90802765 122.00344849]
[104.40287781 109.64959717]
[99.15615845 123.70206451]
[93.90943909 137.75453186]
[88.87252045 151.88356018]
[84.04652405 166.08602905]
[79.22052765 180.28848267]
[74.71289825 194.59516907]
[70.52588654 208.99894714]
[66.33887482 223.40272522]
[62.15186691 237.80651855]
[76.57143402 245.38214111]
[89.11656952 255.76293945]
[99.25028229 268.50170898]
[106.53940582 283.05041504]
[110.67305756 298.78369141]
[111.47595978 315.02581787]
[108.91584778 331.07958984]
[103.10473633 346.25643921]
[94.29405975 359.90582275]
[82.86376953 371.44314575]
[69.30595398 380.37478638]
[54.20365524 386.31933594]
[38.20580292 389.02365112]
[21.99931526 388.37384033]
[18.45964241 402.95019531]
[14.91996956 417.52658081]
[11.38029766 432.10296631]
[15.64254475 447.33923340]
[5.12039995 457.88122559]
[1.68933880 472.48355103]
[-1.63292062 487.11102295]
[-4.95518017 501.73846436]
[-8.27744007 516.36590576]
[-11.59969902 530.99340820]
[-14.92195892 545.62084961]
[-1.25140738 551.93035889]
[10.80835533 560.94451904]
[20.73012924 572.26940918]
[28.08017540 585.40979004]
[32.53718567 599.79132080]
[33.90631104 614.78533936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[29 198]
[31 196]
[32 195]
[33 194]
[34 193]
[51 179]
[52 178]
[53 177]
[54 176]
[58 175]
[59 174]
[60 173]
[63 172]
[64 171]
[65 170]
[66 164]
[67 163]
[68 162]
[72 157]
[73 156]
[74 155]
[77 152]
[78 151]
[79 150]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[88 142]
[91 141]
[92 140]
[93 139]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
