%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-21.35252953 426.04693604]
[-21.97775841 441.04782104]
[-24.16760826 455.90118408]
[-27.89808273 470.44427490]
[-33.12831116 484.51773071]
[-39.80098724 497.96737671]
[-47.84299850 510.64587402]
[-57.16624069 522.41424561]
[-67.66855621 533.14361572]
[-79.23487091 542.71636963]
[-91.73847198 551.02764893]
[-105.04235840 557.98645020]
[-119.00075531 563.51641846]
[-133.46073914 567.55706787]
[-148.26387024 570.06402588]
[-163.24797058 571.00988770]
[-178.24884033 570.38433838]
[-193.10214233 568.19409180]
[-207.64514160 564.46325684]
[-221.71847534 559.23272705]
[-235.16796875 552.55969238]
[-247.84625244 544.51739502]
[-259.61441040 535.19384766]
[-270.34350586 524.69128418]
[-279.91598511 513.12475586]
[-288.22698975 500.62094116]
[-295.18542480 487.31689453]
[-300.71508789 473.35833740]
[-304.75537109 458.89825439]
[-307.26199341 444.09506226]
[-308.20748901 429.11096191]
[-307.58154297 414.11007690]
[-305.39096069 399.25683594]
[-301.65979004 384.71392822]
[-296.42886353 370.64071655]
[-289.75555420 357.19140625]
[-281.71292114 344.51330566]
[-272.38909912 332.74539185]
[-261.88626099 322.01654053]
[-250.31948853 312.44433594]
[-237.81547546 304.13363647]
[-224.51126099 297.17550659]
[-210.55258179 291.64620972]
[-196.09240723 287.60629272]
[-181.28915405 285.10000610]
[-166.30502319 284.15487671]
[-151.30416870 284.78118896]
[-136.45097351 286.97213745]
[-121.90815735 290.70367432]
[-107.83507538 295.93490601]
[-94.38591003 302.60858154]
[-81.70802307 310.65151978]
[-79.86911011 295.87084961]
[-65.23468781 289.85885620]
[-55.91980362 278.10159302]
[-46.60491943 266.34436035]
[-61.57834244 265.45184326]
[-70.34074402 253.27725220]
[-66.43280792 238.79525757]
[-52.73531342 232.68144226]
[-39.34555435 239.44267273]
[-36.13357925 254.09321594]
[-25.97003365 243.06134033]
[-15.80648613 232.02946472]
[-5.64293957 220.99758911]
[4.52060699 209.96571350]
[14.35118771 198.63612366]
[23.84008598 187.01885986]
[33.24223709 175.33128357]
[42.55712128 163.57402039]
[51.87200165 151.81677246]
[61.18688583 140.05952454]
[70.50177002 128.30227661]
[79.46246338 116.27289581]
[88.06102753 103.98205566]
[96.38297272 91.50225830]
[104.42414856 78.83973694]
[112.46531677 66.17721558]
[113.33170319 50.37974548]
[126.68610382 43.78358459]
[124.64303589 31.04825211]
[131.60122681 20.66714859]
[143.37744141 17.90176010]
[151.60626221 5.36036062]
[159.83506775 -7.18103981]
[168.06387329 -19.72244072]
[175.62825012 -32.67543793]
[182.50765991 -46.00486755]
[189.38706970 -59.33429718]
[196.26649475 -72.66372681]
[203.14590454 -85.99315643]
[209.92588806 -99.37342834]
[216.60607910 -112.80380249]
[215.82427979 -128.60568237]
[228.41998291 -136.55537415]
[235.10017395 -149.98574829]
[241.78038025 -163.41612244]
[248.46057129 -176.84649658]
[255.14076233 -190.27688599]
[242.74935913 -198.77389526]
[231.66116333 -208.91282654]
[222.09199524 -220.49632263]
[214.22813416 -233.29888916]
[208.22264099 -247.07133484]
[204.19242859 -261.54556274]
[202.21594238 -276.43984985]
[202.33163452 -291.46426392]
[204.53729248 -306.32632446]
[208.78994751 -320.73678589]
[215.00683594 -334.41510010]
[223.06694031 -347.09503174]
[232.81336975 -358.52978516]
[244.05639648 -368.49673462]
[256.57720947 -376.80191040]
[270.13201904 -383.28363037]
[284.45706177 -387.81570435]
[299.27340698 -390.30996704]
[314.29272461 -390.71783447]
[329.22262573 -389.03134155]
[343.77252197 -385.28338623]
[357.65914917 -379.54687500]
[370.61221313 -371.93347168]
[382.37960815 -362.59136963]
[392.73226929 -351.70245361]
[401.46865845 -339.47863770]
[408.41870117 -326.15786743]
[413.44717407 -311.99945068]
[416.45617676 -297.27899170]
[417.38708496 -282.28298950]
[416.22186279 -267.30340576]
[412.98312378 -252.63177490]
[407.73394775 -238.55369568]
[400.57647705 -225.34321594]
[391.65008545 -213.25746155]
[381.12847900 -202.53169250]
[369.21649170 -193.37469482]
[356.14596558 -185.96472168]
[342.17135620 -180.44598389]
[327.56466675 -176.92591858]
[312.61022949 -175.47303772]
[297.59912109 -176.11564636]
[282.82357788 -178.84121704]
[268.57113647 -183.59667969]
[261.89093018 -170.16630554]
[255.21075439 -156.73593140]
[248.53056335 -143.30555725]
[241.85035706 -129.87518311]
[243.10997009 -115.03393555]
[230.03646851 -106.12361145]
[223.35626221 -92.69323730]
[223.19198608 -85.30440521]
[216.47532654 -79.11374664]
[209.59591675 -65.78431702]
[202.71650696 -52.45488358]
[195.83709717 -39.12545395]
[188.95767212 -25.79602623]
[203.22055054 -30.44041824]
[217.17845154 -24.94705963]
[224.45001221 -11.82744312]
[221.71078491 2.92032266]
[210.21308899 12.55375576]
[195.21353149 12.66858101]
[183.56970215 3.21230173]
[180.60527039 -11.49363232]
[172.37646484 1.04776800]
[164.14765930 13.58916855]
[155.91885376 26.13056946]
[155.86334229 43.67946625]
[139.34863281 51.82475662]
[139.05740356 66.71651459]
[125.12784576 74.21838379]
[117.08666992 86.88091278]
[109.04549408 99.54343414]
[109.34375000 103.38835907]
[107.94577026 107.34606934]
[104.83917999 110.65608215]
[100.35186768 112.58061981]
[91.75330353 124.87145996]
[91.53091431 129.20787048]
[90.08554077 132.87876892]
[87.77659607 135.58139038]
[85.02486420 137.16081238]
[82.25901794 137.61715698]
[72.94413757 149.37440491]
[63.62925339 161.13165283]
[54.31437302 172.88890076]
[44.99948883 184.64616394]
[42.12323761 193.31593323]
[35.45734787 196.50775146]
[25.96845055 208.12501526]
[25.42414665 212.43289185]
[23.70975494 215.98609924]
[21.20619011 218.50950623]
[18.34460831 219.87989807]
[15.55248451 220.12925720]
[5.38893747 231.16113281]
[-4.77460909 242.19300842]
[-14.93815613 253.22489929]
[-25.10170364 264.25677490]
[-34.84766769 275.65924072]
[-44.16255188 287.41647339]
[-53.47743607 299.17373657]
[-55.98260880 314.79534912]
[-69.95076752 319.96640015]
[-59.22115707 330.46844482]
[-49.64810562 342.03454590]
[-41.33650208 354.53793335]
[-34.37741089 367.84164429]
[-28.84708405 381.79989624]
[-24.80611229 396.25979614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 204]
[54 202]
[55 201]
[56 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[67 190]
[68 189]
[69 187]
[70 186]
[71 185]
[72 184]
[73 183]
[74 178]
[75 177]
[76 173]
[77 172]
[78 171]
[80 169]
[83 167]
[84 166]
[85 165]
[86 164]
[87 156]
[88 155]
[89 154]
[90 153]
[91 152]
[92 150]
[93 149]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
