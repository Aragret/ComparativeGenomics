%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[85.62631226 467.01034546]
[81.90311432 452.31634521]
[83.43318939 437.23541260]
[90.03176880 423.58862305]
[100.90203857 413.02392578]
[114.73136902 406.81701660]
[113.61571503 391.85858154]
[112.50006866 376.90011597]
[111.38442230 361.94168091]
[110.26876831 346.98321533]
[109.15312195 332.02474976]
[107.70370483 317.09494019]
[105.92124176 302.20123291]
[96.72636414 290.48358154]
[102.76895142 275.86175537]
[100.23802948 273.40679932]
[98.77043915 269.60400391]
[98.98672485 264.96649170]
[101.25479889 260.26513672]
[100.13915253 245.30667114]
[99.02349854 230.34822083]
[96.60472107 227.78271484]
[95.30839539 223.91818237]
[95.73154449 219.29495239]
[98.20728302 214.69953918]
[97.76067352 199.70619202]
[97.20246887 184.71658325]
[96.53268433 169.73153687]
[95.75135803 154.75190735]
[94.85854340 139.77850342]
[93.96572876 124.80509186]
[93.07291412 109.83168793]
[91.95726013 94.87322998]
[90.61902618 79.93304443]
[89.28079224 64.99285889]
[87.49832916 50.09914398]
[75.69628906 35.96431351]
[82.75148010 19.89598274]
[80.30574799 5.09671211]
[77.86002350 -9.70255852]
[75.41429901 -24.50182915]
[72.96856689 -39.30110168]
[57.31808472 -43.75039673]
[45.21798706 -54.54073334]
[39.05696869 -69.47399139]
[40.02155685 -85.54113007]
[47.86798477 -99.52853394]
[60.98111343 -108.66069794]
[58.31531906 -123.42191315]
[55.64952469 -138.18313599]
[52.98373032 -152.94435120]
[50.20811844 -167.68530273]
[47.32284546 -182.40519714]
[44.43757248 -197.12509155]
[41.55229950 -211.84498596]
[37.61912918 -197.36982727]
[30.88984871 -183.96397400]
[21.63248062 -172.16139221]
[10.21574116 -162.43214417]
[-2.90564251 -155.16377258]
[-17.20905304 -150.64575195]
[-32.12479019 -149.05805969]
[-47.05876541 -150.46389771]
[-61.41616058 -154.80729675]
[-74.62513733 -161.91525269]
[-86.15957642 -171.50465393]
[-95.56006622 -183.19357300]
[-102.45219421 -196.51643372]
[-106.56145477 -210.94258118]
[-107.72415924 -225.89746094]
[-105.89401245 -240.78538513]
[-101.14390564 -255.01341248]
[-93.66303253 -268.01480103]
[-83.74935150 -279.27175903]
[-71.79772186 -288.33590698]
[-58.28417587 -294.84619141]
[-43.74694824 -298.54336548]
[-28.76505470 -299.28015137]
[-13.93521500 -297.02716064]
[0.15190195 -291.87420654]
[12.93521214 -284.02645874]
[23.90556145 -273.79653931]
[32.62600708 -261.59185791]
[38.74921036 -247.89857483]
[42.03079224 -233.26618958]
[45.57046509 -247.84255981]
[49.00152588 -262.44488525]
[52.21479797 -277.09667969]
[55.31890869 -291.77197266]
[58.42301941 -306.44726562]
[61.52713013 -321.12258911]
[64.63124084 -335.79788208]
[50.55502701 -341.06265259]
[37.42075729 -348.36666870]
[25.52186012 -357.54675293]
[15.12415314 -368.39779663]
[6.45993042 -380.67742920]
[-0.27724776 -394.11126709]
[-4.93687057 -408.39923096]
[-7.41483927 -423.22207642]
[-7.65579653 -438.24871826]
[-5.65435839 -453.14340210]
[-1.45523751 -467.57342529]
[4.84775543 -481.21636963]
[13.11380959 -493.76745605]
[23.15825844 -504.94628906]
[34.75670624 -514.50317383]
[47.65003586 -522.22454834]
[61.55020905 -527.93792725]
[76.14669037 -531.51568604]
[91.11338806 -532.87792969]
[106.11594391 -531.99414062]
[120.81919098 -528.88409424]
[134.89465332 -523.61730957]
[148.02787781 -516.31146240]
[159.92547607 -507.12966919]
[170.32162476 -496.27713013]
[178.98410034 -483.99627686]
[185.71937561 -470.56149292]
[190.37695312 -456.27285767]
[192.85281372 -441.44964600]
[193.09162903 -426.42297363]
[191.08807373 -411.52856445]
[186.88690186 -397.09918213]
[180.58195496 -383.45712280]
[172.31411743 -370.90719604]
[162.26808167 -359.72979736]
[150.66827393 -350.17456055]
[137.77383423 -342.45504761]
[123.87284851 -336.74362183]
[109.27586365 -333.16793823]
[94.30896759 -331.80786133]
[79.30654144 -332.69378662]
[76.20243073 -318.01846313]
[73.09832001 -303.34317017]
[69.99420929 -288.66787720]
[66.89009857 -273.99255371]
[68.58136749 -266.79803467]
[63.62898636 -259.12261963]
[65.21295166 -251.90370178]
[60.14683914 -244.30288696]
[56.60716629 -229.72651672]
[56.27219009 -214.73025513]
[59.15746307 -200.01036072]
[62.04273605 -185.29046631]
[64.92800903 -170.57058716]
[69.29940796 -164.61132812]
[67.74494934 -155.61013794]
[70.41074371 -140.84892273]
[73.07653809 -126.08770752]
[75.74233246 -111.32649231]
[89.27843475 -108.28641510]
[100.66941833 -100.29157257]
[108.17649841 -88.52198792]
[110.63842773 -74.73686981]
[107.65100861 -61.01168060]
[99.63301086 -49.42565536]
[87.76783752 -41.74682617]
[90.21356964 -26.94755745]
[92.65929413 -12.14828587]
[95.10501862 2.65098500]
[97.55075073 17.45025635]
[107.19857788 24.74724197]
[109.35726929 37.05674362]
[102.33237457 47.87402725]
[104.50389862 49.64677048]
[106.10405731 52.38649368]
[106.76102448 55.87988663]
[106.18698883 59.78309250]
[104.22097778 63.65462494]
[105.55921173 78.59481049]
[106.89744568 93.53499603]
[110.05667114 97.72226715]
[110.64495850 103.38153076]
[108.04631805 108.93886566]
[108.93913269 123.91227722]
[109.83194733 138.88568115]
[110.72476196 153.85908508]
[114.35941315 162.23924255]
[111.51772308 169.06175232]
[112.18750763 184.04679871]
[115.69698334 192.48014832]
[112.75402832 199.25958252]
[113.20063019 214.25292969]
[113.98195648 229.23257446]
[115.09760284 244.19102478]
[116.21324921 259.14947510]
[117.66267395 274.07928467]
[126.98503876 286.86224365]
[120.81495667 300.41876221]
[122.59741974 315.31250000]
[125.72745514 319.48980713]
[126.83173370 323.99911499]
[126.12302399 328.01318359]
[124.11157227 330.90911865]
[125.22722626 345.86755371]
[126.34287262 360.82601929]
[127.45851898 375.78448486]
[128.57417297 390.74291992]
[129.68981934 405.70138550]
[144.28688049 409.78814697]
[156.60406494 418.62344360]
[165.15402222 431.14041138]
[168.90428162 445.82751465]
[167.40200806 460.91125488]
[160.82858276 474.57015991]
[149.97781372 485.15487671]
[136.15994263 491.38726807]
[121.04357147 492.51467896]
[106.45406342 488.40103149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 191]
[13 190]
[15 188]
[19 187]
[20 186]
[21 185]
[25 184]
[26 183]
[27 181]
[28 180]
[29 178]
[30 177]
[31 176]
[32 175]
[33 172]
[34 171]
[35 170]
[36 165]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[48 151]
[49 150]
[50 149]
[51 148]
[52 146]
[53 145]
[54 144]
[55 143]
[85 142]
[86 141]
[87 139]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
