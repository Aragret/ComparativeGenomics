%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[7.16776609 701.33874512]
[2.16555142 687.00897217]
[2.68154430 671.83996582]
[8.64595985 657.88323975]
[19.25216103 647.02630615]
[33.06574631 640.73748779]
[32.17293167 625.76409912]
[31.28011513 610.79064941]
[30.38729858 595.81726074]
[29.49448204 580.84387207]
[28.60166740 565.87048340]
[22.28031540 579.47338867]
[11.93217659 590.33233643]
[-1.35068405 597.30120850]
[-16.16649437 599.64465332]
[-30.95170784 597.11535645]
[-44.14600754 589.98022461]
[-54.35696030 578.99218750]
[-60.50698853 565.31091309]
[-61.94705963 550.38018799]
[-58.52520370 535.77569580]
[-50.60253143 523.03869629]
[-39.01514816 513.51336670]
[-24.98589134 508.20486450]
[-9.99530697 507.67349243]
[4.37461472 511.97528076]
[16.60738182 520.65625000]
[25.41204071 532.80029297]
[29.85944176 547.12603760]
[23.28579521 530.85473633]
[35.50344849 517.07757568]
[38.16924286 502.31637573]
[40.83503723 487.55514526]
[43.50083542 472.79394531]
[46.16662979 458.03271484]
[48.83242416 443.27148438]
[51.49822235 428.51028442]
[54.05405426 413.72961426]
[56.49977875 398.93035889]
[58.94550705 384.13107300]
[61.39123535 369.33181763]
[63.61635208 354.49777222]
[57.64878845 340.85089111]
[67.16044617 328.20812988]
[69.16445923 313.34262085]
[71.16847229 298.47708130]
[73.17248535 283.61154175]
[75.17649841 268.74603271]
[69.20893860 255.09913635]
[78.72058868 242.45639038]
[80.72460175 227.59086609]
[82.72861481 212.72534180]
[84.73262787 197.85980225]
[86.29315186 182.94120789]
[87.40879822 167.98275757]
[88.52445221 153.02429199]
[89.64009857 138.06584167]
[82.87084198 124.79834747]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.32951355 42.37053299]
[96.55284119 27.37219429]
[89.02185822 13.45835495]
[96.94779205 0.84769028]
[97.17111969 -14.15064716]
[89.64014435 -28.06448746]
[97.56607056 -40.67515182]
[90.03509521 -54.58898926]
[97.96102905 -67.19965363]
[98.18435669 -82.19799042]
[98.40768433 -97.19632721]
[98.51934814 -112.19591522]
[98.51934814 -127.19591522]
[98.51934814 -142.19590759]
[98.18437195 -157.19216919]
[97.51458740 -172.17721558]
[96.84480286 -187.16224670]
[96.17501831 -202.14729309]
[82.08636475 -205.37997437]
[69.32732391 -212.14727783]
[58.76655197 -221.98136902]
[51.12120056 -234.20584106]
[46.90821457 -247.98228455]
[46.40938187 -262.36773682]
[49.65249634 -276.37927246]
[56.40988159 -289.06112671]
[66.21437073 -299.54995728]
[78.39160156 -307.13348389]
[92.10638428 -311.29904175]
[91.65977478 -326.29238892]
[91.21317291 -341.28576660]
[87.82964325 -349.77041626]
[90.87320709 -356.50527954]
[90.64987946 -371.50363159]
[90.42655182 -386.50195312]
[76.40702820 -392.44946289]
[66.02337646 -403.58947754]
[61.07463074 -417.99191284]
[62.41818237 -433.16143799]
[69.82125854 -446.46987915]
[82.00122833 -455.61141968]
[96.84783936 -459.00228882]
[111.78883362 -456.05496216]
[124.23558044 -447.28012085]
[132.03161621 -434.19799805]
[133.82623291 -419.07519531]
[129.30848694 -404.53179932]
[119.26111603 -393.08758545]
[105.42488861 -386.72528076]
[105.64821625 -371.72695923]
[105.87154388 -356.72860718]
[106.20652008 -341.73236084]
[106.65312958 -326.73901367]
[107.09973145 -311.74566650]
[122.22306824 -307.93386841]
[135.67437744 -300.01171875]
[146.36166382 -288.61288452]
[153.41459656 -274.65356445]
[156.25552368 -259.25912476]
[154.64662170 -243.67300415]
[148.70986938 -229.15660095]
[138.91784668 -216.88702393]
[126.05608368 -207.86163330]
[111.16005707 -202.81707764]
[111.82984161 -187.83203125]
[112.49962616 -172.84700012]
[113.16941071 -157.86195374]
[115.51073456 -155.22557068]
[116.69142151 -151.32415771]
[116.13081360 -146.71557617]
[113.51934814 -142.19590759]
[113.51934814 -127.19591522]
[113.51934814 -112.19591522]
[116.66284943 -105.50710297]
[113.40602112 -96.97299957]
[113.18269348 -81.97466278]
[112.95936584 -66.97632599]
[120.50631714 -54.13526917]
[112.56441498 -40.45182419]
[120.11136627 -27.61076546]
[112.16945648 -13.92731953]
[111.94612885 1.07101798]
[119.49308014 13.91207600]
[111.55117798 27.59552193]
[111.32785034 42.59386063]
[113.18127441 44.69694138]
[114.31330872 47.66091156]
[114.39189148 51.21467209]
[113.18912506 54.97204971]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[113.26103210 127.06494904]
[104.59854889 139.18148804]
[103.48290253 154.13993835]
[102.36725616 169.09840393]
[101.25160217 184.05685425]
[103.27503967 187.89868164]
[103.90712738 191.79290771]
[103.30223846 195.29570007]
[101.74304962 198.05894470]
[99.59815979 199.86381531]
[97.59414673 214.72935486]
[95.59013367 229.59487915]
[93.58611298 244.46040344]
[99.41033936 259.17056274]
[90.04202271 270.75003052]
[88.03800964 285.61557007]
[86.03399658 300.48110962]
[84.02998352 315.34661865]
[82.02597046 330.21215820]
[87.85018921 344.92233276]
[78.48188019 356.50177002]
[80.63563538 362.75262451]
[79.48240662 368.31741333]
[76.19050598 371.77752686]
[73.74478149 386.57681274]
[71.29904938 401.37606812]
[68.85332489 416.17535400]
[70.54163361 425.15240479]
[66.25943756 431.17608643]
[63.59364319 445.93728638]
[60.92784500 460.69851685]
[58.26205063 475.45971680]
[55.59625626 490.22094727]
[52.93046188 504.98214722]
[50.26466370 519.74334717]
[56.96437836 530.76501465]
[54.44013977 543.00482178]
[44.57933426 550.01129150]
[43.57507324 564.97766113]
[44.46788788 579.95104980]
[45.36070251 594.92443848]
[46.25352097 609.89782715]
[47.14633560 624.87127686]
[48.03915024 639.84466553]
[62.50216675 644.44744873]
[74.32335663 653.96710205]
[81.90400696 667.11621094]
[84.21888733 682.11639404]
[80.95494080 696.93902588]
[72.55358124 709.57952881]
[60.15102386 718.32824707]
[45.42461777 722.00213623]
[30.36598206 720.10424805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[29 195]
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[38 184]
[39 183]
[40 182]
[41 181]
[42 178]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[50 170]
[51 169]
[52 168]
[53 167]
[54 162]
[55 161]
[56 160]
[57 159]
[59 157]
[61 155]
[62 154]
[63 153]
[64 148]
[65 147]
[67 145]
[68 144]
[70 142]
[72 140]
[73 139]
[74 138]
[75 136]
[76 135]
[77 134]
[78 130]
[79 129]
[80 128]
[81 127]
[92 117]
[93 116]
[94 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
