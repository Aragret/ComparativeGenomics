%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[-7.44736910 399.42761230]
[-3.01255226 413.77725220]
[-0.37479752 428.56311035]
[0.42590788 443.56106567]
[-0.62257463 458.54373169]
[-3.50435042 473.28396606]
[-8.17573261 487.55834961]
[-14.56590366 501.15045166]
[-22.57798958 513.85424805]
[-32.09053040 525.47711182]
[-42.95932007 535.84289551]
[-55.01958847 544.79437256]
[-68.08850098 552.19592285]
[-81.96794891 557.93536377]
[-96.44750977 561.92559814]
[-111.30767822 564.10614014]
[-126.32318878 564.44396973]
[-141.26640320 562.93402100]
[-155.91078186 559.59906006]
[-170.03431702 554.48974609]
[-183.42292786 547.68353271]
[-195.87361145 539.28350830]
[-207.19763184 529.41711426]
[-217.22331238 518.23382568]
[-225.79869080 505.90328979]
[-232.79374695 492.61236572]
[-238.10243225 478.56253052]
[-241.64428711 463.96682739]
[-243.36560059 449.04647827]
[-243.24028015 434.02767944]
[-241.27023315 419.13815308]
[-237.48532104 404.60357666]
[-231.94293213 390.64428711]
[-224.72708130 377.47192383]
[-215.94714355 365.28619385]
[-205.73623657 354.27178955]
[-194.24916077 344.59570312]
[-181.66003418 336.40463257]
[-168.15972900 329.82272339]
[-153.95289612 324.94979858]
[-139.25489807 321.85971069]
[-124.28857422 320.59927368]
[-109.28079987 321.18765259]
[-94.45908356 323.61587524]
[-80.04811859 327.84716797]
[-66.26638031 333.81735229]
[-53.32279205 341.43597412]
[-44.18399048 329.54135132]
[-35.04518509 317.64669800]
[-25.90638351 305.75207520]
[-16.76758194 293.85745239]
[-7.62877941 281.96279907]
[1.51002312 270.06817627]
[10.10858727 257.77734375]
[18.14975929 245.11480713]
[26.19093323 232.45228577]
[34.13761902 219.73025513]
[41.98937225 206.94940186]
[49.84112930 194.16856384]
[49.91061020 179.27412415]
[63.72692871 171.56568909]
[70.30695343 158.08595276]
[75.55367279 144.03347778]
[72.75688934 129.40380859]
[84.83247375 119.18173981]
[90.07919312 105.12927246]
[95.22115326 91.03813171]
[100.25807190 76.90910339]
[105.29498291 62.78007126]
[93.10263824 53.87913132]
[83.92169189 41.91533279]
[78.48941040 27.86345482]
[77.23806000 12.86537457]
[80.26053619 -1.86271346]
[87.30352783 -15.12892723]
[97.78869629 -25.86214638]
[110.86017609 -33.19849777]
[125.45445251 -36.55088425]
[140.38684082 -35.65594101]
[137.73283386 -51.25295258]
[149.29461670 -60.64307785]
[154.33152771 -74.77210999]
[143.68806458 -85.65686798]
[138.84573364 -100.02484894]
[140.71423340 -115.00913239]
[148.86979675 -127.64431763]
[161.64981079 -135.45332336]
[176.49151611 -136.93296814]
[181.52842712 -151.06199646]
[185.50053406 -165.52651978]
[188.38580322 -180.24641418]
[191.27107239 -194.96630859]
[194.15634155 -209.68620300]
[197.04161072 -224.40608215]
[192.10328674 -239.43684387]
[202.14421082 -250.43815613]
[204.36932373 -265.27221680]
[205.92985535 -280.19079590]
[207.49037170 -295.10940552]
[193.58171082 -301.02890015]
[182.03683472 -310.78634644]
[173.88232422 -323.51406860]
[169.84327698 -338.08038330]
[170.27882385 -353.19003296]
[175.15025330 -367.49951172]
[184.02438354 -379.73638916]
[196.11215210 -388.81259155]
[210.33871460 -393.92105103]
[225.43904114 -394.60754395]
[240.07044983 -390.81103516]
[252.93190002 -382.86907959]
[262.87976074 -371.48791504]
[269.02951050 -357.67950439]
[270.83425903 -342.67169189]
[268.13360596 -327.79898071]
[261.16760254 -314.38381958]
[250.55572510 -303.61907959]
[237.24156189 -296.46197510]
[222.40898132 -293.54888916]
[220.84844971 -278.63027954]
[219.28793335 -263.71166992]
[231.59205627 -272.29122925]
[246.38262939 -269.79339600]
[255.18692017 -257.64907837]
[252.96145630 -242.81509399]
[240.98106384 -233.78901672]
[226.10865784 -235.74137878]
[216.86410522 -247.55288696]
[222.00880432 -233.57499695]
[211.76150513 -221.52081299]
[208.87623596 -206.80091858]
[205.99096680 -192.08103943]
[203.10569763 -177.36114502]
[200.22041321 -162.64125061]
[211.23419189 -172.82441711]
[225.84184265 -176.23274231]
[240.22496033 -171.97528076]
[250.62384033 -161.16494751]
[254.32023621 -146.62753296]
[250.34791565 -132.16307068]
[239.74523926 -121.55253601]
[225.28372192 -117.56951141]
[210.74357605 -121.25514221]
[199.92553711 -131.64601135]
[195.65745544 -146.02508545]
[190.62054443 -131.89605713]
[201.17918396 -121.36132812]
[206.13719177 -107.22882080]
[204.46061707 -92.28392029]
[196.42877197 -79.49682617]
[183.58938599 -71.43228149]
[168.46055603 -69.73519135]
[163.42364502 -55.60616302]
[166.43792725 -41.01975250]
[154.51588440 -30.61902428]
[166.64691162 -21.86601257]
[175.82925415 -10.03740501]
[181.31198120 3.91341734]
[182.64282227 18.85897255]
[179.70538330 33.58879089]
[172.72937012 46.90746689]
[162.27252197 57.73164749]
[149.17617798 65.17817688]
[134.49746704 68.63614655]
[119.42401886 67.81698608]
[114.38710022 81.94601440]
[109.35018158 96.07504272]
[109.82495880 104.12160492]
[104.13166809 110.37599182]
[98.88494873 124.42845917]
[101.30644989 140.06326294]
[89.60614777 149.28019714]
[84.35942841 163.33267212]
[96.18611908 154.10610962]
[110.72324371 150.40856934]
[125.52105713 152.86312866]
[138.08584595 161.05616760]
[146.30024719 173.60700989]
[148.77996826 188.40063477]
[145.10714722 202.94403076]
[135.90071106 214.78639221]
[122.71210480 221.93206787]
[107.76384735 223.17689514]
[93.57497406 218.31109619]
[82.53657532 208.15463257]
[76.50879669 194.41906738]
[76.50777435 179.41744995]
[75.87667847 195.22605896]
[62.62197113 202.02032471]
[54.77021408 214.80116272]
[46.91846085 227.58200073]
[45.09282684 236.53213501]
[38.85345840 240.49345398]
[30.81228447 253.15597534]
[22.77111244 265.81851196]
[37.60858154 263.61633301]
[49.73904419 272.43972778]
[52.21362305 287.23419189]
[43.61476517 299.52481079]
[28.86828613 302.27096558]
[16.42164040 293.89953613]
[13.40465641 279.20697021]
[4.26585388 291.10159302]
[-4.87294865 302.99624634]
[-14.01175117 314.89086914]
[-23.15055275 326.78549194]
[-32.28935623 338.68014526]
[-41.42815781 350.57476807]
[-30.73217964 361.11874390]
[-21.41304016 372.89727783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[52 203]
[53 202]
[54 195]
[55 194]
[56 193]
[57 191]
[58 190]
[59 189]
[61 187]
[62 173]
[63 172]
[65 170]
[66 169]
[67 167]
[68 166]
[69 165]
[79 155]
[81 153]
[82 152]
[88 146]
[89 145]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[96 128]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
