%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[97.41403198 774.10876465]
[83.98997498 767.37268066]
[71.49547577 759.03802490]
[60.11994934 749.23101807]
[50.03583527 738.10040283]
[41.39601517 725.81494141]
[34.33146667 712.56079102]
[28.94927979 698.53900146]
[25.33105278 683.96203613]
[23.53163338 669.05090332]
[23.57830429 654.03167725]
[25.47035599 639.13201904]
[29.17910576 624.57775879]
[34.64832687 610.58966064]
[41.79511261 597.37969971]
[50.51111603 585.14819336]
[60.66420746 574.08044434]
[72.10046387 564.34436035]
[84.64652252 556.08746338]
[98.11217499 549.43499756]
[112.29330444 544.48773193]
[126.97490692 541.32067871]
[125.63667297 526.38049316]
[124.29843903 511.44033813]
[122.96020508 496.50015259]
[121.62197113 481.55996704]
[120.28373718 466.61978149]
[106.01050568 462.23751831]
[94.47119904 452.69866943]
[87.44407654 439.43276978]
[86.02748108 424.44674683]
[90.46827698 410.02130127]
[100.11952209 398.36383057]
[113.53450775 391.27059937]
[112.19627380 376.33041382]
[110.85803986 361.39022827]
[109.51979828 346.45007324]
[108.18156433 331.50988770]
[106.84333038 316.56970215]
[105.50509644 301.62951660]
[93.94631958 292.30587769]
[92.37633514 277.17346191]
[102.23419189 265.11276245]
[100.89595795 250.17257690]
[99.55772400 235.23239136]
[98.21949005 220.29220581]
[95.76277924 217.76300049]
[94.40906525 213.91819763]
[94.76332855 209.28916931]
[97.17037964 204.65740967]
[96.50059509 189.67237854]
[95.83080292 174.68733215]
[95.16101837 159.70230103]
[94.49123383 144.71725464]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[83.23827362 76.40639496]
[83.17496490 63.90920639]
[91.37239075 55.01377106]
[91.14906311 40.01543427]
[90.92573547 25.01709747]
[90.70240784 10.01875973]
[90.47908020 -4.97957706]
[90.25575256 -19.97791481]
[90.03242493 -34.97625351]
[77.25891113 -46.92852020]
[77.08515930 -64.08324432]
[89.13031006 -75.82007599]
[88.68370056 -90.81343079]
[87.90238190 -105.79306793]
[79.16010284 -118.97953796]
[85.92935944 -132.24703979]
[84.81371307 -147.20549011]
[83.69805908 -162.16394043]
[82.58241272 -177.12239075]
[67.58089447 -177.85322571]
[52.78290176 -180.42205811]
[38.41276169 -184.78997803]
[24.68832207 -190.89074707]
[11.81764793 -198.63189697]
[-0.00414864 -207.89605713]
[-10.59785175 -218.54280090]
[-19.80286407 -230.41072083]
[-27.47963715 -243.31988525]
[-33.51179886 -257.07461548]
[-37.80789566 -271.46640015]
[-40.30280685 -286.27703857]
[-40.95870590 -301.28201294]
[-39.76564789 -316.25387573]
[-36.74172592 -330.96560669]
[-31.93277740 -345.19424438]
[-25.41170311 -358.72402954]
[-17.27736473 -371.34988403]
[-7.65307617 -382.88037109]
[3.31526279 -393.14074707]
[15.46137428 -401.97543335]
[28.60112572 -409.25048828]
[42.53532028 -414.85565186]
[57.05272293 -418.70593262]
[71.93325043 -420.74295044]
[86.95132446 -420.93585205]
[101.87926483 -419.28170776]
[116.49076843 -415.80557251]
[130.56433105 -410.56018066]
[143.88661194 -403.62500000]
[156.25563049 -395.10522461]
[167.48388672 -385.12994385]
[177.40116882 -373.85043335]
[185.85711670 -361.43768311]
[192.72355652 -348.07986450]
[197.89637756 -333.97946167]
[201.29718018 -319.35021973]
[202.87438965 -304.41397095]
[202.60411072 -289.39709473]
[200.49043274 -274.52725220]
[196.56539917 -260.02987671]
[190.88851929 -246.12474060]
[183.54585266 -233.02265930]
[174.64871216 -220.92222595]
[164.33195496 -210.00689697]
[152.75201416 -200.44213867]
[140.08441162 -192.37297058]
[126.52120972 -185.92169189]
[112.26799774 -181.18612671]
[97.54086304 -178.23803711]
[98.65651703 -163.27958679]
[99.77216339 -148.32113647]
[100.88780975 -133.36268616]
[109.55029297 -121.24613953]
[102.86083221 -106.90871429]
[105.27960968 -104.34320068]
[106.57593536 -100.47867584]
[106.15279388 -95.85544586]
[103.67704773 -91.26003265]
[104.12365723 -76.26668549]
[114.64614868 -68.82983398]
[119.02943420 -56.50632858]
[115.46212769 -43.72020721]
[105.03076172 -35.19958115]
[105.25408936 -20.20124245]
[105.47741699 -5.20290470]
[105.70074463 9.79543209]
[105.92407227 24.79376984]
[106.14739990 39.79210663]
[106.37072754 54.79044342]
[116.16926575 69.34913635]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[109.47627258 144.04747009]
[110.14605713 159.03251648]
[110.81584167 174.01754761]
[111.48563385 189.00259399]
[112.15541840 203.98762512]
[113.15967560 218.95397949]
[114.49790955 233.89416504]
[115.83614349 248.83435059]
[117.17437744 263.77453613]
[129.01873779 273.89129639]
[130.16307068 289.06182861]
[120.44528198 300.29125977]
[121.78351593 315.23144531]
[123.12174988 330.17163086]
[124.45998383 345.11181641]
[125.79821777 360.05200195]
[127.13645172 374.99218750]
[128.47468567 389.93237305]
[142.93672180 394.52859497]
[154.50610352 404.28524780]
[161.43988037 417.69183350]
[162.70915222 432.69107056]
[158.15150452 446.99465942]
[148.49113464 458.43243408]
[135.22392273 465.28152466]
[136.56216431 480.22171021]
[137.90039062 495.16189575]
[139.23863220 510.10208130]
[140.57685852 525.04229736]
[141.91510010 539.98248291]
[156.92582703 540.48986816]
[171.76043701 542.83807373]
[186.19401550 546.99157715]
[200.00775146 552.88732910]
[212.99226379 560.43597412]
[224.95068359 569.52313232]
[235.70172119 580.01098633]
[245.08241272 591.74053955]
[252.95053101 604.53393555]
[259.18679810 618.19732666]
[263.69671631 632.52355957]
[266.41183472 647.29541016]
[267.29107666 662.28900146]
[266.32104492 677.27691650]
[263.51651001 692.03204346]
[258.91992188 706.33068848]
[252.60101318 719.95605469]
[244.65556335 732.70166016]
[235.20401001 744.37414551]
[224.38964844 754.79669189]
[212.37641907 763.81121826]
[199.34643555 771.28112793]
[185.49723816 777.09313965]
[171.03877258 781.15911865]
[156.19021606 783.41748047]
[141.17669678 783.83392334]
[126.22577667 782.40222168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 183]
[23 182]
[24 181]
[25 180]
[26 179]
[27 178]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[43 162]
[44 161]
[45 160]
[46 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[55 153]
[56 152]
[59 150]
[62 148]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[71 138]
[72 137]
[73 133]
[75 131]
[76 130]
[77 129]
[78 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
