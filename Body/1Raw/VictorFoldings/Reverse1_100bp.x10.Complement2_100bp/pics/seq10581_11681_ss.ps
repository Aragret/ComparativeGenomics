%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[124.91213989 491.91796875]
[121.80802917 477.24264526]
[118.59474945 462.59088135]
[115.27249146 447.96340942]
[111.95023346 433.33593750]
[108.62797546 418.70849609]
[104.05961609 432.99591064]
[94.43023682 444.49700928]
[81.16831207 451.50564575]
[66.24116516 452.98217773]
[51.86314011 448.70755005]
[40.16714096 439.31588745]
[32.88819885 426.20034790]
[31.10609627 411.30657959]
[35.08520508 396.84399414]
[44.23524094 384.95800781]
[57.19885635 377.41183472]
[72.05297089 375.32492065]
[86.59407043 379.00683594]
[98.66506195 387.91137695]
[106.47463226 400.71585083]
[106.25130463 385.71749878]
[106.02797699 370.71917725]
[105.80464935 355.72082520]
[97.87871552 343.11016846]
[105.40969086 329.19631958]
[105.18636322 314.19799805]
[104.40504456 299.21835327]
[103.06681061 284.27816772]
[100.04137421 280.58279419]
[99.30523682 274.94763184]
[101.91793823 268.87429810]
[101.02512360 253.90089417]
[100.13230896 238.92749023]
[99.23949432 223.95407104]
[98.34667969 208.98066711]
[97.45386505 194.00726318]
[88.97274017 181.76309204]
[95.87491608 167.52685547]
[94.98210144 152.55345154]
[94.08928680 137.58004761]
[93.19647217 122.60663605]
[90.81615448 120.00540161]
[89.57751465 116.12199402]
[90.06944275 111.50557709]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[92.38833618 46.72504425]
[92.16500854 31.72670555]
[91.94168091 16.72836685]
[91.71835327 1.73003018]
[80.65924835 -9.23965645]
[80.64642334 -24.45328522]
[91.17249298 -34.92884445]
[90.94916534 -49.92718124]
[77.56312561 -54.79185486]
[66.66446686 -63.91437912]
[59.54926300 -76.18331909]
[57.05455399 -90.11470032]
[59.45993805 -104.03146362]
[66.45638275 -116.26539612]
[77.18578339 -125.35707855]
[90.34611511 -130.22994995]
[82.60881805 -144.03012085]
[90.34611511 -156.75740051]
[90.34611511 -171.75740051]
[90.34611511 -186.75740051]
[90.01113892 -201.75364685]
[89.34135437 -216.73869324]
[88.67156982 -231.72372437]
[88.00178528 -246.70877075]
[87.33200073 -261.69381714]
[86.66221619 -276.67883301]
[85.99243164 -291.66387939]
[85.32264709 -306.64892578]
[76.54051208 -294.48858643]
[62.61738586 -288.90765381]
[47.86750412 -291.63546753]
[36.86127853 -301.82681274]
[33.00910568 -316.32373047]
[37.50461960 -330.63421631]
[48.95484543 -340.32403564]
[63.81179810 -342.39065552]
[77.47189331 -336.19372559]
[85.70247650 -323.65319824]
[87.04071045 -338.59338379]
[88.37894440 -353.53356934]
[89.71717834 -368.47375488]
[87.36585999 -377.30038452]
[91.18817902 -383.62585449]
[84.92855835 -398.15609741]
[93.94795227 -410.00933838]
[95.50847626 -424.92794800]
[97.06900024 -439.84655762]
[82.92750549 -445.08764648]
[70.53416443 -453.68161011]
[60.66803741 -465.08819580]
[53.94931412 -478.59039307]
[50.80033875 -493.33944702]
[51.41905975 -508.40823364]
[55.76657867 -522.84948730]
[63.56961441 -535.75543213]
[74.33766174 -546.31481934]
[87.39382172 -553.86376953]
[101.91738892 -557.92791748]
[116.99538422 -558.25164795]
[131.68000793 -554.81463623]
[145.04815674 -547.83300781]
[156.25949097 -537.74554443]
[164.60929871 -525.18640137]
[169.57264709 -510.94509888]
[170.83758545 -495.91674805]
[168.32456970 -481.04614258]
[162.19157410 -467.26797485]
[152.82412720 -455.44842529]
[140.81108093 -446.33044434]
[126.90757751 -440.48721313]
[111.98760223 -438.28604126]
[110.42708588 -423.36743164]
[108.86656189 -408.44882202]
[115.23779297 -394.98565674]
[106.10678101 -382.06533813]
[104.65736389 -367.13552856]
[103.31912994 -352.19534302]
[101.98089600 -337.25515747]
[100.64266205 -322.31497192]
[100.30768585 -307.31869507]
[100.97747040 -292.33367920]
[101.64725494 -277.34863281]
[102.31703949 -262.36358643]
[102.98682404 -247.37855530]
[103.65660858 -232.39350891]
[104.32639313 -217.40847778]
[104.99617767 -202.42343140]
[107.33750153 -199.78704834]
[108.51818848 -195.88563538]
[107.95758057 -191.27705383]
[105.34611511 -186.75740051]
[105.34611511 -171.75740051]
[105.34611511 -156.75740051]
[113.08341980 -144.03012085]
[105.34611511 -130.22994995]
[120.07830048 -124.39139557]
[131.46965027 -113.31952667]
[137.75524902 -98.68852997]
[137.94543457 -82.72708130]
[131.98152161 -67.87894440]
[120.74925995 -56.42874527]
[105.94750214 -50.15050888]
[106.17082977 -35.15217209]
[117.00413513 -24.99465752]
[117.44427490 -9.78739166]
[106.71669006 1.50670254]
[106.94001770 16.50503922]
[107.16334534 31.50337791]
[107.38667297 46.50171280]
[110.62940979 53.14298248]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[108.16987610 121.71382141]
[109.06269073 136.68722534]
[109.95551300 151.66062927]
[110.84832764 166.63403320]
[119.39331055 179.94920349]
[112.42726898 193.11445618]
[113.32008362 208.08786011]
[114.21289825 223.06126404]
[115.10571289 238.03466797]
[115.99852753 253.00807190]
[116.89134979 267.98147583]
[118.00699615 282.93994141]
[119.34523010 297.88012695]
[130.81973267 288.21908569]
[145.55653381 291.01675415]
[152.69219971 304.21075439]
[146.96658325 318.07501221]
[132.60040283 322.38928223]
[120.18470001 313.97467041]
[120.40803528 328.97299194]
[128.34994507 342.65643311]
[120.80298615 355.49749756]
[121.02631378 370.49584961]
[121.24964142 385.49417114]
[121.47296906 400.49252319]
[123.25543213 415.38623047]
[126.57769775 430.01370239]
[129.89994812 444.64114380]
[133.22221375 459.26861572]
[138.17459106 466.94400024]
[136.48332214 474.13854980]
[139.58743286 488.81384277]
[154.57322693 491.22024536]
[167.67578125 498.88101196]
[177.12310791 510.76010132]
[181.63752747 525.25091553]
[180.60850525 540.39379883]
[174.17518616 554.14068604]
[163.20765686 564.63244629]
[149.18916321 570.45019531]
[134.01560974 570.80712891]
[119.73906708 565.65496826]
[108.29034424 555.69042969]
[101.21777344 542.26129150]
[99.47787476 527.18353271]
[103.30594635 512.49645996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 193]
[4 192]
[5 191]
[6 190]
[21 189]
[22 188]
[23 187]
[24 186]
[26 184]
[27 183]
[28 177]
[29 176]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[39 168]
[40 167]
[41 166]
[42 165]
[46 164]
[48 163]
[49 162]
[50 161]
[51 159]
[52 158]
[53 157]
[54 156]
[57 153]
[58 152]
[66 145]
[68 143]
[69 142]
[70 141]
[71 137]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[77 131]
[78 130]
[88 129]
[89 128]
[90 127]
[91 126]
[93 125]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
