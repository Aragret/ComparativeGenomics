%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[81.34339142 551.42376709]
[66.33810425 551.99060059]
[51.36370468 550.87371826]
[36.60850906 548.08728027]
[22.25808907 543.66625977]
[8.49290752 537.66632080]
[-4.51391983 530.16278076]
[-16.59881783 521.25018311]
[-27.60980797 511.04043579]
[-37.40841675 499.66207886]
[-45.87141037 487.25814819]
[-52.89236450 473.98461914]
[-58.38297653 460.00845337]
[-62.27420425 445.50540161]
[-64.51710510 430.65786743]
[-65.08347321 415.65255737]
[-63.96618652 400.67819214]
[-61.17929459 385.92309570]
[-56.75785065 371.57278442]
[-50.75745392 357.80780029]
[-43.25357056 344.80117798]
[-34.34056473 332.71655273]
[-24.13052750 321.70587158]
[-12.75186443 311.90762329]
[-0.34767154 303.44497681]
[12.92605495 296.42443848]
[26.90238380 290.93423462]
[41.40554810 287.04342651]
[56.25315094 284.80099487]
[71.25847626 284.23507690]
[72.37412262 269.27661133]
[73.48977661 254.31816101]
[74.60542297 239.35971069]
[67.83616638 226.09220886]
[76.57844543 212.90573120]
[69.80918121 199.63824463]
[78.55146027 186.45176697]
[79.66711426 171.49331665]
[80.78276062 156.53485107]
[71.05710602 167.95465088]
[56.95797729 173.07466125]
[42.17084885 170.55653381]
[30.56105042 161.05851746]
[25.16334724 147.06333923]
[27.38868713 132.22933960]
[36.65537643 120.43405914]
[50.54111862 114.76077271]
[65.41621399 116.69246674]
[77.39235687 125.72418976]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[90.26910400 61.31613541]
[89.42499542 48.06857300]
[96.26362610 36.91890335]
[108.09732819 31.82056999]
[110.98260498 17.10067749]
[113.20771790 2.26663423]
[115.43283844 -12.56740952]
[117.65795898 -27.40145302]
[117.32298279 -42.39771271]
[114.43770599 -57.11760330]
[111.55243683 -71.83749390]
[108.66716003 -86.55738831]
[105.78189087 -101.27727509]
[102.89661407 -115.99716949]
[100.01134491 -130.71705627]
[97.12606812 -145.43695068]
[84.29348755 -154.26660156]
[81.57710266 -169.23576355]
[90.07389832 -181.41525269]
[87.18862915 -196.13514709]
[72.19982147 -195.15324402]
[57.20852280 -196.09619141]
[42.46088791 -198.94848633]
[28.19909096 -203.66329956]
[14.65732765 -210.16322327]
[2.05796218 -218.34150696]
[-9.39211178 -228.06385803]
[-19.50487328 -239.17063904]
[-28.11426163 -251.47944641]
[-35.07890320 -264.78817749]
[-40.28443146 -278.87826538]
[-43.64536667 -293.51837158]
[-45.10652161 -308.46804810]
[-44.64390182 -323.48184204]
[-42.26510239 -338.31323242]
[-38.00918579 -352.71862793]
[-31.94603729 -366.46148682]
[-24.17522240 -379.31619263]
[-14.82434273 -391.07156372]
[-4.04694891 -401.53466797]
[7.97998524 -410.53359985]
[21.05896568 -417.92068481]
[34.97522354 -423.57452393]
[49.50024414 -427.40234375]
[64.39550781 -429.34124756]
[79.41642761 -429.35943604]
[94.31634521 -427.45657349]
[108.85058594 -423.66390991]
[122.78047943 -418.04376221]
[135.87730408 -410.68835449]
[147.92597961 -401.71853638]
[158.72865295 -391.28155518]
[168.10795593 -379.54882812]
[175.90985107 -366.71301270]
[182.00624084 -352.98483276]
[186.29701233 -338.58978271]
[188.71168518 -323.76419067]
[189.21064758 -308.75155640]
[187.78567505 -293.79837036]
[184.46017456 -279.15017700]
[179.28875732 -265.04754639]
[172.35633850 -251.72200012]
[163.77676392 -239.39239502]
[153.69090271 -228.26118469]
[142.26438904 -218.51115417]
[129.68486023 -210.30239868]
[116.15885925 -203.76972961]
[101.90851593 -199.02041626]
[104.79379272 -184.30052185]
[117.25983429 -176.22999573]
[120.39559937 -161.34303284]
[111.84596252 -148.32221985]
[114.73123169 -133.60234070]
[117.61650848 -118.88243866]
[120.50177765 -104.16255188]
[123.38705444 -89.44265747]
[126.27232361 -74.72277069]
[129.15759277 -60.00287628]
[132.04287720 -45.28298569]
[136.01742554 -59.74683380]
[143.41972351 -72.79313660]
[153.79710388 -83.62410736]
[166.51499939 -91.57742310]
[180.79568481 -96.16674805]
[195.76591492 -97.11142731]
[210.51023865 -94.35370636]
[224.12702942 -88.06221771]
[235.78363037 -78.62168121]
[244.76722717 -66.60939789]
[250.52847290 -52.75992203]
[252.71507263 -37.92015076]
[251.19329834 -22.99754333]
[246.05621338 -8.90462399]
[237.61795044 3.49682093]
[226.39453125 13.44843769]
[213.07225037 20.34168243]
[198.46577454 23.75502777]
[183.46829224 23.47974968]
[168.99691772 19.53267860]
[155.93658447 12.15518093]
[145.08592224 1.79839385]
[137.10844421 -10.90436172]
[132.49200439 -25.17633629]
[130.26687622 -10.34229279]
[128.04176331 4.49175119]
[125.81665039 19.32579422]
[138.49160767 11.30422497]
[153.15588379 14.45998764]
[161.40913391 26.98531914]
[158.52349854 41.70514297]
[146.15202332 50.18727112]
[131.38163757 47.57276154]
[122.67370605 35.36024094]
[132.02929688 49.33564377]
[128.30929565 66.08307648]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[95.74121094 157.65051270]
[94.62556458 172.60896301]
[93.50991821 187.56741333]
[100.19937897 201.90483093]
[91.53689575 214.02137756]
[98.22635651 228.35881042]
[89.56387329 240.47535706]
[88.44822693 255.43380737]
[87.33258057 270.39227295]
[86.21692657 285.35070801]
[100.97229004 288.13629150]
[115.32297516 292.55642700]
[129.08851624 298.55560303]
[142.09579468 306.05831909]
[154.18122864 314.97024536]
[165.19282532 325.17929077]
[174.99211121 336.55706787]
[183.45585632 348.96051025]
[190.47760010 362.23361206]
[195.96903992 376.20944214]
[199.86114502 390.71224976]
[202.10491943 405.55966187]
[202.67219543 420.56494141]
[201.55580139 435.53936768]
[198.76979065 450.29464722]
[194.34921265 464.64520264]
[188.34963989 478.41055298]
[180.84652710 491.41760254]
[171.93424988 503.50277710]
[161.72486877 514.51403809]
[150.34678650 524.31298828]
[137.94309998 532.77636719]
[124.66979980 539.79772949]
[110.69379425 545.28875732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 186]
[31 185]
[32 184]
[33 183]
[35 181]
[37 179]
[38 178]
[39 177]
[50 176]
[51 175]
[52 174]
[54 172]
[55 171]
[59 168]
[60 161]
[61 160]
[62 159]
[63 158]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[74 124]
[75 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
