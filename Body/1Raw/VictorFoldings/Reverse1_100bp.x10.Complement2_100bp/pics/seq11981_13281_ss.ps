%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[206.66950989 519.19201660]
[209.60676575 504.46109009]
[214.40371704 490.22668457]
[220.98158264 476.72262573]
[229.23234558 464.17059326]
[239.02053833 452.77676392]
[250.18540955 442.72817993]
[262.54364014 434.18988037]
[255.66421509 420.86044312]
[248.78480530 407.53100586]
[241.90539551 394.20159912]
[229.19273376 386.44030762]
[229.73918152 370.62854004]
[225.54254150 368.34878540]
[222.73350525 363.40850830]
[222.86006165 356.79824829]
[216.38056946 343.26989746]
[209.90107727 329.74154663]
[203.32104492 316.26181030]
[196.64085388 302.83145142]
[189.96066284 289.40106201]
[175.17886353 291.65042114]
[160.40554810 289.21743774]
[147.08956909 282.32797241]
[136.54077148 271.64556885]
[129.80117798 258.20755005]
[127.54208374 243.32427979]
[129.99716187 228.45144653]
[136.93840027 215.04765320]
[147.69718933 204.43135071]
[141.01699829 191.00097656]
[134.33680725 177.57060242]
[127.65660858 164.14021301]
[120.57949829 150.91468811]
[113.11176300 137.90574646]
[105.64402008 124.89678955]
[98.17627716 111.88783264]
[90.51567841 98.99150848]
[82.66392517 86.21066284]
[74.81217194 73.42982483]
[75.31032562 88.42154694]
[70.42805481 102.60475922]
[60.80771637 114.11341095]
[47.71502304 121.43334198]
[32.87254333 123.60148621]
[18.23306656 120.33258820]
[5.72266150 112.05673981]
[-3.01270938 99.86274719]
[-6.82375908 85.35496521]
[-5.20907784 70.44212341]
[1.61889470 57.08626938]
[12.76182175 47.04459763]
[26.75365829 41.63825989]
[41.75354004 41.57855225]
[55.78797150 46.87333298]
[67.01194763 56.82785797]
[62.18595123 42.62540054]
[57.35995483 28.42294693]
[52.53395844 14.22049046]
[47.70795822 0.01803525]
[42.88196182 -14.18442059]
[31.11607742 -24.76149750]
[34.34720230 -39.30141068]
[29.52120590 -53.50386429]
[24.69520760 -67.70632172]
[20.76846886 -71.14547729]
[18.75493431 -75.32865906]
[18.61763000 -79.40250397]
[19.98625374 -82.65199280]
[15.79924202 -97.05577850]
[11.61223030 -111.45955658]
[-1.95692205 -119.10912323]
[-5.99795961 -133.77626038]
[1.37835455 -146.66522217]
[-2.80865669 -161.06900024]
[-14.09051418 -172.16090393]
[-10.21337032 -186.54203796]
[-14.40038204 -200.94583130]
[-18.58739281 -215.34960938]
[-22.77440453 -229.75338745]
[-26.96141624 -244.15716553]
[-41.96535492 -242.94610596]
[-56.90590668 -244.78044128]
[-71.17126465 -249.58506775]
[-84.17727661 -257.16323853]
[-95.39134216 -267.20462036]
[-104.35426331 -279.29803467]
[-110.69901276 -292.94830322]
[-114.16577148 -307.59637451]
[-114.61257935 -322.64248657]
[-112.02114868 -337.47045898]
[-106.49758148 -351.47314453]
[-98.26808167 -364.07711792]
[-87.66962433 -374.76626587]
[-75.13623047 -383.10284424]
[-61.18111038 -388.74551392]
[-46.37573624 -391.46319580]
[-31.32637215 -391.14459229]
[-16.64928055 -387.80276489]
[-2.94547796 -381.57455444]
[9.22387218 -372.71499634]
[19.36044312 -361.58688354]
[27.04914665 -348.64590454]
[31.97513771 -334.42199707]
[33.93669891 -319.49761963]
[32.85350800 -304.48391724]
[28.76991653 -289.99566650]
[21.85314751 -276.62615967]
[12.38643837 -264.92291260]
[0.75744498 -255.36511230]
[-12.55763340 -248.34417725]
[-8.37062168 -233.94039917]
[-4.18361092 -219.53662109]
[0.00340031 -205.13282776]
[4.19041157 -190.72904968]
[15.17278576 -180.66740417]
[11.59512520 -165.25601196]
[15.78213692 -150.85223389]
[28.91848373 -143.92605591]
[33.36989594 -129.37821960]
[26.01601219 -115.64656830]
[30.20302391 -101.24279022]
[34.39003372 -86.83900452]
[38.89766312 -72.53231812]
[43.72365952 -58.32986450]
[48.54965973 -44.12740707]
[59.97035599 -34.56618500]
[57.08441925 -19.01041794]
[61.91041565 -4.80796242]
[66.73641205 9.39449310]
[71.56240845 23.59694862]
[76.38840485 37.79940414]
[81.21440887 52.00186157]
[87.59300995 65.57806396]
[95.44476318 78.35890961]
[103.29652405 91.13975525]
[107.98994446 93.48191071]
[111.03700256 98.28698730]
[111.18522644 104.42008972]
[118.65296936 117.42904663]
[126.12071228 130.43800354]
[133.58845520 143.44694519]
[137.41868591 145.49224854]
[140.12651062 148.36143494]
[141.59074402 151.60047913]
[141.85009766 154.76266479]
[141.08697510 157.46002197]
[147.76718140 170.89039612]
[154.44737244 184.32077026]
[161.12756348 197.75115967]
[176.08508301 195.57630920]
[190.96234131 198.12770081]
[204.30448914 205.14308167]
[214.81074524 215.92425537]
[221.46121216 229.40660095]
[223.61587524 244.26420593]
[221.07615662 259.04019165]
[214.10321045 272.28967285]
[203.39103699 282.72088623]
[210.07122803 296.15124512]
[216.75141907 309.58163452]
[223.37516785 315.87161255]
[223.42942810 323.26205444]
[229.90892029 336.79040527]
[236.38841248 350.31875610]
[243.06860352 363.74914551]
[256.27334595 372.46380615]
[255.23481750 387.32217407]
[262.11422729 400.65161133]
[268.99365234 413.98104858]
[275.87307739 427.31045532]
[289.99200439 422.18371582]
[304.65063477 418.90457153]
[319.60827637 417.52694702]
[334.61926270 418.07339478]
[349.43710327 420.53500366]
[363.81851196 424.87130737]
[377.52731323 431.01110840]
[390.33840942 438.85360718]
[402.04138184 448.26998901]
[412.44412231 459.10565186]
[421.37576294 471.18264771]
[428.68966675 484.30267334]
[434.26571655 498.25030518]
[438.01232910 512.79644775]
[439.86804199 527.70233154]
[439.80230713 542.72308350]
[437.81628418 557.61218262]
[433.94250488 572.12500000]
[428.24462891 586.02331543]
[420.81622314 599.07885742]
[411.77923584 611.07720947]
[401.28210449 621.82147217]
[389.49716187 631.13507080]
[376.61798096 638.86517334]
[362.85598755 644.88476562]
[348.43716431 649.09509277]
[333.59835815 651.42694092]
[318.58316040 651.84204102]
[303.63815308 650.33355713]
[289.00878906 646.92633057]
[274.93521118 641.67620850]
[261.64862061 634.66949463]
[249.36711121 626.02117920]
[238.29240417 615.87335205]
[228.60633850 604.39251709]
[220.46797180 591.76733398]
[214.01094055 578.20507812]
[209.34129333 563.92846680]
[206.53567505 549.17187500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 171]
[9 170]
[10 169]
[11 168]
[13 166]
[16 165]
[17 164]
[18 163]
[19 161]
[20 160]
[21 159]
[30 150]
[31 149]
[32 148]
[33 147]
[34 142]
[35 141]
[36 140]
[37 139]
[38 136]
[39 135]
[40 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[63 126]
[64 125]
[65 124]
[69 123]
[70 122]
[71 121]
[74 118]
[75 117]
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
