%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[171.52861023 255.17456055]
[181.40156555 243.85032654]
[192.72460938 233.97598267]
[184.49580383 221.43458557]
[176.26699829 208.89317322]
[168.03817749 196.35177612]
[159.80937195 183.81037903]
[151.58056641 171.26898193]
[143.35176086 158.72758484]
[134.48086548 146.63182068]
[124.99196625 135.01455688]
[114.74657440 124.05865479]
[103.79066467 113.81326294]
[90.21636963 110.46212006]
[85.96394348 97.14264679]
[75.00803375 86.89725494]
[62.84657669 78.11665344]
[49.67410278 70.94128418]
[36.50162506 63.76591873]
[23.32914925 56.59055328]
[10.05130291 49.61209869]
[-3.32897019 42.83210754]
[-16.70924377 36.05211639]
[-30.08951759 29.27212524]
[-43.46979141 22.49213409]
[-51.19016647 35.36027527]
[-59.80887604 47.64486313]
[-69.28200531 59.28329468]
[-79.56127930 70.21626282]
[-90.59431458 80.38806152]
[-102.32489014 89.74684143]
[-114.69322205 98.24493408]
[-127.63629913 105.83901978]
[-141.08815002 112.49039459]
[-154.98023987 118.16518402]
[-169.24176025 122.83445740]
[-183.80006409 126.47441864]
[-198.58093262 129.06652832]
[-213.50906372 130.59756470]
[-228.50839233 131.05975342]
[-243.50247192 130.45069885]
[-258.41488647 128.77354431]
[-273.16967773 126.03680420]
[-287.69161987 122.25444031]
[-301.90673828 117.44572449]
[-315.74258423 111.63516235]
[-329.12866211 104.85236359]
[-341.99673462 97.13188934]
[-354.28125000 88.51308441]
[-365.91961670 79.03986359]
[-376.85250854 68.76050568]
[-387.02423096 57.72739410]
[-396.38290405 45.99674988]
[-404.88088989 33.62834549]
[-412.47488403 20.68521500]
[-419.12615967 7.23330927]
[-424.80084229 -6.65882111]
[-429.47000122 -20.92038345]
[-433.10986328 -35.47870636]
[-435.70184326 -50.25960159]
[-437.23278809 -65.18774414]
[-437.69485474 -80.18707275]
[-437.08569336 -95.18114471]
[-435.40841675 -110.09355164]
[-432.67156982 -124.84831238]
[-428.88909912 -139.37023926]
[-424.08026123 -153.58531189]
[-418.26959229 -167.42111206]
[-411.48669434 -180.80712891]
[-403.76611328 -193.67515564]
[-395.14721680 -205.95960999]
[-385.67391968 -217.59790039]
[-375.39447021 -228.53070068]
[-364.36126709 -238.70233154]
[-352.63055420 -248.06094360]
[-340.26208496 -256.55883789]
[-327.31890869 -264.15270996]
[-313.86694336 -270.80389404]
[-299.97476196 -276.47848511]
[-285.71316528 -281.14752197]
[-271.15481567 -284.78726196]
[-256.37390137 -287.37915039]
[-241.44575500 -288.90997314]
[-226.44642639 -289.37191772]
[-211.45236206 -288.76263428]
[-196.53996277 -287.08523560]
[-181.78521729 -284.34826660]
[-167.26333618 -280.56570435]
[-153.04829407 -275.75677490]
[-139.21253967 -269.94598389]
[-125.82656860 -263.16299438]
[-112.95860291 -255.44230652]
[-100.67421722 -246.82331848]
[-89.03600311 -237.34991455]
[-78.10326385 -227.07038879]
[-67.93172455 -216.03712463]
[-58.57320786 -204.30633545]
[-50.07540512 -191.93780518]
[-42.48162079 -178.99455261]
[-35.83054733 -165.54254150]
[-30.15608025 -151.65032959]
[-25.48713684 -137.38870239]
[-21.84750748 -122.83032227]
[-19.25573730 -108.04938507]
[-17.72503853 -93.12121582]
[-17.26320648 -78.12188721]
[-17.87259674 -63.12782288]
[-19.55010414 -48.21543503]
[-22.28717995 -33.46072006]
[-26.06987762 -18.93885803]
[-30.87891960 -4.72385168]
[-36.68980026 9.11186028]
[-23.30952644 15.89185238]
[-9.92925262 22.67184448]
[3.45102119 29.45183563]
[16.83129501 36.23182678]
[21.56828499 35.62358093]
[26.73766518 37.98462677]
[30.50451660 43.41807556]
[43.67699051 50.59344101]
[56.84946823 57.76881027]
[70.02194214 64.94417572]
[61.83370590 52.37624741]
[58.10609818 37.84679794]
[59.23250198 22.88915062]
[65.09404755 9.08182335]
[75.07215118 -2.11806488]
[88.11379242 -9.52856255]
[102.84266663 -12.36762142]
[117.70439911 -10.33563042]
[131.13058472 -3.64702892]
[141.70434570 6.99231863]
[148.30978394 20.45961571]
[150.24983215 35.33362579]
[147.31974792 50.04466248]
[139.82873535 63.04023361]
[128.56735229 72.94888306]
[114.72404480 78.72492981]
[99.75971985 79.75881195]
[85.25342560 75.94134521]
[96.20933533 86.18673706]
[109.78363037 89.53787994]
[114.03605652 102.85735321]
[124.99196625 113.10274506]
[122.76871490 98.26842499]
[128.82118225 84.54370880]
[141.27394104 76.18136597]
[156.26837158 75.77255249]
[169.15827942 83.44393921]
[175.94960022 96.81846619]
[174.53794861 111.75189209]
[165.36076355 123.61693573]
[151.26167297 128.73707581]
[136.60923767 125.52566528]
[146.09812927 137.14292908]
[147.51574707 122.21006775]
[158.11172485 111.59284973]
[173.04171753 110.14533234]
[185.47993469 118.52928925]
[189.73979187 132.91169739]
[183.87373352 146.71710205]
[170.56365967 153.63388062]
[155.89315796 150.49877930]
[164.12196350 163.04017639]
[172.35078430 175.58157349]
[180.57958984 188.12297058]
[188.80839539 200.66436768]
[197.03720093 213.20578003]
[205.26600647 225.74717712]
[218.83187866 219.29110718]
[233.15052795 214.74246216]
[247.95520020 212.18598938]
[262.97009277 211.66928101]
[277.91546631 213.20199585]
[292.51293945 216.75555420]
[306.49053955 222.26377869]
[319.58786011 229.62403870]
[331.56094360 238.69921875]
[342.18673706 249.32026672]
[351.26727295 261.28930664]
[358.63336182 274.38336182]
[364.14782715 288.35848999]
[367.70788574 302.95437622]
[369.24725342 317.89907837]
[368.73727417 332.91418457]
[366.18737793 347.72000122]
[361.64514160 362.04067993]
[355.19512939 375.60943604]
[346.95751953 388.17349243]
[337.08578491 399.49877930]
[325.76379395 409.37435913]
[313.20251465 417.61621094]
[299.63595581 424.07080078]
[285.31680298 428.61788940]
[270.51187134 431.17276001]
[255.49693298 431.68783569]
[240.55171204 430.15353394]
[225.95463562 426.59838867]
[211.97763062 421.08865356]
[198.88108826 413.72695923]
[186.90898132 404.65048218]
[176.28434753 394.02828979]
[167.20512390 382.05825806]
[159.84043884 368.96340942]
[154.32749939 354.98767090]
[150.76899719 340.39141846]
[149.23124695 325.44656372]
[149.74287415 310.43148804]
[152.29435730 295.62597656]
[156.83816528 281.30578613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[10 155]
[11 154]
[12 144]
[13 143]
[15 141]
[16 140]
[17 122]
[18 121]
[19 120]
[20 119]
[21 116]
[22 115]
[23 114]
[24 113]
[25 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
