%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[204.63269043 471.68438721]
[200.44567871 457.28060913]
[196.25866699 442.87683105]
[185.27629089 432.81518555]
[188.85395813 417.40377808]
[184.66694641 403.00000000]
[180.47993469 388.59622192]
[176.29292297 374.19244385]
[163.15657043 367.26626587]
[158.70516968 352.71841431]
[166.05905151 338.98678589]
[161.87203979 324.58300781]
[157.47103882 310.24313354]
[152.85702515 295.97039795]
[148.24301147 281.69769287]
[143.62901306 267.42495728]
[139.01499939 253.15220642]
[134.40098572 238.87948608]
[123.77745819 233.09439087]
[119.81664276 221.24130249]
[125.15917206 209.50161743]
[120.75817108 195.16177368]
[109.62721252 185.26475525]
[112.97502899 169.80180359]
[108.57402802 155.46195984]
[104.17302704 141.12211609]
[99.77203369 126.78226471]
[95.37103271 112.44242096]
[92.98334503 127.25116730]
[87.50939178 141.21669006]
[79.19821930 153.70365906]
[68.42791748 164.14399719]
[55.68846512 172.06272888]
[41.55942535 177.09962463]
[26.68357658 179.02551270]
[11.73766708 177.75280762]
[-2.59836268 173.33940125]
[-15.67231941 165.98605347]
[-26.88942528 156.02731323]
[-35.73937607 143.91622925]
[-41.81955719 130.20376587]
[-44.85336685 115.51377106]
[-44.70277786 100.51452637]
[-41.37464905 85.88840485]
[-35.02038193 72.30078888]
[-25.92905807 60.36982727]
[-14.51426983 50.63830185]
[-1.29531312 43.54893112]
[13.12643623 39.42423248]
[28.09488678 38.45185089]
[42.92906952 40.67602921]
[56.95413589 45.99557877]
[69.53202820 54.16849136]
[80.09054565 64.82295990]
[88.14934540 77.47427368]
[93.34285736 91.55108643]
[83.66565704 79.34496307]
[85.46076965 64.23760986]
[97.15708160 55.08709717]
[98.71760559 40.16849136]
[100.27812958 25.24988556]
[101.83865356 10.33128071]
[103.39916992 -4.58732367]
[104.84859467 -19.51713181]
[106.18682861 -34.45731735]
[107.52506256 -49.39750290]
[108.86329651 -64.33768463]
[102.38803864 -78.77311707]
[111.22995758 -90.75934601]
[112.56819153 -105.69953156]
[113.90642548 -120.63971710]
[115.24465942 -135.57991028]
[116.47163391 -150.52963257]
[117.58728027 -165.48809814]
[117.14067841 -180.48144531]
[115.13666534 -195.34696960]
[113.13265228 -210.21249390]
[111.12863922 -225.07801819]
[109.12462616 -239.94355774]
[97.53433990 -254.25253296]
[104.82798004 -270.21405029]
[102.60285950 -285.04809570]
[100.37774658 -299.88214111]
[98.15262604 -314.71618652]
[83.11843109 -315.25244141]
[68.43881226 -318.54235840]
[54.61375427 -324.47381592]
[42.11413574 -332.84484863]
[31.36568451 -343.37033081]
[22.73448944 -355.69174194]
[16.51452827 -369.38943481]
[12.91765022 -383.99685669]
[12.06636238 -399.01651001]
[13.98965931 -413.93682861]
[18.62203407 -428.24960327]
[25.80571175 -441.46737671]
[35.29601669 -453.13992310]
[46.76971436 -462.86972046]
[59.83601379 -470.32534790]
[74.04988098 -475.25289917]
[88.92720032 -477.48449707]
[103.96125031 -476.94418335]
[118.63997650 -473.65032959]
[132.46343994 -467.71511841]
[144.96080017 -459.34072876]
[155.70642090 -448.81234741]
[164.33428955 -436.48861694]
[170.55055237 -422.78924561]
[174.14349365 -408.18084717]
[174.99073792 -393.16098022]
[173.06341553 -378.24118042]
[168.42718506 -363.92965698]
[161.23994446 -350.71380615]
[151.74649048 -339.04379272]
[140.27017212 -329.31710815]
[127.20186615 -321.86499023]
[112.98667145 -316.94128418]
[115.21179199 -302.10723877]
[117.43690491 -287.27319336]
[119.66202545 -272.43914795]
[129.20013428 -264.99932861]
[131.17532349 -252.65905762]
[123.99015045 -241.94757080]
[125.99416351 -227.08204651]
[127.99817657 -212.21650696]
[130.00219727 -197.35098267]
[132.00621033 -182.48545837]
[137.83100891 -196.30831909]
[148.44805908 -206.90446472]
[162.28237915 -212.70199585]
[177.28173828 -212.84091187]
[191.22106934 -207.30058289]
[202.03254700 -196.90289307]
[208.11235046 -183.19027710]
[208.55859375 -168.19691467]
[203.30505371 -154.14698792]
[193.13108826 -143.12471008]
[179.54594421 -136.76519775]
[164.56486511 -136.01181030]
[150.41023254 -140.97633362]
[139.18180847 -150.92230225]
[132.54573059 -164.37243652]
[131.43008423 -149.41398621]
[134.06739807 -142.50990295]
[130.18484497 -134.24166870]
[128.84660339 -119.30148315]
[127.50837708 -104.36129761]
[126.17014313 -89.42111206]
[132.74111938 -76.05430603]
[123.80348206 -62.99945450]
[122.46524811 -48.05926895]
[121.12701416 -33.11908340]
[119.78878021 -18.17889786]
[122.32299805 -11.23631001]
[118.31777954 -3.02680063]
[116.75725555 11.89180374]
[115.19673157 26.81040955]
[113.63620758 41.72901535]
[112.07568359 56.64761734]
[121.62519836 68.02049255]
[120.25512695 83.17230988]
[108.26145935 93.11161041]
[109.71088409 108.04141998]
[114.11187744 122.38127136]
[118.51287842 136.72111511]
[122.91387177 151.06095886]
[127.31487274 165.40080261]
[138.76062012 176.32351685]
[135.09802246 190.76077271]
[139.49902344 205.10061646]
[153.26725769 217.32833862]
[148.67372131 234.26547241]
[153.28773499 248.53820801]
[157.90174866 262.81094360]
[162.51574707 277.08367920]
[167.12976074 291.35641479]
[171.74377441 305.62915039]
[176.38636780 310.33633423]
[177.75009155 315.85333252]
[176.27581787 320.39599609]
[180.46282959 334.79977417]
[194.03198242 342.44934082]
[198.07301331 357.11645508]
[190.69670105 370.00543213]
[194.88371277 384.40921021]
[199.07072449 398.81298828]
[203.25773621 413.21676636]
[214.53959656 424.30868530]
[210.66244507 438.68981934]
[214.84945679 453.09359741]
[219.03646851 467.49737549]
[234.14196777 467.52447510]
[248.62756348 471.80749512]
[261.31896973 479.99926758]
[271.18734741 491.43566895]
[277.43270874 505.18966675]
[279.54879761 520.14624023]
[277.36407471 535.09289551]
[271.05557251 548.81805420]
[261.13479614 560.20904541]
[248.40589905 568.34246826]
[233.90078735 572.55889893]
[218.79533386 572.51666260]
[204.31405640 568.21905518]
[191.63088989 560.01452637]
[181.77400208 548.56823730]
[175.54243469 534.80798340]
[173.44137573 519.84930420]
[175.64114380 504.90481567]
[181.96339417 491.18600464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[5 187]
[6 186]
[7 185]
[8 184]
[11 181]
[12 180]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[21 170]
[22 169]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[56 162]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[64 153]
[65 152]
[66 151]
[67 150]
[69 148]
[70 147]
[71 146]
[72 145]
[73 143]
[74 142]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[81 120]
[82 119]
[83 118]
[84 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
