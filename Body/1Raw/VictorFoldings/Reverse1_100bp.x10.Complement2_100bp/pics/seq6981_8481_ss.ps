%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[140.45533752 326.86590576]
[133.51638794 340.17959595]
[125.24527740 352.70928955]
[115.72966003 364.32208252]
[105.07042694 374.89489746]
[93.38056946 384.31570435]
[80.78399658 392.48455811]
[67.41424561 399.31491089]
[53.41304398 404.73437500]
[38.92881393 408.68545532]
[24.11509132 411.12628174]
[9.12891388 412.03100586]
[-5.87085772 411.39001465]
[-20.72521782 409.21011353]
[-35.27670288 405.51437378]
[-49.37105560 400.34204102]
[-62.85887146 393.74786377]
[-75.59716797 385.80181885]
[-87.45092010 376.58810425]
[-98.29446411 366.20437622]
[-108.01284790 354.76074219]
[-116.50306702 342.37847900]
[-123.67510223 329.18887329]
[-129.45294189 315.33172607]
[-133.77532959 300.95391846]
[-136.59643555 286.20788574]
[-137.88638306 271.24993896]
[-137.63146973 256.23864746]
[-135.83441162 241.33312988]
[-132.51425171 226.69139099]
[-127.70619202 212.46864319]
[-121.46119690 198.81565857]
[-113.84546661 185.87715149]
[-104.93973541 173.79029846]
[-94.83840179 162.68322754]
[-83.64855957 152.67366028]
[-71.48880768 143.86772156]
[-58.48806381 136.35874939]
[-44.78413773 130.22634888]
[-30.52229309 125.53552246]
[-15.85371876 122.33599854]
[-0.93390876 120.66168976]
[14.07897854 120.53034973]
[29.02579689 121.94336700]
[43.74810410 124.88576508]
[58.08983612 129.32635498]
[71.89895630 135.21804810]
[79.17218781 122.09935760]
[86.44541931 108.98066711]
[85.72126770 92.22203064]
[100.19384766 83.74141693]
[107.27095032 70.51589203]
[114.34805298 57.29036331]
[121.42516327 44.06483459]
[128.50227356 30.83930779]
[125.51765442 18.29120636]
[131.68446350 7.42132998]
[143.22238159 3.78772664]
[150.49560547 -9.33096695]
[157.76882935 -22.44966125]
[165.04206848 -35.56835556]
[172.31529236 -48.68704987]
[179.58853149 -61.80574417]
[166.86547852 -69.75733948]
[154.57603455 -78.36391449]
[142.75386047 -87.60187531]
[131.43136597 -97.44589996]
[120.63959503 -107.86900330]
[110.40811157 -118.84262848]
[100.76496887 -130.33668518]
[91.73658752 -142.31967163]
[83.34773254 -154.75875854]
[75.62138367 -167.61982727]
[68.57871246 -180.86764526]
[62.23904037 -194.46588135]
[56.61973190 -208.37727356]
[51.73619461 -222.56370544]
[47.60181046 -236.98626709]
[44.22791290 -251.60545349]
[41.62374878 -266.38116455]
[39.79645538 -281.27294922]
[38.75104141 -296.23992920]
[38.49037552 -311.24111938]
[39.01517105 -326.23538208]
[40.32398987 -341.18164062]
[42.41323853 -356.03894043]
[45.27719879 -370.76651001]
[48.90801620 -385.32400513]
[53.29573822 -399.67153931]
[58.42834091 -413.76974487]
[64.29175568 -427.58004761]
[70.86991119 -441.06454468]
[78.14477539 -454.18627930]
[86.09641266 -466.90930176]
[94.70301819 -479.19869995]
[103.94101715 -491.02084351]
[113.78507233 -502.34332275]
[124.20821381 -513.13507080]
[135.18186951 -523.36651611]
[146.67594910 -533.00964355]
[158.65898132 -542.03796387]
[171.09808350 -550.42675781]
[183.95916748 -558.15307617]
[197.20700073 -565.19573975]
[210.80526733 -571.53533936]
[224.71667480 -577.15460205]
[238.90312195 -582.03814697]
[253.32569885 -586.17248535]
[267.94488525 -589.54632568]
[282.72061157 -592.15045166]
[297.61239624 -593.97766113]
[312.57937622 -595.02307129]
[327.58056641 -595.28369141]
[342.57485962 -594.75885010]
[357.52111816 -593.44995117]
[372.37838745 -591.36065674]
[387.10592651 -588.49664307]
[401.66342163 -584.86578369]
[416.01095581 -580.47802734]
[430.10916138 -575.34539795]
[443.91943359 -569.48193359]
[457.40390015 -562.90374756]
[470.52560425 -555.62884521]
[483.24859619 -547.67718506]
[495.53799438 -539.07049561]
[507.36010742 -529.83245850]
[518.68255615 -519.98840332]
[529.47424316 -509.56521606]
[539.70568848 -498.59152222]
[549.34875488 -487.09741211]
[558.37707520 -475.11437988]
[566.76586914 -462.67523193]
[574.49212646 -449.81411743]
[581.53472900 -436.56628418]
[587.87426758 -422.96798706]
[593.49353027 -409.05654907]
[598.37695312 -394.87011719]
[602.51129150 -380.44750977]
[605.88507080 -365.82830811]
[608.48913574 -351.05258179]
[610.31634521 -336.16079712]
[611.36169434 -321.19378662]
[611.62225342 -306.19259644]
[611.09735107 -291.19833374]
[609.78845215 -276.25207520]
[607.69909668 -261.39483643]
[604.83508301 -246.66726685]
[601.20416260 -232.10978699]
[596.81634521 -217.76229858]
[591.68365479 -203.66409302]
[585.82019043 -189.85385132]
[579.24194336 -176.36938477]
[571.96697998 -163.24769592]
[564.01525879 -150.52473450]
[555.40856934 -138.23536682]
[546.17053223 -126.41326904]
[536.32641602 -115.09086609]
[525.90319824 -104.29918671]
[514.92950439 -94.06780243]
[503.43533325 -84.42475891]
[491.45227051 -75.39649200]
[479.01312256 -67.00774384]
[466.15197754 -59.28150940]
[452.90408325 -52.23896408]
[439.30578613 -45.89941406]
[425.39434814 -40.28023148]
[411.20788574 -35.39682007]
[396.78527832 -31.26256752]
[382.16604614 -27.88880157]
[367.39031982 -25.28477097]
[352.49853516 -23.45761299]
[337.53152466 -22.41233635]
[322.53033447 -22.15180588]
[307.53607178 -22.67673683]
[292.58981323 -23.98568726]
[277.73257446 -26.07507324]
[263.00503540 -28.93916512]
[248.44755554 -32.57011414]
[234.10006714 -36.95796585]
[220.00189209 -42.09069824]
[206.19165039 -47.95423889]
[192.70721436 -54.53251266]
[185.43399048 -41.41381836]
[178.16076660 -28.29512596]
[170.88752747 -15.17643166]
[163.61430359 -2.05773783]
[156.34106445 11.06095600]
[157.59094238 28.56537628]
[141.72779846 37.91641235]
[134.65069580 51.14194107]
[127.57358551 64.36746979]
[120.49647522 77.59299469]
[113.41937256 90.81852722]
[116.11719513 102.14826202]
[110.54599762 112.37582397]
[99.56410980 116.25389099]
[92.29087830 129.37258911]
[85.01765442 142.49128723]
[97.33039856 151.08198547]
[108.69456482 160.89320374]
[118.98968506 171.82089233]
[128.10662842 183.74923706]
[135.94874573 196.55178833]
[142.43290710 210.09281921]
[147.49037170 224.22880554]
[151.06753540 238.80989075]
[153.12648010 253.68150330]
[153.64538574 268.68597412]
[152.61872864 283.66430664]
[150.05740356 298.45767212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 198]
[48 197]
[49 196]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[58 187]
[59 186]
[60 185]
[61 184]
[62 183]
[63 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
