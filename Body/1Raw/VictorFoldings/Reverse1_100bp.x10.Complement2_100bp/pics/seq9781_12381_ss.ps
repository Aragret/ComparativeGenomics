%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[140.19854736 402.57888794]
[139.63247681 387.57412720]
[140.72052002 372.59817505]
[143.44946289 357.83279419]
[147.78619385 343.45724487]
[153.67803955 329.64605713]
[161.05351257 316.56686401]
[169.82305908 304.37841797]
[179.88023376 293.22866821]
[191.10295105 283.25302124]
[203.35498047 274.57250977]
[196.08174133 261.45382690]
[188.80851746 248.33512878]
[175.87040710 240.95579529]
[175.94583130 225.13476562]
[168.67260742 212.01606750]
[161.30191040 198.95188904]
[153.83416748 185.94293213]
[146.36643982 172.93397522]
[138.89869690 159.92503357]
[130.30012512 147.63418579]
[120.63932037 136.15948486]
[106.52338409 131.40661621]
[103.55420685 115.86652374]
[92.03144836 114.17325592]
[84.59699249 105.20831299]
[85.06514740 93.57121277]
[75.57624817 81.95394897]
[60.09585190 80.22334290]
[50.63825226 68.30661011]
[52.38352203 53.55908203]
[42.89462662 41.94181824]
[33.40572739 30.32455635]
[23.91682816 18.70729256]
[27.27842712 33.32576370]
[27.67018127 48.32064438]
[25.07648659 63.09470367]
[19.60065079 77.05948639]
[11.46077251 89.65879059]
[0.98106128 100.39077759]
[-11.42108059 108.82801056]
[-25.25168037 114.63442993]
[-39.95986938 117.57877350]
[-54.95982742 117.54376221]
[-69.65411377 114.53079224]
[-83.45745850 108.65987396]
[-95.82008362 100.16484070]
[-106.24958038 89.38404846]
[-114.33055115 76.74688721]
[-119.74114227 62.75669098]
[-122.26583862 47.97068787]
[-121.80409241 32.97779846]
[-118.37429810 18.37517929]
[-112.11304474 4.74445057]
[-103.26972961 -7.37148190]
[-92.19657898 -17.49004555]
[-79.33463287 -25.20821953]
[-65.19616699 -30.21859550]
[-50.34432220 -32.32160950]
[-35.37063599 -31.43350220]
[-20.87150764 -27.58964348]
[-7.42442942 -20.94313431]
[4.43500566 -11.75870228]
[14.23204136 -0.40557855]
[10.47574043 -14.92763805]
[6.71943951 -29.44969749]
[2.96313906 -43.97175598]
[-0.90116644 -58.46545029]
[-4.87326288 -72.92996979]
[-8.84535885 -87.39450073]
[-22.29911613 -95.24523926]
[-26.12133408 -109.97090912]
[-18.55393982 -122.74862671]
[-22.52603722 -137.21315002]
[-33.64150238 -148.47178650]
[-29.55067444 -162.79360962]
[-33.52276993 -177.25813293]
[-48.46164703 -175.59185791]
[-63.47725677 -176.28317261]
[-78.19982910 -179.31506348]
[-92.26680756 -184.61286926]
[-105.33177948 -192.04609680]
[-117.07300568 -201.43173218]
[-127.20134735 -212.53863525]
[-135.46739197 -225.09326172]
[-141.66757202 -238.78648376]
[-145.64921570 -253.28106689]
[-147.31425476 -268.22009277]
[-146.62170410 -283.23562622]
[-143.58859253 -297.95797729]
[-138.28964233 -312.02450562]
[-130.85531616 -325.08886719]
[-121.46871948 -336.82931519]
[-110.36099243 -346.95675659]
[-97.80566406 -355.22174072]
[-84.11193848 -361.42080688]
[-69.61701965 -365.40124512]
[-54.67787170 -367.06506348]
[-39.66237640 -366.37124634]
[-24.94030380 -363.33694458]
[-10.87419987 -358.03683472]
[2.18954396 -350.60144043]
[13.92922211 -341.21386719]
[24.05573463 -330.10528564]
[32.31970596 -317.54928589]
[38.51762772 -303.85504150]
[42.49687576 -289.35980225]
[44.15945053 -274.42050171]
[43.46441650 -259.40505981]
[40.42888260 -244.68325806]
[35.12760544 -230.61758423]
[27.69113159 -217.55445862]
[18.30259514 -205.81555176]
[7.19319296 -195.68995667]
[-5.36349392 -187.42701721]
[-19.05824661 -181.23022461]
[-15.08615017 -166.76570129]
[-4.25479603 -156.54165649]
[-8.06151295 -141.18524170]
[-4.08941650 -126.72072601]
[8.94235420 -119.59973145]
[13.17667675 -104.98722839]
[5.61916494 -91.36659241]
[9.59126091 -76.90206909]
[13.56335735 -62.43754578]
[18.36587906 -56.81993484]
[17.48519897 -47.72805786]
[21.24149895 -33.20599747]
[24.99779892 -18.68393898]
[28.75410080 -4.16187906]
[35.53409195 9.21839428]
[45.02299118 20.83565712]
[54.51189041 32.45291901]
[64.00078583 44.07018280]
[78.79985046 45.30441666]
[88.58843231 56.95080185]
[87.19351196 72.46504974]
[96.68241119 84.08231354]
[112.51599121 89.62073517]
[115.02890778 106.20571899]
[129.83584595 111.77933502]
[132.11401367 126.49868011]
[141.77482605 137.97337341]
[139.87428284 123.09426880]
[144.53553772 108.83689880]
[154.85861206 97.95414734]
[168.85025024 92.54729462]
[183.80889893 93.66032410]
[196.84626770 101.07832336]
[205.44506836 113.36900330]
[207.94497681 128.15921021]
[203.86332703 142.59320068]
[193.98820496 153.88400269]
[180.22634888 159.85151672]
[165.23495483 159.34352112]
[151.90763855 152.45729065]
[159.37538147 165.46623230]
[166.84312439 178.47518921]
[174.31086731 191.48414612]
[181.29725647 197.36871338]
[181.79130554 204.74284363]
[189.06452942 217.86154175]
[202.52287292 226.17921448]
[201.92721558 241.06188965]
[209.20043945 254.18058777]
[216.47366333 267.29928589]
[230.32678223 261.50665283]
[244.73304749 257.27316284]
[259.51760864 254.65020752]
[274.50097656 253.66961670]
[289.50131226 254.34330750]
[304.33645630 256.66308594]
[318.82635498 260.60083008]
[332.79513550 266.10870361]
[346.07321167 273.11984253]
[358.49938965 281.54913330]
[369.92282104 291.29431152]
[380.20486450 302.23699951]
[389.22070312 314.24441528]
[396.86087036 327.17077637]
[403.03265381 340.85919189]
[407.66107178 355.14346313]
[410.69000244 369.85025024]
[412.08267212 384.80093384]
[411.82214355 399.81411743]
[409.91159058 414.70751953]
[406.37420654 429.30032349]
[401.25292969 443.41540527]
[394.60995483 456.88143921]
[386.52587891 469.53494263]
[377.09887695 481.22229004]
[366.44332886 491.80166626]
[354.68865967 501.14459229]
[341.97747803 509.13769531]
[328.46414185 515.68389893]
[314.31268311 520.70379639]
[299.69488525 524.13641357]
[284.78817749 525.94006348]
[269.77352905 526.09289551]
[254.83317566 524.59301758]
[240.14852905 521.45867920]
[225.89781189 516.72790527]
[212.25402832 510.45809937]
[199.38279724 502.72540283]
[187.44036865 493.62368774]
[176.57170105 483.26339722]
[166.90873718 471.77035522]
[158.56878662 459.28402710]
[151.65307617 445.95599365]
[146.24554443 431.94808960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 166]
[12 165]
[13 164]
[15 162]
[16 161]
[17 159]
[18 158]
[19 157]
[20 156]
[21 143]
[22 142]
[24 140]
[27 138]
[28 137]
[31 134]
[32 133]
[33 132]
[34 131]
[64 130]
[65 129]
[66 128]
[67 127]
[68 125]
[69 124]
[70 123]
[73 120]
[74 119]
[76 117]
[77 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
