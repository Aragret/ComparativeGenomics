%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[50.55678940 646.38153076]
[39.35177612 656.41955566]
[26.49294090 664.22753906]
[12.41825008 669.53961182]
[-2.39291883 672.17474365]
[-17.43610191 672.04321289]
[-32.19893265 669.14953613]
[-46.17859650 663.59222412]
[-58.89895248 655.56060791]
[-69.92675018 645.32818604]
[-78.88638306 633.24346924]
[-85.47268677 619.71813965]
[-89.46134186 605.21276855]
[-90.71649170 590.22143555]
[-89.19539642 575.25482178]
[-84.94984436 560.82257080]
[-78.12445831 547.41625977]
[-68.95169067 535.49255371]
[-57.74397278 525.45751953]
[-44.88303375 517.65295410]
[-30.80691147 512.34472656]
[-15.99503231 509.71359253]
[-0.95188552 509.84915161]
[1.93338704 495.12927246]
[4.81865978 480.40939331]
[7.70393229 465.68948364]
[10.58920479 450.96960449]
[13.47447777 436.24969482]
[16.03030968 421.46905518]
[18.25542641 406.63500977]
[12.49170876 392.90078735]
[22.19053841 380.40106201]
[24.41565514 365.56701660]
[26.64077187 350.73297119]
[28.86589050 335.89892578]
[31.09100723 321.06488037]
[33.31612396 306.23083496]
[35.54124069 291.39678955]
[37.76635742 276.56274414]
[27.21827507 287.22753906]
[12.77738857 291.28472900]
[-1.78149033 287.67376709]
[-12.65270424 277.33856201]
[-16.99454308 262.98068237]
[-13.67206287 248.35327148]
[-3.55375051 237.27989197]
[10.71549129 232.65510559]
[25.40571785 235.68780518]
[36.67693710 245.58525085]
[41.58281326 259.75939941]
[45.98381424 245.41957092]
[42.32121277 230.98229980]
[53.76696014 220.05960083]
[58.16796112 205.71975708]
[52.77938461 194.88970947]
[56.32856750 182.90692139]
[67.43580627 176.35009766]
[72.04981995 162.07736206]
[76.66382599 147.80462646]
[81.27783203 133.53189087]
[85.89184570 119.25916290]
[90.50585175 104.98642731]
[92.95158386 90.18715668]
[93.06324768 75.18756866]
[93.06324768 60.18757248]
[93.06324768 45.18757248]
[93.06324768 30.18757057]
[91.61383057 15.25776291]
[88.72855377 0.53787142]
[85.84328461 -14.18202019]
[82.95800781 -28.90191078]
[72.71071625 -40.95610046]
[77.85541534 -54.93398285]
[74.97014618 -69.65387726]
[72.08486938 -84.37376404]
[69.19960022 -99.09365845]
[64.47793579 -106.91310120]
[66.38265991 -114.05410004]
[63.71686935 -128.81532288]
[61.05107117 -143.57653809]
[50.15183640 -148.32450867]
[42.97137833 -157.64877319]
[41.20185471 -169.16236877]
[45.16853333 -179.98738098]
[53.77734756 -187.47434998]
[51.55223083 -202.30838013]
[47.18443680 -210.33087158]
[49.40612411 -217.37968445]
[47.40211105 -232.24520874]
[45.39809799 -247.11074829]
[43.39408112 -261.97625732]
[28.48134804 -264.44644165]
[14.95998573 -271.20397949]
[4.03230572 -281.64797974]
[-3.33001065 -294.84979248]
[-6.47231054 -309.63549805]
[-5.11518288 -324.69039917]
[0.62069726 -338.67578125]
[10.22529984 -350.34808350]
[22.84458923 -358.66943359]
[37.35646820 -362.89990234]
[52.47054672 -362.66329956]
[66.84289551 -357.98068237]
[79.19553375 -349.26840210]
[88.43007660 -337.30117798]
[93.72538757 -323.14309692]
[94.61061096 -308.05310059]
[91.00704193 -293.37298584]
[83.23509979 -280.40811157]
[71.98586273 -270.31127930]
[58.25960922 -263.98028564]
[60.26362610 -249.11476135]
[62.26763916 -234.24923706]
[64.27165222 -219.38369751]
[66.38627625 -204.53350830]
[68.61139679 -189.69946289]
[83.96103668 -179.72428894]
[87.20036316 -161.38253784]
[75.81228638 -146.24232483]
[78.47808838 -131.48110962]
[81.14388275 -116.71989441]
[83.91949463 -101.97892761]
[86.80476379 -87.25904083]
[89.69003296 -72.53914642]
[92.57530975 -57.81925583]
[102.61623383 -46.81793594]
[97.67790222 -31.78718376]
[100.56317902 -17.06729317]
[103.44844818 -2.34740114]
[106.33371735 12.37248993]
[111.58107758 -1.67974234]
[122.03204346 -12.43972683]
[135.92544556 -18.09421730]
[150.92001343 -17.69033432]
[164.48887634 -11.29613590]
[174.34547424 0.01084109]
[178.82876587 14.32517242]
[177.18324280 29.23464203]
[169.68623352 42.22674179]
[157.60107422 51.11207581]
[142.96435547 54.39331055]
[128.24261475 51.51749802]
[115.91672516 42.96926117]
[108.06324768 30.18757057]
[108.06324768 45.18757248]
[108.06324768 60.18757248]
[108.06324768 75.18756866]
[111.20674896 81.87638092]
[107.94992065 90.41048431]
[114.97954559 77.15966034]
[125.41630554 66.38589478]
[138.43711853 58.93885803]
[153.01512146 55.40585327]
[168.00061035 56.06550980]
[182.21177673 60.86579895]
[194.52786255 69.42815399]
[203.97758484 81.07730865]
[209.81567383 94.89456177]
[211.58174133 109.79023743]
[209.13650513 124.58958435]
[202.67277527 138.12547302]
[192.70034790 149.33041382]
[180.00566101 157.32072449]
[165.58988953 161.46626282]
[150.58992004 161.44009399]
[136.18869019 157.24427795]
[123.52197266 149.20971680]
[113.58869934 137.97006226]
[107.17224884 124.41169739]
[104.77858734 109.60043335]
[100.16458130 123.87316895]
[95.55056763 138.14590454]
[90.93656158 152.41864014]
[86.32254791 166.69137573]
[81.70854187 180.96409607]
[85.98069763 198.87583923]
[72.50780487 210.12074280]
[68.10681152 224.46060181]
[71.45462036 239.92353821]
[60.32366180 249.82055664]
[55.92266083 264.16040039]
[52.60040283 278.78787231]
[50.37528610 293.62191772]
[48.15016937 308.45596313]
[45.92505264 323.29000854]
[43.69993210 338.12405396]
[41.47481537 352.95809937]
[39.24969864 367.79214478]
[37.02458191 382.62619019]
[42.62914658 397.42141724]
[33.08946991 408.86013794]
[30.86435318 423.69418335]
[32.77647400 428.55120850]
[32.64723587 433.19195557]
[30.90087318 436.87506104]
[28.19436836 439.13497925]
[25.30909538 453.85485840]
[22.42382431 468.57476807]
[19.53855133 483.29464722]
[16.65327835 498.01455688]
[13.76800537 512.73443604]
[27.74916840 518.28796387]
[40.47168732 526.31616211]
[51.50223923 536.54565430]
[60.46512985 548.62786865]
[67.05508423 562.15148926]
[71.04764557 576.65576172]
[72.30683899 591.64672852]
[70.78977203 606.61376953]
[66.54811859 621.04718018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 192]
[30 191]
[32 189]
[33 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[50 181]
[51 180]
[53 178]
[54 177]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[63 149]
[64 147]
[65 146]
[66 145]
[67 144]
[68 130]
[69 129]
[70 128]
[71 127]
[73 125]
[74 124]
[75 123]
[76 122]
[78 121]
[79 120]
[80 119]
[85 116]
[86 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
