%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[118.92503357 607.06250000]
[121.23918915 591.97583008]
[129.87710571 579.39215088]
[143.12373352 571.80993652]
[142.00807190 556.85150146]
[140.89242554 541.89306641]
[139.77677917 526.93457031]
[138.54980469 511.98486328]
[137.21156311 497.04467773]
[135.87333679 482.10449219]
[134.53509521 467.16430664]
[133.19686890 452.22412109]
[124.11849213 444.22976685]
[122.88130951 431.79379272]
[130.69129944 421.52896118]
[129.57565308 406.57052612]
[128.23742676 391.63034058]
[126.67690277 376.71173096]
[125.11637878 361.79312134]
[115.91998291 353.93481445]
[114.49778748 341.51864624]
[122.15408325 331.13867188]
[120.81584930 316.19848633]
[119.47761536 301.25830078]
[118.13938141 286.31811523]
[103.38994598 283.78759766]
[89.78772736 277.52050781]
[78.26244354 267.93862915]
[69.60358429 255.69050598]
[64.40629578 241.60758972]
[63.03049088 226.64776611]
[65.57594299 211.83026123]
[71.87504578 198.16615295]
[81.50387573 186.58938599]
[93.81067657 177.89294434]
[107.96001434 172.67454529]
[106.62177277 157.73435974]
[105.28353882 142.79417419]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[75.11112213 89.12117767]
[60.14328766 90.10305023]
[49.93093872 79.11633301]
[52.00223541 64.26003265]
[64.83029175 56.48565292]
[78.95758057 61.52301407]
[74.98548126 47.05849075]
[71.01338959 32.59396744]
[67.04129028 18.12944412]
[63.06919479 3.66491938]
[51.95372772 -7.59372187]
[56.04455566 -21.91553688]
[52.07246017 -36.38006210]
[38.61870193 -44.23080444]
[34.79648590 -58.95647049]
[42.36388016 -71.73419189]
[38.39178467 -86.19871521]
[34.41968536 -100.66323853]
[30.44758987 -115.12776184]
[27.58922386 -100.40262604]
[21.33470535 -86.76880646]
[12.03775597 -74.99736786]
[0.22416385 -65.75404358]
[-13.43795395 -59.56158829]
[-28.17593956 -56.77021027]
[-43.15628815 -57.53778076]
[-57.53178787 -61.82088852]
[-70.48943329 -69.37729645]
[-81.29640961 -79.77967072]
[-89.34152985 -92.43968201]
[-94.16979980 -106.64136505]
[-95.50816345 -121.58154297]
[-93.28092194 -136.41526794]
[-87.61404419 -150.30361938]
[-78.82801819 -162.46116638]
[-67.41973114 -172.20030212]
[-54.03437805 -178.97027588]
[-39.42897034 -182.38816833]
[-24.42951202 -182.26071167]
[-9.88429451 -178.59510803]
[3.38407850 -171.59866333]
[14.62521648 -161.66705322]
[23.20337868 -149.36196899]
[28.63369560 -135.37828064]
[29.97192955 -150.31846619]
[31.31016350 -165.25865173]
[32.64839935 -180.19883728]
[33.98663330 -195.13902283]
[24.12877083 -207.19970703]
[25.69875908 -222.33212280]
[37.25753784 -231.65576172]
[38.59577179 -246.59594727]
[39.93400574 -261.53613281]
[41.16098404 -276.48587036]
[42.27663040 -291.44430542]
[43.39228058 -306.40277100]
[29.46776199 -312.35144043]
[18.23091316 -322.50091553]
[10.90062046 -335.75027466]
[8.27201939 -350.66232300]
[10.63024235 -365.61950684]
[17.71948433 -378.99938965]
[28.77075958 -389.35061646]
[42.58530807 -395.55038452]
[57.66463089 -396.92614746]
[72.37303162 -393.32870483]
[85.11506653 -385.14828491]
[94.50856018 -373.27221680]
[99.53457642 -358.98873901]
[99.64794159 -343.84719849]
[94.83635712 -329.49008179]
[85.62173462 -317.47470093]
[73.00362396 -309.10440063]
[58.35073471 -305.28710938]
[57.23508453 -290.32867432]
[56.11943436 -275.37020874]
[58.75673676 -268.46612549]
[54.87419128 -260.19790649]
[53.53595734 -245.25770569]
[52.19772339 -230.31752014]
[61.91550446 -219.08808899]
[60.77117538 -203.91755676]
[48.92681503 -193.80078125]
[47.58858109 -178.86059570]
[46.25034714 -163.92041016]
[44.91211319 -148.98022461]
[43.57387924 -134.04003906]
[44.91211319 -119.09986115]
[48.88421249 -104.63533783]
[52.85630798 -90.17081451]
[56.82840347 -75.70629120]
[69.86017609 -68.58529663]
[74.09449768 -53.97279358]
[66.53698730 -40.35215759]
[70.50907898 -25.88763428]
[81.34043884 -15.66359138]
[77.53372192 -0.30717680]
[81.50581360 14.15734673]
[85.47791290 28.62187195]
[89.45000458 43.08639526]
[93.42210388 57.55091858]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[118.47234344 108.27870178]
[125.37806702 94.96289062]
[136.18769836 84.56328583]
[149.76048279 78.17738342]
[164.66403198 76.47911835]
[179.32556152 79.64768982]
[192.19776917 87.34872437]
[201.92225647 98.76951599]
[207.47276306 112.70478821]
[208.26351929 127.68392944]
[204.21109009 142.12615967]
[195.74313354 154.50733948]
[183.75329590 163.52085876]
[169.50688171 168.21551514]
[154.50735474 168.09585571]
[140.33766174 163.17449951]
[128.49314880 153.97082520]
[120.22372437 141.45594788]
[121.56195831 156.39613342]
[122.90019226 171.33631897]
[137.75169373 173.95703125]
[151.40811157 180.32786560]
[162.94108582 190.00910950]
[171.56829834 202.33622742]
[176.70658875 216.46548462]
[178.01135254 231.43165588]
[175.39959717 246.21406555]
[169.05531311 259.80606079]
[159.41639709 271.28366089]
[147.14448547 279.86837769]
[133.07957458 284.97988892]
[134.41780090 299.92007446]
[135.75604248 314.86026001]
[137.09426880 329.80044556]
[148.03405762 344.61270142]
[140.03498840 360.23260498]
[141.59550476 375.15121460]
[143.15602112 390.06982422]
[146.72401428 395.63586426]
[146.91653442 401.31564331]
[144.53410339 405.45486450]
[145.64976501 420.41333008]
[156.36781311 435.38681030]
[148.13705444 450.88589478]
[149.47528076 465.82608032]
[150.81352234 480.76626587]
[152.15174866 495.70642090]
[153.48999023 510.64660645]
[157.37254333 518.91485596]
[154.73522949 525.81896973]
[155.85087585 540.77740479]
[156.96653748 555.73583984]
[158.08218384 570.69427490]
[172.30699158 576.22760010]
[182.71601868 587.39068604]
[187.24255371 601.96716309]
[184.98782349 617.06280518]
[176.39952087 629.68041992]
[163.18286133 637.31475830]
[147.96202087 638.44995117]
[133.75910950 632.86065674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 202]
[5 201]
[6 200]
[7 199]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[15 191]
[16 190]
[17 187]
[18 186]
[19 185]
[22 183]
[23 182]
[24 181]
[25 180]
[36 169]
[37 168]
[38 167]
[39 149]
[40 148]
[42 146]
[43 145]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[55 138]
[56 137]
[59 134]
[60 133]
[61 132]
[62 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[94 123]
[95 122]
[96 121]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
