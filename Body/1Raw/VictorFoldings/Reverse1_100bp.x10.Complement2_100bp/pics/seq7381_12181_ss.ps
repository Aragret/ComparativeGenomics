%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[77.82202148 404.29125977]
[76.47880554 419.27764893]
[72.32341003 433.73895264]
[65.50605011 447.15237427]
[56.27316284 459.03305054]
[44.95852280 468.95150757]
[31.97113609 476.54913330]
[17.78049660 481.55136108]
[2.89958310 483.77734375]
[-12.13366795 483.14657593]
[-26.77581406 479.68188477]
[-40.49755096 473.50851440]
[-52.80284500 464.84963989]
[-63.24686813 454.01824951]
[-71.45207977 441.40591431]
[-77.12185669 427.46856689]
[-80.05125427 412.70999146]
[-80.13436127 397.66372681]
[-77.36818695 382.87371826]
[-71.85271454 368.87457275]
[-63.78733444 356.17236328]
[-53.46360397 345.22625732]
[-41.25471115 336.43197632]
[-27.60201073 330.10739136]
[-12.99903202 326.48117065]
[2.02633333 325.68438721]
[16.93092918 327.74581909]
[21.75692749 313.54336548]
[26.58292389 299.34091187]
[31.40892220 285.13845825]
[36.23492050 270.93600464]
[41.06091690 256.73355103]
[31.16617203 243.63500977]
[31.02718735 227.05361938]
[40.89682007 213.52249146]
[57.04549408 208.49095154]
[61.65950394 194.21821594]
[66.27351379 179.94548035]
[62.82626724 165.45527649]
[74.43337250 154.70420837]
[79.04737854 140.43147278]
[83.66139221 126.15873718]
[72.72063446 114.38979340]
[69.18477631 98.71478271]
[74.01361084 83.38864899]
[85.89635468 72.57160187]
[101.60749054 69.19990540]
[106.00848389 54.86006165]
[110.40948486 40.52021408]
[114.81048584 26.18036652]
[104.22246552 36.80551910]
[90.89806366 43.69466400]
[76.10727692 46.19116974]
[61.25986099 44.05708694]
[47.77098465 37.49581909]
[36.92631912 27.13274956]
[29.75950813 13.95561600]
[26.95364761 -0.77961922]
[28.77617455 -15.66848755]
[35.05337524 -29.29187775]
[45.18695068 -40.35129166]
[58.21102905 -47.79262161]
[72.88423920 -50.90660477]
[87.80802155 -49.39643860]
[101.55994415 -43.40605545]
[112.82925415 -33.50642776]
[120.54183960 -20.64112282]
[123.96257782 -6.03637934]
[122.76516724 8.91687584]
[130.80633545 -3.74564862]
[138.84751892 -16.40817451]
[139.50733948 -22.98663521]
[142.88354492 -27.55809784]
[147.32135010 -29.32301903]
[155.73596191 -41.74051666]
[164.15058899 -54.15801239]
[157.56767273 -67.96425629]
[158.77122498 -83.11180878]
[167.33821106 -95.54052734]
[180.88539124 -101.96935272]
[195.73155212 -100.76219940]
[204.14616394 -113.17969513]
[212.56079102 -125.59719086]
[220.97540283 -138.01469421]
[229.39002991 -150.43218994]
[237.80464172 -162.84968567]
[246.21926880 -175.26718140]
[254.63388062 -187.68467712]
[242.94671631 -197.10113525]
[232.07708740 -207.45056152]
[222.09922791 -218.66224670]
[213.08131409 -230.65960693]
[205.08496094 -243.36070251]
[198.16474915 -256.67874146]
[192.36799622 -270.52276611]
[187.73426819 -284.79821777]
[184.29524231 -299.40756226]
[182.07440186 -314.25097656]
[181.08691406 -329.22711182]
[181.33952332 -344.23364258]
[182.83050537 -359.16802979]
[185.54968262 -373.92831421]
[189.47846985 -388.41360474]
[194.59004211 -402.52499390]
[200.84947205 -416.16607666]
[208.21400452 -429.24368286]
[216.63333130 -441.66842651]
[226.04992676 -453.35546875]
[236.39947510 -464.22497559]
[247.61128235 -474.20269775]
[259.60876465 -483.22048950]
[272.30993652 -491.21670532]
[285.62808228 -498.13671875]
[299.47216797 -503.93331909]
[313.74768066 -508.56689453]
[328.35705566 -512.00573730]
[343.20050049 -514.22637939]
[358.17663574 -515.21374512]
[373.18316650 -514.96093750]
[388.11755371 -513.46978760]
[402.87777710 -510.75039673]
[417.36303711 -506.82144165]
[431.47436523 -501.70971680]
[445.11538696 -495.45010376]
[458.19287109 -488.08541870]
[470.61752319 -479.66595459]
[482.30447388 -470.24920654]
[493.17385864 -459.89953613]
[503.15145874 -448.68759155]
[512.16906738 -436.69003296]
[520.16516113 -423.98873901]
[527.08502197 -410.67053223]
[532.88146973 -396.82635498]
[537.51483154 -382.55081177]
[540.95349121 -367.94140625]
[543.17401123 -353.09793091]
[544.16113281 -338.12176514]
[543.90814209 -323.11526489]
[542.41680908 -308.18087769]
[539.69726562 -293.42068481]
[535.76812744 -278.93545532]
[530.65625000 -264.82418823]
[524.39648438 -251.18325806]
[517.03167725 -238.10585022]
[508.61203003 -225.68128967]
[499.19515991 -213.99446106]
[488.84533691 -203.12519836]
[477.63330078 -193.14775085]
[465.63562012 -184.13026428]
[452.93423462 -176.13435364]
[439.61593628 -169.21463013]
[425.77169800 -163.41836548]
[411.49609375 -158.78515625]
[396.88665771 -155.34664917]
[382.04312134 -153.12632751]
[367.06698608 -152.13937378]
[352.06045532 -152.39253235]
[337.12609863 -153.88404846]
[322.36593628 -156.60375977]
[307.88076782 -160.53306580]
[293.76956177 -165.64514160]
[280.12869263 -171.90505981]
[267.05139160 -179.27005005]
[258.63674927 -166.85255432]
[250.22213745 -154.43505859]
[241.80752563 -142.01756287]
[233.39289856 -129.60006714]
[224.97828674 -117.18257141]
[216.56365967 -104.76507568]
[208.14904785 -92.34757996]
[214.77244568 -79.00606537]
[213.82221985 -64.04100037]
[205.45364380 -51.47782898]
[191.83087158 -44.74606705]
[176.56808472 -45.74339294]
[168.15345764 -33.32589722]
[159.73884583 -20.90840149]
[151.51004028 -8.36700058]
[143.46885681 4.29552412]
[135.42768860 16.95804977]
[129.15032959 30.58136559]
[124.74932861 44.92121124]
[120.34833527 59.26105881]
[115.94733429 73.60090637]
[125.74436951 83.01598358]
[130.54464722 95.72750854]
[129.41647339 109.26828766]
[122.57880402 121.01017761]
[111.35877991 128.67416382]
[97.93412018 130.77275085]
[93.32011414 145.04547119]
[88.70610046 159.31820679]
[91.82332611 174.82928467]
[80.54624176 184.55949402]
[75.93223572 198.83221436]
[71.31822968 213.10494995]
[80.24300385 223.60919189]
[82.79180908 237.04504395]
[78.40396881 249.88313293]
[68.32679749 258.80471802]
[55.26337433 261.55953979]
[50.43737411 275.76199341]
[45.61137772 289.96444702]
[40.78538132 304.16690063]
[35.95938110 318.36935425]
[31.13338470 332.57180786]
[44.20830154 340.01782227]
[55.63759995 349.80392456]
[65.00811005 361.57635498]
[71.98110199 374.90954590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[36 196]
[37 195]
[38 194]
[40 192]
[41 191]
[42 190]
[47 184]
[48 183]
[49 182]
[50 181]
[69 180]
[70 179]
[71 178]
[74 177]
[75 176]
[76 175]
[81 170]
[82 169]
[83 168]
[84 167]
[85 166]
[86 165]
[87 164]
[88 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
