%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[218.18460083 517.15747070]
[227.23060608 505.14328003]
[238.22555542 494.88256836]
[250.83532715 486.68713379]
[244.96635437 472.88296509]
[239.09739685 459.07876587]
[233.22843933 445.27459717]
[227.35948181 431.47042847]
[221.49050903 417.66625977]
[208.98390198 414.56561279]
[200.41883850 404.68017578]
[199.09165955 391.47225952]
[205.70982361 379.74133301]
[200.04702759 365.85131836]
[194.38424683 351.96127319]
[188.72145081 338.07125854]
[183.05867004 324.18121338]
[177.39588928 310.29119873]
[165.42634583 301.42669678]
[167.38127136 285.72674561]
[161.71847534 271.83670044]
[156.05569458 257.94668579]
[150.39291382 244.05665588]
[144.73011780 230.16662598]
[132.76057434 221.30212402]
[134.71549988 205.60217285]
[129.05271912 191.71214294]
[123.38993073 177.82211304]
[117.72714233 163.93208313]
[112.06435394 150.04205322]
[106.40157318 136.15203857]
[94.43202972 127.28753662]
[96.38695526 111.58757019]
[94.77822876 126.50106049]
[88.47396851 140.11195374]
[78.13948059 150.98385620]
[64.86538696 157.96943665]
[50.05253220 160.33149719]
[35.26415253 157.82075500]
[22.06089973 150.70217896]
[11.83614922 139.72698975]
[5.66894007 126.05345917]
[4.21011257 111.12457275]
[7.61362123 96.51580048]
[15.52028465 83.76885223]
[27.09569359 74.22894287]
[41.11827087 68.90283966]
[56.10817337 68.35262299]
[70.48348999 72.63634491]
[82.72714996 81.30195618]
[91.54714966 93.43510437]
[89.54312897 78.56958008]
[87.53911591 63.70405197]
[85.53510284 48.83852005]
[70.51426697 48.05717087]
[55.89665985 44.52986145]
[42.17978287 38.37815094]
[29.83018303 29.81287956]
[19.26761818 19.12696457]
[10.85077286 6.68536329]
[4.86508560 -7.08738089]
[1.51306486 -21.72162628]
[0.90744263 -36.71864700]
[3.06737971 -51.56763458]
[7.91786528 -65.76308441]
[15.29231930 -78.82202911]
[24.93831444 -90.30042267]
[36.52621460 -99.80830383]
[49.66044617 -107.02299500]
[63.89298630 -111.70006561]
[61.88897324 -126.56558990]
[59.88496017 -141.43112183]
[55.63708878 -149.51774597]
[57.96347809 -156.53269958]
[56.18101120 -171.42642212]
[46.85864639 -184.20938110]
[53.02872849 -197.76589966]
[51.24626160 -212.65962219]
[39.87030411 -227.13957214]
[47.40077591 -242.99072266]
[45.39676285 -257.85626221]
[43.39274979 -272.72177124]
[41.38873672 -287.58731079]
[32.30119705 -290.98538208]
[25.11857796 -297.42123413]
[20.79942131 -305.97937012]
[19.89940834 -315.46517944]
[22.50020218 -324.57153320]
[28.20398521 -332.05911255]
[36.19366837 -336.92486572]
[35.07802200 -351.88333130]
[33.96237183 -366.84176636]
[32.84672546 -381.80023193]
[31.73107529 -396.75866699]
[30.61542702 -411.71713257]
[16.08548546 -416.10406494]
[4.12387037 -425.44668579]
[-3.65170717 -438.48141479]
[-6.18966436 -453.44549561]
[-3.14676404 -468.31509399]
[5.06546688 -481.07925415]
[17.33639145 -490.01171875]
[32.00646973 -493.90441895]
[47.09169006 -492.23095703]
[60.55190659 -485.21762085]
[70.56672668 -473.81286621]
[75.78173828 -459.55917358]
[75.49164581 -444.38418579]
[69.73568726 -430.34020996]
[59.29230118 -419.32656860]
[45.57387924 -412.83276367]
[46.68952942 -397.87432861]
[47.80517578 -382.91586304]
[48.92082596 -367.95742798]
[50.03647614 -352.99896240]
[51.15212250 -338.04049683]
[67.70633698 -326.05096436]
[70.06132507 -305.45120239]
[56.25426483 -289.59130859]
[58.25827789 -274.72579956]
[60.26229095 -259.86026001]
[62.26630402 -244.99473572]
[71.69259644 -237.41374207]
[73.48383331 -225.04542542]
[66.13997650 -214.44209290]
[67.92244720 -199.54837036]
[77.11731720 -187.83070374]
[71.07472992 -173.20889282]
[72.85719299 -158.31517029]
[74.75048828 -143.43513489]
[76.75450134 -128.56961060]
[78.75851440 -113.70407867]
[93.72149658 -112.96283722]
[108.29734802 -109.48373413]
[121.98932648 -103.38381958]
[134.33053589 -94.86949921]
[144.89982605 -84.22955322]
[153.33619690 -71.82529449]
[159.35113525 -58.07835388]
[162.73843384 -43.45632935]
[163.38131714 -28.45686722]
[161.25642395 -13.59074020]
[156.43466187 0.63555110]
[149.07887268 13.73703098]
[139.43826294 25.26678658]
[127.84007263 34.83121109]
[114.67834473 42.10343552]
[100.40063477 46.83450699]
[102.40464783 61.70003510]
[104.40866089 76.56556702]
[106.41267395 91.43109131]
[110.27697754 105.92478943]
[122.65156555 115.78279114]
[120.29159546 130.48924255]
[125.95438385 144.37927246]
[131.61717224 158.26930237]
[137.27995300 172.15933228]
[142.94274902 186.04936218]
[148.60552979 199.93937683]
[160.98011780 209.79739380]
[158.62014771 224.50384521]
[164.28292847 238.39387512]
[169.94572449 252.28388977]
[175.60850525 266.17391968]
[181.27128601 280.06396484]
[193.64587402 289.92196655]
[191.28590393 304.62841797]
[196.94869995 318.51843262]
[202.61148071 332.40847778]
[208.27427673 346.29849243]
[213.93705750 360.18850708]
[219.59983826 374.07855225]
[235.84555054 380.56671143]
[242.24641418 396.48348999]
[235.29469299 411.79730225]
[241.16365051 425.60147095]
[247.03260803 439.40563965]
[252.90158081 453.20980835]
[258.77053833 467.01400757]
[264.63949585 480.81817627]
[279.29034424 477.42352295]
[294.30810547 476.62472534]
[309.23638916 478.44604492]
[323.62158203 482.83215332]
[337.02645874 489.64974976]
[349.04373169 498.69165039]
[359.30819702 509.68310547]
[367.50790405 522.29010010]
[373.39370728 536.12945557]
[376.78668213 550.78070068]
[377.58380127 565.79858398]
[375.76077271 580.72662354]
[371.37304688 595.11132812]
[364.55392456 608.51544189]
[355.51062012 620.53167725]
[344.51800537 630.79492188]
[331.91009521 638.99316406]
[318.07003784 644.87738037]
[303.41842651 648.26873779]
[288.40048218 649.06414795]
[273.47262573 647.23944092]
[259.08843994 642.85003662]
[245.68508911 636.02941895]
[233.66986084 626.98480225]
[223.40789795 615.99096680]
[215.21104431 603.38214111]
[209.32839966 589.54144287]
[205.93872070 574.88940430]
[205.14503479 559.87139893]
[206.97143555 544.94372559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[6 178]
[7 177]
[8 176]
[9 175]
[13 172]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[26 159]
[27 158]
[28 157]
[29 156]
[30 155]
[31 154]
[33 152]
[51 151]
[52 150]
[53 149]
[54 148]
[70 132]
[71 131]
[72 130]
[74 129]
[75 128]
[77 126]
[78 125]
[80 122]
[81 121]
[82 120]
[83 119]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
