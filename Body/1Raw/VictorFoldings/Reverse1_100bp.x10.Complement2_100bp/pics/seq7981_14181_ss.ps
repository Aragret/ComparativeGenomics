%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[63.04992676 857.76538086]
[48.48123550 861.36541748]
[33.68645096 863.87969971]
[18.74638557 865.29449463]
[3.74263167 865.60205078]
[-11.24286270 864.80072021]
[-26.12825203 862.89483643]
[-40.83223724 859.89483643]
[-55.27450562 855.81707764]
[-69.37618256 850.68383789]
[-83.06024170 844.52319336]
[-96.25195312 837.36877441]
[-108.87926483 829.25958252]
[-120.87320709 820.24005127]
[-132.16827393 810.35931396]
[-142.70277405 799.67138672]
[-152.41917419 788.23468018]
[-161.26440430 776.11157227]
[-169.19015503 763.36834717]
[-176.15313721 750.07458496]
[-182.11532593 736.30291748]
[-187.04414368 722.12847900]
[-190.91268921 707.62878418]
[-193.69981384 692.88299561]
[-195.39031982 677.97155762]
[-195.97494507 662.97607422]
[-195.45051575 647.97833252]
[-193.81990051 633.06030273]
[-191.09197998 618.30340576]
[-187.28167725 603.78826904]
[-182.40980530 589.59417725]
[-176.50294495 575.79864502]
[-169.59338379 562.47705078]
[-161.71885681 549.70214844]
[-152.92236328 537.54364014]
[-143.25195312 526.06799316]
[-132.76043701 515.33789062]
[-121.50513458 505.41189575]
[-109.54749298 496.34423828]
[-96.95283508 488.18447876]
[-83.78995514 480.97714233]
[-70.13072968 474.76159668]
[-56.04977798 469.57180786]
[-41.62399292 465.43612671]
[-26.93217087 462.37710571]
[-12.05455303 460.41146851]
[2.92760444 459.54995728]
[17.93247223 459.79727173]
[32.87809753 461.15209961]
[47.68285370 463.60696411]
[51.22252655 449.03057861]
[54.76219940 434.45422363]
[58.30187225 419.87783813]
[61.84154510 405.30145264]
[65.38121796 390.72509766]
[68.92089081 376.14871216]
[72.46056366 361.57232666]
[63.10497665 347.59692383]
[66.82497406 330.84951782]
[81.79539490 321.79931641]
[85.11766052 307.17187500]
[87.89327240 292.43090820]
[90.11838531 277.59686279]
[92.34350586 262.76281738]
[94.56861877 247.92877197]
[95.57288361 232.96241760]
[95.34955597 217.96408081]
[95.12622833 202.96574402]
[94.90290070 187.96740723]
[85.10436249 173.40872192]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[88.75645447 79.54055023]
[91.80001831 72.80567932]
[91.57669067 57.80733871]
[91.35336304 42.80900192]
[81.54555511 27.22412491]
[90.68423462 12.24242306]
[90.23763275 -2.75092721]
[82.09288025 -16.31461334]
[89.44780731 -29.26661110]
[89.00120544 -44.25996017]
[88.55459595 -59.25331116]
[73.27700043 -69.01818848]
[66.97464752 -85.85148621]
[71.99422455 -102.94694519]
[86.14474487 -113.51267242]
[85.25192261 -128.48606873]
[76.70693970 -141.80125427]
[83.67298126 -154.96649170]
[82.78016663 -169.93989563]
[68.24557495 -174.24353027]
[56.06129456 -183.26124573]
[47.69865036 -195.90411377]
[44.16746902 -210.64543152]
[45.89415359 -225.70512390]
[52.67020416 -239.26466370]
[63.67737579 -249.68666077]
[77.58650208 -255.71260071]
[92.71797943 -256.61483765]
[107.24462128 -252.28442383]
[119.41226196 -243.24427795]
[127.75158691 -230.58602905]
[131.25559998 -215.83821106]
[129.50115967 -200.78173828]
[122.70014191 -187.23471069]
[111.67378235 -176.83302307]
[97.75357056 -170.83270264]
[98.64639282 -155.85929871]
[107.12751007 -143.61512756]
[100.22533417 -129.37889099]
[101.11814880 -114.40548706]
[112.20309448 -109.45581055]
[120.17889404 -100.20813751]
[123.48548126 -88.37734985]
[121.43624878 -76.19210052]
[114.35956573 -65.97500610]
[103.54795074 -59.69991684]
[103.99455261 -44.70656586]
[104.44116211 -29.71321678]
[112.55397034 -17.22195625]
[105.23097992 -3.19753337]
[105.67758942 11.79581642]
[114.26403809 20.31634521]
[114.75881958 32.80389786]
[106.35169983 42.58567429]
[106.57502747 57.58401108]
[106.79835510 72.58235168]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[118.03534698 166.35145569]
[118.09866333 178.84864807]
[109.90123749 187.74407959]
[110.12456512 202.74241638]
[110.34789276 217.74075317]
[110.57122040 232.73908997]
[118.84375763 220.22650146]
[131.93885803 212.91087341]
[146.93103027 212.42654419]
[160.47099304 218.88171387]
[169.53388977 230.83427429]
[172.09504700 245.61401367]
[167.58227539 259.91906738]
[157.00376892 270.55368042]
[142.72276306 275.14205933]
[127.92969513 272.65908813]
[115.92935944 263.65954590]
[109.40266418 250.15388489]
[107.17754364 264.98791504]
[104.95243073 279.82196045]
[102.72731018 294.65600586]
[116.15755463 287.97555542]
[129.81797791 294.17175293]
[133.63861084 308.67703247]
[124.80303955 320.79861450]
[109.82450867 321.60092163]
[99.74511719 310.49411011]
[96.42285919 325.12158203]
[104.86515808 335.61645508]
[105.70927429 348.86401367]
[98.87063599 360.01367188]
[87.03693390 365.11199951]
[83.49726105 379.68838501]
[79.95758820 394.26477051]
[76.41791534 408.84112549]
[72.87824249 423.41751099]
[69.33857727 437.99389648]
[65.79890442 452.57025146]
[62.25922775 467.14663696]
[76.54103088 471.75503540]
[90.44349670 477.40557861]
[103.89067841 484.06744385]
[116.80914307 491.70425415]
[129.12832642 500.27423096]
[140.78094482 509.73065186]
[151.70336914 520.02178955]
[161.83593750 531.09149170]
[171.12329102 542.87933350]
[179.51472473 555.32080078]
[186.96440125 568.34808350]
[193.43162537 581.88995361]
[198.88108826 595.87243652]
[203.28302002 610.21923828]
[206.61337280 624.85192871]
[208.85397339 639.69061279]
[209.99256897 654.65429688]
[210.02294922 669.66119385]
[208.94494629 684.62933350]
[206.76443481 699.47692871]
[203.49334717 714.12298584]
[199.14953613 728.48748779]
[193.75671387 742.49194336]
[187.34436035 756.05987549]
[179.94749451 769.11718750]
[171.60649109 781.59259033]
[162.36692810 793.41790771]
[152.27926636 804.52850342]
[141.39860535 814.86383057]
[129.78436279 824.36730957]
[117.49996948 832.98712158]
[104.61253357 840.67614746]
[91.19242859 847.39239502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[60 166]
[61 165]
[62 159]
[63 158]
[64 157]
[65 156]
[66 144]
[67 143]
[68 142]
[69 141]
[71 138]
[72 137]
[73 136]
[74 135]
[76 133]
[78 132]
[79 131]
[80 130]
[82 127]
[83 126]
[85 124]
[86 123]
[87 122]
[91 116]
[92 115]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
