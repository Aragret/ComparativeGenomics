%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[138.35775757 585.84063721]
[131.53727722 572.45837402]
[126.44786835 558.32678223]
[123.16979980 543.66882324]
[121.75476074 528.71551514]
[122.22507477 513.70275879]
[124.57332611 498.86737061]
[128.76248169 484.44329834]
[134.72645569 470.65798950]
[142.37121582 457.72894287]
[151.57617188 445.85998535]
[162.19615173 435.23834229]
[174.06365967 426.03152466]
[186.99154663 418.38473511]
[200.77589417 412.41860962]
[196.58888245 398.01483154]
[192.40187073 383.61105347]
[188.21485901 369.20727539]
[174.91088867 357.76300049]
[179.44924927 339.91687012]
[175.04824829 325.57702637]
[161.81024170 318.84719849]
[157.14271545 304.36724854]
[164.29135132 290.52761841]
[159.89035034 276.18777466]
[155.48934937 261.84793091]
[151.08834839 247.50808716]
[146.68734741 233.16822815]
[142.28636169 218.82838440]
[131.15539551 208.93136597]
[134.50320435 193.46841431]
[129.15202332 179.45539856]
[122.87466431 165.83207703]
[116.49605560 152.25587463]
[110.01656342 138.72752380]
[103.53706360 125.19918823]
[97.05757141 111.67083740]
[96.18212891 126.64527130]
[90.30152130 140.44448853]
[80.10660553 151.44738770]
[66.79505920 158.36134338]
[51.93071365 160.37411499]
[37.25981903 157.24923706]
[24.50589371 149.35383606]
[15.16725826 137.61543274]
[10.34100628 123.41307068]
[10.59412003 108.41520691]
[15.89686489 94.38378143]
[25.62627983 82.96719360]
[38.63936234 75.50665283]
[53.40734863 72.87860870]
[68.19531250 75.39181519]
[81.26596832 82.75101471]
[91.08461761 94.09299469]
[80.65898132 82.19271088]
[85.59500885 68.13977814]
[82.49089813 53.46447754]
[79.38678741 38.78917694]
[76.28267670 24.11387253]
[73.17856598 9.43857002]
[70.07445526 -5.23673201]
[64.73010254 8.77889919]
[53.89353180 19.15043068]
[39.65710831 23.87528419]
[24.76966476 22.04116249]
[12.10573196 14.00220585]
[4.11051893 1.31061196]
[2.32777476 -13.58307171]
[7.10171986 -27.80310822]
[17.51058006 -38.60383224]
[31.54456711 -43.89979172]
[46.49393845 -42.66841888]
[59.47220612 -35.14747620]
[67.97394562 -22.78795433]
[67.52733612 -37.78130341]
[64.38321686 -43.59732056]
[64.61367798 -49.27569199]
[67.29735565 -53.22624588]
[67.29735565 -68.22624969]
[67.29735565 -83.22624969]
[67.29735565 -98.22624969]
[67.29735565 -113.22624969]
[67.18569183 -128.22583008]
[66.96236420 -143.22416687]
[58.26773071 -152.75129700]
[58.39049149 -165.24804688]
[66.71945190 -174.02044678]
[66.71945190 -189.02044678]
[66.71945190 -204.02044678]
[57.14476395 -219.74961853]
[66.50548553 -234.59359741]
[66.28215790 -249.59193420]
[66.05883026 -264.59027100]
[65.83550262 -279.58862305]
[65.61217499 -294.58694458]
[65.38884735 -309.58529663]
[65.16551971 -324.58361816]
[50.92245865 -329.82763672]
[39.53813171 -339.86563110]
[32.55218124 -353.34008789]
[30.90940094 -368.42868042]
[34.83196259 -383.09082031]
[43.78936768 -395.34353638]
[56.57020950 -403.52978516]
[71.44597626 -406.54241943]
[86.40484619 -403.97402954]
[99.42375183 -396.17193604]
[108.74199677 -384.19134521]
[113.09936523 -369.65249634]
[111.90655518 -354.52169800]
[105.32489014 -340.84521484]
[94.24447632 -330.47268677]
[80.16385651 -324.80694580]
[80.38719177 -309.80862427]
[80.61051941 -294.81027222]
[80.83384705 -279.81195068]
[81.05717468 -264.81359863]
[81.28050232 -249.81526184]
[81.50382996 -234.81692505]
[89.96247101 -226.16950989]
[90.27127075 -213.67596436]
[81.71945190 -204.02044678]
[81.71945190 -189.02044678]
[81.71945190 -174.02044678]
[91.30014038 -159.31747437]
[81.96070099 -143.44749451]
[82.18402863 -128.44915771]
[85.42676544 -121.80789185]
[82.29735565 -113.22624969]
[82.29735565 -98.22624969]
[82.29735565 -83.22624969]
[82.29735565 -68.22624969]
[82.29735565 -53.22624588]
[82.52068329 -38.22790909]
[82.96729279 -23.23456001]
[84.74975586 -8.34084225]
[87.85386658 6.33446026]
[90.95797729 21.00976181]
[94.06208801 35.68506622]
[97.16619873 50.36036682]
[100.27030945 65.03566742]
[110.47391510 75.88627625]
[105.75991821 90.98888397]
[110.58591461 105.19134521]
[117.06540680 118.71968842]
[123.54490662 132.24803162]
[130.02439880 145.77638245]
[136.55377197 152.16427612]
[136.49797058 159.55471802]
[142.77534485 173.17803955]
[146.31684875 158.60211182]
[157.10278320 148.17791748]
[171.79100037 145.13552856]
[185.83020020 150.41764832]
[194.87019348 162.38755798]
[196.10981750 177.33624268]
[189.16497803 190.63169861]
[176.18760681 198.15419006]
[161.19888306 197.57276917]
[148.84304810 189.06742859]
[160.28880310 199.99012756]
[156.62620544 214.42738342]
[161.02720642 228.76724243]
[165.42819214 243.10708618]
[169.82919312 257.44692993]
[174.23019409 271.78677368]
[178.63119507 286.12661743]
[192.31272888 293.57333374]
[196.57170105 308.17864990]
[189.38809204 321.17602539]
[193.78909302 335.51586914]
[204.79748535 342.23733521]
[208.16786194 354.27163696]
[202.61863708 365.02026367]
[206.80564880 379.42404175]
[210.99266052 393.82781982]
[215.17967224 408.23159790]
[230.01431274 405.87854004]
[245.02688599 405.40335083]
[259.98062134 406.81353760]
[274.63970947 410.08685303]
[288.77291870 415.17166138]
[302.15737915 421.98779297]
[314.58197021 430.42773438]
[325.85076904 440.35836792]
[335.78601074 451.62310791]
[344.23104858 464.04425049]
[351.05264282 477.42590332]
[356.14324951 491.55703735]
[359.42254639 506.21478271]
[360.83883667 521.16796875]
[360.36978149 536.18072510]
[358.02279663 551.01629639]
[353.83486938 565.44073486]
[347.87203979 579.22656250]
[340.22836304 592.15625000]
[331.02441406 604.02600098]
[320.40533447 614.64855957]
[308.53860474 623.85632324]
[295.61135864 631.50421143]
[281.82751465 637.47149658]
[267.40441895 641.66412354]
[252.56959534 644.01593018]
[237.55697632 644.48986816]
[222.60334778 643.07843018]
[207.94454956 639.80389404]
[193.81175232 634.71789551]
[180.42787170 627.90063477]
[168.00398254 619.45959473]
[156.73603821 609.52801514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 177]
[16 176]
[17 175]
[18 174]
[20 171]
[21 170]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[31 160]
[32 150]
[33 149]
[34 147]
[35 146]
[36 145]
[37 144]
[54 143]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[74 135]
[75 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 127]
[84 126]
[87 124]
[88 123]
[89 122]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
