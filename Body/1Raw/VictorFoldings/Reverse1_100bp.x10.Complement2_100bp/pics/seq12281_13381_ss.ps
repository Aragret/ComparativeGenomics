%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[93.92598724 549.08984375]
[85.72328186 536.48962402]
[79.70651245 522.71105957]
[76.03982544 508.13009644]
[74.82325745 493.14443970]
[76.08998108 478.16293335]
[79.80545807 463.59429932]
[85.86831665 449.83596802]
[94.11315918 437.26327515]
[104.31506348 426.21923828]
[116.19570160 417.00512695]
[129.43098450 409.87228394]
[143.65982056 405.01531982]
[141.21409607 390.21606445]
[138.76837158 375.41677856]
[129.05944824 364.12139893]
[134.44309998 349.24432373]
[131.99737549 334.44506836]
[129.55165100 319.64578247]
[127.10592651 304.84652710]
[117.39700317 293.55111694]
[122.78066254 278.67407227]
[120.33493805 263.87478638]
[117.88921356 249.07551575]
[115.44348145 234.27624512]
[112.99775696 219.47697449]
[103.28883362 208.18157959]
[108.67249298 193.30451965]
[106.22676849 178.50524902]
[103.78104401 163.70597839]
[101.22520447 148.92532349]
[98.55941010 134.16410828]
[88.68339539 123.01451111]
[93.84496307 108.05895233]
[89.42723083 101.31683350]
[91.25107574 93.05822754]
[88.80535126 78.25895691]
[86.35961914 63.45969009]
[83.91389465 48.66041946]
[81.46817017 33.86114883]
[79.02243805 19.06187630]
[76.57671356 4.26260614]
[74.13098907 -10.53666496]
[67.80610657 3.06465554]
[55.94110107 12.24188805]
[41.18663788 14.94481659]
[26.83890343 10.56960011]
[16.10321808 0.09367152]
[11.37796211 -14.14261818]
[13.71876907 -28.95884705]
[22.60269737 -41.04502869]
[36.04505157 -47.70108414]
[51.04278183 -47.44002914]
[64.24535370 -40.32018661]
[72.70327759 -27.93212509]
[72.70327759 -42.93212509]
[72.70327759 -57.93212509]
[69.57387543 -66.51377106]
[72.81661224 -73.15503693]
[73.03993988 -88.15337372]
[73.26326752 -103.15171051]
[65.73228455 -117.06555176]
[73.65821838 -129.67622375]
[65.25109863 -139.45799255]
[65.74588013 -151.94554138]
[74.33233643 -160.46607971]
[74.77893829 -175.45942688]
[61.25749588 -185.62144470]
[56.50462341 -201.68106079]
[62.20347214 -217.25299072]
[75.92209625 -226.26835632]
[76.14542389 -241.26669312]
[76.36875153 -256.26504517]
[76.59207916 -271.26336670]
[76.81540680 -286.26171875]
[77.03873444 -301.26004028]
[62.12940598 -303.02523804]
[47.48060608 -306.31411743]
[33.24761581 -311.09176636]
[19.58131409 -317.30758667]
[6.62657356 -324.89562988]
[-5.47927999 -333.77554321]
[-16.60791588 -343.85308838]
[-26.64136696 -355.02154541]
[-35.47327042 -367.16244507]
[-43.01000595 -380.14709473]
[-49.17167664 -393.83789062]
[-53.89297104 -408.08969116]
[-57.12383270 -422.75140381]
[-58.83001709 -437.66760254]
[-58.99343872 -452.68017578]
[-57.61236191 -467.62997437]
[-54.70143127 -482.35852051]
[-50.29150009 -496.70971680]
[-44.42931747 -510.53140259]
[-37.17702866 -523.67706299]
[-28.61150932 -536.00732422]
[-18.82355690 -547.39154053]
[-7.91693258 -557.70898438]
[3.99274874 -566.85028076]
[16.77923775 -574.71856689]
[30.30698967 -581.23040771]
[44.43260574 -586.31677246]
[59.00634003 -589.92370605]
[73.87371063 -592.01306152]
[88.87711334 -592.56262207]
[103.85749817 -591.56658936]
[118.65606689 -589.03552246]
[133.11595154 -584.99621582]
[147.08386230 -579.49157715]
[160.41174316 -572.57983398]
[172.95828247 -564.33435059]
[184.59051514 -554.84252930]
[195.18511963 -544.20489502]
[204.62977600 -532.53436279]
[212.82438660 -519.95446777]
[219.68206787 -506.59872437]
[225.13012695 -492.60864258]
[229.11080933 -478.13250732]
[231.58192444 -463.32382202]
[232.51728821 -448.33950806]
[231.90695190 -433.33847046]
[229.75741577 -418.47967529]
[226.09144592 -403.92068481]
[220.94792175 -389.81576538]
[214.38136292 -376.31451416]
[206.46136475 -363.55999756]
[197.27189636 -351.68743896]
[186.91036987 -340.82269287]
[175.48661804 -331.08093262]
[163.12173462 -322.56539917]
[149.94682312 -315.36642456]
[136.10150146 -309.56027222]
[121.73258209 -305.20849609]
[106.99234772 -302.35723877]
[92.03707123 -301.03671265]
[91.81374359 -286.03839111]
[91.59041595 -271.04003906]
[91.36708832 -256.04171753]
[91.14376068 -241.04336548]
[90.92043304 -226.04502869]
[102.30028534 -219.06355286]
[108.79650879 -207.27613831]
[108.61861420 -193.71006775]
[101.70611572 -181.91024780]
[89.77228546 -175.01281738]
[89.32568359 -160.01947021]
[98.46436310 -145.03776550]
[88.65655518 -129.45289612]
[96.20350647 -116.61183167]
[88.26160431 -102.92838287]
[88.03827667 -87.93004608]
[87.81494904 -72.93170929]
[87.70327759 -57.93212509]
[87.70327759 -42.93212509]
[87.70327759 -27.93212509]
[88.93025970 -12.98239231]
[91.37598419 1.81687856]
[93.82170868 16.61614990]
[96.26744080 31.41542053]
[98.71316528 46.21469116]
[101.15888977 61.01396179]
[103.60462189 75.81323242]
[106.05034637 90.61250305]
[108.60617828 105.39315796]
[118.67287445 117.59857941]
[113.32063293 131.49832153]
[115.98642731 146.25953674]
[120.59114838 154.14840698]
[118.58031464 161.26025391]
[121.02603912 176.05952454]
[123.47176361 190.85879517]
[133.35562134 203.21273804]
[127.79702759 217.03125000]
[130.24275208 231.83052063]
[132.68847656 246.62979126]
[135.13420105 261.42907715]
[137.57994080 276.22833252]
[147.46379089 288.58227539]
[141.90519714 302.40078735]
[144.35092163 317.20007324]
[146.79664612 331.99932861]
[149.24237061 346.79861450]
[159.12623596 359.15255737]
[153.56764221 372.97106934]
[156.01336670 387.77032471]
[158.45909119 402.56961060]
[173.49403381 402.59042358]
[188.32046509 405.08578491]
[202.53390503 409.98757935]
[215.74661255 417.16213989]
[227.59812927 426.41369629]
[237.76513672 437.48989868]
[245.97027588 450.08853149]
[251.98970032 463.86590576]
[255.65919495 478.44619751]
[256.87866211 493.43161011]
[255.61480713 508.41336060]
[251.90214539 522.98272705]
[245.84193420 536.74218750]
[237.59951782 549.31646729]
[227.39974976 560.36248779]
[215.52087402 569.57891846]
[202.28697205 576.71429443]
[188.05906677 581.57397461]
[173.22531128 584.02539062]
[158.19038391 584.00170898]
[143.36442566 581.50347900]
[129.15193176 576.59893799]
[115.94059753 569.42181396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 187]
[14 186]
[15 185]
[17 183]
[18 182]
[19 181]
[20 180]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[28 172]
[29 171]
[30 170]
[31 168]
[32 167]
[34 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[55 156]
[56 155]
[57 154]
[59 153]
[60 152]
[61 151]
[63 149]
[66 147]
[67 146]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
