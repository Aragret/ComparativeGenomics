%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[99.36702728 523.19793701]
[103.45310974 537.66900635]
[105.03462982 552.62249756]
[104.06607056 567.62817383]
[100.57531738 582.25427246]
[94.66278839 596.07995605]
[86.49861145 608.70745850]
[76.31768799 619.77349854]
[64.41293335 628.95959473]
[51.12687683 636.00152588]
[36.84178543 640.69665527]
[21.96866608 642.90985107]
[6.93545151 642.57751465]
[-7.82532406 639.70916748]
[-21.88896370 634.38732910]
[-34.85083008 626.76507568]
[-46.33797836 617.06182861]
[-56.01990891 605.55670166]
[-63.61804962 592.58068848]
[-68.91378021 578.50720215]
[-71.75474548 563.74114990]
[-72.05919647 548.70733643]
[-69.81836700 533.83837891]
[-65.09674835 519.56201172]
[-58.03017426 506.28903198]
[-48.82197189 494.40133667]
[-37.73707962 484.24096680]
[-25.09442902 476.10025024]
[-11.25777626 470.21340942]
[3.37477088 466.74978638]
[18.38220596 465.80908203]
[33.33273315 467.41836548]
[47.79619598 471.53128052]
[54.27569199 458.00292969]
[60.75518799 444.47460938]
[66.93095398 430.80493164]
[72.79991913 417.00076294]
[78.66887665 403.19656372]
[84.53784180 389.39239502]
[88.07751465 374.81600952]
[89.19316101 359.85757446]
[90.30880737 344.89910889]
[91.42446136 329.94067383]
[92.54010773 314.98220825]
[93.65575409 300.02374268]
[86.88649750 286.75625610]
[95.62877655 273.56979370]
[96.74442291 258.61132812]
[97.86007690 243.65287781]
[98.97572327 228.69442749]
[99.53393555 213.70481873]
[99.53393555 198.70481873]
[99.53393555 183.70481873]
[91.20497894 174.93241882]
[91.08221436 162.43566895]
[99.77684784 152.90853882]
[100.00017548 137.91020203]
[98.21771240 123.01647949]
[94.46141052 108.49442291]
[89.55445862 102.09954834]
[90.75900269 93.72817230]
[87.21932983 79.15179443]
[83.67965698 64.57542419]
[80.03157043 50.02580261]
[76.27526855 35.50374222]
[71.87361908 49.84338760]
[62.08162689 61.20634842]
[48.54941559 67.67776489]
[33.55739975 68.16709137]
[19.63199615 62.59186172]
[9.11988258 51.89160538]
[3.79253435 37.86950302]
[4.54770231 22.88852501]
[11.25812817 9.47322845]
[22.79298592 -0.11567339]
[37.20845032 -4.26228189]
[52.07526398 -2.26782060]
[64.88810730 5.53160858]
[73.48844147 17.82319069]
[72.59561920 2.84978414]
[64.05063629 -10.46538925]
[71.01667786 -23.63062859]
[59.47878647 -34.09555817]
[58.78664780 -49.29344177]
[68.83446503 -60.22856522]
[67.94165039 -75.20197296]
[66.93738556 -90.16831970]
[65.82173920 -105.12677002]
[64.70609283 -120.08522034]
[63.59044266 -135.04367065]
[51.97336578 -125.55455017]
[37.27985764 -128.57130432]
[30.34142685 -141.87011719]
[36.27282333 -155.64756775]
[50.70164490 -159.74746704]
[62.99068451 -151.14894104]
[62.99068451 -166.14894104]
[62.99068451 -181.14894104]
[62.99068451 -196.14894104]
[62.99068451 -211.14894104]
[49.64955521 -218.75878906]
[41.91458511 -232.02777100]
[41.86644363 -247.38658142]
[49.51807785 -260.70379639]
[62.81123734 -268.39712524]
[78.17012787 -268.39712524]
[91.46328735 -260.70379639]
[99.11492157 -247.38658142]
[99.06678009 -232.02777100]
[91.33181000 -218.75878906]
[77.99068451 -211.14894104]
[77.99068451 -196.14894104]
[77.99068451 -181.14894104]
[77.99068451 -166.14894104]
[77.99068451 -151.14894104]
[78.54889679 -136.15933228]
[79.66454315 -121.20087433]
[80.78018951 -106.24241638]
[81.89584351 -91.28396606]
[85.52812958 -84.84748077]
[82.91505432 -76.09478760]
[83.80786896 -61.12138367]
[95.08392334 -51.45772934]
[96.20266724 -36.28528595]
[85.99008942 -24.52344322]
[94.47120667 -12.27926922]
[87.56903076 1.95696831]
[88.46184540 16.93037415]
[90.79733276 31.74744225]
[94.55363464 46.26950073]
[99.27198029 51.95799255]
[98.25603485 61.03575134]
[101.79570770 75.61212158]
[105.33538055 90.18849945]
[108.98346710 104.73812103]
[112.73976898 119.26017761]
[116.19961548 104.66464996]
[123.94662476 91.82005310]
[135.24241638 81.95064545]
[149.01033020 75.99711609]
[163.93811035 74.52693176]
[178.60292053 77.68020630]
[191.60702515 85.15639496]
[201.71093750 96.24291229]
[207.95162964 109.88306427]
[209.73426819 124.77676392]
[206.88894653 139.50442505]
[199.68687439 152.66232300]
[188.81448364 162.99630737]
[175.30809021 169.52142334]
[160.45500183 171.61572266]
[145.67095947 169.07960510]
[132.36505127 162.15480042]
[121.80553436 151.50132751]
[114.99851227 138.13352966]
[114.77518463 153.13186646]
[124.11462402 169.00184631]
[114.53393555 183.70481873]
[114.53393555 198.70481873]
[114.53393555 213.70481873]
[126.82460022 205.10600281]
[141.25303650 209.20726013]
[147.18313599 222.98529053]
[140.24343872 236.28343201]
[125.54964447 239.29879761]
[113.93417358 229.81007385]
[112.81852722 244.76852417]
[111.70288086 259.72698975]
[110.58722687 274.68542480]
[117.27668762 289.02285767]
[108.61421204 301.13940430]
[107.49855804 316.09786987]
[106.38291168 331.05630493]
[105.26726532 346.01477051]
[104.15161133 360.97320557]
[103.03596497 375.93167114]
[110.73455811 363.05798340]
[121.46571350 352.57742310]
[134.51766968 345.18508911]
[149.02474976 341.37133789]
[164.02473450 341.38909912]
[178.52275085 345.23718262]
[191.55717468 352.66036987]
[202.26348877 363.16632080]
[209.93157959 376.05819702]
[214.05285645 390.48092651]
[214.35395813 405.47790527]
[210.81494141 420.05444336]
[203.67050171 433.24371338]
[193.39451599 444.17092896]
[180.66856384 452.11132812]
[166.33670044 456.53826904]
[151.34951782 457.15811157]
[136.70104980 453.92974854]
[123.36287689 447.06729126]
[112.21968079 437.02590942]
[104.01055145 424.47161865]
[99.27996063 410.23709106]
[98.34201813 395.26135254]
[92.47305298 409.06552124]
[86.60409546 422.86972046]
[80.73513031 436.67388916]
[81.37002563 441.85501099]
[80.08277130 446.31552124]
[77.46972656 449.44396973]
[74.28353119 450.95410156]
[67.80403900 464.48245239]
[61.32454300 478.01077271]
[73.59506989 486.70227051]
[84.22010803 497.34262085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 208]
[34 207]
[35 206]
[36 202]
[37 201]
[38 200]
[39 199]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[47 169]
[48 168]
[49 167]
[50 166]
[51 160]
[52 159]
[53 158]
[56 156]
[57 155]
[58 136]
[59 135]
[61 134]
[62 133]
[63 132]
[64 130]
[65 129]
[79 128]
[80 127]
[82 125]
[85 122]
[86 121]
[87 119]
[88 118]
[89 117]
[90 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
