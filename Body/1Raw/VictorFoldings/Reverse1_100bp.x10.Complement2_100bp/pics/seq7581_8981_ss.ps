%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[16.61200714 508.70654297]
[13.09101295 523.32153320]
[7.27107286 537.18243408]
[-0.69706124 549.93017578]
[-10.60699558 561.23461914]
[-22.20203781 570.80285645]
[-35.18185043 578.38708496]
[-49.21022415 583.79083252]
[-63.92378998 586.87420654]
[-78.94143677 587.55731201]
[-93.87416077 585.82238770]
[-108.33517456 581.71441650]
[-121.94989777 575.33984375]
[-134.36569214 566.86376953]
[-145.26094055 556.50567627]
[-154.35343933 544.53393555]
[-161.40766907 531.25860596]
[-166.24090576 517.02355957]
[-168.72795105 502.19757080]
[-168.80439758 487.16458130]
[-166.46826172 472.31405640]
[-161.78005981 458.03060913]
[-154.86122131 444.68423462]
[-145.89094543 432.62063599]
[-135.10160828 422.15228271]
[-122.77267456 413.55032349]
[-109.22348022 407.03759766]
[-94.80499268 402.78280640]
[-79.89068604 400.89608765]
[-64.86687469 401.42639160]
[-50.12271118 404.35995483]
[-44.87599182 390.30749512]
[-39.62927246 376.25500488]
[-34.48731232 362.16387939]
[-29.45039749 348.03485107]
[-24.41348267 333.90582275]
[-19.37656593 319.77679443]
[-23.46378517 302.71038818]
[-9.33758354 290.89804077]
[-4.51158571 276.69558716]
[0.31441182 262.49313354]
[-11.96110249 271.11355591]
[-26.89315033 272.53973389]
[-40.57852936 266.39883423]
[-49.43991470 254.29612732]
[-51.16096115 239.39518738]
[-45.29179001 225.59109497]
[-33.36659241 216.49221802]
[-18.50258255 214.47695923]
[-4.58517838 220.07212830]
[4.74764347 231.81513977]
[7.05639887 246.63552856]
[13.93581200 233.30610657]
[20.81522369 219.97666931]
[27.69463730 206.64724731]
[26.97175980 203.93881226]
[27.27817154 200.78085327]
[28.79046440 197.56396484]
[31.54070473 194.73541260]
[35.40096664 192.74737549]
[43.06156540 179.85104370]
[50.72216415 166.95471191]
[58.38275909 154.05838013]
[66.04335785 141.16206360]
[66.75673676 133.80590820]
[73.91523743 128.13195801]
[81.76699066 115.35112000]
[89.61874390 102.57027435]
[95.89610291 88.94696045]
[100.51011658 74.67422485]
[105.12412262 60.40149307]
[109.73813629 46.12876129]
[114.35214233 31.85602760]
[100.01238251 36.25730896]
[87.54505157 27.91670418]
[86.14060211 12.98259830]
[96.83434296 2.46385717]
[111.74324799 4.11450577]
[119.87680817 16.71610832]
[117.92188263 1.01614618]
[129.89141846 -7.84835196]
[135.55421448 -21.73837852]
[135.89610291 -30.86640739]
[141.40609741 -35.79203796]
[147.27505493 -49.59621429]
[153.14401245 -63.40039062]
[159.01298523 -77.20456696]
[164.88194275 -91.00874329]
[170.33729553 -104.98154449]
[175.37420654 -119.11057281]
[180.41113281 -133.23960876]
[185.23712158 -147.44206238]
[189.85113525 -161.71479797]
[186.73391724 -177.22587585]
[198.01098633 -186.95606995]
[202.62500000 -201.22880554]
[207.23901367 -215.50154114]
[211.85302734 -229.77426147]
[198.53131104 -236.74848938]
[186.57995605 -245.87391663]
[176.34286499 -256.88800049]
[168.11453247 -269.47381592]
[162.13172913 -283.26925659]
[158.56660461 -297.87738037]
[157.52169800 -312.87792969]
[159.02709961 -327.83926392]
[163.03948975 -342.33093262]
[169.44343567 -355.93600464]
[178.05465698 -368.26300049]
[188.62541199 -378.95724487]
[200.85156250 -387.71109009]
[214.38131714 -394.27261353]
[228.82540894 -398.45306396]
[243.76826477 -400.13214111]
[258.77993774 -399.26153564]
[273.42849731 -395.86630249]
[287.29248047 -390.04415894]
[299.97302246 -381.96258545]
[311.10525513 -371.85409546]
[320.36889648 -360.00955200]
[327.49737549 -346.76974487]
[332.28561401 -332.51559448]
[334.59588623 -317.65722656]
[334.36166382 -302.62216187]
[331.58969116 -287.84298706]
[326.35974121 -273.74490356]
[318.82229614 -260.73358154]
[309.19421387 -249.18333435]
[297.75250244 -239.42651367]
[284.82638550 -231.74385071]
[270.78775024 -226.35636902]
[256.04055786 -223.41909790]
[241.00904846 -223.01652527]
[226.12574768 -225.16026306]
[221.51174927 -210.88752747]
[216.89773560 -196.61479187]
[212.28372192 -182.34205627]
[215.73097229 -167.85186768]
[204.12387085 -157.10078430]
[199.50985718 -142.82804871]
[200.84823608 -138.24353027]
[199.32084656 -132.76957703]
[194.54016113 -128.20268250]
[189.50323486 -114.07365417]
[184.46632385 -99.94462585]
[185.54457092 -97.35705566]
[185.66281128 -94.18647003]
[184.59385681 -90.79637146]
[182.24617004 -87.62574768]
[178.68611145 -85.13978577]
[172.81715393 -71.33560944]
[166.94819641 -57.53143311]
[161.07923889 -43.72725296]
[155.21026611 -29.92307854]
[149.44424438 -16.07559204]
[143.78144836 -2.18556523]
[146.14141846 12.52089024]
[133.76683044 22.37889671]
[128.62487793 36.47003555]
[124.01086426 50.74277115]
[119.39685822 65.01550293]
[114.78284454 79.28823853]
[110.16883850 93.56096649]
[121.11285400 83.30287170]
[134.87799072 77.34291840]
[149.84713745 76.38127899]
[164.26171875 80.53092957]
[176.42834473 89.30436707]
[184.91769409 101.67089844]
[188.73242188 116.17771912]
[187.42439270 131.12057495]
[181.14727783 144.74400330]
[170.63850403 155.44754028]
[157.13261414 161.97372437]
[142.21629333 163.55589294]
[127.64187622 160.00814819]
[115.12156677 151.74729919]
[106.12622070 139.74380493]
[101.71261597 125.40783691]
[102.39958954 110.42203522]
[94.54782867 123.20287323]
[86.69607544 135.98371887]
[78.93968201 148.82266235]
[71.27909088 161.71897888]
[63.61848831 174.61531067]
[55.95789337 187.51164246]
[48.29729462 200.40795898]
[41.02406693 213.52665710]
[34.14465332 226.85609436]
[27.26524162 240.18551636]
[20.38582802 253.51495361]
[14.51686764 267.31912231]
[9.69087029 281.52157593]
[4.86487198 295.72402954]
[9.85549736 307.61758423]
[5.54352617 319.34747314]
[-5.24753618 324.81372070]
[-10.28445244 338.94274902]
[-15.32136822 353.07177734]
[-20.35828400 367.20080566]
[-20.29225159 376.33499146]
[-25.57680321 381.50173950]
[-30.82352066 395.55419922]
[-36.07024002 409.60668945]
[-23.01130676 417.05386353]
[-11.31618309 426.49951172]
[-1.28779852 437.69894409]
[6.81408739 450.36212158]
[12.77961636 464.16098022]
[16.45426750 478.73812866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 204]
[32 203]
[33 202]
[34 200]
[35 199]
[36 198]
[37 197]
[39 194]
[40 193]
[41 192]
[52 191]
[53 190]
[54 189]
[55 188]
[60 187]
[61 186]
[62 185]
[63 184]
[64 183]
[66 182]
[67 181]
[68 180]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
[79 158]
[81 156]
[82 155]
[84 154]
[85 153]
[86 152]
[87 151]
[88 150]
[89 145]
[90 144]
[91 143]
[92 140]
[93 139]
[95 137]
[96 136]
[97 135]
[98 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
