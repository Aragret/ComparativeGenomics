%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[85.61074066 560.22381592]
[76.84680939 572.41101074]
[66.98015594 583.72399902]
[56.09747696 594.06329346]
[44.29441452 603.33813477]
[31.67470169 611.46691895]
[18.34924126 618.37823486]
[4.43513823 624.01141357]
[-9.94532585 628.31683350]
[-24.66577148 631.25671387]
[-39.59683228 632.80523682]
[-54.60729218 632.94873047]
[-69.56523132 631.68603516]
[-84.33920288 629.02813721]
[-98.79936218 624.99847412]
[-112.81863403 619.63244629]
[-126.27381897 612.97717285]
[-139.04666138 605.09118652]
[-151.02491760 596.04376221]
[-162.10330200 585.91442871]
[-172.18447876 574.79217529]
[-181.17984009 562.77478027]
[-189.01034546 549.96783447]
[-195.60714722 536.48388672]
[-200.91230774 522.44146729]
[-204.87918091 507.96392822]
[-207.47291565 493.17858887]
[-208.67071533 478.21530151]
[-208.46205139 463.20559692]
[-206.84877014 448.28140259]
[-203.84501648 433.57385254]
[-199.47721863 419.21221924]
[-193.78376770 405.32269287]
[-186.81466675 392.02734375]
[-178.63117981 379.44302368]
[-169.30523682 367.68032837]
[-158.91876221 356.84262085]
[-147.56307983 347.02514648]
[-135.33795166 338.31417847]
[-122.35082245 330.78628540]
[-108.71583557 324.50762939]
[-94.55281830 319.53338623]
[-79.98622131 315.90722656]
[-65.14408112 313.66107178]
[-50.15681458 312.81466675]
[-35.15614700 313.37539673]
[-20.27390289 315.33837891]
[-5.64087057 318.68634033]
[8.61435127 323.38986206]
[22.36648369 329.40759277]
[29.63971329 316.28890991]
[36.91294479 303.17019653]
[44.18617249 290.05151367]
[51.45940399 276.93283081]
[58.73263168 263.81411743]
[65.90799713 250.64164734]
[65.09082031 235.76948547]
[78.42383575 227.25234985]
[84.49766541 213.53709412]
[89.53458405 199.40806580]
[94.57150269 185.27903748]
[96.68612671 170.42883301]
[95.79330444 155.45542908]
[94.90048981 140.48202515]
[94.00767517 125.50861359]
[93.11486053 110.53520966]
[91.88788605 95.58547974]
[90.32736206 80.66687012]
[88.76683807 65.74826813]
[87.20631409 50.82966232]
[74.15214539 45.80456924]
[64.58229065 35.69349289]
[60.32290268 22.50880814]
[62.15097427 8.84106255]
[69.65324402 -2.65000677]
[81.31788635 -9.75304890]
[79.97965240 -24.69323349]
[78.64141846 -39.63341904]
[77.30318451 -54.57360458]
[75.63164520 -69.48017883]
[73.62763214 -84.34570312]
[71.51300812 -99.19589996]
[69.28788757 -114.02994537]
[59.52429199 -102.64257812]
[44.57948685 -101.35695648]
[33.01453781 -110.90954590]
[31.45437431 -125.82818604]
[40.79272461 -137.56680298]
[55.68016052 -139.40098572]
[67.58800507 -130.28085327]
[66.69519043 -145.25425720]
[65.80237579 -160.22766113]
[64.90955353 -175.20106506]
[64.01673889 -190.17446899]
[63.12392426 -205.14788818]
[48.58932877 -209.45152283]
[36.40505219 -218.46923828]
[28.04240799 -231.11210632]
[24.51122475 -245.85342407]
[26.23791122 -260.91311646]
[33.01396179 -274.47265625]
[44.02112961 -284.89465332]
[57.93025589 -290.92059326]
[73.06173706 -291.82284546]
[87.58837891 -287.49243164]
[99.75601959 -278.45227051]
[108.09534454 -265.79400635]
[111.59935760 -251.04620361]
[109.84492493 -235.98971558]
[103.04389191 -222.44270325]
[92.01753998 -212.04100037]
[78.09732819 -206.04069519]
[78.99015045 -191.06729126]
[79.88296509 -176.09388733]
[80.77577972 -161.12048340]
[81.66859436 -146.14707947]
[82.56140900 -131.17367554]
[84.12193298 -116.25506592]
[86.34705353 -101.42102051]
[90.44799805 -95.27252197]
[88.49315643 -86.34971619]
[90.49716949 -71.48419189]
[93.06436920 -69.06719971]
[94.58840942 -65.28667450]
[94.44119263 -60.64646149]
[92.24337006 -55.91183853]
[93.58160400 -40.97165298]
[94.91983795 -26.03146744]
[96.25807190 -11.09128284]
[111.07898712 -4.65288162]
[120.68594360 8.45673943]
[122.38047028 24.71544456]
[115.60588074 39.69544601]
[102.12492371 49.26913834]
[103.68544006 64.18774414]
[105.24596405 79.10634613]
[106.80648804 94.02495575]
[109.42793274 96.85345459]
[110.78987885 100.82371521]
[110.41037750 105.34732056]
[108.08826447 109.64239502]
[108.98107910 124.61579895]
[109.87389374 139.58920288]
[110.76671600 154.56260681]
[111.65953064 169.53601074]
[117.47432709 155.70893860]
[126.08924103 143.42955017]
[137.11235046 133.25650024]
[150.04217529 125.65257263]
[164.29048157 120.96369934]
[179.20909119 119.40320587]
[194.11929321 121.04207611]
[208.34277344 125.80574799]
[221.23246765 133.47750854]
[232.20196533 143.70835876]
[240.75222778 156.03283691]
[246.49429321 169.89027405]
[249.16693115 184.65025330]
[248.64852905 199.64129639]
[244.96270752 214.18139648]
[238.27711487 227.60910034]
[228.89593506 239.31350708]
[217.24591064 248.76216125]
[203.85707092 255.52522278]
[189.33850098 259.29498291]
[174.35070801 259.89999390]
[159.57553101 257.31268311]
[145.68515015 251.65075684]
[133.31146240 243.17184448]
[123.01742554 232.26162720]
[115.27131653 219.41648865]
[110.42554474 205.22076416]
[108.70053101 190.31594849]
[103.66361237 204.44497681]
[98.62669373 218.57400513]
[111.02919769 210.13729858]
[125.98081970 208.93360901]
[139.57325745 215.27755737]
[148.25346375 227.51086426]
[149.75247192 242.43577576]
[143.67842102 256.15097046]
[131.61907959 265.07128906]
[116.72671509 266.86499023]
[102.89415741 261.06323242]
[93.73720551 249.18258667]
[91.64936066 234.32946777]
[91.96033478 250.14761353]
[79.13352203 257.71875000]
[77.84384918 266.76168823]
[71.85132599 271.08737183]
[64.57809448 284.20605469]
[57.30486679 297.32473755]
[50.03163910 310.44345093]
[42.75840759 323.56213379]
[35.48517990 336.68081665]
[47.87463760 345.15643311]
[59.41597748 354.75497437]
[70.00777435 365.39208984]
[79.55694580 376.97430420]
[87.97956085 389.39984131]
[95.20161438 402.55947876]
[101.15962982 416.33761597]
[105.80124664 430.61309814]
[109.08567047 445.26052856]
[110.98403931 460.15115356]
[111.47967529 475.15411377]
[110.56822205 490.13757324]
[108.25767517 504.96981812]
[104.56835938 519.52056885]
[99.53268433 533.66186523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 195]
[51 194]
[52 193]
[53 192]
[54 191]
[55 190]
[56 188]
[58 186]
[59 175]
[60 174]
[61 173]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 137]
[68 136]
[69 135]
[70 134]
[76 129]
[77 128]
[78 127]
[79 126]
[80 122]
[81 121]
[82 119]
[83 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
