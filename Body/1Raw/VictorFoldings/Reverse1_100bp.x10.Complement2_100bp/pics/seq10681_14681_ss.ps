%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[97.89595032 557.22149658]
[105.47740173 543.92565918]
[118.37558746 535.68579102]
[117.03735352 520.74560547]
[115.69911957 505.80538940]
[114.36088562 490.86520386]
[111.90417480 488.33599854]
[110.55046082 484.49121094]
[110.90472412 479.86218262]
[113.31176758 475.23043823]
[112.64198303 460.24539185]
[111.97219849 445.26034546]
[111.30241394 430.27529907]
[110.63262939 415.29028320]
[109.96284485 400.30523682]
[109.29306030 385.32019043]
[108.62327576 370.33514404]
[105.18423462 363.79336548]
[108.05674744 355.12237549]
[107.61014557 340.12899780]
[107.16353607 325.13565063]
[106.49375153 310.15063477]
[105.60093689 295.17721558]
[104.70812225 280.20382690]
[103.81530762 265.23040771]
[102.92249298 250.25700378]
[102.02967834 235.28359985]
[101.13685608 220.31019592]
[100.13259888 205.34384155]
[98.79436493 190.40365601]
[97.23384094 175.48506165]
[95.67331696 160.56645203]
[93.58311462 158.69851685]
[92.10688782 155.89007568]
[91.60655975 152.37081909]
[92.35431671 148.49714661]
[94.49123383 144.71725464]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[83.76233673 100.84693909]
[91.65460968 86.04530334]
[90.76178741 71.07189941]
[89.86897278 56.09849548]
[87.64385986 41.26445007]
[84.10418701 26.68807602]
[80.56451416 12.11170101]
[66.11714172 11.64936352]
[52.29465866 7.46264648]
[40.03949356 -0.15642388]
[30.18551254 -10.68202686]
[23.40128136 -23.39082909]
[20.14470100 -37.41169739]
[20.63211250 -51.78539658]
[24.82393456 -65.53023529]
[32.42779922 -77.70909882]
[42.91892624 -87.49333191]
[55.57634735 -94.21916199]
[52.25408554 -108.84662628]
[48.93182755 -123.47408295]
[45.60956955 -138.10154724]
[42.28730774 -152.72900391]
[38.42300415 -167.22270203]
[34.02200699 -181.56254578]
[20.34046555 -189.00923157]
[16.08150482 -203.61457825]
[23.26510429 -216.61193848]
[18.86410522 -230.95178223]
[14.46310711 -245.29164124]
[10.64050579 -248.84617615]
[8.75241280 -253.08744812]
[8.73646355 -257.16357422]
[10.20122814 -260.37088013]
[6.44492769 -274.89294434]
[2.68862700 -289.41500854]
[-0.46326643 -292.40155029]
[-2.31464601 -295.88537598]
[-2.86888671 -299.39651489]
[-2.28162432 -302.51449585]
[-0.83146453 -304.91348267]
[-3.71673703 -319.63339233]
[-6.60200977 -334.35327148]
[-9.48728275 -349.07315063]
[-14.73464012 -335.02093506]
[-25.18560791 -324.26095581]
[-39.07901382 -318.60644531]
[-54.07357407 -319.01034546]
[-67.64244843 -325.40454102]
[-77.49903107 -336.71151733]
[-81.98232269 -351.02584839]
[-80.33681488 -365.93530273]
[-72.83979034 -378.92742920]
[-60.75464249 -387.81274414]
[-46.11792374 -391.09399414]
[-31.39618111 -388.21817017]
[-19.07028580 -379.66992188]
[-11.21680927 -366.88824463]
[-11.21680927 -381.88824463]
[-11.21680927 -396.88824463]
[-11.21680927 -411.88824463]
[-24.99067879 -418.46420288]
[-34.54060364 -430.37057495]
[-37.97044373 -445.24334717]
[-34.59920120 -460.12948608]
[-25.09623528 -472.07336426]
[-11.34836864 -478.70352173]
[3.91474891 -478.70352173]
[17.66261482 -472.07336426]
[27.16558075 -460.12948608]
[30.53682518 -445.24334717]
[27.10698509 -430.37057495]
[17.55705833 -418.46420288]
[3.78319025 -411.88824463]
[3.78319025 -396.88824463]
[3.78319025 -381.88824463]
[3.78319025 -366.88824463]
[5.23260880 -351.95843506]
[8.11788177 -337.23855591]
[11.00315380 -322.51864624]
[13.88842678 -307.79876709]
[17.21068573 -293.17129517]
[20.96698761 -278.64923096]
[24.72328758 -264.12719727]
[28.80295372 -249.69262695]
[33.20395279 -235.35278320]
[37.60494995 -221.01293945]
[50.84296036 -214.28311157]
[55.51047516 -199.80316162]
[48.36185074 -185.96354675]
[52.76285172 -171.62368774]
[61.98971558 -183.45014954]
[76.98645782 -183.76269531]
[86.69803619 -172.33093262]
[83.96543884 -157.58192444]
[70.80303192 -150.38810730]
[56.91476822 -156.05126953]
[60.23703003 -141.42379761]
[63.55928802 -126.79634094]
[66.88154602 -112.16888428]
[70.20380402 -97.54141998]
[85.77793121 -96.70981598]
[100.50189209 -91.52298737]
[113.18218231 -82.39270020]
[122.78851318 -70.05072784]
[128.53753662 -55.49019241]
[129.95668030 -39.88566589]
[126.92304993 -24.49840546]
[119.67395782 -10.57443142]
[108.78841400 0.75639170]
[95.14088440 8.57202816]
[98.68055725 23.14840317]
[102.22023010 37.72478104]
[107.14491272 23.55624008]
[117.66788483 12.86666107]
[131.75732422 7.72003174]
[146.69277954 9.11008549]
[159.59043884 16.76842499]
[167.95999146 29.21634483]
[170.18537903 44.05034637]
[165.83692932 58.40621948]
[155.75427246 69.51206207]
[141.88418579 75.22351837]
[126.90477753 74.43778992]
[113.70833588 67.30659485]
[104.84237671 55.20568085]
[105.73519897 70.17908478]
[106.62801361 85.15248871]
[114.85726929 93.39389038]
[115.46391296 105.02458954]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[109.47627258 144.04747009]
[110.59192657 159.00592041]
[112.15244293 173.92453003]
[113.71296692 188.84313965]
[117.28096008 194.40919495]
[117.47347260 200.08897400]
[115.09104919 204.22819519]
[118.85006714 212.55331421]
[116.11026764 219.41737366]
[117.00308228 234.39077759]
[117.89589691 249.36418152]
[118.78871155 264.33758545]
[119.68152618 279.31100464]
[120.57434082 294.28439331]
[121.46716309 309.25781250]
[124.78305054 314.97763062]
[124.72176361 320.66033936]
[122.15689087 324.68905640]
[122.60349274 339.68240356]
[123.05010223 354.67575073]
[123.60831451 369.66537476]
[124.27809906 384.65039062]
[124.94788361 399.63543701]
[125.61766815 414.62048340]
[126.28745270 429.60552979]
[126.95723724 444.59054565]
[127.62702179 459.57559204]
[128.29681396 474.56063843]
[129.30107117 489.52697754]
[130.63929749 504.46716309]
[131.97753906 519.40734863]
[133.31576538 534.34753418]
[147.47302246 540.16400146]
[157.29672241 551.90081787]
[160.52944946 566.86102295]
[156.42837524 581.60687256]
[145.93586731 592.74981689]
[131.46302795 597.72937012]
[116.33563232 595.40118408]
[104.02982330 586.30035400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[19 190]
[20 189]
[21 188]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 179]
[29 177]
[30 174]
[31 173]
[32 172]
[37 171]
[38 170]
[39 169]
[41 166]
[42 165]
[43 164]
[44 151]
[45 150]
[46 149]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 129]
[63 128]
[66 125]
[67 124]
[68 123]
[72 122]
[73 121]
[74 120]
[79 119]
[80 118]
[81 117]
[82 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
