%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[63.70427704 406.43566895]
[63.92429352 421.45413208]
[62.26020432 436.38177490]
[58.73826599 450.98309326]
[53.41401672 465.02789307]
[46.37142563 478.29458618]
[37.72157288 490.57394409]
[27.60087395 501.67236328]
[16.16894531 511.41476440]
[3.60608912 519.64752197]
[-9.88956261 526.24072266]
[-24.10516357 531.09045410]
[-38.81651306 534.12017822]
[-53.79159546 535.28222656]
[-68.79422760 534.55810547]
[-83.58779144 531.95935059]
[-97.93898010 527.52691650]
[-111.62145996 521.33068848]
[-124.41941833 513.46838379]
[-136.13102722 504.06408691]
[-146.57157898 493.26602173]
[-155.57641602 481.24450684]
[-163.00349426 468.18917847]
[-168.73570251 454.30593872]
[-172.68263245 439.81369019]
[-174.78202820 424.94104004]
[-175.00077820 409.92254639]
[-173.33543396 394.99505615]
[-169.81225586 380.39401245]
[-164.48683167 366.34967041]
[-157.44313049 353.08358765]
[-148.79223633 340.80493164]
[-138.67060852 329.70736694]
[-127.23785400 319.96594238]
[-114.67430878 311.73425293]
[-101.17810059 305.14218140]
[-86.96208954 300.29364014]
[-72.25048828 297.26510620]
[-57.27531052 296.10437012]
[-42.27273941 296.82974243]
[-27.47938919 299.42974854]
[-13.12857246 303.86340332]
[0.55337918 310.06076050]
[8.40513420 297.27993774]
[16.25688934 284.49908447]
[24.10864639 271.71823120]
[20.40873718 257.33609009]
[28.18946457 244.26264954]
[43.29987335 240.47935486]
[51.15163040 227.69851685]
[59.00338745 214.91767883]
[66.85514069 202.13684082]
[74.70689392 189.35598755]
[79.95361328 175.30352783]
[82.39934540 160.50425720]
[84.84506989 145.70498657]
[87.29079437 130.90571594]
[89.73652649 116.10643768]
[81.38407135 104.26655579]
[83.74656677 89.97093201]
[95.46420288 81.44783783]
[97.90993500 66.64856720]
[100.35565948 51.84929276]
[102.80138397 37.05002213]
[105.24711609 22.25075150]
[96.17354584 34.19522095]
[83.88899231 42.80275726]
[69.56433105 47.25294495]
[54.56490707 47.12162018]
[40.32036591 42.42130280]
[28.18840408 33.59999084]
[19.32536507 21.49847984]
[14.57601833 7.27020884]
[14.39303970 -7.72867489]
[18.79387093 -22.06857300]
[27.35905075 -34.38269806]
[39.27220154 -43.49734879]
[53.39783859 -48.54376984]
[68.38959503 -49.04096985]
[82.81855774 -44.94156265]
[95.30944061 -36.63627243]
[104.67169952 -24.91670799]
[110.01297760 -10.89990711]
[110.82406616 4.07927132]
[117.10142517 -9.54404449]
[116.62107849 -14.74176979]
[118.04056549 -19.16198921]
[120.74559784 -22.21122932]
[123.97534180 -23.62583160]
[130.85475159 -36.95526123]
[137.73416138 -50.28469086]
[144.61358643 -63.61412048]
[151.49299622 -76.94355011]
[138.97264099 -85.23136902]
[127.42177582 -94.82432556]
[116.97582245 -105.60992432]
[107.75724792 -117.46173096]
[99.87414551 -130.24076843]
[93.41893768 -143.79722595]
[88.46731567 -157.97215271]
[85.07731628 -172.59936523]
[83.28869629 -187.50735474]
[83.12242889 -202.52133179]
[84.58046722 -217.46527100]
[87.64569855 -232.16397095]
[92.28220367 -246.44508362]
[98.43561554 -260.14117432]
[106.03378296 -273.09164429]
[114.98762512 -285.14468384]
[125.19216156 -296.15899658]
[136.52775574 -306.00537109]
[148.86149597 -314.56845093]
[162.04878235 -321.74777222]
[175.93499756 -327.45919800]
[190.35733032 -331.63574219]
[205.14668274 -334.22845459]
[220.12966919 -335.20693970]
[235.13061523 -334.55969238]
[249.97363281 -332.29434204]
[264.48471069 -328.43743896]
[278.49371338 -323.03417969]
[291.83639526 -316.14791870]
[304.35629272 -307.85943604]
[315.90664673 -298.26586914]
[326.35202026 -287.47967529]
[335.56994629 -275.62738037]
[343.45236206 -262.84793091]
[349.90682983 -249.29112244]
[354.85769653 -235.11592102]
[358.24691772 -220.48854065]
[360.03472900 -205.58044434]
[360.20019531 -190.56646729]
[358.74136353 -175.62260437]
[355.67532349 -160.92407227]
[351.03805542 -146.64321899]
[344.88391113 -132.94744873]
[337.28503418 -119.99738312]
[328.33056641 -107.94481659]
[318.12542725 -96.93107605]
[306.78930664 -87.08528137]
[294.45510864 -78.52288818]
[281.26742554 -71.34426880]
[267.38092041 -65.63359070]
[252.95834351 -61.45781708]
[238.16885376 -58.86590195]
[223.18582153 -57.88823318]
[208.18490601 -58.53627396]
[193.34199524 -60.80242920]
[178.83113098 -64.66012573]
[164.82241821 -70.06413269]
[157.94300842 -56.73470688]
[151.06359863 -43.40527725]
[144.18418884 -30.07584763]
[137.30477905 -16.74641800]
[130.72474670 -3.26668406]
[124.44738007 10.35663223]
[120.04638672 24.69647980]
[117.60065460 39.49575043]
[115.15493011 54.29502106]
[112.70920563 69.09429169]
[110.26347351 83.89356232]
[118.61592865 95.73344421]
[116.25343323 110.02906799]
[104.53579712 118.55216217]
[102.09006500 133.35144043]
[99.64434052 148.15071106]
[97.19861603 162.94998169]
[94.75288391 177.74925232]
[103.48725128 165.55453491]
[114.68573761 155.57485962]
[127.80194092 148.29714966]
[142.19590759 144.07649231]
[157.16529846 143.11883545]
[171.97975159 145.47088623]
[185.91641235 151.01789856]
[198.29530334 159.48921204]
[208.51240540 170.47149658]
[216.06922913 183.42890930]
[220.59704590 197.72921753]
[221.87493896 212.67468262]
[219.84054565 227.53608704]
[214.59313965 241.58830261]
[206.38876343 254.14569092]
[195.62770081 264.59555054]
[182.83502197 272.42800903]
[168.63491821 277.26092529]
[153.72023010 278.85845947]
[138.81867981 277.14266968]
[124.65735626 272.19726562]
[111.92721558 264.26358032]
[101.24938965 253.72866821]
[93.14487457 241.10659790]
[88.00910950 227.01319885]
[86.09267426 212.13612366]
[87.48773956 197.20774841]
[79.63598633 209.98858643]
[71.78422546 222.76943970]
[63.93247223 235.55027771]
[56.08071899 248.33111572]
[59.53585052 263.51992798]
[51.39098740 276.36965942]
[36.88948822 279.57000732]
[29.03773308 292.35083008]
[21.18597794 305.13168335]
[13.33422184 317.91253662]
[25.04662514 327.31585693]
[35.48808670 338.11303711]
[44.49392700 350.13378906]
[51.92211151 363.18847656]
[57.65548706 377.07125854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 205]
[44 204]
[45 203]
[46 202]
[49 199]
[50 198]
[51 197]
[52 196]
[53 195]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[84 156]
[85 155]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
