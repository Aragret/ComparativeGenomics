%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[35.53335190 364.31427002]
[41.02169418 378.33078003]
[43.57584381 393.16525269]
[43.09120941 408.21017456]
[39.58763504 422.84948730]
[33.20859146 436.48373413]
[24.21529579 448.55459595]
[12.97601891 458.56777954]
[-0.04899893 466.11322021]
[-14.32639122 470.88195801]
[-29.27150726 472.67874146]
[-44.27235413 471.42996216]
[-58.71465683 467.18673706]
[-72.00701141 460.12289429]
[-83.60511017 450.52761841]
[-93.03400421 438.79388428]
[-99.90760040 425.40213013]
[-103.94442749 410.90078735]
[-104.97917175 395.88366699]
[-102.96945953 380.96569824]
[-97.99760437 366.75775146]
[-90.26718140 353.84167480]
[-80.09475708 342.74630737]
[-67.89688873 333.92605591]
[-54.17306137 327.74209595]
[-39.48526382 324.44763184]
[-24.43494797 324.17758179]
[-9.63841915 326.94302368]
[-3.97563291 313.05300903]
[1.68715382 299.16296387]
[7.34994030 285.27294922]
[13.01272678 271.38293457]
[18.67551422 257.49288940]
[17.65237808 254.11865234]
[18.21275902 250.08119202]
[20.65056419 246.13018799]
[24.91378784 243.11820984]
[31.19114876 229.49490356]
[37.46850967 215.87158203]
[43.74586868 202.24826050]
[50.02323151 188.62495422]
[46.12986374 177.17207336]
[51.24814224 165.77088928]
[63.13180542 160.75677490]
[69.61130524 147.22843933]
[76.09079742 133.70008850]
[82.46940613 120.12387848]
[88.74676514 106.50056458]
[94.61572266 92.69638824]
[100.07108307 78.72358704]
[105.52643585 64.75079346]
[110.98179626 50.77799606]
[96.40548706 54.31795502]
[84.45670319 45.25006866]
[83.94364166 30.25884628]
[95.24450684 20.39525795]
[110.02873230 22.93037415]
[117.39781189 35.99375153]
[123.87730408 22.46540833]
[130.35679626 8.93706226]
[119.44114685 -1.51788342]
[112.30111694 -14.81684875]
[109.62487793 -29.65147400]
[111.66213226 -44.56672287]
[118.20089722 -58.10360336]
[128.58947754 -68.94187927]
[141.80142212 -76.02883148]
[156.53686523 -78.68149567]
[171.35050964 -76.65248871]
[177.83001709 -90.18083191]
[184.30950928 -103.70917511]
[190.78900146 -117.23752594]
[190.38609314 -122.44182587]
[191.87123108 -126.84041595]
[194.62136841 -129.84904480]
[197.87181091 -131.21540833]
[204.94891357 -144.44093323]
[212.02601624 -157.66645813]
[219.10313416 -170.89198303]
[220.39280701 -179.93492126]
[226.38533020 -184.26058960]
[233.65855408 -197.37928772]
[221.12876892 -205.63925171]
[209.26803589 -214.83413696]
[198.14598083 -224.90997314]
[187.82785034 -235.80763245]
[178.37422180 -247.46318054]
[169.84056091 -259.80819702]
[162.27693176 -272.77023315]
[155.72775269 -286.27322388]
[150.23143005 -300.23794556]
[145.82023621 -314.58242798]
[142.52005005 -329.22247314]
[140.35023499 -344.07220459]
[139.32354736 -359.04446411]
[139.44596863 -374.05139160]
[140.71682739 -389.00491333]
[143.12863159 -403.81729126]
[146.66725159 -418.40155029]
[151.31190491 -432.67214966]
[157.03533936 -446.54531860]
[163.80397034 -459.93966675]
[171.57806396 -472.77658081]
[180.31201172 -484.98071289]
[189.95455933 -496.48043823]
[200.44911194 -507.20831299]
[211.73410034 -517.10131836]
[223.74327087 -526.10150146]
[236.40615845 -534.15588379]
[249.64845276 -541.21734619]
[263.39245605 -547.24444580]
[277.55749512 -552.20166016]
[292.06045532 -556.06005859]
[306.81619263 -558.79693604]
[321.73815918 -560.39624023]
[336.73876953 -560.84851074]
[351.72998047 -560.15124512]
[366.62384033 -558.30841064]
[381.33291626 -555.33087158]
[395.77090454 -551.23608398]
[409.85308838 -546.04809570]
[423.49679565 -539.79736328]
[436.62197876 -532.52056885]
[449.15161133 -524.26031494]
[461.01217651 -515.06524658]
[472.13403320 -504.98919678]
[482.45196533 -494.09130859]
[491.90536499 -482.43560791]
[500.43878174 -470.09042358]
[508.00216675 -457.12826538]
[514.55108643 -443.62512207]
[520.04718018 -429.66030884]
[524.45806885 -415.31576538]
[527.75799561 -400.67562866]
[529.92749023 -385.82583618]
[530.95391846 -370.85357666]
[530.83123779 -355.84664917]
[529.56005859 -340.89315796]
[527.14801025 -326.08084106]
[523.60906982 -311.49664307]
[518.96417236 -297.22613525]
[513.24047852 -283.35305786]
[506.47158813 -269.95883179]
[498.69726562 -257.12207031]
[489.96307373 -244.91812134]
[480.32031250 -233.41856384]
[469.82553101 -222.69088745]
[458.54037476 -212.79808044]
[446.53103638 -203.79815674]
[433.86798096 -195.74397278]
[420.62554932 -188.68276978]
[406.88143921 -182.65597534]
[392.71630859 -177.69898987]
[378.21328735 -173.84088135]
[363.45748901 -171.10429382]
[348.53549194 -169.50527954]
[333.53488159 -169.05323792]
[318.54367065 -169.75082397]
[303.64987183 -171.59393311]
[288.94082642 -174.57174683]
[274.50292969 -178.66679382]
[260.42083740 -183.85504150]
[246.77725220 -190.10604858]
[239.50402832 -176.98736572]
[232.32865906 -163.81488037]
[225.25155640 -150.58935547]
[218.17443848 -137.36383057]
[211.09733582 -124.13829803]
[204.31735229 -110.75802612]
[197.83786011 -97.22968292]
[191.35835266 -83.70133209]
[184.87886047 -70.17298889]
[195.74514771 -59.90241623]
[202.91459656 -46.75824356]
[205.67401123 -32.02170181]
[203.74079895 -17.13366508]
[197.29180908 -3.55378699]
[186.94723511 7.38261318]
[173.71101379 14.59585285]
[158.87339783 17.36846733]
[143.88514709 15.41655827]
[137.40565491 28.94490433]
[130.92616272 42.47324753]
[124.95458984 56.23335266]
[119.49923706 70.20614624]
[114.04387665 84.17894745]
[108.58852386 98.15174866]
[109.57129669 101.03681946]
[109.52603149 104.34325409]
[108.29463959 107.69095612]
[105.86166382 110.64678192]
[102.37007904 112.77792358]
[96.09272003 126.40124512]
[95.34357452 135.50489807]
[89.61914062 140.17958069]
[83.13964844 153.70793152]
[76.66014862 167.23628235]
[78.50099182 185.55819702]
[63.64654541 194.90231323]
[57.36918640 208.52563477]
[51.09182358 222.14894104]
[44.81446457 235.77226257]
[38.53710175 249.39556885]
[32.56554031 263.15567017]
[26.90275383 277.04571533]
[21.23996735 290.93572998]
[15.57718086 304.82577515]
[9.91439438 318.71578979]
[4.25160742 332.60580444]
[16.76401138 340.97387695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[37 203]
[38 202]
[39 201]
[40 200]
[41 199]
[44 197]
[45 196]
[46 195]
[47 193]
[48 192]
[49 187]
[50 186]
[51 185]
[52 184]
[58 183]
[59 182]
[60 181]
[69 172]
[70 171]
[71 170]
[72 169]
[76 168]
[77 167]
[78 166]
[79 165]
[81 164]
[82 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
