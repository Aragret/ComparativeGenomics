%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-22.05270004 643.57440186]
[-34.88345718 635.67071533]
[-45.54521179 625.02062988]
[-53.46299362 612.19854736]
[-58.20980835 597.89599609]
[-59.52965927 582.88415527]
[-57.35137177 567.97265625]
[-51.79241943 553.96575928]
[-43.15258789 541.61865234]
[-31.89781570 531.59735107]
[-18.63505554 524.44219971]
[-4.07955027 520.53912354]
[-4.52615595 505.54580688]
[-4.97276211 490.55242920]
[-5.41936779 475.55908203]
[-13.53217602 463.06784058]
[-6.20918894 449.04339600]
[-6.65579462 434.05004883]
[-7.10240078 419.05670166]
[-7.54900646 404.06335449]
[-15.63433266 416.69772339]
[-28.61905861 424.20751953]
[-43.60236359 424.91500854]
[-57.23694229 418.66213989]
[-66.47679138 406.84582520]
[-69.25770569 392.10586548]
[-64.95841980 377.73519897]
[-54.53940964 366.94427490]
[-40.32830811 362.14379883]
[-25.49990654 364.40621948]
[-13.36691380 373.22610474]
[-6.63986254 386.63308716]
[-4.63584900 371.76757812]
[-2.63183522 356.90203857]
[-4.85352373 349.85321045]
[-0.48572683 341.83074951]
[1.73939037 326.99670410]
[-7.38560390 338.90191650]
[-19.99477386 347.02651978]
[-34.60680771 350.41598511]
[-49.50509644 348.67214966]
[-62.93940735 341.99984741]
[-73.33148193 331.18298340]
[-79.46048737 317.49227905]
[-80.60637665 302.53610229]
[-76.63453674 288.07153320]
[-68.01158142 275.79779053]
[-55.75052261 267.15679932]
[-41.29177475 263.16372681]
[-26.33394051 264.28765869]
[-12.63425064 270.39654541]
[-1.80213118 280.77273560]
[4.88987207 294.19723511]
[6.65550327 309.09451294]
[12.31828976 295.20446777]
[17.98107719 281.31445312]
[23.64386368 267.42443848]
[29.30665016 253.53439331]
[34.96943665 239.64437866]
[40.63222122 225.75434875]
[46.29500961 211.86431885]
[51.95779419 197.97428894]
[57.62058258 184.08425903]
[63.28337097 170.19424438]
[68.94615936 156.30421448]
[54.51164627 145.44573975]
[43.66670609 131.00105286]
[37.26713181 114.11002350]
[35.81792450 96.10553741]
[39.43344879 78.40837860]
[47.82838821 62.41505051]
[60.34029007 49.38762283]
[75.98181152 40.35411072]
[93.51865387 36.02737045]
[111.56694794 36.74882507]
[115.96794891 22.40897751]
[120.36894989 8.06913090]
[124.66307068 -6.30308151]
[128.85008240 -20.70686340]
[133.03709412 -35.11064529]
[137.22410583 -49.51442719]
[141.41111755 -63.91820908]
[143.63623047 -78.75225067]
[143.85955811 -93.75058746]
[144.08288574 -108.74893188]
[144.30621338 -123.74726868]
[141.30491638 -132.37455750]
[144.64617920 -138.96679688]
[141.85380554 -144.95965576]
[142.42184448 -150.61424255]
[145.33590698 -154.39805603]
[146.22872925 -169.37145996]
[147.12153625 -184.34486389]
[148.01435852 -199.31826782]
[148.90716553 -214.29167175]
[142.00498962 -228.52790833]
[150.48611450 -240.77209473]
[151.37892151 -255.74549866]
[137.28848267 -261.25137329]
[125.59038544 -270.84353638]
[117.43066406 -283.58221436]
[113.60874939 -298.21942139]
[114.49906158 -313.32116699]
[120.01438141 -327.40792847]
[129.61437988 -339.09960938]
[142.35853577 -347.25079346]
[156.99830627 -351.06289673]
[172.09944153 -350.16244507]
[186.18249512 -344.63769531]
[197.86773682 -335.02987671]
[206.01037598 -322.28027344]
[209.81266785 -307.63793945]
[208.90211487 -292.53741455]
[203.36791992 -278.45806885]
[193.75227356 -266.77926636]
[180.99720764 -258.64517212]
[166.35234070 -254.85267639]
[165.45951843 -239.87927246]
[172.42556763 -226.71403503]
[163.88058472 -213.39886475]
[162.98776245 -198.42546082]
[162.09494019 -183.45204163]
[161.20213318 -168.47863770]
[160.30931091 -153.50523376]
[159.63952637 -138.52020264]
[159.30455017 -123.52394104]
[159.08122253 -108.52560425]
[158.85789490 -93.52725983]
[158.63456726 -78.52892303]
[165.83589172 -91.68722534]
[176.70768738 -102.02183533]
[190.21371460 -108.54772949]
[205.06666565 -110.64288330]
[219.85086060 -108.10762024]
[233.15716553 -101.18357849]
[243.71730042 -90.53070831]
[250.52473450 -77.16437531]
[252.93063354 -62.35858154]
[250.70568848 -47.52451324]
[244.06196594 -34.07605743]
[233.63270569 -23.29504204]
[220.41194153 -16.20903969]
[205.65980530 -13.49344444]
[190.78236389 -15.40709019]
[177.19766235 -21.76758003]
[166.20050049 -31.96867180]
[158.83905029 -45.03806305]
[155.81489563 -59.73119736]
[151.62788391 -45.32741547]
[147.44087219 -30.92363548]
[143.25386047 -16.51985168]
[139.06684875 -2.11607051]
[140.21832275 5.18433285]
[134.70878601 12.47012901]
[130.30780029 26.80997658]
[125.90679932 41.14982224]
[136.41304016 47.00381470]
[145.64533997 54.71194077]
[153.28068542 64.00451660]
[159.05192566 74.55644226]
[162.75718689 85.99853516]
[164.26679993 97.93048859]
[163.52798462 109.93484497]
[160.56655884 121.59162140]
[155.48612976 132.49298096]
[148.46447754 142.25755310]
[139.74722290 150.54368591]
[129.63937378 157.06149292]
[118.49454498 161.58293152]
[106.70267487 163.94981384]
[94.67630005 164.07936096]
[82.83618164 161.96699524]
[77.17339325 175.85702515]
[71.51061249 189.74705505]
[65.84782410 203.63708496]
[60.18503571 217.52709961]
[54.52225113 231.41712952]
[48.85946274 245.30715942]
[43.19667816 259.19717407]
[37.53388977 273.08721924]
[31.87110329 286.97723389]
[26.20831680 300.86727905]
[20.54553032 314.75729370]
[16.57343483 329.22183228]
[14.34831715 344.05584717]
[12.23369312 358.90606689]
[10.22967911 373.77157593]
[8.22566605 388.63711548]
[7.44434357 403.61676025]
[7.89094925 418.61010742]
[8.33755493 433.60345459]
[8.78416157 448.59680176]
[16.92891312 462.16049194]
[9.57398224 475.11248779]
[10.02058792 490.10583496]
[10.46719360 505.09918213]
[10.91380024 520.09252930]
[25.67581367 523.12231445]
[39.34094238 529.47534180]
[51.17224121 538.80902100]
[60.53166199 550.61993408]
[66.91446686 564.27117920]
[69.97644043 579.02655029]
[69.55244446 594.09033203]
[65.66535950 608.65008545]
[58.52479553 621.92071533]
[48.51584244 633.18646240]
[36.17827225 641.83984375]
[22.17743111 647.41418457]
[7.26836777 649.60888672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 197]
[13 196]
[14 195]
[15 194]
[17 192]
[18 191]
[19 190]
[20 189]
[32 188]
[33 187]
[34 186]
[36 185]
[37 184]
[54 183]
[55 182]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[75 156]
[76 155]
[77 154]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[83 129]
[84 128]
[85 127]
[86 126]
[88 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
