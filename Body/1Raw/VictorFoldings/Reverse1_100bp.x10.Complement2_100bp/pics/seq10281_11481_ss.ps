%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[142.69874573 632.13793945]
[139.27926636 617.47875977]
[138.88099670 602.43127441]
[141.52026367 587.61175537]
[147.08897400 573.62695312]
[155.35910034 561.04956055]
[165.99198914 550.39471436]
[178.55223083 542.09857178]
[192.52548218 536.50097656]
[189.85968018 521.73974609]
[187.19389343 506.97854614]
[184.52809143 492.21734619]
[181.86228943 477.45611572]
[179.19650269 462.69491577]
[176.53070068 447.93368530]
[173.86491394 433.17245483]
[161.82371521 420.40621948]
[168.19407654 403.12908936]
[165.30880737 388.40917969]
[162.42353821 373.68930054]
[159.42875671 358.99130249]
[156.32464600 344.31597900]
[139.26112366 334.91650391]
[134.53883362 315.70184326]
[145.63873291 298.95455933]
[141.88243103 284.43249512]
[138.12612915 269.91043091]
[134.36982727 255.38836670]
[123.69190216 245.00419617]
[127.72682953 229.70616150]
[123.97052765 215.18409729]
[120.21422577 200.66204834]
[116.45792389 186.13998413]
[112.48583221 171.67546082]
[108.29882050 157.27168274]
[104.11180878 142.86788940]
[99.22618103 137.32240295]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[70.79193878 71.78742218]
[60.05930328 61.03068542]
[56.17766953 46.44304276]
[60.09273148 31.96795273]
[70.65637207 21.46676254]
[66.68428040 7.00223827]
[62.71218109 -7.46228552]
[58.74008560 -21.92680931]
[54.76799011 -36.39133453]
[50.79589462 -50.85585785]
[39.68042755 -62.11449814]
[43.77125549 -76.43631744]
[39.79916000 -90.90084076]
[35.82706451 -105.36536407]
[24.71159744 -116.62400055]
[28.80242538 -130.94581604]
[19.22753334 -119.39933014]
[4.22813320 -119.53343201]
[-5.13877583 -131.24928284]
[-1.96825683 -145.91036987]
[11.40250206 -152.70910645]
[25.11599731 -146.63496399]
[22.23072433 -161.35485840]
[11.98342609 -173.40904236]
[17.12812996 -187.38693237]
[14.24285793 -202.10682678]
[11.35758591 -216.82670593]
[8.47231293 -231.54660034]
[-4.36026955 -240.37625122]
[-7.07665586 -255.34541321]
[1.42014134 -267.52490234]
[-1.46513128 -282.24478149]
[-4.35040379 -296.96469116]
[-19.33920670 -295.98278809]
[-34.33050919 -296.92572021]
[-49.07814407 -299.77801514]
[-63.33993912 -304.49285889]
[-76.88170624 -310.99276733]
[-89.48107147 -319.17105103]
[-100.93114471 -328.89340210]
[-111.04390717 -340.00018311]
[-119.65328979 -352.30899048]
[-126.61793518 -365.61770630]
[-131.82345581 -379.70779419]
[-135.18440247 -394.34790039]
[-136.64555359 -409.29760742]
[-136.18293762 -424.31140137]
[-133.80413818 -439.14276123]
[-129.54821777 -453.54815674]
[-123.48506927 -467.29104614]
[-115.71425629 -480.14572144]
[-106.36337280 -491.90112305]
[-95.58598328 -502.36419678]
[-83.55904388 -511.36315918]
[-70.48006439 -518.75018311]
[-56.56380463 -524.40405273]
[-42.03878784 -528.23187256]
[-27.14352036 -530.17077637]
[-12.12260151 -530.18896484]
[2.77731228 -528.28613281]
[17.31155205 -524.49346924]
[31.24145126 -518.87329102]
[44.33827209 -511.51791382]
[56.38694763 -502.54809570]
[67.18962860 -492.11111450]
[76.56893158 -480.37838745]
[84.37082672 -467.54254150]
[90.46721649 -453.81439209]
[94.75798035 -439.41931152]
[97.17266083 -424.59375000]
[97.67160797 -409.58111572]
[96.24663544 -394.62792969]
[92.92114258 -379.97973633]
[87.74972534 -365.87707520]
[80.81730652 -352.55154419]
[72.23773193 -340.22195435]
[62.15187836 -329.09072876]
[50.72536469 -319.34069824]
[38.14582825 -311.13195801]
[24.61983109 -304.59927368]
[10.36948776 -299.84994507]
[13.25475979 -285.13006592]
[16.14003181 -270.41018677]
[28.60607338 -262.33966064]
[31.74184036 -247.45268250]
[23.19220352 -234.43186951]
[26.07747650 -219.71199036]
[28.96274948 -204.99209595]
[31.84802246 -190.27220154]
[41.88894653 -179.27087402]
[36.95061493 -164.24012756]
[39.83588791 -149.52023315]
[43.26694870 -134.91790771]
[54.09830475 -124.69387054]
[50.29158783 -109.33745575]
[54.26368332 -94.87293243]
[58.23577881 -80.40840912]
[69.06713104 -70.18437195]
[65.26041412 -54.82795334]
[69.23251343 -40.36343002]
[73.20461273 -25.89890671]
[77.17670441 -11.43438148]
[81.14880371 3.03014207]
[85.12089539 17.49466515]
[99.56607056 21.12819672]
[110.32458496 31.57378387]
[114.43733978 46.09795761]
[110.70343781 60.82734299]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.51558685 138.68087769]
[122.70259857 153.08467102]
[126.88961029 167.48844910]
[131.38999939 172.33180237]
[132.58886719 177.88694763]
[130.97998047 182.38368225]
[134.73628235 196.90574646]
[138.49258423 211.42779541]
[142.24888611 225.94985962]
[153.19549561 237.37274170]
[148.89189148 251.63206482]
[152.64819336 266.15411377]
[156.40449524 280.67617798]
[160.16079712 295.19824219]
[170.41333008 298.14941406]
[178.45455933 305.03750610]
[182.87715149 314.56872559]
[182.94390869 324.99505615]
[178.70977783 334.43475342]
[170.99995422 341.21188354]
[174.10406494 355.88717651]
[178.94161987 363.63546753]
[177.14343262 370.80401611]
[180.02870178 385.52392578]
[182.91397095 400.24380493]
[193.16336060 408.07406616]
[195.26347351 420.39370728]
[188.62612915 430.50668335]
[191.29191589 445.26788330]
[193.95771790 460.02911377]
[196.62351990 474.79031372]
[199.28930664 489.55154419]
[201.95510864 504.31274414]
[204.62089539 519.07397461]
[207.28669739 533.83520508]
[222.33520508 534.19165039]
[237.00386047 537.57037354]
[250.69195557 543.83300781]
[262.83898926 552.72314453]
[272.94757080 563.87670898]
[280.60369873 576.83691406]
[285.49392700 591.07318115]
[287.41796875 606.00244141]
[286.29702759 621.01336670]
[282.17703247 635.49133301]
[275.22665405 648.84338379]
[265.73056030 660.52282715]
[254.07757568 670.05133057]
[240.74490356 677.03875732]
[226.27847290 681.19897461]
[211.27070618 682.36163330]
[196.33615112 680.47912598]
[182.08636475 675.62847900]
[169.10487366 668.00842285]
[157.92326355 657.93084717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[16 183]
[18 180]
[19 179]
[20 178]
[21 176]
[22 175]
[25 169]
[26 168]
[27 167]
[28 166]
[30 164]
[31 163]
[32 162]
[33 161]
[34 158]
[35 157]
[36 156]
[38 155]
[39 154]
[41 152]
[42 151]
[47 146]
[48 145]
[49 144]
[50 143]
[51 142]
[52 141]
[54 139]
[55 138]
[56 137]
[58 135]
[64 134]
[65 133]
[67 131]
[68 130]
[69 129]
[70 128]
[73 125]
[74 124]
[75 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
