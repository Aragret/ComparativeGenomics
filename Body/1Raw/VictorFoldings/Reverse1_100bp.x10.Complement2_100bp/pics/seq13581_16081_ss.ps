%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[104.40563202 637.60400391]
[114.00093079 625.84411621]
[127.19837189 618.34796143]
[124.97325134 603.51391602]
[122.74813843 588.67987061]
[120.52301788 573.84582520]
[118.29790497 559.01177979]
[114.19695282 552.86328125]
[116.15179443 543.94049072]
[114.14778137 529.07495117]
[112.14376831 514.20947266]
[102.21170807 525.45019531]
[87.24942017 526.51318359]
[75.82798004 516.78942871]
[74.49010468 501.84924316]
[84.00218964 490.25094604]
[98.91528320 488.63861084]
[110.68601990 497.93502808]
[110.01623535 482.94998169]
[109.34645081 467.96496582]
[108.67666626 452.97991943]
[95.31187439 448.69955444]
[84.18721008 440.09603882]
[76.65146637 428.18670654]
[73.62706757 414.39123535]
[75.49722290 400.36233521]
[82.05749512 387.78793335]
[92.53793335 378.18786621]
[105.69340515 372.73031616]
[105.24680328 357.73696899]
[104.80019379 342.74362183]
[104.35359192 327.75027466]
[103.90698242 312.75692749]
[92.92365265 302.76181030]
[92.25714111 287.56280518]
[102.81539154 276.11022949]
[102.36878204 261.11688232]
[101.92218018 246.12353516]
[101.47557068 231.13018799]
[85.47322845 218.41339111]
[84.04042053 197.72904968]
[98.54189301 182.50149536]
[97.20365906 167.56130981]
[95.86542511 152.62112427]
[92.83998871 148.92575073]
[92.10385132 143.29058838]
[94.71655273 137.21725464]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[91.46817780 77.08273315]
[83.56401825 75.27863312]
[76.13334656 72.05451965]
[69.42858124 67.52291870]
[63.67695618 61.84070969]
[59.07277679 55.20370483]
[55.77087402 47.83990860]
[53.88140869 40.00167847]
[53.46617508 31.95709038]
[54.53661346 23.98074532]
[57.05347824 16.34441948]
[60.92830276 9.30779457]
[66.02648163 3.10962510]
[72.17196655 -2.04035974]
[79.15331268 -5.96855068]
[86.73098755 -8.54331303]
[94.64557648 -9.67939377]
[96.42803955 -24.57311058]
[98.21051025 -39.46682739]
[99.99297333 -54.36054611]
[101.77544403 -69.25426483]
[90.71327209 -82.80593109]
[92.83296967 -99.83008575]
[106.33818054 -109.85245514]
[107.89870453 -124.77106476]
[109.45922852 -139.68966675]
[110.90864563 -154.61947632]
[112.24687958 -169.55966187]
[110.04905701 -174.29428101]
[109.90184021 -178.93449402]
[111.42588806 -182.71502686]
[113.99308014 -185.13201904]
[115.99709320 -199.99754333]
[118.00110626 -214.86306763]
[119.89440155 -229.74310303]
[121.67686462 -244.63682556]
[114.03913879 -261.39230347]
[125.09745789 -275.01876831]
[126.65798187 -289.93737793]
[128.21850586 -304.85598755]
[113.74190521 -308.92242432]
[100.16085052 -315.37710571]
[87.86608124 -324.03430176]
[77.21135712 -334.64489746]
[68.50322723 -346.90362549]
[61.99224091 -360.45776367]
[57.86574173 -374.91738892]
[56.24244690 -389.86639404]
[57.16907120 -404.87469482]
[60.61894226 -419.51049805]
[66.49281311 -433.35266113]
[74.62167358 -446.00292969]
[84.77163696 -457.09735107]
[96.65067291 -466.31671143]
[109.91699982 -473.39575195]
[124.18891907 -478.13076782]
[139.05580139 -480.38552856]
[154.08987427 -480.09518433]
[168.85861206 -477.26806641]
[182.93707275 -471.98556519]
[195.92018127 -464.39959717]
[207.43440247 -454.72845459]
[217.14843750 -443.25042725]
[224.78280640 -430.29571533]
[230.11784363 -416.23706055]
[233.00006104 -401.47900391]
[233.34651184 -386.44610596]
[231.14724731 -371.57092285]
[226.46554565 -357.28143311]
[219.43608093 -343.98876953]
[210.26113892 -332.07540894]
[199.20468140 -321.88409424]
[186.58482361 -313.70806885]
[172.76467896 -307.78256226]
[158.14186096 -304.27810669]
[143.13711548 -303.29547119]
[141.57658386 -288.37686157]
[140.01606750 -273.45825195]
[147.38719177 -263.86694336]
[146.20918274 -251.42524719]
[136.57058716 -242.85435486]
[134.78811646 -227.96063232]
[137.11450195 -220.94567871]
[132.86663818 -212.85905457]
[130.86262512 -197.99353027]
[128.85861206 -183.12800598]
[127.18706512 -168.22142029]
[125.84883118 -153.28123474]
[128.38305664 -146.33865356]
[124.37783813 -138.12913513]
[122.81731415 -123.21054077]
[121.25679016 -108.29193115]
[130.69137573 -99.51594543]
[133.38893127 -86.71730042]
[128.14537048 -74.52239990]
[116.66915894 -67.47179413]
[114.88669586 -52.57807922]
[113.10422516 -37.68436432]
[111.32176208 -22.79064560]
[109.53929138 -7.89692831]
[128.75007629 3.90777040]
[139.46078491 23.82555008]
[138.71189880 46.49530792]
[126.63878632 65.77661896]
[106.45321655 76.41294861]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[109.68995667 136.32443237]
[110.80561066 151.28289795]
[112.14384460 166.22306824]
[113.48207855 181.16325378]
[122.40882111 184.96372986]
[129.29689026 191.71388245]
[133.22959900 200.45634460]
[133.70515442 209.97285461]
[130.70033264 218.95402527]
[124.66790771 226.17944336]
[116.46892548 230.68357849]
[116.91552734 245.67692566]
[117.36213684 260.67028809]
[117.80873871 275.66363525]
[129.02993774 286.46743774]
[129.26927185 301.67919922]
[118.90032959 312.31030273]
[119.34693909 327.30364990]
[119.79354858 342.29699707]
[120.24015045 357.29037476]
[120.68675995 372.28372192]
[135.75408936 377.89474487]
[147.48641968 388.83197021]
[154.10739136 403.39901733]
[154.63011169 419.35302734]
[149.00408936 434.25009155]
[138.11848450 445.81958008]
[123.66170502 452.31011963]
[124.33148956 467.29516602]
[125.00127411 482.28021240]
[125.67105865 497.26525879]
[127.00929260 512.20544434]
[129.01330566 527.07098389]
[131.01731873 541.93646240]
[133.13194275 556.78668213]
[135.35705566 571.62072754]
[137.58218384 586.45477295]
[139.80729675 601.28881836]
[142.03240967 616.12286377]
[156.84840393 619.41699219]
[169.47175598 627.84399414]
[178.19526672 640.26434326]
[181.83917236 654.99822998]
[179.91065979 670.05297852]
[172.67051697 683.39257812]
[161.09794617 693.21295166]
[146.75804138 698.18597412]
[131.59013367 697.63916016]
[117.64556885 691.64630127]
[106.81024170 681.01806641]
[100.54953003 667.19171143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[9 193]
[10 192]
[11 191]
[18 190]
[19 189]
[20 188]
[21 187]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[36 173]
[37 172]
[38 171]
[39 170]
[42 163]
[43 162]
[44 161]
[47 160]
[48 159]
[49 158]
[51 157]
[52 156]
[68 151]
[69 150]
[70 149]
[71 148]
[72 147]
[75 143]
[76 142]
[77 141]
[78 139]
[79 138]
[83 137]
[84 136]
[85 135]
[86 133]
[87 132]
[89 129]
[90 128]
[91 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
