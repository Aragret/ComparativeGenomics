%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[131.71969604 649.49658203]
[118.34711456 642.58581543]
[106.63962555 633.12432861]
[97.07663727 621.49957275]
[90.04974365 608.18768311]
[85.84670258 593.73364258]
[84.63961792 578.72937012]
[86.47792053 563.78930664]
[91.28633118 549.52520752]
[98.86795807 536.52124023]
[108.91232300 525.30981445]
[121.00813293 516.35009766]
[134.66004944 510.00897217]
[149.30906677 506.54611206]
[148.86245728 491.55276489]
[148.30424500 476.56314087]
[147.63446045 461.57812500]
[146.96467590 446.59307861]
[146.29489136 431.60803223]
[144.73435974 416.68942261]
[142.28863525 401.89016724]
[139.84291077 387.09088135]
[130.13398743 375.79547119]
[135.51765442 360.91842651]
[133.07192993 346.11917114]
[130.62619019 331.31988525]
[118.40597534 322.88177490]
[115.71483612 307.90805054]
[124.64836121 295.14758301]
[122.20263672 280.34829712]
[119.75690460 265.54904175]
[110.04798126 254.25363159]
[115.43164825 239.37657166]
[112.98591614 224.57730103]
[98.99714661 219.46069336]
[89.38371277 207.95251465]
[86.80429840 193.07928467]
[92.05030823 178.81828308]
[103.80683899 169.03405762]
[101.36111450 154.23478699]
[91.65219116 142.93937683]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[80.59889984 81.05072021]
[78.86652374 68.67402649]
[85.80201721 58.76314926]
[76.10318756 46.26342010]
[81.86690521 32.52919769]
[79.64179230 17.69515419]
[77.41667175 2.86111093]
[75.19155884 -11.97293282]
[72.96643829 -26.80697632]
[61.16440201 -40.94180679]
[68.21958923 -57.01013565]
[65.77386475 -71.80941010]
[63.32813644 -86.60868073]
[60.88240814 -101.40795135]
[58.43667984 -116.20722198]
[55.99095154 -131.00648499]
[47.66308594 -135.42845154]
[42.38187408 -143.07308960]
[41.22773743 -152.15396118]
[44.33406830 -160.61833191]
[50.88536072 -166.61112976]
[49.10289383 -181.50485229]
[47.32042694 -196.39855957]
[45.53796387 -211.29228210]
[41.41096115 -219.44125366]
[43.84153366 -226.42079163]
[42.28100967 -241.33940125]
[40.38771820 -256.21945190]
[38.16260147 -271.05346680]
[35.93748474 -285.88751221]
[33.60199738 -300.70458984]
[31.15626907 -315.50387573]
[21.27241325 -327.85781860]
[26.83101082 -341.67633057]
[24.38528252 -356.47558594]
[21.93955612 -371.27487183]
[19.49382782 -386.07412720]
[4.45719576 -386.16192627]
[-10.34828091 -388.78982544]
[-24.49662018 -393.88223267]
[-37.58074570 -401.29260254]
[-49.22419739 -410.80773926]
[-59.09197617 -422.15390015]
[-66.90016174 -435.00457764]
[-72.42410278 -448.99008179]
[-75.50485229 -463.70797729]
[-76.05378723 -478.73486328]
[-74.05509949 -493.63830566]
[-69.56630707 -507.98959351]
[-62.71655273 -521.37573242]
[-53.70291901 -533.41162109]
[-42.78475189 -543.75091553]
[-30.27618027 -552.09619141]
[-16.53710747 -558.20733643]
[-1.96282983 -561.90850830]
[13.02731895 -563.09313965]
[28.00204277 -561.72729492]
[42.53049088 -557.85009766]
[56.19464874 -551.57330322]
[68.60137177 -543.07733154]
[79.39369202 -532.60668945]
[88.26110077 -520.46270752]
[94.94845581 -506.99468994]
[99.26335144 -492.59017944]
[101.08164215 -477.66363525]
[100.35100555 -462.64450073]
[97.09246826 -447.96493530]
[91.39978790 -434.04727173]
[83.43675232 -421.29196167]
[73.43246460 -410.06597900]
[61.67478561 -400.69235229]
[48.50199127 -393.44076538]
[34.29309845 -388.51986694]
[36.73882675 -373.72058105]
[39.18455505 -358.92132568]
[41.63027954 -344.12203979]
[51.33920288 -332.82666016]
[45.95553970 -317.94958496]
[48.40126801 -303.15032959]
[52.59330368 -297.06356812]
[50.77152634 -288.11264038]
[52.99664688 -273.27859497]
[55.22176361 -258.44454956]
[57.82465744 -256.06604004]
[59.40481949 -252.30863953]
[59.32670593 -247.66674805]
[57.19961548 -242.89991760]
[58.76013947 -227.98132324]
[60.43167877 -213.07475281]
[62.21414566 -198.18103027]
[63.99661255 -183.28730774]
[65.77907562 -168.39360046]
[79.54151917 -153.01309204]
[70.79022217 -133.45222473]
[73.23595428 -118.65294647]
[75.68167877 -103.85367584]
[78.12740326 -89.05440521]
[80.57313538 -74.25513458]
[83.01885986 -59.45586395]
[92.66668701 -52.15887833]
[94.82537842 -39.84937668]
[87.80048370 -29.03209305]
[90.02560425 -14.19804955]
[92.25071716 0.63599384]
[94.47583771 15.47003746]
[96.70095062 30.30408096]
[106.24063110 41.74278259]
[100.63606262 56.53803253]
[112.29181671 69.65711975]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[121.71897888 137.97055054]
[116.16038513 151.78906250]
[118.60610962 166.58833313]
[132.88546753 172.06987000]
[142.44078064 183.88481140]
[144.78373718 198.79711914]
[139.38400269 212.78636169]
[127.78518677 222.13157654]
[130.23091125 236.93084717]
[140.11477661 249.28479004]
[134.55618286 263.10330200]
[137.00190735 277.90258789]
[139.44763184 292.70184326]
[152.01162720 301.90963745]
[154.28112793 316.95306396]
[145.42547607 328.87417603]
[147.87120056 343.67343140]
[150.31692505 358.47271729]
[160.20077515 370.82666016]
[154.64218140 384.64517212]
[157.08790588 399.44442749]
[159.53364563 414.24371338]
[167.43557739 401.49383545]
[181.27854919 395.71697998]
[195.89949036 399.06781006]
[205.84515381 410.29653931]
[207.40602112 425.21508789]
[199.99996948 438.25924683]
[186.38923645 444.56387329]
[171.65031433 441.77746582]
[161.27992249 430.93823242]
[161.94970703 445.92327881]
[162.61950684 460.90832520]
[163.28929138 475.89337158]
[166.79876709 484.32672119]
[163.85580444 491.10614014]
[164.30241394 506.09951782]
[179.13156128 508.68429565]
[193.13671875 514.20159912]
[205.74436951 522.42547607]
[216.43823242 533.01916504]
[224.78042603 545.54882812]
[230.42933655 559.50140381]
[233.15362549 574.30560303]
[232.84175110 589.35510254]
[229.50648499 604.03369141]
[223.28439331 617.74023438]
[214.43026733 629.91357422]
[203.30668640 640.05511475]
[190.36915588 647.74957275]
[176.14746094 652.68194580]
[161.22395325 654.65014648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 195]
[15 194]
[16 192]
[17 191]
[18 190]
[19 189]
[20 180]
[21 179]
[22 178]
[24 176]
[25 175]
[26 174]
[29 171]
[30 170]
[31 169]
[33 167]
[34 166]
[39 161]
[40 160]
[42 158]
[43 157]
[45 155]
[48 153]
[50 151]
[51 150]
[52 149]
[53 148]
[54 147]
[56 144]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[66 137]
[67 136]
[68 135]
[69 134]
[71 133]
[72 132]
[73 128]
[74 127]
[75 126]
[76 124]
[77 123]
[79 121]
[80 120]
[81 119]
[82 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
