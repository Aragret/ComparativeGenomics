%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[228.10078430 444.99060059]
[240.02781677 435.06460571]
[238.91215515 420.10614014]
[237.79650879 405.14767456]
[236.68086243 390.18923950]
[232.81655884 375.69552612]
[226.33706665 362.16720581]
[219.85755920 348.63885498]
[207.38162231 340.50250244]
[208.39860535 324.71401978]
[201.91911316 311.18566895]
[195.43960571 297.65731812]
[192.84353638 296.59973145]
[190.50996399 294.45007324]
[188.85694885 291.30316162]
[188.26051331 287.40332031]
[189.00408936 283.12536621]
[183.34130859 269.23532104]
[177.67852783 255.34530640]
[172.01573181 241.45527649]
[166.35295105 227.56524658]
[151.93055725 217.56716919]
[154.58767700 199.34571838]
[147.51057434 186.12019348]
[139.28176880 173.57878113]
[131.05294800 161.03738403]
[122.82415009 148.49598694]
[114.59533691 135.95458984]
[106.36653137 123.41318512]
[98.13772583 110.87178802]
[92.57877350 124.80369568]
[78.26535797 129.28991699]
[65.74879456 121.02337646]
[64.25582886 106.09785461]
[74.88702393 95.51589966]
[89.80403900 97.07727051]
[82.53080750 83.95857239]
[75.25757599 70.83988190]
[67.98435211 57.72118378]
[67.81259155 72.72019958]
[62.30187988 86.67126465]
[52.17724609 97.73886108]
[38.77075958 104.46687317]
[23.84627342 105.97010803]
[9.36736107 102.05078125]
[-2.76102877 93.22456360]
[-10.94319630 80.65268707]
[-14.10263824 65.98919678]
[-11.82367420 51.16333008]
[-4.40614223 38.12568283]
[7.17405462 28.59158325]
[21.39334106 23.81540680]
[36.38092804 24.42553902]
[50.16493988 30.34170914]
[60.93322754 40.78748322]
[56.74621582 26.38369942]
[52.55920410 11.97991753]
[48.37219620 -2.42386460]
[44.07807159 -16.79607773]
[39.67707443 -31.13592529]
[35.27607346 -45.47577286]
[29.76653862 -52.76156616]
[30.91801643 -60.06196976]
[26.73100471 -74.46575165]
[23.49158859 -77.35714722]
[21.53730392 -80.78428650]
[20.87876701 -84.27738190]
[21.37293625 -87.41145325]
[22.75102615 -89.85256195]
[19.42876625 -104.48002625]
[16.10650635 -119.10748291]
[12.78424740 -133.73493958]
[9.46198845 -148.36241150]
[6.13972855 -162.98986816]
[2.60005617 -177.56623840]
[-1.15624452 -192.08830261]
[-4.61608982 -177.49276733]
[-12.36310387 -164.64816284]
[-23.65889168 -154.77876282]
[-37.42680740 -148.82524109]
[-52.35458755 -147.35504150]
[-67.01940155 -150.50831604]
[-80.02350616 -157.98451233]
[-90.12741852 -169.07102966]
[-96.36810303 -182.71118164]
[-98.15074921 -197.60488892]
[-95.30542755 -212.33255005]
[-88.10334778 -225.49043274]
[-77.23096466 -235.82441711]
[-63.72455978 -242.34953308]
[-48.87148666 -244.44384766]
[-34.08743668 -241.90773010]
[-20.78153419 -234.98292542]
[-10.22201347 -224.32945251]
[-3.41498852 -210.96163940]
[-3.19166088 -225.95997620]
[-2.96833324 -240.95832825]
[-17.22223282 -246.06762695]
[-29.04326820 -255.53028870]
[-37.14918137 -268.31985474]
[-40.66070175 -283.04901123]
[-39.19692993 -298.12002563]
[-32.91663742 -311.89816284]
[-22.50107384 -322.88882446]
[-9.08003426 -329.89984131]
[5.89066601 -332.17071533]
[20.78711700 -329.45510864]
[33.99346161 -322.04760742]
[44.07717514 -310.75170898]
[49.94445419 -296.79269409]
[50.95885849 -281.68478394]
[47.01035309 -267.06671143]
[38.52724075 -254.52415466]
[26.42970848 -245.41764832]
[12.03000450 -240.73498535]
[11.80667686 -225.73664856]
[11.58334923 -210.73831177]
[13.36581516 -195.84460449]
[17.12211609 -181.32254028]
[20.70958710 -178.16990662]
[22.35468292 -172.73017883]
[20.76718903 -166.31211853]
[24.08944893 -151.68466187]
[27.41170692 -137.05720520]
[30.73396683 -122.42974091]
[34.05622864 -107.80228424]
[37.37848663 -93.17482758]
[41.13478851 -78.65276337]
[45.32179642 -64.24898529]
[49.61592102 -49.87677002]
[54.01691818 -35.53692245]
[58.41791916 -21.19707489]
[63.38557053 -15.72494316]
[62.77597809 -6.61087608]
[66.96298981 7.79290628]
[71.15000153 22.19668770]
[75.33701324 36.60047150]
[81.10304260 50.44795609]
[88.37627411 63.56665039]
[95.64950562 76.68534088]
[102.92272949 89.80403900]
[110.67912292 102.64297485]
[118.90792847 115.18437958]
[127.13674164 127.72577667]
[135.36553955 140.26718140]
[143.59436035 152.80857849]
[151.82316589 165.34997559]
[160.05197144 177.89137268]
[159.93298340 162.89184570]
[166.25544739 149.28939819]
[177.79856873 139.71046448]
[192.33357239 136.00456238]
[207.05397034 138.88725281]
[219.11747742 147.80194092]
[226.19483948 161.02734375]
[226.91949463 176.00982666]
[221.15156555 189.85652161]
[210.00471497 199.89382935]
[195.63124084 204.18373108]
[180.80642700 201.89790344]
[168.39184570 193.47676086]
[180.03976440 199.01651001]
[184.64385986 210.63485718]
[180.24298096 221.90246582]
[185.90576172 235.79248047]
[191.56854248 249.68251038]
[197.23133850 263.57254028]
[202.89411926 277.46255493]
[208.96795654 291.17782593]
[215.44744873 304.70617676]
[221.92694092 318.23452759]
[234.86634827 327.33850098]
[233.38591003 342.15936279]
[239.86540222 355.68768311]
[246.34490967 369.21603394]
[246.52133179 354.21707153]
[250.10586548 339.65167236]
[256.91043091 326.28387451]
[266.57812500 314.81497192]
[278.60174561 305.84655762]
[292.35058594 299.84912109]
[307.10342407 297.13726807]
[322.08630371 297.85327148]
[336.51333618 301.95956421]
[349.62762451 309.24069214]
[360.74124146 319.31478882]
[369.27124023 331.65332031]
[374.77008057 345.60906982]
[376.94937134 360.44989014]
[375.69473267 375.39733887]
[371.07202148 389.66726685]
[363.32369995 402.51107788]
[352.85629272 413.25503540]
[340.21881104 421.33554077]
[326.07427979 426.32870483]
[311.16461182 427.97259521]
[296.27200317 426.18093872]
[282.17764282 421.04779053]
[269.62094116 412.84234619]
[259.26055908 401.99511719]
[251.63931274 389.07357788]
[252.75495911 404.03204346]
[253.87062073 418.99047852]
[254.98626709 433.94894409]
[268.25378418 441.99584961]
[274.22650146 456.31738281]
[270.60778809 471.40661621]
[258.78915405 481.46142578]
[243.31504822 482.61550903]
[230.13562012 474.42514038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 175]
[7 174]
[8 173]
[10 171]
[11 170]
[12 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[23 161]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[36 141]
[37 140]
[38 139]
[39 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 132]
[60 131]
[61 130]
[63 129]
[64 128]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 119]
[76 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
