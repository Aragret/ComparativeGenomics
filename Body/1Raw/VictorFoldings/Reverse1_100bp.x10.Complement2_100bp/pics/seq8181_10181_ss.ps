%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[79.71956635 520.61431885]
[81.77633667 535.58966064]
[79.32603455 550.50567627]
[72.58651733 564.03607178]
[62.15708160 574.97760010]
[48.96509171 582.35754395]
[34.18357849 585.51953125]
[19.12689590 584.18243408]
[5.13388014 578.46520996]
[-6.55122185 568.87615967]
[-14.88937759 556.26794434]
[-19.13916588 541.76171875]
[-18.92269516 526.64733887]
[-14.25921726 512.26879883]
[-5.56340313 499.90454102]
[6.39152050 490.65405273]
[20.54253006 485.33990479]
[35.63132858 484.43457031]
[39.17099762 469.85821533]
[42.71067047 455.28182983]
[46.25034332 440.70544434]
[49.79001617 426.12905884]
[53.32968903 411.55270386]
[56.86936188 396.97631836]
[51.02882004 380.42776489]
[63.84947205 367.20986938]
[59.12322235 353.08502197]
[69.72487640 341.34127808]
[73.04713440 326.71380615]
[76.36939240 312.08633423]
[79.69165039 297.45889282]
[82.57692719 282.73898315]
[85.02265167 267.93972778]
[87.46838379 253.14045715]
[89.91410828 238.34118652]
[81.05844879 226.42007446]
[83.32794189 211.37666321]
[95.89194489 202.16886902]
[98.33766937 187.36959839]
[100.78340149 172.57031250]
[103.22912598 157.77104187]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.75270844 60.75823212]
[79.21303558 46.18185806]
[75.67336273 31.60548210]
[65.08456421 24.24069214]
[62.43644714 12.02712345]
[68.61560059 1.62786210]
[65.29334259 -12.99959850]
[61.97108078 -27.62705803]
[58.64882278 -42.25451660]
[48.17084503 -49.77614594]
[45.70486450 -62.02778625]
[52.03816223 -72.33389282]
[48.93405151 -87.00920105]
[45.91865921 -90.13351440]
[44.22468567 -93.69651794]
[43.82778168 -97.22891998]
[44.55368042 -100.31755829]
[46.10951614 -102.64940643]
[43.88439941 -117.48345184]
[41.65928268 -132.31748962]
[39.43416214 -147.15153503]
[37.20904541 -161.98558044]
[34.98392868 -176.81962585]
[25.09440994 -185.09973145]
[23.54649353 -197.50085449]
[30.62878227 -207.30737305]
[28.62476730 -222.17289734]
[26.62075424 -237.03842163]
[24.61674118 -251.90396118]
[22.61272812 -266.76947021]
[13.10107422 -279.41223145]
[19.06863594 -293.05911255]
[17.06462288 -307.92465210]
[1.49530518 -311.93771362]
[-11.31121063 -321.59500122]
[-19.41173935 -335.39419556]
[-21.59139442 -351.20724487]
[-17.54571915 -366.60879517]
[-7.92281389 -379.24795532]
[5.78028011 -387.20730591]
[3.55516315 -402.04135132]
[1.33004594 -416.87539673]
[-13.66356468 -418.56478882]
[-27.70867920 -424.07815552]
[-39.84767914 -433.03958130]
[-49.25290680 -444.83804321]
[-55.28309631 -458.66915894]
[-57.52709961 -473.58984375]
[-55.83191681 -488.58279419]
[-50.31313324 -502.62579346]
[-41.34702301 -514.76129150]
[-29.54491234 -524.16198730]
[-15.71148872 -530.18682861]
[-0.78993809 -532.42510986]
[14.20236397 -530.72412109]
[28.24321747 -525.19989014]
[40.37529373 -516.22912598]
[49.77140427 -504.42337036]
[55.79091263 -490.58761597]
[58.02339172 -475.66522217]
[56.31663513 -460.67355347]
[50.78700638 -446.63485718]
[41.81152725 -434.50622559]
[30.00216103 -425.11468506]
[16.16408920 -419.10052490]
[18.38920593 -404.26647949]
[20.61432457 -389.43243408]
[34.35190582 -386.56567383]
[46.31126022 -379.16619873]
[55.04510117 -368.10549927]
[59.48830032 -354.69952393]
[59.08778763 -340.55221558]
[53.87129211 -327.36352539]
[44.44646072 -316.72521973]
[31.93015099 -309.92864990]
[33.93416595 -295.06314087]
[43.30247498 -283.48367310]
[37.47825623 -268.77349854]
[39.48226929 -253.90797424]
[41.48628235 -239.04243469]
[43.49029541 -224.17691040]
[45.49430847 -209.31138611]
[56.95344543 -196.02021790]
[49.81797409 -179.04473877]
[52.04309082 -164.21069336]
[54.26820755 -149.37666321]
[56.49332428 -134.54261780]
[58.71844101 -119.70857239]
[60.94355774 -104.87452698]
[63.60935593 -90.11331177]
[66.71346283 -75.43800354]
[79.12940979 -63.03594208]
[73.27628326 -45.57677841]
[76.59854126 -30.94931793]
[79.92079926 -16.32185745]
[83.24305725 -1.69439745]
[95.84227753 10.52143669]
[90.24974060 28.06580925]
[93.78941345 42.64218521]
[97.32908630 57.21855927]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[120.51218414 124.60139465]
[126.80767059 110.98644257]
[135.84735107 99.01630402]
[147.21997070 89.23554230]
[160.40817261 82.08911133]
[174.81196594 77.90212250]
[189.77606201 76.86506653]
[204.61972046 79.02511597]
[218.66764832 84.28400421]
[231.28074646 92.40248108]
[241.88520813 103.01122284]
[249.99859619 115.62759399]
[255.25183105 129.67762756]
[257.40588379 144.52215576]
[256.36279297 159.48585510]
[252.17001343 173.88795471]
[245.01826477 187.07325745]
[235.23291016 198.44194031]
[223.25912476 207.47679138]
[209.64164734 213.76679993]
[194.99995422 217.02578735]
[180.00016785 217.10549927]
[165.32466125 214.00231934]
[151.64109802 207.85742188]
[139.57196045 198.95034790]
[129.66632080 187.68630981]
[122.37483978 174.57775879]
[118.02839661 160.21678162]
[115.58267212 175.01605225]
[113.13694000 189.81532288]
[110.69121552 204.61459351]
[119.62474060 217.37507629]
[116.93360138 232.34880066]
[104.71337891 240.78691101]
[102.26765442 255.58618164]
[99.82192230 270.38543701]
[97.37619781 285.18472290]
[99.04881287 289.19174194]
[99.33094788 293.12683105]
[98.41597748 296.56170654]
[96.61647797 299.17483521]
[94.31911469 300.78115845]
[90.99685669 315.40859985]
[87.67459106 330.03607178]
[84.35233307 344.66351318]
[88.84095764 359.83465576]
[78.47692871 370.53213501]
[84.67781830 381.84194946]
[81.60956573 393.95678711]
[71.44573975 400.51599121]
[67.90606689 415.09237671]
[64.36639404 429.66873169]
[60.82672119 444.24511719]
[57.28704834 458.82150269]
[53.74737549 473.39785767]
[50.20770264 487.97424316]
[63.20083237 495.69888306]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 209]
[19 208]
[20 207]
[21 206]
[22 205]
[23 204]
[24 203]
[26 200]
[28 198]
[29 197]
[30 196]
[31 195]
[32 190]
[33 189]
[34 188]
[35 187]
[38 184]
[39 183]
[40 182]
[41 181]
[42 153]
[43 152]
[44 151]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[53 143]
[54 142]
[55 141]
[56 140]
[59 138]
[60 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[79 123]
[80 122]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
