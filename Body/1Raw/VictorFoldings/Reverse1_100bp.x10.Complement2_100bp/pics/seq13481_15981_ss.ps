%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-37.94628525 290.23510742]
[-33.03767776 304.42395020]
[-29.63912010 319.04815674]
[-27.78785133 333.94750977]
[-27.50415421 348.95874023]
[-28.79113770 363.91738892]
[-31.63469887 378.65957642]
[-36.00368500 393.02377319]
[-41.85022354 406.85256958]
[-49.11026001 419.99444580]
[-57.70424652 432.30548096]
[-67.53802490 443.65072632]
[-78.50385284 453.90588379]
[-90.48157501 462.95861816]
[-103.33996582 470.70971680]
[-116.93813324 477.07424927]
[-131.12710571 481.98251343]
[-145.75138855 485.38070679]
[-160.65078735 487.23162842]
[-175.66203308 487.51495361]
[-190.62065125 486.22760010]
[-205.36276245 483.38369751]
[-219.72683716 479.01434326]
[-233.55549622 473.16748047]
[-246.69721985 465.90713501]
[-259.00802612 457.31283569]
[-270.35302734 447.47879028]
[-280.60791016 436.51269531]
[-289.66036987 424.53475952]
[-297.41113281 411.67617798]
[-303.77536011 398.07785034]
[-308.68328857 383.88879395]
[-312.08111572 369.26440430]
[-313.93167114 354.36495972]
[-314.21463013 339.35372925]
[-312.92694092 324.39514160]
[-310.08264160 309.65307617]
[-305.71298218 295.28912354]
[-299.86575317 281.46060181]
[-292.60507202 268.31906128]
[-284.01049805 256.00845337]
[-274.17617798 244.66369629]
[-263.20983887 234.40905762]
[-251.23167419 225.35691833]
[-238.37290955 217.60644531]
[-224.77442932 211.24255371]
[-210.58523560 206.33497620]
[-195.96076965 202.93748474]
[-181.06129456 201.08731079]
[-166.05003357 200.80470276]
[-151.09147644 202.09277344]
[-136.34950256 204.93740845]
[-121.98564148 209.30744934]
[-108.15726471 215.15499878]
[-95.01589203 222.41598511]
[-82.70550537 231.01086426]
[-71.36098480 240.84547424]
[-60.40507126 230.60008240]
[-56.39392853 216.25575256]
[-41.02958679 212.48114014]
[-30.07367706 202.23574829]
[-19.11776924 191.99035645]
[-8.16185951 181.74497986]
[2.79405046 171.49958801]
[5.53242493 164.63494873]
[13.99018002 161.18470764]
[25.09741402 151.10357666]
[36.20464706 141.02243042]
[21.57712173 137.70045471]
[14.91702652 124.26010895]
[21.13393593 110.60910034]
[35.64497375 106.81044769]
[47.75314713 115.66438293]
[48.53339005 130.64257812]
[60.35965729 121.41548920]
[72.18592834 112.18839264]
[84.01219940 102.96128845]
[86.13310242 91.50952148]
[95.36849976 84.41384125]
[106.98011780 85.31473541]
[118.94245911 76.26473236]
[130.83708191 67.12593079]
[142.66336060 57.89883423]
[154.48962402 48.67173767]
[166.31590271 39.44463730]
[178.14216614 30.21754074]
[184.26295471 15.62827682]
[199.05688477 13.89945126]
[205.17765808 -0.68981212]
[219.97160339 -2.41863799]
[231.79786682 -11.64573669]
[223.40512085 -24.08529282]
[215.89060974 -37.07423782]
[209.29011536 -50.55066681]
[203.63511658 -64.45036316]
[198.95254517 -78.70709229]
[195.26472473 -93.25290680]
[192.58923340 -108.01848602]
[190.93881226 -122.93347168]
[190.32133484 -137.92678833]
[190.73973083 -152.92697144]
[192.19201660 -167.86254883]
[194.67126465 -182.66233826]
[198.16567993 -197.25582886]
[202.65858459 -211.57345581]
[208.12857056 -225.54699707]
[214.54959106 -239.10986328]
[221.89102173 -252.19741821]
[230.11790466 -264.74728394]
[239.19100952 -276.69967651]
[249.06710815 -287.99758911]
[259.69912720 -298.58724976]
[271.03640747 -308.41815186]
[283.02493286 -317.44345093]
[295.60757446 -325.62014771]
[308.72433472 -332.90924072]
[322.31271362 -339.27603149]
[336.30801392 -344.69018555]
[350.64346313 -349.12588501]
[365.25079346 -352.56198120]
[380.06036377 -354.98211670]
[395.00161743 -356.37472534]
[410.00335693 -356.73321533]
[424.99407959 -356.05587769]
[439.90237427 -354.34588623]
[454.65713501 -351.61145020]
[469.18811035 -347.86557007]
[483.42602539 -343.12609863]
[497.30300903 -337.41564941]
[510.75299072 -330.76138306]
[523.71179199 -323.19503784]
[536.11773682 -314.75268555]
[547.91168213 -305.47454834]
[559.03741455 -295.40484619]
[569.44189453 -284.59155273]
[579.07556152 -273.08618164]
[587.89245605 -260.94360352]
[595.85070801 -248.22166443]
[602.91223145 -234.98098755]
[609.04339600 -221.28468323]
[614.21508789 -207.19799805]
[618.40258789 -192.78808594]
[621.58593750 -178.12361145]
[623.75000000 -163.27444458]
[624.88439941 -148.31137085]
[624.98376465 -133.30567932]
[624.04766846 -118.32888031]
[622.08050537 -103.45235443]
[619.09173584 -88.74699402]
[615.09545898 -74.28287506]
[610.11083984 -60.12892532]
[604.16162109 -46.35259628]
[597.27612305 -33.01954269]
[589.48712158 -20.19329643]
[580.83178711 -7.93498611]
[571.35137939 3.69697309]
[561.09106445 14.64714909]
[550.09973145 24.86335945]
[538.42974854 34.29691696]
[526.13671875 42.90286636]
[513.27923584 50.64019775]
[499.91860962 57.47203827]
[486.11846924 63.36583328]
[471.94461060 68.29348755]
[457.46453857 72.23152924]
[442.74725342 75.16118622]
[427.86294556 77.06848907]
[412.88250732 77.94436646]
[397.87734985 77.78462982]
[382.91894531 76.59004974]
[368.07861328 74.36631012]
[353.42706299 71.12401581]
[339.03408813 66.87860870]
[324.96832275 61.65033340]
[311.29678345 55.46409607]
[298.08459473 48.34937668]
[285.39477539 40.34008408]
[273.28775024 31.47438812]
[261.82122803 21.79453468]
[251.04985046 11.34665298]
[241.02496338 0.18053353]
[229.19869995 9.40763187]
[223.92381287 23.33691025]
[208.28398132 25.72572136]
[203.00909424 39.65499878]
[187.36926270 42.04380798]
[175.54299927 51.27090836]
[163.71672058 60.49800491]
[151.89045715 69.72510529]
[140.06419373 78.95220184]
[136.72430420 85.54515076]
[127.99245453 88.22707367]
[116.03012085 97.27706909]
[109.90630341 112.89357758]
[93.23929596 114.78755951]
[81.41302490 124.01465607]
[69.58675385 133.24176025]
[57.76048660 142.46885681]
[46.28578568 152.12966919]
[35.17855453 162.21080017]
[24.07131958 172.29194641]
[13.03944206 182.45549011]
[2.08353257 192.70088196]
[-8.87237644 202.94627380]
[-19.82828712 213.19166565]
[-30.78419495 223.43705750]
[-35.57897949 238.51420593]
[-50.15967941 241.55599976]
[-61.11558914 251.80139160]
[-52.06257629 263.77890015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 209]
[58 208]
[60 206]
[61 205]
[62 204]
[63 203]
[64 202]
[66 201]
[67 200]
[68 199]
[74 198]
[75 197]
[76 196]
[77 195]
[80 193]
[81 192]
[82 190]
[83 189]
[84 188]
[85 187]
[86 186]
[88 184]
[90 182]
[91 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
