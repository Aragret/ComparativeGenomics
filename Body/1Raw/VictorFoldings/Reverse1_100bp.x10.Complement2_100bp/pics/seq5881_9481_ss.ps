%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[70.43728638 390.54583740]
[55.37865448 392.44372559]
[40.65224457 388.76986694]
[28.24968910 380.02108765]
[19.84832954 367.38061523]
[16.58437920 352.55795288]
[18.89926338 337.55776978]
[26.47990990 324.40869141]
[38.30110168 314.88903809]
[52.76411819 310.28625488]
[53.65693283 295.31283569]
[46.69089127 282.14761353]
[55.23587418 268.83242798]
[56.12869263 253.85902405]
[47.26369858 265.95910645]
[34.06752396 273.09078979]
[19.08814621 273.87707520]
[5.21784735 268.16613770]
[-4.86523533 257.06066895]
[-9.21421719 242.70497131]
[-6.98937702 227.87088013]
[1.37970281 215.42265320]
[14.27708435 207.76382446]
[29.21248436 206.37321472]
[43.30211258 211.51931763]
[53.82548141 222.20849609]
[58.75083923 236.37812805]
[62.29051208 221.80174255]
[65.83018494 207.22537231]
[69.26124573 192.62304688]
[64.53499603 178.49818420]
[75.13665009 166.75444031]
[78.45890808 152.12698364]
[76.71685791 147.68014526]
[77.74979401 142.09176636]
[82.10398102 137.11656189]
[85.86028290 122.59450531]
[89.61658478 108.07244873]
[79.82908630 119.43928528]
[67.78491974 128.38008118]
[54.07172775 134.45860291]
[39.35861969 137.37826538]
[24.36347389 136.99661255]
[9.81794262 133.33226013]
[-3.56826925 126.56399536]
[-15.14201832 117.02207184]
[-24.33859444 105.17205048]
[-30.70927811 91.59212494]
[-33.94322586 76.94488525]
[-33.88265228 61.94500732]
[-30.53050804 47.32436752]
[-24.05035210 33.79633713]
[-14.75836849 22.02098083]
[-3.10793066 12.57284355]
[10.33250904 5.91292095]
[24.90716171 2.36616468]
[39.90489960 2.10562968]
[54.59394836 5.14402771]
[68.25759888 11.33310890]
[80.22916412 20.37089348]
[89.92453003 31.81640816]
[96.87064362 45.11120224]
[100.72858429 59.60659409]
[101.31010437 74.59531403]
[98.58876038 89.33970642]
[107.54945374 77.31032562]
[116.51015472 65.28095245]
[115.41996002 52.42893600]
[123.13098907 42.59411240]
[135.08026123 40.71225739]
[144.21907043 28.81762505]
[153.35786438 16.92299271]
[138.38310242 17.79263878]
[127.08819580 7.92222738]
[125.94338226 -7.03402233]
[135.60446167 -18.50849152]
[150.53713989 -19.92808151]
[162.18728638 -10.47958851]
[163.88143921 4.42354822]
[174.04498291 -6.60832930]
[184.20852661 -17.64020729]
[194.37207031 -28.67208290]
[203.42207336 -40.63441849]
[211.27383423 -53.41526413]
[219.12559509 -66.19610596]
[226.97734070 -78.97695160]
[234.82910156 -91.75778961]
[242.68086243 -104.53863525]
[249.05946350 -118.11483765]
[246.17352295 -133.67060852]
[257.59420776 -143.23182678]
[262.42022705 -157.43428040]
[267.24621582 -171.63673401]
[272.07220459 -185.83920288]
[276.89822388 -200.04165649]
[281.72421265 -214.24411011]
[286.55020142 -228.44656372]
[283.66427612 -244.00233459]
[295.08496094 -253.56355286]
[281.90057373 -260.79840088]
[270.17291260 -270.21292114]
[260.25839233 -281.52102661]
[252.45829773 -294.37908936]
[247.00964355 -308.39633179]
[244.07803345 -323.14682007]
[243.75253296 -338.18228149]
[246.04306030 -353.04583740]
[250.87998962 -367.28573608]
[258.11633301 -380.46929932]
[267.53219604 -392.19589233]
[278.84143066 -402.10913086]
[291.70034790 -409.90777588]
[305.71823120 -415.35482788]
[320.46905518 -418.28479004]
[335.50454712 -418.60858154]
[350.36782837 -416.31637573]
[364.60717773 -411.47781372]
[377.78994751 -404.23999023]
[389.51544189 -394.82278442]
[399.42739868 -383.51245117]
[407.22460938 -370.65261841]
[412.67007446 -356.63412476]
[415.59832764 -341.88299561]
[415.92041016 -326.84744263]
[413.62652588 -311.98443604]
[408.78637695 -297.74560547]
[401.54702759 -284.56369019]
[392.12850952 -272.83923340]
[380.81704712 -262.92855835]
[367.95632935 -255.13284302]
[353.93722534 -249.68894958]
[339.18576050 -246.76235962]
[324.15017700 -246.44198608]
[309.28741455 -248.73756409]
[312.51855469 -234.19764709]
[300.75265503 -223.62055969]
[295.92666626 -209.41810608]
[291.10067749 -195.21565247]
[286.27465820 -181.01319885]
[281.44866943 -166.81074524]
[276.62268066 -152.60829163]
[271.79666138 -138.40583801]
[275.02780151 -123.86592102]
[263.26190186 -113.28884125]
[274.48385620 -123.24213409]
[288.51797485 -128.53771973]
[303.51788330 -128.47888184]
[317.51000977 -123.07334900]
[328.65353394 -113.03231812]
[335.48226929 -99.67685699]
[337.09780884 -84.76411438]
[333.28759766 -70.25610352]
[324.55291748 -58.06161499]
[312.04299927 -49.78503799]
[297.40368652 -46.51530457]
[282.56109619 -48.68259430]
[269.46798706 -56.00177002]
[259.84698486 -67.50986481]
[254.96389771 -81.69279480]
[255.46170044 -96.68687439]
[247.60993958 -83.90603638]
[239.75819397 -71.12519073]
[231.90643311 -58.34434891]
[224.05467224 -45.56350708]
[216.20292664 -32.78266525]
[229.58349609 -39.56204605]
[244.56039429 -40.39431000]
[258.60974121 -35.13920212]
[269.36395264 -24.68229866]
[275.01077271 -10.78577518]
[274.59863281 4.20856142]
[268.19692993 17.77390289]
[256.88452148 27.62424850]
[242.56771851 32.09964371]
[227.65916443 30.44590569]
[214.67120361 22.94171906]
[205.79252625 10.85166931]
[202.51937866 -3.78685617]
[205.40396118 -18.50853729]
[195.24040222 -7.47665930]
[185.07685852 3.55521774]
[174.91331482 14.58709526]
[165.25250244 26.06179428]
[156.11370850 37.95642853]
[146.97489929 49.85105896]
[145.61431885 67.34722137]
[128.53953552 74.24164581]
[119.57883453 86.27102661]
[110.61814117 98.30039978]
[104.13864136 111.82874298]
[100.38233948 126.35080719]
[96.62603760 140.87286377]
[93.08636475 155.44923401]
[89.76410675 170.07670593]
[94.25273132 185.24781799]
[83.88870239 195.94531250]
[85.03969574 205.00692749]
[80.40656281 210.76504517]
[76.86688995 225.34141541]
[73.32721710 239.91780090]
[71.10209656 254.75184631]
[70.20928192 269.72525024]
[77.11146545 283.96148682]
[68.63034058 296.20565796]
[67.73752594 311.17907715]
[81.55110931 317.46789551]
[92.15731049 328.32482910]
[98.12172699 342.28155518]
[98.63771820 357.45053101]
[93.63550568 371.78030396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[13 202]
[14 201]
[27 200]
[28 199]
[29 198]
[30 196]
[32 194]
[33 193]
[36 192]
[37 191]
[38 190]
[65 189]
[66 188]
[67 187]
[70 185]
[71 184]
[72 183]
[79 182]
[80 181]
[81 180]
[82 179]
[83 165]
[84 164]
[85 163]
[86 162]
[87 161]
[88 160]
[89 144]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
