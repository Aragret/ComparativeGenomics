%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[72.69384003 683.96636963]
[58.57952499 689.08819580]
[43.99417114 692.65399170]
[29.10878563 694.62188721]
[14.09789467 694.96881104]
[-0.86251020 693.69067383]
[-15.59702396 690.80255127]
[-29.93289185 686.33825684]
[-43.70203400 680.35009766]
[-56.74301529 672.90832520]
[-68.90293121 664.10015869]
[-80.03922272 654.02886963]
[-90.02131653 642.81262207]
[-98.73217773 630.58276367]
[-106.06967163 617.48284912]
[-111.94777679 603.66638184]
[-116.29757690 589.29534912]
[-119.06806946 574.53826904]
[-120.22676849 559.56811523]
[-119.76009369 544.56048584]
[-117.67351532 529.69128418]
[-113.99150085 515.13482666]
[-108.75720978 501.06182861]
[-102.03202057 487.63726807]
[-93.89477539 475.01852417]
[-84.44089508 463.35354614]
[-73.78119659 452.77914429]
[-62.04068375 443.41925049]
[-49.35699463 435.38363647]
[-35.87884140 428.76647949]
[-21.76424789 423.64541626]
[-7.17870140 420.08041382]
[7.70678949 418.11334229]
[22.71770096 417.76721191]
[37.67803574 419.04614258]
[40.56330872 404.32623291]
[43.44858170 389.60635376]
[36.96254349 379.39566040]
[39.24584198 367.10867310]
[49.61066818 359.43188477]
[52.71477890 344.75659180]
[55.81888962 330.08126831]
[58.81366348 315.38327026]
[61.69893646 300.66339111]
[64.58421326 285.94348145]
[67.46948242 271.22360229]
[70.35475159 256.50369263]
[73.13036346 241.76274109]
[75.79615784 227.00152588]
[68.98098755 210.82994080]
[80.99216461 196.87239075]
[83.43788910 182.07312012]
[85.88362122 167.27384949]
[87.77690887 152.39381409]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[97.48118591 32.78971100]
[98.59683228 17.83125687]
[85.07772827 10.93854141]
[75.25399017 -0.57393920]
[70.59891510 -14.93165207]
[71.79223633 -29.93710327]
[78.62107086 -43.30616760]
[90.01707458 -53.01577377]
[104.22348022 -57.61003113]
[105.33913422 -72.56848907]
[106.45478058 -87.52693939]
[107.57042694 -102.48538971]
[100.88096619 -116.82281494]
[109.54344940 -128.93936157]
[101.16516876 -145.33709717]
[111.60401154 -159.44375610]
[112.49682617 -174.41716003]
[113.38964081 -189.39056396]
[110.77693939 -195.46388245]
[111.51307678 -201.09906006]
[114.53851318 -204.79443359]
[115.87674713 -219.73461914]
[117.21498108 -234.67480469]
[118.55321503 -249.61499023]
[104.52037811 -255.17910767]
[92.63597870 -264.46261597]
[83.85791016 -276.70642090]
[78.89060974 -290.91323853]
[78.12857819 -305.92895508]
[81.62503815 -320.53616333]
[89.08830261 -333.55310059]
[99.90612793 -343.92904663]
[113.19588470 -350.82931519]
[127.87660217 -353.70227051]
[129.21482849 -368.64245605]
[130.55307007 -383.58264160]
[116.38156128 -388.76248169]
[104.03413391 -397.43447876]
[94.35266113 -409.00735474]
[87.99723816 -422.69204712]
[85.40119171 -437.55554199]
[86.74151611 -452.58438110]
[91.92683411 -466.75387573]
[100.60359192 -479.09796143]
[112.18020630 -488.77496338]
[125.86736298 -495.12509155]
[140.73184204 -497.71539307]
[155.76016235 -496.36926270]
[169.92765808 -491.17849731]
[182.26838684 -482.49694824]
[191.94091797 -470.91659546]
[198.28576660 -457.22702026]
[200.87034607 -442.36154175]
[199.51841736 -427.33374023]
[194.32215881 -413.16824341]
[185.63586426 -400.83087158]
[174.05177307 -391.16281128]
[160.35972595 -384.82324219]
[145.49325562 -382.24441528]
[144.15501404 -367.30422974]
[142.81678772 -352.36404419]
[156.75321960 -346.92776489]
[168.60511780 -337.77548218]
[177.40670776 -325.64218140]
[182.43780518 -311.50607300]
[183.28260803 -296.51000977]
[179.86412048 -281.86877441]
[172.45106506 -268.77087402]
[161.63676453 -258.28201294]
[148.29170227 -251.25839233]
[133.49339294 -248.27674866]
[132.15516663 -233.33656311]
[130.81692505 -218.39637756]
[129.47869873 -203.45619202]
[128.36305237 -188.49774170]
[127.47023010 -173.52433777]
[126.57741547 -158.55093384]
[134.36946106 -149.29833984]
[133.74818420 -136.81643677]
[124.50189972 -127.82371521]
[131.27116394 -114.55622101]
[122.52888489 -101.36974335]
[121.41323090 -86.41129303]
[120.29758453 -71.45283508]
[119.18193817 -56.49438477]
[132.54965210 -49.84355927]
[142.37924194 -38.55088043]
[147.14933777 -24.31673241]
[146.10353088 -9.30027866]
[139.37011719 4.20804405]
[127.94729614 14.13588810]
[113.55529022 18.94690514]
[112.43963623 33.90535736]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[102.71709442 153.73204041]
[115.72590637 146.26405334]
[129.73091125 151.63618469]
[134.40814209 165.88833618]
[126.30971527 178.51432800]
[111.40550232 180.20675659]
[100.68289185 169.71957397]
[98.23716736 184.51884460]
[95.79143524 199.31811523]
[102.65450287 210.23878479]
[100.31277466 222.51478577]
[90.55738068 229.66732788]
[87.89158630 244.42854309]
[89.44604492 253.42973328]
[85.07464600 259.38897705]
[82.18937683 274.10888672]
[79.30410004 288.82876587]
[76.41883087 303.54864502]
[73.53355408 318.26855469]
[74.95383453 327.29187012]
[70.49419403 333.18539429]
[67.39008331 347.86068726]
[64.28597260 362.53598022]
[70.39839172 379.90606689]
[58.16847229 392.49160767]
[55.28319931 407.21151733]
[52.39792633 421.93139648]
[66.73403931 426.39495850]
[80.50350189 432.38235474]
[93.54488373 439.82342529]
[105.70527649 448.63095093]
[116.84210205 458.70159912]
[126.82479858 469.91735840]
[135.53631592 482.14669800]
[142.87452698 495.24621582]
[148.75337219 509.06237793]
[153.10394287 523.43316650]
[155.87522888 538.19012451]
[157.03472900 553.16021729]
[156.56886292 568.16784668]
[154.48309326 583.03717041]
[150.80184937 597.59381104]
[145.56832886 611.66711426]
[138.84385681 625.09204102]
[130.70729065 637.71124268]
[121.25403595 649.37670898]
[110.59490967 659.95166016]
[98.85489655 669.31219482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 189]
[36 188]
[37 187]
[40 185]
[41 184]
[42 183]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 175]
[49 174]
[51 171]
[52 170]
[53 169]
[54 163]
[55 162]
[56 161]
[57 160]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[70 146]
[71 145]
[72 144]
[73 143]
[75 141]
[77 138]
[78 137]
[79 136]
[82 135]
[83 134]
[84 133]
[85 132]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
