%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[234.13989258 425.23480225]
[242.67248535 412.87042236]
[252.77699280 401.75366211]
[264.27313232 392.08294678]
[256.23193359 379.42041016]
[248.19076538 366.75790405]
[240.14959717 354.09536743]
[225.60206604 351.11129761]
[217.26678467 338.38424683]
[220.49539185 323.14569092]
[212.45422363 310.48315430]
[204.41305542 297.82061768]
[196.09111023 285.34085083]
[187.49253845 273.04998779]
[178.89398193 260.75915527]
[170.29541016 248.46832275]
[161.69685364 236.17749023]
[153.09828186 223.88664246]
[147.95660400 237.97789001]
[133.78311157 242.88829041]
[121.02597046 234.99807739]
[119.08927917 220.12362671]
[129.40069580 209.22982788]
[144.35757446 210.34637451]
[136.69699097 197.45004272]
[129.03639221 184.55371094]
[127.03050232 199.41899109]
[117.38757324 210.90872192]
[103.09557343 215.46269226]
[88.58302307 211.66979980]
[78.34680939 200.70532227]
[75.55871582 185.96672058]
[81.08267975 172.02090454]
[93.20703125 163.18913269]
[108.17491150 162.20803833]
[121.34854889 169.38180542]
[115.47958374 155.57762146]
[109.61062622 141.77345276]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[76.58519745 64.09551239]
[70.71623993 50.29133224]
[64.84727478 36.48715591]
[58.77344513 22.77188873]
[52.49608231 9.14857292]
[39.69366074 -0.14704658]
[41.39459229 -14.94421196]
[35.11723328 -28.56752777]
[28.83987236 -42.19084549]
[22.40633965 -48.67524719]
[22.57215309 -56.06404114]
[16.49831963 -69.77930450]
[1.37460184 -80.28429413]
[3.92293429 -97.64727020]
[-2.35442638 -111.27058411]
[-8.63178730 -124.89389801]
[-14.90914822 -138.51721191]
[-21.18650818 -152.14053345]
[-27.46386909 -165.76385498]
[-40.26629257 -175.05946350]
[-38.56535721 -189.85662842]
[-44.84272003 -203.47994995]
[-51.12007904 -217.10325623]
[-57.39744186 -230.72657776]
[-63.67480087 -244.34989929]
[-69.95216370 -257.97320557]
[-84.33985901 -253.64419556]
[-99.19002533 -251.35975647]
[-114.21360779 -251.16438293]
[-129.11816406 -253.06185913]
[-143.61355591 -257.01525879]
[-157.41766357 -262.94763184]
[-170.26174927 -270.74346924]
[-181.89582825 -280.25106812]
[-192.09341431 -291.28536987]
[-200.65603638 -303.63153076]
[-207.41699219 -317.04925537]
[-212.24468994 -331.27737427]
[-215.04516602 -346.03894043]
[-215.76388550 -361.04660034]
[-214.38688660 -376.00820923]
[-210.94094849 -390.63256836]
[-205.49316406 -404.63497925]
[-198.14956665 -417.74288940]
[-189.05310059 -429.70117188]
[-178.38084412 -440.27703857]
[-166.34051514 -449.26464844]
[-153.16650391 -456.48901367]
[-139.11523438 -461.80950928]
[-124.46021271 -465.12261963]
[-109.48671722 -466.36383057]
[-94.48620605 -465.50897217]
[-79.75067139 -462.57467651]
[-65.56693268 -457.61810303]
[-52.21109390 -450.73565674]
[-39.94312668 -442.06140137]
[-29.00182724 -431.76409912]
[-19.60017395 -420.04425049]
[-11.92117310 -407.12994385]
[-6.11429644 -393.27258301]
[-2.29257822 -378.74191284]
[-0.53040880 -363.82077026]
[-0.86208951 -348.79956055]
[-3.28116393 -333.97073364]
[-7.74054432 -319.62292480]
[-14.15342712 -306.03536987]
[-22.39498329 -293.47262573]
[-32.30479050 -282.17919922]
[-43.68994904 -272.37487793]
[-56.32884598 -264.25057983]
[-50.05148315 -250.62725830]
[-43.77412415 -237.00393677]
[-37.49676514 -223.38063049]
[-31.21940231 -209.75730896]
[-24.94204140 -196.13398743]
[-12.58861828 -187.81280518]
[-13.84055328 -172.04121399]
[-7.56319237 -158.41789246]
[-1.28583169 -144.79457092]
[4.99152899 -131.17126465]
[11.26888943 -117.54794312]
[17.54624939 -103.92462921]
[28.78195381 -99.44293976]
[34.12321854 -88.14450073]
[30.21358681 -75.85314178]
[36.28742218 -62.13787460]
[42.46318817 -48.46820450]
[48.74055099 -34.84488678]
[55.01791000 -21.22157288]
[67.37133789 -12.90038395]
[66.11940002 2.87121177]
[72.39675903 16.49452782]
[76.48741150 18.95940971]
[79.07306671 24.02018166]
[78.65145111 30.61819458]
[84.52041626 44.42237091]
[90.38937378 58.22654724]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[123.41480255 135.90449524]
[129.28376770 149.70866394]
[135.15272522 163.51284790]
[141.93270874 176.89311218]
[149.59330750 189.78944397]
[157.25390625 202.68577576]
[165.38912964 215.28808594]
[173.98768616 227.57891846]
[182.58625793 239.86976624]
[191.18481445 252.16059875]
[199.78338623 264.45144653]
[208.38194275 276.74227905]
[213.11259460 278.94863892]
[216.21376038 282.40350342]
[217.48275757 286.27709961]
[217.07557678 289.77944946]
[225.11674500 302.44198608]
[233.15792847 315.10452271]
[248.32298279 318.66241455]
[256.29748535 331.61856079]
[252.81211853 346.05419922]
[260.85330200 358.71673584]
[268.89447021 371.37924194]
[276.93563843 384.04177856]
[290.57702637 377.74923706]
[304.93542480 373.33114624]
[319.75460815 370.86630249]
[334.77011108 370.39871216]
[349.71392822 371.93676758]
[364.31939697 375.45294189]
[378.32586670 380.88452148]
[391.48336792 388.13461304]
[403.55709839 397.07376099]
[414.33160400 407.54244995]
[423.61453247 419.35391235]
[431.24029541 432.29730225]
[437.07278442 446.14163208]
[441.00787354 460.63986206]
[442.97540283 475.53320312]
[442.94018555 490.55593872]
[440.90289307 505.43991089]
[436.89987183 519.91955566]
[431.00259399 533.73638916]
[423.31622314 546.64385986]
[413.97802734 558.41168213]
[403.15460205 568.82977295]
[391.03909302 577.71221924]
[377.84774780 584.90057373]
[363.81597900 590.26641846]
[349.19418335 593.71411133]
[334.24331665 595.18212891]
[319.23016357 594.64416504]
[304.42272949 592.10992432]
[290.08517456 587.62451172]
[276.47341919 581.26812744]
[263.83041382 573.15411377]
[252.38171387 563.42730713]
[242.33168030 552.26129150]
[233.85964966 539.85528564]
[227.11683655 526.43078613]
[222.22355652 512.22729492]
[219.26713562 497.49829102]
[218.30033875 482.50668335]
[219.34043884 467.51995850]
[222.36883545 452.80560303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[6 167]
[7 166]
[10 163]
[11 162]
[12 161]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[18 152]
[24 151]
[25 150]
[26 149]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 135]
[48 134]
[50 132]
[51 131]
[52 130]
[54 129]
[55 128]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
