%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[71.83695984 492.94009399]
[62.81976700 480.89489746]
[56.24533844 467.36074829]
[52.35132980 452.82687378]
[51.27851486 437.81869507]
[53.06567001 422.87872314]
[57.64819336 408.54705811]
[64.86042786 395.34173584]
[74.44165802 383.74017334]
[86.04552460 374.16171265]
[99.25255585 366.95263672]
[113.58533478 362.37356567]
[111.80286407 347.47982788]
[110.02040100 332.58612061]
[108.23793793 317.69241333]
[106.45546722 302.79867554]
[97.99210358 315.18301392]
[83.90497589 320.33596802]
[69.44824219 316.33560181]
[60.01390076 304.67401123]
[59.12072754 289.70062256]
[67.10186005 277.00015259]
[80.98052216 271.30960083]
[95.58032990 274.75134277]
[105.45636749 286.04281616]
[105.45636749 271.04281616]
[105.45636749 256.04281616]
[105.45636749 241.04281616]
[105.45636749 226.04281616]
[105.45636749 211.04281616]
[105.45636749 196.04281616]
[105.45636749 181.04281616]
[104.11813354 166.10263062]
[101.45233917 151.34141541]
[91.57632446 140.19181824]
[96.73789215 125.23625183]
[94.07209778 110.47503662]
[89.26258087 124.68308258]
[79.93778229 136.43246460]
[67.19316864 144.34289551]
[52.52596664 147.48504639]
[37.65925980 145.48979187]
[24.33957672 138.59152222]
[14.13170052 127.60065460]
[8.23484135 113.80837250]
[7.34175777 98.83498383]
[11.55736732 84.43954468]
[20.38642311 72.31322479]
[32.79169846 63.88059998]
[47.31583405 60.13233185]
[62.25254822 61.50876999]
[75.84709167 67.84820557]
[86.50238800 78.40588379]
[92.96709442 91.94301605]
[93.85990906 76.96961212]
[94.75272369 61.99620438]
[95.64553833 47.02280045]
[96.53835297 32.04939270]
[97.43116760 17.07598877]
[98.21249390 2.09635091]
[98.88227844 -12.88868809]
[99.21725464 -27.88494682]
[99.21725464 -42.88494873]
[99.21725464 -57.88494873]
[91.47994995 -71.68511963]
[99.21725464 -84.41239166]
[99.21725464 -99.41239166]
[91.79428101 -86.37783813]
[80.21011353 -76.84857178]
[65.98883820 -72.07832336]
[51.00150299 -72.69470978]
[37.21996307 -78.61663055]
[26.45740891 -89.06494904]
[20.12984085 -102.66501617]
[19.06976128 -117.62751007]
[23.41663933 -131.98385620]
[32.59857178 -143.84523010]
[45.40751266 -151.65106201]
[60.15822983 -154.37435913]
[74.91001129 -151.65682983]
[87.72200775 -143.85601807]
[96.90857697 -131.99822998]
[101.26133728 -117.64122772]
[104.58359528 -132.26869202]
[107.90585327 -146.89614868]
[111.22811127 -161.52360535]
[97.05876160 -166.49624634]
[83.54861450 -173.05168152]
[70.87381744 -181.10446167]
[59.19960785 -190.54960632]
[48.67818451 -201.26396179]
[39.44670868 -213.10784912]
[31.62554169 -225.92686462]
[25.31664276 -239.55387878]
[20.60226250 -253.81123352]
[17.54386139 -268.51306152]
[16.18131447 -283.46771240]
[16.53238297 -298.48019409]
[18.59248924 -313.35479736]
[22.33477974 -327.89758301]
[27.71046257 -341.91900635]
[34.64945602 -355.23620605]
[43.06129456 -367.67559814]
[52.83631516 -379.07501221]
[63.84707642 -389.28585815]
[75.95003510 -398.17495728]
[88.98740387 -405.62646484]
[102.78920746 -411.54321289]
[117.17551422 -415.84805298]
[131.95877075 -418.48492432]
[146.94625854 -419.41937256]
[161.94256592 -418.63928223]
[176.75218201 -416.15478516]
[191.18205261 -411.99826050]
[205.04405212 -406.22393799]
[218.15745544 -398.90704346]
[230.35128784 -390.14303589]
[241.46659851 -380.04611206]
[251.35847473 -368.74795532]
[259.89794922 -356.39581299]
[266.97366333 -343.15075684]
[272.49343872 -329.18542480]
[276.38525391 -314.68194580]
[278.59841919 -299.82934570]
[279.10403442 -284.82125854]
[277.89553833 -269.85339355]
[274.98864746 -255.12084961]
[270.42132568 -240.81570435]
[264.25305176 -227.12445068]
[256.56430054 -214.22560120]
[247.45524597 -202.28729248]
[237.04469299 -191.46517944]
[225.46835327 -181.90034485]
[212.87713623 -173.71748352]
[199.43521118 -167.02328491]
[185.31779480 -161.90502930]
[170.70896912 -158.42942810]
[155.79916382 -156.64178467]
[140.78277588 -156.56542969]
[125.85557556 -158.20133972]
[122.53330994 -143.57388306]
[119.21105194 -128.94642639]
[115.88879395 -114.31896210]
[114.21725464 -99.41239166]
[114.21725464 -84.41239166]
[121.95455170 -71.68511963]
[114.21725464 -57.88494873]
[114.21725464 -42.88494873]
[114.21725464 -27.88494682]
[116.43852234 -25.14664268]
[117.44382477 -21.19639969]
[116.67798615 -16.61744881]
[113.86731720 -12.21890259]
[113.19753265 2.76613593]
[116.03922272 9.58864021]
[112.40457916 17.96880341]
[111.51175690 32.94221115]
[110.61894226 47.91561508]
[109.72612762 62.88902283]
[108.83331299 77.86242676]
[107.94049835 92.83583069]
[108.83331299 107.80924225]
[111.49910736 122.57045746]
[121.56580353 134.77587891]
[116.21355438 148.67561340]
[118.87935638 163.43682861]
[124.63863373 149.58653259]
[135.77920532 139.54225159]
[150.14999390 135.24336243]
[164.97622681 137.51992798]
[177.39518738 145.93237305]
[185.00898743 158.85638428]
[186.34750366 173.79653931]
[181.15228271 187.86813354]
[170.42646790 198.35415649]
[156.24101257 203.22993469]
[141.33493042 201.55400085]
[128.58634949 193.64997864]
[120.45636749 181.04281616]
[120.45636749 196.04281616]
[120.45636749 211.04281616]
[120.45636749 226.04281616]
[120.45636749 241.04281616]
[120.45636749 256.04281616]
[120.45636749 271.04281616]
[120.45636749 286.04281616]
[121.34918976 301.01620483]
[123.13165283 315.90994263]
[124.91411591 330.80364990]
[126.69658661 345.69735718]
[128.47904968 360.59109497]
[143.48760986 361.65863037]
[158.02284241 365.54754639]
[171.55929565 372.11721802]
[183.60765076 381.13018799]
[193.73237610 392.26062012]
[201.56744385 405.10620117]
[206.82962036 419.20248413]
[209.32872009 434.03997803]
[208.97434998 449.08227539]
[205.77935791 463.78564453]
[199.85923767 477.61853027]
[191.42797852 490.08087158]
[180.79037476 500.72219849]
[168.33097839 509.15783691]
[154.50016785 515.08282471]
[139.79794312 518.28295898]
[124.75576019 518.64257812]
[109.91739655 516.14874268]
[95.81924438 510.89147949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 179]
[33 166]
[34 165]
[36 163]
[37 162]
[54 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[60 154]
[61 153]
[62 149]
[63 148]
[64 147]
[66 145]
[67 144]
[83 143]
[84 142]
[85 141]
[86 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
