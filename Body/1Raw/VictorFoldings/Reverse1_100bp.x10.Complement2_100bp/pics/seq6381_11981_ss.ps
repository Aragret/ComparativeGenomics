%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[-9.93609333 835.91564941]
[-22.64054680 843.92663574]
[-36.23318863 850.31567383]
[-50.50795364 854.98590088]
[-65.24844360 857.86639404]
[-80.23120117 858.91363525]
[-95.22908020 858.11169434]
[-110.01473236 855.47265625]
[-124.36399078 851.03668213]
[-138.05934143 844.87084961]
[-150.89315796 837.06878662]
[-162.67088318 827.74865723]
[-173.21397400 817.05175781]
[-182.36259460 805.14031982]
[-189.97807312 792.19488525]
[-195.94493103 778.41174316]
[-200.17272949 763.99975586]
[-202.59736633 749.17742920]
[-203.18209839 734.16949463]
[-201.91804504 719.20349121]
[-198.82438660 704.50622559]
[-193.94801331 690.30059814]
[-187.36283875 676.80187988]
[-179.16871643 664.21478271]
[-169.48985291 652.73004150]
[-158.47297668 642.52178955]
[-146.28509521 633.74481201]
[-133.11099243 626.53216553]
[-119.15037537 620.99310303]
[-104.61487579 617.21173096]
[-89.72485352 615.24530029]
[-74.70603943 615.12365723]
[-59.78610992 616.84857178]
[-56.24643707 602.27221680]
[-52.70676422 587.69580078]
[-49.16709137 573.11944580]
[-45.62741852 558.54309082]
[-42.08774567 543.96667480]
[-38.54807281 529.39031982]
[-35.00840378 514.81396484]
[-46.60573196 505.43484497]
[-53.00710297 491.89483643]
[-52.89441681 476.85659790]
[-46.23646545 463.30331421]
[-34.30573654 453.94677734]
[-19.43556404 450.68496704]
[-15.89589119 436.10858154]
[-29.86858177 441.56423950]
[-42.92172623 434.17401123]
[-45.43303299 419.38571167]
[-35.55125809 408.10073853]
[-20.56088066 408.63793945]
[-11.51258278 420.59970093]
[-6.89857340 406.32696533]
[-17.76619530 396.11129761]
[-23.14277840 382.13265991]
[-21.91191292 367.14447021]
[-14.26435280 354.12390137]
[-1.67076135 345.68066406]
[13.40082455 343.53387451]
[18.01483345 329.26113892]
[22.62884331 314.98840332]
[27.24285316 300.71566772]
[31.85686111 286.44293213]
[36.47087097 272.17022705]
[41.08488083 257.89749146]
[45.69889069 243.62474060]
[50.31290054 229.35202026]
[54.92690659 215.07928467]
[59.54091644 200.80654907]
[64.15493011 186.53381348]
[68.76893616 172.26107788]
[65.32169342 157.77088928]
[76.92879486 147.01980591]
[81.54280090 132.74707031]
[86.15681458 118.47433472]
[90.77082062 104.20160675]
[90.05668640 96.17274475]
[95.56123352 89.75162506]
[100.38722992 75.54917145]
[97.50129700 59.99340057]
[108.92198944 50.43218231]
[113.74798584 36.22972488]
[118.57398987 22.02726936]
[114.56897736 4.05391598]
[128.20779419 -6.98915911]
[132.82180786 -21.26189232]
[137.43582153 -35.53462601]
[142.04981995 -49.80735779]
[141.04125977 -56.34144974]
[143.16510010 -61.61272049]
[147.01953125 -64.43272400]
[152.05644226 -78.56175232]
[157.09336853 -92.69078064]
[156.27978516 -99.25199890]
[158.55963135 -104.45770264]
[162.49630737 -107.16168976]
[167.95167542 -121.13449097]
[173.40702820 -135.10728455]
[178.86238098 -149.08009338]
[165.97940063 -156.83486938]
[154.59239197 -166.65547180]
[145.02900696 -178.25933838]
[137.56439209 -191.31260681]
[132.41333008 -205.43968201]
[129.72399902 -220.23413086]
[129.57380676 -235.27026367]
[131.96705627 -250.11547852]
[136.83489990 -264.34265137]
[144.03726196 -277.54241943]
[153.36694336 -289.33499146]
[164.55548096 -299.38110352]
[177.28099060 -307.39169312]
[191.17730713 -313.13629150]
[205.84461975 -316.44958496]
[220.86091614 -317.23629761]
[235.79414368 -315.47372437]
[250.21466064 -311.21261597]
[263.70751953 -304.57559204]
[275.88455200 -295.75357056]
[286.39538574 -285.00039673]
[294.93759155 -272.62548828]
[301.26541138 -258.98483276]
[305.19674683 -244.47097778]
[306.61849976 -229.50144958]
[305.48980713 -214.50698853]
[301.84307861 -199.91899109]
[295.78326416 -186.15721130]
[287.48474121 -173.61756897]
[277.18624878 -162.66088867]
[265.18408203 -153.60240173]
[251.82360840 -146.70272827]
[237.48919678 -142.16038513]
[222.59329224 -140.10609436]
[207.56448364 -140.59893799]
[192.83517456 -143.62472534]
[187.37982178 -129.65193176]
[181.92446899 -115.67913055]
[176.46911621 -101.70633698]
[171.22239685 -87.65386200]
[166.18547058 -73.52483368]
[161.14855957 -59.39580536]
[156.32255554 -45.19335175]
[151.70855713 -30.92061615]
[147.09454346 -16.64788246]
[142.48052979 -2.37514973]
[147.70727539 8.53391933]
[143.98007202 20.46253014]
[132.77644348 26.85326767]
[127.95044708 41.05572128]
[123.12444305 55.25817871]
[126.35557556 69.79809570]
[114.58969116 80.37516785]
[109.76368713 94.57762146]
[105.04355621 108.81561279]
[100.42955017 123.08834839]
[95.81553650 137.36108398]
[91.20153046 151.63381958]
[94.31874847 167.14489746]
[83.04167175 176.87509155]
[78.42765808 191.14782715]
[73.81365204 205.42056274]
[69.19963837 219.69328308]
[64.58563232 233.96601868]
[59.97162247 248.23875427]
[55.35761261 262.51147461]
[50.74360657 276.78421021]
[46.12959671 291.05694580]
[41.51558685 305.32968140]
[36.90157700 319.60241699]
[32.28756714 333.87515259]
[27.67355919 348.14788818]
[38.63638687 358.71093750]
[43.90435791 372.92837524]
[42.48283005 387.96163940]
[34.70708084 400.83404541]
[22.16522789 409.02008057]
[7.37416029 410.94097900]
[2.76015091 425.21371460]
[-1.31951582 439.64825439]
[-4.85918808 454.22463989]
[6.85891724 463.94305420]
[13.16974258 477.72927856]
[12.87027645 492.82666016]
[6.07346725 506.24172974]
[-5.82479668 515.33795166]
[-20.43202591 518.35363770]
[-23.97169876 532.92999268]
[-27.51137161 547.50634766]
[-31.05104446 562.08276367]
[-34.59071732 576.65911865]
[-38.13039017 591.23547363]
[-41.67006302 605.81188965]
[-45.20973206 620.38824463]
[-31.16035843 625.69812012]
[-17.87001228 632.69427490]
[-5.54017496 641.27069092]
[5.64223814 651.29730225]
[15.50770473 662.62213135]
[23.90666580 675.07354736]
[30.71179581 688.46270752]
[35.81992722 702.58666992]
[39.15362930 717.23132324]
[40.66236115 732.17468262]
[40.32324600 747.19012451]
[38.14142990 762.05017090]
[34.14998627 776.52935791]
[28.40942574 790.40832520]
[21.00677299 803.47662354]
[12.05425072 815.53613281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[46 181]
[47 180]
[53 179]
[54 178]
[60 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[72 160]
[74 158]
[75 157]
[76 156]
[77 155]
[79 154]
[80 153]
[82 151]
[83 150]
[84 149]
[86 146]
[87 145]
[88 144]
[89 143]
[92 142]
[93 141]
[94 140]
[97 139]
[98 138]
[99 137]
[100 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
