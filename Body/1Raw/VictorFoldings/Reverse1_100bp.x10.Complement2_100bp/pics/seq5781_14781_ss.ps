%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[236.23002625 432.14511108]
[247.09016418 421.72668457]
[259.77432251 413.62741089]
[254.31896973 399.65460205]
[248.86361694 385.68182373]
[243.40826416 371.70901489]
[237.95291138 357.73623657]
[232.49754333 343.76342773]
[227.13665771 338.67593384]
[227.06669617 329.54174805]
[221.81997681 315.48928833]
[214.35223389 302.48034668]
[204.86332703 290.86306763]
[195.37443542 279.24581909]
[185.88552856 267.62854004]
[176.39663696 256.01129150]
[166.90774536 244.39402771]
[157.41883850 232.77676392]
[160.10176086 247.53486633]
[157.64355469 262.33206177]
[150.33299255 275.42999268]
[139.02893066 285.28991699]
[125.05934906 290.75350952]
[110.06538391 291.17892456]
[95.80850983 286.51614380]
[83.96360779 277.31295776]
[75.92220306 264.65057373]
[72.62900543 250.01655579]
[74.47087860 235.13006592]
[81.23145294 221.73997498]
[92.11650085 211.41932678]
[105.84725189 205.38058472]
[120.81063843 204.33317566]
[135.24877930 208.40014648]
[147.46658325 217.10482788]
[140.98709106 203.57649231]
[134.50759888 190.04814148]
[128.02809143 176.51979065]
[121.54859924 162.99145508]
[109.07265472 154.85510254]
[110.08963776 139.06661987]
[103.61013794 125.53827667]
[97.13064575 112.00992584]
[96.65020752 127.00223541]
[91.82887268 141.20626831]
[83.08373260 153.39324951]
[71.17133331 162.50888062]
[57.12221146 167.76457214]
[42.15176010 168.70564270]
[27.55507278 165.25068665]
[14.59490871 157.69857788]
[4.39245129 146.70268250]
[-2.16968441 133.21423340]
[-4.52380800 118.40010834]
[-2.46626496 103.54189301]
[3.82494736 89.92497253]
[13.80557537 78.72733307]
[26.61219597 70.91769409]
[41.13690948 67.17166138]
[56.12317657 67.81330872]
[70.27454376 72.78712463]
[82.36676788 81.66282654]
[91.35208893 93.66947174]
[88.90636444 78.87020111]
[86.46063995 64.07093048]
[84.01490784 49.27165985]
[81.45907593 34.49100876]
[78.79328156 19.72979164]
[71.71450806 32.95442581]
[58.66181946 40.34545517]
[43.67972946 39.61268234]
[31.41060257 30.98316956]
[25.65616035 17.13086319]
[28.19948006 2.34805179]
[38.25248718 -8.78465080]
[52.70014572 -12.81765366]
[67.06569672 -8.50128841]
[76.89791870 2.82720637]
[76.22813416 -12.15783215]
[75.55834961 -27.14287186]
[74.88856506 -42.12791061]
[74.21878052 -57.11294937]
[73.21451569 -72.07929230]
[71.87628174 -87.01947784]
[58.24918365 -97.98858643]
[56.80000305 -115.08287811]
[67.93884277 -127.68308258]
[66.37831879 -142.60168457]
[64.81779480 -157.52029419]
[63.25727463 -172.43888855]
[48.33729935 -174.64007568]
[34.43379593 -180.48330688]
[22.42074585 -189.60128784]
[13.05330276 -201.42083740]
[6.92031097 -215.19897461]
[4.40729475 -230.06961060]
[5.67222500 -245.09794617]
[10.63558674 -259.33929443]
[18.98538017 -271.89840698]
[30.19672775 -281.98587036]
[43.56487656 -288.96749878]
[58.24949646 -292.40447998]
[73.32749176 -292.08074951]
[87.85105133 -288.01663208]
[100.90721893 -280.46765137]
[111.67526245 -269.90829468]
[119.47829437 -257.00234985]
[123.82582092 -242.56108093]
[124.44454193 -227.49230957]
[121.29556274 -212.74324036]
[114.57683563 -199.24104309]
[104.71070862 -187.83445740]
[92.31737518 -179.24049377]
[78.17588043 -173.99942017]
[79.73640442 -159.08081055]
[81.29692078 -144.16220093]
[82.85744476 -129.24360657]
[93.90392303 -122.60998535]
[99.19164276 -110.64662170]
[96.58521271 -97.63059235]
[86.81646729 -88.35771179]
[88.15470123 -73.41752625]
[90.61141205 -70.88831329]
[91.96512604 -67.04351044]
[91.61086273 -62.41449738]
[89.20381927 -57.78273392]
[89.87360382 -42.79769516]
[90.54338837 -27.81265640]
[91.21317291 -12.82761765]
[91.88295746 2.15742111]
[93.55449677 17.06399536]
[96.22029114 31.82521248]
[100.50248718 37.84888458]
[98.81417847 46.82593536]
[101.25991058 61.62520599]
[103.70563507 76.42447662]
[106.15135956 91.22374725]
[110.65898895 105.53043365]
[117.13848877 119.05877686]
[123.61798096 132.58712769]
[136.55738831 141.69110107]
[135.07695007 156.51194763]
[141.55644226 170.04029846]
[148.03593445 183.56864929]
[154.51544189 197.09698486]
[160.99493408 210.62533569]
[169.03610229 223.28785706]
[178.52500916 234.90512085]
[188.01390076 246.52238464]
[197.50279236 258.13964844]
[206.99169922 269.75692749]
[216.48059082 281.37417603]
[225.96949768 292.99145508]
[222.69038391 278.35424805]
[223.25828552 263.36499023]
[227.63552856 249.01788330]
[235.53178406 236.26449585]
[246.42333984 225.95071411]
[259.58776855 218.76060486]
[274.15194702 215.17109680]
[289.14990234 215.42022705]
[303.58682251 219.49150085]
[316.50518799 227.11488342]
[327.04815674 237.78472900]
[334.51647949 250.79335022]
[338.41476440 265.27792358]
[338.48449707 280.27777100]
[334.72103882 294.79797363]
[327.37399292 307.87548828]
[316.93066406 318.64288330]
[304.08374023 326.38604736]
[289.68530273 330.59136963]
[274.69033813 330.97994995]
[260.09341431 327.52597046]
[246.86268616 320.45858765]
[235.87243652 310.24258423]
[241.11915588 324.29504395]
[246.47035217 338.30807495]
[251.92570496 352.28085327]
[257.38107300 366.25366211]
[262.83642578 380.22647095]
[268.29177856 394.19924927]
[273.74713135 408.17205811]
[288.56362915 405.53433228]
[303.61001587 405.83813477]
[318.30795288 409.07183838]
[332.09249878 415.11108398]
[344.43380737 423.72375488]
[354.85751343 434.57885742]
[362.96295166 447.25909424]
[368.43856812 461.27706909]
[371.07388306 476.09399414]
[370.76763916 491.14031982]
[367.53158569 505.83773804]
[361.49008179 519.62133789]
[352.87539673 531.96124268]
[342.01864624 542.38317871]
[329.33709717 550.48657227]
[315.31823730 555.95989990]
[300.50088501 558.59283447]
[285.45458984 558.28411865]
[270.75769043 555.04571533]
[256.97509766 549.00195312]
[244.63658142 540.38531494]
[234.21640015 529.52685547]
[226.11506653 516.84399414]
[220.64399719 502.82424927]
[218.01345825 488.00646973]
[218.32458496 472.96020508]
[221.56539917 458.26385498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[10 177]
[11 176]
[12 153]
[13 152]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[41 140]
[42 139]
[43 138]
[63 137]
[64 136]
[65 135]
[66 134]
[67 132]
[68 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 122]
[84 121]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
