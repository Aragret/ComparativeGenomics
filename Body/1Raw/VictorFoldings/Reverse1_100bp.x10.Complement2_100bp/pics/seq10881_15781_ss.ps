%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[198.15963745 647.70721436]
[206.85246277 635.40344238]
[218.06552124 625.34289551]
[231.23638916 618.03015137]
[227.04937744 603.62634277]
[222.86238098 589.22259521]
[218.67536926 574.81878662]
[214.48835754 560.41503906]
[211.59101868 558.40557861]
[209.52302551 554.89300537]
[208.98028564 550.28228760]
[210.45144653 545.27398682]
[206.91177368 530.69763184]
[196.38963318 520.15563965]
[200.65188599 504.91934204]
[197.11221313 490.34298706]
[193.57254028 475.76660156]
[190.03286743 461.19021606]
[186.49319458 446.61386108]
[182.95352173 432.03747559]
[179.41384888 417.46109009]
[175.87417603 402.88473511]
[172.33450317 388.30834961]
[168.79483032 373.73196411]
[165.25515747 359.15560913]
[161.71548462 344.57922363]
[158.17581177 330.00283813]
[154.63613892 315.42648315]
[151.09646606 300.85009766]
[147.23216248 286.35641479]
[143.04515076 271.95260620]
[128.99130249 267.09179688]
[120.39282990 254.74150085]
[120.71923065 239.51826477]
[130.05487061 227.26460266]
[125.86785889 212.86082458]
[121.68084717 198.45704651]
[117.49383545 184.05326843]
[113.30682373 169.64947510]
[100.00284576 158.20521545]
[104.54120636 140.35908508]
[100.14021301 126.01923370]
[84.66876984 121.02317047]
[75.18303680 107.81911469]
[75.38648224 91.56227875]
[85.19968414 78.59974670]
[80.58567810 64.32701111]
[75.86553955 50.08902359]
[71.03954315 35.88656998]
[66.21354675 21.68411255]
[61.38754654 7.48165703]
[59.42353058 22.35252190]
[54.54561234 36.53722763]
[46.94807053 49.47080231]
[36.93351364 60.63810730]
[24.90082169 69.59435272]
[11.32925034 75.98281097]
[-3.24065065 79.54904175]
[-18.22856712 80.15099335]
[-33.03753662 77.76469421]
[-47.07772446 72.48519135]
[-59.78991318 64.52276611]
[-70.66778564 54.19455719]
[-79.27806854 41.91193008]
[-85.27783203 28.16409874]
[-88.42810059 13.49863529]
[-88.60340881 -1.50034046]
[-85.79676056 -16.23542595]
[-80.11994934 -30.11972618]
[-71.79907990 -42.60023880]
[-61.16557312 -53.17986679]
[-48.64295578 -61.43722916]
[-34.72999573 -67.04343414]
[-19.98084259 -69.77519226]
[-4.98295116 -69.52370453]
[9.66631985 -66.29898071]
[23.38349533 -60.22945786]
[35.62222672 -51.55688477]
[45.89504623 -40.62669373]
[53.79279709 -27.87421989]
[58.99985886 -13.81143761]
[60.56037903 -28.73004341]
[61.67602921 -43.68849564]
[62.34581375 -58.67353439]
[63.01559830 -73.65857697]
[63.68538284 -88.64361572]
[63.90871048 -103.64195251]
[63.68538284 -118.64028931]
[63.46205521 -133.63862610]
[60.40487671 -139.50080872]
[60.71985245 -145.17512512]
[63.46205521 -149.08528137]
[63.68538284 -164.08361816]
[63.90871048 -179.08195496]
[64.13204193 -194.08029175]
[56.60106277 -207.99412537]
[64.52699280 -220.60479736]
[64.75032043 -235.60313416]
[64.97364807 -250.60147095]
[51.13742447 -256.96374512]
[41.09005356 -268.40798950]
[36.57231140 -282.95135498]
[38.36692429 -298.07415771]
[46.16295624 -311.15628052]
[58.60970688 -319.93115234]
[73.55069733 -322.87847900]
[88.39730835 -319.48760986]
[100.57727814 -310.34603882]
[107.98035431 -297.03762817]
[109.32390594 -281.86807251]
[104.37516022 -267.46566772]
[93.99150848 -256.32565308]
[79.97198486 -250.37814331]
[79.74865723 -235.37980652]
[79.52532959 -220.38146973]
[87.07228088 -207.54040527]
[79.13037872 -193.85696411]
[78.90705109 -178.85862732]
[78.68372345 -163.86029053]
[78.46039581 -148.86195374]
[78.46039581 -133.86195374]
[78.68372345 -118.86361694]
[78.90705109 -103.86528015]
[80.82226562 -101.81830597]
[82.04205322 -98.88935852]
[82.22640991 -95.33951569]
[81.13604736 -91.54798889]
[78.67042542 -87.97382355]
[78.00064087 -72.98878479]
[77.33085632 -58.00374985]
[76.66106415 -43.01871109]
[78.45104980 -40.86137772]
[79.49433899 -37.86501694]
[79.46707916 -34.31048965]
[78.15297699 -30.59059143]
[75.47898865 -27.16951942]
[73.91846466 -12.25091457]
[75.59000397 2.65565944]
[80.41600037 16.85811424]
[85.24199677 31.06056976]
[90.06799316 45.26302719]
[95.19637299 50.58482742]
[94.85840607 59.71300507]
[99.47241974 73.98574066]
[112.33864594 77.09196472]
[122.01207733 86.12596893]
[125.98957062 98.75007629]
[123.24189758 111.69761658]
[114.48005676 121.61823273]
[118.88105774 135.95808411]
[129.88943481 142.67956543]
[133.25982666 154.71385193]
[127.71060944 165.46246338]
[131.89761353 179.86625671]
[136.08462524 194.27003479]
[140.27163696 208.67381287]
[144.45864868 223.07759094]
[158.90841675 228.41711426]
[167.34480286 241.09310913]
[166.70697021 256.12829590]
[157.44892883 267.76559448]
[161.63594055 282.16940308]
[165.40519714 285.78045654]
[167.22993469 290.04937744]
[167.18519592 294.12527466]
[165.67283630 297.31042480]
[169.21250916 311.88681030]
[172.75218201 326.46316528]
[176.29185486 341.03955078]
[179.83152771 355.61593628]
[183.37120056 370.19229126]
[186.91087341 384.76867676]
[190.45054626 399.34506226]
[193.99021912 413.92141724]
[197.52989197 428.49780273]
[201.06956482 443.07418823]
[204.60923767 457.65054321]
[208.14891052 472.22692871]
[211.68858337 486.80331421]
[215.22825623 501.37966919]
[226.00358582 512.96429443]
[221.48815918 527.15795898]
[225.02783203 541.73431396]
[228.89213562 556.22802734]
[233.07914734 570.63177490]
[237.26615906 585.03558350]
[241.45317078 599.43933105]
[245.64018250 613.84313965]
[260.67880249 612.95568848]
[275.53775024 615.43743896]
[289.47174072 621.16381836]
[301.78182983 629.84771729]
[311.85052490 641.05346680]
[319.17282104 654.21899414]
[323.38143921 668.68395996]
[324.26522827 683.72283936]
[321.77990723 698.58117676]
[316.05010986 712.51379395]
[307.36325073 724.82177734]
[296.15505981 734.88775635]
[282.98773193 742.20684814]
[268.52175903 746.41192627]
[253.48269653 747.29211426]
[238.62493896 744.80316162]
[224.69374084 739.07000732]
[212.38786316 730.38018799]
[202.32458496 719.16955566]
[195.00866699 706.00042725]
[190.80708313 691.53344727]
[189.93057251 676.49420166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 188]
[5 187]
[6 186]
[7 185]
[8 184]
[12 183]
[13 182]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 162]
[31 161]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[41 150]
[42 149]
[46 144]
[47 143]
[48 141]
[49 140]
[50 139]
[51 138]
[81 137]
[82 136]
[83 131]
[84 130]
[85 129]
[86 128]
[87 123]
[88 122]
[89 121]
[92 120]
[93 119]
[94 118]
[95 117]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
