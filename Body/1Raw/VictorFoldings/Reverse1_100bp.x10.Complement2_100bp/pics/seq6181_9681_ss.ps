%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[77.38922119 657.88128662]
[74.93046570 672.88201904]
[66.91407776 685.79736328]
[54.56250000 694.65777588]
[39.75925827 698.11212158]
[24.76173973 695.63360596]
[11.85695839 687.60028076]
[3.01279902 675.23706055]
[-0.42206898 660.42926025]
[2.07614708 645.43499756]
[10.12648773 632.54083252]
[22.50133324 623.71295166]
[37.31361008 620.29754639]
[39.75933838 605.49829102]
[42.20506668 590.69897461]
[35.14987946 574.63067627]
[46.95191574 560.49584961]
[49.17703247 545.66180420]
[51.40214920 530.82775879]
[53.62726974 515.99371338]
[39.77247620 510.32510376]
[27.66976357 501.49987793]
[18.02519798 490.02755737]
[11.40273094 476.57220459]
[8.19120979 461.91403198]
[8.58155823 446.90417480]
[12.55542469 432.41522217]
[19.88600349 419.29058838]
[30.15096855 408.29528809]
[42.75680542 400.07141113]
[56.97313309 395.10067749]
[71.97499847 393.67605591]
[66.21128082 379.94183350]
[75.91011047 367.44210815]
[78.13523102 352.60806274]
[80.36035156 337.77401733]
[71.32818604 325.98608398]
[73.37345123 310.91055298]
[85.79897308 301.51672363]
[88.02408600 286.68267822]
[90.24920654 271.84863281]
[91.25346375 256.88229370]
[91.03013611 241.88394165]
[81.31578827 235.90083313]
[75.63718414 225.86743164]
[75.50575256 214.21939087]
[81.06981659 203.84915161]
[91.04904938 197.38760376]
[91.27237701 182.38926697]
[91.49570465 167.39093018]
[91.71903229 152.39259338]
[91.94235992 137.39425659]
[92.16568756 122.39591980]
[92.38901520 107.39758301]
[91.71923065 92.41254425]
[90.15870667 77.49393463]
[88.59818268 62.57533264]
[87.03766632 47.65672684]
[71.86733246 41.08002853]
[62.13941574 27.82623100]
[60.43267441 11.56880474]
[67.11876678 -3.24510956]
[80.28648376 -12.61119175]
[78.50402069 -27.50490952]
[76.72155762 -42.39862442]
[74.93908691 -57.29234314]
[59.61006927 -68.42497253]
[57.32536697 -86.90991211]
[69.07275391 -100.94966125]
[66.84764099 -115.78370667]
[57.14880753 -128.28343201]
[62.91252899 -142.01765442]
[53.21369553 -154.51737976]
[58.97741699 -168.25160217]
[56.75230026 -183.08564758]
[54.52718353 -197.91969299]
[52.30206299 -212.75373840]
[42.41254425 -221.03384399]
[40.86462784 -233.43496704]
[47.94691849 -243.24148560]
[45.94290161 -258.10699463]
[43.93888855 -272.97253418]
[41.82426453 -287.82272339]
[39.59914780 -302.65676880]
[37.37403107 -317.49081421]
[25.57199287 -331.62564087]
[32.62718201 -347.69396973]
[30.18145370 -362.49325562]
[27.73572731 -377.29251099]
[12.72822094 -378.92877197]
[-1.28087962 -384.55441284]
[-13.25200558 -393.75195312]
[-22.29681969 -405.83886719]
[-27.74413872 -419.91827393]
[-29.18973351 -434.94534302]
[-26.52633286 -449.80499268]
[-19.95157623 -463.39450073]
[-9.95335674 -474.70547485]
[2.72639275 -482.89855957]
[17.14674950 -487.36575317]
[32.23762894 -487.77557373]
[46.87918472 -484.09762573]
[59.98492050 -476.60479736]
[70.58229828 -465.85314941]
[77.88492584 -452.64050293]
[81.35089874 -437.94732666]
[80.72302246 -422.86395264]
[76.04788208 -408.50964355]
[67.67240906 -395.94961548]
[56.21812057 -386.11593628]
[42.53499603 -379.73825073]
[44.98072433 -364.93896484]
[47.42645264 -350.13970947]
[57.07427979 -342.84271240]
[59.23297119 -330.53323364]
[52.20807648 -319.71594238]
[54.43319321 -304.88189697]
[56.65830994 -290.04785156]
[60.75925827 -283.89935303]
[58.80441666 -274.97656250]
[60.80842972 -260.11102295]
[62.81244659 -245.24549866]
[74.27157593 -231.95433044]
[67.13610840 -214.97885132]
[69.36122894 -200.14480591]
[71.58634186 -185.31076050]
[73.81146240 -170.47673035]
[83.35113525 -159.03802490]
[77.74657440 -144.24276733]
[87.28624725 -132.80407715]
[81.68168640 -118.00881958]
[83.90679932 -103.17477417]
[94.33341217 -98.54314423]
[101.30158234 -89.35836029]
[102.98801422 -77.83230591]
[98.85930634 -66.81166077]
[89.83280945 -59.07481003]
[91.61527252 -44.18109131]
[93.39773560 -29.28737450]
[95.18020630 -14.39365768]
[108.06225586 -9.85826111]
[117.78009796 -0.16845815]
[122.39701080 12.82512569]
[120.95827484 26.60584831]
[113.68796539 38.47845078]
[101.95626831 46.09620285]
[103.51679230 61.01480865]
[105.07731628 75.93341064]
[106.63784027 90.85202026]
[115.28464508 78.59507751]
[129.44692993 73.65243530]
[143.84251404 77.86757660]
[153.10217285 89.66835785]
[153.77232361 104.65338135]
[145.60298157 117.23359680]
[131.64112854 122.71690369]
[117.09418488 119.05815887]
[107.38735199 107.62091064]
[107.16402435 122.61924744]
[106.94069672 137.61758423]
[106.71736908 152.61592102]
[106.49404144 167.61425781]
[106.27071381 182.61259460]
[106.04738617 197.61093140]
[119.75166321 210.69172668]
[119.54627228 229.31619263]
[106.02847290 241.66061401]
[106.25180054 256.65896606]
[114.52433777 244.14636230]
[127.61943817 236.83073425]
[142.61161804 236.34640503]
[156.15158081 242.80157471]
[165.21447754 254.75413513]
[167.77563477 269.53387451]
[163.26286316 283.83892822]
[152.68434143 294.47354126]
[138.40335083 299.06192017]
[123.61027527 296.57894897]
[111.60993958 287.57940674]
[105.08325195 274.07373047]
[102.85813141 288.90777588]
[100.63301086 303.74182129]
[109.75553131 316.36788940]
[107.28762817 331.38003540]
[95.19438934 339.99914551]
[92.96927643 354.83319092]
[90.74415588 369.66723633]
[96.34872437 384.46249390]
[86.80904388 395.90118408]
[100.73270416 401.66464233]
[112.86494446 410.58770752]
[122.50311279 422.14819336]
[129.09030151 435.67132568]
[132.24748230 450.36911011]
[131.79541016 465.38632202]
[127.76469421 479.85012817]
[120.39380646 492.92092896]
[110.11499023 503.84109497]
[97.52890778 511.97882080]
[83.36952209 516.86468506]
[68.46131134 518.21881104]
[66.23619843 533.05285645]
[64.01107788 547.88690186]
[61.78596115 562.72094727]
[68.81085968 573.53826904]
[66.65216064 585.84771729]
[57.00433731 593.14471436]
[54.55860901 607.94396973]
[52.11288452 622.74328613]
[65.03875732 630.74267578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 209]
[14 208]
[15 207]
[17 204]
[18 203]
[19 202]
[20 201]
[32 189]
[34 187]
[35 186]
[36 185]
[39 182]
[40 181]
[41 180]
[42 168]
[43 167]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[55 149]
[56 148]
[57 147]
[58 146]
[63 140]
[64 139]
[65 138]
[66 137]
[69 132]
[70 131]
[72 129]
[74 127]
[75 126]
[76 125]
[77 124]
[80 122]
[81 121]
[82 120]
[83 118]
[84 117]
[85 116]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
