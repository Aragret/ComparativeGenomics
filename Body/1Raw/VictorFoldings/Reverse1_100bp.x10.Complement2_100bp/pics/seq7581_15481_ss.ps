%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[119.81360626 665.09729004]
[110.27833557 653.48107910]
[102.58096313 640.57336426]
[96.89344788 626.66259766]
[93.34284210 612.05950928]
[92.00848389 597.09027100]
[92.92018127 582.08941650]
[96.05754852 567.39196777]
[101.35051727 553.32635498]
[108.68082428 540.20672607]
[117.88471985 528.32623291]
[128.75657654 517.95025635]
[141.05352783 509.31066895]
[154.50083923 502.60040283]
[168.79809570 497.96942139]
[166.35237122 483.17016602]
[163.90663147 468.37088013]
[161.46090698 453.57162476]
[151.75198364 442.27621460]
[157.13565063 427.39916992]
[154.68992615 412.59988403]
[152.24420166 397.80062866]
[149.57839966 383.03939819]
[139.53747559 372.03808594]
[144.47579956 357.00732422]
[134.43487549 346.00601196]
[139.37321472 330.97525024]
[136.48794556 316.25537109]
[133.60266113 301.53546143]
[130.71739197 286.81558228]
[127.83212280 272.09567261]
[124.94684601 257.37579346]
[122.06157684 242.65589905]
[119.17630005 227.93600464]
[106.94638062 215.35046387]
[113.05880737 197.98037720]
[109.95469666 183.30508423]
[106.85058594 168.62977600]
[103.74647522 153.95446777]
[90.68955231 153.27697754]
[78.17671967 149.48602295]
[66.93923187 142.80311584]
[57.63379669 133.61883545]
[50.80421448 122.46988678]
[46.84959793 110.00781250]
[46.00106430 96.96089172]
[48.30818939 84.09156799]
[53.63615417 72.15192413]
[61.67359161 61.83971024]
[71.95079803 53.75755310]
[83.86718750 48.37777710]
[81.42145538 33.57850647]
[78.97573090 18.77923775]
[76.53000641 3.97996616]
[74.08427429 -10.81930447]
[60.12470627 -13.64445305]
[47.99338150 -21.04933167]
[39.13690948 -32.12705612]
[34.60320282 -45.53422928]
[34.91754532 -59.65383911]
[40.02179337 -72.79028320]
[49.28380966 -83.37298584]
[61.57569504 -90.14416504]
[59.35057831 -104.97821045]
[57.12546158 -119.81225586]
[54.90034485 -134.64630127]
[52.67522430 -149.48034668]
[42.97639465 -161.98007202]
[48.74011612 -175.71429443]
[35.13325119 -182.93644714]
[28.46602631 -196.62591553]
[31.10684967 -211.44110107]
[41.83664703 -221.73719788]
[39.61153030 -236.57124329]
[37.38640976 -251.40528870]
[35.16129303 -266.23931885]
[32.93617630 -281.07336426]
[18.22620773 -284.80062866]
[6.09662247 -293.85137939]
[-1.62284482 -306.82150269]
[-3.78262854 -321.71856689]
[-0.08442999 -336.26806641]
[8.87802315 -348.26055908]
[21.71404648 -355.88720703]
[19.48892975 -370.72125244]
[17.26381302 -385.55529785]
[14.01078987 -389.63757324]
[12.77274132 -394.11199951]
[13.36162472 -398.14538574]
[15.28595924 -401.09994507]
[13.72543621 -416.01852417]
[12.16491318 -430.93713379]
[-2.66766310 -433.85021973]
[-15.98183441 -441.00735474]
[-26.59371376 -451.77206421]
[-33.55970001 -465.18722534]
[-36.26037979 -480.05993652]
[-34.45561218 -495.06774902]
[-28.30587959 -508.87615967]
[-18.35800552 -520.25732422]
[-5.49655342 -528.19927979]
[9.13484764 -531.99578857]
[24.23518372 -531.30932617]
[38.46174240 -526.20080566]
[50.54950714 -517.12463379]
[59.42364120 -504.88775635]
[64.29506683 -490.57830811]
[64.73061371 -475.46862793]
[60.69156265 -460.90231323]
[52.53705215 -448.17459106]
[40.99218369 -438.41714478]
[27.08351898 -432.49765015]
[28.64404106 -417.57907104]
[30.20456505 -402.66046143]
[32.09785843 -387.78042603]
[34.32297516 -372.94638062]
[36.54809189 -358.11233521]
[51.05685806 -354.58743286]
[63.14346695 -345.75231934]
[70.94773102 -332.92816162]
[73.25379944 -318.05303955]
[69.67948914 -303.38885498]
[60.73922348 -291.17761230]
[47.77022171 -283.29849243]
[49.99533844 -268.46444702]
[52.22045517 -253.63040161]
[54.44557190 -238.79635620]
[56.67068863 -223.96231079]
[69.94913483 -217.26747131]
[76.82051086 -203.87911987]
[74.46320343 -188.83596802]
[63.57415771 -177.93940735]
[73.11383057 -166.50070190]
[67.50926971 -151.70545959]
[69.73439026 -136.87141418]
[71.95950317 -122.03736877]
[74.18462372 -107.20332336]
[76.40973663 -92.36928558]
[91.84503174 -88.78070831]
[104.75276184 -79.52114868]
[113.13919067 -65.98443604]
[115.69501495 -50.22779846]
[111.99967194 -34.65923691]
[102.59022522 -21.66951370]
[88.88354492 -13.26503181]
[91.32927704 1.53423882]
[93.77500153 16.33350945]
[96.22072601 31.13278008]
[98.66645813 45.93205261]
[115.38924408 48.15125275]
[130.61485291 55.41466904]
[142.86204529 67.01565552]
[150.93930054 81.82559967]
[154.06082153 98.40367889]
[151.92292786 115.13705444]
[144.73361206 130.39779663]
[133.19227600 142.70121765]
[118.42177582 150.85035706]
[121.52588654 165.52566528]
[124.62999725 180.20097351]
[127.73410797 194.87626648]
[138.09893799 202.55307007]
[140.38223267 214.84005737]
[133.89619446 225.05073547]
[136.78146362 239.77062988]
[139.66674805 254.49052429]
[142.55201721 269.21041870]
[145.43728638 283.93029785]
[148.32255554 298.65020752]
[151.20782471 313.37008667]
[154.09310913 328.08996582]
[164.34040833 340.14416504]
[159.19569397 354.12203979]
[169.44299316 366.17623901]
[164.29829407 380.15411377]
[168.34863281 385.37966919]
[169.04710388 391.01962280]
[167.04347229 395.35488892]
[169.48919678 410.15414429]
[171.93492126 424.95343018]
[181.81877136 437.30737305]
[176.26017761 451.12588501]
[178.70590210 465.92514038]
[181.15164185 480.72442627]
[183.59736633 495.52368164]
[198.62438965 495.30856323]
[213.51562500 497.33560181]
[227.93838501 501.55950928]
[241.57048035 507.88592529]
[254.10736084 516.17352295]
[265.26892090 526.23718262]
[274.80584717 537.85205078]
[282.50506592 550.75860596]
[288.19454956 564.66857910]
[291.74725342 579.27117920]
[293.08374023 594.24017334]
[292.17416382 609.24121094]
[289.03890991 623.93908691]
[283.74792480 638.00549316]
[276.41949463 651.12615967]
[267.21728516 663.00793457]
[256.34692383 673.38543701]
[244.05119324 682.02679443]
[230.60484314 688.73895264]
[216.30824280 693.37200928]
[201.48078918 695.82238770]
[186.45375061 696.03540039]
[171.56280518 694.00622559]
[157.14064026 689.78027344]
[143.50944519 683.45190430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 185]
[16 184]
[17 183]
[18 182]
[20 180]
[21 179]
[22 178]
[23 175]
[25 173]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 166]
[33 165]
[34 164]
[36 161]
[37 160]
[38 159]
[39 158]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[69 132]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[84 117]
[85 116]
[86 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
