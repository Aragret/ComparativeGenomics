%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[154.19427490 643.60809326]
[145.70713806 631.20373535]
[139.21308899 617.64910889]
[134.86436462 603.26196289]
[132.76289368 588.37963867]
[132.95794678 573.35089111]
[135.44493103 558.52813721]
[140.16558838 544.25872803]
[147.00921631 530.87719727]
[155.81542969 518.69726562]
[166.37776184 508.00436401]
[178.44863892 499.04925537]
[191.74510193 492.04177856]
[205.95544434 487.14624023]
[203.28965759 472.38500977]
[200.62385559 457.62380981]
[188.58267212 444.85757446]
[194.95303345 427.58041382]
[192.06776428 412.86050415]
[189.18247986 398.14062500]
[179.14155579 387.13931274]
[184.07989502 372.10855103]
[181.19462585 357.38867188]
[177.98133850 342.73687744]
[174.44166565 328.16049194]
[170.14755249 313.78829956]
[165.11062622 299.65927124]
[160.07371521 285.53024292]
[146.54840088 279.39822388]
[141.23898315 265.14111328]
[147.76251221 250.99610901]
[142.72558594 236.86708069]
[137.68867493 222.73805237]
[132.65176392 208.60902405]
[127.61484528 194.47999573]
[122.57792664 180.35096741]
[117.54100800 166.22193909]
[112.29428864 152.16946411]
[106.83893585 138.19667053]
[101.38357544 124.22386932]
[95.92822266 110.25106812]
[87.60652161 122.73102570]
[72.67456055 124.15811157]
[62.13962555 113.48032379]
[63.76767349 98.56893921]
[76.35857391 90.41606903]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[74.78282928 69.76802826]
[78.44542694 55.33076096]
[74.04443359 40.99091339]
[62.59868240 30.06821251]
[66.26128387 15.63094807]
[61.86028671 1.29110086]
[57.45928955 -13.04874611]
[46.01353836 -23.97144699]
[49.67613983 -38.40871429]
[44.74454498 -52.57484818]
[39.28918839 -66.54764557]
[33.83383179 -80.52044678]
[28.37847328 -94.49324036]
[22.92311668 -108.46604156]
[17.46776009 -122.43883514]
[11.90853405 -136.37063599]
[6.24574757 -150.26066589]
[0.58296102 -164.15069580]
[-4.39688349 -168.49955750]
[-6.16716909 -173.89985657]
[-5.03484058 -178.53955078]
[-10.33675575 -164.50781250]
[-22.81005478 -156.17614746]
[-37.80250168 -156.65203857]
[-49.72229004 -165.75801086]
[-54.12363052 -180.09774780]
[-49.36492920 -194.32289124]
[-37.22106934 -203.12780762]
[-22.22140694 -203.22850037]
[-9.95974255 -194.58644104]
[-13.49941540 -209.16282654]
[-17.03908730 -223.73919678]
[-20.57876015 -238.31556702]
[-24.11843300 -252.89195251]
[-39.15450668 -252.25737000]
[-54.02542114 -254.56866455]
[-68.15957642 -259.73703003]
[-81.01369476 -267.56375122]
[-92.09370422 -277.74804688]
[-100.97370148 -289.89843750]
[-107.31237793 -303.54788208]
[-110.86608887 -318.17175293]
[-111.49823761 -333.20791626]
[-109.18453217 -348.07846069]
[-104.01389313 -362.21179199]
[-96.18507385 -375.06463623]
[-85.99898529 -386.14297485]
[-73.84716797 -395.02102661]
[-60.19669724 -401.35748291]
[-45.57225800 -404.90884399]
[-30.53598022 -405.53854370]
[-15.66581440 -403.22244263]
[-1.53333139 -398.04949951]
[11.31825352 -390.21859741]
[22.39496040 -380.03073120]
[31.27102852 -367.87747192]
[37.60528564 -354.22598267]
[41.15426254 -339.60095215]
[41.78154373 -324.56457520]
[39.46302032 -309.69479370]
[34.28780746 -295.56314087]
[26.45482635 -282.71282959]
[16.26515961 -271.63778687]
[4.11046600 -262.76367188]
[-9.54205704 -256.43161011]
[-6.00238466 -241.85523987]
[-2.46271205 -227.27886963]
[1.07696044 -212.70249939]
[4.61663294 -198.12611389]
[9.01763058 -183.78627014]
[14.47298813 -169.81347656]
[20.13577461 -155.92344666]
[25.79856110 -142.03341675]
[31.23460197 -137.02630615]
[31.44055748 -127.89419556]
[36.89591599 -113.92139435]
[42.35127258 -99.94860077]
[47.80662918 -85.97579956]
[53.26198578 -72.00300598]
[58.71734238 -58.03020477]
[67.03903961 -70.51016235]
[81.97100067 -71.93724823]
[92.50593567 -61.25946045]
[90.87789154 -46.34807205]
[78.28698730 -38.19520569]
[64.01598358 -42.80971146]
[75.14694977 -32.91269302]
[71.79913330 -17.44974518]
[76.20013428 -3.10989714]
[80.60112762 11.22994995]
[91.73209381 21.12697029]
[88.38427734 36.58991623]
[92.78527832 50.92976379]
[103.91623688 60.82678223]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[109.90101624 104.79571533]
[115.35637665 118.76850891]
[120.81172943 132.74130249]
[126.26708984 146.71411133]
[131.18164062 151.13664246]
[132.87132263 156.56268311]
[131.67004395 161.18501282]
[136.70695496 175.31404114]
[141.74386597 189.44306946]
[146.78079224 203.57211304]
[151.81770325 217.70114136]
[156.85461426 231.83016968]
[161.89154053 245.95919800]
[175.89193726 252.78755188]
[180.79881287 267.18814087]
[174.20274353 280.49331665]
[179.23966980 294.62234497]
[184.27658081 308.75137329]
[190.62626648 295.16162109]
[204.17218018 288.71896362]
[218.72134399 292.36889648]
[227.62205505 304.44271851]
[226.80502319 319.42044067]
[216.64379883 330.45446777]
[201.78395081 332.50015259]
[189.01805115 324.62081909]
[192.55772400 339.19720459]
[196.16197205 342.97296143]
[197.79428101 347.31912231]
[197.56758118 351.38894653]
[195.91450500 354.50338745]
[198.79978943 369.22326660]
[209.04708862 381.27746582]
[203.90237427 395.25534058]
[206.78764343 409.97525024]
[209.67292786 424.69512939]
[219.92230225 432.52539062]
[222.02241516 444.84503174]
[215.38507080 454.95800781]
[218.05087280 469.71920776]
[220.71665955 484.48043823]
[235.74174500 484.09622192]
[250.64935303 486.01019287]
[265.09008789 490.17745972]
[278.72537231 496.50036621]
[291.23562622 504.83068848]
[302.32754517 514.97314453]
[311.74118042 526.69000244]
[319.25579834 539.70654297]
[324.69528198 553.71771240]
[327.93212891 568.39501953]
[328.89044189 583.39440918]
[327.54776001 598.36425781]
[323.93557739 612.95373535]
[318.13854980 626.82080078]
[310.29257202 639.64031982]
[300.58154297 651.11187744]
[289.23315430 660.96655273]
[276.51336670 668.97326660]
[262.72039795 674.94439697]
[248.17756653 678.73999023]
[233.22575378 680.27099609]
[218.21548462 679.50158691]
[203.49859619 676.44976807]
[189.42007446 671.18707275]
[176.30995178 663.83685303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 185]
[15 184]
[16 183]
[18 180]
[19 179]
[20 178]
[22 176]
[23 175]
[24 171]
[25 170]
[26 162]
[27 161]
[28 160]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[38 148]
[39 147]
[40 146]
[41 145]
[47 144]
[48 143]
[50 141]
[51 140]
[53 138]
[54 137]
[55 136]
[57 134]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[64 121]
[65 120]
[66 119]
[69 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
