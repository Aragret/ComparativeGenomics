%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[125.97239685 554.44903564]
[125.33438110 539.44659424]
[126.38015747 524.46710205]
[129.09655762 509.69885254]
[133.44943237 495.32760620]
[139.38401794 481.53411865]
[146.82571411 468.49182129]
[155.68092346 456.36477661]
[165.83825684 445.30545044]
[177.16999817 435.45297241]
[189.53364563 426.93121338]
[182.45654297 413.70568848]
[175.37944031 400.48013306]
[168.30233765 387.25460815]
[161.22521973 374.02908325]
[154.14811707 360.80355835]
[154.23020935 375.80334473]
[149.73303223 390.11331177]
[141.08522034 402.36956787]
[129.11103821 411.40386963]
[114.95177460 416.35516357]
[99.95700836 416.75152588]
[85.55595398 412.55514526]
[73.12121582 404.16604614]
[63.83799362 392.38378906]
[58.59111023 378.33135986]
[57.88066483 363.34820557]
[61.77437210 348.86236572]
[69.90110779 336.25460815]
[81.48628235 326.72653198]
[95.42567444 321.18637085]
[110.39066315 320.16217041]
[124.95488739 323.75149536]
[137.73017883 331.61227417]
[147.49946594 342.99624634]
[144.17721558 328.36877441]
[140.85494995 313.74133301]
[137.53268433 299.11386108]
[134.21043396 284.48641968]
[130.88816833 269.85894775]
[127.56591034 255.23149109]
[124.24365234 240.60401917]
[113.87963104 229.90653992]
[118.36824799 214.73541260]
[108.00422668 204.03793335]
[112.49284363 188.86680603]
[109.17058563 174.23934937]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[77.93395996 44.22562790]
[72.89704895 30.09659767]
[67.86013031 15.96756744]
[53.55962753 4.36683035]
[57.39229965 -12.75851727]
[52.14558029 -26.81098938]
[46.89886475 -40.86346054]
[41.65214539 -54.91593170]
[36.40542603 -68.96839905]
[31.15870857 -83.02087402]
[25.91198921 -97.07334137]
[20.66527176 -111.12581635]
[15.41855335 -125.17829132]
[10.17183590 -139.23075867]
[5.32368088 -143.72596741]
[3.71496677 -149.17657471]
[4.98493481 -153.78050232]
[0.15893732 -167.98297119]
[-11.04469109 -174.37370300]
[-14.77188969 -186.30230713]
[-9.54515362 -197.21138000]
[-14.15916348 -211.48411560]
[-18.77317238 -225.75685120]
[-23.38718224 -240.02958679]
[-38.32081604 -238.19027710]
[-53.33265305 -239.21069336]
[-67.88002777 -243.05393982]
[-81.43704987 -249.58106995]
[-93.51364899 -258.55615234]
[-103.67327118 -269.65475464]
[-111.54863739 -282.47564697]
[-116.85507202 -296.55535889]
[-119.40074158 -311.38491821]
[-119.09362030 -326.42825317]
[-115.94482422 -341.14157104]
[-110.06816101 -354.99298096]
[-101.67608643 -367.48175049]
[-91.07195282 -378.15643311]
[-78.63910675 -386.63113403]
[-64.82698059 -392.59951782]
[-50.13487244 -395.84582520]
[-35.09389496 -396.25271606]
[-20.24777222 -393.80541992]
[-6.13318014 -388.59249878]
[6.73964691 -380.80230713]
[17.90536499 -370.71652222]
[26.96033859 -358.69970703]
[33.57723999 -345.18624878]
[37.51686859 -330.66470337]
[38.63681030 -315.65994263]
[36.89657974 -300.71444702]
[32.35908890 -286.36843872]
[25.18835831 -273.14056396]
[15.64361000 -261.50894165]
[4.06988049 -251.89410400]
[-9.11444855 -244.64358521]
[-4.50043917 -230.37086487]
[0.11357030 -216.09812927]
[4.72757959 -201.82539368]
[18.36639977 -190.78231812]
[14.36139297 -172.80895996]
[19.18739128 -158.60650635]
[24.22430611 -144.47747803]
[29.47102547 -130.42500305]
[34.71774292 -116.37253571]
[39.96446228 -102.32006073]
[45.21117783 -88.26759338]
[50.45789719 -74.21511841]
[55.70461655 -60.16265106]
[60.95133591 -46.11017990]
[66.19805145 -32.05770874]
[71.44477081 -18.00523567]
[82.31601715 -12.70028591]
[86.80215454 -1.03588033]
[81.98915863 10.93065166]
[87.02607727 25.05968094]
[92.06299591 39.18870926]
[98.41267395 25.59895134]
[111.95860291 19.15629005]
[126.50775909 22.80622673]
[135.40846252 34.88005829]
[134.59144592 49.85778809]
[124.43022156 60.89180756]
[109.57036591 62.93750381]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[123.79804993 170.91708374]
[127.12030792 185.54455566]
[137.72195435 197.28829956]
[132.99571228 211.41316223]
[143.59736633 223.15690613]
[138.87110901 237.28176880]
[142.19337463 251.90922546]
[145.51562500 266.53668213]
[148.83789062 281.16415405]
[152.16015625 295.79159546]
[155.48240662 310.41906738]
[158.80467224 325.04653931]
[162.12692261 339.67398071]
[167.37364197 353.72647095]
[174.45075989 366.95199585]
[181.52786255 380.17752075]
[188.60496521 393.40304565]
[195.68206787 406.62857056]
[202.75917053 419.85409546]
[216.70846558 414.29556274]
[231.19241333 410.33383179]
[246.02885437 408.01870728]
[261.03125000 407.37936401]
[276.01086426 408.42379761]
[290.77935791 411.13885498]
[305.15097046 415.49044800]
[318.94500732 421.42379761]
[331.98797607 428.86431885]
[344.11581421 437.71844482]
[355.17602539 447.87478638]
[365.02954102 459.20565796]
[373.55239868 471.56854248]
[380.63745117 484.80795288]
[386.19558716 498.75738525]
[390.15689087 513.24145508]
[392.47155762 528.07800293]
[393.11044312 543.08038330]
[392.06558228 558.05999756]
[389.35006714 572.82836914]
[384.99804688 587.19989014]
[379.06427002 600.99371338]
[371.62335205 614.03643799]
[362.76889038 626.16406250]
[352.61221313 637.22399902]
[341.28106689 647.07714844]
[328.91790771 655.59960938]
[315.67828369 662.68426514]
[301.72866821 668.24200439]
[287.24447632 672.20288086]
[272.40789795 674.51708984]
[257.40548706 675.15551758]
[242.42591858 674.11022949]
[227.65759277 671.39422607]
[213.28622437 667.04180908]
[199.49255371 661.10760498]
[186.45004272 653.66632080]
[174.32272339 644.81146240]
[163.26310730 634.65447998]
[153.41027832 623.32299805]
[144.88815308 610.95965576]
[137.80389404 597.71978760]
[132.24661255 583.77001953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[44 152]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[53 142]
[54 141]
[55 140]
[56 132]
[57 131]
[58 130]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[72 117]
[73 116]
[76 114]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
