%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[59.97944260 804.70758057]
[44.97937393 805.10778809]
[29.98524475 804.52612305]
[15.06126118 802.96508789]
[0.27133253 800.43121338]
[-14.32120895 796.93554688]
[-28.65387535 792.49291992]
[-42.66529083 787.12237549]
[-56.29545975 780.84698486]
[-69.48600769 773.69354248]
[-82.18045807 765.69268799]
[-94.32444763 756.87878418]
[-105.86597443 747.28942871]
[-116.75560760 736.96575928]
[-126.94673157 725.95196533]
[-136.39569092 714.29522705]
[-145.06202698 702.04547119]
[-152.90864563 689.25512695]
[-159.90191650 675.97894287]
[-166.01191711 662.27386475]
[-171.21246338 648.19848633]
[-175.48130798 633.81311035]
[-178.80015564 619.17932129]
[-181.15480042 604.35980225]
[-182.53515625 589.41802979]
[-182.93531799 574.41796875]
[-182.35357666 559.42382812]
[-180.79238892 544.49981689]
[-178.25848389 529.70996094]
[-174.76269531 515.11743164]
[-170.31997681 500.78475952]
[-164.94938660 486.77337646]
[-158.67388916 473.14324951]
[-151.52037048 459.95275879]
[-143.51947021 447.25833130]
[-134.70544434 435.11441040]
[-125.11604309 423.57293701]
[-114.79231262 412.68334961]
[-103.77847290 402.49230957]
[-92.12168121 393.04342651]
[-79.87186432 384.37713623]
[-67.08147430 376.53060913]
[-53.80527496 369.53741455]
[-40.10012436 363.42749023]
[-26.02470589 358.22702026]
[-11.63929844 353.95828247]
[2.99450064 350.63949585]
[17.81402588 348.28494263]
[32.75581741 346.90469360]
[47.75588989 346.50460815]
[62.75001144 347.08645630]
[64.31053162 332.16784668]
[65.87105560 317.24923706]
[56.32154083 305.87637329]
[57.69161224 290.72454834]
[69.68527985 280.78524780]
[71.24580383 265.86663818]
[72.80632782 250.94804382]
[74.36685181 236.02943420]
[75.92737579 221.11082458]
[73.49680328 214.13128662]
[77.62380219 205.98231506]
[75.29741669 198.96734619]
[79.54528046 190.88073730]
[81.54929352 176.01519775]
[83.55331421 161.14967346]
[74.38419342 152.09666443]
[72.06890106 139.22338867]
[77.67321777 127.19001007]
[89.35427094 120.48422241]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[89.53231049 64.89255524]
[91.87403870 52.61656189]
[101.62944031 45.46402740]
[104.29523468 30.70280838]
[106.96102905 15.94159126]
[109.62682343 1.18037391]
[112.29261780 -13.58084297]
[114.95841217 -28.34206009]
[117.62420654 -43.10327911]
[120.29000854 -57.86449432]
[122.51512146 -72.69853973]
[124.29758453 -87.59225464]
[125.07891083 -102.57189178]
[124.85558319 -117.57022858]
[124.63225555 -132.56857300]
[124.40892792 -147.56690979]
[124.18560028 -162.56524658]
[123.73899078 -177.55859375]
[123.06920624 -192.54362488]
[122.39942169 -207.52867126]
[107.76653290 -211.31944275]
[94.90196991 -219.25634766]
[84.94963074 -230.63362122]
[78.79447937 -244.43960571]
[76.98382568 -259.44671631]
[79.67867279 -274.32049561]
[86.63939667 -287.73837280]
[97.24705505 -298.50726318]
[110.55841827 -305.66961670]
[125.38984680 -308.58850098]
[140.42254639 -307.00442505]
[154.31982422 -301.05825806]
[165.84593201 -291.27865601]
[173.97598267 -278.53527832]
[177.98706055 -263.96124268]
[177.52249146 -248.85244751]
[172.62359619 -234.55236816]
[163.72598267 -222.33256531]
[151.62080383 -213.27960205]
[137.38446045 -208.19845581]
[138.05424500 -193.21340942]
[138.72402954 -178.22837830]
[141.58143616 -174.40159607]
[142.06521606 -168.73918152]
[139.18392944 -162.78857422]
[139.40725708 -147.79023743]
[139.63058472 -132.79190063]
[139.85392761 -117.79355621]
[140.07725525 -102.79521942]
[149.21754456 -114.68870544]
[163.30065918 -119.85260010]
[177.96278381 -116.68682861]
[188.66070557 -106.17233276]
[192.07954407 -91.56714630]
[187.15994263 -77.39684296]
[175.42628479 -68.05224609]
[160.51438904 -66.42887878]
[147.04486084 -73.02976227]
[139.19129944 -85.80979156]
[137.40884399 -70.91607666]
[139.03341675 -68.63158417]
[139.85095215 -65.56592560]
[139.55938721 -62.02326965]
[137.97225952 -58.41141510]
[135.05122375 -55.19869995]
[132.38542175 -40.43748093]
[129.71963501 -25.67626572]
[127.05383301 -10.91504765]
[124.38803864 3.84616947]
[121.72224426 18.60738754]
[119.05644989 33.36860275]
[116.39065552 48.12982178]
[123.20582581 64.30141449]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[104.18831635 122.70934296]
[114.84209442 136.58436584]
[112.21646881 153.53785706]
[98.41883850 163.15368652]
[96.41482544 178.01921082]
[94.41081238 192.88475037]
[92.51751709 207.76478577]
[90.84597778 222.67135620]
[89.28545380 237.58995056]
[87.72492981 252.50856018]
[86.16441345 267.42715454]
[84.60388947 282.34576416]
[94.28108978 294.55191040]
[92.48597717 309.65924072]
[80.78966522 318.80975342]
[79.22914124 333.72836304]
[77.66861725 348.64697266]
[92.45857239 351.18063354]
[107.05115509 354.67614746]
[121.38388062 359.11862183]
[135.39535522 364.48895264]
[149.02560425 370.76422119]
[162.21623230 377.91751099]
[174.91078186 385.91818237]
[187.05487061 394.73199463]
[198.59651184 404.32119751]
[209.48626709 414.64471436]
[219.67752075 425.65838623]
[229.12661743 437.31500244]
[237.79310608 449.56466675]
[245.63986206 462.35491943]
[252.63328552 475.63101196]
[258.74343872 489.33602905]
[263.94418335 503.41137695]
[268.21319580 517.79669189]
[271.53219604 532.43041992]
[273.88702393 547.24993896]
[275.26754761 562.19171143]
[275.66790771 577.19177246]
[275.08633423 592.18591309]
[273.52532959 607.10986328]
[270.99157715 621.89984131]
[267.49597168 636.49237061]
[263.05343628 650.82507324]
[257.68298340 664.83654785]
[251.40765381 678.46673584]
[244.25430298 691.65734863]
[236.25355530 704.35180664]
[227.43966675 716.49584961]
[217.85038757 728.03741455]
[207.52679443 738.92712402]
[196.51307678 749.11834717]
[184.85639954 758.56738281]
[172.60667419 767.23376465]
[159.81637573 775.08044434]
[146.54026794 782.07379150]
[132.83518982 788.18389893]
[118.75983429 793.38452148]
[104.37447357 797.65344238]
[89.74071503 800.97241211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 167]
[52 166]
[53 165]
[56 162]
[57 161]
[58 160]
[59 159]
[60 158]
[62 157]
[64 156]
[65 155]
[66 154]
[70 151]
[71 150]
[73 149]
[74 148]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[85 134]
[86 133]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
