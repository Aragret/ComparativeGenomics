%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[108.30091095 475.59335327]
[109.24360657 460.56256104]
[113.39588165 446.08593750]
[120.56352234 432.84057617]
[130.41128540 421.44604492]
[142.47857666 412.43524170]
[156.20097351 406.22961426]
[153.09686279 391.55432129]
[149.99275208 376.87902832]
[146.67050171 362.25155640]
[143.13082886 347.67517090]
[139.59115601 333.09881592]
[136.05148315 318.52243042]
[132.51181030 303.94604492]
[128.97167969 300.74035645]
[127.40775299 295.27673340]
[129.09062195 288.88302612]
[125.98651123 274.20773315]
[112.33312225 268.31512451]
[104.67704010 255.35948181]
[106.13478851 240.20268250]
[116.35594940 228.67732239]
[113.25183868 214.00201416]
[110.14773560 199.32672119]
[107.04362488 184.65141296]
[103.93951416 169.97612000]
[93.73590851 159.12550354]
[98.44990540 144.02290344]
[89.38140869 155.97122192]
[74.53961945 158.14408875]
[62.42659378 149.29679871]
[59.98122025 134.49746704]
[68.60432434 122.22383118]
[83.35619354 119.50678253]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.42723083 59.00045013]
[85.42321777 44.13492203]
[83.41920471 29.26939201]
[79.23219299 14.86561108]
[72.95482635 1.24229455]
[66.67746735 -12.38102150]
[60.40010834 -26.00433731]
[54.12274551 -39.62765503]
[41.32032394 -48.92327118]
[43.02125931 -63.72043610]
[36.74389648 -77.34375763]
[30.46653748 -90.96707153]
[23.78634262 -104.39744568]
[16.70923615 -117.62297058]
[9.63213158 -130.84849548]
[2.55502582 -144.07403564]
[-4.52207947 -157.29956055]
[-11.33016491 -163.38952637]
[-11.60443401 -170.77510071]
[-18.48384666 -184.10452271]
[-25.36325836 -197.43395996]
[-32.24267197 -210.76338196]
[-37.59064484 -214.65063477]
[-39.83566284 -219.87144470]
[-39.12178421 -224.59367371]
[-45.60127640 -238.12202454]
[-52.08077240 -251.65036011]
[-58.56026840 -265.17871094]
[-65.03976440 -278.70706177]
[-71.51926422 -292.23541260]
[-77.99875641 -305.76376343]
[-92.36843109 -301.36260986]
[-107.23358917 -299.15240479]
[-122.26211548 -299.18255615]
[-137.11828613 -301.45233154]
[-151.47019958 -305.91104126]
[-164.99723816 -312.45910645]
[-177.39718628 -320.95022583]
[-188.39303589 -331.19467163]
[-197.73913574 -342.96362305]
[-205.22668457 -355.99414062]
[-210.68841553 -369.99508667]
[-214.00230408 -384.65374756]
[-215.09432983 -399.64257812]
[-213.94007874 -414.62673950]
[-210.56535339 -429.27151489]
[-205.04553223 -443.24966431]
[-197.50393677 -456.24899292]
[-188.10905457 -467.97900391]
[-177.07075500 -478.17773438]
[-164.63565063 -486.61727905]
[-151.08154297 -493.10910034]
[-136.71124268 -497.50820923]
[-121.84577942 -499.71627808]
[-106.81725311 -499.68399048]
[-91.96141052 -497.41210938]
[-77.61013031 -492.95132446]
[-64.08403015 -486.40136719]
[-51.68528748 -477.90847778]
[-40.69089508 -467.66244507]
[-31.34647179 -455.89218140]
[-23.86077499 -442.86059570]
[-18.40103912 -428.85885620]
[-15.08923435 -414.19973755]
[-13.99934959 -399.21075439]
[-15.15573215 -384.22674561]
[-18.53254700 -369.58245850]
[-24.05435753 -355.60510254]
[-31.59780502 -342.60684204]
[-40.99436188 -330.87814331]
[-52.03410721 -320.68103027]
[-64.47041321 -312.24325562]
[-57.99091721 -298.71490479]
[-51.51142120 -285.18655396]
[-45.03192520 -271.65820312]
[-38.55242920 -258.12985229]
[-32.07293320 -244.60151672]
[-25.59343719 -231.07316589]
[-18.91324234 -217.64279175]
[-12.03382969 -204.31336975]
[-5.15441704 -190.98393250]
[1.72499549 -177.65451050]
[8.70344830 -164.37666321]
[15.78055286 -151.15113831]
[22.85765839 -137.92561340]
[29.93476486 -124.70008087]
[37.01187134 -111.47454834]
[39.65258408 -110.53392792]
[42.07981491 -108.49060822]
[43.87170029 -105.42066193]
[44.64166641 -101.55133820]
[44.08985138 -97.24443054]
[50.36721420 -83.62111664]
[56.64457321 -69.99779510]
[68.99800110 -61.67660904]
[67.74606323 -45.90501404]
[74.02342224 -32.28170013]
[80.30078125 -18.65838242]
[86.57814789 -5.03506613]
[92.85550690 8.58825016]
[93.47154236 -6.39909458]
[98.23044586 -20.62417221]
[106.75691986 -32.96512985]
[118.37851715 -42.44871521]
[132.17872620 -48.32700729]
[147.06919861 -50.13642120]
[161.87559509 -47.73426056]
[175.43025208 -41.30996704]
[186.66415405 -31.37018776]
[194.69139099 -18.69881821]
[198.87886047 -4.29517174]
[198.89634705 10.70481777]
[194.74247742 25.11818886]
[186.74481201 37.80824661]
[175.53411865 47.77419281]
[161.99449158 54.23007584]
[147.19372559 56.66675949]
[132.29907227 54.89207458]
[118.48519897 49.04597855]
[106.84151459 39.58952332]
[98.28472900 27.26537895]
[100.28874207 42.13090897]
[102.29275513 56.99643707]
[106.30170441 63.20530701]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[113.12520599 140.91879272]
[123.55084229 152.81907654]
[118.61481476 166.87200928]
[121.71892548 181.54730225]
[124.82303619 196.22261047]
[127.92714691 210.89791870]
[131.03125000 225.57321167]
[145.04386902 231.97267151]
[152.51408386 245.24102783]
[150.75975037 260.18713379]
[140.66181946 271.10360718]
[143.76593018 285.77893066]
[147.08818054 300.40637207]
[150.62785339 314.98275757]
[154.16752625 329.55914307]
[157.70719910 344.13549805]
[161.24687195 358.71188354]
[165.52650452 363.75134277]
[166.47612000 369.35449219]
[164.66806030 373.77490234]
[167.77217102 388.45019531]
[170.87628174 403.12551880]
[185.93617249 403.24310303]
[200.61859131 406.59585571]
[214.23680115 413.02688599]
[226.15386963 422.23544312]
[235.81242371 433.79080200]
[242.76068115 447.15252686]
[246.67369080 461.69564819]
[247.36842346 476.73995972]
[244.81237793 491.58181763]
[239.12512207 505.52703857]
[230.57263184 517.92340088]
[219.55496216 528.19104004]
[206.58738708 535.84979248]
[192.27645874 540.54138184]
[177.29148865 542.04638672]
[162.33338928 540.29449463]
[148.10176086 535.36755371]
[135.26223755 527.49603271]
[124.41535187 517.04809570]
[116.06843567 504.51245117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[17 180]
[18 179]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[28 169]
[35 168]
[36 167]
[38 165]
[39 164]
[40 162]
[41 161]
[42 160]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[49 133]
[50 132]
[51 131]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[58 121]
[59 120]
[60 119]
[61 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
