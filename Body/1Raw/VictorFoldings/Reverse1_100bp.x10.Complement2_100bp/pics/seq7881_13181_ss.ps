%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[35.74654770 424.04534912]
[33.77262878 438.93103027]
[30.14442062 453.50210571]
[24.90755272 467.57531738]
[18.12788582 480.97366333]
[9.89068127 493.52868652]
[0.29952925 505.08245850]
[-10.52495098 515.48968506]
[-22.44662857 524.61950684]
[-35.31557846 532.35711670]
[-48.96995926 538.60516357]
[-63.23804855 543.28503418]
[-77.94041443 546.33801270]
[-92.89216614 547.72552490]
[-107.90525055 547.43029785]
[-122.79087830 545.45593262]
[-137.36184692 541.82727051]
[-151.43489075 536.58996582]
[-164.83305359 529.80993652]
[-177.38783264 521.57232666]
[-188.94131470 511.98083496]
[-199.34823608 501.15606689]
[-208.47769165 489.23410034]
[-216.21488953 476.36492920]
[-222.46252441 462.71035767]
[-227.14199829 448.44213867]
[-230.19450378 433.73965454]
[-231.58161926 418.78787231]
[-231.28590393 403.77481079]
[-229.31109619 388.88922119]
[-225.68202209 374.31838989]
[-220.44430542 360.24548340]
[-213.66383362 346.84753418]
[-205.42588806 334.29299927]
[-195.83404541 322.73980713]
[-185.00894165 312.33319092]
[-173.08671570 303.20410156]
[-160.21730042 295.46728516]
[-146.56254578 289.22006226]
[-132.29417419 284.54101562]
[-117.59162140 281.48895264]
[-102.63979340 280.10229492]
[-87.62672424 280.39843750]
[-72.74121857 282.37368774]
[-58.17047119 286.00320435]
[-44.09773254 291.24133301]
[-30.69997597 298.02221680]
[-22.47116852 285.48080444]
[-21.95825577 270.59503174]
[-7.91855288 263.30139160]
[0.31025502 250.75999451]
[8.53906250 238.21859741]
[16.76786995 225.67718506]
[24.99667931 213.13578796]
[20.63774109 201.01023865]
[24.11042595 188.39982605]
[34.36291885 179.96792603]
[47.79461670 178.96586609]
[56.20923233 166.54837036]
[63.86983109 153.65203857]
[70.74924469 140.32261658]
[77.62865448 126.99318695]
[76.59014893 112.13482666]
[89.79486847 103.42013550]
[93.55117035 88.89807892]
[93.99777985 73.90473175]
[94.44438171 58.91137695]
[94.89099121 43.91802979]
[95.33759308 28.92467880]
[82.79635620 37.15373230]
[68.49642944 32.62470627]
[62.97918701 18.67622948]
[70.31173706 5.59059906]
[85.08879089 3.01405525]
[96.41660309 12.84441757]
[97.97712708 -2.07418752]
[99.53764343 -16.99279213]
[88.27494049 -30.37826157]
[90.14093781 -47.43208694]
[103.49543762 -57.65441895]
[104.83367157 -72.59460449]
[106.17190552 -87.53479004]
[103.82059479 -96.36140442]
[107.64290619 -102.68688202]
[109.20343018 -117.60549164]
[110.76395416 -132.52409363]
[111.09893036 -147.52035522]
[102.55393982 -160.83552551]
[109.51998901 -174.00076294]
[108.62716675 -188.97416687]
[107.73435211 -203.94757080]
[106.84153748 -218.92098999]
[105.94872284 -233.89439392]
[91.22438812 -237.26643372]
[78.04718781 -244.65142822]
[67.48532867 -255.45066833]
[60.39501953 -268.78875732]
[57.35103989 -283.58438110]
[58.60014725 -298.63815308]
[64.04108429 -312.72976685]
[73.23278046 -324.71679688]
[85.43010712 -333.62759399]
[99.64427948 -338.73971558]
[114.72301483 -339.63882446]
[129.44395447 -336.25198364]
[142.61373901 -328.85375977]
[153.16473389 -318.04391479]
[160.24163818 -304.69873047]
[163.27075195 -289.90002441]
[162.00653076 -274.84750366]
[156.55143738 -260.76141357]
[147.34770203 -248.78358459]
[135.14143372 -239.88507080]
[120.92212677 -234.78720093]
[121.81494141 -219.81379700]
[122.70775604 -204.84039307]
[123.60057831 -189.86698914]
[124.49339294 -174.89358521]
[132.97451782 -162.64941406]
[126.07233429 -148.41316223]
[133.77790833 -161.28266907]
[146.53327942 -169.17573547]
[161.48887634 -170.32902527]
[175.30357361 -164.48487854]
[184.89114380 -152.94891357]
[188.10969543 -138.29827881]
[184.24018860 -123.80597687]
[174.14707947 -112.70961761]
[160.08520508 -107.48815155]
[145.19601440 -109.30807495]
[132.80580139 -117.76280975]
[125.68255615 -130.96357727]
[124.12203217 -116.04496765]
[122.56150818 -101.12636566]
[121.11209106 -86.19655609]
[119.77385712 -71.25637054]
[118.43562317 -56.31618500]
[127.99983215 -47.68163300]
[130.88763428 -34.92457199]
[125.82622528 -22.65295410]
[114.45625305 -15.43226910]
[112.89572906 -0.51366448]
[111.33520508 14.40494061]
[110.33094788 29.37128448]
[109.88433838 44.36463547]
[109.43773651 59.35798264]
[108.99112701 74.35133362]
[108.54452515 89.34468079]
[115.60259247 76.10898590]
[125.07591248 64.47901917]
[136.61032104 54.88957214]
[149.77458191 47.69915390]
[164.07655334 43.17658615]
[178.98153687 41.49094391]
[193.93231201 42.70524979]
[208.36991882 46.77410507]
[221.75459290 53.54539108]
[233.58595276 62.76596069]
[243.42167664 74.09109497]
[250.89402771 87.09739685]
[255.72366333 101.29861450]
[257.73001099 116.16383362]
[256.83810425 131.13728333]
[253.08122253 145.65919495]
[246.59985352 159.18664551]
[237.63632202 171.21391296]
[226.52571106 181.29133606]
[213.68341064 189.04216003]
[199.58953857 194.17662048]
[184.77099609 196.50276184]
[169.78179932 195.93362427]
[155.18232727 192.49047852]
[141.51837158 186.30204773]
[129.30079651 177.59970093]
[118.98635864 166.70878601]
[110.96066284 154.03643799]
[105.52375793 140.05645752]
[102.87890625 125.29147339]
[103.12429810 110.29955292]
[103.67074585 126.11132050]
[90.95808411 133.87258911]
[84.07867432 147.20202637]
[77.19925690 160.53144836]
[91.15280151 155.02703857]
[105.70526886 158.66377258]
[115.42893982 170.08525085]
[116.69712830 185.03153992]
[109.03684235 197.92805481]
[95.30516052 203.96470642]
[80.62368011 200.88996887]
[70.46821594 189.85064697]
[68.62673187 174.96298218]
[60.21210861 187.38047791]
[63.82709885 204.49629211]
[54.13573456 218.65229797]
[37.53807831 221.36459351]
[29.30927086 233.90600586]
[21.08046341 246.44740295]
[12.85165501 258.98880005]
[4.62284756 271.53021240]
[3.52135515 287.31301880]
[-9.92976856 293.70962524]
[-18.15857697 306.25100708]
[-6.60451031 315.84182739]
[3.80305314 326.66598511]
[12.93322849 338.58740234]
[20.67119408 351.45611572]
[26.91963577 365.11032104]
[31.59997368 379.37826538]
[34.65334702 394.08053589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 203]
[48 202]
[50 200]
[51 199]
[52 198]
[53 197]
[54 196]
[58 193]
[59 192]
[60 183]
[61 182]
[62 181]
[64 179]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[75 143]
[76 142]
[77 141]
[80 137]
[81 136]
[82 135]
[84 134]
[85 133]
[86 132]
[87 120]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
