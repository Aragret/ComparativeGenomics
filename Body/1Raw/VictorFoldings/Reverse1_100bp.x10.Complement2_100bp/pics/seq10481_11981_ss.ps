%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[118.20626068 617.45007324]
[104.88691711 610.52539062]
[92.29808807 602.34759521]
[80.55731201 592.99291992]
[69.77421570 582.54876709]
[60.04948044 571.11260986]
[51.47389984 558.79132080]
[44.12755203 545.69982910]
[38.07902145 531.96044922]
[33.38478851 517.70141602]
[30.08868027 503.05590820]
[28.22147369 488.16064453]
[27.80060387 473.15469360]
[28.82999802 458.17819214]
[31.30004501 443.37094116]
[35.18768311 428.87124634]
[40.45661163 414.81442261]
[47.05764008 401.33175659]
[54.92913055 388.54916382]
[63.99758530 376.58593750]
[74.17833710 365.55380249]
[85.37632751 355.55578613]
[97.48699951 346.68521118]
[110.39727783 339.02490234]
[123.98661804 332.64639282]
[138.12814331 327.60925293]
[152.68980408 323.96051025]
[150.46469116 309.12646484]
[148.23957825 294.29241943]
[146.01445007 279.45837402]
[143.78933716 264.62432861]
[141.56422424 249.79028320]
[138.02455139 235.21389771]
[133.19854736 221.01144409]
[128.37255859 206.80899048]
[116.95185852 197.24777222]
[119.83779144 181.69200134]
[115.01179504 167.48954773]
[110.18579865 153.28709412]
[105.35980225 139.08462524]
[93.93910217 129.52340698]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[86.87007141 105.71028137]
[80.88923645 119.46636200]
[71.46175385 131.13351440]
[59.26820755 139.86949158]
[45.18885040 145.04364014]
[30.24009132 146.28242493]
[15.50109100 143.49641418]
[2.03587079 136.88673401]
[-9.18350315 126.93054199]
[-17.34709549 114.34659576]
[-21.86556625 100.04332733]
[-22.41272736 85.05331421]
[-18.94907570 70.45868683]
[-11.72465801 57.31304932]
[-1.26100814 46.56539536]
[11.68649197 38.99161148]
[26.18315125 35.13844681]
[41.18244553 35.28407669]
[55.60155869 39.41797638]
[68.39956665 47.24172211]
[78.65256500 58.19050980]
[85.62078857 71.47502899]
[85.39746094 56.47669220]
[85.17413330 41.47835541]
[84.95080566 26.48001862]
[84.72747803 11.48168182]
[84.50415039 -3.51665568]
[82.94362640 -18.43526077]
[80.05834961 -33.15515137]
[77.17308044 -47.87504196]
[74.28781128 -62.59493637]
[71.40253448 -77.31482697]
[68.51726532 -92.03471375]
[65.63198853 -106.75460815]
[62.74671936 -121.47450256]
[57.96958160 -107.25553894]
[48.43470001 -95.67597961]
[35.39655304 -88.25933075]
[20.57052994 -85.98136902]
[5.90725470 -89.14179993]
[-6.66407108 -97.32482147]
[-15.48947144 -109.45380402]
[-19.40781403 -123.93298340]
[-17.90357399 -138.85736084]
[-11.17465878 -152.26339722]
[-0.10637304 -162.38728333]
[13.84505939 -167.89704895]
[28.84408760 -168.06779480]
[42.91733170 -162.87705994]
[54.21321487 -153.00776672]
[61.24628448 -139.75611877]
[61.69289017 -154.74946594]
[62.13949585 -169.74281311]
[62.58610153 -184.73616028]
[63.03270721 -199.72950745]
[63.47931290 -214.72285461]
[49.90734100 -221.70600891]
[40.71614456 -233.89143372]
[37.73064423 -248.85972595]
[41.54360962 -263.63888550]
[51.39797592 -275.29455566]
[65.33715057 -281.51245117]
[80.59350586 -281.05801392]
[94.13787079 -274.02145386]
[103.28100586 -261.79992676]
[106.20754242 -246.82000732]
[102.33640289 -232.05595398]
[92.43621826 -220.43920898]
[78.47266388 -214.27626038]
[78.02605438 -199.28291321]
[77.57945251 -184.28955078]
[77.13284302 -169.29620361]
[76.68624115 -154.30285645]
[76.23963165 -139.30950928]
[77.46660614 -124.35977173]
[80.35188293 -109.63988495]
[83.23715210 -94.91999054]
[86.12242889 -80.20009613]
[89.00769806 -65.48020935]
[91.89297485 -50.76031494]
[94.77824402 -36.04042435]
[97.66352081 -21.32053375]
[103.21595001 -35.25504303]
[114.20573425 -45.46408463]
[128.51092529 -49.97645187]
[143.36941528 -47.92088318]
[155.91226196 -39.69427109]
[163.71762085 -26.88504601]
[165.27842712 -11.96647072]
[160.29328918 2.18091321]
[149.72477722 12.82546711]
[135.61349487 17.91189384]
[120.68412018 16.45808601]
[107.81926727 8.74474812]
[99.50248718 -3.73998332]
[99.72581482 11.25835419]
[99.94914246 26.25669098]
[100.17247009 41.25502777]
[100.39579773 56.25336456]
[100.61912537 71.25170135]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[122.79338074 119.71871948]
[119.56225586 134.25863647]
[124.38825226 148.46109009]
[129.21424866 162.66354370]
[134.04025269 176.86599731]
[145.80613708 187.44308472]
[142.57501221 201.98298645]
[147.40100098 216.18545532]
[152.22700500 230.38790894]
[155.86799622 215.83650208]
[165.39532471 204.25073242]
[178.96942139 197.86763000]
[193.96932983 197.91967773]
[207.49880981 204.39680481]
[216.94552612 216.04838562]
[220.48547363 230.62469482]
[217.43513489 245.31126404]
[208.38348389 257.27236938]
[195.07826233 264.19845581]
[180.08848572 264.75225830]
[166.30845642 258.82684326]
[156.39826965 247.56515503]
[158.62338257 262.39920044]
[160.84849548 277.23324585]
[163.07362366 292.06729126]
[165.29873657 306.90133667]
[167.52384949 321.73538208]
[182.51519775 320.95117188]
[197.51225281 321.61752319]
[212.37496948 323.72817993]
[226.96459961 327.26348877]
[241.14491272 332.19039917]
[254.78349304 338.46292114]
[267.75302124 346.02249146]
[279.93237305 354.79852295]
[291.20785522 364.70907593]
[301.47418213 375.66159058]
[310.63546753 387.55386353]
[318.60623169 400.27481079]
[325.31201172 413.70568848]
[330.69021606 427.72103882]
[334.69061279 442.19006348]
[337.27584839 456.97763062]
[338.42181396 471.94567871]
[338.11776733 486.95443726]
[336.36654663 501.86380005]
[333.18457031 516.53454590]
[328.60147095 530.82965088]
[322.66006470 544.61572266]
[315.41586304 557.76397705]
[306.93646240 570.15167236]
[297.30102539 581.66314697]
[286.59957886 592.19091797]
[274.93197632 601.63671875]
[262.40719604 609.91229248]
[249.14215088 616.94042969]
[235.26072693 622.65545654]
[220.89251709 627.00402832]
[206.17169189 629.94555664]
[191.23568726 631.45257568]
[176.22395325 631.51098633]
[161.27665710 630.12030029]
[146.53337097 627.29345703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 156]
[34 155]
[35 154]
[37 152]
[38 151]
[39 150]
[40 149]
[42 147]
[44 145]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
