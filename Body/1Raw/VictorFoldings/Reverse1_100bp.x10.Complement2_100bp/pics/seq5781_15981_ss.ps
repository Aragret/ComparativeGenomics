%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[160.22071838 554.29644775]
[172.46598816 544.91253662]
[171.12776184 529.97235107]
[169.78952026 515.03216553]
[168.45129395 500.09201050]
[167.11305237 485.15182495]
[165.77482605 470.21163940]
[164.43658447 455.27145386]
[163.09834290 440.33126831]
[154.25643921 428.34503174]
[160.73168945 413.90960693]
[159.39344788 398.96942139]
[157.61099243 384.07571411]
[155.38586426 369.24166870]
[153.16075134 354.40762329]
[150.93563843 339.57357788]
[148.71052551 324.73953247]
[146.48539734 309.90548706]
[136.94572449 298.46676636]
[142.55029297 283.67153931]
[140.32518005 268.83749390]
[137.65937805 254.07626343]
[134.55526733 239.40097046]
[131.45115662 224.72566223]
[128.34704590 210.05036926]
[125.24293518 195.37506104]
[122.13882446 180.69975281]
[117.84470367 166.32754517]
[112.38934326 152.35475159]
[106.93399048 138.38194275]
[101.47863007 124.40914917]
[96.02327728 110.43635559]
[90.46405029 96.50455475]
[84.80126190 82.61452484]
[79.13847351 68.72450256]
[67.57432556 63.01194763]
[63.14373398 51.32633209]
[67.71188354 40.12550354]
[61.13185501 26.64576721]
[53.47126007 13.74944115]
[45.81066132 0.85311413]
[38.15006256 -12.04321289]
[24.80182457 -13.84296322]
[15.06938553 -22.87014961]
[12.35344315 -35.66490173]
[17.42637825 -47.50951385]
[9.95863628 -60.51846695]
[2.49089527 -73.52742004]
[-4.97684574 -86.53636932]
[-9.93035316 -72.37788391]
[-23.38416672 -65.74501801]
[-37.63133240 -70.43738556]
[-44.51042557 -83.76698303]
[-40.08078766 -98.09800720]
[-26.87992096 -105.22100067]
[-12.47062206 -101.05618286]
[-18.74798203 -114.67949677]
[-25.02534294 -128.30281067]
[-31.30270386 -141.92613220]
[-37.58006668 -155.54945374]
[-43.85742569 -169.17276001]
[-50.13478470 -182.79608154]
[-56.56832123 -189.28048706]
[-56.40250397 -196.66928101]
[-62.47634125 -210.38453674]
[-68.55017090 -224.09980774]
[-74.62400818 -237.81507874]
[-89.01127625 -233.50119019]
[-103.82578278 -231.02455139]
[-118.83387756 -230.42427063]
[-133.79885864 -231.70976257]
[-148.48471069 -234.86079407]
[-162.65982056 -239.82763672]
[-176.10061646 -246.53198242]
[-188.59512329 -254.86808777]
[-199.94628906 -264.70446777]
[-209.97508240 -275.88598633]
[-218.52333069 -288.23632812]
[-225.45622253 -301.56066895]
[-230.66441345 -315.64889526]
[-234.06578064 -330.27877808]
[-235.60664368 -345.21963501]
[-235.26274109 -360.23577881]
[-233.03945923 -375.09042358]
[-228.97189331 -389.54928589]
[-223.12417603 -403.38427734]
[-215.58853149 -416.37725830]
[-206.48382568 -428.32327271]
[-195.95364380 -439.03396606]
[-184.16406250 -448.34033203]
[-171.30101013 -456.09567261]
[-157.56736755 -462.17764282]
[-143.17973328 -466.49032593]
[-128.36502075 -468.96569824]
[-113.35687256 -469.56472778]
[-98.39199829 -468.27798462]
[-83.70641327 -465.12573242]
[-69.53172302 -460.15768433]
[-56.09149170 -453.45220947]
[-43.59768677 -445.11505127]
[-32.24735641 -435.27770996]
[-22.21950531 -424.09533691]
[-13.67229271 -411.74429321]
[-6.74051952 -398.41937256]
[-1.53350925 -384.33071899]
[1.86661577 -369.70053101]
[3.40623093 -354.75955200]
[3.06105399 -339.74340820]
[0.83652908 -324.88897705]
[-3.23225999 -310.43045044]
[-9.08114243 -296.59594727]
[-16.61787224 -283.60360718]
[-25.72358704 -271.65835571]
[-36.25467300 -260.94857788]
[-48.04504013 -251.64315796]
[-60.90874100 -243.88891602]
[-54.83490753 -230.17364502]
[-48.76107407 -216.45837402]
[-42.68724060 -202.74310303]
[-36.51147079 -189.07344055]
[-30.23410988 -175.45011902]
[-23.95674896 -161.82681274]
[-17.67938805 -148.20349121]
[-11.40202713 -134.58016968]
[-5.12466669 -120.95685577]
[1.15269387 -107.33354187]
[8.03210640 -94.00411224]
[15.49984741 -80.99516296]
[22.96758842 -67.98620605]
[30.43532944 -54.97725677]
[46.84212112 -51.28185654]
[55.67372131 -36.57411194]
[51.04639053 -19.70380974]
[58.70698929 -6.80748320]
[66.36758423 6.08884382]
[74.02818298 18.98517036]
[74.97325897 4.01497269]
[82.68807983 -8.84899235]
[95.44912720 -16.73288155]
[110.40554810 -17.87541389]
[124.21604919 -12.02134514]
[133.79531860 -0.47848865]
[137.00334167 14.17445183]
[133.12341309 28.66397095]
[123.02233124 39.75307465]
[108.95670319 44.96442795]
[94.06883240 43.13380051]
[81.68468475 34.67014694]
[95.95661926 44.88184357]
[93.02850342 63.06171417]
[98.69129181 76.95174408]
[104.35408020 90.84176636]
[110.07139587 96.52373505]
[109.99607086 104.98099518]
[115.45143127 118.95379639]
[120.90678406 132.92658997]
[126.36214447 146.89938354]
[131.81750488 160.87219238]
[135.19079590 146.25640869]
[144.89982605 134.82247925]
[158.77555847 129.12477112]
[173.71812439 130.43614197]
[186.38932800 138.46365356]
[193.95835876 151.41392517]
[194.73429871 166.39384460]
[188.54380798 180.05685425]
[176.76983643 189.35060120]
[162.04273987 192.19883728]
[147.65257263 187.96525574]
[136.81413269 177.59564209]
[139.91824341 192.27095032]
[143.02235413 206.94625854]
[146.12646484 221.62155151]
[149.23057556 236.29685974]
[152.33468628 250.97215271]
[155.35006714 254.09648132]
[157.04405212 257.65948486]
[157.44094849 261.19189453]
[156.71505737 264.28051758]
[155.15921021 266.61236572]
[157.38433838 281.44641113]
[167.08316040 293.94613647]
[161.31944275 307.68035889]
[163.54455566 322.51440430]
[165.76968384 337.34844971]
[167.99479675 352.18249512]
[170.21990967 367.01654053]
[172.44503784 381.85058594]
[175.26911926 385.14883423]
[176.74801636 388.80636597]
[176.93395996 392.35610962]
[176.02551270 395.39608765]
[174.33363342 397.63119507]
[175.67187500 412.57138062]
[184.60951233 425.62622070]
[178.03852844 438.99304199]
[179.37677002 453.93322754]
[180.71499634 468.87341309]
[182.05323792 483.81359863]
[183.39147949 498.75378418]
[184.72970581 513.69396973]
[186.06794739 528.63415527]
[187.40617371 543.57434082]
[201.12420654 550.63256836]
[208.82879639 563.99829102]
[208.06140137 579.40661621]
[199.06692505 591.94067383]
[184.71546936 597.60095215]
[169.58651733 594.58129883]
[158.50765991 583.84527588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[11 194]
[12 193]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[20 181]
[21 180]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 152]
[34 151]
[35 150]
[38 148]
[39 136]
[40 135]
[41 134]
[42 133]
[46 130]
[47 129]
[48 128]
[49 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[64 119]
[65 118]
[66 117]
[67 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
