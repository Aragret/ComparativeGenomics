%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[159.77328491 472.10733032]
[162.04092407 457.25082397]
[166.49757385 442.89828491]
[173.04368591 429.37030029]
[181.53300476 416.96911621]
[191.77586365 405.97180176]
[203.54347229 396.62399292]
[216.57289124 389.13455200]
[211.11753845 375.16177368]
[205.66218567 361.18896484]
[200.20683289 347.21615601]
[194.75146484 333.24337769]
[189.29611206 319.27056885]
[183.84075928 305.29776001]
[172.00451660 296.25604248]
[174.19297791 280.58694458]
[168.32402039 266.78274536]
[162.04666138 253.15943909]
[155.76928711 239.53611755]
[149.49192810 225.91281128]
[143.21456909 212.28948975]
[136.93721008 198.66616821]
[130.65985107 185.04286194]
[126.56920624 182.57797241]
[123.98355103 177.51721191]
[124.40515900 170.91918945]
[118.53619385 157.11502075]
[112.66723633 143.31083679]
[106.38987732 129.68751526]
[99.70967865 116.25714874]
[88.91191101 111.89257812]
[83.80295563 101.42645264]
[87.00399017 90.22847748]
[80.52449036 76.70012665]
[74.04499817 63.17178345]
[67.56549835 49.64343643]
[61.03613663 43.25554276]
[61.09192276 35.86509705]
[54.81456375 22.24177933]
[48.53720093 8.61846352]
[35.73477936 -0.67715532]
[37.43571472 -15.47432041]
[37.03598785 -0.47964722]
[33.23500443 14.03078079]
[26.23215485 27.29577637]
[16.39479446 38.61948395]
[4.23897076 47.40788269]
[-9.59764385 53.19995499]
[-24.38920975 55.69185638]
[-39.35979080 54.75286484]
[-53.72406006 50.43224716]
[-66.72850037 42.95664597]
[-77.69091797 32.71821594]
[-86.03624725 20.25405121]
[-91.32671356 6.21799088]
[-93.28479004 -8.65365791]
[-91.80775452 -23.58075905]
[-86.97309113 -37.78026962]
[-79.03441620 -50.50730515]
[-68.40818024 -61.09423828]
[-55.65181732 -68.98569489]
[-41.43449020 -73.76770782]
[-26.50201607 -75.18941498]
[-11.63772583 -73.17624664]
[2.37863326 -67.83380127]
[14.81178951 -59.44234085]
[25.00952339 -48.44206238]
[32.43753433 -35.40848541]
[31.54471970 -50.38189316]
[30.65190506 -65.35529327]
[29.75908852 -80.32870483]
[28.86627197 -95.30210876]
[27.97345734 -110.27551270]
[26.85780716 -125.23397064]
[25.51957321 -140.17414856]
[24.18133926 -155.11433411]
[22.84310532 -170.05451965]
[7.83195305 -170.52639771]
[-7.01286745 -172.80426025]
[-21.47487450 -176.85490417]
[-35.34317017 -182.61924744]
[-48.41551208 -190.01325989]
[-60.50126648 -198.92907715]
[-71.42419434 -209.23669434]
[-81.02499390 -220.78581238]
[-89.16367340 -233.40797424]
[-95.72153473 -246.91915894]
[-100.60295105 -261.12228394]
[-103.73673248 -275.81027222]
[-105.07717896 -290.76889038]
[-104.60475159 -305.78002930]
[-102.32633209 -320.62478638]
[-98.27514648 -335.08663940]
[-92.51027679 -348.95471191]
[-85.11578369 -362.02676392]
[-76.19950867 -374.11218262]
[-65.89147949 -385.03472900]
[-54.34201431 -394.63510132]
[-41.71953201 -402.77331543]
[-28.20811462 -409.33065796]
[-14.00479317 -414.21154785]
[0.68330431 -417.34478760]
[15.64198208 -418.68466187]
[30.65309906 -418.21166992]
[45.49774933 -415.93270874]
[59.95945358 -411.88098145]
[73.82731628 -406.11560059]
[86.89910889 -398.72061157]
[98.98419189 -389.80389404]
[109.90634918 -379.49545288]
[119.50628662 -367.94561768]
[127.64402008 -355.32284546]
[134.20086670 -341.81118774]
[139.08122253 -327.60766602]
[142.21391296 -312.91946411]
[143.55323792 -297.96072388]
[143.07968140 -282.94961548]
[140.80015564 -268.10507202]
[136.74789429 -253.64350891]
[130.98197937 -239.77586365]
[123.58651733 -226.70434570]
[114.66934204 -214.61959839]
[104.36048889 -203.69783020]
[92.81030273 -194.09831238]
[80.18721771 -185.96105957]
[66.67530823 -179.40470886]
[52.47162247 -174.52488708]
[37.78329086 -171.39276123]
[39.12152481 -156.45257568]
[40.45975876 -141.51239014]
[41.79799271 -126.57220459]
[44.82342529 -122.87682343]
[45.55956650 -117.24166107]
[42.94686127 -111.16832733]
[43.83967972 -96.19492340]
[44.73249435 -81.22151947]
[45.62530899 -66.24811554]
[46.51812744 -51.27470779]
[47.41094208 -36.30130005]
[51.05902863 -21.75168037]
[63.41245270 -13.43049240]
[62.16051865 2.34110308]
[68.43788147 15.96441936]
[74.71524048 29.58773613]
[81.09384155 43.16394424]
[87.57334137 56.69228745]
[94.05283356 70.22063446]
[100.53233337 83.74897766]
[114.61179352 92.86736298]
[113.14005280 109.57695007]
[119.82025146 123.00732422]
[123.52195740 125.27698517]
[126.05419922 128.30224609]
[127.32304382 131.62271118]
[127.39373016 134.79470825]
[126.47141266 137.44187927]
[132.34037781 151.24604797]
[138.20933533 165.05023193]
[144.28317261 178.76550293]
[150.56053162 192.38880920]
[156.83789062 206.01213074]
[163.11524963 219.63545227]
[169.39260864 233.25875854]
[175.66996765 246.88208008]
[181.94732666 260.50540161]
[185.57981873 262.88424683]
[188.02087402 265.98358154]
[189.19029236 269.34033203]
[189.16650391 272.51306152]
[188.16577148 275.13156128]
[200.39221191 285.17272949]
[197.81355286 299.84240723]
[203.26890564 313.81521606]
[208.72427368 327.78802490]
[214.17962646 341.76080322]
[219.63497925 355.73361206]
[225.09033203 369.70639038]
[230.54570007 383.67919922]
[245.20291138 380.35900879]
[260.19128418 379.26055908]
[275.17593384 380.40838623]
[289.82214355 383.77682495]
[303.80267334 389.29064941]
[316.80523682 396.82666016]
[328.53930664 406.21652222]
[338.74273682 417.25042725]
[347.18762207 429.68191528]
[353.68527222 443.23324585]
[358.09051514 457.60165405]
[360.30499268 472.46615601]
[360.27914429 487.49472046]
[358.01364136 502.35153198]
[353.55902100 516.70471191]
[347.01483154 530.23364258]
[338.52728271 542.63598633]
[328.28598022 553.63482666]
[316.51971436 562.98425293]
[303.49136353 570.47558594]
[289.49194336 575.94128418]
[274.83425903 579.25939941]
[259.84573364 580.35571289]
[244.86125183 579.20574951]
[230.21553040 575.83520508]
[216.23576355 570.31939697]
[203.23429871 562.78155518]
[191.50157166 553.39001465]
[181.29969788 542.35467529]
[172.85658264 529.92199707]
[166.36087036 516.36975098]
[161.95765686 502.00070190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[16 170]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[26 158]
[27 157]
[28 156]
[29 151]
[30 150]
[33 148]
[34 147]
[35 146]
[36 145]
[38 144]
[39 143]
[40 142]
[42 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[74 131]
[75 130]
[76 129]
[77 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
