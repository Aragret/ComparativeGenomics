%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[28.15551949 961.19970703]
[13.18561745 962.20715332]
[-1.81696212 962.39556885]
[-16.80744362 961.76446533]
[-31.74109268 960.31561279]
[-46.57333755 958.05346680]
[-61.25991440 954.98468018]
[-75.75698853 951.11846924]
[-90.02130127 946.46636963]
[-104.01028442 941.04217529]
[-117.68218231 934.86224365]
[-130.99618530 927.94482422]
[-143.91258240 920.31072998]
[-156.39280701 911.98266602]
[-168.39961243 902.98547363]
[-179.89717102 893.34600830]
[-190.85116577 883.09307861]
[-201.22891235 872.25726318]
[-210.99943542 860.87084961]
[-220.13359070 848.96789551]
[-228.60408020 836.58392334]
[-236.38566589 823.75579834]
[-243.45509338 810.52191162]
[-249.79129028 796.92169189]
[-255.37532043 782.99578857]
[-260.19055176 768.78570557]
[-264.22256470 754.33386230]
[-267.45938110 739.68341064]
[-269.89129639 724.87805176]
[-271.51107788 709.96197510]
[-272.31390381 694.97967529]
[-272.29733276 679.97595215]
[-271.46145630 664.99548340]
[-269.80877686 650.08300781]
[-267.34417725 635.28308105]
[-264.07504272 620.63977051]
[-260.01110840 606.19689941]
[-255.16455078 591.99743652]
[-249.54978943 578.08386230]
[-243.18359375 564.49768066]
[-236.08497620 551.27941895]
[-228.27510071 538.46856689]
[-219.77729797 526.10327148]
[-210.61689758 514.22052002]
[-200.82127380 502.85571289]
[-190.41963196 492.04281616]
[-179.44302368 481.81408691]
[-167.92422485 472.20004272]
[-155.89758301 463.22937012]
[-143.39901733 454.92883301]
[-130.46580505 447.32324219]
[-117.13655853 440.43527222]
[-103.45105743 434.28549194]
[-89.45014191 428.89224243]
[-75.17559814 424.27160645]
[-60.67002106 420.43737793]
[-45.97670746 417.40103149]
[-31.13950539 415.17163086]
[-16.20269775 413.75576782]
[-1.21085870 413.15771484]
[13.79126835 413.37927246]
[28.75891113 414.41970825]
[43.64739990 416.27600098]
[46.31319427 401.51480103]
[48.97898865 386.75357056]
[51.42471695 371.95431519]
[53.64983368 357.12026978]
[55.87495041 342.28622437]
[58.10007095 327.45217896]
[55.98357391 320.37106323]
[60.47032928 312.41448975]
[62.91605759 297.61523438]
[65.36178589 282.81594849]
[67.69727325 267.99887085]
[69.92238617 253.16484070]
[72.14750671 238.33079529]
[74.37261963 223.49674988]
[76.59774017 208.66270447]
[78.82285309 193.82865906]
[81.04797363 178.99462891]
[83.27309418 164.16058350]
[85.49820709 149.32653809]
[87.72332764 134.49249268]
[89.83795166 119.64229584]
[91.84196472 104.77676392]
[89.68861389 99.99376678]
[90.36837769 94.34476471]
[94.13333893 89.50100708]
[96.57906342 74.70173645]
[91.19540405 59.82468033]
[100.90432739 48.52928162]
[103.35005188 33.73001099]
[105.57517242 18.89596558]
[107.57918549 4.03043795]
[109.47247314 -10.84959698]
[111.25494385 -25.74331474]
[113.03740692 -40.63703156]
[106.99481964 -55.25885391]
[116.18968964 -66.97651672]
[102.29903412 -72.91168976]
[90.64405060 -82.52095795]
[82.16957092 -95.02535248]
[77.56256866 -109.41118622]
[77.19651794 -124.51226807]
[81.10109711 -139.10441589]
[88.95977783 -152.00473022]
[100.13549042 -162.16740417]
[113.72226715 -168.76863098]
[128.61869812 -171.27325439]
[143.61717224 -169.47825623]
[157.50186157 -163.52912903]
[169.14718628 -153.90815735]
[177.60910034 -141.39526367]
[182.20166016 -127.00480652]
[182.55253601 -111.90335846]
[178.63330078 -97.31513977]
[170.76165771 -84.42273712]
[159.57574463 -74.27127838]
[145.98234558 -67.68370819]
[131.08340454 -65.19404602]
[137.25349426 -51.63752365]
[127.93112183 -38.85456467]
[126.14865875 -23.96084785]
[124.36619568 -9.06713104]
[126.69258118 -2.05216813]
[122.44470978 6.03445148]
[120.44069672 20.89998055]
[122.57252502 25.17366219]
[122.04228210 30.83191872]
[118.14932251 36.17573547]
[115.70359802 50.97500992]
[121.26219177 64.79351807]
[111.37833405 77.14746094]
[108.93260956 91.94673157]
[106.70748901 106.78077698]
[104.70347595 121.64630890]
[106.65831757 130.56910706]
[102.55736542 136.71760559]
[100.33225250 151.55165100]
[98.10713196 166.38569641]
[95.88201904 181.21974182]
[93.65689850 196.05378723]
[91.43178558 210.88783264]
[89.20666504 225.72186279]
[86.98155212 240.55590820]
[84.75643158 255.38995361]
[82.53131104 270.22399902]
[84.35308838 279.17492676]
[80.16105652 285.26168823]
[77.71532440 300.06094360]
[75.26959991 314.86022949]
[72.93411255 329.67727661]
[70.70899200 344.51132202]
[68.48387909 359.34536743]
[66.25875854 374.17941284]
[68.31921387 380.46160889]
[67.08325958 386.00863647]
[63.74020767 389.41937256]
[61.07441330 404.18057251]
[58.40861511 418.94180298]
[73.00591278 422.41049194]
[87.39200592 426.67114258]
[101.52396393 431.71105957]
[115.35959625 437.51519775]
[128.85763550 444.06622314]
[141.97778320 451.34460449]
[154.68087769 459.32858276]
[166.92901611 467.99438477]
[178.68565369 477.31610107]
[189.91569519 487.26593018]
[200.58561707 497.81417847]
[210.66358948 508.92935181]
[220.11953735 520.57830811]
[228.92523193 532.72625732]
[237.05438232 545.33697510]
[244.48275757 558.37274170]
[251.18815613 571.79479980]
[257.15057373 585.56292725]
[262.35226440 599.63616943]
[266.77761841 613.97247314]
[270.41351318 628.52899170]
[273.24902344 643.26239014]
[275.27575684 658.12866211]
[276.48760986 673.08337402]
[276.88098145 688.08197021]
[276.45471191 703.07971191]
[275.21005249 718.03173828]
[273.15072632 732.89349365]
[270.28289795 747.62060547]
[266.61511230 762.16918945]
[262.15829468 776.49572754]
[256.92578125 790.55749512]
[250.93315125 804.31256104]
[244.19833374 817.71984863]
[236.74139404 830.73931885]
[228.58459473 843.33215332]
[219.75227356 855.46075439]
[210.27081299 867.08892822]
[200.16848755 878.18200684]
[189.47544861 888.70678711]
[178.22360229 898.63195801]
[166.44654846 907.92791748]
[154.17942810 916.56677246]
[141.45884705 924.52288818]
[128.32276917 931.77246094]
[114.81040192 938.29388428]
[100.96206665 944.06768799]
[86.81909180 949.07653809]
[72.42369080 953.30566406]
[57.81882095 956.74230957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 160]
[64 159]
[65 158]
[66 155]
[67 154]
[68 153]
[69 152]
[71 151]
[72 150]
[73 149]
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[84 136]
[85 135]
[88 134]
[89 133]
[91 131]
[92 130]
[93 127]
[94 126]
[95 124]
[96 123]
[97 122]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
