%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[162.44996643 304.69845581]
[170.81484985 292.22219849]
[180.70652771 280.91809082]
[191.96258545 270.97174072]
[183.54795837 258.55426025]
[177.19342041 254.78045654]
[175.10211182 245.88864136]
[166.87330627 233.34724426]
[158.64450073 220.80584717]
[150.41569519 208.26445007]
[135.82533264 205.49729919]
[127.30149841 192.89575195]
[130.30287170 177.61080933]
[122.07405853 165.06941223]
[113.84525299 152.52799988]
[114.78954315 167.49826050]
[110.33173370 181.82054138]
[101.05831146 193.61051941]
[88.18936157 201.31703186]
[73.41802216 203.92613220]
[58.68770599 201.09455872]
[45.93644333 193.19485474]
[36.84188461 181.26635742]
[32.60057449 166.87846375]
[33.77052689 151.92416382]
[40.19781876 138.37094116]
[51.03683090 128.00195312]
[64.86149597 122.18141937]
[79.85295105 121.67514038]
[94.03880310 126.54971313]
[105.55419159 136.16564941]
[100.30747223 122.11317444]
[95.06075287 108.06069946]
[90.90549469 104.85948944]
[88.83959961 99.55803680]
[89.87385559 93.51094818]
[85.04785919 79.30849457]
[80.22186279 65.10604095]
[75.39585876 50.90358353]
[70.56986237 36.70112991]
[65.74386597 22.49867249]
[60.91786957 8.29621696]
[58.42432785 23.08750725]
[51.32111359 36.29903030]
[40.35784149 46.53654099]
[26.69149017 52.71965408]
[11.76430511 54.19584656]
[-2.84841347 50.80933380]
[-15.60455036 42.91750336]
[-25.15791893 31.35319901]
[-30.50033188 17.33682823]
[-31.06798935 2.34757304]
[-26.80098534 -12.03271484]
[-18.14962769 -24.28644943]
[-6.02691507 -33.12046432]
[8.28781414 -37.60248947]
[23.28389359 -37.25951767]
[37.37874985 -32.12775040]
[49.08491898 -22.74875259]
[57.16709518 -10.11213589]
[56.05144882 -25.07058907]
[54.93579865 -40.02904129]
[44.21775055 -55.00251770]
[52.44850540 -70.50160217]
[51.11027145 -85.44178772]
[49.77203751 -100.38197327]
[48.43380356 -115.32215881]
[47.09556961 -130.26234436]
[45.75733185 -145.20252991]
[44.41909790 -160.14271545]
[38.62577438 -146.30662537]
[28.88813782 -134.89704895]
[16.13431740 -127.00147247]
[1.57992923 -123.37245178]
[-13.38779736 -124.35588837]
[-27.34223366 -129.85804749]
[-38.95333481 -139.35449219]
[-47.11439896 -151.94007874]
[-51.04756546 -166.41523743]
[-50.37795639 -181.40028381]
[-45.16939163 -195.46693420]
[-35.91831589 -207.27445984]
[-23.50648308 -215.69743347]
[-9.11691284 -219.93302917]
[5.87887430 -219.57752991]
[20.05157471 -214.66484070]
[32.05033875 -205.66319275]
[40.73151779 -193.43057251]
[45.26785278 -179.13177490]
[47.93364716 -193.89299011]
[50.37937546 -208.69227600]
[52.60449219 -223.52630615]
[54.82960892 -238.36035156]
[57.05472565 -253.19439697]
[59.27984238 -268.02844238]
[61.50496292 -282.86248779]
[63.73007965 -297.69653320]
[65.95519257 -312.53057861]
[52.01190567 -318.26190186]
[39.84579468 -327.16409302]
[30.16418266 -338.71960449]
[23.52994728 -352.25662231]
[20.32879448 -366.98806763]
[20.74683380 -382.05752563]
[24.75976181 -396.58886719]
[32.13426971 -409.73727417]
[42.44161987 -420.73825073]
[55.08255005 -428.95230103]
[69.32213593 -433.90179443]
[84.33250427 -435.29904175]
[99.24097443 -433.06277466]
[113.18078613 -427.32296753]
[125.34149933 -418.41339111]
[135.01609802 -406.85202026]
[141.64213562 -393.31100464]
[144.83435059 -378.57760620]
[144.40718079 -363.50839233]
[140.38543701 -348.97949219]
[133.00296021 -335.83557129]
[122.68894196 -324.84082031]
[110.04303741 -316.63446045]
[95.80045319 -311.69360352]
[80.78923798 -310.30545044]
[78.56412506 -295.47140503]
[76.33900452 -280.63735962]
[74.11388397 -265.80331421]
[71.88877106 -250.96928406]
[69.66365051 -236.13523865]
[67.43853760 -221.30119324]
[65.21341705 -206.46714783]
[67.28137970 -202.16220093]
[66.66695404 -196.51246643]
[62.69486618 -191.22720337]
[60.02906799 -176.46598816]
[59.35928345 -161.48094177]
[60.69751740 -146.54075623]
[62.03575134 -131.60057068]
[63.37398529 -116.66039276]
[64.71221924 -101.72020721]
[66.05045319 -86.78002167]
[67.38868713 -71.83983612]
[76.46707153 -63.84548950]
[77.70424652 -51.40952682]
[69.89424896 -41.14469147]
[71.00990295 -26.18623734]
[72.12554932 -11.22778416]
[75.12032318 3.47021961]
[79.94631958 17.67267609]
[84.77231598 31.87513161]
[89.59832001 46.07758713]
[94.42431641 60.28004074]
[99.25031281 74.48249817]
[104.07630920 88.68495178]
[109.11322784 102.81398010]
[114.35994720 116.86645508]
[119.60665894 130.91893005]
[126.38665771 144.29919434]
[134.61546326 156.84060669]
[142.84426880 169.38200378]
[158.06062317 172.71371460]
[166.22714233 185.54969788]
[162.95709229 200.03564453]
[171.18589783 212.57704163]
[179.41470337 225.11843872]
[187.64350891 237.65983582]
[195.96545410 250.13963318]
[204.38008118 262.55712891]
[217.78976440 255.78892517]
[231.95487976 250.79113770]
[246.64280701 247.64582825]
[261.61236572 246.40464783]
[276.61773682 247.08798218]
[291.41253662 249.68460083]
[305.75381470 254.15187073]
[319.40603638 260.41644287]
[332.14508057 268.37542725]
[343.76171875 277.89813232]
[354.06518555 288.82821655]
[362.88632202 300.98617554]
[370.08029175 314.17236328]
[375.52890015 328.17022705]
[379.14273071 342.74996948]
[380.86242676 357.67214966]
[380.65972900 372.69171143]
[378.53799438 387.56201172]
[374.53204346 402.03890991]
[368.70767212 415.88467407]
[361.16049194 428.87191772]
[352.01449585 440.78741455]
[341.41979980 451.43545532]
[329.55041504 460.64123535]
[316.60125732 468.25357056]
[302.78494263 474.14743042]
[288.32833862 478.22607422]
[273.46887207 480.42248535]
[258.45053101 480.70065308]
[243.51989746 479.05596924]
[228.92219543 475.51544189]
[214.89710999 470.13723755]
[201.67494202 463.00961304]
[189.47282410 454.24969482]
[178.49110413 444.00125122]
[168.91014099 432.43261719]
[160.88725281 419.73373413]
[154.55416870 406.11315918]
[150.01489258 391.79449463]
[147.34397888 377.01293945]
[146.58525085 362.01119995]
[147.75120544 347.03558350]
[150.82267761 332.33203125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 167]
[5 166]
[7 165]
[8 164]
[9 163]
[10 162]
[13 159]
[14 158]
[15 157]
[31 156]
[32 155]
[33 154]
[36 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[42 147]
[60 146]
[61 145]
[62 144]
[64 141]
[65 140]
[66 139]
[67 138]
[68 137]
[69 136]
[70 135]
[89 134]
[90 133]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
