%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[44.55149078 504.18905640]
[38.14587784 517.77880859]
[29.94939804 530.36975098]
[20.11474037 541.72729492]
[8.82512283 551.63983154]
[-3.70913839 559.92266846]
[-17.25453758 566.42163086]
[-31.55873108 571.01550293]
[-46.35523987 573.61877441]
[-61.36841583 574.18292236]
[-76.31857300 572.69750977]
[-90.92720032 569.19006348]
[-104.92214203 563.72607422]
[-118.04268646 556.40728760]
[-130.04440308 547.36999512]
[-140.70370483 536.78259277]
[-149.82202148 524.84228516]
[-157.22949219 511.77160645]
[-162.78810120 497.81396484]
[-166.39430237 483.22943115]
[-167.98091125 468.28967285]
[-167.51838684 453.27301025]
[-165.01531982 438.45922852]
[-160.51835632 424.12426758]
[-154.11128235 410.53518677]
[-145.91343689 397.94512939]
[-136.07754517 386.58868408]
[-124.78685760 376.67736816]
[-112.25170135 368.39584351]
[-98.70559692 361.89840698]
[-84.40090942 357.30606079]
[-69.60411835 354.70440674]
[-54.59087753 354.14184570]
[-39.64088058 355.62890625]
[-25.03263664 359.13790894]
[-19.57728004 345.16510010]
[-14.12192249 331.19229126]
[-14.61749935 323.81826782]
[-8.47992611 317.05307007]
[-2.81713939 303.16305542]
[2.84564710 289.27301025]
[8.50843334 275.38299561]
[14.17121983 261.49298096]
[11.81125450 246.78651428]
[24.18583679 236.92851257]
[9.55844307 240.25105286]
[-2.25401044 231.00627136]
[-2.54382086 216.00907898]
[8.90264893 206.31483459]
[23.64748573 209.06977844]
[30.82125664 222.24142456]
[29.56164360 207.40017700]
[42.63515472 198.48985291]
[49.31534958 185.05947876]
[55.99554443 171.62910461]
[62.67573929 158.19873047]
[61.41612625 143.35748291]
[74.48963928 134.44715881]
[81.16983032 121.01678467]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[85.40242767 92.63652039]
[70.41371155 92.05497742]
[57.67144394 84.14076233]
[50.50643539 70.96265411]
[50.79159546 55.96536636]
[58.45238876 43.06915283]
[71.48629761 35.64505768]
[86.48629761 35.63372421]
[99.53141022 43.03810501]
[107.21169281 55.92272186]
[107.51972961 70.91870117]
[116.11829376 58.62786102]
[124.71685791 46.33702469]
[126.28777313 30.59400177]
[139.92338562 24.60072327]
[148.52195740 12.30988598]
[157.12051392 0.01904773]
[165.71908569 -12.27179050]
[174.04101562 -24.75158310]
[182.08219910 -37.41410828]
[190.12336731 -50.07663345]
[183.68804932 -65.71897125]
[187.80349731 -81.95363617]
[200.65579224 -92.43124390]
[217.05465698 -93.17605591]
[224.90641785 -105.95690155]
[232.75816345 -118.73774719]
[240.60992432 -131.51858521]
[248.46168518 -144.29942322]
[256.31344604 -157.08027649]
[264.16519165 -169.86111450]
[271.34054565 -183.03358459]
[277.82006836 -196.56193542]
[284.29956055 -210.09028625]
[290.77905273 -223.61862183]
[278.19314575 -231.81925964]
[266.78536987 -241.59255981]
[256.75091553 -252.77131653]
[248.26144409 -265.16421509]
[241.46226501 -278.55923462]
[236.46972656 -292.72714233]
[233.36921692 -307.42550659]
[232.21383667 -322.40280151]
[233.02331543 -337.40280151]
[235.78382874 -352.16879272]
[240.44812012 -366.44812012]
[246.93640137 -379.99645996]
[255.13763428 -392.58197021]
[264.91146851 -403.98928833]
[276.09069824 -414.02322388]
[288.48400879 -422.51208496]
[301.87936401 -429.31063843]
[316.04748535 -434.30249023]
[330.74600220 -437.40231323]
[345.72338867 -438.55697632]
[360.72332764 -437.74676514]
[375.48919678 -434.98556519]
[389.76831055 -430.32058716]
[403.31631470 -423.83166504]
[415.90142822 -415.62985229]
[427.30828857 -405.85543823]
[437.34170532 -394.67575073]
[445.82995605 -382.28201294]
[452.62786865 -368.88638306]
[457.61907959 -354.71798706]
[460.71817017 -340.01934814]
[461.87213135 -325.04190063]
[461.06121826 -310.04199219]
[458.29931641 -295.27624512]
[453.63363647 -280.99737549]
[447.14407349 -267.44964600]
[438.94165039 -254.86492920]
[429.16671753 -243.45854187]
[417.98654175 -233.42567444]
[405.59240723 -224.93798828]
[392.19644165 -218.14073181]
[378.02783203 -213.15020752]
[363.32901001 -210.05180359]
[348.35153198 -208.89854431]
[333.35165405 -209.71017456]
[318.58605957 -212.47279358]
[304.30740356 -217.13912964]
[297.82788086 -203.61077881]
[291.34838867 -190.08244324]
[284.86889648 -176.55409241]
[298.98718262 -181.62109375]
[313.10244751 -176.54574585]
[320.76141357 -163.64843750]
[318.46249390 -148.82565308]
[307.25671387 -138.85417175]
[292.26721191 -138.29280090]
[280.34698486 -147.39820862]
[276.94604492 -162.00935364]
[269.09426880 -149.22851562]
[261.24252319 -136.44767761]
[253.39076233 -123.66683197]
[245.53901672 -110.88598633]
[237.68725586 -98.10514832]
[229.83549500 -85.32430267]
[236.05389404 -73.51016998]
[235.61915588 -60.05821609]
[228.53793335 -48.48558426]
[216.56863403 -41.87087631]
[202.78588867 -42.03546143]
[194.74472046 -29.37293625]
[186.70355225 -16.71041107]
[187.11073303 -13.20804787]
[185.84173584 -9.33445740]
[182.74057007 -5.87959862]
[178.00991821 -3.67322636]
[169.41134644 8.61761189]
[160.81278992 20.90844917]
[152.21421814 33.19928741]
[151.25833130 48.06318665]
[137.00769043 54.93558884]
[128.40913391 67.22642517]
[119.81056976 79.51726532]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[94.60021210 127.69697571]
[87.92001343 141.12734985]
[88.70181274 156.92922974]
[76.10611725 164.87892151]
[69.42591858 178.30929565]
[62.74572754 191.73966980]
[56.06553268 205.17005920]
[56.84733200 220.97192383]
[44.25163269 228.92161560]
[38.07586288 242.59129333]
[40.03078842 258.29125977]
[28.06124687 267.15576172]
[22.39846039 281.04577637]
[16.73567390 294.93582153]
[11.07288742 308.82583618]
[5.41010094 322.71585083]
[-0.14912504 336.64767456]
[-5.60448217 350.62045288]
[-11.05983925 364.59326172]
[2.06149673 371.91064453]
[14.06419182 380.94665527]
[24.72464371 391.53289795]
[33.84425354 403.47216797]
[41.25312805 416.54205322]
[46.81324768 430.49911499]
[50.42102814 445.08325195]
[52.00925827 460.02285767]
[51.54835510 475.03955078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 201]
[36 200]
[37 199]
[39 198]
[40 197]
[41 196]
[42 195]
[43 194]
[45 192]
[51 191]
[53 189]
[54 188]
[55 187]
[56 186]
[58 184]
[59 183]
[60 182]
[62 180]
[73 179]
[74 178]
[75 177]
[77 175]
[78 174]
[79 173]
[80 172]
[81 168]
[82 167]
[83 166]
[87 161]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 147]
[95 146]
[96 145]
[97 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
