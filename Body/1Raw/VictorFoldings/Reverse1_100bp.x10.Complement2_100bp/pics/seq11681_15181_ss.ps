%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[184.52342224 506.49002075]
[197.52836609 498.73434448]
[194.42425537 484.05905151]
[184.22065735 473.20843506]
[188.93464661 458.10583496]
[185.83053589 443.43051147]
[182.72642517 428.75521851]
[179.62231445 414.07992554]
[176.51821899 399.40463257]
[173.41410828 384.72930908]
[169.76602173 370.17968750]
[165.57901001 355.77590942]
[161.39199829 341.37213135]
[157.20498657 326.96835327]
[152.91085815 312.59613037]
[148.50985718 298.25628662]
[137.97363281 292.31369019]
[134.18974304 280.40292358]
[139.70645142 268.74407959]
[135.51945496 254.34030151]
[121.13127136 254.89273071]
[107.02098846 251.97773743]
[94.01249695 245.76087952]
[82.86647797 236.60070801]
[74.23589325 225.02793884]
[68.62775421 211.71487427]
[66.37334442 197.43620300]
[67.60862732 183.02406311]
[72.26607513 169.31938171]
[80.07833099 157.12298584]
[90.59357452 147.14863586]
[103.20162964 139.98139954]
[99.22953033 125.51688385]
[95.25743103 111.05236053]
[91.07041931 96.64857483]
[86.66942596 82.30873108]
[82.26842499 67.96887970]
[77.86743164 53.62903595]
[73.46643066 39.28918839]
[69.06542969 24.94934082]
[55.29719162 12.72162342]
[59.89072800 -4.21550560]
[54.85381317 -18.34453583]
[49.39845657 -32.31733322]
[43.94309998 -46.29013062]
[37.90692902 -53.14596558]
[38.51223755 -60.51179123]
[33.26552200 -74.56426239]
[28.01880264 -88.61673737]
[22.35601616 -102.50675964]
[16.28218269 -116.22203064]
[10.20834827 -129.93730164]
[-4.91536951 -140.44227600]
[-2.36703730 -157.80525208]
[-8.64439774 -171.42857361]
[-14.92175865 -185.05187988]
[-21.19911957 -198.67520142]
[-27.57772446 -212.25140381]
[-34.05722046 -225.77975464]
[-40.53671646 -239.30810547]
[-47.01621246 -252.83644104]
[-53.49570847 -266.36480713]
[-59.97520447 -279.89312744]
[-66.45469666 -293.42147827]
[-72.93419647 -306.94982910]
[-79.41368866 -320.47817993]
[-85.89318848 -334.00653076]
[-100.17185211 -329.34017944]
[-114.93745422 -326.57757568]
[-129.93733215 -325.76593018]
[-144.91481018 -326.91918945]
[-159.61361694 -330.01757812]
[-173.78224182 -335.00811768]
[-187.17820740 -341.80538940]
[-199.57234192 -350.29306030]
[-210.75251770 -360.32592773]
[-220.52745056 -371.73233032]
[-228.72987366 -384.31704712]
[-235.21945190 -397.86474609]
[-239.88510132 -412.14364624]
[-242.64701843 -426.90939331]
[-243.45793152 -441.90930176]
[-242.30397034 -456.88671875]
[-239.20486450 -471.58538818]
[-234.21366882 -485.75375366]
[-227.41577148 -499.14941406]
[-218.92749023 -511.54312134]
[-208.89408875 -522.72283936]
[-197.48722839 -532.49725342]
[-184.90211487 -540.69903564]
[-171.35409546 -547.18798828]
[-157.07498169 -551.85296631]
[-142.30912781 -554.61419678]
[-127.30917358 -555.42437744]
[-112.33179474 -554.26971436]
[-97.63328552 -551.16986084]
[-83.46514893 -546.17803955]
[-70.06981659 -539.37945557]
[-57.67650223 -530.89062500]
[-46.49727631 -520.85668945]
[-36.72342300 -509.44937134]
[-28.52219582 -496.86386108]
[-22.03392029 -483.31552124]
[-17.36962128 -469.03619385]
[-14.60911179 -454.27020264]
[-13.79962730 -439.27020264]
[-14.95501900 -424.29287720]
[-18.05551720 -409.59451294]
[-23.04806900 -395.42660522]
[-29.84724236 -382.03161621]
[-38.33669662 -369.63870239]
[-48.37116623 -358.45996094]
[-59.77894974 -348.68664551]
[-72.36483765 -340.48602295]
[-65.88534546 -326.95767212]
[-59.40584946 -313.42932129]
[-52.92635345 -299.90097046]
[-46.44685745 -286.37261963]
[-39.96736145 -272.84429932]
[-33.48786545 -259.31594849]
[-27.00837135 -245.78759766]
[-20.52887535 -232.25924683]
[-14.04937840 -218.73091125]
[-8.32494640 -214.05622864]
[-7.57580328 -204.95256042]
[-1.29844248 -191.32925415]
[4.97891808 -177.70593262]
[11.25627899 -164.08261108]
[22.49198151 -159.60092163]
[27.83324814 -148.30249023]
[23.92361450 -136.01112366]
[29.99744797 -122.29586029]
[36.07128143 -108.58059692]
[38.63472366 -107.44617462]
[40.90325546 -105.22798157]
[42.46184540 -102.03326416]
[42.94189453 -98.11739349]
[42.07127380 -93.86345673]
[47.31799316 -79.81098175]
[52.56470871 -65.75851440]
[57.91589737 -51.74548721]
[63.37125397 -37.77268982]
[68.82660675 -23.79989243]
[71.33683777 -22.55213547]
[73.50405884 -20.23486328]
[74.91844177 -16.97373962]
[75.22315979 -13.04033470]
[74.16345978 -8.82951450]
[84.78698730 -3.04442978]
[88.74781036 8.80865860]
[83.40528107 20.54834366]
[87.80627441 34.88819122]
[92.20727539 49.22803879]
[96.60827637 63.56788635]
[101.00926971 77.90773010]
[105.41027069 92.24758148]
[109.36762238 95.69043732]
[111.11431122 101.10546112]
[109.72195435 107.08026123]
[113.69405365 121.54478455]
[117.66615295 136.00930786]
[133.31774902 135.86186218]
[148.46496582 139.76148987]
[162.08015442 147.43771362]
[173.24108887 158.36395264]
[181.19352722 171.79377747]
[185.40213013 186.81182861]
[185.58648682 202.39619446]
[181.73985291 217.48802185]
[174.12913513 231.06336975]
[163.27644348 242.20272827]
[149.92323303 250.15330505]
[154.11024475 264.55706787]
[167.69490051 276.98843384]
[162.84970093 293.85528564]
[167.25070190 308.19512939]
[172.76023865 315.48092651]
[171.60876465 322.78134155]
[175.79577637 337.18511963]
[179.98278809 351.58889771]
[184.16979980 365.99267578]
[193.57171631 354.30493164]
[208.57145691 354.21569824]
[218.11175537 365.79077148]
[215.15986633 380.49746704]
[201.89181519 387.49450684]
[188.08940125 381.62521362]
[191.19351196 396.30050659]
[194.29762268 410.97579956]
[197.40173340 425.65112305]
[200.50584412 440.32641602]
[203.60995483 455.00170898]
[214.03558350 466.90200806]
[209.09956360 480.95492554]
[212.20367432 495.63024902]
[227.23519897 497.45565796]
[240.85847473 504.06512451]
[251.59574890 514.74169922]
[258.28231812 528.32733154]
[260.19290161 543.34820557]
[257.12020874 558.17517090]
[249.39759827 571.19970703]
[237.86270142 581.00915527]
[223.76678467 586.53942871]
[208.63883972 587.19061279]
[194.11984253 582.89202881]
[181.78469849 574.11004639]
[172.97145081 561.79724121]
[168.63607788 547.28924561]
[169.24884033 532.15966797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 181]
[12 180]
[13 179]
[14 178]
[15 176]
[16 175]
[19 173]
[20 172]
[32 161]
[33 160]
[34 159]
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[42 148]
[43 143]
[44 142]
[45 141]
[47 140]
[48 139]
[49 138]
[50 133]
[51 132]
[52 131]
[54 128]
[55 127]
[56 126]
[57 125]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
