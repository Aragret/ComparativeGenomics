%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[41.19135284 771.78100586]
[26.13113022 771.10784912]
[11.66982269 766.84942627]
[-1.35180771 759.25335693]
[-12.17670059 748.76123047]
[-20.17551041 735.98303223]
[-24.88319778 721.66168213]
[-26.02606392 706.62976074]
[-23.53766251 691.76129150]
[-17.56266785 677.92071533]
[-8.44845676 665.91259766]
[3.27508068 656.43511963]
[16.92635536 650.03936768]
[31.71169853 647.09704590]
[32.38148499 632.11199951]
[33.05126953 617.12695312]
[33.72105408 602.14196777]
[34.39083862 587.15692139]
[35.06062317 572.17187500]
[35.73040771 557.18682861]
[33.63362885 554.35205078]
[32.80571747 550.36090088]
[33.77524948 545.82067871]
[36.77952194 541.55206299]
[38.11775589 526.61187744]
[39.45598984 511.67166138]
[40.79422379 496.73147583]
[42.13245773 481.79129028]
[40.16434860 478.86572266]
[39.51548004 474.84155273]
[40.68677521 470.34918213]
[43.87865829 466.21893311]
[45.88267136 451.35342407]
[47.88668442 436.48788452]
[45.66499710 429.43905640]
[50.03279114 421.41659546]
[52.25791168 406.58255005]
[54.48302841 391.74850464]
[40.77993393 383.78915405]
[31.15702820 371.14996338]
[27.11135292 355.74844360]
[29.29100800 339.93536377]
[37.39153671 326.13619995]
[50.19805145 316.47888184]
[65.76737213 312.46582031]
[59.79980850 298.81893921]
[69.31146240 286.17617798]
[71.31547546 271.31066895]
[73.31948853 256.44512939]
[75.32350159 241.57960510]
[77.21679688 226.69956970]
[78.99925995 211.80586243]
[80.78172302 196.91213989]
[82.56419373 182.01841736]
[84.34665680 167.12471008]
[86.12911987 152.23098755]
[87.91159058 137.33726501]
[89.69405365 122.44355011]
[91.47652435 107.54983521]
[80.82917786 118.11553955]
[66.18241882 121.35163116]
[52.07468414 116.25536346]
[42.87742233 104.40587616]
[41.44049835 89.47486115]
[48.20916367 76.08885193]
[61.08606720 68.39565277]
[76.08116913 68.77908325]
[88.54806519 77.12033844]
[94.62378693 90.83503723]
[90.58885956 75.53700256]
[101.26679230 65.15283203]
[105.02309418 50.63076782]
[104.14241028 41.53889084]
[108.94493866 35.92127991]
[112.91703033 21.45675659]
[116.88912964 6.99223232]
[120.86122131 -7.47229147]
[124.83332062 -21.93681526]
[128.80541992 -36.40134048]
[124.99870300 -51.75775528]
[135.83004761 -61.98179626]
[132.02333069 -77.33821106]
[142.85469055 -87.56225586]
[142.10946655 -96.66623688]
[146.99510193 -102.21172333]
[151.18211365 -116.61550140]
[155.36912537 -131.01928711]
[158.25439453 -145.73918152]
[159.81491089 -160.65777588]
[161.37544250 -175.57638550]
[162.93595886 -190.49499512]
[164.49649048 -205.41358948]
[166.05700684 -220.33219910]
[167.61753845 -235.25080872]
[153.26666260 -239.79362488]
[140.12417603 -247.13256836]
[128.72827148 -256.96710205]
[119.54558563 -268.89453125]
[112.95214844 -282.42639160]
[109.21797180 -297.00860596]
[108.49594879 -312.04400635]
[110.81565857 -326.91693115]
[116.08209991 -341.01834106]
[124.07962036 -353.77075195]
[134.48072815 -364.65200806]
[146.85951233 -373.21652222]
[160.70904541 -379.11358643]
[175.46221924 -382.10168457]
[190.51489258 -382.05847168]
[205.25067139 -378.98571777]
[219.06613159 -373.00927734]
[231.39553833 -364.37384033]
[241.73402405 -353.43307495]
[249.65820312 -340.63491821]
[254.84361267 -326.50354004]
[257.07791138 -311.61755371]
[256.26959229 -296.58651733]
[252.45175171 -282.02600098]
[245.78074646 -268.53219604]
[236.52975464 -256.65768433]
[225.07757568 -246.88873291]
[211.89317322 -239.62535095]
[197.51646423 -235.16499329]
[182.53613281 -233.69027710]
[180.97561646 -218.77168274]
[179.41508484 -203.85307312]
[177.85456848 -188.93446350]
[176.29405212 -174.01586914]
[174.73352051 -159.09725952]
[173.17300415 -144.17864990]
[182.56944275 -155.87081909]
[196.07090759 -162.40615845]
[211.07044983 -162.52279663]
[224.67190552 -156.19821167]
[234.24905396 -144.65357971]
[237.95268250 -130.11801147]
[235.06768799 -115.39805603]
[226.15110779 -103.33594513]
[212.92460632 -96.26065826]
[197.94200134 -95.53833008]
[184.09622192 -101.30844116]
[174.06063843 -112.45685577]
[169.77290344 -126.83227539]
[165.58589172 -112.42848969]
[161.39888000 -98.02471161]
[157.31921387 -83.59015656]
[161.41004944 -69.26834106]
[150.29457092 -58.00970078]
[154.38540649 -43.68788528]
[143.26994324 -32.42924118]
[139.29785156 -17.96471977]
[135.32574463 -3.50019503]
[131.35365295 10.96432877]
[127.38155365 25.42885208]
[123.40946198 39.89337540]
[119.54515076 54.38706970]
[115.78885651 68.90912628]
[120.09246063 83.16844940]
[109.14585114 94.59133911]
[106.37023926 109.33229828]
[104.58777618 124.22601318]
[102.80530548 139.11973572]
[101.02284241 154.01345825]
[99.24037170 168.90716553]
[97.45790863 183.80088806]
[95.67544556 198.69461060]
[93.89297485 213.58831787]
[92.11051178 228.48204041]
[94.19798279 237.37474060]
[90.18903351 243.58361816]
[88.18501282 258.44915771]
[86.18099976 273.31466675]
[84.17698669 288.18020630]
[90.00121307 302.89038086]
[80.63289642 314.46984863]
[93.14920807 321.26638794]
[102.57403564 331.90469360]
[107.79053497 345.09338379]
[108.19104767 359.24069214]
[103.74784851 372.64666748]
[95.01400757 383.70739746]
[83.05464935 391.10687256]
[69.31707001 393.97360229]
[67.09195709 408.80764771]
[64.86683655 423.64169312]
[62.75221252 438.49188232]
[60.74819946 453.35742188]
[58.74418640 468.22296143]
[57.07264328 483.12951660]
[55.73440933 498.06970215]
[54.39617538 513.00988770]
[53.05794144 527.95007324]
[51.71970749 542.89025879]
[50.71544647 557.85662842]
[50.04566193 572.84167480]
[49.37587738 587.82666016]
[48.70609283 602.81170654]
[48.03630829 617.79675293]
[47.36652374 632.78179932]
[46.69673538 647.76684570]
[61.16062164 652.01647949]
[74.18685913 659.60467529]
[85.01810455 670.09027100]
[93.02466583 682.86358643]
[97.74103546 697.18212891]
[98.89301300 712.21325684]
[96.41362762 727.08325195]
[90.44702148 740.92749023]
[81.34009552 752.94110107]
[69.62230682 762.42565918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[32 188]
[33 187]
[34 186]
[36 185]
[37 184]
[38 183]
[45 175]
[47 173]
[48 172]
[49 171]
[50 170]
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[69 159]
[71 157]
[72 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[79 150]
[81 148]
[83 146]
[85 145]
[86 144]
[87 143]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
