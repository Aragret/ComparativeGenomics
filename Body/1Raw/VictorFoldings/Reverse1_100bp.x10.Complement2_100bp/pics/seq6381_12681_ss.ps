%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[75.33013916 612.57659912]
[60.73977280 616.22247314]
[45.73795700 617.27917480]
[30.78057671 615.71459961]
[16.32217026 611.57629395]
[2.80211473 604.98999023]
[-9.36873245 596.15588379]
[-19.82051277 585.34240723]
[-28.23560905 572.87817383]
[-34.35829544 559.14190674]
[-38.00251007 544.55114746]
[-39.05751038 529.54919434]
[-37.49123383 514.59204102]
[-33.35128403 500.13409424]
[-26.76346016 486.61477661]
[-17.92796516 474.44491577]
[-7.11329699 463.99438477]
[5.35189724 455.58068848]
[19.08881569 449.45956421]
[33.68000793 445.81698608]
[48.68206406 444.76370239]
[50.24258423 429.84509277]
[51.80310822 414.92648315]
[53.36363220 400.00787354]
[46.99239731 386.54473877]
[56.12340927 373.62438965]
[57.68393326 358.70578003]
[59.24445724 343.78717041]
[52.87322235 330.32403564]
[62.00423431 317.40368652]
[63.56475830 302.48507690]
[53.16169739 296.96600342]
[45.20560455 288.23669434]
[40.64564133 277.30389404]
[40.03746033 265.43923950]
[43.47560501 254.03125000]
[50.57970428 244.42285156]
[60.53641129 237.75340271]
[72.19247437 234.82348633]
[74.41759491 219.98944092]
[76.64270782 205.15539551]
[78.86782837 190.32135010]
[73.10410309 176.58714294]
[82.80294037 164.08740234]
[85.02805328 149.25335693]
[79.26433563 135.51913452]
[88.96316528 123.01940918]
[91.18828583 108.18536377]
[93.19229889 93.31983948]
[94.97476196 78.42611694]
[96.75722504 63.53240204]
[98.53969574 48.63868713]
[90.90196228 31.88319206]
[101.96028900 18.25673485]
[103.52081299 3.33812928]
[105.08133698 -11.58047581]
[106.64186096 -26.49908066]
[92.33060455 -31.16457176]
[79.30726624 -38.70084381]
[68.13987732 -48.77637482]
[59.31495667 -60.94895172]
[53.21626663 -74.68507385]
[50.10816574 -89.38333893]
[50.12413025 -104.40077972]
[53.26103592 -119.08096313]
[59.37937927 -132.78273010]
[68.20951080 -144.90814209]
[79.36349487 -154.92863464]
[92.35214233 -162.40802002]
[106.60651398 -167.02145386]
[121.50279236 -168.56961060]
[123.06330872 -183.48822021]
[124.62383270 -198.40682983]
[126.18435669 -213.32542419]
[127.74488068 -228.24403381]
[129.30540466 -243.16264343]
[130.86592102 -258.08123779]
[132.42645264 -272.99984741]
[119.51500702 -281.06558228]
[111.41889954 -293.88510132]
[109.69866180 -308.88714600]
[114.64227295 -323.08999634]
[125.21861267 -333.69427490]
[139.29199219 -338.63446045]
[140.85250854 -353.55307007]
[142.41304016 -368.47167969]
[143.97355652 -383.39028931]
[145.53408813 -398.30886841]
[146.42689514 -413.28228760]
[138.89591980 -427.19613647]
[146.82185364 -439.80679321]
[147.04518127 -454.80511475]
[147.26850891 -469.80346680]
[147.49183655 -484.80178833]
[132.93914795 -488.76034546]
[119.82851410 -496.21435547]
[108.98408508 -506.69525146]
[101.08754730 -519.54418945]
[96.63527679 -533.95349121]
[95.90715790 -549.01739502]
[98.94895935 -563.78894043]
[105.56946564 -577.33953857]
[115.35251617 -588.81750488]
[127.68312836 -597.50115967]
[141.78619385 -602.84478760]
[156.77517700 -604.51245117]
[171.70787048 -602.39929199]
[185.64558411 -596.63812256]
[197.71218872 -587.59112549]
[207.14915466 -575.82702637]
[213.36326599 -562.08526611]
[215.96391296 -547.22973633]
[214.78761292 -532.19421387]
[209.90830994 -517.92382812]
[201.63270569 -505.31567383]
[190.48103333 -495.16232300]
[177.15426636 -488.10195923]
[162.49017334 -484.57846069]
[162.26684570 -469.58013916]
[162.04351807 -454.58178711]
[161.82019043 -439.58346558]
[169.36714172 -426.74240112]
[161.42523193 -413.05895996]
[172.91487122 -422.70199585]
[187.86930847 -421.53369141]
[197.72195435 -410.22329712]
[196.82878113 -395.24990845]
[185.70143127 -385.19097900]
[170.71415710 -385.80871582]
[160.45268250 -396.74835205]
[158.89216614 -381.82974243]
[157.33164978 -366.91113281]
[155.77111816 -351.99255371]
[154.21060181 -337.07394409]
[166.95701599 -329.32833862]
[175.10995483 -316.76495361]
[177.00740051 -301.84646606]
[172.21986389 -287.52517700]
[161.64613342 -276.65856934]
[147.34506226 -271.43933105]
[145.78453064 -256.52072144]
[144.22401428 -241.60211182]
[142.66348267 -226.68351746]
[141.10296631 -211.76490784]
[139.54243469 -196.84629822]
[137.98191833 -181.92770386]
[136.42138672 -167.00909424]
[150.67483521 -162.41180420]
[163.66593933 -154.94842529]
[174.82565308 -144.94305420]
[183.66453552 -132.83126831]
[189.79428101 -119.14100647]
[192.94473267 -104.46970367]
[192.97581482 -89.45813751]
[189.88371277 -74.76247406]
[183.80122375 -61.02556610]
[174.99198914 -48.84885025]
[163.83908081 -38.76600266]
[150.82839966 -31.21955681]
[136.52740479 -26.54147720]
[121.56046295 -24.93855667]
[119.99993896 -10.01995277]
[118.43941498 4.89865255]
[116.87889099 19.81725693]
[124.25002289 29.40855980]
[123.07201385 41.85026550]
[113.43341064 50.42115021]
[111.65094757 65.31487274]
[109.86847687 80.20858765]
[108.08601379 95.10230255]
[110.31033325 99.85270691]
[109.71475220 105.51120758]
[106.02232361 110.41048431]
[103.79721069 125.24452972]
[109.40177155 140.03977966]
[99.86209869 151.47848511]
[97.63697815 166.31251526]
[103.24154663 181.10777283]
[93.70186615 192.54647827]
[91.47675323 207.38052368]
[89.25163269 222.21455383]
[87.02651978 237.04859924]
[101.85147858 248.05076599]
[109.00611115 264.97714233]
[106.58923340 283.10800171]
[95.35563660 297.43524170]
[78.48336029 304.04559326]
[76.92284393 318.96420288]
[83.18245697 333.49444580]
[74.16306305 345.34771729]
[72.60253906 360.26629639]
[71.04201508 375.18490601]
[77.30162811 389.71514893]
[68.28223419 401.56842041]
[66.72171021 416.48699951]
[65.16119385 431.40560913]
[63.60066605 446.32421875]
[78.06001282 450.45925903]
[91.58155823 457.04248047]
[103.75440979 465.87384033]
[114.20864105 476.68493652]
[122.62656403 489.14727783]
[128.75236511 502.88211060]
[132.39988708 517.47204590]
[133.45829773 532.47375488]
[131.89541626 547.43133545]
[127.75874329 561.89019775]
[121.17398071 575.41101074]
[112.34124756 587.58282471]
[101.52895355 598.03582764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 197]
[22 196]
[23 195]
[24 194]
[26 192]
[27 191]
[28 190]
[30 188]
[31 187]
[39 182]
[40 181]
[41 180]
[42 179]
[44 177]
[45 176]
[47 174]
[48 173]
[49 170]
[50 169]
[51 168]
[52 167]
[54 164]
[55 163]
[56 162]
[57 161]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 123]
[91 121]
[92 120]
[93 119]
[94 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
