%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[157.42057800 434.87466431]
[145.07234192 443.49642944]
[131.15919495 449.26171875]
[116.33189392 451.90084839]
[101.28392029 451.29040527]
[86.71910858 447.45892334]
[73.31867218 440.58560181]
[61.70938492 430.99194336]
[52.43422699 419.12661743]
[45.92701340 405.54464722]
[42.49209976 390.88125610]
[42.29014206 375.82226562]
[45.33059311 361.07199097]
[51.47123718 347.32040405]
[60.42486572 335.21063232]
[71.77270508 325.30908203]
[84.98400116 318.07888794]
[99.44082642 313.85818481]
[114.46701050 312.84442139]
[116.69213104 298.01037598]
[118.91724396 283.17633057]
[121.14236450 268.34228516]
[115.37864685 254.60806274]
[125.07747650 242.10833740]
[127.30258942 227.27429199]
[129.52770996 212.44024658]
[130.19749451 197.45520020]
[129.30467224 182.48179626]
[125.44037628 167.98811340]
[118.76017761 154.55772400]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[69.21283722 74.14658356]
[63.92537689 62.82286835]
[67.64779663 51.31330109]
[61.16830063 37.78495407]
[48.22889709 28.68097496]
[49.70933533 13.86012650]
[43.22983932 0.33178079]
[35.56924057 -12.56454563]
[26.78863907 -24.72600174]
[18.00803566 -36.88745880]
[9.22743130 -49.04891205]
[0.44682845 -61.21036911]
[-3.00682282 -46.61337280]
[-15.69758224 -38.61683655]
[-30.35560799 -41.80153656]
[-38.58411407 -54.34313202]
[-35.66944122 -69.05722809]
[-23.28124619 -77.51492310]
[-8.51685047 -74.87177277]
[-16.17744827 -87.76810455]
[-23.83804512 -100.66442871]
[-31.49864197 -113.56075287]
[-45.13742065 -107.28369904]
[-59.35762405 -102.46669006]
[-74.00344849 -99.16251373]
[-88.91442108 -97.40736389]
[-103.92717743 -97.22047424]
[-118.87722015 -98.60388947]
[-133.60075378 -101.54246521]
[-147.93646240 -106.00399017]
[-161.72727966 -111.93958282]
[-174.82208252 -119.28421021]
[-187.07742310 -127.95741272]
[-198.35900879 -137.86415100]
[-208.54324341 -148.89587402]
[-217.51853943 -160.93173218]
[-225.18656921 -173.83982849]
[-231.46328735 -187.47875977]
[-236.27995300 -201.69908142]
[-239.58377075 -216.34498596]
[-241.33856201 -231.25601196]
[-241.52508545 -246.26876831]
[-240.14131165 -261.21878052]
[-237.20237732 -275.94223022]
[-232.74050903 -290.27783203]
[-226.80458069 -304.06851196]
[-219.45962524 -317.16314697]
[-210.78613281 -329.41827393]
[-200.87911987 -340.69961548]
[-189.84713745 -350.88357544]
[-177.81106567 -359.85858154]
[-164.90278625 -367.52630615]
[-151.26370239 -373.80270386]
[-137.04325867 -378.61901855]
[-122.39727783 -381.92248535]
[-107.48622131 -383.67691040]
[-92.47345734 -383.86306763]
[-77.52347565 -382.47891235]
[-62.80008316 -379.53964233]
[-48.46459198 -375.07739258]
[-34.67407227 -369.14114380]
[-21.57961845 -361.79586792]
[-9.32469940 -353.12207031]
[1.95641029 -343.21478271]
[12.14011002 -332.18258667]
[21.11482239 -320.14627075]
[28.78221321 -307.23779297]
[35.05827713 -293.59857178]
[39.87424850 -279.37802124]
[43.17736053 -264.73196411]
[44.93142319 -249.82084656]
[45.11721802 -234.80809021]
[43.73270798 -219.85813904]
[40.79306793 -205.13481140]
[36.33049774 -190.79943848]
[30.39389801 -177.00906372]
[23.04831123 -163.91477966]
[14.37422085 -151.66007996]
[4.46666288 -140.37921143]
[-6.56580830 -130.19577026]
[-18.60231590 -121.22135162]
[-10.94171810 -108.32502747]
[-3.28112102 -95.42870331]
[4.37947655 -82.53237152]
[12.60828400 -69.99097443]
[21.38888741 -57.82951736]
[30.16949081 -45.66806030]
[38.95009232 -33.50660324]
[47.73069763 -21.34514999]
[46.94207001 -36.32440567]
[52.65083694 -50.19559479]
[63.75473022 -60.28041458]
[78.10975647 -64.63163757]
[92.94419098 -62.40912247]
[105.39373016 -54.04198837]
[113.05457306 -41.14580536]
[114.44751740 -26.21062088]
[109.30361938 -12.12018776]
[98.61607361 -1.59514713]
[84.44849396 3.33228064]
[69.53639984 1.71068680]
[56.75818253 -6.14771509]
[63.23767853 7.38063049]
[75.71362305 15.51697254]
[74.69664764 31.30545998]
[81.17613983 44.83380508]
[96.16806030 53.95572281]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[132.19055176 147.87753296]
[138.87074280 161.30790710]
[138.81195068 146.30802917]
[141.93557739 131.63687134]
[148.09956360 117.96187592]
[157.02345276 105.90517426]
[168.30128479 96.01525116]
[181.41999817 88.74205017]
[195.78276062 84.41643524]
[210.73617554 83.23520660]
[225.59996033 85.25209808]
[239.69792175 90.37534332]
[252.38867188 98.37188721]
[263.09487915 108.87792969]
[271.32949829 121.41551971]
[276.71789551 135.41427612]
[279.01492310 150.23736572]
[278.11608887 165.21040344]
[274.06231689 179.65225220]
[267.03796387 192.90586853]
[257.36264038 204.36833191]
[245.47648621 213.51817322]
[231.92025757 219.93911743]
[217.31066895 223.33906555]
[202.31233215 223.56333923]
[187.60762024 220.60174561]
[173.86544800 214.58900452]
[161.71102905 205.79867554]
[151.69729614 194.63063049]
[144.27809143 181.58898926]
[145.17089844 196.56239319]
[152.00767517 183.21104431]
[163.38342285 173.43389893]
[177.61062622 168.68136597]
[192.57876587 169.65844727]
[206.06741333 176.22019958]
[216.07559204 187.39320374]
[221.11866760 201.52003479]
[220.44851685 216.50506592]
[214.16455078 230.12533569]
[203.19897461 240.36036682]
[189.17843628 245.69186401]
[174.18283081 245.32891846]
[160.43664551 239.32536316]
[149.97906494 228.57182312]
[144.36175537 214.66535950]
[142.13664246 229.49940491]
[139.91151428 244.33345032]
[145.51608276 259.12869263]
[135.97640991 270.56741333]
[133.75129700 285.40145874]
[131.52616882 300.23547363]
[129.30105591 315.06951904]
[143.36849976 320.44735718]
[155.95072937 328.72393799]
[166.45924377 339.51214600]
[174.40255737 352.30737305]
[179.40913391 366.51116943]
[181.24479675 381.45922852]
[179.82371521 396.45239258]
[175.21234131 410.78936768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 202]
[20 201]
[21 200]
[22 199]
[24 197]
[25 196]
[26 195]
[27 180]
[28 179]
[29 151]
[30 150]
[31 149]
[32 148]
[33 147]
[35 145]
[36 144]
[39 142]
[40 141]
[42 139]
[43 138]
[44 125]
[45 124]
[46 123]
[47 122]
[48 121]
[55 120]
[56 119]
[57 118]
[58 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
