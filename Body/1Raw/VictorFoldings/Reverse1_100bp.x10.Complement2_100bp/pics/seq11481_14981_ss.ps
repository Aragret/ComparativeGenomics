%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[91.68785095 493.61227417]
[85.26351166 480.01898193]
[81.16432190 465.55361938]
[79.50210571 450.61083984]
[80.32221985 435.59826660]
[83.60228729 420.92544556]
[89.25281525 406.99270630]
[97.11966705 394.18011475]
[106.98822784 382.83721924]
[118.58926392 373.27343750]
[131.60630798 365.74972534]
[145.68421936 360.47125244]
[142.79895020 345.75137329]
[139.91368103 331.03149414]
[137.02841187 316.31158447]
[134.03363037 301.61358643]
[130.92951965 286.93829346]
[120.72591400 276.08767700]
[125.43991089 260.98507690]
[122.33580780 246.30976868]
[119.23169708 231.63446045]
[116.12758636 216.95916748]
[113.02347565 202.28385925]
[109.91936493 187.60855103]
[97.27585602 183.32092285]
[88.33024597 173.26506042]
[85.49906158 159.99653625]
[89.62640381 146.95875549]
[99.73617554 137.58947754]
[96.85090637 122.86959076]
[93.96562958 108.14969635]
[89.44801331 101.47409821]
[91.14869690 93.18926239]
[88.48290253 78.42803955]
[85.81710052 63.66682434]
[75.68544006 55.68483353]
[73.76898193 43.33530045]
[80.55615234 33.32226944]
[78.11042786 18.52299690]
[75.66469574 3.72372580]
[73.21897125 -11.07554531]
[70.77324677 -25.87481499]
[68.32751465 -40.67408752]
[65.45463562 -43.92993546]
[63.92145157 -47.56502151]
[63.68267059 -51.11162567]
[64.54576111 -54.16476822]
[66.20417023 -56.42481995]
[64.64364624 -71.34342194]
[63.08312225 -86.26203156]
[61.52259827 -101.18063354]
[58.85680389 -115.94184875]
[55.10050201 -130.46391296]
[51.34420395 -144.98596191]
[48.27958298 -130.30236816]
[42.36016083 -116.51975250]
[33.82170868 -104.18708038]
[23.00430679 -93.79555511]
[10.33880711 -85.75907135]
[-3.67032599 -80.39771271]
[-18.46511650 -77.92501831]
[-33.45629120 -78.43948364]
[-48.04675674 -81.92060852]
[-61.65538406 -88.22975159]
[-73.74014282 -97.11561584]
[-83.81970978 -108.22428131]
[-91.49260712 -121.11328888]
[-96.45323944 -135.26928711]
[-98.50401306 -150.12843323]
[-97.56326294 -165.09890747]
[-93.66844177 -179.58442688]
[-86.97468567 -193.00805664]
[-77.74861145 -204.83511353]
[-66.35767365 -214.59455872]
[-53.25558853 -221.89765930]
[-38.96419525 -226.45353699]
[-24.05271530 -228.08073425]
[-9.11506939 -226.71444702]
[5.25378227 -222.40910339]
[18.48153305 -215.33615112]
[30.04133034 -205.77732849]
[39.47274780 -194.11334229]
[46.40013504 -180.80879211]
[50.54683304 -166.39767456]
[53.21262741 -181.15888977]
[55.87842560 -195.92010498]
[58.54421997 -210.68132019]
[61.21001434 -225.44255066]
[63.87581253 -240.20376587]
[66.54160309 -254.96498108]
[52.28478622 -259.71090698]
[38.84853745 -266.43756104]
[26.50640106 -275.00799561]
[15.50964642 -285.24774170]
[6.08215618 -296.94830322]
[-1.58413970 -309.87149048]
[-7.33316469 -323.75418091]
[-11.04787636 -338.31378174]
[-12.65264797 -353.25384521]
[-12.11480808 -368.27023315]
[-9.44530582 -383.05718994]
[-4.69849062 -397.31372070]
[2.02900004 -410.74954224]
[10.60020256 -423.09115601]
[20.84061813 -434.08728027]
[32.54176331 -443.51403809]
[45.46542358 -451.17953491]
[59.34848404 -456.92770386]
[73.90830231 -460.64151001]
[88.84846497 -462.24536133]
[103.86480713 -461.70660400]
[118.65161133 -459.03619385]
[132.90783691 -454.28848267]
[146.34326172 -447.56015015]
[158.68434143 -438.98818970]
[169.67982483 -428.74710083]
[179.10586548 -417.04537964]
[186.77055359 -404.12124634]
[192.51786804 -390.23782349]
[196.23077393 -375.67776489]
[197.83369446 -360.73751831]
[197.29400635 -345.72119141]
[194.62266541 -330.93457031]
[189.87408447 -316.67861938]
[183.14492798 -303.24362183]
[174.57220459 -290.90307617]
[164.33042908 -279.90823364]
[152.62811279 -270.48291016]
[139.70350647 -262.81900024]
[125.81974030 -257.07257080]
[111.25946045 -253.36054993]
[96.31909943 -251.75856018]
[81.30282593 -252.29917908]
[78.63703156 -237.53796387]
[75.97122955 -222.77674866]
[73.30543518 -208.01553345]
[70.63964081 -193.25431824]
[67.97384644 -178.49310303]
[65.30805206 -163.73187256]
[65.86626434 -148.74226379]
[69.62255859 -134.22021484]
[73.37886047 -119.69815063]
[78.91328430 -133.63981628]
[90.61548615 -143.02375793]
[105.42655182 -145.39703369]
[119.47489166 -140.13928223]
[129.08831787 -128.62484741]
[131.75389099 -113.86358643]
[126.77484131 -99.71405792]
[115.45267487 -89.87491608]
[100.74699402 -86.91809082]
[86.50181580 -91.61648560]
[76.44120026 -102.74115753]
[78.00172424 -87.82255554]
[79.56224823 -72.90394592]
[81.12277222 -57.98534393]
[83.12678528 -43.11981583]
[85.57251740 -28.32054329]
[88.01824188 -13.52127266]
[90.46396637 1.27799845]
[92.90969849 16.07726860]
[95.35542297 30.87653923]
[107.20520782 43.82063675]
[100.57832336 61.00102997]
[103.24411774 75.76224518]
[105.90991211 90.52346039]
[108.68552399 105.26442719]
[111.57079315 119.98431396]
[114.45606995 134.70420837]
[129.89241028 141.61906433]
[138.08419800 156.22714233]
[135.97581482 172.67453003]
[124.59466553 184.50444031]
[127.69877625 199.17974854]
[130.80288696 213.85505676]
[133.90699768 228.53034973]
[137.01110840 243.20565796]
[140.11521912 257.88095093]
[150.54084778 269.78125000]
[145.60482788 283.83416748]
[148.70893860 298.50949097]
[153.54649353 306.25775146]
[151.74829102 313.42633057]
[154.63357544 328.14620972]
[157.51884460 342.86608887]
[160.40411377 357.58599854]
[175.43301392 357.15914917]
[190.32716370 359.21197510]
[204.68025208 363.68841553]
[218.10072327 370.46640015]
[230.22242737 379.36099243]
[240.71472168 390.12957764]
[249.29132080 402.47830200]
[255.71827698 416.07037354]
[259.82025146 430.53494263]
[261.48535156 445.47741699]
[260.66812134 460.49014282]
[257.39089966 475.16357422]
[251.74304199 489.09741211]
[243.87866211 501.91149902]
[234.01228333 513.25628662]
[222.41308594 522.82232666]
[209.39750671 530.34857178]
[195.32060242 535.62969971]
[180.56640625 538.52172852]
[165.53742981 538.94567871]
[150.64367676 536.88995361]
[136.29144287 532.41076660]
[122.87228394 525.63018799]
[110.75228119 516.73327637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 186]
[13 185]
[14 184]
[15 183]
[16 181]
[17 180]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[29 169]
[30 168]
[31 167]
[33 166]
[34 165]
[35 164]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 142]
[53 141]
[54 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
