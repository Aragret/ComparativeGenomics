%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[150.19593811 611.67034912]
[137.75326538 620.09637451]
[124.21630859 626.62084961]
[109.87361908 631.10467529]
[95.03089905 633.45233154]
[80.00452423 633.61376953]
[65.11479187 631.58557129]
[50.67907715 627.41088867]
[37.00506592 621.17877197]
[24.38423157 613.02203369]
[13.08558464 603.11450195]
[3.34995651 591.66748047]
[-4.61513758 578.92480469]
[-10.63992119 565.15820312]
[-14.59597588 550.66101074]
[-16.39897728 535.74237061]
[-16.01049423 520.72015381]
[-13.43880749 505.91458130]
[-8.73873329 491.64129639]
[-2.01045418 478.20446777]
[6.60261726 465.89053345]
[16.91689110 454.96197510]
[28.71252060 445.65170288]
[41.73807907 438.15820312]
[55.71592712 432.64117432]
[70.34812927 429.21820068]
[85.32279205 427.96228027]
[100.32073212 428.90017700]
[103.42484283 414.22485352]
[106.52895355 399.54956055]
[109.63305664 384.87426758]
[112.73716736 370.19897461]
[114.18659210 355.26916504]
[113.96326447 340.27081299]
[113.73993683 325.27249146]
[113.51660919 310.27413940]
[105.59067535 297.66348267]
[113.12165070 283.74963379]
[105.19571686 271.13897705]
[112.72669983 257.22512817]
[111.61104584 242.26667786]
[109.60703278 227.40115356]
[107.60301971 212.53562927]
[105.59900665 197.67008972]
[103.59499359 182.80456543]
[101.59098053 167.93904114]
[99.58696747 153.07351685]
[97.58295441 138.20797729]
[95.57894135 123.34245300]
[93.57492828 108.47692871]
[90.47081757 93.80162048]
[86.28380585 79.39784241]
[82.09679413 64.99405670]
[70.81493378 53.90215683]
[74.69207764 39.52102280]
[70.50506592 25.11724091]
[66.31805420 10.71345997]
[62.13104630 -3.69032240]
[57.94403458 -18.09410477]
[53.75702286 -32.49788666]
[49.25663376 -37.34123611]
[48.05777359 -42.89639282]
[49.66664886 -47.39311981]
[45.91035080 -61.91518021]
[42.85213852 -47.23024368]
[36.53287125 -33.62631607]
[27.28404808 -21.81702805]
[15.59084225 -12.42187405]
[2.06665421 -5.93370485]
[-12.57906246 -2.69287610]
[-27.57802391 -2.86939573]
[-42.14341354 -6.45400381]
[-55.51116180 -13.25865841]
[-66.98001862 -22.92640114]
[-75.94835663 -34.95008469]
[-81.94571686 -48.69896317]
[-84.65747833 -63.45180511]
[-83.94139862 -78.43470001]
[-79.83503723 -92.86168671]
[-72.55380249 -105.97593689]
[-62.47966003 -117.08951569]
[-50.14107513 -125.61942291]
[-36.18530655 -131.11819458]
[-21.34444809 -133.29739380]
[-6.39701700 -132.04267883]
[7.87287188 -127.41987610]
[20.71664810 -119.67149353]
[31.46055603 -109.20400238]
[39.54098892 -96.56649017]
[44.53443146 -82.42028809]
[38.49184418 -97.04211426]
[47.68671417 -108.75977325]
[49.46918106 -123.65349579]
[50.80741501 -138.59367371]
[51.70022964 -153.56707764]
[52.59304810 -168.54048157]
[53.48586273 -183.51390076]
[54.37867737 -198.48730469]
[55.27149582 -213.46070862]
[56.16431046 -228.43411255]
[42.47636414 -235.04534912]
[32.36409378 -246.39482117]
[27.36955070 -260.75180054]
[28.25436592 -275.92697144]
[34.88360977 -289.60620117]
[46.24637222 -299.70355225]
[60.60991287 -304.67919922]
[75.78389740 -303.77441406]
[89.45440674 -297.12719727]
[99.53678131 -285.75115967]
[104.49353027 -271.38107300]
[103.56879425 -256.20828247]
[96.90358734 -242.54653931]
[85.51429749 -232.47914124]
[71.13771820 -227.54129028]
[70.24490356 -212.56788635]
[69.35208130 -197.59448242]
[68.45926666 -182.62107849]
[67.56645203 -167.64767456]
[66.67363739 -152.67427063]
[65.78082275 -137.70086670]
[67.53849030 -135.51712036]
[68.53704834 -132.50555420]
[68.45687103 -128.95182800]
[67.08753204 -125.25190735]
[64.36289978 -121.87102509]
[62.58043289 -106.97731018]
[68.75051117 -93.42078400]
[59.42814636 -80.63782501]
[60.43240738 -65.67147827]
[64.18870544 -51.14942169]
[68.16080475 -36.68489838]
[72.34781647 -22.28111649]
[76.53482819 -7.87733364]
[80.72183990 6.52644825]
[84.90885162 20.93023109]
[89.09586334 35.33401108]
[100.07823944 45.39565659]
[96.50057220 60.80704880]
[100.68758392 75.21083069]
[104.87459564 89.61460876]
[109.99147034 75.51434326]
[121.40909576 65.78614044]
[136.14292908 62.97293854]
[150.34158325 67.81009674]
[160.29356384 79.03319550]
[163.39746094 93.70854950]
[158.84190369 108.00004578]
[147.81770325 118.17192841]
[133.20657349 121.56528473]
[118.82782745 117.29311371]
[108.44045258 106.47290802]
[110.44446564 121.33843994]
[112.44847870 136.20396423]
[114.45249176 151.06950378]
[116.45650482 165.93502808]
[118.46052551 180.80055237]
[120.46453857 195.66607666]
[122.46855164 210.53161621]
[124.47256470 225.39714050]
[126.47657776 240.26266479]
[134.75462341 227.75370789]
[148.76345825 222.39158630]
[163.27815247 226.17625427]
[172.88507080 237.69610596]
[174.00108337 252.65454102]
[166.20993042 265.47241211]
[152.41752625 271.36898804]
[137.76809692 268.14498901]
[127.72503662 257.00180054]
[135.66694641 270.68524170]
[128.11999512 283.52630615]
[136.06188965 297.20974731]
[128.51493835 310.05081177]
[128.73826599 325.04916382]
[128.96159363 340.04748535]
[129.18492126 355.04583740]
[136.41300964 341.90219116]
[147.85401917 332.20150757]
[162.00270081 327.22006226]
[176.99754333 327.61325073]
[190.86572266 333.32931519]
[201.78265381 343.61624146]
[208.31199646 357.12060547]
[209.59472656 372.06564331]
[205.46208191 386.48513794]
[196.45776367 398.48187256]
[183.76646423 406.47756958]
[169.05792236 409.42016602]
[154.26731873 406.92257690]
[141.34060669 399.31338501]
[131.97850037 387.59368896]
[127.41247559 373.30307007]
[124.30836487 387.97836304]
[121.20425415 402.65368652]
[118.10014343 417.32897949]
[114.99603271 432.00427246]
[129.08918762 437.21972656]
[142.27273560 444.43164062]
[154.26567078 453.48632812]
[164.81236267 464.19079590]
[173.68800354 476.31683350]
[180.70341492 489.60598755]
[185.70907593 503.77502441]
[188.59825134 518.52191162]
[189.30940247 533.53228760]
[187.82734680 548.48626709]
[184.18367004 563.06506348]
[178.45605469 576.95794678]
[170.76657104 589.86877441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 177]
[34 176]
[35 175]
[36 174]
[38 172]
[40 170]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[51 141]
[52 140]
[53 139]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[63 131]
[64 130]
[90 129]
[92 127]
[93 126]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
