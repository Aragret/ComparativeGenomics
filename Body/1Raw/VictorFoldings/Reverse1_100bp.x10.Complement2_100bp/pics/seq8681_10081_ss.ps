%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[225.20339966 510.04592896]
[229.55834961 495.66921997]
[235.75262451 481.98397827]
[243.68023682 469.22436523]
[253.20553589 457.60870361]
[264.16552734 447.33575439]
[276.37271118 438.58132935]
[269.29559326 425.35580444]
[262.21850586 412.13027954]
[255.04312134 398.95779419]
[247.76989746 385.83908081]
[240.49667358 372.72039795]
[233.22343445 359.60171509]
[225.95021057 346.48300171]
[218.67697144 333.36431885]
[211.40374756 320.24563599]
[204.13052368 307.12692261]
[196.85728455 294.00823975]
[189.58406067 280.88955688]
[182.31083679 267.77084351]
[175.03759766 254.65216064]
[162.09948730 247.27281189]
[162.17492676 231.45179749]
[154.90168762 218.33309937]
[147.62846375 205.21440125]
[140.35523987 192.09571838]
[133.08200073 178.97702026]
[125.80877686 165.85832214]
[121.54612732 163.70451355]
[118.59123230 158.85006714]
[118.52093506 152.23898315]
[111.64152527 138.90954590]
[104.76210785 125.58011627]
[88.64905548 123.41316223]
[76.96770477 112.10511017]
[74.27875519 96.07090759]
[81.63204193 81.57072449]
[74.55493927 68.34519196]
[67.47782898 55.11966705]
[60.40072632 41.89413834]
[53.32361984 28.66861153]
[46.24651337 15.44308376]
[39.16940689 2.21755648]
[32.09230423 -11.00797081]
[24.91693687 -24.18044662]
[17.64370728 -37.29914093]
[10.37047768 -50.41783524]
[3.09724832 -63.53652954]
[-4.46713066 -76.48952484]
[-12.31888580 -89.27037048]
[-20.17064095 -102.05121613]
[-25.79292297 -105.52993011]
[-28.42002678 -110.56931305]
[-28.05934906 -115.33155060]
[-35.52708817 -128.34049988]
[-42.99483109 -141.34945679]
[-44.16268921 -126.39498901]
[-52.06817627 -113.64731598]
[-64.94519043 -105.95429230]
[-79.91696167 -105.03456116]
[-93.63877106 -111.09360504]
[-103.04512787 -122.77780151]
[-106.03462982 -137.47688293]
[-101.93940735 -151.90702820]
[-91.67434692 -162.84451294]
[-77.53269196 -167.84587097]
[-62.67372131 -165.79379272]
[-50.41695404 -157.14668274]
[-55.66367340 -171.19915771]
[-60.91039276 -185.25163269]
[-66.15711212 -199.30410767]
[-71.40383148 -213.35656738]
[-76.65054321 -227.40904236]
[-91.35557556 -224.30744934]
[-106.35862732 -223.43228149]
[-121.32454681 -224.80307007]
[-135.91897583 -228.38920593]
[-149.81587219 -234.11056519]
[-162.70477295 -241.83932495]
[-174.29772949 -251.40284729]
[-184.33576965 -262.58746338]
[-192.59463501 -275.14328003]
[-198.88980103 -288.78985596]
[-203.08064270 -303.22225952]
[-205.07354736 -318.11810303]
[-204.82397461 -333.14459229]
[-202.33750916 -347.96603394]
[-197.66969299 -362.25131226]
[-190.92480469 -375.68127441]
[-182.25354004 -387.95593262]
[-171.84962463 -398.80102539]
[-159.94546509 -407.97427368]
[-146.80700684 -415.27075195]
[-132.72778320 -420.52746582]
[-118.02230835 -423.62695312]
[-103.01912689 -424.50000000]
[-88.05340576 -423.12707520]
[-73.45949554 -419.53884888]
[-59.56341171 -413.81552124]
[-46.67560959 -406.08493042]
[-35.08400726 -396.51974487]
[-25.04756355 -385.33370972]
[-16.79049492 -372.77670288]
[-10.49726868 -359.12924194]
[-6.30847788 -344.69625854]
[-4.31770134 -329.80010986]
[-4.56941414 -314.77368164]
[-7.05799246 -299.95257568]
[-11.72784138 -285.66796875]
[-18.47463417 -272.23895264]
[-27.14764404 -259.96554565]
[-37.55311203 -249.12193298]
[-49.45858002 -239.95037842]
[-62.59807587 -232.65576172]
[-57.35135651 -218.60328674]
[-52.10463715 -204.55082703]
[-46.85792160 -190.49835205]
[-41.61120224 -176.44587708]
[-36.36448288 -162.39340210]
[-29.98587799 -148.81719971]
[-22.51813698 -135.80824280]
[-15.05039597 -122.79929352]
[-7.38979912 -109.90296936]
[0.46195653 -97.12212372]
[8.31371212 -84.34128571]
[11.63972282 -83.17081451]
[14.56405258 -80.33121490]
[16.30837250 -76.02881622]
[16.21594238 -70.80976105]
[23.48917198 -57.69106293]
[30.76240158 -44.57236862]
[38.03562927 -31.45367622]
[44.02815628 -27.12800598]
[45.31782913 -18.08507729]
[52.39493561 -4.85954905]
[59.47204208 8.36597824]
[66.54914856 21.59150696]
[73.62625122 34.81703186]
[80.70336151 48.04256058]
[87.78046417 61.26808929]
[94.85756683 74.49361420]
[108.07102203 75.26381683]
[119.19598389 82.43485260]
[125.35371399 94.15111542]
[124.95081329 107.38085938]
[118.09153748 118.70070648]
[124.97094727 132.03013611]
[131.85035706 145.35955811]
[138.92747498 158.58509827]
[146.20069885 171.70378113]
[153.47392273 184.82247925]
[160.74716187 197.94117737]
[168.02038574 211.05987549]
[175.29360962 224.17855835]
[188.75195312 232.49623108]
[188.15629578 247.37892151]
[195.42951965 260.49761963]
[202.70275879 273.61630249]
[209.97598267 286.73501587]
[217.24920654 299.85369873]
[224.52244568 312.97238159]
[231.79566956 326.09109497]
[239.06890869 339.20977783]
[246.34213257 352.32849121]
[253.61535645 365.44717407]
[260.88858032 378.56585693]
[268.16183472 391.68457031]
[275.05981445 397.67248535]
[275.44403076 405.05316162]
[282.52111816 418.27868652]
[289.59823608 431.50421143]
[303.65429688 426.20495605]
[318.28179932 422.78576660]
[333.23046875 421.30517578]
[348.24450684 421.78851318]
[363.06701660 424.22747803]
[377.44433594 428.58035278]
[391.13046265 434.77267456]
[403.89123535 442.69848633]
[415.50823975 452.22210693]
[425.78274536 463.18066406]
[434.53894043 475.38656616]
[441.62698364 488.63098145]
[446.92556763 502.68731689]
[450.34405518 517.31500244]
[451.82394409 532.26373291]
[451.33990479 547.27777100]
[448.90020752 562.10015869]
[444.54663086 576.47723389]
[438.35366821 590.16308594]
[430.42727661 602.92346191]
[420.90307617 614.54003906]
[409.94403076 624.81402588]
[397.73773193 633.56964111]
[384.49295044 640.65698242]
[370.43640137 645.95495605]
[355.80853271 649.37274170]
[340.85974121 650.85186768]
[325.84573364 650.36712646]
[311.02346802 647.92675781]
[296.64657593 643.57250977]
[282.96102905 637.37890625]
[270.20101929 629.45184326]
[258.58489990 619.92712402]
[248.31144714 608.96759033]
[239.55642700 596.76086426]
[232.46965027 583.51574707]
[227.17240906 569.45892334]
[223.75531006 554.83093262]
[222.27684021 539.88208008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 171]
[8 170]
[9 169]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[31 148]
[32 147]
[33 146]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 134]
[45 132]
[46 131]
[47 130]
[48 129]
[49 125]
[50 124]
[51 123]
[54 122]
[55 121]
[56 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
