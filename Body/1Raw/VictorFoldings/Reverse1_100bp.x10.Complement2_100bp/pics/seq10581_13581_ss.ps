%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[10.15196705 624.65081787]
[-4.32676172 620.63244629]
[-18.08621216 614.59436035]
[-30.84626007 606.65948486]
[-42.34712601 596.98944092]
[-52.35466766 585.78094482]
[-60.66514587 573.26226807]
[-67.10936737 559.68829346]
[-71.55614471 545.33538818]
[-73.91493225 530.49566650]
[-74.13771820 515.47131348]
[-72.21996307 500.56817627]
[-68.20070648 486.08972168]
[-62.16178894 472.33062744]
[-54.22614288 459.57107544]
[-44.55533218 448.07080078]
[-33.34624100 438.06396484]
[-20.82707024 429.75424194]
[-7.25269842 423.31088257]
[7.10052061 418.86499023]
[21.94037247 416.50711060]
[21.71704483 401.50878906]
[21.49371719 386.51043701]
[21.27038956 371.51211548]
[21.04706192 356.51376343]
[14.61897755 370.06661987]
[5.37234402 381.87762451]
[-6.24167442 391.37048340]
[-19.65640450 398.08206177]
[-34.21731186 401.68484497]
[-49.21393585 402.00305176]
[-63.91455841 399.02114868]
[-77.60190582 392.88464355]
[-89.60813904 383.89297485]
[-99.34745026 372.48483276]
[-106.34463501 359.21685791]
[-110.25828552 344.73638916]
[-110.89745331 329.75003052]
[-108.23093414 314.98892212]
[-102.38884735 301.17337036]
[-93.65624237 288.97738647]
[-82.45919800 278.99612427]
[-69.34403992 271.71649170]
[-54.95068741 267.49377441]
[-39.98142624 266.53396606]
[-25.16663933 268.88388062]
[-11.22917461 274.42886353]
[1.15093088 282.89840698]
[11.36962318 293.87921143]
[18.92831039 306.83554077]
[23.45818710 321.13519287]
[24.73839760 336.07388306]
[30.19375420 322.10107422]
[35.64911270 308.12826538]
[41.10446930 294.15548706]
[40.04134369 289.49942017]
[41.89183426 284.12609863]
[46.93587494 279.85183716]
[52.80483627 266.04766846]
[58.67379761 252.24348450]
[64.54275513 238.43931580]
[68.83688354 224.06710815]
[71.50267792 209.30587769]
[74.16847229 194.54466248]
[76.83426666 179.78344727]
[74.92954254 172.64245605]
[79.65120697 164.82301331]
[82.53647614 150.10311890]
[85.42175293 135.38322449]
[88.30702209 120.66333771]
[91.19229889 105.94344330]
[93.08558655 91.06340790]
[93.97840118 76.09000397]
[94.87121582 61.11659622]
[84.65863800 49.35475540]
[85.77738190 34.18231201]
[97.05343628 24.51865959]
[97.94625092 9.54525375]
[98.83906555 -5.42815161]
[99.73188019 -20.40155792]
[97.11881256 -29.15425301]
[100.75109863 -35.59073257]
[101.86674500 -50.54918671]
[102.98239136 -65.50764465]
[104.09804535 -80.46609497]
[105.21369171 -95.42454529]
[106.32933807 -110.38300323]
[107.44499207 -125.34145355]
[108.00319672 -140.33106995]
[108.00319672 -155.33106995]
[99.45137787 -164.98658752]
[99.76017761 -177.48011780]
[108.21881866 -186.12754822]
[108.44215393 -201.12588501]
[108.66548157 -216.12422180]
[101.13449860 -230.03805542]
[109.06043243 -242.64872742]
[109.28376007 -257.64706421]
[95.20314026 -263.31280518]
[84.12273407 -273.68530273]
[77.54106140 -287.36178589]
[76.34825897 -302.49261475]
[80.70561981 -317.03146362]
[90.02387238 -329.01205444]
[103.04277802 -336.81411743]
[118.00164795 -339.38253784]
[132.87741089 -336.36987305]
[145.65824890 -328.18365479]
[154.61566162 -315.93090820]
[158.53822327 -301.26879883]
[156.89543152 -286.18020630]
[149.90948486 -272.70574951]
[138.52516174 -262.66772461]
[124.28209686 -257.42373657]
[124.05876923 -242.42539978]
[131.60572815 -229.58433533]
[123.66381836 -215.90089417]
[123.44049072 -200.90255737]
[123.21716309 -185.90422058]
[132.57788086 -171.06024170]
[123.00319672 -155.33106995]
[123.00319672 -140.33106995]
[135.29386902 -148.92987061]
[149.72230530 -144.82861328]
[155.65238953 -131.05058289]
[148.71270752 -117.75244141]
[134.01892090 -114.73707581]
[122.40344238 -124.22580719]
[121.28779602 -109.26734924]
[120.17214203 -94.30889893]
[119.05649567 -79.35044861]
[117.94084930 -64.39199066]
[116.82519531 -49.43354034]
[115.70954895 -34.47508621]
[114.70529175 -19.50874138]
[113.81247711 -4.53533554]
[112.91965485 10.43807030]
[112.02684021 25.41147614]
[122.07466125 36.34660339]
[121.38251495 51.54448318]
[109.84462738 62.00941467]
[108.95181274 76.98281860]
[108.05899048 91.95622253]
[118.05857086 80.77551270]
[132.48675537 76.67337036]
[146.87280273 80.92089081]
[156.75906372 92.20193481]
[159.08213806 107.02095795]
[153.12223816 120.78610992]
[140.72605896 129.23211670]
[125.73472595 129.74188232]
[112.79345703 122.15747070]
[105.91218567 108.82872009]
[103.02691650 123.54860687]
[100.14163971 138.26849365]
[97.25637054 152.98838806]
[94.37109375 167.70828247]
[91.59548187 182.44924927]
[88.92968750 197.21046448]
[86.26389313 211.97167969]
[83.59809875 226.73289490]
[93.21939850 215.22505188]
[106.31270599 207.90620422]
[121.15536499 205.73930359]
[135.79457092 209.00941467]
[148.30427551 217.28631592]
[157.03863525 229.48103333]
[160.84848022 243.98913574]
[159.23254395 258.90185547]
[152.40345764 272.25714111]
[141.25970459 282.29788208]
[127.26741028 287.70303345]
[112.26752472 287.76150513]
[98.23353577 282.46554565]
[87.01184845 272.51196289]
[80.07888031 259.21029663]
[78.34693146 244.30827332]
[72.47797394 258.11245728]
[66.60901642 271.91662598]
[60.74005127 285.72079468]
[55.07726669 299.61083984]
[49.62191010 313.58361816]
[44.16655350 327.55642700]
[38.71119308 341.52923584]
[36.04539871 356.29043579]
[36.26872635 371.28878784]
[36.49205399 386.28710938]
[36.71538162 401.28546143]
[36.93870926 416.28378296]
[51.84218597 418.19879150]
[66.32141113 422.21533203]
[80.08161163 428.25170898]
[92.84263611 436.18499756]
[104.34470367 445.85366821]
[114.35363007 457.06088257]
[122.66565704 469.57852173]
[129.11155701 483.15170288]
[133.56010437 497.50408936]
[135.92073059 512.34350586]
[136.14538574 527.36785889]
[134.22947693 542.27117920]
[130.21200562 556.75018311]
[124.17479706 570.51000977]
[116.24073029 583.27050781]
[106.57134247 594.77197266]
[95.36348724 604.78021240]
[82.84534454 613.09149170]
[69.27177429 619.53656006]
[54.91910172 623.98419189]
[40.07954407 626.34393311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 189]
[22 188]
[23 187]
[24 186]
[25 185]
[52 184]
[53 183]
[54 182]
[55 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 161]
[63 160]
[64 159]
[65 158]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 143]
[73 142]
[74 141]
[77 138]
[78 137]
[79 136]
[80 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 122]
[90 121]
[93 119]
[94 118]
[95 117]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
