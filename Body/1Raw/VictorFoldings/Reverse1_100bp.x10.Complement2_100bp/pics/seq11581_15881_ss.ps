%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[181.18008423 356.23568726]
[183.86027527 341.46502686]
[187.95353699 327.02203369]
[193.42166138 313.04150391]
[200.21359253 299.65399170]
[208.26589966 286.98449707]
[217.50343323 275.15133667]
[227.83990479 264.26498413]
[218.00932312 252.93539429]
[208.17874146 241.60580444]
[198.34815979 230.27621460]
[188.51757812 218.94660950]
[176.71188354 221.77519226]
[164.75308228 219.30128479]
[154.92309570 211.93431091]
[149.12419128 201.02320862]
[148.51101685 188.60981750]
[153.26124573 177.04679871]
[143.77235413 165.42953491]
[134.28344727 153.81227112]
[120.23984528 148.84976196]
[117.50236511 133.26718140]
[108.01346588 121.64992523]
[98.52457428 110.03266144]
[91.39178467 106.27821350]
[88.98242950 98.17106628]
[79.66754913 86.41381073]
[70.35266876 74.65656281]
[60.27152634 63.54932785]
[49.46937180 53.14195633]
[38.66721344 42.73458099]
[27.86505890 32.32720947]
[17.06290245 21.91983604]
[6.26074600 11.51246262]
[-9.04569340 7.50952864]
[-12.84282780 -6.89293814]
[-23.64498329 -17.30031204]
[-34.44713974 -27.70768356]
[-45.65623474 -17.72875786]
[-57.59632111 -8.63716316]
[-70.19733429 -0.48625672]
[-83.38531494 6.67612982]
[-97.08288574 12.80796337]
[-111.20964813 17.87326050]
[-125.68270874 21.84229279]
[-140.41712952 24.69177246]
[-155.32644653 26.40497398]
[-170.32316589 26.97184563]
[-185.31925964 26.38906097]
[-200.22676086 24.66003609]
[-214.95814514 21.79492188]
[-229.42698669 17.81053162]
[-243.54837036 12.73024654]
[-257.23941040 6.58387947]
[-270.41979980 -0.59249830]
[-283.01214600 -8.75677299]
[-294.94259644 -17.86103249]
[-306.14108276 -27.85185051]
[-316.54193115 -38.67059326]
[-326.08407593 -50.25377274]
[-334.71154785 -62.53341675]
[-342.37368774 -75.43745422]
[-349.02554321 -88.89016724]
[-354.62811279 -102.81260681]
[-359.14843750 -117.12306213]
[-362.56005859 -131.73756409]
[-364.84295654 -146.57034302]
[-365.98367310 -161.53434753]
[-365.97555542 -176.54176331]
[-364.81866455 -191.50453186]
[-362.51977539 -206.33482361]
[-359.09237671 -220.94563293]
[-354.55657959 -235.25120544]
[-348.93899536 -249.16757202]
[-342.27261353 -262.61309814]
[-334.59652710 -275.50885010]
[-325.95578003 -287.77917480]
[-316.40112305 -299.35202026]
[-305.98861694 -310.15954590]
[-294.77932739 -320.13824463]
[-282.83908081 -329.22961426]
[-270.23791504 -337.38027954]
[-257.04977417 -344.54241943]
[-243.35209656 -350.67401123]
[-229.22523499 -355.73901367]
[-214.75209045 -359.70779419]
[-200.01762390 -362.55697632]
[-185.10827637 -364.26989746]
[-170.11154175 -364.83648682]
[-155.11546326 -364.25341797]
[-140.20800781 -362.52410889]
[-125.47666168 -359.65872192]
[-111.00789642 -355.67404175]
[-96.88661194 -350.59350586]
[-83.19567871 -344.44686890]
[-70.01543427 -337.27026367]
[-57.42323685 -329.10574341]
[-45.49297714 -320.00125122]
[-34.29467010 -310.01022339]
[-23.89403152 -299.19128418]
[-14.35209751 -287.60791016]
[-5.72486544 -275.32812500]
[1.93703687 -262.42391968]
[8.58864594 -248.97108459]
[14.19092655 -235.04855347]
[18.71100235 -220.73800659]
[22.12234688 -206.12344360]
[24.40493965 -191.29061890]
[25.54538918 -176.32659912]
[25.53699875 -161.31916809]
[24.37981987 -146.35643005]
[22.08064270 -131.52616882]
[18.65295792 -116.91542816]
[14.11688519 -102.60994720]
[8.49904156 -88.69367981]
[1.83239484 -75.24829102]
[-5.84393120 -62.35267639]
[-14.48488808 -50.08252716]
[-24.03976631 -38.50984192]
[-13.23761082 -28.10246849]
[-2.43545437 -17.69509506]
[12.09834290 -14.43656540]
[16.66811943 0.71030641]
[27.47027588 11.11767960]
[38.27243042 21.52505302]
[49.07458878 31.93242645]
[59.87674332 42.33979797]
[70.67890167 52.74717331]
[68.67675781 37.88139343]
[74.93289185 24.24831581]
[87.50877380 16.07229996]
[102.50762939 15.88677406]
[115.28189850 23.74922371]
[121.87332916 37.22338104]
[120.23950958 52.13413620]
[110.88668060 63.86122894]
[96.71292877 68.77088928]
[82.10991669 65.34168243]
[91.42479706 77.09893036]
[100.73968506 88.85618591]
[110.14183807 100.54376221]
[119.63072968 112.16102600]
[129.11962891 123.77828979]
[143.84194946 129.57174683]
[145.90071106 144.32337952]
[155.38961792 155.94064331]
[164.87850952 167.55790710]
[182.94255066 165.99328613]
[198.19590759 175.50195312]
[204.63098145 192.11642456]
[199.84716797 209.11602783]
[209.67774963 220.44563293]
[219.50833130 231.77522278]
[229.33891296 243.10481262]
[239.16949463 254.43440247]
[251.40431213 245.73587036]
[264.42156982 238.25877380]
[278.09970093 232.07295227]
[292.31097412 227.23616028]
[306.92276001 223.79354858]
[321.79858398 221.77726746]
[336.79956055 221.20614624]
[351.78561401 222.08549500]
[366.61685181 224.40713501]
[381.15478516 228.14936829]
[395.26367188 233.27726746]
[408.81173706 239.74293518]
[421.67254639 247.48602295]
[433.72598267 256.43420410]
[444.85949707 266.50396729]
[454.96917725 277.60128784]
[463.96060181 289.62249756]
[471.74978638 302.45541382]
[478.26406860 315.98019409]
[483.44259644 330.07058716]
[487.23699951 344.59497070]
[489.61187744 359.41778564]
[490.54501343 374.40057373]
[490.02777100 389.40353394]
[488.06491089 404.28649902]
[484.67477417 418.91052246]
[479.88903809 433.13909912]
[473.75234985 446.83935547]
[466.32205200 459.88336182]
[457.66751099 472.14932251]
[447.86950684 483.52273560]
[437.01953125 493.89739990]
[425.21890259 503.17645264]
[412.57778931 511.27325439]
[399.21423340 518.11218262]
[385.25302124 523.62939453]
[370.82446289 527.77337646]
[356.06332397 530.50543213]
[341.10742188 531.80010986]
[326.09637451 531.64526367]
[311.17034912 530.04229736]
[296.46871948 527.00628662]
[282.12875366 522.56542969]
[268.28433228 516.76135254]
[255.06471252 509.64819336]
[242.59335327 501.29229736]
[230.98667908 491.77175903]
[220.35305786 481.17544556]
[210.79179382 469.60232544]
[202.39215088 457.16040039]
[195.23255920 443.96585083]
[189.37985229 430.14190674]
[184.88868713 415.81762695]
[181.80101013 401.12677002]
[180.14562988 386.20648193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[18 147]
[19 146]
[20 145]
[22 143]
[23 142]
[24 141]
[26 140]
[27 139]
[28 138]
[29 128]
[30 127]
[31 126]
[32 125]
[33 124]
[34 123]
[36 121]
[37 120]
[38 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
