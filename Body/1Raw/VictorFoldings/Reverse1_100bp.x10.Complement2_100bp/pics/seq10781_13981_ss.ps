%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[71.11467743 581.04815674]
[70.00402069 565.88787842]
[74.78425598 551.45812988]
[84.72643280 539.95935059]
[98.31443024 533.14508057]
[97.19877625 518.18658447]
[88.53630066 506.07006836]
[95.22576141 491.73263550]
[94.11010742 476.77416992]
[92.99446106 461.81573486]
[91.87881470 446.85726929]
[90.65184021 431.90753174]
[89.31360626 416.96734619]
[87.97537231 402.02716064]
[86.63713837 387.08697510]
[85.29890442 372.14678955]
[83.96067047 357.20660400]
[76.64168549 370.29983521]
[64.12697601 378.56918335]
[49.21234131 380.16723633]
[35.22975922 374.73699951]
[25.30297470 363.49160767]
[21.64965439 348.94329834]
[25.08595657 334.34219360]
[34.84420776 322.95025635]
[48.74438477 317.31243896]
[63.68115616 318.68823242]
[76.31761169 326.77032471]
[83.83073425 339.75314331]
[84.94638062 324.79467773]
[75.06248474 313.71118164]
[75.98081970 298.52529907]
[87.67324066 288.23330688]
[88.78889465 273.27484131]
[89.90454102 258.31640625]
[91.02018738 243.35794067]
[92.02445221 228.39160156]
[92.58266449 213.40199280]
[92.80599213 198.40365601]
[93.02931976 183.40530396]
[93.25264740 168.40696716]
[93.25264740 153.40696716]
[93.02931976 138.40863037]
[92.80599213 123.41030121]
[92.58266449 108.41196442]
[82.19831085 119.23625183]
[67.29980469 120.97818756]
[54.69852448 112.84136963]
[50.15561295 98.54585266]
[55.74803162 84.62734222]
[68.91899109 77.44920349]
[83.64691925 80.29318237]
[93.19902802 91.86078644]
[94.53726196 76.92060852]
[95.87549591 61.98041916]
[97.21372986 47.04023361]
[95.24771881 43.16870117]
[94.67368317 39.26549530]
[95.33065033 35.77210236]
[96.93080902 33.03237534]
[99.10233307 31.25963402]
[101.32745361 16.42559052]
[103.55256653 1.59154701]
[105.77768707 -13.24249649]
[108.00279999 -28.07653999]
[110.22792053 -42.91058350]
[103.20302582 -53.72786713]
[105.36171722 -66.03736877]
[115.00954437 -73.33435822]
[117.45526886 -88.13362885]
[119.79075623 -102.95069122]
[122.01587677 -117.78473663]
[123.13152313 -132.74319458]
[123.13152313 -147.74319458]
[123.13152313 -162.74319458]
[123.13152313 -177.74319458]
[123.13152313 -192.74319458]
[115.39422607 -206.54336548]
[123.13152313 -219.27062988]
[123.13152313 -234.27062988]
[122.46173859 -249.25567627]
[121.12350464 -264.19586182]
[119.78527069 -279.13604736]
[108.84547424 -293.94827271]
[116.84455872 -309.56820679]
[115.28403473 -324.48678589]
[111.27881622 -332.69631958]
[113.81303406 -339.63888550]
[112.47480011 -354.57907104]
[111.13656616 -369.51925659]
[109.79833221 -384.45944214]
[94.93186188 -387.03826904]
[81.23980713 -393.37783813]
[69.65572357 -403.04589844]
[60.96943283 -415.38327026]
[55.77317429 -429.54876709]
[54.42124557 -444.57656860]
[57.00581741 -459.44204712]
[63.35066986 -473.13165283]
[73.02320099 -484.71200562]
[85.36392975 -493.39352417]
[99.53143311 -498.58432007]
[114.55974579 -499.93045044]
[129.42422485 -497.34014893]
[143.11137390 -490.98999023]
[154.68798828 -481.31298828]
[163.36476135 -468.96893311]
[168.55007935 -454.79940796]
[169.89039612 -439.77056885]
[167.29434204 -424.90710449]
[160.93891907 -411.22241211]
[151.25744629 -399.64953613]
[138.91003418 -390.97753906]
[124.73851776 -385.79769897]
[126.07675171 -370.85751343]
[127.41498566 -355.91732788]
[128.75321960 -340.97714233]
[130.20263672 -326.04733276]
[131.76316833 -311.12872314]
[140.95956421 -303.27041626]
[142.38175964 -290.85424805]
[134.72544861 -280.47427368]
[136.06369019 -265.53408813]
[137.40191650 -250.59390259]
[147.82600403 -261.37994385]
[162.82083130 -261.77377319]
[173.79669189 -251.54974365]
[174.46612549 -236.56469727]
[164.44563293 -225.40270996]
[149.47541809 -224.45790100]
[138.13153076 -234.27062988]
[138.13153076 -219.27062988]
[145.86882019 -206.54336548]
[138.13153076 -192.74319458]
[138.13153076 -177.74319458]
[138.13153076 -162.74319458]
[138.13153076 -147.74319458]
[138.13153076 -132.74319458]
[146.98088074 -144.85470581]
[160.66014099 -151.00918579]
[175.59359741 -149.59785461]
[187.87767029 -140.98963928]
[194.30134583 -127.43469238]
[193.18547058 -112.47625732]
[184.82174683 -100.02442169]
[171.39642334 -93.33408356]
[156.41885376 -94.15406036]
[143.80412292 -102.27002716]
[136.84991455 -115.55962372]
[134.62480164 -100.72557831]
[136.74130249 -93.64445496]
[132.25454712 -85.68789673]
[129.80880737 -70.88862610]
[136.86399841 -54.82029724]
[125.06196594 -40.68546677]
[122.83684540 -25.85142326]
[120.61173248 -11.01737976]
[118.38661194 3.81666422]
[116.16149902 18.65070724]
[113.93637848 33.48475266]
[112.15391541 48.37846756]
[110.81568146 63.31865311]
[109.47744751 78.25884247]
[108.13920593 93.19902039]
[107.58100128 108.18863678]
[107.80432892 123.18697357]
[108.02765656 138.18530273]
[108.25098419 153.18363953]
[111.30815887 159.04582214]
[110.99318695 164.72013855]
[108.25098419 168.63029480]
[108.02765656 183.62863159]
[107.80432892 198.62698364]
[107.58100128 213.62532043]
[110.12488556 218.18334961]
[110.61681366 222.79977417]
[109.37817383 226.68316650]
[106.99785614 229.28440857]
[109.61093140 238.03710938]
[105.97864532 244.47358704]
[104.86299133 259.43203735]
[103.74734497 274.39050293]
[102.63169861 289.34893799]
[112.66802979 301.26153564]
[111.32351685 316.41564941]
[99.90483093 325.91033936]
[98.78918457 340.86880493]
[98.90084839 355.86837769]
[100.23908234 370.80856323]
[101.57732391 385.74874878]
[102.91555786 400.68893433]
[104.25379181 415.62911987]
[105.59202576 430.56930542]
[109.47457123 438.83752441]
[106.83726501 445.74160767]
[107.95291138 460.70007324]
[109.06856537 475.65853882]
[110.18421173 490.61697388]
[118.92649078 503.80346680]
[112.15723419 517.07092285]
[113.27288055 532.02941895]
[127.72138977 536.75268555]
[139.25930786 546.64935303]
[146.12718201 560.21038818]
[147.27770996 575.36773682]
[142.53546143 589.80999756]
[132.62356567 601.33489990]
[119.05354309 608.18487549]
[103.89471436 609.31549072]
[89.45868683 604.55426025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[8 198]
[9 197]
[10 196]
[11 195]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[29 187]
[30 186]
[33 183]
[34 182]
[35 181]
[36 180]
[37 178]
[38 174]
[39 173]
[40 172]
[41 171]
[42 168]
[43 167]
[44 166]
[45 165]
[53 164]
[54 163]
[55 162]
[56 161]
[61 160]
[62 159]
[63 158]
[64 157]
[65 156]
[66 155]
[69 153]
[70 152]
[71 150]
[72 149]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[79 132]
[80 131]
[81 124]
[82 123]
[83 122]
[85 119]
[86 118]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
