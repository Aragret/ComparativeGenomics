%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[72.52735138 741.65386963]
[57.67304230 739.48480225]
[43.09742355 735.89221191]
[28.93659019 730.90960693]
[15.32276630 724.58349609]
[2.38305950 716.97302246]
[-9.76171112 708.14923096]
[-20.99815178 698.19439697]
[-31.22134781 687.20159912]
[-40.33584595 675.27343750]
[-48.25654221 662.52124023]
[-54.90948105 649.06414795]
[-60.23255157 635.02770996]
[-64.17604065 620.54309082]
[-66.70314026 605.74548340]
[-67.79024506 590.77307129]
[-67.42721558 575.76562500]
[-65.61743164 560.86328125]
[-62.37779236 546.20513916]
[-57.73855209 531.92816162]
[-51.74301910 518.16552734]
[-44.44718170 505.04583740]
[-35.91915512 492.69155884]
[-26.23856544 481.21804810]
[-15.49580193 470.73239136]
[-3.79116940 461.33255005]
[8.76604748 453.10626221]
[22.05860138 446.13034058]
[35.96238327 440.46990967]
[50.34756851 436.17785645]
[65.07984924 433.29418945]
[80.02166748 431.84588623]
[80.02166748 416.84588623]
[80.02166748 401.84588623]
[80.02166748 386.84588623]
[77.80039978 384.10760498]
[76.79509735 380.15734863]
[77.56093597 375.57839966]
[80.37160492 371.17987061]
[81.04138947 356.19482422]
[81.71117401 341.20977783]
[74.54989624 328.14971924]
[82.89569092 314.70880127]
[83.56547546 299.72375488]
[84.23526001 284.73870850]
[84.90504456 269.75366211]
[77.74376678 256.69360352]
[86.08955383 243.25268555]
[86.75934601 228.26765442]
[79.59806061 215.20758057]
[87.94385529 201.76666260]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[84.18960571 71.33276367]
[94.20381165 56.92156601]
[94.65041351 41.92821884]
[95.09702301 26.93486786]
[95.54363251 11.94151688]
[81.38794708 3.39700866]
[73.51795959 -11.03763103]
[73.99852753 -27.37733459]
[82.60382843 -41.16518021]
[96.90482330 -48.68807602]
[97.12815094 -63.68641281]
[97.35147858 -78.68475342]
[97.46315002 -93.68433380]
[97.46315002 -108.68433380]
[96.90493774 -123.67394257]
[95.78929138 -138.63240051]
[94.67363739 -153.59085083]
[93.55799103 -168.54930115]
[92.44234467 -183.50775146]
[91.32669067 -198.46621704]
[77.14804077 -201.27798462]
[64.19316864 -207.66241455]
[53.34427643 -217.17770386]
[45.33834457 -229.16912842]
[40.71705246 -242.81402588]
[39.79013062 -257.17825317]
[42.61463165 -271.28012085]
[48.99143219 -284.15756226]
[58.47928619 -294.93365479]
[70.42533112 -302.87640381]
[84.01000214 -307.44845581]
[83.11718750 -322.42184448]
[82.22437286 -337.39526367]
[81.33155823 -352.36865234]
[66.60722351 -355.74072266]
[53.43002319 -363.12570190]
[42.86816406 -373.92495728]
[35.77785492 -387.26303101]
[32.73387527 -402.05865479]
[33.98298264 -417.11242676]
[39.42392349 -431.20404053]
[48.61561966 -443.19107056]
[60.81294632 -452.10186768]
[75.02711487 -457.21398926]
[90.10585022 -458.11309814]
[104.82678986 -454.72625732]
[117.99656677 -447.32803345]
[128.54757690 -436.51818848]
[135.62448120 -423.17300415]
[138.65359497 -408.37429810]
[137.38935852 -393.32177734]
[131.93426514 -379.23565674]
[122.73052979 -367.25787354]
[110.52426147 -358.35934448]
[96.30496216 -353.26147461]
[97.19777679 -338.28808594]
[98.09059143 -323.31466675]
[98.98341370 -308.34124756]
[114.21353149 -304.98144531]
[127.89475250 -297.46331787]
[138.91667175 -286.38769531]
[146.38211060 -272.64459229]
[149.68013000 -257.34152222]
[148.53599548 -241.71443176]
[143.03408813 -227.02770996]
[133.61170959 -214.47203064]
[121.02436829 -205.06770325]
[106.28514862 -199.58186340]
[107.40079498 -184.62341309]
[108.51644135 -169.66494751]
[109.63209534 -154.70649719]
[110.74774170 -139.74804688]
[111.86338806 -124.78959656]
[123.48046875 -134.27871704]
[138.17398071 -131.26196289]
[145.11241150 -117.96315765]
[139.18101501 -104.18569183]
[124.75218964 -100.08580017]
[112.46315002 -108.68433380]
[112.46315002 -93.68433380]
[115.60665131 -86.99552155]
[112.34981537 -78.46142578]
[112.12648773 -63.46308517]
[111.90316010 -48.46474838]
[124.06379700 -42.24895477]
[132.39994812 -31.34770775]
[135.23951721 -17.85378456]
[131.97256470 -4.38882113]
[123.18123627 6.40602589]
[110.53697968 12.38812256]
[110.09037018 27.38147354]
[109.64376831 42.37482452]
[109.19715881 57.36817169]
[117.26123810 66.38466644]
[117.01187134 78.87953186]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[102.92889404 202.43644714]
[110.04226685 216.56834412]
[101.74438477 228.93743896]
[101.07459259 243.92247009]
[108.18796539 258.05438232]
[99.89008331 270.42346191]
[99.22029877 285.40850830]
[98.55051422 300.39355469]
[97.88072968 315.37857056]
[104.99410248 329.51046753]
[96.69621277 341.87957764]
[96.02642822 356.86459351]
[95.35664368 371.84963989]
[95.02166748 386.84588623]
[95.02166748 401.84588623]
[95.02166748 416.84588623]
[95.02166748 431.84588623]
[109.96348572 433.29418945]
[124.69577026 436.17785645]
[139.08096313 440.46990967]
[152.98474121 446.13034058]
[166.27729797 453.10626221]
[178.83450317 461.33255005]
[190.53913879 470.73239136]
[201.28190613 481.21804810]
[210.96249390 492.69155884]
[219.49052429 505.04583740]
[226.78636169 518.16552734]
[232.78189087 531.92816162]
[237.42112732 546.20513916]
[240.66076660 560.86328125]
[242.47055054 575.76562500]
[242.83358765 590.77307129]
[241.74647522 605.74548340]
[239.21937561 620.54309082]
[235.27589417 635.02770996]
[229.95281982 649.06414795]
[223.29988098 662.52124023]
[215.37918091 675.27343750]
[206.26467896 687.20159912]
[196.04148865 698.19439697]
[184.80505371 708.14923096]
[172.66027832 716.97302246]
[159.72056580 724.58349609]
[146.10675049 730.90960693]
[131.94592285 735.89221191]
[117.37030029 739.48480225]
[102.51598358 741.65386963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 179]
[33 178]
[34 177]
[35 176]
[39 175]
[40 174]
[41 173]
[43 171]
[44 170]
[45 169]
[46 168]
[48 166]
[49 165]
[51 163]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[57 157]
[59 155]
[61 152]
[62 151]
[63 150]
[64 149]
[69 143]
[70 142]
[71 141]
[72 139]
[73 138]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
