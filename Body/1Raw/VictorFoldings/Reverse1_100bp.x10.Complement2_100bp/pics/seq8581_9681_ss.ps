%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[89.46089935 647.31707764]
[75.40072632 652.64263916]
[60.65572739 655.58111572]
[45.62816238 656.05249023]
[30.72799301 654.04382324]
[16.36170578 649.60986328]
[2.92122412 642.87170410]
[-9.22678661 634.01306152]
[-19.75091934 623.27563477]
[-28.36406898 610.95233154]
[-34.83126068 597.37933350]
[-38.97606659 582.92700195]
[-40.68540955 567.98956299]
[-39.91266251 552.97442627]
[-36.67890549 538.29138184]
[-31.07235527 524.34088135]
[-23.24596405 511.50354004]
[-13.41324234 500.12954712]
[-1.84243286 490.52923584]
[11.15080452 482.96444702]
[25.21200371 477.64163208]
[39.95756531 474.70593262]
[54.98522186 474.23748779]
[56.98923492 459.37194824]
[58.99324799 444.50643921]
[60.99726105 429.64089966]
[63.00127411 414.77536011]
[65.00528717 399.90985107]
[62.87346268 395.63616943]
[63.40370560 389.97790527]
[67.29666138 384.63409424]
[69.74239349 369.83480835]
[71.52485657 354.94110107]
[72.64050293 339.98263550]
[73.75615692 325.02420044]
[59.89867783 319.40890503]
[48.43978882 309.77230835]
[40.50979614 297.04849243]
[36.89598083 282.47692871]
[37.96447372 267.48156738]
[43.62318420 253.53186035]
[53.32960129 241.99868774]
[66.14276886 234.01963806]
[80.81450653 230.38681030]
[81.93016052 215.42834473]
[83.04580688 200.46989441]
[84.16145325 185.51144409]
[75.01963043 178.68551636]
[70.25881195 168.18550110]
[71.16709137 156.57218933]
[77.63415527 146.73970032]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[87.79199219 69.13946533]
[74.64398956 76.35958862]
[59.70301056 77.68890381]
[45.48686218 72.90338898]
[34.39121628 62.80949783]
[28.28588867 49.10822296]
[28.19972801 34.10847092]
[34.14725876 20.33796120]
[45.12621307 10.11727142]
[59.28644943 5.16876364]
[74.24171448 6.32634926]
[87.47178650 13.39495468]
[96.74716949 25.18339729]
[100.50486755 39.70677185]
[104.90586090 25.36692429]
[109.30686188 11.02707672]
[113.70786285 -3.31277061]
[106.55923462 -17.15238571]
[111.22674561 -31.63233566]
[124.46475983 -38.36216736]
[128.86575317 -52.70201492]
[133.26675415 -67.04186249]
[137.66775513 -81.38170624]
[142.06875610 -95.72155762]
[146.46975708 -110.06140137]
[150.87074280 -124.40125275]
[149.76499939 -130.91960144]
[151.81013489 -136.22190857]
[155.62214661 -139.09898376]
[160.44815063 -153.30143738]
[156.44314575 -171.27479553]
[170.08195496 -182.31787109]
[174.69596863 -196.59060669]
[179.30998230 -210.86332703]
[183.92399597 -225.13606262]
[188.53799438 -239.40879822]
[175.02323914 -245.97364807]
[162.55369568 -254.35557556]
[151.37208557 -264.39141846]
[141.69607544 -275.88580322]
[133.71401978 -288.61499023]
[127.58126831 -302.33126831]
[123.41720581 -316.76754761]
[121.30288696 -331.64288330]
[121.27947998 -346.66772461]
[123.34741974 -361.54959106]
[127.46646881 -375.99880981]
[133.55644226 -389.73410034]
[141.49879456 -402.48812866]
[151.13893127 -414.01260376]
[162.28919983 -424.08325195]
[174.73255920 -432.50396729]
[188.22680664 -439.11093140]
[202.50924683 -443.77545166]
[217.30189514 -446.40679932]
[232.31678772 -446.95370483]
[247.26165771 -445.40554810]
[261.84561157 -441.79244995]
[275.78475952 -436.18475342]
[288.80776978 -428.69161987]
[300.66116333 -419.45886230]
[311.11419678 -408.66625977]
[319.96337891 -396.52386475]
[327.03649902 -383.26803589]
[332.19583130 -369.15676880]
[335.34097290 -354.46481323]
[336.41073608 -339.47808838]
[335.38424683 -324.48834229]
[332.28149414 -309.78735352]
[327.16287231 -295.66128540]
[320.12805176 -282.38507080]
[311.31390381 -270.21719360]
[300.89208984 -259.39447021]
[289.06536865 -250.12757874]
[276.06402588 -242.59689331]
[262.14111328 -236.94898987]
[247.56765747 -233.29383850]
[232.62731934 -231.70256042]
[217.61090088 -232.20614624]
[202.81072998 -234.79478455]
[198.19671631 -220.52206421]
[193.58271790 -206.24932861]
[188.96870422 -191.97659302]
[184.35469055 -177.70385742]
[189.58143616 -166.79478455]
[185.85423279 -154.86618042]
[174.65060425 -148.47543335]
[169.82460022 -134.27297974]
[165.21060181 -120.00025177]
[160.80960083 -105.66040802]
[156.40859985 -91.32055664]
[152.00759888 -76.98071289]
[147.60659790 -62.64086151]
[143.20561218 -48.30101776]
[138.80461121 -33.96117020]
[145.98820496 -20.96380424]
[141.72924805 -6.35846567]
[128.04769897 1.08822751]
[123.64670563 15.42807484]
[119.24571228 29.76792145]
[114.84471130 44.10776901]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[115.55127716 157.00601196]
[113.68511963 175.53788757]
[99.11991119 186.62709045]
[98.00425720 201.58554077]
[96.88861084 216.54400635]
[95.77296448 231.50245667]
[109.74347687 237.27151489]
[121.23126221 247.06301880]
[129.11944580 259.90844727]
[132.64624023 274.54321289]
[131.47848511 289.53118896]
[125.74308014 303.40548706]
[116.01335907 314.81216431]
[103.25174713 322.64233398]
[88.71460724 326.13983154]
[87.59896088 341.09829712]
[86.48330688 356.05673218]
[98.52653503 347.11468506]
[113.38491821 349.17102051]
[122.54689789 361.04782104]
[120.76406860 375.94149780]
[109.05773163 385.32028198]
[94.13379669 383.81155396]
[84.54166412 372.28054810]
[82.09593201 387.07980347]
[79.87081909 401.91384888]
[77.86680603 416.77938843]
[75.86279297 431.64492798]
[73.85877228 446.51043701]
[71.85475922 461.37597656]
[69.85074615 476.24148560]
[84.21788788 480.67263794]
[97.65966797 487.40826416]
[109.80938721 496.26455688]
[120.33558655 506.99996948]
[128.95111084 519.32159424]
[135.42091370 532.89331055]
[139.56851196 547.34484863]
[141.28073120 562.28204346]
[140.51087952 577.29724121]
[137.27995300 591.98095703]
[131.67608643 605.93249512]
[123.85216522 618.77136230]
[114.02163696 630.14727783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[31 191]
[32 190]
[33 183]
[34 182]
[35 181]
[44 172]
[45 171]
[46 170]
[47 169]
[52 166]
[53 165]
[54 164]
[56 162]
[57 161]
[58 160]
[72 159]
[73 158]
[74 157]
[75 156]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[87 146]
[88 145]
[90 142]
[91 141]
[92 140]
[93 139]
[94 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
