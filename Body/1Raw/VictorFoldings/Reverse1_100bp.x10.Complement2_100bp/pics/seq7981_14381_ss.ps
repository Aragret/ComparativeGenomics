%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[160.43171692 499.30972290]
[171.12287903 488.65130615]
[184.29376221 481.27362061]
[180.75408936 466.69723511]
[177.21441650 452.12084961]
[173.67474365 437.54449463]
[170.13507080 422.96810913]
[164.67970276 408.99530029]
[157.40647888 395.87661743]
[144.46836853 388.49728394]
[144.54379272 372.67623901]
[137.27056885 359.55755615]
[129.99734497 346.43887329]
[122.72411346 333.32015991]
[116.73158264 328.99450684]
[115.44190979 319.95156860]
[108.36480713 306.72604370]
[101.28769684 293.50051880]
[101.75587463 308.49319458]
[99.32998657 323.29574585]
[94.10071564 337.35470581]
[86.26357269 350.14453125]
[76.11155701 361.18701172]
[64.02420044 370.06933594]
[50.45340347 376.45944214]
[35.90652084 380.11843872]
[20.92739487 380.90951538]
[6.07603216 378.80307007]
[-8.09233665 373.87789917]
[-21.04801941 366.31811523]
[-32.30665588 356.40634155]
[-41.44733429 344.51315308]
[-48.12832260 331.08319092]
[-52.09984970 316.61849976]
[-53.21343613 301.65988159]
[-51.42745209 286.76660156]
[-46.80866241 272.49542236]
[-39.52974701 259.37988281]
[-29.86283302 247.91030884]
[-18.16932678 238.51553345]
[-4.88639641 231.54676819]
[9.48936462 227.26454163]
[24.42050934 225.82894897]
[39.34882355 227.29365540]
[53.71620560 231.60392761]
[66.98551941 238.59858704]
[78.66067505 248.01615906]
[88.30519867 259.50454712]
[95.55609131 272.62866211]
[94.88630676 257.64364624]
[94.21652222 242.65859985]
[93.54673767 227.67355347]
[92.87695312 212.68852234]
[92.20716858 197.70347595]
[89.34976196 193.87669373]
[88.86597443 188.21427917]
[91.74726105 182.26367188]
[91.52393341 167.26533508]
[91.30060577 152.26699829]
[89.03881836 149.56207275]
[87.97481537 145.62722778]
[88.67238617 141.03738403]
[91.41725922 136.59747314]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[81.77513123 85.70962524]
[66.86211395 84.09658813]
[57.35058212 72.49784851]
[58.68917465 57.55769348]
[70.11108398 47.83452606]
[85.07331848 48.89821625]
[95.00452423 60.13853455]
[97.00853729 45.27300644]
[99.01255035 30.40748024]
[91.82737732 19.69598579]
[93.80256653 7.35570908]
[103.34068298 -0.08411033]
[105.56579590 -14.91815376]
[107.79091644 -29.75219727]
[96.90187073 -40.64875412]
[94.54455566 -55.69190598]
[101.41593933 -69.08026886]
[114.69438171 -75.77510071]
[116.91950226 -90.60914612]
[111.31493378 -105.40439606]
[120.85461426 -116.84310150]
[123.07972717 -131.67713928]
[124.30670166 -146.62687683]
[124.53002930 -161.62521362]
[124.75335693 -176.62355042]
[124.97668457 -191.62188721]
[125.20001221 -206.62022400]
[115.86057281 -222.49020386]
[125.44126892 -237.19317627]
[125.44126892 -252.19317627]
[125.44126892 -267.19317627]
[111.66739655 -273.76913452]
[102.11746979 -285.67550659]
[98.68762970 -300.54827881]
[102.05887604 -315.43441772]
[111.56184387 -327.37829590]
[125.30970764 -334.00845337]
[140.57283020 -334.00845337]
[154.32069397 -327.37829590]
[163.82365417 -315.43441772]
[167.19490051 -300.54827881]
[163.76506042 -285.67550659]
[154.21513367 -273.76913452]
[140.44126892 -267.19317627]
[140.44126892 -252.19317627]
[140.44126892 -237.19317627]
[148.77021790 -228.42077637]
[148.89299011 -215.92402649]
[140.19834900 -206.39689636]
[139.97502136 -191.39855957]
[139.75169373 -176.40022278]
[139.52836609 -161.40188599]
[139.30503845 -146.40354919]
[148.79541016 -158.01962280]
[163.02603149 -162.76191711]
[177.58738708 -159.16101074]
[187.96751404 -148.33265686]
[190.94998169 -133.63214111]
[185.61065674 -119.61460114]
[173.60398865 -110.62349701]
[158.65036011 -109.44483948]
[145.38333130 -116.44383240]
[137.91377258 -129.45202637]
[135.68865967 -114.61798096]
[141.45237732 -100.88375854]
[131.75354004 -88.38403320]
[129.52842712 -73.54998779]
[140.25822449 -63.25389481]
[142.89904785 -48.43869781]
[136.23182678 -34.74923325]
[122.62496185 -27.52708054]
[120.39984131 -12.69303703]
[118.17472076 2.14100695]
[125.46836090 18.10251427]
[113.87808228 32.41149139]
[111.87406921 47.27701950]
[109.87005615 62.14254761]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[106.41061401 137.04408264]
[106.29894257 152.04367065]
[106.52227020 167.04200745]
[106.74559784 182.04034424]
[107.19220734 197.03369141]
[107.86199188 212.01873779]
[108.53177643 227.00376892]
[109.20156097 241.98881531]
[109.87134552 256.97384644]
[110.54113007 271.95889282]
[114.51322937 286.42340088]
[121.59033203 299.64892578]
[128.66743469 312.87445068]
[135.84280396 326.04693604]
[143.11602783 339.16564941]
[150.38926697 352.28433228]
[157.66249084 365.40301514]
[171.12083435 373.72070312]
[170.52517700 388.60339355]
[177.79840088 401.72207642]
[177.49299622 386.72518921]
[181.77662659 372.34985352]
[190.24099731 359.96621704]
[202.07934570 350.75460815]
[216.16331482 345.59304810]
[231.15052795 344.97351074]
[245.61245728 348.95498657]
[258.17071533 357.15805054]
[267.62832642 368.80078125]
[273.08386230 382.77352905]
[274.01730347 397.74444580]
[270.33969116 412.28662109]
[262.40158081 425.01400757]
[250.95954895 434.71350098]
[237.10418701 440.46057129]
[222.15609741 441.70748901]
[207.54005432 438.33538818]
[194.64913940 430.66567993]
[184.71144104 419.42843628]
[188.25111389 434.00482178]
[191.79078674 448.58117676]
[195.33045959 463.15756226]
[198.87013245 477.73394775]
[213.95776367 478.24945068]
[228.34648132 482.81756592]
[240.96853638 491.09924316]
[250.88728333 502.47998047]
[257.36669922 516.11523438]
[259.92593384 530.99316406]
[258.37512207 546.00970459]
[252.82931519 560.05059814]
[243.70005798 572.07391357]
[231.66481018 581.18737793]
[217.61665344 586.71472168]
[202.59805298 588.24584961]
[187.72349548 585.66705322]
[174.09677124 579.16973877]
[162.72906494 569.23602295]
[154.46395874 556.60314941]
[149.91474915 542.20843506]
[149.41903687 527.12011719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 192]
[4 191]
[5 190]
[6 189]
[7 188]
[8 169]
[9 168]
[11 166]
[12 165]
[13 164]
[14 163]
[16 162]
[17 161]
[18 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[57 153]
[58 152]
[59 151]
[63 150]
[64 149]
[65 148]
[67 147]
[68 146]
[75 145]
[76 144]
[77 143]
[80 141]
[81 140]
[82 139]
[86 135]
[87 134]
[89 132]
[90 131]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
