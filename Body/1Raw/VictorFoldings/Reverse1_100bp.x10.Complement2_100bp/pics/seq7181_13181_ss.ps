%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[55.22675323 646.46551514]
[56.20450592 631.19128418]
[64.17845917 618.12707520]
[77.31626129 610.27484131]
[76.42344666 595.30145264]
[75.53063202 580.32806396]
[74.63781738 565.35467529]
[73.74500275 550.38122559]
[72.74073792 535.41491699]
[71.62509155 520.45642090]
[70.50944519 505.49798584]
[69.39379120 490.53952026]
[61.46976471 503.27569580]
[48.28613281 510.43054199]
[33.28906631 510.13381958]
[20.39876556 502.46307373]
[12.98472214 489.42346191]
[12.98494911 474.42346191]
[20.39938736 461.38406372]
[33.28992081 453.71371460]
[48.28699493 453.41744995]
[61.47040939 460.57269287]
[69.39379120 473.30822754]
[62.62453461 460.04074097]
[71.36681366 446.85427856]
[72.48246002 431.89581299]
[64.02185822 416.52099609]
[74.51579285 401.38958740]
[75.40860748 386.41619873]
[68.44256592 373.25094604]
[76.98754883 359.93579102]
[70.02150726 346.77053833]
[78.56649017 333.45538330]
[79.45930481 318.48196411]
[80.35211945 303.50854492]
[81.24493408 288.53515625]
[74.27889252 275.36990356]
[82.82387543 262.05474854]
[75.85783386 248.88949585]
[84.40281677 235.57432556]
[77.43677521 222.40908813]
[85.98175812 209.09391785]
[86.87458038 194.12051392]
[76.82675934 183.18537903]
[77.51889801 167.98750305]
[89.05679321 157.52256775]
[89.94960785 142.54916382]
[72.40055084 133.90740967]
[60.37659454 118.47776031]
[56.28480530 99.34907532]
[60.94431305 80.35069275]
[73.42233276 65.28588867]
[91.22090912 57.17045975]
[90.77430725 42.17710876]
[90.32769775 27.18375969]
[89.43488312 12.21035290]
[88.09664917 -2.72983193]
[79.15901184 -15.78468609]
[85.72998810 -29.15149307]
[84.39175415 -44.09167862]
[83.05352020 -59.03186417]
[81.71528625 -73.97204590]
[79.09252167 -77.43255615]
[77.83395386 -81.17160797]
[77.85961151 -84.72614288]
[78.94739532 -87.70663452]
[80.76930237 -89.83708191]
[80.32270050 -104.83042908]
[79.87609100 -119.82378387]
[79.31788635 -134.81338501]
[78.64809418 -149.79843140]
[77.97830963 -164.78346252]
[66.08386230 -155.64443970]
[51.48668671 -159.09733582]
[44.94728470 -172.59683228]
[51.28625870 -186.19158936]
[65.83075714 -189.86006165]
[77.85833740 -180.89944458]
[78.30493927 -195.89279175]
[68.00158691 -204.56779480]
[64.62504578 -217.40559387]
[69.19132233 -229.66249084]
[79.82337189 -236.94184875]
[80.49315643 -251.92687988]
[81.16294098 -266.91192627]
[81.83272552 -281.89697266]
[74.71935272 -296.02886963]
[83.01724243 -308.39794922]
[83.68702698 -323.38299561]
[84.35681152 -338.36801147]
[84.91502380 -353.35763550]
[85.36162567 -368.35098267]
[78.03864288 -382.37539673]
[86.15145111 -394.86666870]
[86.59805298 -409.86001587]
[79.27507019 -423.88442993]
[87.38787842 -436.37570190]
[87.83448029 -451.36904907]
[88.28108978 -466.36239624]
[74.40236664 -472.56317139]
[63.95666504 -483.60653687]
[58.53687668 -497.80844116]
[58.96947479 -513.00323486]
[65.18849945 -526.87377930]
[76.24559021 -537.30493164]
[90.45462036 -542.70605469]
[105.64881134 -542.25347900]
[119.51116943 -536.01617432]
[129.92778015 -524.94537354]
[135.31019592 -510.72924805]
[134.83761597 -495.53567505]
[128.58212280 -481.68151855]
[117.49762726 -471.27947998]
[103.27443695 -465.91580200]
[102.82782745 -450.92245483]
[102.38122559 -435.92907715]
[109.73616028 -422.97708130]
[101.59140778 -409.41342163]
[101.14479828 -394.42004395]
[108.49973297 -381.46804810]
[100.35498047 -367.90438843]
[99.90837097 -352.91101074]
[102.85132599 -346.13159180]
[99.34185028 -337.69824219]
[98.67206573 -322.71319580]
[98.00228119 -307.72814941]
[105.16355896 -294.66809082]
[96.81776428 -281.22717285]
[96.14797974 -266.24212646]
[95.47819519 -251.25709534]
[94.80841064 -236.27204895]
[106.67748260 -224.35719299]
[106.24833679 -207.20695496]
[93.29828644 -195.44618225]
[92.85168457 -180.45283508]
[92.96334839 -165.45326233]
[93.63313293 -150.46821594]
[94.30292511 -135.48318481]
[97.74195862 -128.94140625]
[94.86944580 -120.27038574]
[95.31604767 -105.27703857]
[95.76265717 -90.28369141]
[96.65547180 -75.31027985]
[97.99370575 -60.37009811]
[99.33193970 -45.42991257]
[100.67017365 -30.48972702]
[109.51209259 -18.50349617]
[103.03683472 -4.06806612]
[104.37506866 10.87211895]
[106.43723297 12.77097034]
[107.87148285 15.60108185]
[108.31935120 19.12738609]
[107.51401520 22.98950195]
[105.32105255 26.73715210]
[105.76765442 41.73050308]
[106.21426392 56.72385406]
[116.34371948 59.44972610]
[125.53231049 64.50995636]
[133.25108337 71.61325073]
[139.05569458 80.35069275]
[142.61196899 90.21928406]
[143.71519470 100.65092468]
[142.30186462 111.04509735]
[138.45333862 120.80342865]
[132.39115906 129.36416626]
[124.46432495 136.23449707]
[115.12914276 141.01890564]
[104.92301178 143.44198608]
[104.03019714 158.41539001]
[114.24278259 170.17723083]
[113.12403870 185.34967041]
[101.84798431 195.01332092]
[100.95516968 209.98674011]
[107.85734558 224.22297668]
[99.37622833 236.46714783]
[106.27840424 250.70338440]
[97.79728699 262.94757080]
[104.69946289 277.18380737]
[96.21834564 289.42797852]
[95.32552338 304.40136719]
[94.43270874 319.37478638]
[93.53989410 334.34817505]
[100.44207764 348.58441162]
[91.96095276 360.82861328]
[98.86313629 375.06484985]
[90.38201141 387.30902100]
[89.48919678 402.28240967]
[97.45114899 412.42984009]
[96.39926147 424.88284302]
[87.44091797 433.01147461]
[86.32526398 447.96990967]
[93.01472473 462.30734253]
[84.35224915 474.42388916]
[84.35224915 489.42388916]
[85.46789551 504.38235474]
[86.58354187 519.34082031]
[87.69919586 534.29925537]
[91.45820618 542.62438965]
[88.71840668 549.48840332]
[89.61122131 564.46185303]
[90.50403595 579.43524170]
[91.39685059 594.40863037]
[92.28966522 609.38201904]
[106.26746368 615.61743164]
[115.73735809 627.64154053]
[118.52323914 642.69140625]
[113.98493195 657.30859375]
[103.16531372 668.13421631]
[88.55063629 672.68060303]
[73.49925995 669.90307617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 197]
[10 196]
[11 195]
[12 194]
[23 193]
[25 191]
[26 190]
[28 187]
[29 186]
[31 184]
[33 182]
[34 181]
[35 180]
[36 179]
[38 177]
[40 175]
[42 173]
[43 172]
[46 169]
[47 168]
[53 156]
[54 155]
[55 154]
[56 149]
[57 148]
[59 146]
[60 145]
[61 144]
[62 143]
[67 142]
[68 141]
[69 140]
[70 138]
[71 137]
[72 136]
[78 135]
[79 134]
[83 131]
[84 130]
[85 129]
[86 128]
[88 126]
[89 125]
[90 124]
[91 122]
[92 121]
[94 119]
[95 118]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
