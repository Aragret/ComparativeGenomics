%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[218.11256409 342.68658447]
[224.47718811 329.08737183]
[232.27487183 316.25601196]
[241.41418457 304.34298706]
[251.78796387 293.48794556]
[242.12715149 282.01324463]
[232.46633911 270.53854370]
[222.80552673 259.06384277]
[213.05955505 247.66137695]
[203.22897339 236.33178711]
[199.75663757 235.71928406]
[196.40844727 233.39448547]
[193.98596191 229.43406677]
[193.22619629 224.26979065]
[183.91131592 212.51252747]
[174.59643555 200.75527954]
[165.02131653 189.20898438]
[155.19073486 177.87939453]
[145.36015320 166.54978943]
[135.52957153 155.22019958]
[121.34444427 150.67802429]
[118.14422607 135.18385315]
[115.36076355 134.85147095]
[112.54125214 133.39649963]
[110.11392975 130.79966736]
[108.50608826 127.19697571]
[108.09028625 122.87481689]
[98.95148468 110.98018646]
[94.44413757 125.28695679]
[80.50404358 130.82533264]
[67.40731049 123.51263428]
[64.80837250 108.73949432]
[74.62306976 97.39614105]
[89.61489868 97.84370422]
[81.38608551 85.30229950]
[73.06414032 72.82250977]
[64.64952850 60.40501404]
[56.14270020 48.05050659]
[47.54413605 35.75966644]
[38.94557190 23.46882820]
[31.46204567 18.23101807]
[30.31208611 10.93037415]
[21.89746666 -1.48712099]
[13.48284912 -13.90461636]
[9.59612179 0.58308011]
[-3.32709861 8.19822121]
[-17.88380432 4.57850933]
[-25.73525429 -8.20252132]
[-22.38377953 -22.82331467]
[-9.74925900 -30.90841866]
[4.92989492 -27.82684898]
[-2.34333467 -40.94554138]
[-9.61656380 -54.06423569]
[-16.88979340 -67.18292999]
[-24.16302299 -80.30162048]
[-31.43625259 -93.42031860]
[-35.23561096 -95.52242279]
[-37.90041733 -98.43160248]
[-39.31626129 -101.69209290]
[-39.52851486 -104.85777283]
[-38.72531509 -107.54347992]
[-45.20481110 -121.07182312]
[-51.68430710 -134.60017395]
[-67.11409760 -144.65020752]
[-65.08385468 -162.08135986]
[-71.76404572 -175.51173401]
[-78.44424438 -188.94210815]
[-85.12443542 -202.37248230]
[-99.37686157 -197.61701965]
[-114.15242767 -194.89144897]
[-129.16352844 -194.24885559]
[-144.11796570 -195.70172119]
[-158.72465515 -199.22178650]
[-172.69926453 -204.74052429]
[-185.76977539 -212.15051270]
[-197.68176270 -221.30749512]
[-208.20336914 -232.03326416]
[-217.12977600 -244.11901855]
[-224.28723145 -257.32949829]
[-229.53642273 -271.40759277]
[-232.77514648 -286.07922363]
[-233.94039917 -301.05880737]
[-233.00946045 -316.05477905]
[-230.00047302 -330.77526855]
[-224.97201538 -344.93365479]
[-218.02194214 -358.25442505]
[-209.28555298 -370.47824097]
[-198.93290710 -381.36718750]
[-187.16551208 -390.70925903]
[-174.21243286 -398.32266235]
[-160.32580566 -404.05920410]
[-145.77593994 -407.80715942]
[-130.84603882 -409.49362183]
[-115.82672119 -409.08575439]
[-101.01034546 -406.59152222]
[-86.68532562 -402.05941772]
[-73.13049316 -395.57769775]
[-60.60969543 -387.27252197]
[-49.36666107 -377.30557251]
[-39.62023163 -365.87084961]
[-31.56012535 -353.19088745]
[-25.34323883 -339.51257324]
[-21.09058189 -325.10214233]
[-18.88493538 -310.24005127]
[-18.76923370 -295.21563721]
[-20.74572563 -280.32138062]
[-24.77593994 -265.84713745]
[-30.78142929 -252.07469177]
[-38.64529037 -239.27212524]
[-48.21445847 -227.68862915]
[-59.30265808 -217.54969788]
[-71.69406128 -209.05268860]
[-65.01386261 -195.62231445]
[-58.33367157 -182.19192505]
[-51.65347672 -168.76155090]
[-40.28931808 -164.61637878]
[-34.61402130 -153.48197937]
[-38.15596390 -141.07966614]
[-31.67646599 -127.55132294]
[-25.19697189 -114.02297974]
[-18.31755829 -100.69355011]
[-11.04432869 -87.57485199]
[-3.77109957 -74.45616150]
[3.50212979 -61.33746719]
[10.77535915 -48.21877289]
[18.04858971 -35.10007858]
[25.90034485 -22.31923485]
[34.31496429 -9.90173912]
[42.72957993 2.51575589]
[51.23640823 14.87026501]
[59.83497238 27.16110229]
[68.43353271 39.45194244]
[74.84356689 43.13070679]
[77.06702423 51.99039459]
[85.48163605 64.40789032]
[91.83618927 68.18168640]
[93.92749023 77.07349396]
[102.15629578 89.61489868]
[110.84612274 101.84138489]
[119.98492432 113.73601532]
[129.47381592 125.35327911]
[144.36210632 130.70582581]
[146.85916138 145.38961792]
[156.68974304 156.71920776]
[166.52032471 168.04881287]
[176.35090637 179.37840271]
[181.28543091 181.08064270]
[184.72918701 184.19413757]
[186.39428711 187.91468811]
[186.35368347 191.44039917]
[195.66856384 203.19764709]
[204.98345947 214.95489502]
[214.55857849 226.50120544]
[224.38916016 237.83079529]
[232.37698364 242.26164246]
[234.28022766 249.40303040]
[243.94104004 260.87771606]
[253.60185242 272.35241699]
[263.26266479 283.82711792]
[275.72653198 275.45462036]
[289.02261353 268.47882080]
[302.99496460 262.98147583]
[317.47976685 259.02706909]
[332.30722046 256.66195679]
[347.30346680 255.91386414]
[362.29269409 256.79156494]
[377.09915161 259.28475952]
[391.54925537 263.36422729]
[405.47357178 268.98214722]
[418.70883179 276.07263184]
[431.09985352 284.55258179]
[442.50140381 294.32254028]
[452.77978516 305.26794434]
[461.81448364 317.26049805]
[469.49957275 330.15960693]
[475.74493408 343.81402588]
[480.47735596 358.06362915]
[483.64135742 372.74136353]
[485.19985962 387.67517090]
[485.13455200 402.68991089]
[483.44622803 417.60958862]
[480.15466309 432.25927734]
[475.29846191 446.46719360]
[468.93457031 460.06674194]
[461.13757324 472.89849854]
[451.99890137 484.81204224]
[441.62573242 495.66763306]
[430.13961792 505.33804321]
[417.67529297 513.70983887]
[404.37884521 520.68493652]
[390.40618896 526.18157959]
[375.92117310 530.13519287]
[361.09359741 532.49951172]
[346.09729004 533.24676514]
[331.10812378 532.36828613]
[316.30178833 529.87426758]
[301.85192871 525.79400635]
[287.92791748 520.17535400]
[274.69305420 513.08416748]
[262.30245972 504.60357666]
[250.90142822 494.83300781]
[240.62364197 483.88702393]
[231.58959961 471.89398193]
[223.90521240 458.99444580]
[217.66058350 445.33972168]
[212.92890930 431.08987427]
[209.76570129 416.41195679]
[208.20800781 401.47805786]
[208.27412415 386.46331787]
[209.96325684 371.54373169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 159]
[6 158]
[7 157]
[8 156]
[9 154]
[10 153]
[14 152]
[15 151]
[16 150]
[17 146]
[18 145]
[19 144]
[20 143]
[22 141]
[27 140]
[28 139]
[34 138]
[35 137]
[36 135]
[37 134]
[38 132]
[39 131]
[40 130]
[42 129]
[43 128]
[44 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[61 120]
[62 119]
[63 118]
[65 115]
[66 114]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
