%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[73.32959747 543.01599121]
[74.53391266 558.04309082]
[72.10633087 572.92156982]
[66.18797302 586.78649902]
[57.12294006 598.83178711]
[45.43825150 608.35711670]
[31.81324387 614.80865479]
[17.04005432 617.81140137]
[1.97757804 617.19067383]
[-12.49847126 612.98266602]
[-25.54647636 605.43194580]
[-36.40784454 594.97760010]
[-44.45110703 582.22729492]
[-49.20864105 567.92242432]
[-50.40384674 552.89465332]
[-47.96724319 538.01757812]
[-42.04048538 524.15625000]
[-32.96814728 512.11645508]
[-21.27768707 502.59826660]
[-7.64876986 496.15496826]
[7.12623692 493.16119385]
[22.18833351 493.79101562]
[26.37534523 479.38723755]
[30.56235504 464.98345947]
[34.74936676 450.57968140]
[38.93637848 436.17590332]
[43.12339020 421.77212524]
[47.31040192 407.36831665]
[43.43325806 392.98718262]
[54.71511459 381.89529419]
[58.90212631 367.49151611]
[47.57732773 377.32760620]
[33.12934113 381.35943604]
[18.34784126 378.80850220]
[6.08690596 370.16735840]
[-1.28607059 357.10446167]
[-2.34748149 342.14205933]
[3.10761452 328.16915894]
[14.02592373 317.88372803]
[28.29929161 313.27166748]
[43.17175674 315.22354126]
[55.77167511 323.36245728]
[63.66620255 336.11694336]
[65.33088684 351.02554321]
[72.01108551 337.59515381]
[78.69127655 324.16479492]
[85.37147522 310.73440552]
[89.01956177 296.18478394]
[89.46616364 281.19143677]
[89.91277313 266.19808960]
[90.24774933 251.20182800]
[82.70079803 238.36076355]
[90.64270020 224.67732239]
[90.86602783 209.67898560]
[91.08935547 194.68064880]
[91.31268311 179.68231201]
[91.53601074 164.68397522]
[83.98905945 151.84291077]
[91.93096924 138.15946960]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[82.91460419 62.43403244]
[92.27532959 47.59005356]
[92.05200195 32.59171677]
[91.82867432 17.59337997]
[91.60534668 2.59504247]
[91.38201904 -12.40329456]
[78.86202240 -21.37859154]
[74.08349609 -35.83608246]
[78.67996979 -50.16564560]
[90.68914032 -58.93592453]
[90.46581268 -73.93426514]
[90.24248505 -88.93260193]
[89.79587555 -103.92594910]
[89.12609100 -118.91098785]
[88.45630646 -133.89602661]
[77.53627777 -141.78067017]
[73.21425629 -154.33178711]
[76.85626221 -166.89434814]
[86.91744995 -174.94430542]
[86.47084045 -189.93766785]
[86.02423859 -204.93101501]
[83.27936554 -209.37091064]
[82.58178711 -213.96076965]
[83.64579010 -217.89559937]
[85.90757751 -220.60052490]
[86.13090515 -235.59886169]
[78.59992981 -249.51271057]
[86.52586365 -262.12338257]
[86.74919128 -277.12170410]
[84.50067139 -280.83630371]
[83.63792419 -284.68600464]
[84.03324127 -288.21856689]
[85.42520142 -291.06973267]
[87.45886230 -292.99905396]
[88.57450867 -307.95751953]
[89.69015503 -322.91598511]
[90.80580902 -337.87442017]
[77.08738708 -344.36822510]
[66.64400482 -355.38186646]
[60.88804245 -369.42584229]
[60.59794998 -384.60083008]
[65.81295776 -398.85452271]
[75.82778168 -410.25924683]
[89.28799438 -417.27261353]
[104.37321472 -418.94607544]
[119.04329681 -415.05337524]
[131.31422424 -406.12091064]
[139.52644348 -393.35675049]
[142.56935120 -378.48715210]
[140.03138733 -363.52307129]
[132.25581360 -350.48831177]
[120.29420471 -341.14572144]
[105.76425934 -336.75878906]
[104.64861298 -321.80032349]
[103.53295898 -306.84188843]
[102.41731262 -291.88342285]
[101.74752808 -276.89837646]
[101.52420044 -261.90005493]
[109.07115173 -249.05899048]
[101.12924957 -235.37553406]
[100.90592194 -220.37719727]
[101.01758575 -205.37762451]
[101.46418762 -190.38426208]
[101.91079712 -175.39091492]
[114.63317871 -164.39183044]
[115.48080444 -147.25718689]
[103.44134521 -134.56581116]
[104.11112976 -119.58077240]
[104.78091431 -104.59573364]
[107.63832855 -100.76895142]
[108.12210846 -95.10653687]
[105.24082184 -89.15592957]
[105.46414948 -74.15759277]
[105.68747711 -59.15925217]
[117.95245361 -50.75041962]
[122.97353363 -36.56406403]
[118.62757111 -21.97070694]
[106.38035583 -12.62662315]
[106.60368347 2.37171459]
[106.82701111 17.37005234]
[107.05033875 32.36838913]
[107.27366638 47.36672592]
[115.73230743 56.01415253]
[116.04111481 68.50768280]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[106.92930603 138.38279724]
[114.46028137 152.29663086]
[106.53434753 164.90730286]
[106.31101990 179.90563965]
[106.08769226 194.90397644]
[105.86436462 209.90231323]
[105.64103699 224.90065002]
[113.17201996 238.81448364]
[105.24608612 251.42515564]
[108.24738312 260.05242920]
[104.90612030 266.64468384]
[104.45951843 281.63803101]
[104.01290894 296.63137817]
[111.05441284 283.38687134]
[120.58574677 271.80441284]
[132.22727966 262.34530640]
[145.51535034 255.38632202]
[159.92066956 251.20463562]
[174.86950684 249.96681213]
[189.76644897 251.72212219]
[204.01815796 256.40069580]
[217.05697632 263.81616211]
[228.36360168 273.67315674]
[237.48767090 285.57907104]
[244.06578064 299.05975342]
[247.83593750 313.57821655]
[248.64797974 328.55621338]
[246.46954346 343.39718628]
[241.38742065 357.51000977]
[233.60400391 370.33261108]
[223.42932129 381.35421753]
[211.26861572 390.13586426]
[197.60626221 396.32778931]
[182.98640442 399.68338013]
[167.99136353 400.06893921]
[153.21838379 397.46917725]
[139.25584412 391.98757935]
[126.65990448 383.84252930]
[115.93222809 373.35839844]
[107.50009918 360.95278931]
[101.69937134 347.11978149]
[98.76109314 332.41040039]
[98.80184937 317.41461182]
[92.12165070 330.84497070]
[85.44145966 344.27536011]
[78.76126862 357.70571899]
[73.30590820 371.67852783]
[69.11889648 386.08230591]
[72.69655609 401.49368286]
[61.71418381 411.55532837]
[57.52717209 425.95913696]
[53.34016037 440.36291504]
[49.15314865 454.76669312]
[44.96613693 469.17047119]
[40.77912521 483.57424927]
[36.59211731 497.97802734]
[49.64469528 505.52081299]
[60.51239777 515.96862793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[27 203]
[28 202]
[30 200]
[31 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 165]
[49 164]
[50 163]
[51 161]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[59 153]
[60 152]
[61 151]
[62 149]
[63 148]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
[73 137]
[74 136]
[75 135]
[76 132]
[77 131]
[78 130]
[82 127]
[83 126]
[84 125]
[88 124]
[89 123]
[91 121]
[92 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
