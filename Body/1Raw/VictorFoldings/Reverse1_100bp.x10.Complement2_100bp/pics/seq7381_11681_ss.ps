%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[87.13342285 509.33728027]
[72.09209442 508.66497803]
[57.51932907 504.87969971]
[44.05218887 498.14697266]
[32.27940369 488.76104736]
[22.71562386 477.13229370]
[15.77893925 463.76907349]
[11.77259159 449.25552368]
[10.87172222 434.22616577]
[13.11571217 419.33795166]
[18.40646362 405.24179077]
[26.51268768 392.55389404]
[37.08001709 381.82891846]
[49.64648819 373.53570557]
[63.66275787 368.03680420]
[78.51608276 365.57260132]
[79.18586731 350.58755493]
[72.02458954 337.52749634]
[80.37038422 324.08657837]
[81.04016876 309.10153198]
[78.19847107 302.27902222]
[81.83312225 293.89886475]
[82.72593689 278.92544556]
[83.61875153 263.95205688]
[76.65270996 250.78681946]
[85.19769287 237.47163391]
[75.38064575 229.12568665]
[72.11429596 216.46025085]
[76.80809021 204.04338074]
[87.95803833 196.48736572]
[89.07368469 181.52891541]
[90.18933105 166.57046509]
[90.97065735 151.59082031]
[91.41725922 136.59747314]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[94.21656799 61.42790985]
[94.88635254 46.44287109]
[95.55613708 31.45783234]
[88.13510132 44.49348450]
[77.38218689 54.95173264]
[64.14541626 62.00778580]
[49.46870041 65.10518646]
[34.50949478 63.99964905]
[20.44755173 58.77836990]
[8.39185524 49.85311508]
[-0.70683467 37.92776871]
[-6.13095617 23.94281578]
[-7.45274019 9.00116730]
[-4.56794548 -5.71881771]
[2.29592061 -19.05625916]
[12.59754562 -29.95931053]
[25.52449989 -37.56811142]
[40.05730820 -41.28260040]
[55.04985809 -40.80983734]
[69.31977081 -36.18710709]
[81.74166107 -27.77897644]
[91.33588409 -16.24854469]
[97.34580231 -2.50515270]
[99.29741669 12.37081051]
[104.22901154 -1.79532468]
[109.05500793 -15.99777985]
[113.88100433 -30.20023537]
[118.70700073 -44.40269089]
[123.42713928 -58.64068222]
[128.04115295 -72.91341400]
[123.76898956 -90.82514954]
[137.24188232 -102.07006073]
[141.64288330 -116.40990448]
[140.53713989 -122.92825317]
[142.58226013 -128.23056030]
[146.39428711 -131.10763550]
[151.22027588 -145.31008911]
[156.04627991 -159.51255798]
[159.80258179 -174.03460693]
[162.46836853 -188.79582214]
[165.13417053 -203.55703735]
[167.79995728 -218.31826782]
[170.46575928 -233.07948303]
[156.05049133 -237.27685547]
[142.15295410 -242.95805359]
[128.92541504 -250.06085205]
[116.51278687 -258.50741577]
[105.05107880 -268.20520020]
[94.66587067 -279.04794312]
[85.47094727 -290.91687012]
[77.56705475 -303.68188477]
[71.04079437 -317.20318604]
[65.96366882 -331.33261108]
[62.39130783 -345.91534424]
[60.36284637 -360.79159546]
[59.90051651 -375.79840088]
[61.00938416 -390.77133179]
[63.67729187 -405.54629517]
[67.87501526 -419.96145630]
[73.55656433 -433.85885620]
[80.65967560 -447.08624268]
[89.10654449 -459.49865723]
[98.80460358 -470.96011353]
[109.64759827 -481.34506226]
[121.51673889 -490.53970337]
[134.28196716 -498.44329834]
[147.80343628 -504.96920776]
[161.93296814 -510.04598999]
[176.51579285 -513.61798096]
[191.39208984 -515.64611816]
[206.39891052 -516.10809326]
[221.37179565 -514.99884033]
[236.14669800 -512.33056641]
[250.56176758 -508.13250732]
[264.45901489 -502.45062256]
[277.68621826 -495.34716797]
[290.09844971 -486.90002441]
[301.55969238 -477.20166016]
[311.94436646 -466.35842896]
[321.13870239 -454.48907471]
[329.04196167 -441.72363281]
[335.56756592 -428.20202637]
[340.64401245 -414.07235718]
[344.21566772 -399.48944092]
[346.24340820 -384.61309814]
[346.70501709 -369.60626221]
[345.59542847 -354.63342285]
[342.92678833 -339.85858154]
[338.72836304 -325.44360352]
[333.04614258 -311.54647827]
[325.94238281 -298.31945801]
[317.49493408 -285.90744019]
[307.79629517 -274.44644165]
[296.95278931 -264.06201172]
[285.08322144 -254.86796570]
[272.31759644 -246.96501160]
[258.79583740 -240.43972778]
[244.66603088 -235.36363220]
[230.08303833 -231.79234314]
[215.20663452 -229.76496887]
[200.19981384 -229.30372620]
[185.22697449 -230.41368103]
[182.56118774 -215.65246582]
[179.89538574 -200.89125061]
[177.22958374 -186.13003540]
[174.56379700 -171.36882019]
[185.42472839 -181.71482849]
[199.98001099 -185.34025574]
[214.42492676 -181.29742432]
[224.98359680 -170.64311218]
[228.89602661 -156.16233826]
[225.13951111 -141.64033508]
[214.69598389 -130.87312317]
[200.29537964 -126.67522430]
[185.70195007 -130.14396667]
[174.73042297 -140.37261963]
[170.24873352 -154.68655396]
[165.42272949 -140.48410034]
[160.59674072 -126.28163910]
[155.98272705 -112.00891113]
[151.58172607 -97.66905975]
[156.97030640 -86.83901978]
[153.42111206 -74.85623932]
[142.31388855 -68.29940796]
[137.69987488 -54.02667236]
[138.63348389 -46.69522095]
[132.90945435 -39.57669449]
[128.08346558 -25.37423897]
[123.25746155 -11.17178249]
[118.43146515 3.03067303]
[119.25581360 10.37521076]
[113.42644501 17.40772629]
[110.54117584 32.12761688]
[109.87139130 47.11265564]
[109.20160675 62.09769440]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[106.41061401 137.04408264]
[105.96400452 152.03742981]
[108.43974304 156.63284302]
[108.86289215 161.25607300]
[107.56656647 165.12060547]
[105.14778900 167.68611145]
[104.03213501 182.64456177]
[102.91648865 197.60302734]
[114.57273865 210.64721680]
[113.21532440 227.74903870]
[100.17110443 238.36445618]
[107.07328033 252.60069275]
[98.59216309 264.84487915]
[97.69934082 279.81826782]
[96.80652618 294.79168701]
[96.02520752 309.77133179]
[95.35542297 324.75634766]
[102.46879578 338.88824463]
[94.17090607 351.25735474]
[93.50112152 366.24237061]
[108.07537842 370.02191162]
[121.54516602 376.74935913]
[133.32164001 386.13061523]
[142.88999939 397.75561523]
[149.83193970 411.11611938]
[153.84399414 425.62808228]
[154.75077820 440.65710449]
[152.51264954 455.54617310]
[147.22743225 469.64440918]
[139.12620544 482.33551025]
[128.56309509 493.06463623]
[115.99988556 501.36279297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 198]
[17 197]
[19 195]
[20 194]
[22 193]
[23 192]
[24 191]
[26 189]
[30 186]
[31 185]
[32 184]
[33 180]
[34 179]
[35 178]
[36 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[63 171]
[64 169]
[65 168]
[66 167]
[67 166]
[68 164]
[69 163]
[71 160]
[72 159]
[75 158]
[76 157]
[77 156]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
