%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[28.00724602 624.98986816]
[28.00640678 609.94335938]
[30.85341263 595.16870117]
[36.44534302 581.19995117]
[44.58005524 568.54199219]
[54.96348572 557.65252686]
[67.22028351 548.92510986]
[80.90735626 542.67529297]
[77.36768341 528.09893799]
[73.82801819 513.52252197]
[70.28834534 498.94616699]
[66.64025116 484.39654541]
[62.88395309 469.87448120]
[59.12765503 455.35244751]
[55.37135315 440.83038330]
[51.61505127 426.30831909]
[47.85874939 411.78625488]
[44.81038284 426.47323608]
[38.61203003 440.13269043]
[29.56611824 452.09811401]
[18.11402512 461.78570557]
[4.81451941 468.72280884]
[-9.68348598 472.57089233]
[-24.67259979 473.14224243]
[-39.42147064 470.40896606]
[-53.21047211 464.50442505]
[-65.36680603 455.71673584]
[-75.29733276 444.47463989]
[-82.51752472 431.32669067]
[-86.67508698 416.91439819]
[-87.56717682 401.94094849]
[-85.15025330 387.13693237]
[-79.54225159 373.22470093]
[-71.01679230 360.88302612]
[-59.98985672 350.71414185]
[-46.99946976 343.21414185]
[-32.67946625 338.74899292]
[-17.72854233 337.53659058]
[-2.87619472 339.63604736]
[11.15290165 344.94497681]
[23.67423439 353.20428467]
[34.07685852 364.01101685]
[41.85321426 376.83786011]
[46.62246704 391.05255127]
[48.62648010 376.18701172]
[50.63049316 361.32147217]
[52.63450623 346.45596313]
[54.30604935 331.54937744]
[55.64428329 316.60919189]
[56.98251724 301.66900635]
[58.32075119 286.72882080]
[59.65898514 271.78863525]
[60.99721909 256.84844971]
[51.95803452 249.88717651]
[47.35406876 239.31744385]
[48.43515396 227.71894836]
[55.04789352 217.98382568]
[65.64520264 212.59553528]
[67.42766571 197.70181274]
[69.21013641 182.80809021]
[70.99259949 167.91438293]
[61.89186478 179.83816528]
[48.95961761 187.43795776]
[34.11426926 189.58638000]
[19.55804825 185.96472168]
[7.45027971 177.11024475]
[-0.41292197 164.33644104]
[-2.86509633 149.53823853]
[0.45752221 134.91085815]
[9.06204224 122.62418365]
[21.67203522 114.50088501]
[36.41688538 111.74598694]
[51.10927582 114.76816559]
[63.56968307 123.11911011]
[71.94968414 135.55999756]
[75.00611877 150.24339294]
[79.83211517 136.04092407]
[84.65811920 121.83847809]
[89.48411560 107.63601685]
[93.88510895 93.29617310]
[97.85720825 78.83164978]
[101.82930756 64.36712646]
[98.02259064 49.01071167]
[108.85394287 38.78666687]
[112.82603455 24.32214355]
[109.01931763 8.96572971]
[119.85067749 -1.25831223]
[116.04396057 -16.61472702]
[126.87531281 -26.83876991]
[130.84741211 -41.30329132]
[134.81950378 -55.76781845]
[138.79159546 -70.23233795]
[142.76370239 -84.69686127]
[145.64897156 -99.41675568]
[147.43144226 -114.31047058]
[139.79370117 -131.06596375]
[150.85203552 -144.69242859]
[152.41255188 -159.61102295]
[153.97308350 -174.52963257]
[155.53359985 -189.44824219]
[141.79237366 -195.80885315]
[130.86268616 -206.28839111]
[123.93013000 -219.75012207]
[121.74668121 -234.73382568]
[124.54918671 -249.61416626]
[132.03366089 -262.77703857]
[143.38822937 -272.79464722]
[157.38124084 -278.58035278]
[172.49484253 -279.50656128]
[187.08961487 -275.47277832]
[199.58242798 -266.91659546]
[208.61816406 -254.76612854]
[213.21669006 -240.33932495]
[212.87918091 -225.20114136]
[207.64225769 -210.99362183]
[198.07398987 -199.25791931]
[185.21224976 -191.26701355]
[170.45220947 -187.88771057]
[168.89167786 -172.96911621]
[167.33116150 -158.05050659]
[165.77062988 -143.13189697]
[173.14175415 -133.54060364]
[171.96376038 -121.09889221]
[162.32514954 -112.52800751]
[160.54269409 -97.63429260]
[170.76856995 -108.60841370]
[185.08224487 -113.09376526]
[199.74218750 -109.91787720]
[210.91630554 -99.91091919]
[215.68370056 -85.68868256]
[212.79820251 -70.96883392]
[203.01406860 -59.59910583]
[188.88885498 -54.55151367]
[174.11485291 -57.14548492]
[162.55393982 -66.70296478]
[157.22822571 -80.72476959]
[153.25611877 -66.26024628]
[149.28402710 -51.79571915]
[145.31193542 -37.33119583]
[141.33982849 -22.86667252]
[145.43066406 -8.54485703]
[134.31520081 2.71378398]
[138.40602112 17.03559875]
[127.29055786 28.29424095]
[123.31846619 42.75876617]
[127.40929413 57.08058167]
[116.29383087 68.33921814]
[112.32173157 82.80374146]
[108.34963226 97.26827240]
[109.62722778 100.03544617]
[109.92618561 103.32864380]
[109.04975891 106.78629303]
[106.93749237 109.97918701]
[103.68656921 112.46202087]
[98.86057281 126.66447449]
[94.03457642 140.86692810]
[89.20857239 155.06938171]
[85.88631439 169.69683838]
[84.10385132 184.59056091]
[82.32138824 199.48428345]
[80.53891754 214.37799072]
[92.80796814 228.81353760]
[90.66609955 247.31556702]
[75.93740082 258.18667603]
[74.59916687 273.12686157]
[73.26093292 288.06704712]
[71.92269897 303.00723267]
[70.58446503 317.94741821]
[69.24623108 332.88760376]
[71.44406128 337.62222290]
[71.59127808 342.26245117]
[70.06723022 346.04296875]
[67.50003815 348.45996094]
[65.49602509 363.32550049]
[63.49200821 378.19100952]
[61.48799515 393.05654907]
[62.38080978 408.02996826]
[66.13710785 422.55200195]
[69.89340973 437.07406616]
[73.64971161 451.59613037]
[77.40601349 466.11819458]
[81.16231537 480.64025879]
[86.34102631 488.16479492]
[84.86471558 495.40649414]
[88.40438843 509.98287964]
[91.94406128 524.55926514]
[95.48373413 539.13562012]
[110.51280975 538.41210938]
[125.40717316 540.54626465]
[139.62840271 545.46081543]
[152.66241455 552.97821045]
[164.03802490 562.82666016]
[173.34402466 574.65014648]
[180.24401855 588.02124023]
[184.48854065 602.45666504]
[185.92419434 617.43450928]
[184.49905396 632.41333008]
[180.26464844 646.85168457]
[173.37403870 660.22760010]
[164.07633972 672.05761719]
[152.70762634 681.91406250]
[139.67889404 689.44061279]
[125.46112061 694.36511230]
[110.56826019 696.50970459]
[95.53868103 695.79675293]
[80.91569519 692.25207520]
[67.22792053 686.00378418]
[54.97015762 677.27770996]
[44.58551025 666.38940430]
[36.44938660 653.73236084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 187]
[9 186]
[10 185]
[11 184]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[58 161]
[59 160]
[60 159]
[61 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 149]
[81 148]
[82 147]
[84 145]
[85 144]
[87 142]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 125]
[95 124]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
