%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[40.06125641 415.55865479]
[47.81243896 428.46652222]
[52.71017075 442.70401001]
[54.54034424 457.64871216]
[53.22295380 472.64730835]
[48.81558609 487.04415894]
[41.51091385 500.20983887]
[31.62827110 511.56884766]
[19.59967804 520.62457275]
[5.95097446 526.98120117]
[-8.72117519 530.36083984]
[-23.77536964 530.61566162]
[-38.55350113 527.73461914]
[-52.40953445 521.84362793]
[-64.73774719 513.20019531]
[-74.99919891 502.18215942]
[-82.74530029 489.27127075]
[-87.63743591 475.03186035]
[-89.46172333 460.08642578]
[-88.13843536 445.08834839]
[-83.72540283 430.69323730]
[-76.41555786 417.53042603]
[-66.52844238 406.17532349]
[-54.49628830 397.12429810]
[-40.84508514 390.77304077]
[-26.17160797 387.39920044]
[-11.11731434 387.15029907]
[3.65968347 390.03717041]
[9.52864456 376.23300171]
[15.39760494 362.42880249]
[21.26656532 348.62463379]
[27.13552666 334.82046509]
[33.00448608 321.01626587]
[38.87344742 307.21209717]
[36.73270035 292.47213745]
[49.25268173 282.79946899]
[47.11193848 268.05950928]
[59.63191986 258.38684082]
[65.50087738 244.58265686]
[69.36518860 230.08895874]
[71.14765167 215.19525146]
[72.93011475 200.30152893]
[74.71258545 185.40780640]
[76.49504852 170.51409912]
[78.27751160 155.62037659]
[68.05163574 166.59449768]
[53.73794937 171.07984924]
[39.07801437 167.90396118]
[27.90390396 157.89700317]
[23.13650131 143.67477417]
[26.02199554 128.95492554]
[35.80612564 117.58518982]
[49.93134689 112.53759766]
[64.70535278 115.13156891]
[76.26625824 124.68904877]
[81.59197998 138.71084595]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[96.16468048 56.42515945]
[106.99604034 46.20111847]
[110.96813202 31.73659325]
[114.94023132 17.27206993]
[118.91232300 2.80754566]
[111.35481262 -10.81309223]
[115.58913422 -25.42559242]
[128.62091064 -32.54658508]
[132.59300232 -47.01110840]
[136.56509399 -61.47563171]
[129.00758362 -75.09626770]
[133.24191284 -89.70877075]
[146.27368164 -96.82976532]
[150.24577332 -111.29428864]
[154.21788025 -125.75881195]
[158.18997192 -140.22334290]
[145.19328308 -147.87327576]
[134.62792969 -158.61843872]
[127.20980072 -171.72215271]
[123.43934631 -186.28822327]
[123.56777954 -201.32221985]
[127.58033752 -215.79937744]
[135.19770813 -228.73446655]
[145.89546204 -239.24876404]
[158.94015503 -246.62983704]
[173.43963623 -250.37977600]
[188.40400696 -250.24876404]
[192.37609863 -264.71328735]
[191.12942505 -268.87258911]
[191.25820923 -272.81567383]
[192.52555847 -276.13668823]
[194.58715820 -278.54843140]
[197.03916931 -279.90704346]
[201.86515808 -294.10949707]
[206.69116211 -308.31195068]
[211.51715088 -322.51440430]
[216.34315491 -336.71685791]
[221.16915894 -350.91931152]
[207.98477173 -358.15417480]
[196.25711060 -367.56869507]
[186.34259033 -378.87680054]
[178.54248047 -391.73486328]
[173.09384155 -405.75210571]
[170.16221619 -420.50259399]
[169.83673096 -435.53805542]
[172.12724304 -450.40158081]
[176.96417236 -464.64151001]
[184.20051575 -477.82507324]
[193.61637878 -489.55166626]
[204.92561340 -499.46490479]
[217.78454590 -507.26354980]
[231.80241394 -512.71057129]
[246.55323792 -515.64056396]
[261.58874512 -515.96435547]
[276.45199585 -513.67211914]
[290.69137573 -508.83358765]
[303.87411499 -501.59573364]
[315.59963989 -492.17855835]
[325.51159668 -480.86819458]
[333.30877686 -468.00839233]
[338.75424194 -453.98989868]
[341.68252563 -439.23873901]
[342.00460815 -424.20321655]
[339.71072388 -409.34017944]
[334.87054443 -395.10137939]
[327.63122559 -381.91943359]
[318.21270752 -370.19500732]
[306.90121460 -360.28433228]
[294.04052734 -352.48858643]
[280.02142334 -347.04470825]
[265.26992798 -344.11813354]
[250.23435974 -343.79772949]
[235.37161255 -346.09332275]
[230.54560852 -331.89086914]
[225.71961975 -317.68841553]
[220.89361572 -303.48596191]
[216.06761169 -289.28350830]
[211.24162292 -275.08102417]
[206.84062195 -260.74118042]
[202.86853027 -246.27667236]
[215.80111694 -238.74690247]
[226.35200500 -228.11790466]
[233.79769897 -215.10997009]
[237.62542725 -200.60684204]
[237.56846619 -185.59559631]
[233.62469482 -171.09953308]
[226.05715942 -158.10838318]
[215.37649536 -147.51072693]
[202.30657959 -140.03323364]
[187.73532104 -136.19082642]
[172.65449524 -136.25123596]
[168.68240356 -121.78671265]
[164.71029663 -107.32218933]
[160.73820496 -92.85766602]
[168.30560303 -80.07994843]
[164.48338318 -65.35427856]
[151.02961731 -57.50353622]
[147.05752563 -43.03901291]
[143.08543396 -28.57448959]
[150.65283203 -15.79676914]
[146.83061218 -1.07110059]
[133.37684631 6.77964211]
[129.40475464 21.24416542]
[125.43265533 35.70869064]
[121.46056366 50.17321396]
[125.55139160 64.49502563]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[96.05650330 142.68295288]
[93.17123413 157.40284729]
[91.38876343 172.29655457]
[89.60630035 187.19027710]
[87.82383728 202.08399963]
[86.04136658 216.97770691]
[84.25890350 231.87142944]
[92.70152283 219.47294617]
[104.38601685 210.06697083]
[118.30155945 204.46717834]
[133.24432373 203.15803528]
[147.92160034 206.25277710]
[161.06367493 213.48368835]
[171.53359985 224.22521973]
[178.42564392 237.54812622]
[181.14356995 252.29983521]
[179.45225525 267.20416260]
[173.49801636 280.97177124]
[163.79592896 292.41159058]
[151.18534851 300.53399658]
[136.75721741 304.63629150]
[121.75968933 304.36358643]
[107.49022675 299.73950195]
[95.18326569 291.16403198]
[85.90348053 279.37905884]
[80.45367432 265.40408325]
[79.30505371 250.45161438]
[73.43609619 264.25579834]
[75.15705872 279.98312378]
[63.05686188 288.66842651]
[64.77781677 304.39575195]
[52.67762375 313.08105469]
[46.80866241 326.88525391]
[40.93970490 340.68942261]
[35.07074356 354.49359131]
[29.20178223 368.29776001]
[23.33282089 382.10195923]
[17.46385956 395.90612793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[36 202]
[38 200]
[39 199]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[56 173]
[57 172]
[58 171]
[60 169]
[61 168]
[63 166]
[64 165]
[65 164]
[66 163]
[69 160]
[70 159]
[71 158]
[74 155]
[75 154]
[76 153]
[77 152]
[88 141]
[89 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
