%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[83.49031830 773.92864990]
[68.49821472 773.25854492]
[53.59811020 771.46990967]
[38.87332916 768.57281494]
[24.40622711 764.58343506]
[10.27770424 759.52410889]
[-3.43322349 753.42309570]
[-16.64987755 746.31445312]
[-29.29834747 738.23803711]
[-41.30789185 729.23901367]
[-52.61135483 719.36761475]
[-63.14551544 708.67913818]
[-72.85146332 697.23333740]
[-81.67491913 685.09417725]
[-89.56653595 672.32958984]
[-96.48218536 659.01098633]
[-102.38319397 645.21276855]
[-107.23654938 631.01214600]
[-111.01511383 616.48858643]
[-113.69776154 601.72320557]
[-115.26947784 586.79870605]
[-115.72148895 571.79840088]
[-115.05125427 556.80633545]
[-113.26252747 541.90625000]
[-110.36531067 527.18145752]
[-106.37580872 512.71441650]
[-101.31632996 498.58593750]
[-95.21517181 484.87506104]
[-88.10645294 471.65844727]
[-80.02993011 459.01007080]
[-71.03076172 447.00057983]
[-61.15929413 435.69723511]
[-50.47071838 425.16314697]
[-39.02481079 415.45730591]
[-26.88558960 406.63397217]
[-14.12093830 398.74246216]
[-0.80224383 391.82690430]
[12.99600983 385.92602539]
[27.19665718 381.07281494]
[41.72027969 377.29437256]
[56.48565674 374.61184692]
[71.41020966 373.04025269]
[86.41047668 372.58837891]
[87.08026123 357.60336304]
[87.75004578 342.61831665]
[88.41983032 327.63327026]
[81.25855255 314.57321167]
[89.60434723 301.13229370]
[90.16255951 286.14266968]
[90.60916138 271.14932251]
[91.05577087 256.15597534]
[91.50237274 241.16262817]
[91.94898224 226.16928101]
[77.99816132 218.01530457]
[70.01710510 203.85696411]
[70.26662445 187.51210022]
[78.77330017 173.44328308]
[93.29639435 165.53936768]
[93.51972198 150.54103088]
[93.74304962 135.54269409]
[93.51972198 120.54436493]
[92.84993744 105.55932617]
[90.40149689 102.57980347]
[89.27828217 98.53552246]
[89.92636108 94.04252625]
[92.50000000 89.89328003]
[92.50000000 74.89328003]
[92.50000000 59.89328003]
[77.60640717 53.83611679]
[66.20492554 42.55442047]
[60.02059937 27.79671860]
[59.97312164 11.83421326]
[66.04019165 -2.88874984]
[77.26543427 -14.12898636]
[91.90905762 -20.18623734]
[91.68572998 -35.18457413]
[91.46240234 -50.18291092]
[91.23907471 -65.18125153]
[91.01574707 -80.17958832]
[83.07383728 -93.86302948]
[90.62078857 -106.70409393]
[90.39746094 -121.70243073]
[82.45555878 -135.38587952]
[90.00251007 -148.22692871]
[89.77918243 -163.22526550]
[86.52235413 -171.75936890]
[89.66585541 -178.44818115]
[89.66585541 -193.44818115]
[88.99606323 -208.43322754]
[87.65782928 -223.37341309]
[86.31959534 -238.31358337]
[71.45312500 -240.89242554]
[57.76107407 -247.23199463]
[46.17699051 -256.90005493]
[37.49069595 -269.23742676]
[32.29443741 -283.40292358]
[30.94250679 -298.43072510]
[33.52708054 -313.29620361]
[39.87193298 -326.98580933]
[49.54446793 -338.56616211]
[61.88518906 -347.24768066]
[76.05269623 -352.43847656]
[91.08100891 -353.78460693]
[105.94548798 -351.19427490]
[119.63264465 -344.84414673]
[131.20925903 -335.16714478]
[139.88601685 -322.82305908]
[145.07133484 -308.65356445]
[146.41166687 -293.62472534]
[143.81561279 -278.76123047]
[137.46018982 -265.07653809]
[127.77871704 -253.50366211]
[115.43128967 -244.83166504]
[101.25978088 -239.65182495]
[102.59801483 -224.71163940]
[103.93624878 -209.77145386]
[114.36032867 -220.55749512]
[129.35516357 -220.95130920]
[140.33102417 -210.72729492]
[141.00044250 -195.74223328]
[130.97994995 -184.58026123]
[116.00974274 -183.63545227]
[104.66585541 -193.44818115]
[104.66585541 -178.44818115]
[104.77751923 -163.44859314]
[105.00084686 -148.45025635]
[112.92678070 -135.83959961]
[105.39579773 -121.92575836]
[105.61912537 -106.92742157]
[113.54505920 -94.31675720]
[106.01408386 -80.40291595]
[106.23741150 -65.40457916]
[106.46073914 -50.40623856]
[106.68406677 -35.40790176]
[106.90739441 -20.40956497]
[120.13881683 -15.73316956]
[131.00238037 -6.80224466]
[138.18020630 5.32616854]
[140.79252625 19.20557976]
[138.50550842 33.17255402]
[131.57376099 45.54607010]
[120.81212616 54.82984924]
[107.50000000 59.89328003]
[107.50000000 74.89328003]
[107.50000000 89.89328003]
[107.83497620 104.88954163]
[108.50476074 119.87458038]
[110.97039032 123.44874573]
[112.06074524 127.24026489]
[111.87638855 130.79011536]
[110.65660858 133.71905518]
[108.74138641 135.76602173]
[108.51805878 150.76435852]
[108.29473114 165.76269531]
[120.65926361 172.30343628]
[128.95980835 183.48005676]
[131.62226868 197.07746887]
[128.18299866 210.43113708]
[119.36838531 220.94929504]
[106.94232941 226.61587524]
[106.49571991 241.60923767]
[106.04911804 256.60256958]
[105.60250854 271.59591675]
[105.15590668 286.58929443]
[108.02841949 295.26028442]
[104.58938599 301.80206299]
[111.70275879 315.93395996]
[103.40486908 328.30307007]
[102.73508453 343.28808594]
[102.06529999 358.27313232]
[101.39551544 373.25817871]
[116.29565430 375.04650879]
[131.02047729 377.94332886]
[145.48765564 381.93246460]
[159.61627197 386.99154663]
[173.32730103 393.09234619]
[186.54408264 400.20071411]
[199.19268799 408.27691650]
[211.20239258 417.27575684]
[222.50602722 427.14694214]
[233.04039001 437.83523560]
[242.74653625 449.28088379]
[251.57020569 461.41986084]
[259.46203613 474.18429565]
[266.37792969 487.50280762]
[272.27917480 501.30090332]
[277.13278198 515.50146484]
[280.91162109 530.02496338]
[283.59451294 544.79028320]
[285.16650391 559.71478271]
[285.61877441 574.71502686]
[284.94879150 589.70715332]
[283.16033936 604.60723877]
[280.26339722 619.33209229]
[276.27413940 633.79919434]
[271.21490479 647.92779541]
[265.11398315 661.63873291]
[258.00549316 674.85546875]
[249.92919922 687.50402832]
[240.93025208 699.51361084]
[231.05897522 710.81719971]
[220.37059021 721.35144043]
[208.92485046 731.05749512]
[196.78578186 739.88104248]
[184.02127075 747.77276611]
[170.70269775 754.68853760]
[156.90455627 760.58966064]
[142.70399475 765.44317627]
[128.18043518 769.22186279]
[113.41510773 771.90460205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 171]
[44 170]
[45 169]
[46 168]
[48 166]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[58 154]
[59 153]
[60 152]
[61 147]
[62 146]
[66 145]
[67 144]
[68 143]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[81 129]
[82 128]
[84 126]
[85 125]
[87 124]
[88 123]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
