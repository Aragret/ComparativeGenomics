%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[59.36330414 700.44897461]
[44.63263702 697.54638672]
[30.28608322 693.11987305]
[16.48082542 687.21795654]
[3.36812496 679.90527344]
[-8.90834904 671.26202393]
[-20.21409035 661.38287354]
[-30.42522430 650.37603760]
[-39.42987442 638.36212158]
[-47.12937927 625.47277832]
[-53.43937683 611.84918213]
[-58.29073715 597.64068604]
[-61.63030243 583.00286865]
[-63.42148209 568.09619141]
[-63.64465332 553.08392334]
[-62.29736710 538.13061523]
[-59.39439011 523.40002441]
[-54.96752548 509.05355835]
[-49.06527710 495.24844360]
[-41.75231171 482.13592529]
[-33.10875702 469.85964966]
[-23.22931480 458.55416870]
[-12.22223091 448.34329224]
[-0.20810319 439.33892822]
[12.68143368 431.63973999]
[26.30515480 425.33007812]
[40.51379395 420.47906494]
[55.15166855 417.13983154]
[70.05840302 415.34902954]
[69.83507538 400.35067749]
[69.61174774 385.35235596]
[69.38842010 370.35400391]
[69.16509247 355.35568237]
[66.90329742 352.65075684]
[65.83929443 348.71591187]
[66.53687286 344.12606812]
[69.28174591 339.68615723]
[69.72834778 324.69281006]
[59.35940933 314.06170654]
[59.59874344 298.84994507]
[70.81993866 288.04611206]
[71.26654816 273.05276489]
[71.71315002 258.05941772]
[72.15975952 243.06607056]
[72.60636902 228.07272339]
[73.05297089 213.07937622]
[73.49958038 198.08602905]
[64.99877930 210.44468689]
[52.02079391 217.96611023]
[37.07146454 219.19804382]
[23.03728104 213.90260315]
[12.62801647 203.10226440]
[7.85353994 188.88241577]
[9.63572788 173.98866272]
[17.63046646 161.29676819]
[30.29409790 153.25733948]
[45.18147278 151.42265320]
[59.41807556 156.14698792]
[70.25503540 166.51811218]
[75.60009003 180.53480530]
[78.70420074 165.85949707]
[73.76817322 151.80656433]
[84.19380951 139.90628052]
[87.29792023 125.23097992]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[103.64323425 42.42207718]
[97.10836029 31.30190468]
[99.81455231 19.10107231]
[109.77857971 12.24216270]
[111.33910370 -2.67644238]
[111.33910370 -17.67644310]
[111.33910370 -32.67644119]
[111.33910370 -47.67644119]
[111.33910370 -62.67644119]
[108.72763824 -67.19610596]
[108.16703033 -71.80468750]
[109.34771729 -75.70610046]
[111.68904114 -78.34248352]
[112.35882568 -93.32752228]
[113.02861023 -108.31256104]
[110.32577515 -114.34632111]
[110.97793579 -119.99182129]
[113.94801331 -123.73183441]
[115.06365967 -138.69029236]
[116.17930603 -153.64874268]
[117.29496002 -168.60719299]
[118.41060638 -183.56564331]
[119.52625275 -198.52409363]
[120.53051758 -213.49044800]
[121.20030212 -228.47547913]
[121.64690399 -243.46882629]
[122.09351349 -258.46218872]
[122.54011536 -273.45553589]
[122.98672485 -288.44888306]
[123.43332672 -303.44223022]
[123.87993622 -318.43557739]
[110.30796814 -325.41873169]
[101.11676788 -337.60415649]
[98.13126373 -352.57244873]
[101.94423676 -367.35162354]
[111.79859924 -379.00726318]
[125.73777771 -385.22515869]
[140.99412537 -384.77072144]
[154.53849792 -377.73419189]
[163.68162537 -365.51266479]
[166.60816956 -350.53271484]
[162.73703003 -335.76867676]
[152.83683777 -324.15191650]
[138.87329102 -317.98898315]
[138.42668152 -302.99563599]
[137.98007202 -288.00228882]
[137.53346252 -273.00894165]
[137.08686829 -258.01556396]
[136.64025879 -243.02223206]
[136.19364929 -228.02888489]
[138.75851440 -224.00016785]
[138.81980896 -218.31745911]
[135.50392151 -212.59762573]
[138.24372864 -205.73356628]
[134.48471069 -197.40844727]
[133.36906433 -182.44999695]
[132.25341797 -167.49154663]
[131.13775635 -152.53309631]
[130.02210999 -137.57463074]
[128.90646362 -122.61618805]
[128.01365662 -107.64277649]
[127.34386444 -92.65773773]
[126.67407990 -77.67269897]
[126.33910370 -62.67644119]
[126.33910370 -47.67644119]
[126.33910370 -32.67644119]
[126.33910370 -17.67644310]
[126.33910370 -2.67644238]
[133.95843506 -15.59719181]
[145.89596558 -24.67989349]
[160.38082886 -28.57718086]
[175.26426697 -26.71091652]
[188.33843994 -19.35794830]
[197.66384888 -7.60904598]
[201.85713196 6.79291105]
[200.29624939 21.71147728]
[193.21273804 34.93357468]
[181.65739441 44.49777985]
[167.34437561 48.98530197]
[152.39695740 47.73044205]
[139.03248596 40.91935349]
[129.23350525 29.56242180]
[124.45388031 15.34627247]
[130.78454590 31.71360779]
[118.36312866 45.30735016]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[106.43286133 122.44158936]
[101.97322083 128.33508301]
[98.86911011 143.01039124]
[103.58310699 158.11300659]
[93.37950134 168.96360779]
[90.27539062 183.63891602]
[88.49292755 198.53262329]
[88.04631805 213.52598572]
[87.59971619 228.51933289]
[87.15310669 243.51268005]
[86.70650482 258.50604248]
[86.25989532 273.49938965]
[85.81329346 288.49273682]
[96.37154388 299.94528198]
[95.70503235 315.14431763]
[84.72170258 325.13940430]
[84.27509308 340.13275146]
[84.16342926 355.13235474]
[84.38675690 370.13067627]
[84.61008453 385.12902832]
[84.83341217 400.12734985]
[85.05673981 415.12570190]
[100.01017761 416.47189331]
[114.74098969 419.37380981]
[129.08775330 423.79962158]
[142.89329529 429.70086670]
[156.00636292 437.01287842]
[168.28324890 445.65551758]
[179.58947754 455.53414917]
[189.80114746 466.54049683]
[198.80638123 478.55395508]
[206.50650024 491.44293213]
[212.81716919 505.06619263]
[217.66921997 519.27447510]
[221.00949097 533.91210938]
[222.80139160 548.81872559]
[223.02529907 563.83093262]
[221.67874146 578.78436279]
[218.77647400 593.51513672]
[214.35031128 607.86175537]
[208.44873047 621.66717529]
[201.13639832 634.78002930]
[192.49343872 647.05676270]
[182.61454773 658.36273193]
[171.60795593 668.57409668]
[159.59426880 677.57904053]
[146.70510864 685.27886963]
[133.08169556 691.58923340]
[118.87329102 696.44091797]
[104.23558044 699.78082275]
[89.32893372 701.57238770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[37 176]
[38 175]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[60 165]
[61 164]
[63 162]
[64 161]
[65 159]
[67 157]
[68 156]
[69 155]
[70 154]
[73 152]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[82 132]
[83 131]
[84 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 122]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
