%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[99.86705017 638.35406494]
[87.22256470 630.26110840]
[75.44672394 620.94940186]
[64.65656281 610.51141357]
[54.95932007 599.05096436]
[46.45137405 586.68194580]
[39.21728134 573.52722168]
[33.32894516 559.71759033]
[28.84488106 545.39025879]
[25.80965996 530.68768311]
[24.25344467 515.75592041]
[24.19170570 500.74343872]
[25.62505341 485.79940796]
[28.53924370 471.07235718]
[32.90531158 456.70864868]
[38.67986679 442.85104370]
[45.80551529 429.63729858]
[54.21143723 417.19866943]
[63.81409073 405.65884399]
[74.51803589 395.13247681]
[86.21688843 385.72421265]
[98.79438019 377.52755737]
[112.12551117 370.62396240]
[126.07777405 365.08203125]
[140.51251221 360.95684814]
[137.84671021 346.19564819]
[135.18090820 331.43441772]
[131.83786011 328.02371216]
[130.60191345 322.47668457]
[132.66236877 316.19448853]
[130.43724060 301.36044312]
[128.21212769 286.52639771]
[125.98700714 271.69235229]
[123.76189423 256.85830688]
[109.82262421 247.44895935]
[106.94487762 230.53643799]
[117.39089966 216.50433350]
[114.94516754 201.70506287]
[112.49944305 186.90579224]
[109.61416626 172.18589783]
[106.29190826 157.55844116]
[102.96965027 142.93098450]
[99.64739227 128.30352783]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.48441315 61.31911850]
[77.29740143 46.91533661]
[73.11038971 32.51155472]
[62.20329666 25.62692261]
[59.01245499 13.54378128]
[64.72109222 2.87897897]
[60.74899673 -11.58554459]
[47.35092545 -24.21777344]
[52.44670868 -41.01062775]
[48.25969696 -55.41440964]
[44.07268524 -69.81819153]
[39.88567352 -84.22196960]
[34.48522186 -91.58898926]
[35.74526596 -98.87144470]
[31.77316856 -113.33596802]
[27.80107307 -127.80049133]
[23.82897568 -142.26501465]
[19.85688019 -156.72953796]
[15.88478374 -171.19406128]
[11.91268730 -185.65858459]
[-2.90141296 -183.21723938]
[-17.88955116 -182.33779907]
[-32.88750839 -183.02987671]
[-47.73096085 -185.28590393]
[-62.25727081 -189.08116150]
[-76.30728912 -194.37406921]
[-89.72706604 -201.10661316]
[-102.36956787 -209.20506287]
[-114.09628296 -218.58065796]
[-124.77872467 -229.13069153]
[-134.29985046 -240.73956299]
[-142.55534363 -253.28007507]
[-149.45474243 -266.61483765]
[-154.92247009 -280.59774780]
[-158.89860535 -295.07559204]
[-161.33958435 -309.88977051]
[-162.21865845 -324.87792969]
[-161.52621460 -339.87585449]
[-159.26982117 -354.71926880]
[-155.47421265 -369.24548340]
[-150.18096924 -383.29534912]
[-143.44808960 -396.71496582]
[-135.34934998 -409.35729980]
[-125.97346497 -421.08377075]
[-115.42317200 -431.76596069]
[-103.81407166 -441.28680420]
[-91.27335358 -449.54199219]
[-77.93841553 -456.44107056]
[-63.95537567 -461.90844727]
[-49.47743225 -465.88421631]
[-34.66321182 -468.32485962]
[-19.67503166 -469.20358276]
[-4.67710781 -468.51077271]
[10.16623402 -466.25399780]
[24.69236183 -462.45803833]
[38.74211884 -457.16445923]
[52.16156769 -450.43124390]
[64.80368042 -442.33221436]
[76.52993774 -432.95602417]
[87.21186829 -422.40548706]
[96.73242950 -410.79614258]
[104.98731232 -398.25521851]
[111.88606262 -384.92013550]
[117.35311127 -370.93695068]
[121.32853699 -356.45892334]
[123.76879883 -341.64462280]
[124.64715576 -326.65643311]
[123.95397949 -311.65853882]
[121.69686890 -296.81524658]
[117.90055084 -282.28921509]
[112.60662842 -268.23956299]
[105.87310028 -254.82028198]
[97.77373505 -242.17837524]
[88.39727783 -230.45234680]
[77.84647369 -219.77067566]
[66.23690796 -210.25039673]
[53.69578552 -201.99581909]
[40.36051941 -195.09738159]
[26.37721062 -189.63067627]
[30.34930801 -175.16615295]
[34.32140350 -160.70162964]
[38.29349899 -146.23710632]
[42.26559448 -131.77258301]
[46.23769379 -117.30805969]
[50.20978928 -102.84353638]
[54.28945541 -88.40898132]
[58.47646713 -74.00520325]
[62.66347885 -59.60142136]
[66.85048676 -45.19763947]
[77.29706573 -39.09881592]
[80.90321350 -27.13305473]
[75.21352386 -15.55764103]
[79.18561554 -1.09311736]
[92.31773376 10.54794788]
[87.51416779 28.32454300]
[91.70117950 42.72832489]
[95.88819122 57.13210678]
[100.77381897 62.67759323]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.17890167 113.44859314]
[115.93988037 117.74420166]
[115.83445740 121.81899261]
[114.27484894 124.98126221]
[117.59710693 139.60871887]
[120.91937256 154.23619080]
[124.24163055 168.86364746]
[127.30320740 171.94271851]
[129.05003357 175.48010254]
[129.49949646 179.00621033]
[128.81965637 182.10531616]
[127.29871368 184.46006775]
[129.74444580 199.25933838]
[132.19017029 214.05860901]
[143.96977234 220.58973694]
[149.75262451 232.53833008]
[147.62924194 245.44467163]
[138.59593201 254.63317871]
[140.82106018 269.46722412]
[143.04617310 284.30126953]
[145.27128601 299.13531494]
[147.49639893 313.96936035]
[149.94213867 328.76861572]
[152.60792542 343.52984619]
[155.27372742 358.29107666]
[170.23954773 357.10665894]
[185.24893188 357.41827393]
[200.15269470 359.22280884]
[214.80271912 362.50231934]
[229.05340576 367.22424316]
[242.76312256 373.34161377]
[255.79560852 380.79367065]
[268.02133179 389.50631714]
[279.31878662 399.39297485]
[289.57571411 410.35537720]
[298.69012451 422.28457642]
[306.57147217 435.06201172]
[313.14141846 448.56069946]
[318.33468628 462.64645386]
[322.09960938 477.17932129]
[324.39880371 492.01483154]
[325.20941162 507.00555420]
[324.52337646 522.00250244]
[322.34753418 536.85656738]
[318.70349121 551.42022705]
[313.62744141 565.54864502]
[307.16989136 579.10144043]
[299.39498901 591.94390869]
[290.37997437 603.94842529]
[280.21450806 614.99572754]
[268.99960327 624.97589111]
[256.84667969 633.78979492]
[243.87657166 641.34991455]
[230.21815491 647.58099365]
[216.00718689 652.42114258]
[201.38491821 655.82226562]
[186.49665833 657.75061035]
[171.49038696 658.18688965]
[156.51524353 657.12689209]
[141.72006226 654.58105469]
[127.25188446 650.57476807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 174]
[26 173]
[27 172]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[37 163]
[38 162]
[39 161]
[40 156]
[41 155]
[42 154]
[43 153]
[44 149]
[46 147]
[47 146]
[48 144]
[49 143]
[50 142]
[53 140]
[54 139]
[56 136]
[57 135]
[58 134]
[59 133]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
