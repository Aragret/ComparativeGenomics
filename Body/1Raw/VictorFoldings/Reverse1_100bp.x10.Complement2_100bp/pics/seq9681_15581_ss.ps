%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[81.89456940 683.96215820]
[67.31288910 680.13616943]
[54.07086563 672.93115234]
[42.93838120 662.76593018]
[34.56266403 650.23156738]
[29.43066216 636.05676270]
[27.84074783 621.06555176]
[29.88535690 606.12957764]
[35.44561386 592.11718750]
[44.19825745 579.84307861]
[55.63441849 570.02075195]
[69.08921814 563.22137451]
[83.78040314 559.84014893]
[84.00373077 544.84179688]
[84.22705841 529.84350586]
[84.45038605 514.84515381]
[75.08966064 500.00115967]
[84.66434479 484.27197266]
[84.66434479 469.27197266]
[76.92704773 456.54470825]
[84.66434479 442.74453735]
[84.66434479 427.74453735]
[84.66434479 412.74453735]
[81.52084351 406.05572510]
[84.77767181 397.52163696]
[85.00099945 382.52328491]
[70.44756317 379.00201416]
[57.03623199 372.32708740]
[45.44104385 362.83044434]
[36.24556351 350.98583984]
[29.91351318 337.38534546]
[26.76537514 322.70971680]
[26.96217918 307.69427490]
[30.49727249 293.09213257]
[37.19648361 279.63641357]
[46.72671509 268.00335693]
[58.61248398 258.77841187]
[72.25965881 252.42680359]
[86.98516846 249.26998901]
[87.20849609 234.27165222]
[87.43182373 219.27331543]
[87.65515137 204.27497864]
[87.87847900 189.27664185]
[80.33152771 176.43559265]
[88.27342987 162.75213623]
[86.42000580 160.64904785]
[85.28797150 157.68508911]
[85.20938110 154.13133240]
[86.41214752 150.37394714]
[88.98310089 146.87478638]
[90.09874725 131.91632080]
[91.21439362 116.95787048]
[81.83895111 105.91037750]
[82.91663361 91.46098328]
[93.82714844 81.92647552]
[94.94279480 66.96802521]
[96.05844879 52.00957108]
[97.17409515 37.05111694]
[94.65210724 30.93956375]
[95.47206116 25.31598091]
[98.55217743 21.66605949]
[100.11270142 6.74745417]
[101.67322540 -8.17115021]
[103.23374939 -23.08975601]
[104.23800659 -38.05609894]
[104.68461609 -53.04944992]
[105.13121796 -68.04280090]
[97.80823517 -82.06722260]
[105.92104340 -94.55848694]
[105.80937195 -109.55806732]
[105.13958740 -124.54310608]
[104.46980286 -139.52815247]
[102.00418091 -143.10231018]
[100.91381836 -146.89382935]
[101.09817505 -150.44367981]
[102.31795502 -153.37261963]
[104.23317719 -155.41960144]
[104.45650482 -170.41793823]
[104.67983246 -185.41627502]
[104.90316010 -200.41461182]
[89.78658295 -203.62516785]
[75.58745575 -209.71284485]
[62.84744263 -218.44346619]
[52.05216217 -229.48202515]
[43.61267090 -242.40563965]
[37.84983063 -256.71966553]
[34.98209381 -271.87664795]
[35.11721802 -287.29730225]
[38.24824142 -302.39260864]
[44.25379562 -316.58633423]
[52.90281677 -329.33700562]
[63.86344147 -340.15859985]
[76.71572876 -348.63903809]
[90.96775818 -354.45590210]
[106.07444763 -357.38867188]
[106.07444763 -372.38867188]
[106.07444763 -387.38867188]
[106.07444763 -402.38867188]
[106.07444763 -417.38867188]
[92.30057526 -423.96463013]
[82.75064850 -435.87100220]
[79.32080841 -450.74377441]
[82.69205475 -465.62991333]
[92.19502258 -477.57379150]
[105.94288635 -484.20394897]
[121.20600128 -484.20394897]
[134.95387268 -477.57379150]
[144.45683289 -465.62991333]
[147.82807922 -450.74377441]
[144.39823914 -435.87100220]
[134.84831238 -423.96463013]
[121.07444763 -417.38867188]
[121.07444763 -402.38867188]
[121.07444763 -387.38867188]
[121.07444763 -372.38867188]
[121.07444763 -357.38867188]
[135.39698792 -354.68493652]
[148.97961426 -349.38604736]
[161.35633850 -341.67224121]
[172.10220337 -331.80648804]
[180.84796143 -320.12582397]
[187.29269409 -307.02954102]
[191.21418762 -292.96578979]
[192.47660828 -278.41604614]
[191.03517151 -263.87884521]
[186.93775940 -249.85243225]
[180.32331848 -236.81791687]
[171.41716003 -225.22264099]
[160.52328491 -215.46487427]
[148.01396179 -207.88014221]
[134.31709290 -202.72962952]
[119.90149689 -200.19128418]
[119.67816925 -185.19294739]
[119.45484161 -170.19461060]
[119.23151398 -155.19627380]
[119.45484161 -140.19793701]
[120.12462616 -125.21289062]
[120.79441071 -110.22785187]
[132.68885803 -119.36688995]
[147.28604126 -115.91398621]
[153.82543945 -102.41449738]
[147.48646545 -88.81974030]
[132.94197083 -85.15126801]
[120.91439056 -94.11187744]
[128.26931763 -81.15988159]
[120.12457275 -67.59619141]
[119.67796326 -52.60284424]
[119.23135376 -37.60949326]
[131.77259827 -45.83855057]
[146.07252502 -41.30952454]
[151.58976746 -27.36104393]
[144.25721741 -14.27541351]
[129.48016357 -11.69886971]
[118.15235138 -21.52923203]
[116.59182739 -6.61062765]
[115.03130341 8.30797768]
[113.47077942 23.22658157]
[112.13254547 38.16676712]
[111.01689911 53.12522125]
[109.90125275 68.08367157]
[108.78560638 83.04212952]
[118.16104889 94.08962250]
[117.08336639 108.53901672]
[106.17285156 118.07352448]
[105.05720520 133.03196716]
[103.94155121 147.99043274]
[103.27176666 162.97546387]
[110.80274963 176.88931274]
[102.87681580 189.49996948]
[102.65348816 204.49830627]
[102.43016052 219.49664307]
[102.20683289 234.49497986]
[101.98350525 249.49331665]
[116.60848999 253.08717346]
[130.06050110 259.84228516]
[141.66635132 269.41702271]
[150.84599304 281.32867432]
[157.14160156 294.97790527]
[160.24037170 309.67880249]
[159.99002075 324.69345093]
[156.40632629 339.26885986]
[149.67214966 352.67477417]
[140.12809753 364.24035645]
[128.25529480 373.38757324]
[114.65116119 379.66021729]
[99.99933624 382.74661255]
[99.77600861 397.74496460]
[99.66434479 412.74453735]
[99.66434479 427.74453735]
[99.66434479 442.74453735]
[107.40164185 456.54470825]
[99.66434479 469.27197266]
[99.66434479 484.27197266]
[108.21617126 493.92752075]
[107.90736389 506.42105103]
[99.44872284 515.06848145]
[99.22539520 530.06683350]
[99.00206757 545.06512451]
[98.77873993 560.06347656]
[113.36273956 563.88061523]
[126.60912323 571.07757568]
[137.74777222 581.23602295]
[146.13108826 593.76531982]
[151.27168274 607.93707275]
[152.87068176 622.92724609]
[150.83512878 637.86450195]
[145.28337097 651.88024902]
[136.53816223 664.15966797]
[125.10796356 673.98889160]
[111.65729523 680.79644775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 199]
[14 198]
[15 197]
[16 196]
[18 193]
[19 192]
[21 190]
[22 189]
[23 188]
[25 187]
[26 186]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[45 167]
[50 166]
[51 165]
[52 164]
[55 161]
[56 160]
[57 159]
[58 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 148]
[66 147]
[67 146]
[69 144]
[70 138]
[71 137]
[72 136]
[77 135]
[78 134]
[79 133]
[80 132]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
