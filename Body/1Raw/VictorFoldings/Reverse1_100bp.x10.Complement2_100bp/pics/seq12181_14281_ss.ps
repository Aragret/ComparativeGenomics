%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[77.10981750 631.33544922]
[64.90264893 622.55157471]
[54.40637207 611.78125000]
[45.93995285 599.35180664]
[39.76068115 585.64099121]
[36.05633545 571.06536865]
[34.93948746 556.06787109]
[36.44408035 541.10437012]
[40.52438354 526.62945557]
[47.05640793 513.08312988]
[55.84164810 500.87695312]
[66.61313629 490.38189697]
[79.04352570 481.91687012]
[92.75508881 475.73916626]
[107.33113861 472.03646851]
[106.21549225 457.07800293]
[97.55300903 444.96145630]
[104.24246979 430.62405396]
[93.59475708 416.67437744]
[101.72797394 400.15371704]
[100.38973999 385.21353149]
[99.05150604 370.27334595]
[97.71327209 355.33316040]
[96.37503815 340.39297485]
[85.52081299 326.60339355]
[93.40716553 309.96347046]
[91.84664154 295.04486084]
[90.28611755 280.12625122]
[88.72559357 265.20764160]
[80.68283081 277.86917114]
[67.11656952 284.26889038]
[52.23048019 282.42385864]
[40.63716888 272.90570068]
[35.92895126 258.66375732]
[39.56472015 244.11106873]
[50.41789627 233.75689697]
[65.12550354 230.80963135]
[79.13022614 236.18251038]
[88.09263611 248.21090698]
[88.53924561 233.21755981]
[88.98584747 218.22421265]
[89.43245697 203.23086548]
[89.87906647 188.23751831]
[90.32566833 173.24415588]
[79.95672607 162.61305237]
[80.19606018 147.40129089]
[91.41725922 136.59747314]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[94.21656799 61.42790985]
[94.88635254 46.44287109]
[87.46531677 59.47852325]
[76.71240234 69.93676758]
[63.47563553 76.99282837]
[48.79891586 80.09022522]
[33.83971024 78.98468781]
[19.77776718 73.76340485]
[7.72206974 64.83815002]
[-1.37661982 52.91280746]
[-6.80074120 38.92785645]
[-8.12252522 23.98620605]
[-5.23773098 9.26622105]
[1.62613535 -4.07122040]
[11.92776012 -14.97427177]
[24.85471344 -22.58307266]
[39.38752365 -26.29756165]
[54.38007355 -25.82479858]
[68.64998627 -21.20206833]
[81.07186890 -12.79393768]
[90.66609955 -1.26350689]
[96.67601776 12.47988605]
[98.62763214 27.35585022]
[103.66455078 13.22681999]
[108.70146179 -0.90220970]
[113.73838043 -15.03123951]
[118.77529907 -29.16026878]
[123.81221008 -43.28929901]
[128.84913635 -57.41832733]
[133.56925964 -71.65631866]
[137.97026062 -85.99616241]
[142.37126160 -100.33601379]
[135.22264099 -114.17562866]
[139.89015198 -128.65557861]
[153.12815857 -135.38540649]
[157.42228699 -149.75761414]
[161.60929871 -164.16140747]
[158.03163147 -179.57278442]
[169.01400757 -189.63444519]
[165.43635559 -205.04582214]
[176.41873169 -215.10746765]
[180.60572815 -229.51126099]
[184.79273987 -243.91503906]
[188.97975159 -258.31881714]
[175.40310669 -264.77407837]
[163.03784180 -273.32373047]
[152.20425415 -283.74627686]
[143.18296814 -295.77178955]
[136.20764160 -309.08871460]
[131.45896912 -323.35220337]
[129.05995178 -338.19271851]
[129.07272339 -353.22586060]
[131.49694824 -368.06228638]
[136.26983643 -382.31765747]
[143.26777649 -395.62274170]
[152.30947876 -407.63290405]
[163.16075134 -418.03701782]
[175.54052734 -426.56564331]
[189.12812805 -432.99783325]
[203.57160950 -437.16702271]
[218.49685669 -438.96514893]
[233.51725769 -438.34570312]
[248.24374390 -435.32470703]
[262.29489136 -429.98037720]
[275.30670166 -422.45120239]
[286.94216919 -412.93215942]
[296.89990234 -401.66986084]
[304.92196655 -388.95596313]
[310.80056763 -375.11984253]
[314.38345337 -360.51986694]
[315.57778931 -345.53424072]
[314.35266113 -330.55105591]
[310.73977661 -315.95849609]
[304.83276367 -302.13446045]
[296.78457642 -289.43710327]
[286.80374146 -278.19528198]
[275.14874268 -268.70016479]
[262.12145996 -261.19775391]
[248.05937195 -255.88232422]
[233.32669067 -252.89158630]
[218.30505371 -252.30299377]
[203.38354492 -254.13180542]
[199.19653320 -239.72802734]
[195.00952148 -225.32424927]
[190.82250977 -210.92045593]
[194.69964600 -196.53932190]
[183.41778564 -185.44743347]
[187.29493713 -171.06629944]
[176.01307678 -159.97439575]
[171.82606506 -145.57060242]
[172.97753906 -138.27020264]
[167.46800232 -130.98440552]
[174.65161133 -117.98704529]
[170.39263916 -103.38170624]
[156.71110535 -95.93501282]
[152.31010437 -81.59516907]
[147.90911865 -67.25531769]
[149.22920227 -63.98580933]
[149.03126526 -59.91445923]
[146.95567322 -55.76172638]
[142.97816467 -52.38141251]
[137.94123840 -38.25238037]
[132.90432739 -24.12335205]
[127.86740875 -9.99432278]
[122.83049774 4.13470650]
[117.79357910 18.26373672]
[112.75666046 32.39276505]
[109.87139130 47.11265564]
[109.20160675 62.09769440]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[106.41061401 137.04408264]
[116.96885681 148.49664307]
[116.30235291 163.69566345]
[105.31901550 173.69076538]
[104.87241364 188.68411255]
[104.42580414 203.67747498]
[103.97920227 218.67082214]
[103.53259277 233.66416931]
[103.08599091 248.65751648]
[103.64420319 263.64712524]
[105.20471954 278.56573486]
[106.76524353 293.48434448]
[108.32576752 308.40295410]
[117.83570099 317.11639404]
[118.82833099 329.57424927]
[111.31522369 339.05474854]
[112.65345764 353.99493408]
[113.99169159 368.93511963]
[115.32992554 383.87530518]
[116.66815948 398.81549072]
[126.04730988 407.66955566]
[126.85434723 420.14080811]
[119.20092773 429.50839233]
[127.94320679 442.69488525]
[121.17394257 455.96237183]
[122.28959656 470.92080688]
[137.25363159 472.42031860]
[151.72990417 476.49569702]
[165.27848816 483.02310181]
[177.48765564 491.80419922]
[187.98637390 502.57211304]
[196.45561218 514.99963379]
[202.63798523 528.70910645]
[206.34564209 543.28387451]
[207.46588135 558.28106689]
[205.96469116 573.24493408]
[201.88766479 587.72076416]
[195.35871887 601.26861572]
[186.57624817 613.47674561]
[175.80714417 623.97424316]
[163.37866211 632.44207764]
[149.66850281 638.62292480]
[135.09329224 642.32891846]
[120.09596252 643.44744873]
[105.13226318 641.94458008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 191]
[16 190]
[18 188]
[20 185]
[21 184]
[22 183]
[23 182]
[24 181]
[26 178]
[27 177]
[28 176]
[29 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[47 166]
[48 165]
[49 164]
[51 163]
[52 162]
[53 161]
[54 160]
[75 159]
[76 158]
[77 157]
[78 156]
[79 155]
[80 154]
[81 153]
[82 149]
[83 148]
[84 147]
[87 144]
[88 142]
[89 141]
[91 139]
[93 137]
[94 136]
[95 135]
[96 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
