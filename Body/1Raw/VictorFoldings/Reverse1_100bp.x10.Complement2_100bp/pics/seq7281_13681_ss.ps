%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[35.26744843 470.90811157]
[25.58770752 459.10702515]
[21.99520493 444.27273560]
[25.20323181 429.35055542]
[34.57482910 417.30331421]
[48.24926758 410.52301025]
[48.02593994 395.52465820]
[47.80261230 380.52633667]
[45.06040573 376.61618042]
[44.74542999 370.94186401]
[47.80261230 365.07968140]
[48.02593994 350.08132935]
[48.24926758 335.08300781]
[48.47259521 320.08465576]
[48.58426285 305.08508301]
[48.58426285 290.08508301]
[48.58426285 275.08508301]
[40.96492767 288.00582886]
[29.02740097 297.08853149]
[14.54254246 300.98580933]
[-0.34090674 299.11956787]
[-13.41507435 291.76657104]
[-22.74048615 280.01766968]
[-26.93377113 265.61572266]
[-25.37288284 250.69715881]
[-18.28936768 237.47506714]
[-6.73402309 227.91085815]
[7.57898283 223.42333984]
[22.52640152 224.67819214]
[35.89087296 231.48928833]
[45.68985748 242.84622192]
[50.46948242 257.06237793]
[53.57359314 242.38706970]
[56.67770386 227.71176147]
[42.87364197 233.58099365]
[29.60624886 226.58268738]
[26.65575409 211.87573242]
[36.19715118 200.30154419]
[51.19687653 200.39219666]
[60.59730911 212.07923889]
[64.78432465 197.67546082]
[68.97132874 183.27166748]
[58.50157547 170.62803650]
[57.62233353 154.06938171]
[66.87792206 140.11103821]
[82.78582001 134.36344910]
[86.75791931 119.89892578]
[90.73001099 105.43439484]
[92.06824493 90.49421692]
[90.73001099 75.55403137]
[89.39177704 60.61384201]
[88.05354309 45.67365646]
[86.49301910 30.75505447]
[84.71055603 15.86133671]
[82.92809296 0.96761894]
[81.14562225 -13.92609882]
[79.36315918 -28.81981659]
[77.58068848 -43.71353149]
[75.79822540 -58.60725021]
[70.81499481 -44.45919800]
[62.84729004 -31.75031471]
[52.28388214 -21.10069275]
[39.64018250 -13.02995300]
[25.53310204 -7.93188381]
[10.65095997 -6.05523157]
[-4.28011322 -7.49156141]
[-18.53159714 -12.17079258]
[-31.40813065 -19.86461449]
[-42.28143692 -30.19762802]
[-50.62098694 -42.66566467]
[-56.01987457 -56.66037750]
[-58.21467209 -71.49893951]
[-57.09829330 -86.45733643]
[-52.72521210 -100.80572510]
[-45.30879593 -113.84400177]
[-35.21090698 -124.93601227]
[-22.92425156 -133.54055786]
[-9.04831505 -139.23777771]
[5.73986149 -141.74971008]
[20.71873093 -140.95379639]
[35.15744019 -136.88887024]
[48.35149384 -129.75326538]
[59.65712357 -119.89513397]
[68.52270508 -107.79548645]
[74.51566315 -94.04468536]
[77.34307098 -79.32026672]
[73.53635406 -94.67668152]
[84.36770630 -104.90072632]
[88.33979797 -119.36524963]
[92.31189728 -133.82977295]
[96.28399658 -148.29429626]
[98.28800964 -163.15982056]
[98.28800964 -178.15982056]
[98.28800964 -193.15982056]
[98.28800964 -208.15982056]
[98.17633820 -223.15940857]
[97.95301056 -238.15774536]
[97.72968292 -253.15608215]
[83.71016693 -259.10360718]
[73.32651520 -270.24359131]
[68.37776184 -284.64602661]
[69.72131348 -299.81555176]
[77.12438965 -313.12399292]
[89.30435944 -322.26556396]
[104.15097809 -325.65640259]
[119.09196472 -322.70910645]
[131.53871155 -313.93423462]
[139.33474731 -300.85211182]
[141.12936401 -285.72930908]
[136.61161804 -271.18591309]
[126.56424713 -259.74169922]
[112.72801971 -253.37940979]
[112.95134735 -238.38107300]
[113.17467499 -223.38273621]
[116.41741943 -216.74147034]
[113.28800964 -208.15982056]
[113.28800964 -193.15982056]
[113.28800964 -178.15982056]
[113.28800964 -163.15982056]
[120.29262543 -176.42388916]
[131.00933838 -186.91921997]
[144.41671753 -193.64546204]
[159.23683167 -195.96153259]
[174.05712891 -193.64665222]
[187.46504211 -186.92149353]
[198.18261719 -176.42703247]
[205.18830872 -163.16352844]
[207.81437683 -148.39520264]
[205.81053162 -133.52964783]
[199.36778259 -119.98377228]
[189.10017395 -109.04866791]
[175.98637390 -101.76661682]
[161.27630615 -98.83168793]
[146.37203979 -100.52361298]
[132.69413757 -106.68114471]
[121.54631042 -116.71737671]
[113.99108887 -129.67572021]
[110.74851990 -144.32220459]
[106.77642059 -129.85768127]
[102.80432892 -115.39315033]
[98.83222961 -100.92862701]
[102.92305756 -86.60681152]
[91.80759430 -75.34816742]
[90.69194031 -60.38971710]
[92.47441101 -45.49599838]
[94.25687408 -30.60228157]
[96.03933716 -15.70856380]
[97.82180786 -0.81484693]
[99.60427094 14.07887077]
[101.38674164 28.97258759]
[104.52085876 32.57624817]
[105.42444611 38.18700027]
[102.99372864 44.33542252]
[104.33196259 59.27560806]
[105.67019653 74.21579742]
[107.00843048 89.15598297]
[112.43824005 75.17323303]
[121.01619720 62.86800385]
[132.25717163 52.93620300]
[145.52542114 45.93952942]
[160.07057190 42.27367783]
[175.07002258 42.14596558]
[189.67549133 45.56362152]
[203.06095886 52.33335495]
[214.46942139 62.07230759]
[223.25564575 74.22969818]
[228.92276001 88.11795807]
[231.15025330 102.95164490]
[229.81214905 117.89183807]
[224.98411560 132.09359741]
[216.93922424 144.75375366]
[206.13241577 155.15631104]
[193.17489624 162.71295166]
[178.79946899 166.99629211]
[163.81913757 167.76411438]
[149.08110046 164.97299194]
[135.41888428 158.78077698]
[123.60513306 149.53764343]
[114.30798340 137.76637268]
[108.05323029 124.13265991]
[105.19453430 109.40649414]
[101.22244263 123.87101746]
[97.25034332 138.33554077]
[106.63526154 148.43080139]
[109.78146362 161.73944092]
[105.97125244 174.76065063]
[96.30250549 184.12330627]
[83.37511444 187.45867920]
[79.18810272 201.86247253]
[75.00109100 216.26625061]
[71.35300446 230.81587219]
[68.24889374 245.49116516]
[65.14478302 260.16647339]
[63.58426285 275.08508301]
[63.58426285 290.08508301]
[63.58426285 305.08508301]
[66.71366882 313.66671753]
[63.47093201 320.30798340]
[63.24760437 335.30633545]
[63.02427673 350.30465698]
[62.80094910 365.30300903]
[62.80094910 380.30300903]
[63.02427673 395.30133057]
[63.24760437 410.29968262]
[77.11785126 416.66983032]
[86.84398651 428.43270874]
[90.49488068 443.25274658]
[87.34564209 458.18743896]
[78.02156067 470.27148438]
[64.37393188 477.10559082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 204]
[7 203]
[8 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 196]
[16 195]
[17 194]
[32 193]
[33 192]
[34 191]
[40 190]
[41 189]
[42 188]
[46 183]
[47 182]
[48 181]
[49 156]
[50 155]
[51 154]
[52 153]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[86 143]
[88 141]
[89 140]
[90 139]
[91 138]
[92 119]
[93 118]
[94 117]
[95 116]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
