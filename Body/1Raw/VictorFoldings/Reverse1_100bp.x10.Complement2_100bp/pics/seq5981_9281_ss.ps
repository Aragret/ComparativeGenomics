%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[255.32518005 418.30328369]
[263.50488281 405.70678711]
[273.17056274 394.21096802]
[284.17575073 383.99011230]
[275.39514160 371.82864380]
[266.61453247 359.66720581]
[252.89120483 353.87759399]
[251.08605957 338.15969849]
[242.30546570 325.99826050]
[237.81707764 324.36624146]
[234.30625916 319.89733887]
[233.45085144 313.34143066]
[225.03623962 300.92391968]
[216.62162781 288.50643921]
[208.20700073 276.08892822]
[199.79238892 263.67144775]
[186.24751282 257.47583008]
[184.91116333 241.71115112]
[176.49655151 229.29365540]
[168.08192444 216.87615967]
[159.66731262 204.45866394]
[153.31275940 200.68487549]
[151.22145081 191.79306030]
[142.99264526 179.25166321]
[134.76383972 166.71026611]
[126.53503418 154.16885376]
[111.94467926 151.40170288]
[103.42084503 138.80015564]
[106.42221832 123.51522064]
[98.19340515 110.97381592]
[94.09140778 125.40203857]
[81.05624390 132.82392883]
[66.55504608 128.98788452]
[58.89475632 116.09138489]
[62.46354294 101.52210999]
[75.21703339 93.62600708]
[89.84868622 96.92578888]
[82.77157593 83.70026398]
[75.69447327 70.47473145]
[61.70922089 70.74968719]
[49.03038788 64.99961853]
[40.10871887 54.39857483]
[36.64168167 41.05208588]
[39.25070190 27.57908440]
[47.37064743 16.59802818]
[34.16592026 7.88333941]
[35.20443344 -6.97501707]
[28.32501984 -20.30444717]
[21.44560623 -33.63387680]
[14.56619358 -46.96330643]
[7.68678141 -60.29273224]
[0.70832908 -73.57057953]
[-6.36877632 -86.79610443]
[-13.44588184 -100.02163696]
[-20.52298737 -113.24716187]
[-20.57146072 -98.24723816]
[-25.42550278 -84.05434418]
[-34.57285309 -72.16629028]
[-47.04817581 -63.83763885]
[-61.53491592 -59.94734573]
[-76.50424957 -60.90596008]
[-90.37644196 -66.61231232]
[-101.68750763 -76.46420288]
[-109.24377441 -89.42193604]
[-112.24781036 -104.11804962]
[-110.38259125 -119.00162506]
[-103.84496307 -132.50196838]
[-93.32484436 -143.19436646]
[-79.93246460 -149.95040894]
[-65.08113861 -152.05711365]
[-50.33817673 -149.29216003]
[-37.25942612 -141.94734192]
[-27.22502136 -130.79762268]
[-30.76469421 -145.37399292]
[-34.30436707 -159.95036316]
[-37.84403992 -174.52674866]
[-41.38370895 -189.10311890]
[-44.92338181 -203.67948914]
[-48.67968369 -218.20155334]
[-52.65177917 -232.66607666]
[-56.62387466 -247.13059998]
[-60.59597397 -261.59512329]
[-75.62618256 -260.70834351]
[-90.51226807 -262.96630859]
[-104.60345459 -268.27029419]
[-117.28374481 -276.38839722]
[-127.99880981 -286.96578979]
[-136.28022766 -299.54003906]
[-141.76597595 -313.56146240]
[-144.21624756 -328.41708374]
[-143.52392578 -343.45751953]
[-139.71926880 -358.02523804]
[-132.96859741 -371.48339844]
[-123.56701660 -383.24368286]
[-111.92554474 -392.79196167]
[-98.55308533 -399.71084595]
[-84.03421783 -403.69787598]
[-69.00366211 -404.57870483]
[-54.11846924 -402.31491089]
[-40.02937317 -397.00540161]
[-27.35227585 -388.88229370]
[-16.64137459 -378.30068970]
[-8.36489773 -365.72317505]
[-2.88466120 -351.69958496]
[-0.44023582 -336.84298706]
[-1.13848174 -321.80285645]
[-4.94887447 -307.23663330]
[-11.70483971 -293.78112793]
[-21.11103630 -282.02456665]
[-32.75626755 -272.48083496]
[-46.13144684 -265.56723022]
[-42.15935135 -251.10269165]
[-38.18725586 -236.63816833]
[-34.21516037 -222.17364502]
[-30.58114815 -219.07478333]
[-28.85524559 -213.66014099]
[-30.34700775 -207.21916199]
[-26.80733490 -192.64279175]
[-23.26766205 -178.06642151]
[-19.72799110 -163.49003601]
[-16.18831825 -148.91366577]
[-12.64864540 -134.33729553]
[-7.29745960 -120.32427216]
[-0.22035426 -107.09873962]
[6.85675097 -93.87321472]
[13.93385696 -80.64768219]
[19.86131477 -76.23327637]
[21.01621056 -67.17214966]
[27.89562225 -53.84271622]
[34.77503586 -40.51328659]
[41.65444946 -27.18385887]
[48.53385925 -13.85443020]
[61.24652481 -6.09315062]
[60.70007706 9.71861649]
[76.85488892 10.08540916]
[90.70008087 18.59813118]
[98.40718842 33.01400375]
[97.78913879 49.44305038]
[88.91999817 63.39762878]
[95.99710846 76.62315369]
[103.07421112 89.84868622]
[110.73480988 102.74501038]
[118.96361542 115.28640747]
[134.17996216 118.61812592]
[142.34649658 131.45411682]
[139.07643127 145.94004822]
[147.30523682 158.48144531]
[155.53405762 171.02285767]
[163.76286316 183.56425476]
[172.08480835 196.04405212]
[180.49942017 208.46154785]
[188.91403198 220.87902832]
[197.32865906 233.29652405]
[211.47540283 240.38034058]
[212.20988464 255.25682068]
[220.62449646 267.67431641]
[229.03912354 280.09182739]
[237.45373535 292.50930786]
[245.86834717 304.92681885]
[254.46691895 317.21765137]
[263.24752808 329.37908936]
[277.59890747 336.03857422]
[278.77597046 350.88659668]
[287.55657959 363.04803467]
[296.33718872 375.20950317]
[309.50189209 367.97964478]
[323.45526123 362.42242432]
[337.98580933 358.62210083]
[352.87326050 356.63623047]
[367.89190674 356.49496460]
[382.81405640 358.20043945]
[397.41354370 361.72677612]
[411.46899414 367.02053833]
[424.76733398 374.00146484]
[437.10699463 382.56372070]
[448.30090332 392.57754517]
[458.17935181 403.89108276]
[466.59255981 416.33282471]
[473.41302490 429.71420288]
[478.53735352 443.83230591]
[481.88781738 458.47311401]
[483.41369629 473.41473389]
[483.09176636 488.43057251]
[480.92700195 503.29306030]
[476.95214844 517.77685547]
[471.22747803 531.66241455]
[463.83981323 544.73913574]
[454.90112305 556.80889893]
[444.54690552 567.68872070]
[432.93414307 577.21362305]
[420.23889160 585.23919678]
[406.65356445 591.64379883]
[392.38415527 596.33032227]
[377.64700317 599.22778320]
[362.66543579 600.29217529]
[347.66665649 599.50738525]
[332.87799072 596.88531494]
[318.52365112 592.46575928]
[304.82125854 586.31567383]
[291.97848511 578.52825928]
[280.19009399 569.22167969]
[269.63476562 558.53686523]
[260.47247314 546.63592529]
[252.84219360 533.69921875]
[246.85954285 519.92291260]
[242.61523438 505.51577759]
[240.17359924 490.69625854]
[239.57167053 475.68902588]
[240.81857300 460.72155762]
[243.89538574 446.02078247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 165]
[5 164]
[6 163]
[8 161]
[9 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[18 153]
[19 152]
[20 151]
[21 150]
[23 149]
[24 148]
[25 147]
[26 146]
[29 143]
[30 142]
[37 141]
[38 140]
[39 139]
[45 134]
[47 132]
[48 131]
[49 130]
[50 129]
[51 128]
[52 126]
[53 125]
[54 124]
[55 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 114]
[80 113]
[81 112]
[82 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
