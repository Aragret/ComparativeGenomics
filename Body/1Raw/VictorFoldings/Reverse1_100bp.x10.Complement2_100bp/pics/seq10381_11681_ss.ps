%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[122.13102722 333.83120728]
[116.92130280 347.91802979]
[110.01992035 361.25784302]
[101.53150177 373.64840698]
[91.58473206 384.90191650]
[80.33039093 394.84774780]
[67.93910980 403.33514404]
[54.59872055 410.23538208]
[40.51146698 415.44393921]
[25.89090729 418.88180542]
[10.95868778 420.49685669]
[-4.05882502 420.26464844]
[-18.93396950 418.18865967]
[-33.44124222 414.30038452]
[-47.36071396 408.65875244]
[-60.48137283 401.34933472]
[-72.60430908 392.48287964]
[-83.54575348 382.19381714]
[-93.13981628 370.63815308]
[-101.24107361 357.99105835]
[-107.72669983 344.44424438]
[-112.49838257 330.20306396]
[-115.48377228 315.48345947]
[-116.63762665 300.50854492]
[-115.94244385 285.50534058]
[-113.40876770 270.70126343]
[-109.07500458 256.32080078]
[-103.00685120 242.58189392]
[-95.29631042 229.69287109]
[-86.06025696 217.84909058]
[-75.43871307 207.23013306]
[-63.59270477 197.99694824]
[-50.70180511 190.28952026]
[-36.96144104 184.22470093]
[-22.57991600 179.89442444]
[-7.77524471 177.36433411]
[7.22813416 176.67279053]
[22.20277405 177.83027649]
[36.92166519 180.81922913]
[51.16167068 185.59437561]
[57.64116669 172.06602478]
[64.12065887 158.53767395]
[70.60015869 145.00933838]
[77.07965088 131.48098755]
[83.45825958 117.90477753]
[89.73561859 104.28146362]
[75.32537842 108.44618225]
[62.12484741 101.32255554]
[57.69589996 86.99131012]
[64.57563019 73.66204834]
[78.82302094 68.97036743]
[92.27651978 75.60387421]
[97.22939301 89.76165009]
[104.69713593 76.75270081]
[112.16487885 63.74374771]
[119.63262177 50.73479462]
[127.10035706 37.72584152]
[134.37359619 24.60714912]
[141.45069885 11.38162136]
[148.52780151 -1.84390569]
[155.60490417 -15.06943321]
[142.75512695 -22.81423569]
[130.31758118 -31.20505524]
[118.32468414 -40.21999741]
[106.80774689 -49.83554840]
[95.79681396 -60.02661514]
[85.32060242 -70.76661682]
[75.40644836 -82.02753448]
[66.08021545 -93.77997589]
[57.36623764 -105.99330139]
[49.28724670 -118.63563538]
[41.86432266 -131.67399597]
[35.11682510 -145.07435608]
[29.06236458 -158.80178833]
[23.71673203 -172.82044983]
[19.09387589 -187.09376526]
[15.20585537 -201.58451843]
[12.06281471 -216.25489807]
[9.67295265 -231.06661987]
[8.04250526 -245.98106384]
[7.17572641 -260.95928955]
[7.07487631 -275.96221924]
[7.74021816 -290.95077515]
[9.17001724 -305.88577271]
[11.36054230 -320.72827148]
[14.30607891 -335.43957520]
[17.99894333 -349.98129272]
[22.42949867 -364.31546021]
[27.58618927 -378.40472412]
[33.45555878 -392.21231079]
[40.02229691 -405.70217896]
[47.26927185 -418.83914185]
[55.17757416 -431.58895874]
[63.72657776 -443.91830444]
[72.89397430 -455.79507446]
[82.65584564 -467.18826294]
[92.98672485 -478.06811523]
[103.85966492 -488.40628052]
[115.24629974 -498.17578125]
[127.11691284 -507.35113525]
[139.44053650 -515.90838623]
[152.18504333 -523.82525635]
[165.31713867 -531.08105469]
[178.80261230 -537.65679932]
[192.60624695 -543.53546143]
[206.69204712 -548.70159912]
[221.02325439 -553.14172363]
[235.56248474 -556.84436035]
[250.27182007 -559.79974365]
[265.11285400 -562.00024414]
[280.04690552 -563.44006348]
[295.03497314 -564.11541748]
[310.03799438 -564.02465820]
[325.01678467 -563.16790771]
[339.93231201 -561.54742432]
[354.74563599 -559.16748047]
[369.41812134 -556.03430176]
[383.91146851 -552.15600586]
[398.18789673 -547.54272461]
[412.21014404 -542.20648193]
[425.94161987 -536.16119385]
[439.34649658 -529.42272949]
[452.38983154 -522.00854492]
[465.03756714 -513.93798828]
[477.25674438 -505.23220825]
[489.01544189 -495.91387939]
[500.28298950 -486.00726318]
[511.03002930 -475.53823853]
[521.22845459 -464.53414917]
[530.85174561 -453.02365112]
[539.87469482 -441.03680420]
[548.27386475 -428.60488892]
[556.02728271 -415.76031494]
[563.11474609 -402.53659058]
[569.51770020 -388.96823120]
[575.21954346 -375.09063721]
[580.20532227 -360.94000244]
[584.46209717 -346.55325317]
[587.97869873 -331.96789551]
[590.74597168 -317.22201538]
[592.75665283 -302.35409546]
[594.00561523 -287.40286255]
[594.48950195 -272.40737915]
[594.20709229 -257.40676880]
[593.15905762 -242.44012451]
[591.34826660 -227.54650879]
[588.77929688 -212.76480103]
[585.45892334 -198.13354492]
[581.39581299 -183.69090271]
[576.60052490 -169.47457886]
[571.08563232 -155.52163696]
[564.86547852 -141.86849976]
[557.95629883 -128.55076599]
[550.37609863 -115.60320282]
[542.14471436 -103.05957794]
[533.28356934 -90.95261383]
[523.81579590 -79.31390381]
[513.76605225 -68.17380524]
[503.16061401 -57.56138229]
[492.02716064 -47.50432587]
[480.39468384 -38.02886963]
[468.29354858 -29.15973473]
[455.75537109 -20.92006111]
[442.81280518 -13.33134460]
[429.49963379 -6.41338348]
[415.85058594 -0.18422614]
[401.90127563 5.33987665]
[387.68811035 10.14451218]
[373.24816895 14.21714687]
[358.61911011 17.54715538]
[343.83908081 20.12584877]
[328.94668579 21.94650078]
[313.98071289 23.00436211]
[298.98028564 23.29667091]
[283.98449707 22.82266617]
[269.03244019 21.58358383]
[254.16319275 19.58265877]
[239.41549683 16.82510567]
[224.82783508 13.31812477]
[210.43827820 9.07086182]
[196.28436279 4.09439898]
[182.40301514 -1.59828162]
[168.83042908 -7.99232769]
[161.75332642 5.23319960]
[154.67622375 18.45872688]
[147.59912109 31.68425560]
[148.10142517 36.43364716]
[145.62551880 41.54901123]
[140.10931396 45.19358444]
[132.64157104 58.20253754]
[125.17382812 71.21148682]
[117.70608521 84.22044373]
[110.23834991 97.22939301]
[103.35893250 110.55882263]
[97.08157349 124.18213654]
[96.33242798 133.28579712]
[90.60800171 137.96047974]
[84.12850189 151.48883057]
[77.64900970 165.01716614]
[71.16950989 178.54551697]
[64.69001770 192.07386780]
[77.33644104 200.17617798]
[88.89130402 209.77120972]
[99.17944336 220.71351624]
[108.04487610 232.83718872]
[115.35321808 245.95846558]
[120.99367523 259.87841797]
[124.88072968 274.38601685]
[126.95546722 289.26132202]
[127.18643188 304.27886963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 201]
[41 200]
[42 199]
[43 198]
[44 197]
[45 195]
[46 194]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 186]
[59 185]
[60 184]
[61 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
