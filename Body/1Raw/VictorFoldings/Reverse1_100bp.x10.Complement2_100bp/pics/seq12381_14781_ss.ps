%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[121.91440582 522.87463379]
[112.34355927 534.53918457]
[100.07926941 543.32830811]
[85.95772552 548.64288330]
[70.94176483 550.12042236]
[56.05518723 547.66027832]
[42.31299973 541.43017578]
[30.65215874 531.85479736]
[21.86772346 519.58715820]
[16.55862808 505.46353149]
[15.08685875 490.44699097]
[17.55276108 475.56137085]
[23.78820610 461.82159424]
[33.36805344 450.16445923]
[45.63912964 441.38476562]
[59.76477051 436.08111572]
[74.78187561 434.61514282]
[77.22760010 419.81585693]
[71.66900635 405.99734497]
[81.55286407 393.64340210]
[83.99858856 378.84414673]
[86.44431305 364.04486084]
[88.89004517 349.24560547]
[90.56158447 334.33901978]
[91.45439911 319.36563110]
[92.34721375 304.39221191]
[85.38117218 291.22698975]
[93.92615509 277.91180420]
[94.81896973 262.93838501]
[95.71179199 247.96499634]
[92.97198486 241.10093689]
[96.73100281 232.77581787]
[97.84664917 217.81736755]
[98.96229553 202.85890198]
[98.85063171 187.85932922]
[97.51239777 172.91914368]
[96.17416382 157.97895813]
[93.14872742 154.28358459]
[92.41259003 148.64840698]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[81.45631409 45.00255966]
[88.42235565 31.83732033]
[87.52954102 16.86391449]
[75.99165344 6.39898396]
[75.29950714 -8.79889679]
[85.34732819 -19.73402214]
[84.45451355 -34.70742798]
[83.56169128 -49.68083572]
[74.37620544 -37.82221603]
[60.00734711 -33.51688385]
[45.81434631 -38.37061691]
[37.09084320 -50.57309341]
[37.09048462 -65.57309723]
[45.81340790 -77.77598572]
[60.00617981 -82.63039398]
[74.37524414 -78.32574463]
[83.56169128 -66.46646881]
[84.45451355 -81.43987274]
[85.34732819 -96.41327667]
[76.72583008 -112.68445587]
[86.95349121 -126.94496155]
[87.62327576 -141.92999268]
[88.29306030 -156.91503906]
[88.96284485 -171.90007019]
[89.63262939 -186.88511658]
[90.30241394 -201.87014771]
[82.19026184 -211.89790344]
[83.05662537 -224.36518860]
[91.89295959 -232.62629700]
[84.99077606 -246.86253357]
[93.47190094 -259.10668945]
[94.36471558 -274.08010864]
[95.25753021 -289.05352783]
[96.15035248 -304.02691650]
[95.81537628 -319.02319336]
[94.25485229 -333.94177246]
[92.69432831 -348.86038208]
[91.13380432 -363.77899170]
[89.57328033 -378.69760132]
[74.57436371 -379.82559204]
[60.01795578 -383.61380005]
[46.37197495 -389.94049072]
[34.07508469 -398.60226440]
[23.52258110 -409.32067871]
[15.05368423 -421.75119019]
[8.94063282 -435.49420166]
[5.37993622 -450.10794067]
[4.48605680 -465.12261963]
[6.28772831 -480.05560303]
[10.72703457 -494.42684937]
[17.66127014 -507.77435303]
[26.86752892 -519.66906738]
[38.04986954 -529.72863770]
[50.84881973 -537.62969971]
[64.85295105 -543.11822510]
[79.61209106 -546.01782227]
[94.65178680 -546.23529053]
[109.48857880 -543.76354980]
[123.64553070 -538.68218994]
[136.66754150 -531.15441895]
[148.13601685 -521.42230225]
[157.68229675 -509.79870605]
[164.99949646 -496.65725708]
[169.85241699 -482.42034912]
[172.08503723 -467.54571533]
[171.62559509 -452.51144409]
[168.48884583 -437.80090332]
[162.77565002 -423.88690186]
[154.66964722 -411.21676636]
[144.43142700 -400.19775391]
[132.39007568 -391.18411255]
[118.93270111 -384.46557617]
[104.49188232 -380.25811768]
[106.05240631 -365.33950806]
[107.61293030 -350.42089844]
[109.17345428 -335.50231934]
[110.73397827 -320.58370972]
[117.85720825 -333.78445435]
[130.24742126 -342.23919678]
[145.13659668 -344.05911255]
[159.19848633 -338.83767700]
[169.29159546 -327.74133301]
[173.16111755 -313.24902344]
[169.94258118 -298.59838867]
[160.35502625 -287.06240845]
[146.54031372 -281.21826172]
[131.58471680 -282.37152100]
[118.82933807 -290.26458740]
[111.12375641 -303.13409424]
[110.23094177 -288.16070557]
[109.33811951 -273.18728638]
[108.44530487 -258.21389771]
[115.41134644 -245.04864502]
[106.86636353 -231.73347473]
[115.55493927 -216.48632812]
[105.28745270 -201.20036316]
[104.61766815 -186.21533203]
[103.94788361 -171.23028564]
[103.27809906 -156.24525452]
[102.60831451 -141.26020813]
[101.93852997 -126.27517700]
[109.86746979 -117.13961792]
[109.43209839 -104.64984894]
[100.32073212 -95.52046204]
[99.42791748 -80.54705811]
[98.53510284 -65.57364655]
[98.53510284 -50.57365036]
[99.42791748 -35.60024261]
[100.32073212 -20.62683868]
[111.59678650 -10.96318626]
[112.71553040 4.20925760]
[102.50294495 15.97109890]
[103.39576721 30.94450569]
[111.87688446 43.18867874]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[111.11434937 156.64071655]
[112.45258331 171.58090210]
[113.79081726 186.52108765]
[121.10979462 173.42787170]
[133.62451172 165.15852356]
[148.53913879 163.56047058]
[162.52172852 168.99070740]
[172.44850159 180.23609924]
[176.10183716 194.78440857]
[172.66552734 209.38549805]
[162.90727234 220.77745056]
[149.00709534 226.41526794]
[134.07032776 225.03945923]
[121.43387604 216.95738220]
[113.92075348 203.97456360]
[112.80510712 218.93301392]
[111.68945312 233.89146423]
[110.68519592 248.85780334]
[109.79238129 263.83120728]
[108.89956665 278.80462646]
[115.80174255 293.04086304]
[107.32061768 305.28503418]
[106.42780304 320.25845337]
[105.53498840 335.23184204]
[116.69564819 325.20986938]
[131.68244934 324.58087158]
[143.64364624 333.63238525]
[147.11071777 348.22619629]
[140.49858093 361.69021606]
[126.83020782 367.86886597]
[112.35459900 363.93734741]
[103.68931580 351.69131470]
[101.24358368 366.49060059]
[98.79785919 381.28988647]
[96.35213470 396.08914185]
[101.73579407 410.96618652]
[92.02687073 422.26159668]
[89.58114624 437.06088257]
[103.32814026 443.28039551]
[114.99636841 452.84674072]
[123.79027557 465.10763550]
[129.11027527 479.22711182]
[130.59364319 494.24252319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 204]
[20 202]
[21 201]
[22 200]
[23 199]
[24 191]
[25 190]
[26 189]
[28 187]
[29 186]
[30 185]
[32 184]
[33 183]
[34 182]
[35 170]
[36 169]
[37 168]
[40 167]
[41 166]
[42 165]
[44 163]
[45 162]
[46 161]
[48 159]
[49 158]
[52 155]
[53 154]
[54 153]
[63 152]
[64 151]
[65 150]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[75 140]
[77 138]
[78 137]
[79 136]
[80 135]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
