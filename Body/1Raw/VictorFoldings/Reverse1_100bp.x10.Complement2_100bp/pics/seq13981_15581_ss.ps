%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[70.99456024 666.24493408]
[60.52456284 677.09124756]
[47.76274109 685.11614990]
[33.45104218 689.85314941]
[18.42153358 691.02673340]
[3.54801106 688.56872559]
[-10.30479908 682.62200928]
[-22.33151245 673.53240967]
[-31.83291245 661.82824707]
[-38.25659943 648.19006348]
[-41.22911072 633.41076660]
[-40.57762527 618.34960938]
[-36.34001923 603.88220215]
[-28.76266289 590.84967041]
[-18.28609657 580.00970459]
[-5.51941013 571.99249268]
[8.79515648 567.26422119]
[23.82537270 566.09973145]
[26.27110100 551.30047607]
[28.71682739 536.50122070]
[21.66164017 520.43286133]
[33.46367645 506.29803467]
[35.68879700 491.46398926]
[37.91391373 476.62994385]
[40.13903046 461.79592896]
[42.36414719 446.96188354]
[44.58926392 432.12783813]
[46.81438065 417.29379272]
[48.92900467 402.44357300]
[50.93301773 387.57806396]
[52.93703079 372.71252441]
[54.94104767 357.84701538]
[56.94506073 342.98147583]
[58.94907379 328.11593628]
[60.95308685 313.25042725]
[62.95709991 298.38488770]
[53.78798676 289.33187866]
[51.47269058 276.45858765]
[57.07701111 264.42523193]
[68.75806427 257.71945190]
[70.98318481 242.88539124]
[73.20829773 228.05134583]
[75.43341827 213.21731567]
[66.40125275 201.42936707]
[68.44651794 186.35383606]
[80.87203979 176.96000671]
[83.09715271 162.12596130]
[68.75218964 156.29312134]
[56.21485519 147.20382690]
[46.21040344 135.38389587]
[39.31757736 121.51706696]
[35.93511200 106.40551758]
[36.25867844 90.92342377]
[40.26955414 75.96639252]
[47.73572159 62.39965820]
[58.22527695 51.00802994]
[71.13141632 42.45049286]
[85.70755768 37.22208405]
[101.11048126 35.62525940]
[103.11449432 20.75972939]
[105.11850739 5.89420223]
[107.12252045 -8.97132587]
[109.12653351 -23.83685493]
[111.13054657 -38.70238113]
[112.02336121 -53.67578888]
[111.80003357 -68.67412567]
[99.97022247 -75.74846649]
[93.23417664 -87.64990234]
[93.25827789 -101.21710968]
[99.92927551 -112.90649414]
[111.41181183 -119.71778107]
[111.41181183 -134.71777344]
[111.41181183 -149.71777344]
[111.41181183 -164.71777344]
[111.41181183 -179.71777344]
[100.85473633 -188.08215332]
[97.09746552 -200.81375122]
[101.29678345 -213.20115662]
[111.70738983 -220.79383850]
[111.93071747 -235.79217529]
[112.15404510 -250.79051208]
[112.37737274 -265.78884888]
[112.60070038 -280.78717041]
[112.82402802 -295.78552246]
[101.21008301 -303.20895386]
[94.83137512 -315.30566406]
[95.25940704 -328.86611938]
[102.27548981 -340.35171509]
[113.95573425 -346.81811523]
[114.40233612 -361.81146240]
[114.84894562 -376.80480957]
[115.07227325 -391.80313110]
[115.07227325 -406.80313110]
[115.07227325 -421.80313110]
[115.07227325 -436.80313110]
[100.57475281 -441.04562378]
[87.86047363 -449.20184326]
[77.96012878 -460.61059570]
[71.67628479 -474.34704590]
[69.51834869 -489.29763794]
[71.66126251 -504.25036621]
[77.93130493 -517.99310303]
[87.82018280 -529.41180420]
[100.52626038 -537.58081055]
[115.01951599 -541.83782959]
[130.12503052 -541.83782959]
[144.61828613 -537.58081055]
[157.32435608 -529.41180420]
[167.21324158 -517.99310303]
[173.48327637 -504.25036621]
[175.62619019 -489.29763794]
[173.46826172 -474.34704590]
[167.18441772 -460.61059570]
[157.28407288 -449.20184326]
[144.56979370 -441.04562378]
[130.07226562 -436.80313110]
[130.07226562 -421.80313110]
[130.07226562 -406.80313110]
[130.07226562 -391.80313110]
[132.75595093 -387.85260010]
[132.98641968 -382.17422485]
[129.84230042 -376.35818481]
[129.39569092 -361.36483765]
[128.94908142 -346.37149048]
[142.25146484 -336.75256348]
[147.24931335 -320.94168091]
[141.78407288 -305.11032104]
[127.82236481 -295.56219482]
[127.59903717 -280.56384277]
[127.37570953 -265.56552124]
[127.15238190 -250.56718445]
[126.92905426 -235.56884766]
[126.70572662 -220.57051086]
[138.92428589 -209.01431274]
[139.00595093 -191.85890198]
[126.41181183 -179.71777344]
[126.41181183 -164.71777344]
[126.41181183 -149.71777344]
[126.41181183 -134.71777344]
[126.41181183 -119.71778107]
[139.99468994 -110.49916077]
[145.46105957 -94.84411621]
[140.46961975 -78.85703278]
[126.79837036 -68.89745331]
[127.02169800 -53.89911652]
[135.68974304 -66.14105225]
[149.27587891 -72.49850464]
[164.22868347 -71.30966949]
[176.63955688 -62.88529205]
[183.26432800 -49.42749023]
[182.37129211 -34.45409775]
[174.19387817 -21.87912560]
[160.86964417 -14.98964024]
[145.88153076 -15.58653736]
[133.14738464 -23.51378822]
[125.99607849 -36.69836807]
[123.99206543 -21.83283997]
[121.98804474 -6.96731234]
[119.98403168 7.89821577]
[117.98001862 22.76374435]
[115.97600555 37.62927246]
[129.47970581 42.76113892]
[141.49934387 50.77454376]
[151.42979431 61.26607132]
[158.77114868 73.70755768]
[163.15382385 87.47266388]
[164.35720825 101.86842346]
[162.32067871 116.17012787]
[157.14678955 129.65779114]
[149.09600830 141.65240479]
[138.57360840 151.55014038]
[126.10932159 158.85272217]
[112.33063507 163.19253540]
[97.93119812 164.35107422]
[95.70608521 179.18511963]
[104.82859802 191.81117249]
[102.36069489 206.82330322]
[90.26746368 215.44242859]
[88.04234314 230.27647400]
[85.81722260 245.11051941]
[83.59210968 259.94454956]
[94.24588776 273.81958008]
[91.62026215 290.77307129]
[77.82263184 300.38891602]
[75.81861877 315.25442505]
[73.81459808 330.11996460]
[71.81058502 344.98547363]
[69.80657196 359.85101318]
[67.80255890 374.71655273]
[65.79854584 389.58206177]
[63.79453278 404.44760132]
[65.74937439 413.37039185]
[61.64842606 419.51889038]
[59.42330933 434.35293579]
[57.19818878 449.18698120]
[54.97307205 464.02102661]
[52.74795532 478.85507202]
[50.52283859 493.68911743]
[48.29772186 508.52316284]
[55.32262039 519.34045410]
[53.16392517 531.64996338]
[43.51609802 538.94696045]
[41.07037354 553.74621582]
[38.62464523 568.54547119]
[52.48105621 574.48376465]
[64.51328278 583.56610107]
[74.02177429 595.26446533]
[80.45372772 608.89874268]
[83.43519592 623.67626953]
[82.79283905 638.73779297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 204]
[19 203]
[20 202]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[27 194]
[28 193]
[29 191]
[30 190]
[31 189]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[40 181]
[41 180]
[42 179]
[43 178]
[46 175]
[47 174]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 145]
[66 144]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[89 124]
[90 123]
[91 122]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
