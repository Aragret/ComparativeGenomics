%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[36.76737213 571.49505615]
[35.42913818 556.55487061]
[34.09090424 541.61468506]
[32.75267029 526.67449951]
[31.41443443 511.73431396]
[30.07620049 496.79412842]
[24.01828384 510.51641846]
[13.68244171 521.38702393]
[0.28291675 528.12890625]
[-14.60612869 529.95001221]
[-29.23554420 526.63635254]
[-41.88668060 518.57727051]
[-51.07329178 506.71951294]
[-55.71614838 492.45614624]
[-55.26981354 477.46279907]
[-49.78671646 463.50085449]
[-39.91100693 452.21057129]
[-26.80287933 444.91833496]
[-12.00225735 442.48077393]
[2.75209475 445.18432617]
[15.72685051 452.71130371]
[25.39774895 464.17752075]
[30.62894821 478.23742676]
[32.85406494 463.40338135]
[35.07918167 448.56933594]
[33.01121902 444.26437378]
[33.62564468 438.61465454]
[37.59773636 433.32937622]
[40.26353073 418.56817627]
[42.92932510 403.80694580]
[45.59512329 389.04574585]
[43.69039536 381.90472412]
[48.41205978 374.08529663]
[43.26735306 360.10739136]
[53.51465225 348.05322266]
[56.39992523 333.33331299]
[59.28519821 318.61343384]
[61.84103012 303.83279419]
[64.06614685 288.99874878]
[66.29126740 274.16470337]
[60.52754593 260.43048096]
[70.22637939 247.93074036]
[72.45149231 233.09669495]
[74.67661285 218.26264954]
[76.90172577 203.42861938]
[79.12684631 188.59457397]
[73.36312866 174.86035156]
[83.06195831 162.36061096]
[85.28707123 147.52658081]
[87.51219177 132.69253540]
[81.74847412 118.95831299]
[91.44730377 106.45858002]
[91.55896759 91.45899200]
[89.55495453 76.59346771]
[87.55094147 61.72793961]
[85.54692841 46.86241150]
[83.54291534 31.99688148]
[80.35102844 27.86663246]
[79.17974091 23.37426376]
[79.82860565 19.35008430]
[81.79671478 16.42452812]
[80.45848083 1.48434281]
[79.12024689 -13.45584202]
[69.74110413 -22.30990601]
[68.93405914 -34.78116989]
[76.58748627 -44.14875412]
[75.47183990 -59.10720825]
[74.35618591 -74.06565857]
[65.61390686 -87.25213623]
[72.38316345 -100.51963043]
[71.26751709 -115.47808075]
[62.02123642 -124.47080994]
[61.39995956 -136.95269775]
[69.19200897 -146.20530701]
[68.29919434 -161.17871094]
[67.40637207 -176.15211487]
[56.07803345 -181.43762207]
[48.11804962 -190.98262024]
[44.98987579 -202.93644714]
[47.22778320 -215.01506042]
[54.34674454 -224.93742371]
[64.94589996 -230.85630798]
[64.49929047 -245.84965515]
[61.11576080 -254.33432007]
[64.15932465 -261.06921387]
[63.93600082 -276.06753540]
[63.71267319 -291.06588745]
[55.77076340 -304.74932861]
[63.31771851 -317.59036255]
[63.09439087 -332.58871460]
[62.87106323 -347.58706665]
[59.81388092 -353.44924927]
[60.12885666 -359.12353516]
[62.87106323 -363.03372192]
[63.09439087 -378.03204346]
[48.61658096 -382.30938721]
[35.83027267 -390.33514404]
[25.68429947 -401.51379395]
[18.93155289 -415.01574707]
[16.07313538 -429.83911133]
[17.32115936 -444.88388062]
[22.58301163 -459.03363037]
[31.46823120 -471.23834229]
[43.31747437 -480.59240723]
[57.25144958 -486.40161133]
[72.23616028 -488.23492432]
[87.15964508 -485.95626831]
[100.91447449 -479.73477173]
[112.47996521 -470.03207397]
[120.99786377 -457.56820679]
[125.83609009 -443.26806641]
[126.63562775 -428.19281006]
[123.33712769 -413.46112061]
[116.18537140 -400.16619873]
[105.71106720 -389.29461670]
[92.69146729 -381.65310669]
[78.09272766 -377.80871582]
[77.86940002 -362.81039429]
[77.86940002 -347.81039429]
[78.09272766 -332.81204224]
[78.31605530 -317.81369019]
[86.24198914 -305.20303345]
[78.71100616 -291.28921509]
[78.93433380 -276.29086304]
[79.15766144 -261.29254150]
[79.49263763 -246.29626465]
[79.93924713 -231.30291748]
[94.97596741 -222.04177856]
[101.50070190 -205.46231079]
[96.72527313 -188.13386536]
[82.37978363 -177.04493713]
[83.27259827 -162.07151794]
[84.16541290 -147.09811401]
[94.60425568 -132.99147034]
[86.22597504 -116.59373474]
[87.34162140 -101.63527679]
[96.00410461 -89.51873016]
[89.31464386 -75.18131256]
[90.43029022 -60.22285461]
[91.54593658 -45.26440430]
[102.19364929 -31.31473923]
[94.06043243 -14.79407597]
[95.39866638 0.14610867]
[96.73690033 15.08629417]
[98.40843964 29.99286842]
[100.41245270 44.85839462]
[102.41647339 59.72392273]
[104.42048645 74.58945465]
[106.42449951 89.45497894]
[111.49328613 75.33735657]
[120.45003510 63.30503464]
[132.51989746 54.39894104]
[146.65870667 49.38954163]
[161.64331055 48.71019363]
[176.17739868 52.41967010]
[189.00363159 60.19706726]
[199.01239014 71.36956024]
[205.33784485 84.97061157]
[207.43275452 99.82360077]
[205.11592102 114.64360046]
[198.58773804 128.14851379]
[188.41297913 139.17005920]
[175.47184753 146.75473022]
[160.88389587 150.24639893]
[145.91113281 149.34300232]
[131.84883118 144.12268066]
[119.91353607 135.03704834]
[111.13776398 122.87210083]
[106.28134918 108.68369293]
[111.88591003 123.47894287]
[102.34623718 134.91764832]
[100.12111664 149.75169373]
[97.89600372 164.58573914]
[103.50056458 179.38098145]
[93.96089172 190.81968689]
[91.73577118 205.65373230]
[89.51065063 220.48777771]
[87.28553772 235.32182312]
[85.06041718 250.15585327]
[90.66498566 264.95111084]
[81.12530518 276.38980103]
[78.90019226 291.22384644]
[76.67507172 306.05789185]
[78.58719635 310.91494751]
[78.45795441 315.55569458]
[76.71159363 319.23880005]
[74.00508881 321.49871826]
[71.11981964 336.21859741]
[68.23454285 350.93847656]
[73.17287445 365.96923828]
[63.13195038 376.97055054]
[60.35633850 391.71151733]
[57.69054413 406.47274780]
[55.02474976 421.23394775]
[52.35895157 435.99517822]
[49.91322708 450.79446411]
[47.68810654 465.62847900]
[45.46298981 480.46252441]
[45.01638412 495.45590210]
[46.35461807 510.39605713]
[47.69285202 525.33624268]
[49.03108597 540.27642822]
[50.36932373 555.21661377]
[51.70755768 570.15679932]
[64.63824463 578.95062256]
[68.84140778 594.01275635]
[62.33242416 608.23132324]
[48.18465042 614.89270020]
[33.07822418 610.85168457]
[24.14594460 598.01623535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[23 198]
[24 197]
[25 196]
[28 195]
[29 194]
[30 193]
[31 192]
[33 191]
[35 189]
[36 188]
[37 187]
[38 183]
[39 182]
[40 181]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[48 173]
[49 172]
[50 171]
[52 169]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[61 144]
[62 143]
[63 142]
[66 140]
[67 139]
[68 138]
[70 136]
[71 135]
[74 133]
[75 132]
[76 131]
[82 127]
[83 126]
[85 125]
[86 124]
[87 123]
[89 121]
[90 120]
[91 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
