%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[31.35040283 498.14358521]
[37.36273193 511.92846680]
[40.88982010 526.54797363]
[41.82447433 541.55792236]
[40.13829803 556.50207520]
[35.88253403 570.92633057]
[29.18650246 584.39239502]
[20.25369453 596.49096680]
[9.35556507 606.85449219]
[-3.17670321 615.16790771]
[-16.96226883 621.17871094]
[-31.58220291 624.70410156]
[-46.59222412 625.63708496]
[-61.53619385 623.94921875]
[-75.95997620 619.69177246]
[-89.42526245 612.99426270]
[-101.52285004 604.06005859]
[-111.88510132 593.16076660]
[-120.19712830 580.62756348]
[-126.20632935 566.84130859]
[-129.73010254 552.22094727]
[-130.66134644 537.21081543]
[-128.97178650 522.26708984]
[-124.71274567 507.84375000]
[-118.01366425 494.37924194]
[-109.07810974 482.28265381]
[-98.17762756 471.92163086]
[-85.64347839 463.61105347]
[-71.85655212 457.60339355]
[-57.23581696 454.08129883]
[-42.22558212 453.15173340]
[-27.28199768 454.84298706]
[-12.85917568 459.10366821]
[-6.17898130 445.67330933]
[0.50121319 432.24291992]
[7.18140793 418.81253052]
[13.86160278 405.38217163]
[20.54179764 391.95178223]
[27.22199249 378.52142334]
[32.25890732 364.39239502]
[35.58116913 349.76492310]
[38.90342712 335.13748169]
[42.22568512 320.51000977]
[45.54794693 305.88253784]
[32.29202652 298.93777466]
[21.27705574 288.79049683]
[13.25796223 276.12799072]
[8.78645229 261.81024170]
[8.17306614 246.81143188]
[11.46561909 232.15373230]
[18.44552612 218.83763123]
[28.64231300 207.77363586]
[41.36531448 199.71998596]
[55.75045776 195.23077393]
[70.81894684 194.61773682]
[74.14120483 179.99028015]
[77.46347046 165.36280823]
[80.78572845 150.73535156]
[84.10798645 136.10789490]
[79.38173676 121.98302460]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[90.90052795 71.26733398]
[101.26454926 60.56984711]
[104.58681488 45.94238663]
[91.35034943 52.99901962]
[76.96140289 48.76131821]
[69.66260529 35.65682983]
[73.63504791 21.19240189]
[86.60313416 13.65391445]
[101.13815308 17.35975647]
[108.91363525 30.18611336]
[113.52764130 15.91338062]
[118.14165497 1.64064717]
[122.75566101 -12.63208580]
[119.63844299 -28.14316368]
[130.91552734 -37.87336349]
[135.52952576 -52.14609528]
[140.14353943 -66.41883087]
[144.75755310 -80.69155884]
[133.14491272 -71.19699860]
[118.58329010 -67.59712982]
[103.88429260 -70.58702850]
[91.88607788 -79.58940125]
[84.90529633 -92.86602783]
[84.28984070 -107.85339355]
[90.15854645 -121.65768433]
[101.37825012 -131.61349487]
[115.78260803 -135.79852295]
[130.59036255 -133.40470886]
[142.94236755 -124.89424133]
[150.45365906 -111.91038513]
[151.67372131 -96.95883179]
[158.75082397 -110.18436432]
[165.82792664 -123.40988922]
[172.90502930 -136.63542175]
[179.98213196 -149.86094666]
[167.75241089 -158.58229065]
[156.73837280 -168.79598999]
[147.12091064 -180.33430481]
[139.05793762 -193.00776672]
[132.68185425 -206.60827637]
[128.09738159 -220.91250610]
[125.37976837 -235.68556213]
[124.57366180 -250.68484497]
[125.69229889 -265.66406250]
[128.71730042 -280.37722778]
[133.59899902 -294.58276367]
[140.25723267 -308.04739380]
[148.58267212 -320.55001831]
[158.43859863 -331.88531494]
[169.66316223 -341.86718750]
[182.07205200 -350.33166504]
[195.46151733 -357.13980103]
[209.61167908 -362.17977905]
[224.29017639 -365.36886597]
[239.25596619 -366.65463257]
[254.26332092 -366.01602173]
[269.06579590 -363.46350098]
[283.42028809 -359.03900146]
[297.09112549 -352.81515503]
[309.85382080 -344.89416504]
[321.49877930 -335.40609741]
[331.83480835 -324.50677490]
[340.69213867 -312.37518311]
[347.92535400 -299.21047974]
[353.41564941 -285.22891235]
[357.07293701 -270.66000366]
[358.83706665 -255.74302673]
[358.67913818 -240.72293091]
[356.60171509 -225.84635925]
[352.63894653 -211.35757446]
[346.85586548 -197.49452209]
[339.34744263 -184.48483276]
[330.23696899 -172.54214478]
[319.67407227 -161.86257935]
[307.83218384 -152.62147522]
[294.90576172 -144.97059631]
[281.10705566 -139.03556824]
[266.66268921 -134.91386414]
[251.80982971 -132.67317200]
[236.79235840 -132.35025024]
[221.85691833 -133.95043945]
[207.24871826 -137.44744873]
[193.20767212 -142.78384399]
[186.13055420 -129.55831909]
[179.05345154 -116.33278656]
[171.97634888 -103.10725403]
[164.89924622 -89.88172913]
[159.03028870 -76.07755280]
[154.41627502 -61.80482101]
[149.80226135 -47.53208542]
[145.18824768 -33.25935364]
[148.63549805 -18.76915741]
[137.02839661 -8.01807690]
[132.41438293 6.25465631]
[127.80037689 20.52738953]
[123.18637085 34.80012512]
[119.21427155 49.26464844]
[115.89201355 63.89210892]
[120.61826324 78.01697540]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[109.09947205 128.73266602]
[98.73545074 139.43014526]
[95.41318512 154.05761719]
[92.09092712 168.68507385]
[88.76866913 183.31253052]
[85.44641113 197.93998718]
[98.77171326 205.00196838]
[109.80633545 215.26464844]
[117.80217743 228.02404785]
[122.21927643 242.40722656]
[122.76227570 257.43197632]
[119.40016174 272.07388306]
[112.36797333 285.33618164]
[102.15037537 296.31765747]
[89.44827271 304.27386475]
[75.13069916 308.66748047]
[60.17540741 309.20480347]
[56.85314560 323.83227539]
[53.53088760 338.45971680]
[50.20862579 353.08718872]
[46.88636780 367.71466064]
[56.87155914 356.52108765]
[70.05007935 349.35684204]
[84.87374115 347.06353760]
[99.60106659 349.91064453]
[112.50189972 357.56362915]
[122.06067657 369.12347412]
[127.15443420 383.23211670]
[127.18476105 398.23208618]
[122.14809418 412.36120605]
[112.63614655 423.95959473]
[99.76635742 431.66470337]
[85.05066681 434.57131958]
[70.21785736 432.33798218]
[57.01047134 425.22708130]
[46.98009872 414.07400513]
[41.30509949 400.18893433]
[40.65236664 385.20159912]
[33.97217178 398.63198853]
[27.29197884 412.06237793]
[20.61178398 425.49273682]
[13.93158913 438.92312622]
[7.25139475 452.35348511]
[0.57119995 465.78387451]
[12.67080975 474.71530151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 209]
[34 208]
[35 207]
[36 206]
[37 205]
[38 204]
[39 203]
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[61 165]
[63 163]
[65 161]
[66 160]
[73 159]
[74 158]
[75 157]
[76 156]
[78 154]
[79 153]
[80 152]
[81 151]
[94 150]
[95 149]
[96 148]
[97 147]
[98 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
