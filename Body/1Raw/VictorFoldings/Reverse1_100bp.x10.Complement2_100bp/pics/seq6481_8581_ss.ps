%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[81.03556061 599.16833496]
[68.04990387 606.72186279]
[54.17329788 612.47717285]
[39.65338516 616.33142090]
[24.74929047 618.21594238]
[9.72699738 618.09710693]
[-5.14540625 615.97692871]
[-19.60250282 611.89331055]
[-33.38629150 605.91918945]
[-46.25077820 598.16107178]
[-57.96638870 588.75744629]
[-68.32404327 577.87615967]
[-77.13888550 565.71136475]
[-84.25362396 552.48016357]
[-89.54126740 538.41876221]
[-92.90747070 523.77795410]
[-94.29214478 508.81915283]
[-93.67058563 493.80926514]
[-91.05388641 479.01614380]
[-86.48874664 464.70379639]
[-80.05662537 451.12768555]
[-71.87232208 438.53002930]
[-62.08189774 427.13571167]
[-50.86006165 417.14801025]
[-38.40709305 408.74520874]
[-24.94522095 402.07727051]
[-10.71469307 397.26318359]
[4.03053093 394.38885498]
[19.02730560 393.50555420]
[34.00799561 394.62911987]
[37.11210632 379.95379639]
[40.21621704 365.27850342]
[43.32032776 350.60321045]
[46.42443848 335.92788696]
[44.73316956 328.73336792]
[49.68555450 321.05795288]
[53.00781250 306.43051147]
[56.33007050 291.80303955]
[51.60382080 277.67816162]
[62.20547485 265.93441772]
[65.52773285 251.30697632]
[68.84999847 236.67950439]
[71.73526764 221.95962524]
[74.18099213 207.16035461]
[76.62672424 192.36108398]
[71.06812286 178.54257202]
[80.95198059 166.18862915]
[83.39771271 151.38935852]
[85.84343719 136.59007263]
[83.83260345 129.47824097]
[88.43732452 121.58935547]
[91.10311890 106.82814026]
[78.83061981 115.45285797]
[63.87525558 114.29650879]
[53.07442093 103.88776398]
[51.36611176 88.98535919]
[59.53134155 76.40247345]
[73.83708191 71.89183044]
[87.74293518 77.51564026]
[94.89161682 90.70460510]
[99.07862854 76.30081940]
[103.26564026 61.89703751]
[107.45265198 47.49325562]
[111.63965607 33.08947372]
[110.43698883 26.58831215]
[112.40294647 21.25614166]
[116.17170715 18.32262993]
[120.78571320 4.04989624]
[109.27494049 -5.83837080]
[102.44533539 -19.34390640]
[101.30983734 -34.39463043]
[106.01041412 -48.69470596]
[115.80119324 -60.07475281]
[129.16661072 -66.82093048]
[144.05595398 -67.93304443]
[148.66996765 -82.20577240]
[153.28398132 -96.47850800]
[149.01181030 -114.39024353]
[162.48471069 -125.63515472]
[166.88571167 -139.97500610]
[171.28669739 -154.31484985]
[175.68769836 -168.65469360]
[179.33578491 -183.20431519]
[182.22106934 -197.92420959]
[185.10633850 -212.64410400]
[187.99160767 -227.36398315]
[186.29827881 -232.30157471]
[186.63459778 -236.93193054]
[188.54368591 -240.53337097]
[191.34840393 -242.67018127]
[194.88807678 -257.24655151]
[198.42774963 -271.82293701]
[201.96742249 -286.39929199]
[205.50709534 -300.97567749]
[209.04675293 -315.55206299]
[204.78451538 -330.78833008]
[215.30665588 -341.33032227]
[218.84632874 -355.90670776]
[222.38600159 -370.48306274]
[208.81091309 -376.99539185]
[196.88668823 -386.18814087]
[187.13462830 -397.65945435]
[179.98103333 -410.90783691]
[175.73863220 -425.35415649]
[174.59289551 -440.36685181]
[176.59390259 -455.28964233]
[181.65417480 -469.47015381]
[189.55250549 -482.28851318]
[199.94360352 -493.18432617]
[212.37322998 -501.68127441]
[226.29798889 -507.40792847]
[241.10917664 -510.11392212]
[256.15930176 -509.68096924]
[270.79043579 -506.12802124]
[284.36297607 -499.61035156]
[296.28356934 -490.41290283]
[306.03112793 -478.93774414]
[313.17950439 -465.68655396]
[317.41622925 -451.23858643]
[318.55606079 -436.22543335]
[316.54916382 -421.30343628]
[311.48330688 -407.12490845]
[303.57995605 -394.30966187]
[293.18457031 -383.41793823]
[280.75161743 -374.92587280]
[266.82458496 -369.20468140]
[252.01232910 -366.50451660]
[236.96237183 -366.94338989]
[233.42269897 -352.36703491]
[229.88302612 -337.79064941]
[234.39846802 -323.59698486]
[223.62313843 -312.01239014]
[220.08346558 -297.43600464]
[216.54379272 -282.85961914]
[213.00411987 -268.28326416]
[209.46444702 -253.70687866]
[205.92477417 -239.13050842]
[202.71150208 -224.47871399]
[199.82623291 -209.75881958]
[196.94094849 -195.03894043]
[194.05567932 -180.31904602]
[206.45523071 -188.76008606]
[221.39172363 -187.38119507]
[232.03639221 -176.81280518]
[233.52262878 -161.88661194]
[225.17095947 -149.42669678]
[210.79965210 -145.12954712]
[196.97908020 -150.95976257]
[190.02755737 -164.25369263]
[185.62655640 -149.91384888]
[181.22555542 -135.57400513]
[176.82455444 -121.23415375]
[182.21313477 -110.40411377]
[178.66394043 -98.42133331]
[167.55670166 -91.86450195]
[162.94270325 -77.59176636]
[158.32868958 -63.31903076]
[169.74943542 -53.70154953]
[176.63659668 -40.40822601]
[177.91302490 -25.45043373]
[173.35319519 -11.10485649]
[163.62226868 0.43303019]
[150.17929077 7.38495922]
[135.05845642 8.66390514]
[130.44444275 22.93663979]
[126.04344177 37.27648544]
[121.85643005 51.68026733]
[117.66941833 66.08405304]
[113.48240662 80.48783112]
[109.29539490 94.89161682]
[105.86433411 109.49393463]
[103.19853973 124.25515747]
[100.64270782 139.03581238]
[98.19698334 153.83508301]
[95.75125122 168.63435364]
[101.13491821 183.51139832]
[91.42599487 194.80680847]
[88.98026276 209.60607910]
[86.53453827 224.40534973]
[88.20715332 228.41238403]
[88.48928833 232.34747314]
[87.57431793 235.78231812]
[85.77481842 238.39544678]
[83.47745514 240.00177002]
[80.15519714 254.62922668]
[76.83293915 269.25668335]
[81.32155609 284.42779541]
[70.95753479 295.12530518]
[67.63527679 309.75274658]
[64.31301117 324.38021851]
[61.09973907 339.03201294]
[57.99562836 353.70730591]
[54.89151764 368.38259888]
[51.78741074 383.05792236]
[48.68330002 397.73321533]
[62.83585739 402.77191162]
[76.19051361 409.65206909]
[88.50894928 418.25088501]
[99.57131195 428.41491699]
[109.18019104 439.96276855]
[117.16410065 452.68835449]
[123.38055420 466.36459351]
[127.71862793 480.74737549]
[130.10089111 495.58004761]
[130.48481750 510.59790039]
[128.86358643 525.53295898]
[125.26610565 540.11859131]
[119.75658417 554.09460449]
[112.43334198 567.21154785]
[103.42708588 579.23529053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[36 190]
[37 189]
[38 188]
[40 186]
[41 185]
[42 184]
[43 179]
[44 178]
[45 177]
[47 175]
[48 174]
[49 173]
[51 172]
[52 171]
[60 170]
[61 169]
[62 168]
[63 167]
[64 166]
[67 165]
[68 164]
[75 157]
[76 156]
[77 155]
[79 152]
[80 151]
[81 150]
[82 149]
[83 141]
[84 140]
[85 139]
[86 138]
[90 137]
[91 136]
[92 135]
[93 134]
[94 133]
[95 132]
[97 130]
[98 129]
[99 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
