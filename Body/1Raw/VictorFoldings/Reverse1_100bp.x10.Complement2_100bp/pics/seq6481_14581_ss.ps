%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[93.48804474 544.93823242]
[78.52536774 543.69305420]
[63.77981567 540.86450195]
[49.41846466 536.48461914]
[35.60404205 530.60296631]
[22.49307632 523.28619385]
[10.23412037 514.61730957]
[-1.03391898 504.69442749]
[-11.18336678 493.63003540]
[-20.09922218 481.54946899]
[-27.68046188 468.58966064]
[-33.84118271 454.89739990]
[-38.51158142 440.62786865]
[-41.63873672 425.94274902]
[-43.18722153 411.00842285]
[-43.13948059 395.99411011]
[-41.49605942 381.06991577]
[-38.27558136 366.40496826]
[-33.51453781 352.16543579]
[-27.26686859 338.51263428]
[-19.60337067 325.60128784]
[-10.61087322 313.57769775]
[-0.39127132 302.57806396]
[10.93964100 292.72705078]
[23.25347519 284.13626099]
[36.41070557 276.90304565]
[50.26225281 271.10934448]
[64.65116119 266.82086182]
[79.41440582 264.08612061]
[94.38469696 262.93612671]
[94.83130646 247.94277954]
[95.27790833 232.94943237]
[95.72451782 217.95606995]
[96.17111969 202.96272278]
[96.61772919 187.96937561]
[97.06433105 172.97602844]
[97.39930725 157.97976685]
[97.62263489 142.98143005]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[84.09734344 44.54194260]
[81.87223053 29.70790100]
[79.64710999 14.87385654]
[77.42199707 0.03981327]
[62.39118576 -0.51781416]
[47.72268677 -3.82709765]
[33.91573715 -9.77390385]
[21.43998337 -18.15435600]
[10.71949196 -28.68182564]
[2.11834216 -40.99673462]
[-4.07173777 -54.67883301]
[-7.64126921 -69.26155090]
[-8.47010803 -84.24789429]
[-6.53148937 -99.12739563]
[-1.89289081 -113.39348602]
[5.28631735 -126.56077576]
[14.76034737 -138.18151855]
[26.20540619 -147.86087036]
[39.23076248 -155.27030945]
[53.39209366 -160.15876770]
[51.16697693 -174.99279785]
[48.94186020 -189.82684326]
[33.92661285 -190.98802185]
[19.55319786 -195.45941162]
[6.54152346 -203.01370239]
[-4.45745802 -213.26922607]
[-12.89431190 -225.70932007]
[-18.34857178 -239.70825195]
[-20.54968834 -254.56277466]
[-19.39044952 -269.52743530]
[-14.93220329 -283.85198975]
[-7.40161037 -296.81893921]
[2.82086897 -307.77957153]
[15.22020054 -316.18640137]
[29.17271996 -321.62048340]
[26.94760323 -336.45452881]
[24.72248650 -351.28857422]
[22.49736977 -366.12261963]
[20.27225304 -380.95663452]
[18.04713440 -395.79067993]
[6.36608171 -402.49649048]
[0.76176089 -414.52984619]
[3.07705736 -427.40313721]
[12.24617100 -436.45614624]
[10.24215794 -451.32165527]
[8.23814392 -466.18719482]
[-6.71399117 -468.26956177]
[-20.54938507 -474.30978394]
[-32.24135971 -483.85968018]
[-40.92229080 -496.21054077]
[-45.94799805 -510.44589233]
[-46.94554138 -525.50933838]
[-43.84089279 -540.28308105]
[-36.86444092 -553.67083740]
[-26.53388405 -564.67913818]
[-13.61581707 -572.49102783]
[0.93115234 -576.52691650]
[16.02754211 -576.48724365]
[30.55310249 -572.37500000]
[43.42993546 -564.49530029]
[53.70250320 -553.43286133]
[60.60850143 -540.00866699]
[63.63546753 -525.21875000]
[62.55878067 -510.16076660]
[57.45833206 -495.95205688]
[48.71261597 -483.64697266]
[36.97061539 -474.15866089]
[23.10367203 -468.19122314]
[25.10768509 -453.32568359]
[27.11170006 -438.46014404]
[40.90933228 -428.84432983]
[43.53495789 -411.89083862]
[32.88117981 -398.01580811]
[35.10629654 -383.18176270]
[37.33141327 -368.34771729]
[39.55653000 -353.51367188]
[41.78164673 -338.67962646]
[44.00676346 -323.84558105]
[58.93958664 -322.74435425]
[73.25978851 -318.34545898]
[86.24822235 -310.86645508]
[97.25189209 -300.67968750]
[105.71675110 -288.29360962]
[111.21559906 -274.32766724]
[113.46967316 -259.48107910]
[112.36273956 -244.49795532]
[107.94711304 -230.12998962]
[100.44116974 -217.09870911]
[90.21856689 -206.05926514]
[77.78963470 -197.56750488]
[63.77590179 -192.05197144]
[66.00102234 -177.21792603]
[68.22613525 -162.38388062]
[83.19849396 -161.86549377]
[97.82453156 -158.60379028]
[111.60581207 -152.70840454]
[124.07241058 -144.37876892]
[134.79895020 -133.89735413]
[143.41906738 -121.62008667]
[149.63801575 -107.96422577]
[153.24264526 -93.39424896]
[154.10876465 -78.40602112]
[152.20544434 -63.50990677]
[147.59602356 -49.21340561]
[140.43609619 -36.00386047]
[130.96823120 -24.33184814]
[119.51372528 -14.59580517]
[106.46173096 -7.12842751]
[92.25603485 -2.18530393]
[94.48115540 12.64873981]
[96.70626831 27.48278427]
[98.93138885 42.31682587]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[117.97910309 112.28432465]
[129.97943115 103.28475952]
[144.77249146 100.80180359]
[159.05349731 105.39015198]
[169.63201904 116.02475739]
[174.14480591 130.32981873]
[171.58366394 145.10955811]
[162.52076721 157.06213379]
[148.98080444 163.51731873]
[133.98863220 163.03298950]
[120.89352417 155.71737671]
[112.62097168 143.20475769]
[112.39764404 158.20309448]
[115.39894104 166.83038330]
[112.05768585 173.42263794]
[111.61107635 188.41598511]
[111.16447449 203.40933228]
[110.71786499 218.40267944]
[110.27125549 233.39602661]
[109.82465363 248.38938904]
[109.37804413 263.38272095]
[124.25334930 265.42172241]
[138.82763672 269.03033447]
[152.93579102 274.16769409]
[166.41792297 280.77554321]
[179.12130737 288.77908325]
[190.90197754 298.08755493]
[201.62644958 308.59555054]
[211.17323303 320.18395996]
[219.43412781 332.72149658]
[226.31553650 346.06607056]
[231.73950195 360.06652832]
[235.64454651 374.56420898]
[237.98645020 389.39483643]
[238.73864746 404.39038086]
[237.89263916 419.38092041]
[235.45799255 434.19662476]
[231.46231079 448.66958618]
[225.95085144 462.63583374]
[218.98606873 475.93710327]
[210.64689636 488.42269897]
[201.02780151 499.95114136]
[190.23777771 510.39181519]
[178.39909363 519.62640381]
[165.64588928 527.55029297]
[152.12268066 534.07366943]
[137.98266602 539.12261963]
[123.38607788 542.64001465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 183]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 175]
[38 174]
[39 162]
[40 161]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[64 137]
[65 136]
[66 135]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
